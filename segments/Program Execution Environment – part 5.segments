[{'id': 0, 'seek': 0, 'start': 0.0, 'end': 14.32, 'text': ' What did you try?', 'tokens': [50364, 708, 630, 291, 853, 30, 51080], 'temperature': 0.0, 'avg_logprob': -0.33402816772460936, 'compression_ratio': 1.4285714285714286, 'no_speech_prob': 0.022800078615546227}, {'id': 1, 'seek': 0, 'start': 14.32, 'end': 16.28, 'text': ' Printing the L feather.', 'tokens': [51080, 34439, 278, 264, 441, 25852, 13, 51178], 'temperature': 0.0, 'avg_logprob': -0.33402816772460936, 'compression_ratio': 1.4285714285714286, 'no_speech_prob': 0.022800078615546227}, {'id': 2, 'seek': 0, 'start': 16.28, 'end': 17.28, 'text': ' What did you try?', 'tokens': [51178, 708, 630, 291, 853, 30, 51228], 'temperature': 0.0, 'avg_logprob': -0.33402816772460936, 'compression_ratio': 1.4285714285714286, 'no_speech_prob': 0.022800078615546227}, {'id': 3, 'seek': 0, 'start': 17.28, 'end': 24.32, 'text': ' Did anyone try to do the assignment where you had to correlate the symbols with the', 'tokens': [51228, 2589, 2878, 853, 281, 360, 264, 15187, 689, 291, 632, 281, 48742, 264, 16944, 365, 264, 51580], 'temperature': 0.0, 'avg_logprob': -0.33402816772460936, 'compression_ratio': 1.4285714285714286, 'no_speech_prob': 0.022800078615546227}, {'id': 4, 'seek': 0, 'start': 24.32, 'end': 29.36, 'text': ' data in this data section?', 'tokens': [51580, 1412, 294, 341, 1412, 3541, 30, 51832], 'temperature': 0.0, 'avg_logprob': -0.33402816772460936, 'compression_ratio': 1.4285714285714286, 'no_speech_prob': 0.022800078615546227}, {'id': 5, 'seek': 2936, 'start': 29.36, 'end': 33.4, 'text': ' Were you able to do that?', 'tokens': [50364, 12448, 291, 1075, 281, 360, 300, 30, 50566], 'temperature': 0.0, 'avg_logprob': -0.16626510825208438, 'compression_ratio': 1.6781115879828326, 'no_speech_prob': 0.21056294441223145}, {'id': 6, 'seek': 2936, 'start': 33.4, 'end': 38.16, 'text': ' But that is something which I would suggest you do that because what will happen is that', 'tokens': [50566, 583, 300, 307, 746, 597, 286, 576, 3402, 291, 360, 300, 570, 437, 486, 1051, 307, 300, 50804], 'temperature': 0.0, 'avg_logprob': -0.16626510825208438, 'compression_ratio': 1.6781115879828326, 'no_speech_prob': 0.21056294441223145}, {'id': 7, 'seek': 2936, 'start': 38.16, 'end': 43.92, 'text': ' is actually the crux of how to interpret elf structure and if you are able to do that you', 'tokens': [50804, 307, 767, 264, 5140, 87, 295, 577, 281, 7302, 35565, 3877, 293, 498, 291, 366, 1075, 281, 360, 300, 291, 51092], 'temperature': 0.0, 'avg_logprob': -0.16626510825208438, 'compression_ratio': 1.6781115879828326, 'no_speech_prob': 0.21056294441223145}, {'id': 8, 'seek': 2936, 'start': 43.92, 'end': 51.239999999999995, 'text': ' will have thorough understanding of how the information in elf is organized properly.', 'tokens': [51092, 486, 362, 12934, 3701, 295, 577, 264, 1589, 294, 35565, 307, 9983, 6108, 13, 51458], 'temperature': 0.0, 'avg_logprob': -0.16626510825208438, 'compression_ratio': 1.6781115879828326, 'no_speech_prob': 0.21056294441223145}, {'id': 9, 'seek': 2936, 'start': 51.239999999999995, 'end': 57.44, 'text': ' So just to recap yesterday right what all we kind of did we kind of covered lot of things', 'tokens': [51458, 407, 445, 281, 20928, 5186, 558, 437, 439, 321, 733, 295, 630, 321, 733, 295, 5343, 688, 295, 721, 51768], 'temperature': 0.0, 'avg_logprob': -0.16626510825208438, 'compression_ratio': 1.6781115879828326, 'no_speech_prob': 0.21056294441223145}, {'id': 10, 'seek': 2936, 'start': 57.44, 'end': 58.480000000000004, 'text': ' yesterday.', 'tokens': [51768, 5186, 13, 51820], 'temperature': 0.0, 'avg_logprob': -0.16626510825208438, 'compression_ratio': 1.6781115879828326, 'no_speech_prob': 0.21056294441223145}, {'id': 11, 'seek': 5848, 'start': 58.48, 'end': 63.36, 'text': ' So we started off with how function calls are implemented right.', 'tokens': [50364, 407, 321, 1409, 766, 365, 577, 2445, 5498, 366, 12270, 558, 13, 50608], 'temperature': 0.0, 'avg_logprob': -0.3534762912326389, 'compression_ratio': 1.3909774436090225, 'no_speech_prob': 0.32452401518821716}, {'id': 12, 'seek': 5848, 'start': 63.36, 'end': 70.2, 'text': ' Do you still remember all the things stack, caller save, callee saved registers?', 'tokens': [50608, 1144, 291, 920, 1604, 439, 264, 721, 8630, 11, 48324, 3155, 11, 818, 1653, 6624, 38351, 30, 50950], 'temperature': 0.0, 'avg_logprob': -0.3534762912326389, 'compression_ratio': 1.3909774436090225, 'no_speech_prob': 0.32452401518821716}, {'id': 13, 'seek': 5848, 'start': 70.2, 'end': 73.75999999999999, 'text': ' What else we studied in function calls?', 'tokens': [50950, 708, 1646, 321, 9454, 294, 2445, 5498, 30, 51128], 'temperature': 0.0, 'avg_logprob': -0.3534762912326389, 'compression_ratio': 1.3909774436090225, 'no_speech_prob': 0.32452401518821716}, {'id': 14, 'seek': 10376, 'start': 103.76, 'end': 117.80000000000001, 'text': ' Yeah.', 'tokens': [50364, 865, 13, 51066], 'temperature': 0.0, 'avg_logprob': -0.1687529314131964, 'compression_ratio': 1.3875968992248062, 'no_speech_prob': 0.012352594174444675}, {'id': 15, 'seek': 10376, 'start': 117.80000000000001, 'end': 123.32000000000001, 'text': ' So essentially we kind of talked in detail about how function calls are implemented,', 'tokens': [51066, 407, 4476, 321, 733, 295, 2825, 294, 2607, 466, 577, 2445, 5498, 366, 12270, 11, 51342], 'temperature': 0.0, 'avg_logprob': -0.1687529314131964, 'compression_ratio': 1.3875968992248062, 'no_speech_prob': 0.012352594174444675}, {'id': 16, 'seek': 10376, 'start': 123.32000000000001, 'end': 129.44, 'text': ' how object files are organized, what is the structure of object file and then we covered', 'tokens': [51342, 577, 2657, 7098, 366, 9983, 11, 437, 307, 264, 3877, 295, 2657, 3991, 293, 550, 321, 5343, 51648], 'temperature': 0.0, 'avg_logprob': -0.1687529314131964, 'compression_ratio': 1.3875968992248062, 'no_speech_prob': 0.012352594174444675}, {'id': 17, 'seek': 12944, 'start': 130.0, 'end': 136.12, 'text': ' some aspects of linking in terms of how linker merges the two things, why does it need to', 'tokens': [50392, 512, 7270, 295, 25775, 294, 2115, 295, 577, 2113, 260, 3551, 2880, 264, 732, 721, 11, 983, 775, 309, 643, 281, 50698], 'temperature': 0.0, 'avg_logprob': -0.1282383600870768, 'compression_ratio': 1.649789029535865, 'no_speech_prob': 0.2998589277267456}, {'id': 18, 'seek': 12944, 'start': 136.12, 'end': 141.04, 'text': ' relocate some of the stuff because assembler may not have all the information during assembly', 'tokens': [50698, 26981, 473, 512, 295, 264, 1507, 570, 8438, 1918, 815, 406, 362, 439, 264, 1589, 1830, 12103, 50944], 'temperature': 0.0, 'avg_logprob': -0.1282383600870768, 'compression_ratio': 1.649789029535865, 'no_speech_prob': 0.2998589277267456}, {'id': 19, 'seek': 12944, 'start': 141.04, 'end': 148.0, 'text': ' time of addresses of various symbols and then things like addend and so on right.', 'tokens': [50944, 565, 295, 16862, 295, 3683, 16944, 293, 550, 721, 411, 909, 521, 293, 370, 322, 558, 13, 51292], 'temperature': 0.0, 'avg_logprob': -0.1282383600870768, 'compression_ratio': 1.649789029535865, 'no_speech_prob': 0.2998589277267456}, {'id': 20, 'seek': 12944, 'start': 148.0, 'end': 151.88, 'text': ' Now before we kind of start I will just give an example because I think that might be a', 'tokens': [51292, 823, 949, 321, 733, 295, 722, 286, 486, 445, 976, 364, 1365, 570, 286, 519, 300, 1062, 312, 257, 51486], 'temperature': 0.0, 'avg_logprob': -0.1282383600870768, 'compression_ratio': 1.649789029535865, 'no_speech_prob': 0.2998589277267456}, {'id': 21, 'seek': 12944, 'start': 151.88, 'end': 154.8, 'text': ' simpler one to understand relocation.', 'tokens': [51486, 18587, 472, 281, 1223, 26981, 399, 13, 51632], 'temperature': 0.0, 'avg_logprob': -0.1282383600870768, 'compression_ratio': 1.649789029535865, 'no_speech_prob': 0.2998589277267456}, {'id': 22, 'seek': 15480, 'start': 154.8, 'end': 160.8, 'text': ' So let us say so we yesterday were trying to see there is something like minus 4 which', 'tokens': [50364, 407, 718, 505, 584, 370, 321, 5186, 645, 1382, 281, 536, 456, 307, 746, 411, 3175, 1017, 597, 50664], 'temperature': 0.0, 'avg_logprob': -0.15902237393962804, 'compression_ratio': 1.4797687861271676, 'no_speech_prob': 0.014921875670552254}, {'id': 23, 'seek': 15480, 'start': 160.8, 'end': 165.84, 'text': ' kind of complicated the entire story of why things are that way in terms of so if you', 'tokens': [50664, 733, 295, 6179, 264, 2302, 1657, 295, 983, 721, 366, 300, 636, 294, 2115, 295, 370, 498, 291, 50916], 'temperature': 0.0, 'avg_logprob': -0.15902237393962804, 'compression_ratio': 1.4797687861271676, 'no_speech_prob': 0.014921875670552254}, {'id': 24, 'seek': 15480, 'start': 165.84, 'end': 177.56, 'text': ' recollect so we had this relocation which had this R386 PC32 and if we did OBJ dump', 'tokens': [50916, 39495, 557, 370, 321, 632, 341, 26981, 399, 597, 632, 341, 497, 12625, 21, 6465, 11440, 293, 498, 321, 630, 35538, 41, 11430, 51502], 'temperature': 0.0, 'avg_logprob': -0.15902237393962804, 'compression_ratio': 1.4797687861271676, 'no_speech_prob': 0.014921875670552254}, {'id': 25, 'seek': 17756, 'start': 177.72, 'end': 187.48, 'text': ' this the value here was some minus 4 which kind of complicated I was trying to explain', 'tokens': [50372, 341, 264, 2158, 510, 390, 512, 3175, 1017, 597, 733, 295, 6179, 286, 390, 1382, 281, 2903, 50860], 'temperature': 0.0, 'avg_logprob': -0.15143927041586344, 'compression_ratio': 1.5947368421052632, 'no_speech_prob': 0.04080084338784218}, {'id': 26, 'seek': 17756, 'start': 187.48, 'end': 192.2, 'text': ' it but I do not know how easier it was to convey but I will try to give a simpler example', 'tokens': [50860, 309, 457, 286, 360, 406, 458, 577, 3571, 309, 390, 281, 16965, 457, 286, 486, 853, 281, 976, 257, 18587, 1365, 51096], 'temperature': 0.0, 'avg_logprob': -0.15143927041586344, 'compression_ratio': 1.5947368421052632, 'no_speech_prob': 0.04080084338784218}, {'id': 27, 'seek': 17756, 'start': 192.2, 'end': 194.32, 'text': ' which will make things bit more clear.', 'tokens': [51096, 597, 486, 652, 721, 857, 544, 1850, 13, 51202], 'temperature': 0.0, 'avg_logprob': -0.15143927041586344, 'compression_ratio': 1.5947368421052632, 'no_speech_prob': 0.04080084338784218}, {'id': 28, 'seek': 17756, 'start': 194.32, 'end': 205.92000000000002, 'text': ' So let us say I have an array and let us say I have a pointer to it which holds address', 'tokens': [51202, 407, 718, 505, 584, 286, 362, 364, 10225, 293, 718, 505, 584, 286, 362, 257, 23918, 281, 309, 597, 9190, 2985, 51782], 'temperature': 0.0, 'avg_logprob': -0.15143927041586344, 'compression_ratio': 1.5947368421052632, 'no_speech_prob': 0.04080084338784218}, {'id': 29, 'seek': 20592, 'start': 205.92, 'end': 213.16, 'text': ' of 0th element of the array which is essentially same as saying it points to ARR right.', 'tokens': [50364, 295, 1958, 392, 4478, 295, 264, 10225, 597, 307, 4476, 912, 382, 1566, 309, 2793, 281, 8943, 49, 558, 13, 50726], 'temperature': 0.0, 'avg_logprob': -0.17791485231976176, 'compression_ratio': 1.2834645669291338, 'no_speech_prob': 0.053333818912506104}, {'id': 30, 'seek': 20592, 'start': 213.16, 'end': 232.27999999999997, 'text': ' Now let us say I do this and so before this program is going to run somehow', 'tokens': [50726, 823, 718, 505, 584, 286, 360, 341, 293, 370, 949, 341, 1461, 307, 516, 281, 1190, 6063, 51682], 'temperature': 0.0, 'avg_logprob': -0.17791485231976176, 'compression_ratio': 1.2834645669291338, 'no_speech_prob': 0.053333818912506104}, {'id': 31, 'seek': 23228, 'start': 232.28, 'end': 235.52, 'text': ' PTR needs to hold address of ARR right.', 'tokens': [50364, 430, 25936, 2203, 281, 1797, 2985, 295, 8943, 49, 558, 13, 50526], 'temperature': 0.0, 'avg_logprob': -0.24353783471243723, 'compression_ratio': 1.0476190476190477, 'no_speech_prob': 0.5254868268966675}, {'id': 32, 'seek': 23228, 'start': 235.52, 'end': 254.28, 'text': ' We saw this is achieved by doing the relocation.', 'tokens': [50526, 492, 1866, 341, 307, 11042, 538, 884, 264, 26981, 399, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.24353783471243723, 'compression_ratio': 1.0476190476190477, 'no_speech_prob': 0.5254868268966675}, {'id': 33, 'seek': 25428, 'start': 254.28, 'end': 270.96, 'text': ' So we see that OBJ dump dash D dash dash section so reloc.hold holds something this is the', 'tokens': [50364, 407, 321, 536, 300, 35538, 41, 11430, 8240, 413, 8240, 8240, 3541, 370, 26981, 13, 4104, 9190, 746, 341, 307, 264, 51198], 'temperature': 0.0, 'avg_logprob': -0.20417131916169198, 'compression_ratio': 1.5586206896551724, 'no_speech_prob': 0.05249859392642975}, {'id': 34, 'seek': 25428, 'start': 270.96, 'end': 279.64, 'text': ' content of the array right and this is the PTR sorry this is the PTR right and you see', 'tokens': [51198, 2701, 295, 264, 10225, 558, 293, 341, 307, 264, 430, 25936, 2597, 341, 307, 264, 430, 25936, 558, 293, 291, 536, 51632], 'temperature': 0.0, 'avg_logprob': -0.20417131916169198, 'compression_ratio': 1.5586206896551724, 'no_speech_prob': 0.05249859392642975}, {'id': 35, 'seek': 25428, 'start': 279.64, 'end': 282.92, 'text': ' it had 0s so it does not actually hold anything.', 'tokens': [51632, 309, 632, 1958, 82, 370, 309, 775, 406, 767, 1797, 1340, 13, 51796], 'temperature': 0.0, 'avg_logprob': -0.20417131916169198, 'compression_ratio': 1.5586206896551724, 'no_speech_prob': 0.05249859392642975}, {'id': 36, 'seek': 28292, 'start': 282.92, 'end': 289.68, 'text': ' Now if we actually add this flag it says that this needs to be changed so that these 32', 'tokens': [50364, 823, 498, 321, 767, 909, 341, 7166, 309, 1619, 300, 341, 2203, 281, 312, 3105, 370, 300, 613, 8858, 50702], 'temperature': 0.0, 'avg_logprob': -0.11197741488192944, 'compression_ratio': 1.7799043062200957, 'no_speech_prob': 0.04528634995222092}, {'id': 37, 'seek': 28292, 'start': 289.68, 'end': 293.44, 'text': ' bits need to be changed with address of ARR.', 'tokens': [50702, 9239, 643, 281, 312, 3105, 365, 2985, 295, 8943, 49, 13, 50890], 'temperature': 0.0, 'avg_logprob': -0.11197741488192944, 'compression_ratio': 1.7799043062200957, 'no_speech_prob': 0.04528634995222092}, {'id': 38, 'seek': 28292, 'start': 293.44, 'end': 302.12, 'text': ' So what this relocation is telling linker is change 32 bits here with the value of ARR', 'tokens': [50890, 407, 437, 341, 26981, 399, 307, 3585, 2113, 260, 307, 1319, 8858, 9239, 510, 365, 264, 2158, 295, 8943, 49, 51324], 'temperature': 0.0, 'avg_logprob': -0.11197741488192944, 'compression_ratio': 1.7799043062200957, 'no_speech_prob': 0.04528634995222092}, {'id': 39, 'seek': 28292, 'start': 302.12, 'end': 307.0, 'text': ' does that make sense and what linker will do is once it is done assigning address to', 'tokens': [51324, 775, 300, 652, 2020, 293, 437, 2113, 260, 486, 360, 307, 1564, 309, 307, 1096, 49602, 2985, 281, 51568], 'temperature': 0.0, 'avg_logprob': -0.11197741488192944, 'compression_ratio': 1.7799043062200957, 'no_speech_prob': 0.04528634995222092}, {'id': 40, 'seek': 28292, 'start': 307.0, 'end': 312.28000000000003, 'text': ' ARR whatever is that address linker will simply substitute it here.', 'tokens': [51568, 8943, 49, 2035, 307, 300, 2985, 2113, 260, 486, 2935, 15802, 309, 510, 13, 51832], 'temperature': 0.0, 'avg_logprob': -0.11197741488192944, 'compression_ratio': 1.7799043062200957, 'no_speech_prob': 0.04528634995222092}, {'id': 41, 'seek': 31228, 'start': 312.28, 'end': 321.88, 'text': ' Now let us say instead of ARR I do ARR of 1.', 'tokens': [50364, 823, 718, 505, 584, 2602, 295, 8943, 49, 286, 360, 8943, 49, 295, 502, 13, 50844], 'temperature': 0.0, 'avg_logprob': -0.11097862606956846, 'compression_ratio': 1.6, 'no_speech_prob': 0.0074368431232869625}, {'id': 42, 'seek': 31228, 'start': 321.88, 'end': 327.76, 'text': ' So what I am saying is PTR actually points to ARR of 1 that means it is actually pointing', 'tokens': [50844, 407, 437, 286, 669, 1566, 307, 430, 25936, 767, 2793, 281, 8943, 49, 295, 502, 300, 1355, 309, 307, 767, 12166, 51138], 'temperature': 0.0, 'avg_logprob': -0.11097862606956846, 'compression_ratio': 1.6, 'no_speech_prob': 0.0074368431232869625}, {'id': 43, 'seek': 31228, 'start': 327.76, 'end': 332.32, 'text': ' to ARR plus 4 in terms of byte address right.', 'tokens': [51138, 281, 8943, 49, 1804, 1017, 294, 2115, 295, 40846, 2985, 558, 13, 51366], 'temperature': 0.0, 'avg_logprob': -0.11097862606956846, 'compression_ratio': 1.6, 'no_speech_prob': 0.0074368431232869625}, {'id': 44, 'seek': 31228, 'start': 332.32, 'end': 336.71999999999997, 'text': ' So how do I represent this what should be the symbol here because there is no symbol', 'tokens': [51366, 407, 577, 360, 286, 2906, 341, 437, 820, 312, 264, 5986, 510, 570, 456, 307, 572, 5986, 51586], 'temperature': 0.0, 'avg_logprob': -0.11097862606956846, 'compression_ratio': 1.6, 'no_speech_prob': 0.0074368431232869625}, {'id': 45, 'seek': 31228, 'start': 336.71999999999997, 'end': 341.64, 'text': ' called ARR of 4 right.', 'tokens': [51586, 1219, 8943, 49, 295, 1017, 558, 13, 51832], 'temperature': 0.0, 'avg_logprob': -0.11097862606956846, 'compression_ratio': 1.6, 'no_speech_prob': 0.0074368431232869625}, {'id': 46, 'seek': 34164, 'start': 341.96, 'end': 350.84, 'text': ' So that is where the addend come into picture so now if I compile this program and if I', 'tokens': [50380, 407, 300, 307, 689, 264, 909, 521, 808, 666, 3036, 370, 586, 498, 286, 31413, 341, 1461, 293, 498, 286, 50824], 'temperature': 0.0, 'avg_logprob': -0.20479441624061734, 'compression_ratio': 1.3834586466165413, 'no_speech_prob': 0.020553747192025185}, {'id': 47, 'seek': 34164, 'start': 350.84, 'end': 368.12, 'text': ' look at the OBJ dump sorry it is actually exactly same but this value is actually 4', 'tokens': [50824, 574, 412, 264, 35538, 41, 11430, 2597, 309, 307, 767, 2293, 912, 457, 341, 2158, 307, 767, 1017, 51688], 'temperature': 0.0, 'avg_logprob': -0.20479441624061734, 'compression_ratio': 1.3834586466165413, 'no_speech_prob': 0.020553747192025185}, {'id': 48, 'seek': 34164, 'start': 368.12, 'end': 369.68, 'text': ' it is not 0.', 'tokens': [51688, 309, 307, 406, 1958, 13, 51766], 'temperature': 0.0, 'avg_logprob': -0.20479441624061734, 'compression_ratio': 1.3834586466165413, 'no_speech_prob': 0.020553747192025185}, {'id': 49, 'seek': 36968, 'start': 369.72, 'end': 376.84000000000003, 'text': ' So what linker is going to do is first use this so in nutshell linker is using the original', 'tokens': [50366, 407, 437, 2113, 260, 307, 516, 281, 360, 307, 700, 764, 341, 370, 294, 37711, 2113, 260, 307, 1228, 264, 3380, 50722], 'temperature': 0.0, 'avg_logprob': -0.12426674516895149, 'compression_ratio': 1.7944444444444445, 'no_speech_prob': 0.019987648352980614}, {'id': 50, 'seek': 36968, 'start': 376.84000000000003, 'end': 383.68, 'text': ' content which was there and adding that to the symbol does that make sense.', 'tokens': [50722, 2701, 597, 390, 456, 293, 5127, 300, 281, 264, 5986, 775, 300, 652, 2020, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.12426674516895149, 'compression_ratio': 1.7944444444444445, 'no_speech_prob': 0.019987648352980614}, {'id': 51, 'seek': 36968, 'start': 383.68, 'end': 390.52, 'text': ' So linker will not simply replace these bits linker will use these bits plus the symbol', 'tokens': [51064, 407, 2113, 260, 486, 406, 2935, 7406, 613, 9239, 2113, 260, 486, 764, 613, 9239, 1804, 264, 5986, 51406], 'temperature': 0.0, 'avg_logprob': -0.12426674516895149, 'compression_ratio': 1.7944444444444445, 'no_speech_prob': 0.019987648352980614}, {'id': 52, 'seek': 36968, 'start': 390.52, 'end': 394.2, 'text': ' and whatever is the computed value that is what it is going to put.', 'tokens': [51406, 293, 2035, 307, 264, 40610, 2158, 300, 307, 437, 309, 307, 516, 281, 829, 13, 51590], 'temperature': 0.0, 'avg_logprob': -0.12426674516895149, 'compression_ratio': 1.7944444444444445, 'no_speech_prob': 0.019987648352980614}, {'id': 53, 'seek': 39420, 'start': 394.2, 'end': 401.24, 'text': ' So in context of code what that minus 4 was representing is add this value first before', 'tokens': [50364, 407, 294, 4319, 295, 3089, 437, 300, 3175, 1017, 390, 13460, 307, 909, 341, 2158, 700, 949, 50716], 'temperature': 0.0, 'avg_logprob': -0.1705007842092803, 'compression_ratio': 1.5698324022346368, 'no_speech_prob': 0.00969113502651453}, {'id': 54, 'seek': 39420, 'start': 401.24, 'end': 404.64, 'text': ' you patch the address of the symbol.', 'tokens': [50716, 291, 9972, 264, 2985, 295, 264, 5986, 13, 50886], 'temperature': 0.0, 'avg_logprob': -0.1705007842092803, 'compression_ratio': 1.5698324022346368, 'no_speech_prob': 0.00969113502651453}, {'id': 55, 'seek': 39420, 'start': 404.64, 'end': 411.48, 'text': ' So relocation is essentially function of couple of things one is address which needs to be', 'tokens': [50886, 407, 26981, 399, 307, 4476, 2445, 295, 1916, 295, 721, 472, 307, 2985, 597, 2203, 281, 312, 51228], 'temperature': 0.0, 'avg_logprob': -0.1705007842092803, 'compression_ratio': 1.5698324022346368, 'no_speech_prob': 0.00969113502651453}, {'id': 56, 'seek': 39420, 'start': 411.48, 'end': 417.8, 'text': ' modified in this case it is address 14 in the data section right.', 'tokens': [51228, 15873, 294, 341, 1389, 309, 307, 2985, 3499, 294, 264, 1412, 3541, 558, 13, 51544], 'temperature': 0.0, 'avg_logprob': -0.1705007842092803, 'compression_ratio': 1.5698324022346368, 'no_speech_prob': 0.00969113502651453}, {'id': 57, 'seek': 41780, 'start': 417.92, 'end': 425.56, 'text': ' The exact content which needs to be modified that is given by this offset the relocation', 'tokens': [50370, 440, 1900, 2701, 597, 2203, 281, 312, 15873, 300, 307, 2212, 538, 341, 18687, 264, 26981, 399, 50752], 'temperature': 0.0, 'avg_logprob': -0.163541286806517, 'compression_ratio': 1.7213930348258706, 'no_speech_prob': 0.038817763328552246}, {'id': 58, 'seek': 41780, 'start': 425.56, 'end': 434.68, 'text': ' symbol is saying what it needs to be patched with the content of this is saying what should', 'tokens': [50752, 5986, 307, 1566, 437, 309, 2203, 281, 312, 9972, 292, 365, 264, 2701, 295, 341, 307, 1566, 437, 820, 51208], 'temperature': 0.0, 'avg_logprob': -0.163541286806517, 'compression_ratio': 1.7213930348258706, 'no_speech_prob': 0.038817763328552246}, {'id': 59, 'seek': 41780, 'start': 434.68, 'end': 442.08000000000004, 'text': ' be added to this address before actually patching the value and this R38632 etcetera is the', 'tokens': [51208, 312, 3869, 281, 341, 2985, 949, 767, 9972, 278, 264, 2158, 293, 341, 497, 12625, 21, 11440, 22066, 307, 264, 51578], 'temperature': 0.0, 'avg_logprob': -0.163541286806517, 'compression_ratio': 1.7213930348258706, 'no_speech_prob': 0.038817763328552246}, {'id': 60, 'seek': 41780, 'start': 442.08000000000004, 'end': 446.24, 'text': ' relocation operation and it could be slightly more complicated than this.', 'tokens': [51578, 26981, 399, 6916, 293, 309, 727, 312, 4748, 544, 6179, 813, 341, 13, 51786], 'temperature': 0.0, 'avg_logprob': -0.163541286806517, 'compression_ratio': 1.7213930348258706, 'no_speech_prob': 0.038817763328552246}, {'id': 61, 'seek': 44624, 'start': 446.24, 'end': 451.40000000000003, 'text': ' This one is fairly simple which is saying simply take 32 bits of the content and put', 'tokens': [50364, 639, 472, 307, 6457, 2199, 597, 307, 1566, 2935, 747, 8858, 9239, 295, 264, 2701, 293, 829, 50622], 'temperature': 0.0, 'avg_logprob': -0.14807119273176098, 'compression_ratio': 1.6245059288537549, 'no_speech_prob': 0.004590241238474846}, {'id': 62, 'seek': 44624, 'start': 451.40000000000003, 'end': 457.44, 'text': ' it here but there could be much more complicated relocations.', 'tokens': [50622, 309, 510, 457, 456, 727, 312, 709, 544, 6179, 26981, 763, 13, 50924], 'temperature': 0.0, 'avg_logprob': -0.14807119273176098, 'compression_ratio': 1.6245059288537549, 'no_speech_prob': 0.004590241238474846}, {'id': 63, 'seek': 44624, 'start': 457.44, 'end': 459.40000000000003, 'text': ' Does that make sense?', 'tokens': [50924, 4402, 300, 652, 2020, 30, 51022], 'temperature': 0.0, 'avg_logprob': -0.14807119273176098, 'compression_ratio': 1.6245059288537549, 'no_speech_prob': 0.004590241238474846}, {'id': 64, 'seek': 44624, 'start': 459.40000000000003, 'end': 464.04, 'text': ' So that is where we kind of stopped yesterday and in between we also saw things around strong', 'tokens': [51022, 407, 300, 307, 689, 321, 733, 295, 5936, 5186, 293, 294, 1296, 321, 611, 1866, 721, 926, 2068, 51254], 'temperature': 0.0, 'avg_logprob': -0.14807119273176098, 'compression_ratio': 1.6245059288537549, 'no_speech_prob': 0.004590241238474846}, {'id': 65, 'seek': 44624, 'start': 464.04, 'end': 469.56, 'text': ' symbols weak symbols how they are treated by linker and all the quirks which come out', 'tokens': [51254, 16944, 5336, 16944, 577, 436, 366, 8668, 538, 2113, 260, 293, 439, 264, 35645, 1694, 597, 808, 484, 51530], 'temperature': 0.0, 'avg_logprob': -0.14807119273176098, 'compression_ratio': 1.6245059288537549, 'no_speech_prob': 0.004590241238474846}, {'id': 66, 'seek': 44624, 'start': 469.56, 'end': 471.68, 'text': ' of that behavior.', 'tokens': [51530, 295, 300, 5223, 13, 51636], 'temperature': 0.0, 'avg_logprob': -0.14807119273176098, 'compression_ratio': 1.6245059288537549, 'no_speech_prob': 0.004590241238474846}, {'id': 67, 'seek': 44624, 'start': 471.68, 'end': 475.84000000000003, 'text': ' So today we will look into static libraries.', 'tokens': [51636, 407, 965, 321, 486, 574, 666, 13437, 15148, 13, 51844], 'temperature': 0.0, 'avg_logprob': -0.14807119273176098, 'compression_ratio': 1.6245059288537549, 'no_speech_prob': 0.004590241238474846}, {'id': 68, 'seek': 47584, 'start': 475.84, 'end': 482.08, 'text': ' The static libraries the primary reason we need to support that is remember why we were', 'tokens': [50364, 440, 13437, 15148, 264, 6194, 1778, 321, 643, 281, 1406, 300, 307, 1604, 983, 321, 645, 50676], 'temperature': 0.0, 'avg_logprob': -0.21216696661871834, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.001587787875905633}, {'id': 69, 'seek': 47584, 'start': 482.08, 'end': 487.26, 'text': ' writing source code in multiple files and why we had linker can anyone recall that point', 'tokens': [50676, 3579, 4009, 3089, 294, 3866, 7098, 293, 983, 321, 632, 2113, 260, 393, 2878, 9901, 300, 935, 50935], 'temperature': 0.0, 'avg_logprob': -0.21216696661871834, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.001587787875905633}, {'id': 70, 'seek': 47584, 'start': 487.26, 'end': 495.88, 'text': ' why we had that?', 'tokens': [50935, 983, 321, 632, 300, 30, 51366], 'temperature': 0.0, 'avg_logprob': -0.21216696661871834, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.001587787875905633}, {'id': 71, 'seek': 47584, 'start': 495.88, 'end': 500.91999999999996, 'text': ' So we had couple of reasons for separate compilation and one of the other reasons was being able', 'tokens': [51366, 407, 321, 632, 1916, 295, 4112, 337, 4994, 40261, 293, 472, 295, 264, 661, 4112, 390, 885, 1075, 51618], 'temperature': 0.0, 'avg_logprob': -0.21216696661871834, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.001587787875905633}, {'id': 72, 'seek': 47584, 'start': 500.91999999999996, 'end': 503.2, 'text': ' to distribute your code right.', 'tokens': [51618, 281, 20594, 428, 3089, 558, 13, 51732], 'temperature': 0.0, 'avg_logprob': -0.21216696661871834, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.001587787875905633}, {'id': 73, 'seek': 50320, 'start': 503.2, 'end': 508.28, 'text': ' Now let us say you have created some utilities so let us say you have build a collection', 'tokens': [50364, 823, 718, 505, 584, 291, 362, 2942, 512, 30482, 370, 718, 505, 584, 291, 362, 1322, 257, 5765, 50618], 'temperature': 0.0, 'avg_logprob': -0.1786670256196783, 'compression_ratio': 1.9502487562189055, 'no_speech_prob': 0.059970706701278687}, {'id': 74, 'seek': 50320, 'start': 508.28, 'end': 512.7, 'text': ' of programs which do various data structures implementation right.', 'tokens': [50618, 295, 4268, 597, 360, 3683, 1412, 9227, 11420, 558, 13, 50839], 'temperature': 0.0, 'avg_logprob': -0.1786670256196783, 'compression_ratio': 1.9502487562189055, 'no_speech_prob': 0.059970706701278687}, {'id': 75, 'seek': 50320, 'start': 512.7, 'end': 517.92, 'text': ' So you have linked list you have binary tree you have graphs you have whatever other data', 'tokens': [50839, 407, 291, 362, 9408, 1329, 291, 362, 17434, 4230, 291, 362, 24877, 291, 362, 2035, 661, 1412, 51100], 'temperature': 0.0, 'avg_logprob': -0.1786670256196783, 'compression_ratio': 1.9502487562189055, 'no_speech_prob': 0.059970706701278687}, {'id': 76, 'seek': 50320, 'start': 517.92, 'end': 520.0, 'text': ' structures like heap and other things.', 'tokens': [51100, 9227, 411, 33591, 293, 661, 721, 13, 51204], 'temperature': 0.0, 'avg_logprob': -0.1786670256196783, 'compression_ratio': 1.9502487562189055, 'no_speech_prob': 0.059970706701278687}, {'id': 77, 'seek': 50320, 'start': 520.0, 'end': 524.04, 'text': ' So let us say you have built a collection of such programs and you want to share it', 'tokens': [51204, 407, 718, 505, 584, 291, 362, 3094, 257, 5765, 295, 1270, 4268, 293, 291, 528, 281, 2073, 309, 51406], 'temperature': 0.0, 'avg_logprob': -0.1786670256196783, 'compression_ratio': 1.9502487562189055, 'no_speech_prob': 0.059970706701278687}, {'id': 78, 'seek': 50320, 'start': 524.04, 'end': 526.9, 'text': ' with your friend right.', 'tokens': [51406, 365, 428, 1277, 558, 13, 51549], 'temperature': 0.0, 'avg_logprob': -0.1786670256196783, 'compression_ratio': 1.9502487562189055, 'no_speech_prob': 0.059970706701278687}, {'id': 79, 'seek': 52690, 'start': 527.9, 'end': 534.02, 'text': ' say linked list dot c tree dot c graph dot c heap dot c and so on and you will put compile', 'tokens': [50414, 584, 9408, 1329, 5893, 269, 4230, 5893, 269, 4295, 5893, 269, 33591, 5893, 269, 293, 370, 322, 293, 291, 486, 829, 31413, 50720], 'temperature': 0.0, 'avg_logprob': -0.16143011579326555, 'compression_ratio': 1.8009708737864079, 'no_speech_prob': 0.12219700962305069}, {'id': 80, 'seek': 52690, 'start': 534.02, 'end': 537.34, 'text': ' all of them to their dot o files right.', 'tokens': [50720, 439, 295, 552, 281, 641, 5893, 277, 7098, 558, 13, 50886], 'temperature': 0.0, 'avg_logprob': -0.16143011579326555, 'compression_ratio': 1.8009708737864079, 'no_speech_prob': 0.12219700962305069}, {'id': 81, 'seek': 52690, 'start': 537.34, 'end': 543.34, 'text': ' Now to be able to use that I need to have access to dot o right.', 'tokens': [50886, 823, 281, 312, 1075, 281, 764, 300, 286, 643, 281, 362, 2105, 281, 5893, 277, 558, 13, 51186], 'temperature': 0.0, 'avg_logprob': -0.16143011579326555, 'compression_ratio': 1.8009708737864079, 'no_speech_prob': 0.12219700962305069}, {'id': 82, 'seek': 52690, 'start': 543.34, 'end': 549.12, 'text': ' So let us say I am the client user of your data structure library I need to get somehow', 'tokens': [51186, 407, 718, 505, 584, 286, 669, 264, 6423, 4195, 295, 428, 1412, 3877, 6405, 286, 643, 281, 483, 6063, 51475], 'temperature': 0.0, 'avg_logprob': -0.16143011579326555, 'compression_ratio': 1.8009708737864079, 'no_speech_prob': 0.12219700962305069}, {'id': 83, 'seek': 52690, 'start': 549.12, 'end': 552.22, 'text': ' the linked list dot o which you have created.', 'tokens': [51475, 264, 9408, 1329, 5893, 277, 597, 291, 362, 2942, 13, 51630], 'temperature': 0.0, 'avg_logprob': -0.16143011579326555, 'compression_ratio': 1.8009708737864079, 'no_speech_prob': 0.12219700962305069}, {'id': 84, 'seek': 52690, 'start': 552.22, 'end': 555.22, 'text': ' Similarly I need to get tree dot o right.', 'tokens': [51630, 13157, 286, 643, 281, 483, 4230, 5893, 277, 558, 13, 51780], 'temperature': 0.0, 'avg_logprob': -0.16143011579326555, 'compression_ratio': 1.8009708737864079, 'no_speech_prob': 0.12219700962305069}, {'id': 85, 'seek': 55522, 'start': 555.22, 'end': 561.46, 'text': ' Now one way you can distribute your code to the users is you can give all of the dot', 'tokens': [50364, 823, 472, 636, 291, 393, 20594, 428, 3089, 281, 264, 5022, 307, 291, 393, 976, 439, 295, 264, 5893, 50676], 'temperature': 0.0, 'avg_logprob': -0.19237534701824188, 'compression_ratio': 1.5673758865248226, 'no_speech_prob': 0.011677717790007591}, {'id': 86, 'seek': 55522, 'start': 561.46, 'end': 566.58, 'text': " o's to them saying that this is linked list dot o this is tree dot o this is x y dot o", 'tokens': [50676, 277, 311, 281, 552, 1566, 300, 341, 307, 9408, 1329, 5893, 277, 341, 307, 4230, 5893, 277, 341, 307, 2031, 288, 5893, 277, 50932], 'temperature': 0.0, 'avg_logprob': -0.19237534701824188, 'compression_ratio': 1.5673758865248226, 'no_speech_prob': 0.011677717790007591}, {'id': 87, 'seek': 55522, 'start': 566.58, 'end': 568.34, 'text': ' and so on right.', 'tokens': [50932, 293, 370, 322, 558, 13, 51020], 'temperature': 0.0, 'avg_logprob': -0.19237534701824188, 'compression_ratio': 1.5673758865248226, 'no_speech_prob': 0.011677717790007591}, {'id': 88, 'seek': 55522, 'start': 568.34, 'end': 580.94, 'text': ' What are the problems with that?', 'tokens': [51020, 708, 366, 264, 2740, 365, 300, 30, 51650], 'temperature': 0.0, 'avg_logprob': -0.19237534701824188, 'compression_ratio': 1.5673758865248226, 'no_speech_prob': 0.011677717790007591}, {'id': 89, 'seek': 58094, 'start': 580.94, 'end': 587.1400000000001, 'text': ' What is happening is you have created a discrete collection of various things and user might', 'tokens': [50364, 708, 307, 2737, 307, 291, 362, 2942, 257, 27706, 5765, 295, 3683, 721, 293, 4195, 1062, 50674], 'temperature': 0.0, 'avg_logprob': -0.15920107181255633, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.5214890837669373}, {'id': 90, 'seek': 58094, 'start': 587.1400000000001, 'end': 592.34, 'text': ' have many more such things because user will need imagine if for printf you got one dot', 'tokens': [50674, 362, 867, 544, 1270, 721, 570, 4195, 486, 643, 3811, 498, 337, 4482, 69, 291, 658, 472, 5893, 50934], 'temperature': 0.0, 'avg_logprob': -0.15920107181255633, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.5214890837669373}, {'id': 91, 'seek': 58094, 'start': 592.34, 'end': 597.1800000000001, 'text': ' o for scanf you got one dot o for something else you got one dot o and so on right.', 'tokens': [50934, 277, 337, 11049, 69, 291, 658, 472, 5893, 277, 337, 746, 1646, 291, 658, 472, 5893, 277, 293, 370, 322, 558, 13, 51176], 'temperature': 0.0, 'avg_logprob': -0.15920107181255633, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.5214890837669373}, {'id': 92, 'seek': 58094, 'start': 597.1800000000001, 'end': 603.2800000000001, 'text': ' So it is a mess to manage for you also to distribute something that way is a problem', 'tokens': [51176, 407, 309, 307, 257, 2082, 281, 3067, 337, 291, 611, 281, 20594, 746, 300, 636, 307, 257, 1154, 51481], 'temperature': 0.0, 'avg_logprob': -0.15920107181255633, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.5214890837669373}, {'id': 93, 'seek': 58094, 'start': 603.2800000000001, 'end': 606.9000000000001, 'text': ' it does not form a logical collection of something right.', 'tokens': [51481, 309, 775, 406, 1254, 257, 14978, 5765, 295, 746, 558, 13, 51662], 'temperature': 0.0, 'avg_logprob': -0.15920107181255633, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.5214890837669373}, {'id': 94, 'seek': 58094, 'start': 606.9000000000001, 'end': 608.0200000000001, 'text': ' Does that make sense?', 'tokens': [51662, 4402, 300, 652, 2020, 30, 51718], 'temperature': 0.0, 'avg_logprob': -0.15920107181255633, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.5214890837669373}, {'id': 95, 'seek': 60802, 'start': 608.06, 'end': 611.66, 'text': ' So that is where static libraries come into picture.', 'tokens': [50366, 407, 300, 307, 689, 13437, 15148, 808, 666, 3036, 13, 50546], 'temperature': 0.0, 'avg_logprob': -0.15216937130444672, 'compression_ratio': 1.6262626262626263, 'no_speech_prob': 0.306241899728775}, {'id': 96, 'seek': 60802, 'start': 611.66, 'end': 619.3, 'text': ' So essentially static libraries is a collection of various object files.', 'tokens': [50546, 407, 4476, 13437, 15148, 307, 257, 5765, 295, 3683, 2657, 7098, 13, 50928], 'temperature': 0.0, 'avg_logprob': -0.15216937130444672, 'compression_ratio': 1.6262626262626263, 'no_speech_prob': 0.306241899728775}, {'id': 97, 'seek': 60802, 'start': 619.3, 'end': 627.9399999999999, 'text': " So instead of giving multiple dot o's separately you can put all of them together and share", 'tokens': [50928, 407, 2602, 295, 2902, 3866, 5893, 277, 311, 14759, 291, 393, 829, 439, 295, 552, 1214, 293, 2073, 51360], 'temperature': 0.0, 'avg_logprob': -0.15216937130444672, 'compression_ratio': 1.6262626262626263, 'no_speech_prob': 0.306241899728775}, {'id': 98, 'seek': 60802, 'start': 627.9399999999999, 'end': 629.14, 'text': ' with the user.', 'tokens': [51360, 365, 264, 4195, 13, 51420], 'temperature': 0.0, 'avg_logprob': -0.15216937130444672, 'compression_ratio': 1.6262626262626263, 'no_speech_prob': 0.306241899728775}, {'id': 99, 'seek': 60802, 'start': 629.14, 'end': 636.0, 'text': ' So user just needs to have data structure lib dot a or something like that and everything', 'tokens': [51420, 407, 4195, 445, 2203, 281, 362, 1412, 3877, 22854, 5893, 257, 420, 746, 411, 300, 293, 1203, 51763], 'temperature': 0.0, 'avg_logprob': -0.15216937130444672, 'compression_ratio': 1.6262626262626263, 'no_speech_prob': 0.306241899728775}, {'id': 100, 'seek': 63600, 'start': 636.0, 'end': 638.16, 'text': ' will be put inside that.', 'tokens': [50364, 486, 312, 829, 1854, 300, 13, 50472], 'temperature': 0.0, 'avg_logprob': -0.1434931098867994, 'compression_ratio': 1.8018018018018018, 'no_speech_prob': 0.2384190857410431}, {'id': 101, 'seek': 63600, 'start': 638.16, 'end': 645.68, 'text': ' So on linux typically these files are stored in a format called archive.', 'tokens': [50472, 407, 322, 22896, 2449, 5850, 613, 7098, 366, 12187, 294, 257, 7877, 1219, 23507, 13, 50848], 'temperature': 0.0, 'avg_logprob': -0.1434931098867994, 'compression_ratio': 1.8018018018018018, 'no_speech_prob': 0.2384190857410431}, {'id': 102, 'seek': 63600, 'start': 645.68, 'end': 650.76, 'text': ' And essentially what linker will do is linker just like it accepts the object file as the', 'tokens': [50848, 400, 4476, 437, 2113, 260, 486, 360, 307, 2113, 260, 445, 411, 309, 33538, 264, 2657, 3991, 382, 264, 51102], 'temperature': 0.0, 'avg_logprob': -0.1434931098867994, 'compression_ratio': 1.8018018018018018, 'no_speech_prob': 0.2384190857410431}, {'id': 103, 'seek': 63600, 'start': 650.76, 'end': 651.76, 'text': ' input.', 'tokens': [51102, 4846, 13, 51152], 'temperature': 0.0, 'avg_logprob': -0.1434931098867994, 'compression_ratio': 1.8018018018018018, 'no_speech_prob': 0.2384190857410431}, {'id': 104, 'seek': 63600, 'start': 651.76, 'end': 657.26, 'text': ' So what linker was doing so far is it was getting sample dot o x y z dot o and so on', 'tokens': [51152, 407, 437, 2113, 260, 390, 884, 370, 1400, 307, 309, 390, 1242, 6889, 5893, 277, 2031, 288, 710, 5893, 277, 293, 370, 322, 51427], 'temperature': 0.0, 'avg_logprob': -0.1434931098867994, 'compression_ratio': 1.8018018018018018, 'no_speech_prob': 0.2384190857410431}, {'id': 105, 'seek': 63600, 'start': 657.26, 'end': 662.76, 'text': ' and link them together linker can also take a dot a file as the input and do whatever', 'tokens': [51427, 293, 2113, 552, 1214, 2113, 260, 393, 611, 747, 257, 5893, 257, 3991, 382, 264, 4846, 293, 360, 2035, 51702], 'temperature': 0.0, 'avg_logprob': -0.1434931098867994, 'compression_ratio': 1.8018018018018018, 'no_speech_prob': 0.2384190857410431}, {'id': 106, 'seek': 63600, 'start': 662.76, 'end': 664.96, 'text': ' it was doing earlier with a dot o.', 'tokens': [51702, 309, 390, 884, 3071, 365, 257, 5893, 277, 13, 51812], 'temperature': 0.0, 'avg_logprob': -0.1434931098867994, 'compression_ratio': 1.8018018018018018, 'no_speech_prob': 0.2384190857410431}, {'id': 107, 'seek': 66496, 'start': 664.96, 'end': 670.9200000000001, 'text': " So it is as if linker was given multiple dot o's together on command line.", 'tokens': [50364, 407, 309, 307, 382, 498, 2113, 260, 390, 2212, 3866, 5893, 277, 311, 1214, 322, 5622, 1622, 13, 50662], 'temperature': 0.0, 'avg_logprob': -0.13593510075619347, 'compression_ratio': 1.75, 'no_speech_prob': 0.005380629561841488}, {'id': 108, 'seek': 66496, 'start': 670.9200000000001, 'end': 675.1600000000001, 'text': ' So how do you create a static library?', 'tokens': [50662, 407, 577, 360, 291, 1884, 257, 13437, 6405, 30, 50874], 'temperature': 0.0, 'avg_logprob': -0.13593510075619347, 'compression_ratio': 1.75, 'no_speech_prob': 0.005380629561841488}, {'id': 109, 'seek': 66496, 'start': 675.1600000000001, 'end': 681.8000000000001, 'text': ' So there is a utility called ar just like you had gcc there is a utility called ar to', 'tokens': [50874, 407, 456, 307, 257, 14877, 1219, 594, 445, 411, 291, 632, 290, 1914, 456, 307, 257, 14877, 1219, 594, 281, 51206], 'temperature': 0.0, 'avg_logprob': -0.13593510075619347, 'compression_ratio': 1.75, 'no_speech_prob': 0.005380629561841488}, {'id': 110, 'seek': 66496, 'start': 681.8000000000001, 'end': 689.2800000000001, 'text': ' which you can give multiple object files and it will produce a dot a file.', 'tokens': [51206, 597, 291, 393, 976, 3866, 2657, 7098, 293, 309, 486, 5258, 257, 5893, 257, 3991, 13, 51580], 'temperature': 0.0, 'avg_logprob': -0.13593510075619347, 'compression_ratio': 1.75, 'no_speech_prob': 0.005380629561841488}, {'id': 111, 'seek': 66496, 'start': 689.2800000000001, 'end': 694.74, 'text': " And this is the dot a file which contains all of the dot o's which you have given.", 'tokens': [51580, 400, 341, 307, 264, 5893, 257, 3991, 597, 8306, 439, 295, 264, 5893, 277, 311, 597, 291, 362, 2212, 13, 51853], 'temperature': 0.0, 'avg_logprob': -0.13593510075619347, 'compression_ratio': 1.75, 'no_speech_prob': 0.005380629561841488}, {'id': 112, 'seek': 69474, 'start': 694.82, 'end': 697.22, 'text': ' And this is the command in which you can actually do it.', 'tokens': [50368, 400, 341, 307, 264, 5622, 294, 597, 291, 393, 767, 360, 309, 13, 50488], 'temperature': 0.0, 'avg_logprob': -0.1575535493738511, 'compression_ratio': 1.75, 'no_speech_prob': 0.0011323661310598254}, {'id': 113, 'seek': 69474, 'start': 697.22, 'end': 704.26, 'text': ' So if you do ar rs whatever is your name of the library now the typical convention on', 'tokens': [50488, 407, 498, 291, 360, 594, 367, 82, 2035, 307, 428, 1315, 295, 264, 6405, 586, 264, 7476, 10286, 322, 50840], 'temperature': 0.0, 'avg_logprob': -0.1575535493738511, 'compression_ratio': 1.75, 'no_speech_prob': 0.0011323661310598254}, {'id': 114, 'seek': 69474, 'start': 704.26, 'end': 712.5, 'text': ' linux is to have lib as the prefix then whatever name you want to give like lib data structure', 'tokens': [50840, 22896, 2449, 307, 281, 362, 22854, 382, 264, 46969, 550, 2035, 1315, 291, 528, 281, 976, 411, 22854, 1412, 3877, 51252], 'temperature': 0.0, 'avg_logprob': -0.1575535493738511, 'compression_ratio': 1.75, 'no_speech_prob': 0.0011323661310598254}, {'id': 115, 'seek': 69474, 'start': 712.5, 'end': 718.88, 'text': ' or lib graph or lib math or whatever you want to call it it is typically prefixed with', 'tokens': [51252, 420, 22854, 4295, 420, 22854, 5221, 420, 2035, 291, 528, 281, 818, 309, 309, 307, 5850, 18417, 40303, 365, 51571], 'temperature': 0.0, 'avg_logprob': -0.1575535493738511, 'compression_ratio': 1.75, 'no_speech_prob': 0.0011323661310598254}, {'id': 116, 'seek': 69474, 'start': 718.88, 'end': 720.38, 'text': ' lib.', 'tokens': [51571, 22854, 13, 51646], 'temperature': 0.0, 'avg_logprob': -0.1575535493738511, 'compression_ratio': 1.75, 'no_speech_prob': 0.0011323661310598254}, {'id': 117, 'seek': 72038, 'start': 720.38, 'end': 727.02, 'text': ' So lib whatever is your name dot a and then list of objects which you want to put that', 'tokens': [50364, 407, 22854, 2035, 307, 428, 1315, 5893, 257, 293, 550, 1329, 295, 6565, 597, 291, 528, 281, 829, 300, 50696], 'temperature': 0.0, 'avg_logprob': -0.1519740422566732, 'compression_ratio': 1.61, 'no_speech_prob': 0.02469141222536564}, {'id': 118, 'seek': 72038, 'start': 727.02, 'end': 730.06, 'text': ' put into that archive.', 'tokens': [50696, 829, 666, 300, 23507, 13, 50848], 'temperature': 0.0, 'avg_logprob': -0.1519740422566732, 'compression_ratio': 1.61, 'no_speech_prob': 0.02469141222536564}, {'id': 119, 'seek': 72038, 'start': 730.06, 'end': 735.18, 'text': ' So once you give this it will create a library.', 'tokens': [50848, 407, 1564, 291, 976, 341, 309, 486, 1884, 257, 6405, 13, 51104], 'temperature': 0.0, 'avg_logprob': -0.1519740422566732, 'compression_ratio': 1.61, 'no_speech_prob': 0.02469141222536564}, {'id': 120, 'seek': 72038, 'start': 735.18, 'end': 741.06, 'text': ' Now one of the interesting aspect is just like you have separate compilation.', 'tokens': [51104, 823, 472, 295, 264, 1880, 4171, 307, 445, 411, 291, 362, 4994, 40261, 13, 51398], 'temperature': 0.0, 'avg_logprob': -0.1519740422566732, 'compression_ratio': 1.61, 'no_speech_prob': 0.02469141222536564}, {'id': 121, 'seek': 72038, 'start': 741.06, 'end': 749.4, 'text': ' So you do not want to recreate bigger archive again and again if you modify something.', 'tokens': [51398, 407, 291, 360, 406, 528, 281, 25833, 3801, 23507, 797, 293, 797, 498, 291, 16927, 746, 13, 51815], 'temperature': 0.0, 'avg_logprob': -0.1519740422566732, 'compression_ratio': 1.61, 'no_speech_prob': 0.02469141222536564}, {'id': 122, 'seek': 74940, 'start': 749.4, 'end': 757.0, 'text': ' So let us say you had created an archive and you found some bug in say tree dot o you', 'tokens': [50364, 407, 718, 505, 584, 291, 632, 2942, 364, 23507, 293, 291, 1352, 512, 7426, 294, 584, 4230, 5893, 277, 291, 50744], 'temperature': 0.0, 'avg_logprob': -0.23342959880828856, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.0022451530676335096}, {'id': 123, 'seek': 74940, 'start': 757.0, 'end': 758.66, 'text': ' do not want to recreate it.', 'tokens': [50744, 360, 406, 528, 281, 25833, 309, 13, 50827], 'temperature': 0.0, 'avg_logprob': -0.23342959880828856, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.0022451530676335096}, {'id': 124, 'seek': 74940, 'start': 758.66, 'end': 763.78, 'text': ' So what archive utility allows it allows you to do incremental updates where you can replace', 'tokens': [50827, 407, 437, 23507, 14877, 4045, 309, 4045, 291, 281, 360, 35759, 9205, 689, 291, 393, 7406, 51083], 'temperature': 0.0, 'avg_logprob': -0.23342959880828856, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.0022451530676335096}, {'id': 125, 'seek': 74940, 'start': 763.78, 'end': 768.64, 'text': ' only one of the objects.', 'tokens': [51083, 787, 472, 295, 264, 6565, 13, 51326], 'temperature': 0.0, 'avg_logprob': -0.23342959880828856, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.0022451530676335096}, {'id': 126, 'seek': 74940, 'start': 768.64, 'end': 770.52, 'text': ' And how do you use the static library?', 'tokens': [51326, 400, 577, 360, 291, 764, 264, 13437, 6405, 30, 51420], 'temperature': 0.0, 'avg_logprob': -0.23342959880828856, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.0022451530676335096}, {'id': 127, 'seek': 74940, 'start': 770.52, 'end': 773.62, 'text': ' Let us say you have created something.', 'tokens': [51420, 961, 505, 584, 291, 362, 2942, 746, 13, 51575], 'temperature': 0.0, 'avg_logprob': -0.23342959880828856, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.0022451530676335096}, {'id': 128, 'seek': 77362, 'start': 773.62, 'end': 780.92, 'text': ' So let us say I had foo dot c and bar dot c I put them in the archive say lib my dot', 'tokens': [50364, 407, 718, 505, 584, 286, 632, 726, 78, 5893, 269, 293, 2159, 5893, 269, 286, 829, 552, 294, 264, 23507, 584, 22854, 452, 5893, 50729], 'temperature': 0.0, 'avg_logprob': -0.14783687007670498, 'compression_ratio': 1.6713615023474178, 'no_speech_prob': 0.22109918296337128}, {'id': 129, 'seek': 77362, 'start': 780.92, 'end': 786.78, 'text': ' a and I have some client code which is going to call foo and bar.', 'tokens': [50729, 257, 293, 286, 362, 512, 6423, 3089, 597, 307, 516, 281, 818, 726, 78, 293, 2159, 13, 51022], 'temperature': 0.0, 'avg_logprob': -0.14783687007670498, 'compression_ratio': 1.6713615023474178, 'no_speech_prob': 0.22109918296337128}, {'id': 130, 'seek': 77362, 'start': 786.78, 'end': 793.58, 'text': ' While compiling that I will do gcc whatever my program dot c.', 'tokens': [51022, 3987, 715, 4883, 300, 286, 486, 360, 290, 1914, 2035, 452, 1461, 5893, 269, 13, 51362], 'temperature': 0.0, 'avg_logprob': -0.14783687007670498, 'compression_ratio': 1.6713615023474178, 'no_speech_prob': 0.22109918296337128}, {'id': 131, 'seek': 77362, 'start': 793.58, 'end': 795.26, 'text': ' So this command remains same.', 'tokens': [51362, 407, 341, 5622, 7023, 912, 13, 51446], 'temperature': 0.0, 'avg_logprob': -0.14783687007670498, 'compression_ratio': 1.6713615023474178, 'no_speech_prob': 0.22109918296337128}, {'id': 132, 'seek': 77362, 'start': 795.26, 'end': 800.88, 'text': ' Now you have to somehow tell the compiler on where are the other static libraries which', 'tokens': [51446, 823, 291, 362, 281, 6063, 980, 264, 31958, 322, 689, 366, 264, 661, 13437, 15148, 597, 51727], 'temperature': 0.0, 'avg_logprob': -0.14783687007670498, 'compression_ratio': 1.6713615023474178, 'no_speech_prob': 0.22109918296337128}, {'id': 133, 'seek': 77362, 'start': 800.88, 'end': 803.5, 'text': ' are used by this program.', 'tokens': [51727, 366, 1143, 538, 341, 1461, 13, 51858], 'temperature': 0.0, 'avg_logprob': -0.14783687007670498, 'compression_ratio': 1.6713615023474178, 'no_speech_prob': 0.22109918296337128}, {'id': 134, 'seek': 80350, 'start': 803.5, 'end': 809.34, 'text': ' So that is typically done by this dash capital L. Dot is indicating it is in the current', 'tokens': [50364, 407, 300, 307, 5850, 1096, 538, 341, 8240, 4238, 441, 13, 38753, 307, 25604, 309, 307, 294, 264, 2190, 50656], 'temperature': 0.0, 'avg_logprob': -0.1831014899797337, 'compression_ratio': 1.7720930232558139, 'no_speech_prob': 0.0021796661894768476}, {'id': 135, 'seek': 80350, 'start': 809.34, 'end': 810.34, 'text': ' directory.', 'tokens': [50656, 21120, 13, 50706], 'temperature': 0.0, 'avg_logprob': -0.1831014899797337, 'compression_ratio': 1.7720930232558139, 'no_speech_prob': 0.0021796661894768476}, {'id': 136, 'seek': 80350, 'start': 810.34, 'end': 816.7, 'text': ' It could be anywhere but in this case what it is saying is all the static libraries used', 'tokens': [50706, 467, 727, 312, 4992, 457, 294, 341, 1389, 437, 309, 307, 1566, 307, 439, 264, 13437, 15148, 1143, 51024], 'temperature': 0.0, 'avg_logprob': -0.1831014899797337, 'compression_ratio': 1.7720930232558139, 'no_speech_prob': 0.0021796661894768476}, {'id': 137, 'seek': 80350, 'start': 816.7, 'end': 821.9, 'text': ' by this code are in the current directory and the directory which and the library against', 'tokens': [51024, 538, 341, 3089, 366, 294, 264, 2190, 21120, 293, 264, 21120, 597, 293, 264, 6405, 1970, 51284], 'temperature': 0.0, 'avg_logprob': -0.1831014899797337, 'compression_ratio': 1.7720930232558139, 'no_speech_prob': 0.0021796661894768476}, {'id': 138, 'seek': 80350, 'start': 821.9, 'end': 827.02, 'text': ' which I am trying to link is specified using small l and just the name.', 'tokens': [51284, 597, 286, 669, 1382, 281, 2113, 307, 22206, 1228, 1359, 287, 293, 445, 264, 1315, 13, 51540], 'temperature': 0.0, 'avg_logprob': -0.1831014899797337, 'compression_ratio': 1.7720930232558139, 'no_speech_prob': 0.0021796661894768476}, {'id': 139, 'seek': 80350, 'start': 827.02, 'end': 831.34, 'text': ' We do not specify dash lib my.', 'tokens': [51540, 492, 360, 406, 16500, 8240, 22854, 452, 13, 51756], 'temperature': 0.0, 'avg_logprob': -0.1831014899797337, 'compression_ratio': 1.7720930232558139, 'no_speech_prob': 0.0021796661894768476}, {'id': 140, 'seek': 83134, 'start': 831.34, 'end': 837.26, 'text': ' That is why that convention exists because linker what compiler will do is it will prefix', 'tokens': [50364, 663, 307, 983, 300, 10286, 8198, 570, 2113, 260, 437, 31958, 486, 360, 307, 309, 486, 46969, 50660], 'temperature': 0.0, 'avg_logprob': -0.15560134251912436, 'compression_ratio': 1.7241379310344827, 'no_speech_prob': 0.09519216418266296}, {'id': 141, 'seek': 83134, 'start': 837.26, 'end': 843.22, 'text': ' lib and suffix dot a automatically when you give this command and then it will produce', 'tokens': [50660, 22854, 293, 3889, 970, 5893, 257, 6772, 562, 291, 976, 341, 5622, 293, 550, 309, 486, 5258, 50958], 'temperature': 0.0, 'avg_logprob': -0.15560134251912436, 'compression_ratio': 1.7241379310344827, 'no_speech_prob': 0.09519216418266296}, {'id': 142, 'seek': 83134, 'start': 843.22, 'end': 847.9, 'text': ' a dot out and this program should actually work.', 'tokens': [50958, 257, 5893, 484, 293, 341, 1461, 820, 767, 589, 13, 51192], 'temperature': 0.0, 'avg_logprob': -0.15560134251912436, 'compression_ratio': 1.7241379310344827, 'no_speech_prob': 0.09519216418266296}, {'id': 143, 'seek': 83134, 'start': 847.9, 'end': 851.74, 'text': ' So can you try creating this library I will keep this command as it is.', 'tokens': [51192, 407, 393, 291, 853, 4084, 341, 6405, 286, 486, 1066, 341, 5622, 382, 309, 307, 13, 51384], 'temperature': 0.0, 'avg_logprob': -0.15560134251912436, 'compression_ratio': 1.7241379310344827, 'no_speech_prob': 0.09519216418266296}, {'id': 144, 'seek': 83134, 'start': 851.74, 'end': 858.94, 'text': ' So create some sample library where you put some function.', 'tokens': [51384, 407, 1884, 512, 6889, 6405, 689, 291, 829, 512, 2445, 13, 51744], 'temperature': 0.0, 'avg_logprob': -0.15560134251912436, 'compression_ratio': 1.7241379310344827, 'no_speech_prob': 0.09519216418266296}, {'id': 145, 'seek': 83134, 'start': 858.94, 'end': 860.82, 'text': ' No it does not need to be in same location.', 'tokens': [51744, 883, 309, 775, 406, 643, 281, 312, 294, 912, 4914, 13, 51838], 'temperature': 0.0, 'avg_logprob': -0.15560134251912436, 'compression_ratio': 1.7241379310344827, 'no_speech_prob': 0.09519216418266296}, {'id': 146, 'seek': 86082, 'start': 860.82, 'end': 876.22, 'text': ' You can create it anywhere and then specify the path using dash capital L.', 'tokens': [50364, 509, 393, 1884, 309, 4992, 293, 550, 16500, 264, 3100, 1228, 8240, 4238, 441, 13, 51134], 'temperature': 0.0, 'avg_logprob': -0.3046651788659998, 'compression_ratio': 1.2403846153846154, 'no_speech_prob': 0.8552915453910828}, {'id': 147, 'seek': 86082, 'start': 876.22, 'end': 877.6600000000001, 'text': ' Make it just a dumb tool.', 'tokens': [51134, 4387, 309, 445, 257, 10316, 2290, 13, 51206], 'temperature': 0.0, 'avg_logprob': -0.3046651788659998, 'compression_ratio': 1.2403846153846154, 'no_speech_prob': 0.8552915453910828}, {'id': 148, 'seek': 86082, 'start': 877.6600000000001, 'end': 886.6600000000001, 'text': ' You can do anything with it.', 'tokens': [51206, 509, 393, 360, 1340, 365, 309, 13, 51656], 'temperature': 0.0, 'avg_logprob': -0.3046651788659998, 'compression_ratio': 1.2403846153846154, 'no_speech_prob': 0.8552915453910828}, {'id': 149, 'seek': 88666, 'start': 886.66, 'end': 893.6999999999999, 'text': ' Yes, yes, yes.', 'tokens': [50364, 1079, 11, 2086, 11, 2086, 13, 50716], 'temperature': 0.0, 'avg_logprob': -0.23105706395329656, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.1002347320318222}, {'id': 150, 'seek': 88666, 'start': 893.6999999999999, 'end': 896.1, 'text': ' But you it is not make which is doing it.', 'tokens': [50716, 583, 291, 309, 307, 406, 652, 597, 307, 884, 309, 13, 50836], 'temperature': 0.0, 'avg_logprob': -0.23105706395329656, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.1002347320318222}, {'id': 151, 'seek': 88666, 'start': 896.1, 'end': 899.0799999999999, 'text': ' It is your make file which needs to specify.', 'tokens': [50836, 467, 307, 428, 652, 3991, 597, 2203, 281, 16500, 13, 50985], 'temperature': 0.0, 'avg_logprob': -0.23105706395329656, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.1002347320318222}, {'id': 152, 'seek': 88666, 'start': 899.0799999999999, 'end': 906.54, 'text': ' So whatever is your lib my.a as the target in make you need to say it depends on these', 'tokens': [50985, 407, 2035, 307, 428, 22854, 452, 13, 64, 382, 264, 3779, 294, 652, 291, 643, 281, 584, 309, 5946, 322, 613, 51358], 'temperature': 0.0, 'avg_logprob': -0.23105706395329656, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.1002347320318222}, {'id': 153, 'seek': 88666, 'start': 906.54, 'end': 911.22, 'text': ' many objects and then it will do whatever you want it to do.', 'tokens': [51358, 867, 6565, 293, 550, 309, 486, 360, 2035, 291, 528, 309, 281, 360, 13, 51592], 'temperature': 0.0, 'avg_logprob': -0.23105706395329656, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.1002347320318222}, {'id': 154, 'seek': 91122, 'start': 911.22, 'end': 919.22, 'text': ' Make is not I mean make the way make works it is it simply has list of dependencies and', 'tokens': [50364, 4387, 307, 406, 286, 914, 652, 264, 636, 652, 1985, 309, 307, 309, 2935, 575, 1329, 295, 36606, 293, 50764], 'temperature': 0.0, 'avg_logprob': -0.2939983690288705, 'compression_ratio': 1.4662576687116564, 'no_speech_prob': 0.6004860997200012}, {'id': 155, 'seek': 91122, 'start': 919.22, 'end': 920.34, 'text': ' that.', 'tokens': [50764, 300, 13, 50820], 'temperature': 0.0, 'avg_logprob': -0.2939983690288705, 'compression_ratio': 1.4662576687116564, 'no_speech_prob': 0.6004860997200012}, {'id': 156, 'seek': 91122, 'start': 920.34, 'end': 928.6600000000001, 'text': ' So if you say my lib my.a depends on foo.o bar.o xyz.o as soon as any of the prerequisite', 'tokens': [50820, 407, 498, 291, 584, 452, 22854, 452, 13, 64, 5946, 322, 726, 78, 13, 78, 2159, 13, 78, 2031, 37433, 13, 78, 382, 2321, 382, 604, 295, 264, 38333, 34152, 51236], 'temperature': 0.0, 'avg_logprob': -0.2939983690288705, 'compression_ratio': 1.4662576687116564, 'no_speech_prob': 0.6004860997200012}, {'id': 157, 'seek': 91122, 'start': 928.6600000000001, 'end': 931.6600000000001, 'text': ' changes it will do whatever command you have mentioned.', 'tokens': [51236, 2962, 309, 486, 360, 2035, 5622, 291, 362, 2835, 13, 51386], 'temperature': 0.0, 'avg_logprob': -0.2939983690288705, 'compression_ratio': 1.4662576687116564, 'no_speech_prob': 0.6004860997200012}, {'id': 158, 'seek': 93166, 'start': 931.66, 'end': 947.06, 'text': ' And it did not get the use case.', 'tokens': [50364, 400, 309, 630, 406, 483, 264, 764, 1389, 13, 51134], 'temperature': 0.0, 'avg_logprob': -0.7559013366699219, 'compression_ratio': 0.8, 'no_speech_prob': 0.8315007090568542}, {'id': 159, 'seek': 97706, 'start': 977.06, 'end': 990.5799999999999, 'text': ' Now simply try one minor modification in the final command which you are using which is', 'tokens': [50364, 823, 2935, 853, 472, 6696, 26747, 294, 264, 2572, 5622, 597, 291, 366, 1228, 597, 307, 51040], 'temperature': 0.0, 'avg_logprob': -0.22516499191034037, 'compression_ratio': 1.5782312925170068, 'no_speech_prob': 0.10326017439365387}, {'id': 160, 'seek': 97706, 'start': 990.5799999999999, 'end': 996.3399999999999, 'text': ' specify the dash L before myproc.c.', 'tokens': [51040, 16500, 264, 8240, 441, 949, 452, 4318, 66, 13, 66, 13, 51328], 'temperature': 0.0, 'avg_logprob': -0.22516499191034037, 'compression_ratio': 1.5782312925170068, 'no_speech_prob': 0.10326017439365387}, {'id': 161, 'seek': 97706, 'start': 996.3399999999999, 'end': 1003.4599999999999, 'text': ' So the only difference between this command and prior command is the dash L my was specified', 'tokens': [51328, 407, 264, 787, 2649, 1296, 341, 5622, 293, 4059, 5622, 307, 264, 8240, 441, 452, 390, 22206, 51684], 'temperature': 0.0, 'avg_logprob': -0.22516499191034037, 'compression_ratio': 1.5782312925170068, 'no_speech_prob': 0.10326017439365387}, {'id': 162, 'seek': 97706, 'start': 1003.4599999999999, 'end': 1004.4599999999999, 'text': ' after myproc.c.', 'tokens': [51684, 934, 452, 4318, 66, 13, 66, 13, 51734], 'temperature': 0.0, 'avg_logprob': -0.22516499191034037, 'compression_ratio': 1.5782312925170068, 'no_speech_prob': 0.10326017439365387}, {'id': 163, 'seek': 100446, 'start': 1004.86, 'end': 1011.14, 'text': ' Try to specify it before and see what happens.', 'tokens': [50384, 6526, 281, 16500, 309, 949, 293, 536, 437, 2314, 13, 50698], 'temperature': 0.0, 'avg_logprob': -0.25604650179545085, 'compression_ratio': 1.4492753623188406, 'no_speech_prob': 0.201027050614357}, {'id': 164, 'seek': 100446, 'start': 1011.14, 'end': 1018.3000000000001, 'text': ' Sorry undefined reference.', 'tokens': [50698, 4919, 674, 5666, 2001, 6408, 13, 51056], 'temperature': 0.0, 'avg_logprob': -0.25604650179545085, 'compression_ratio': 1.4492753623188406, 'no_speech_prob': 0.201027050614357}, {'id': 165, 'seek': 100446, 'start': 1018.3000000000001, 'end': 1023.46, 'text': ' So I am still giving everything same to the linker but linker is saying now foo or bar', 'tokens': [51056, 407, 286, 669, 920, 2902, 1203, 912, 281, 264, 2113, 260, 457, 2113, 260, 307, 1566, 586, 726, 78, 420, 2159, 51314], 'temperature': 0.0, 'avg_logprob': -0.25604650179545085, 'compression_ratio': 1.4492753623188406, 'no_speech_prob': 0.201027050614357}, {'id': 166, 'seek': 100446, 'start': 1023.46, 'end': 1029.5, 'text': ' is undefined.', 'tokens': [51314, 307, 674, 5666, 2001, 13, 51616], 'temperature': 0.0, 'avg_logprob': -0.25604650179545085, 'compression_ratio': 1.4492753623188406, 'no_speech_prob': 0.201027050614357}, {'id': 167, 'seek': 100446, 'start': 1029.5, 'end': 1031.54, 'text': ' So this results in error.', 'tokens': [51616, 407, 341, 3542, 294, 6713, 13, 51718], 'temperature': 0.0, 'avg_logprob': -0.25604650179545085, 'compression_ratio': 1.4492753623188406, 'no_speech_prob': 0.201027050614357}, {'id': 168, 'seek': 103154, 'start': 1031.54, 'end': 1048.8999999999999, 'text': ' Any idea why?', 'tokens': [50364, 2639, 1558, 983, 30, 51232], 'temperature': 0.0, 'avg_logprob': -0.196396309396495, 'compression_ratio': 1.5483870967741935, 'no_speech_prob': 0.05487745627760887}, {'id': 169, 'seek': 103154, 'start': 1048.8999999999999, 'end': 1055.46, 'text': ' So essentially the reason this happens is because of an optimization of how linker works.', 'tokens': [51232, 407, 4476, 264, 1778, 341, 2314, 307, 570, 295, 364, 19618, 295, 577, 2113, 260, 1985, 13, 51560], 'temperature': 0.0, 'avg_logprob': -0.196396309396495, 'compression_ratio': 1.5483870967741935, 'no_speech_prob': 0.05487745627760887}, {'id': 170, 'seek': 103154, 'start': 1055.46, 'end': 1061.06, 'text': ' It is not really optimization which linker is doing it is optimization which linker does', 'tokens': [51560, 467, 307, 406, 534, 19618, 597, 2113, 260, 307, 884, 309, 307, 19618, 597, 2113, 260, 775, 51840], 'temperature': 0.0, 'avg_logprob': -0.196396309396495, 'compression_ratio': 1.5483870967741935, 'no_speech_prob': 0.05487745627760887}, {'id': 171, 'seek': 106106, 'start': 1061.58, 'end': 1065.1, 'text': ' for faster processing of the program.', 'tokens': [50390, 337, 4663, 9007, 295, 264, 1461, 13, 50566], 'temperature': 0.0, 'avg_logprob': -0.2529015642531375, 'compression_ratio': 1.2049180327868851, 'no_speech_prob': 0.3066704273223877}, {'id': 172, 'seek': 106106, 'start': 1065.1, 'end': 1075.8999999999999, 'text': ' Now imagine what happens is if you give libc.a it has 1500 object files.', 'tokens': [50566, 823, 3811, 437, 2314, 307, 498, 291, 976, 22854, 66, 13, 64, 309, 575, 22671, 2657, 7098, 13, 51106], 'temperature': 0.0, 'avg_logprob': -0.2529015642531375, 'compression_ratio': 1.2049180327868851, 'no_speech_prob': 0.3066704273223877}, {'id': 173, 'seek': 106106, 'start': 1075.8999999999999, 'end': 1077.34, 'text': ' We can see that.', 'tokens': [51106, 492, 393, 536, 300, 13, 51178], 'temperature': 0.0, 'avg_logprob': -0.2529015642531375, 'compression_ratio': 1.2049180327868851, 'no_speech_prob': 0.3066704273223877}, {'id': 174, 'seek': 106106, 'start': 1077.34, 'end': 1086.04, 'text': ' So let us say I do.', 'tokens': [51178, 407, 718, 505, 584, 286, 360, 13, 51613], 'temperature': 0.0, 'avg_logprob': -0.2529015642531375, 'compression_ratio': 1.2049180327868851, 'no_speech_prob': 0.3066704273223877}, {'id': 175, 'seek': 108604, 'start': 1086.04, 'end': 1088.24, 'text': ' So I have this.', 'tokens': [50364, 407, 286, 362, 341, 13, 50474], 'temperature': 0.0, 'avg_logprob': -0.22719606919722124, 'compression_ratio': 1.3181818181818181, 'no_speech_prob': 0.1323433816432953}, {'id': 176, 'seek': 108604, 'start': 1088.24, 'end': 1095.12, 'text': ' I could list how many objects it has using a command called art and if I simply pipe', 'tokens': [50474, 286, 727, 1329, 577, 867, 6565, 309, 575, 1228, 257, 5622, 1219, 1523, 293, 498, 286, 2935, 11240, 50818], 'temperature': 0.0, 'avg_logprob': -0.22719606919722124, 'compression_ratio': 1.3181818181818181, 'no_speech_prob': 0.1323433816432953}, {'id': 177, 'seek': 108604, 'start': 1095.12, 'end': 1101.22, 'text': ' that to wc dash L I get 1503.', 'tokens': [50818, 300, 281, 261, 66, 8240, 441, 286, 483, 8451, 18, 13, 51123], 'temperature': 0.0, 'avg_logprob': -0.22719606919722124, 'compression_ratio': 1.3181818181818181, 'no_speech_prob': 0.1323433816432953}, {'id': 178, 'seek': 108604, 'start': 1101.22, 'end': 1107.3999999999999, 'text': ' So it is saying that libc has 1500 objects.', 'tokens': [51123, 407, 309, 307, 1566, 300, 22854, 66, 575, 22671, 6565, 13, 51432], 'temperature': 0.0, 'avg_logprob': -0.22719606919722124, 'compression_ratio': 1.3181818181818181, 'no_speech_prob': 0.1323433816432953}, {'id': 179, 'seek': 110740, 'start': 1107.4, 'end': 1115.8000000000002, 'text': ' Now if linker has to read all the 1500 objects and libc is fairly common.', 'tokens': [50364, 823, 498, 2113, 260, 575, 281, 1401, 439, 264, 22671, 6565, 293, 22854, 66, 307, 6457, 2689, 13, 50784], 'temperature': 0.0, 'avg_logprob': -0.14443046345430263, 'compression_ratio': 1.6130653266331658, 'no_speech_prob': 0.025129202753305435}, {'id': 180, 'seek': 110740, 'start': 1115.8000000000002, 'end': 1118.72, 'text': ' Libc is used by almost every program.', 'tokens': [50784, 15834, 66, 307, 1143, 538, 1920, 633, 1461, 13, 50930], 'temperature': 0.0, 'avg_logprob': -0.14443046345430263, 'compression_ratio': 1.6130653266331658, 'no_speech_prob': 0.025129202753305435}, {'id': 181, 'seek': 110740, 'start': 1118.72, 'end': 1125.16, 'text': ' So if linker has to process all 1500 objects then you can imagine it is going to slow things', 'tokens': [50930, 407, 498, 2113, 260, 575, 281, 1399, 439, 22671, 6565, 550, 291, 393, 3811, 309, 307, 516, 281, 2964, 721, 51252], 'temperature': 0.0, 'avg_logprob': -0.14443046345430263, 'compression_ratio': 1.6130653266331658, 'no_speech_prob': 0.025129202753305435}, {'id': 182, 'seek': 110740, 'start': 1125.16, 'end': 1132.5600000000002, 'text': ' down because linker will say this object has these things so let me put that in memory', 'tokens': [51252, 760, 570, 2113, 260, 486, 584, 341, 2657, 575, 613, 721, 370, 718, 385, 829, 300, 294, 4675, 51622], 'temperature': 0.0, 'avg_logprob': -0.14443046345430263, 'compression_ratio': 1.6130653266331658, 'no_speech_prob': 0.025129202753305435}, {'id': 183, 'seek': 110740, 'start': 1132.5600000000002, 'end': 1135.0400000000002, 'text': ' and do whatever I need to do.', 'tokens': [51622, 293, 360, 2035, 286, 643, 281, 360, 13, 51746], 'temperature': 0.0, 'avg_logprob': -0.14443046345430263, 'compression_ratio': 1.6130653266331658, 'no_speech_prob': 0.025129202753305435}, {'id': 184, 'seek': 113504, 'start': 1135.04, 'end': 1141.6, 'text': ' So what linker does is linker only extracts the required objects.', 'tokens': [50364, 407, 437, 2113, 260, 775, 307, 2113, 260, 787, 8947, 82, 264, 4739, 6565, 13, 50692], 'temperature': 0.0, 'avg_logprob': -0.13250705449268071, 'compression_ratio': 1.7285067873303168, 'no_speech_prob': 0.004126190673559904}, {'id': 185, 'seek': 113504, 'start': 1141.6, 'end': 1146.76, 'text': ' So linker does not want to pull in all the things which are not needed.', 'tokens': [50692, 407, 2113, 260, 775, 406, 528, 281, 2235, 294, 439, 264, 721, 597, 366, 406, 2978, 13, 50950], 'temperature': 0.0, 'avg_logprob': -0.13250705449268071, 'compression_ratio': 1.7285067873303168, 'no_speech_prob': 0.004126190673559904}, {'id': 186, 'seek': 113504, 'start': 1146.76, 'end': 1149.24, 'text': ' Linker wants to take only things which are used.', 'tokens': [50950, 8466, 260, 2738, 281, 747, 787, 721, 597, 366, 1143, 13, 51074], 'temperature': 0.0, 'avg_logprob': -0.13250705449268071, 'compression_ratio': 1.7285067873303168, 'no_speech_prob': 0.004126190673559904}, {'id': 187, 'seek': 113504, 'start': 1149.24, 'end': 1154.96, 'text': ' For example if the client code is only using link list and not trees why do you want to', 'tokens': [51074, 1171, 1365, 498, 264, 6423, 3089, 307, 787, 1228, 2113, 1329, 293, 406, 5852, 983, 360, 291, 528, 281, 51360], 'temperature': 0.0, 'avg_logprob': -0.13250705449268071, 'compression_ratio': 1.7285067873303168, 'no_speech_prob': 0.004126190673559904}, {'id': 188, 'seek': 113504, 'start': 1154.96, 'end': 1156.72, 'text': ' pull in the code for trees?', 'tokens': [51360, 2235, 294, 264, 3089, 337, 5852, 30, 51448], 'temperature': 0.0, 'avg_logprob': -0.13250705449268071, 'compression_ratio': 1.7285067873303168, 'no_speech_prob': 0.004126190673559904}, {'id': 189, 'seek': 113504, 'start': 1156.72, 'end': 1162.3999999999999, 'text': ' It is unnecessary going to waste memory when the program is loaded at run time.', 'tokens': [51448, 467, 307, 19350, 516, 281, 5964, 4675, 562, 264, 1461, 307, 13210, 412, 1190, 565, 13, 51732], 'temperature': 0.0, 'avg_logprob': -0.13250705449268071, 'compression_ratio': 1.7285067873303168, 'no_speech_prob': 0.004126190673559904}, {'id': 190, 'seek': 116240, 'start': 1162.5600000000002, 'end': 1168.0800000000002, 'text': ' What linkers algorithm is for resolving references is something like this.', 'tokens': [50372, 708, 2113, 433, 9284, 307, 337, 49940, 15400, 307, 746, 411, 341, 13, 50648], 'temperature': 0.0, 'avg_logprob': -0.15205413362254266, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.07792223244905472}, {'id': 191, 'seek': 116240, 'start': 1168.0800000000002, 'end': 1173.8400000000001, 'text': ' So whatever is the command line which you have given to the linker, linker will scan', 'tokens': [50648, 407, 2035, 307, 264, 5622, 1622, 597, 291, 362, 2212, 281, 264, 2113, 260, 11, 2113, 260, 486, 11049, 50936], 'temperature': 0.0, 'avg_logprob': -0.15205413362254266, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.07792223244905472}, {'id': 192, 'seek': 116240, 'start': 1173.8400000000001, 'end': 1175.94, 'text': ' the .o file.', 'tokens': [50936, 264, 2411, 78, 3991, 13, 51041], 'temperature': 0.0, 'avg_logprob': -0.15205413362254266, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.07792223244905472}, {'id': 193, 'seek': 116240, 'start': 1175.94, 'end': 1180.0, 'text': ' What linker has to do if you think about it conceptually linker gets multiple files as', 'tokens': [51041, 708, 2113, 260, 575, 281, 360, 498, 291, 519, 466, 309, 3410, 671, 2113, 260, 2170, 3866, 7098, 382, 51244], 'temperature': 0.0, 'avg_logprob': -0.15205413362254266, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.07792223244905472}, {'id': 194, 'seek': 116240, 'start': 1180.0, 'end': 1181.6000000000001, 'text': ' the input.', 'tokens': [51244, 264, 4846, 13, 51324], 'temperature': 0.0, 'avg_logprob': -0.15205413362254266, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.07792223244905472}, {'id': 195, 'seek': 116240, 'start': 1181.6000000000001, 'end': 1188.68, 'text': ' So what linker will do is start scanning them from left to right in the command line order', 'tokens': [51324, 407, 437, 2113, 260, 486, 360, 307, 722, 27019, 552, 490, 1411, 281, 558, 294, 264, 5622, 1622, 1668, 51678], 'temperature': 0.0, 'avg_logprob': -0.15205413362254266, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.07792223244905472}, {'id': 196, 'seek': 118868, 'start': 1188.68, 'end': 1192.68, 'text': ' and it keeps the information of whatever is undefined in that.', 'tokens': [50364, 293, 309, 5965, 264, 1589, 295, 2035, 307, 674, 5666, 2001, 294, 300, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.13503287235895792, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.06353350728750229}, {'id': 197, 'seek': 118868, 'start': 1192.68, 'end': 1201.8, 'text': ' So for example when I give main.c it will say foo is undefined, bar is undefined.', 'tokens': [50564, 407, 337, 1365, 562, 286, 976, 2135, 13, 66, 309, 486, 584, 726, 78, 307, 674, 5666, 2001, 11, 2159, 307, 674, 5666, 2001, 13, 51020], 'temperature': 0.0, 'avg_logprob': -0.13503287235895792, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.06353350728750229}, {'id': 198, 'seek': 118868, 'start': 1201.8, 'end': 1209.24, 'text': ' Then when it encounters the next file it checks whether this file defines foo or bar.', 'tokens': [51020, 1396, 562, 309, 26310, 264, 958, 3991, 309, 13834, 1968, 341, 3991, 23122, 726, 78, 420, 2159, 13, 51392], 'temperature': 0.0, 'avg_logprob': -0.13503287235895792, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.06353350728750229}, {'id': 199, 'seek': 118868, 'start': 1209.24, 'end': 1213.4, 'text': ' And then if so then it says that this file is useful for linking.', 'tokens': [51392, 400, 550, 498, 370, 550, 309, 1619, 300, 341, 3991, 307, 4420, 337, 25775, 13, 51600], 'temperature': 0.0, 'avg_logprob': -0.13503287235895792, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.06353350728750229}, {'id': 200, 'seek': 118868, 'start': 1213.4, 'end': 1216.2, 'text': ' Let me take this.', 'tokens': [51600, 961, 385, 747, 341, 13, 51740], 'temperature': 0.0, 'avg_logprob': -0.13503287235895792, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.06353350728750229}, {'id': 201, 'seek': 118868, 'start': 1216.2, 'end': 1218.5600000000002, 'text': ' Does that make sense?', 'tokens': [51740, 4402, 300, 652, 2020, 30, 51858], 'temperature': 0.0, 'avg_logprob': -0.13503287235895792, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.06353350728750229}, {'id': 202, 'seek': 121856, 'start': 1218.56, 'end': 1226.0, 'text': ' So linker will only use the object files which are trying to help define some things which', 'tokens': [50364, 407, 2113, 260, 486, 787, 764, 264, 2657, 7098, 597, 366, 1382, 281, 854, 6964, 512, 721, 597, 50736], 'temperature': 0.0, 'avg_logprob': -0.15930630709673907, 'compression_ratio': 1.6432748538011697, 'no_speech_prob': 0.0015719212824478745}, {'id': 203, 'seek': 121856, 'start': 1226.0, 'end': 1229.6799999999998, 'text': ' were previously undefined.', 'tokens': [50736, 645, 8046, 674, 5666, 2001, 13, 50920], 'temperature': 0.0, 'avg_logprob': -0.15930630709673907, 'compression_ratio': 1.6432748538011697, 'no_speech_prob': 0.0015719212824478745}, {'id': 204, 'seek': 121856, 'start': 1229.6799999999998, 'end': 1232.6799999999998, 'text': ' So that forms an ordering between the things.', 'tokens': [50920, 407, 300, 6422, 364, 21739, 1296, 264, 721, 13, 51070], 'temperature': 0.0, 'avg_logprob': -0.15930630709673907, 'compression_ratio': 1.6432748538011697, 'no_speech_prob': 0.0015719212824478745}, {'id': 205, 'seek': 121856, 'start': 1232.6799999999998, 'end': 1238.7, 'text': ' So in the example which we tried earlier what we did we told linker that first compile my', 'tokens': [51070, 407, 294, 264, 1365, 597, 321, 3031, 3071, 437, 321, 630, 321, 1907, 2113, 260, 300, 700, 31413, 452, 51371], 'temperature': 0.0, 'avg_logprob': -0.15930630709673907, 'compression_ratio': 1.6432748538011697, 'no_speech_prob': 0.0015719212824478745}, {'id': 206, 'seek': 121856, 'start': 1238.7, 'end': 1243.84, 'text': ' .c and then take lib my .a.', 'tokens': [51371, 2411, 66, 293, 550, 747, 22854, 452, 2411, 64, 13, 51628], 'temperature': 0.0, 'avg_logprob': -0.15930630709673907, 'compression_ratio': 1.6432748538011697, 'no_speech_prob': 0.0015719212824478745}, {'id': 207, 'seek': 124384, 'start': 1243.84, 'end': 1251.24, 'text': ' So linker said when it is compiling main.c it encountered that foo and bar are external.', 'tokens': [50364, 407, 2113, 260, 848, 562, 309, 307, 715, 4883, 2135, 13, 66, 309, 20381, 300, 726, 78, 293, 2159, 366, 8320, 13, 50734], 'temperature': 0.0, 'avg_logprob': -0.14406821727752686, 'compression_ratio': 1.6758241758241759, 'no_speech_prob': 0.0667433887720108}, {'id': 208, 'seek': 124384, 'start': 1251.24, 'end': 1258.36, 'text': ' So I need someone to specify their definition and lib my .a specified their definition.', 'tokens': [50734, 407, 286, 643, 1580, 281, 16500, 641, 7123, 293, 22854, 452, 2411, 64, 22206, 641, 7123, 13, 51090], 'temperature': 0.0, 'avg_logprob': -0.14406821727752686, 'compression_ratio': 1.6758241758241759, 'no_speech_prob': 0.0667433887720108}, {'id': 209, 'seek': 124384, 'start': 1258.36, 'end': 1263.52, 'text': ' So lib my .a was actually used and linked.', 'tokens': [51090, 407, 22854, 452, 2411, 64, 390, 767, 1143, 293, 9408, 13, 51348], 'temperature': 0.0, 'avg_logprob': -0.14406821727752686, 'compression_ratio': 1.6758241758241759, 'no_speech_prob': 0.0667433887720108}, {'id': 210, 'seek': 124384, 'start': 1263.52, 'end': 1271.22, 'text': ' In the earlier in the other case what happened is first linker scanned and lib my .a.', 'tokens': [51348, 682, 264, 3071, 294, 264, 661, 1389, 437, 2011, 307, 700, 2113, 260, 45089, 293, 22854, 452, 2411, 64, 13, 51733], 'temperature': 0.0, 'avg_logprob': -0.14406821727752686, 'compression_ratio': 1.6758241758241759, 'no_speech_prob': 0.0667433887720108}, {'id': 211, 'seek': 127122, 'start': 1271.22, 'end': 1276.84, 'text': ' Linker says lib my .a does not have anything unresolved because it had foo and bar defined', 'tokens': [50364, 8466, 260, 1619, 22854, 452, 2411, 64, 775, 406, 362, 1340, 517, 495, 29110, 570, 309, 632, 726, 78, 293, 2159, 7642, 50645], 'temperature': 0.0, 'avg_logprob': -0.13299486896779278, 'compression_ratio': 1.7699530516431925, 'no_speech_prob': 0.09422075003385544}, {'id': 212, 'seek': 127122, 'start': 1276.84, 'end': 1280.46, 'text': ' and foo and bar are not the main functions which I care about.', 'tokens': [50645, 293, 726, 78, 293, 2159, 366, 406, 264, 2135, 6828, 597, 286, 1127, 466, 13, 50826], 'temperature': 0.0, 'avg_logprob': -0.13299486896779278, 'compression_ratio': 1.7699530516431925, 'no_speech_prob': 0.09422075003385544}, {'id': 213, 'seek': 127122, 'start': 1280.46, 'end': 1287.78, 'text': ' Then it went to my proc.c and my proc.c says foo and bar are external.', 'tokens': [50826, 1396, 309, 1437, 281, 452, 9510, 13, 66, 293, 452, 9510, 13, 66, 1619, 726, 78, 293, 2159, 366, 8320, 13, 51192], 'temperature': 0.0, 'avg_logprob': -0.13299486896779278, 'compression_ratio': 1.7699530516431925, 'no_speech_prob': 0.09422075003385544}, {'id': 214, 'seek': 127122, 'start': 1287.78, 'end': 1294.06, 'text': " But linker didn't remember the fact that prior objects defined it because if it has to remember", 'tokens': [51192, 583, 2113, 260, 994, 380, 1604, 264, 1186, 300, 4059, 6565, 7642, 309, 570, 498, 309, 575, 281, 1604, 51506], 'temperature': 0.0, 'avg_logprob': -0.13299486896779278, 'compression_ratio': 1.7699530516431925, 'no_speech_prob': 0.09422075003385544}, {'id': 215, 'seek': 127122, 'start': 1294.06, 'end': 1299.54, 'text': ' then it has to read all the things which were specified.', 'tokens': [51506, 550, 309, 575, 281, 1401, 439, 264, 721, 597, 645, 22206, 13, 51780], 'temperature': 0.0, 'avg_logprob': -0.13299486896779278, 'compression_ratio': 1.7699530516431925, 'no_speech_prob': 0.09422075003385544}, {'id': 216, 'seek': 129954, 'start': 1299.54, 'end': 1305.98, 'text': ' And then when my proc.c was compiled linker assumed that someone else after this will', 'tokens': [50364, 400, 550, 562, 452, 9510, 13, 66, 390, 36548, 2113, 260, 15895, 300, 1580, 1646, 934, 341, 486, 50686], 'temperature': 0.0, 'avg_logprob': -0.11517013953282283, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.014939037151634693}, {'id': 217, 'seek': 129954, 'start': 1305.98, 'end': 1311.26, 'text': ' provide me the definition but nothing else was there on the command line after that and', 'tokens': [50686, 2893, 385, 264, 7123, 457, 1825, 1646, 390, 456, 322, 264, 5622, 1622, 934, 300, 293, 50950], 'temperature': 0.0, 'avg_logprob': -0.11517013953282283, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.014939037151634693}, {'id': 218, 'seek': 129954, 'start': 1311.26, 'end': 1314.98, 'text': ' then it failed with unresolved reference.', 'tokens': [50950, 550, 309, 7612, 365, 517, 495, 29110, 6408, 13, 51136], 'temperature': 0.0, 'avg_logprob': -0.11517013953282283, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.014939037151634693}, {'id': 219, 'seek': 129954, 'start': 1314.98, 'end': 1316.6, 'text': ' Does that make sense?', 'tokens': [51136, 4402, 300, 652, 2020, 30, 51217], 'temperature': 0.0, 'avg_logprob': -0.11517013953282283, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.014939037151634693}, {'id': 220, 'seek': 129954, 'start': 1316.6, 'end': 1319.6599999999999, 'text': " So it's a lazy searching which is being done by linker.", 'tokens': [51217, 407, 309, 311, 257, 14847, 10808, 597, 307, 885, 1096, 538, 2113, 260, 13, 51370], 'temperature': 0.0, 'avg_logprob': -0.11517013953282283, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.014939037151634693}, {'id': 221, 'seek': 129954, 'start': 1319.6599999999999, 'end': 1321.8999999999999, 'text': ' So it will search only on demand.', 'tokens': [51370, 407, 309, 486, 3164, 787, 322, 4733, 13, 51482], 'temperature': 0.0, 'avg_logprob': -0.11517013953282283, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.014939037151634693}, {'id': 222, 'seek': 129954, 'start': 1321.8999999999999, 'end': 1327.78, 'text': ' So whenever it takes an object file it records all the undefined things and assumes that', 'tokens': [51482, 407, 5699, 309, 2516, 364, 2657, 3991, 309, 7724, 439, 264, 674, 5666, 2001, 721, 293, 37808, 300, 51776], 'temperature': 0.0, 'avg_logprob': -0.11517013953282283, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.014939037151634693}, {'id': 223, 'seek': 132778, 'start': 1328.02, 'end': 1332.42, 'text': ' subsequent things will define it.', 'tokens': [50376, 19962, 721, 486, 6964, 309, 13, 50596], 'temperature': 0.0, 'avg_logprob': -0.16494866539450254, 'compression_ratio': 1.6108374384236452, 'no_speech_prob': 0.08009828627109528}, {'id': 224, 'seek': 132778, 'start': 1332.42, 'end': 1337.82, 'text': ' So order of the arguments on the command line do matter for linker.', 'tokens': [50596, 407, 1668, 295, 264, 12869, 322, 264, 5622, 1622, 360, 1871, 337, 2113, 260, 13, 50866], 'temperature': 0.0, 'avg_logprob': -0.16494866539450254, 'compression_ratio': 1.6108374384236452, 'no_speech_prob': 0.08009828627109528}, {'id': 225, 'seek': 132778, 'start': 1337.82, 'end': 1346.26, 'text': ' In most cases it does not matter like in the typical Linux commands doing ls-l versus ls-l-a', 'tokens': [50866, 682, 881, 3331, 309, 775, 406, 1871, 411, 294, 264, 7476, 18734, 16901, 884, 287, 82, 12, 75, 5717, 287, 82, 12, 75, 12, 64, 51288], 'temperature': 0.0, 'avg_logprob': -0.16494866539450254, 'compression_ratio': 1.6108374384236452, 'no_speech_prob': 0.08009828627109528}, {'id': 226, 'seek': 132778, 'start': 1346.26, 'end': 1353.62, 'text': ' does not matter the order in which you specify the flags but for linker it does matter.', 'tokens': [51288, 775, 406, 1871, 264, 1668, 294, 597, 291, 16500, 264, 23265, 457, 337, 2113, 260, 309, 775, 1871, 13, 51656], 'temperature': 0.0, 'avg_logprob': -0.16494866539450254, 'compression_ratio': 1.6108374384236452, 'no_speech_prob': 0.08009828627109528}, {'id': 227, 'seek': 132778, 'start': 1353.62, 'end': 1357.42, 'text': ' Now what if there are circular dependencies?', 'tokens': [51656, 823, 437, 498, 456, 366, 16476, 36606, 30, 51846], 'temperature': 0.0, 'avg_logprob': -0.16494866539450254, 'compression_ratio': 1.6108374384236452, 'no_speech_prob': 0.08009828627109528}, {'id': 228, 'seek': 135742, 'start': 1357.42, 'end': 1367.42, 'text': ' So you have say linked list.c and you have tree.c and tree.c calls something in linked', 'tokens': [50364, 407, 291, 362, 584, 9408, 1329, 13, 66, 293, 291, 362, 4230, 13, 66, 293, 4230, 13, 66, 5498, 746, 294, 9408, 50864], 'temperature': 0.0, 'avg_logprob': -0.19653054384084848, 'compression_ratio': 1.693069306930693, 'no_speech_prob': 0.038253623992204666}, {'id': 229, 'seek': 135742, 'start': 1367.42, 'end': 1371.9, 'text': ' list.c and linked list.c calls something in tree.c.', 'tokens': [50864, 1329, 13, 66, 293, 9408, 1329, 13, 66, 5498, 746, 294, 4230, 13, 66, 13, 51088], 'temperature': 0.0, 'avg_logprob': -0.19653054384084848, 'compression_ratio': 1.693069306930693, 'no_speech_prob': 0.038253623992204666}, {'id': 230, 'seek': 135742, 'start': 1371.9, 'end': 1376.5, 'text': ' How will you solve that problem?', 'tokens': [51088, 1012, 486, 291, 5039, 300, 1154, 30, 51318], 'temperature': 0.0, 'avg_logprob': -0.19653054384084848, 'compression_ratio': 1.693069306930693, 'no_speech_prob': 0.038253623992204666}, {'id': 231, 'seek': 137650, 'start': 1376.58, 'end': 1390.1, 'text': " Okay but what if it's there?", 'tokens': [50368, 1033, 457, 437, 498, 309, 311, 456, 30, 51044], 'temperature': 0.0, 'avg_logprob': -0.19735960165659586, 'compression_ratio': 1.4154929577464788, 'no_speech_prob': 0.043153584003448486}, {'id': 232, 'seek': 137650, 'start': 1390.1, 'end': 1394.9, 'text': ' So the good software designing practices you should avoid putting circular dependencies', 'tokens': [51044, 407, 264, 665, 4722, 14685, 7525, 291, 820, 5042, 3372, 16476, 36606, 51284], 'temperature': 0.0, 'avg_logprob': -0.19735960165659586, 'compression_ratio': 1.4154929577464788, 'no_speech_prob': 0.043153584003448486}, {'id': 233, 'seek': 137650, 'start': 1394.9, 'end': 1396.62, 'text': ' between two libraries.', 'tokens': [51284, 1296, 732, 15148, 13, 51370], 'temperature': 0.0, 'avg_logprob': -0.19735960165659586, 'compression_ratio': 1.4154929577464788, 'no_speech_prob': 0.043153584003448486}, {'id': 234, 'seek': 137650, 'start': 1396.62, 'end': 1402.9, 'text': " So that's a design principle but what happens if it is there?", 'tokens': [51370, 407, 300, 311, 257, 1715, 8665, 457, 437, 2314, 498, 309, 307, 456, 30, 51684], 'temperature': 0.0, 'avg_logprob': -0.19735960165659586, 'compression_ratio': 1.4154929577464788, 'no_speech_prob': 0.043153584003448486}, {'id': 235, 'seek': 140290, 'start': 1403.3000000000002, 'end': 1408.1000000000001, 'text': ' See what is happening is linker is forcing you to specify a particular order.', 'tokens': [50384, 3008, 437, 307, 2737, 307, 2113, 260, 307, 19030, 291, 281, 16500, 257, 1729, 1668, 13, 50624], 'temperature': 0.0, 'avg_logprob': -0.13706936248361248, 'compression_ratio': 1.5869565217391304, 'no_speech_prob': 0.008966383524239063}, {'id': 236, 'seek': 140290, 'start': 1408.1000000000001, 'end': 1414.66, 'text': ' So if lip.c you put first then whatever is undefined in lip.c will get resolved by a', 'tokens': [50624, 407, 498, 8280, 13, 66, 291, 829, 700, 550, 2035, 307, 674, 5666, 2001, 294, 8280, 13, 66, 486, 483, 20772, 538, 257, 50952], 'temperature': 0.0, 'avg_logprob': -0.13706936248361248, 'compression_ratio': 1.5869565217391304, 'no_speech_prob': 0.008966383524239063}, {'id': 237, 'seek': 140290, 'start': 1414.66, 'end': 1418.18, 'text': ' library which is specified after that.', 'tokens': [50952, 6405, 597, 307, 22206, 934, 300, 13, 51128], 'temperature': 0.0, 'avg_logprob': -0.13706936248361248, 'compression_ratio': 1.5869565217391304, 'no_speech_prob': 0.008966383524239063}, {'id': 238, 'seek': 140290, 'start': 1418.18, 'end': 1428.8600000000001, 'text': ' But if subsequent library has some dependency on the prior thing it will not get resolved.', 'tokens': [51128, 583, 498, 19962, 6405, 575, 512, 33621, 322, 264, 4059, 551, 309, 486, 406, 483, 20772, 13, 51662], 'temperature': 0.0, 'avg_logprob': -0.13706936248361248, 'compression_ratio': 1.5869565217391304, 'no_speech_prob': 0.008966383524239063}, {'id': 239, 'seek': 142886, 'start': 1428.86, 'end': 1435.5, 'text': ' So essentially the trick is linker allows you to specify same library multiple times.', 'tokens': [50364, 407, 4476, 264, 4282, 307, 2113, 260, 4045, 291, 281, 16500, 912, 6405, 3866, 1413, 13, 50696], 'temperature': 0.0, 'avg_logprob': -0.140521738902632, 'compression_ratio': 1.5449735449735449, 'no_speech_prob': 0.014474168419837952}, {'id': 240, 'seek': 142886, 'start': 1435.5, 'end': 1441.26, 'text': " So it's not unnecessary that one library has to specify only once.", 'tokens': [50696, 407, 309, 311, 406, 19350, 300, 472, 6405, 575, 281, 16500, 787, 1564, 13, 50984], 'temperature': 0.0, 'avg_logprob': -0.140521738902632, 'compression_ratio': 1.5449735449735449, 'no_speech_prob': 0.014474168419837952}, {'id': 241, 'seek': 142886, 'start': 1441.26, 'end': 1451.9399999999998, 'text': ' So you can say gcc myproc.c –la –lb –la.', 'tokens': [50984, 407, 291, 393, 584, 290, 1914, 452, 4318, 66, 13, 66, 1662, 875, 1662, 75, 65, 1662, 875, 13, 51518], 'temperature': 0.0, 'avg_logprob': -0.140521738902632, 'compression_ratio': 1.5449735449735449, 'no_speech_prob': 0.014474168419837952}, {'id': 242, 'seek': 142886, 'start': 1451.9399999999998, 'end': 1458.26, 'text': ' So first when it encounters –la it will try to resolve whatever was undefined in myproc.c.', 'tokens': [51518, 407, 700, 562, 309, 26310, 1662, 875, 309, 486, 853, 281, 14151, 2035, 390, 674, 5666, 2001, 294, 452, 4318, 66, 13, 66, 13, 51834], 'temperature': 0.0, 'avg_logprob': -0.140521738902632, 'compression_ratio': 1.5449735449735449, 'no_speech_prob': 0.014474168419837952}, {'id': 243, 'seek': 145826, 'start': 1458.26, 'end': 1470.06, 'text': ' from that then whatever was undefined in lib.b will get resolved by the subsequent –la', 'tokens': [50364, 490, 300, 550, 2035, 390, 674, 5666, 2001, 294, 22854, 13, 65, 486, 483, 20772, 538, 264, 19962, 1662, 875, 50954], 'temperature': 0.0, 'avg_logprob': -0.2507747809092204, 'compression_ratio': 1.4263157894736842, 'no_speech_prob': 0.0062596919015049934}, {'id': 244, 'seek': 145826, 'start': 1470.06, 'end': 1472.3799999999999, 'text': ' which was specified.', 'tokens': [50954, 597, 390, 22206, 13, 51070], 'temperature': 0.0, 'avg_logprob': -0.2507747809092204, 'compression_ratio': 1.4263157894736842, 'no_speech_prob': 0.0062596919015049934}, {'id': 245, 'seek': 145826, 'start': 1472.3799999999999, 'end': 1475.34, 'text': " But having said that it's still a bad practice.", 'tokens': [51070, 583, 1419, 848, 300, 309, 311, 920, 257, 1578, 3124, 13, 51218], 'temperature': 0.0, 'avg_logprob': -0.2507747809092204, 'compression_ratio': 1.4263157894736842, 'no_speech_prob': 0.0062596919015049934}, {'id': 246, 'seek': 145826, 'start': 1475.34, 'end': 1477.06, 'text': " So don't do such things.", 'tokens': [51218, 407, 500, 380, 360, 1270, 721, 13, 51304], 'temperature': 0.0, 'avg_logprob': -0.2507747809092204, 'compression_ratio': 1.4263157894736842, 'no_speech_prob': 0.0062596919015049934}, {'id': 247, 'seek': 145826, 'start': 1477.06, 'end': 1483.14, 'text': " It's just that there is a workaround available if you have that for some specific reason", 'tokens': [51304, 467, 311, 445, 300, 456, 307, 257, 589, 25762, 2435, 498, 291, 362, 300, 337, 512, 2685, 1778, 51608], 'temperature': 0.0, 'avg_logprob': -0.2507747809092204, 'compression_ratio': 1.4263157894736842, 'no_speech_prob': 0.0062596919015049934}, {'id': 248, 'seek': 148314, 'start': 1483.14, 'end': 1489.3000000000002, 'text': ' where you cannot avoid circular dependence.', 'tokens': [50364, 689, 291, 2644, 5042, 16476, 31704, 13, 50672], 'temperature': 0.0, 'avg_logprob': -0.15697863607695609, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.1819261759519577}, {'id': 249, 'seek': 148314, 'start': 1489.3000000000002, 'end': 1495.2, 'text': ' Now some of the things which help you analyze archive files.', 'tokens': [50672, 823, 512, 295, 264, 721, 597, 854, 291, 12477, 23507, 7098, 13, 50967], 'temperature': 0.0, 'avg_logprob': -0.15697863607695609, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.1819261759519577}, {'id': 250, 'seek': 148314, 'start': 1495.2, 'end': 1504.0600000000002, 'text': ' So if you do aart of whatever library you have it lists all the objects which were present', 'tokens': [50967, 407, 498, 291, 360, 257, 446, 295, 2035, 6405, 291, 362, 309, 14511, 439, 264, 6565, 597, 645, 1974, 51410], 'temperature': 0.0, 'avg_logprob': -0.15697863607695609, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.1819261759519577}, {'id': 251, 'seek': 148314, 'start': 1504.0600000000002, 'end': 1505.0600000000002, 'text': ' in that.', 'tokens': [51410, 294, 300, 13, 51460], 'temperature': 0.0, 'avg_logprob': -0.15697863607695609, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.1819261759519577}, {'id': 252, 'seek': 148314, 'start': 1505.0600000000002, 'end': 1507.8600000000001, 'text': " So let's see what all is there in lip.c.", 'tokens': [51460, 407, 718, 311, 536, 437, 439, 307, 456, 294, 8280, 13, 66, 13, 51600], 'temperature': 0.0, 'avg_logprob': -0.15697863607695609, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.1819261759519577}, {'id': 253, 'seek': 150786, 'start': 1507.86, 'end': 1518.3799999999999, 'text': ' So if I do this see I can see there is something called as vprintf.so and blah blah blah.', 'tokens': [50364, 407, 498, 286, 360, 341, 536, 286, 393, 536, 456, 307, 746, 1219, 382, 371, 14030, 69, 13, 539, 293, 12288, 12288, 12288, 13, 50890], 'temperature': 0.0, 'avg_logprob': -0.18785756899986739, 'compression_ratio': 1.6306818181818181, 'no_speech_prob': 0.198852077126503}, {'id': 254, 'seek': 150786, 'start': 1518.3799999999999, 'end': 1519.74, 'text': ' So scanf.', 'tokens': [50890, 407, 11049, 69, 13, 50958], 'temperature': 0.0, 'avg_logprob': -0.18785756899986739, 'compression_ratio': 1.6306818181818181, 'no_speech_prob': 0.198852077126503}, {'id': 255, 'seek': 150786, 'start': 1519.74, 'end': 1525.58, 'text': ' So you can now know that scanf code was written in a separate source file than printf source', 'tokens': [50958, 407, 291, 393, 586, 458, 300, 11049, 69, 3089, 390, 3720, 294, 257, 4994, 4009, 3991, 813, 4482, 69, 4009, 51250], 'temperature': 0.0, 'avg_logprob': -0.18785756899986739, 'compression_ratio': 1.6306818181818181, 'no_speech_prob': 0.198852077126503}, {'id': 256, 'seek': 150786, 'start': 1525.58, 'end': 1527.34, 'text': ' code.', 'tokens': [51250, 3089, 13, 51338], 'temperature': 0.0, 'avg_logprob': -0.18785756899986739, 'compression_ratio': 1.6306818181818181, 'no_speech_prob': 0.198852077126503}, {'id': 257, 'seek': 150786, 'start': 1527.34, 'end': 1537.84, 'text': ' So aart command is listing all the objects which were part of the sample of the archive.', 'tokens': [51338, 407, 257, 446, 5622, 307, 22161, 439, 264, 6565, 597, 645, 644, 295, 264, 6889, 295, 264, 23507, 13, 51863], 'temperature': 0.0, 'avg_logprob': -0.18785756899986739, 'compression_ratio': 1.6306818181818181, 'no_speech_prob': 0.198852077126503}, {'id': 258, 'seek': 153784, 'start': 1537.84, 'end': 1542.6399999999999, 'text': ' You can list down all the symbols which were present in an archive using command called', 'tokens': [50364, 509, 393, 1329, 760, 439, 264, 16944, 597, 645, 1974, 294, 364, 23507, 1228, 5622, 1219, 50604], 'temperature': 0.0, 'avg_logprob': -0.13035364584489303, 'compression_ratio': 1.6770833333333333, 'no_speech_prob': 0.0017266254872083664}, {'id': 259, 'seek': 153784, 'start': 1542.6399999999999, 'end': 1543.6399999999999, 'text': ' nm.', 'tokens': [50604, 297, 76, 13, 50654], 'temperature': 0.0, 'avg_logprob': -0.13035364584489303, 'compression_ratio': 1.6770833333333333, 'no_speech_prob': 0.0017266254872083664}, {'id': 260, 'seek': 153784, 'start': 1543.6399999999999, 'end': 1547.3999999999999, 'text': ' Remember I told you there is a command called nm yesterday.', 'tokens': [50654, 5459, 286, 1907, 291, 456, 307, 257, 5622, 1219, 297, 76, 5186, 13, 50842], 'temperature': 0.0, 'avg_logprob': -0.13035364584489303, 'compression_ratio': 1.6770833333333333, 'no_speech_prob': 0.0017266254872083664}, {'id': 261, 'seek': 153784, 'start': 1547.3999999999999, 'end': 1555.24, 'text': " We didn't use it but you can use it on this.", 'tokens': [50842, 492, 994, 380, 764, 309, 457, 291, 393, 764, 309, 322, 341, 13, 51234], 'temperature': 0.0, 'avg_logprob': -0.13035364584489303, 'compression_ratio': 1.6770833333333333, 'no_speech_prob': 0.0017266254872083664}, {'id': 262, 'seek': 153784, 'start': 1555.24, 'end': 1557.3799999999999, 'text': ' So this is defining all the symbols.', 'tokens': [51234, 407, 341, 307, 17827, 439, 264, 16944, 13, 51341], 'temperature': 0.0, 'avg_logprob': -0.13035364584489303, 'compression_ratio': 1.6770833333333333, 'no_speech_prob': 0.0017266254872083664}, {'id': 263, 'seek': 153784, 'start': 1557.3799999999999, 'end': 1567.6799999999998, 'text': ' So for example you can say there will be a symbol for printf here or malloc for example.', 'tokens': [51341, 407, 337, 1365, 291, 393, 584, 456, 486, 312, 257, 5986, 337, 4482, 69, 510, 420, 16026, 905, 337, 1365, 13, 51856], 'temperature': 0.0, 'avg_logprob': -0.13035364584489303, 'compression_ratio': 1.6770833333333333, 'no_speech_prob': 0.0017266254872083664}, {'id': 264, 'seek': 156768, 'start': 1568.52, 'end': 1574.24, 'text': ' So all the symbols in the archive you can list using nm command.', 'tokens': [50406, 407, 439, 264, 16944, 294, 264, 23507, 291, 393, 1329, 1228, 297, 76, 5622, 13, 50692], 'temperature': 0.0, 'avg_logprob': -0.18463940551315527, 'compression_ratio': 1.56875, 'no_speech_prob': 0.0013425368815660477}, {'id': 265, 'seek': 156768, 'start': 1574.24, 'end': 1584.16, 'text': " Now for linker to work whenever an archive is given linker doesn't want to read the entire", 'tokens': [50692, 823, 337, 2113, 260, 281, 589, 5699, 364, 23507, 307, 2212, 2113, 260, 1177, 380, 528, 281, 1401, 264, 2302, 51188], 'temperature': 0.0, 'avg_logprob': -0.18463940551315527, 'compression_ratio': 1.56875, 'no_speech_prob': 0.0013425368815660477}, {'id': 266, 'seek': 156768, 'start': 1584.16, 'end': 1585.92, 'text': ' ELF file.', 'tokens': [51188, 14426, 37, 3991, 13, 51276], 'temperature': 0.0, 'avg_logprob': -0.18463940551315527, 'compression_ratio': 1.56875, 'no_speech_prob': 0.0013425368815660477}, {'id': 267, 'seek': 156768, 'start': 1585.92, 'end': 1592.04, 'text': ' You remember yesterday to be able to read the ELF file you had to read the ELF header', 'tokens': [51276, 509, 1604, 5186, 281, 312, 1075, 281, 1401, 264, 14426, 37, 3991, 291, 632, 281, 1401, 264, 14426, 37, 23117, 51582], 'temperature': 0.0, 'avg_logprob': -0.18463940551315527, 'compression_ratio': 1.56875, 'no_speech_prob': 0.0013425368815660477}, {'id': 268, 'seek': 159204, 'start': 1592.24, 'end': 1598.8799999999999, 'text': ' then you had to read get the section header table then you had to get to the symbol table.', 'tokens': [50374, 550, 291, 632, 281, 1401, 483, 264, 3541, 23117, 3199, 550, 291, 632, 281, 483, 281, 264, 5986, 3199, 13, 50706], 'temperature': 0.0, 'avg_logprob': -0.12166485239247807, 'compression_ratio': 1.5170068027210883, 'no_speech_prob': 0.039515458047389984}, {'id': 269, 'seek': 159204, 'start': 1598.8799999999999, 'end': 1603.68, 'text': ' So it takes time to be able to read an ELF file.', 'tokens': [50706, 407, 309, 2516, 565, 281, 312, 1075, 281, 1401, 364, 14426, 37, 3991, 13, 50946], 'temperature': 0.0, 'avg_logprob': -0.12166485239247807, 'compression_ratio': 1.5170068027210883, 'no_speech_prob': 0.039515458047389984}, {'id': 270, 'seek': 159204, 'start': 1603.68, 'end': 1614.76, 'text': ' So every archive has something called as an index which you can display using nm-s.', 'tokens': [50946, 407, 633, 23507, 575, 746, 1219, 382, 364, 8186, 597, 291, 393, 4674, 1228, 297, 76, 12, 82, 13, 51500], 'temperature': 0.0, 'avg_logprob': -0.12166485239247807, 'compression_ratio': 1.5170068027210883, 'no_speech_prob': 0.039515458047389984}, {'id': 271, 'seek': 161476, 'start': 1614.76, 'end': 1623.6, 'text': ' So index is simply saying which symbol is defined in which object file.', 'tokens': [50364, 407, 8186, 307, 2935, 1566, 597, 5986, 307, 7642, 294, 597, 2657, 3991, 13, 50806], 'temperature': 0.0, 'avg_logprob': -0.16938398101113059, 'compression_ratio': 1.671875, 'no_speech_prob': 0.009695839136838913}, {'id': 272, 'seek': 161476, 'start': 1623.6, 'end': 1629.2, 'text': ' So it says that init-first.o defines libc init-first.', 'tokens': [50806, 407, 309, 1619, 300, 3157, 12, 29581, 13, 78, 23122, 22854, 66, 3157, 12, 29581, 13, 51086], 'temperature': 0.0, 'avg_logprob': -0.16938398101113059, 'compression_ratio': 1.671875, 'no_speech_prob': 0.009695839136838913}, {'id': 273, 'seek': 161476, 'start': 1629.2, 'end': 1634.84, 'text': " So now whenever linker is using archive it doesn't have to read all the ELFs it simply", 'tokens': [51086, 407, 586, 5699, 2113, 260, 307, 1228, 23507, 309, 1177, 380, 362, 281, 1401, 439, 264, 14426, 37, 82, 309, 2935, 51368], 'temperature': 0.0, 'avg_logprob': -0.16938398101113059, 'compression_ratio': 1.671875, 'no_speech_prob': 0.009695839136838913}, {'id': 274, 'seek': 161476, 'start': 1634.84, 'end': 1642.36, 'text': ' reads the archive index to figure out whatever is unresolved is it getting satisfied by init-first.o', 'tokens': [51368, 15700, 264, 23507, 8186, 281, 2573, 484, 2035, 307, 517, 495, 29110, 307, 309, 1242, 11239, 538, 3157, 12, 29581, 13, 78, 51744], 'temperature': 0.0, 'avg_logprob': -0.16938398101113059, 'compression_ratio': 1.671875, 'no_speech_prob': 0.009695839136838913}, {'id': 275, 'seek': 161476, 'start': 1642.36, 'end': 1643.96, 'text': ' or not.', 'tokens': [51744, 420, 406, 13, 51824], 'temperature': 0.0, 'avg_logprob': -0.16938398101113059, 'compression_ratio': 1.671875, 'no_speech_prob': 0.009695839136838913}, {'id': 276, 'seek': 164396, 'start': 1643.96, 'end': 1650.26, 'text': ' But if so then it will read init-first.o and make it part of the linking process.', 'tokens': [50364, 583, 498, 370, 550, 309, 486, 1401, 3157, 12, 29581, 13, 78, 293, 652, 309, 644, 295, 264, 25775, 1399, 13, 50679], 'temperature': 0.0, 'avg_logprob': -0.18239688873291016, 'compression_ratio': 1.5953488372093023, 'no_speech_prob': 0.0022117614280432463}, {'id': 277, 'seek': 164396, 'start': 1650.26, 'end': 1652.44, 'text': ' Does that make sense?', 'tokens': [50679, 4402, 300, 652, 2020, 30, 50788], 'temperature': 0.0, 'avg_logprob': -0.18239688873291016, 'compression_ratio': 1.5953488372093023, 'no_speech_prob': 0.0022117614280432463}, {'id': 278, 'seek': 164396, 'start': 1652.44, 'end': 1655.04, 'text': ' So these are some of the things which are present in the archive.', 'tokens': [50788, 407, 613, 366, 512, 295, 264, 721, 597, 366, 1974, 294, 264, 23507, 13, 50918], 'temperature': 0.0, 'avg_logprob': -0.18239688873291016, 'compression_ratio': 1.5953488372093023, 'no_speech_prob': 0.0022117614280432463}, {'id': 279, 'seek': 164396, 'start': 1655.04, 'end': 1661.28, 'text': ' I am not going to go into details of how archive itself stores all the ELFs as in what is the', 'tokens': [50918, 286, 669, 406, 516, 281, 352, 666, 4365, 295, 577, 23507, 2564, 9512, 439, 264, 14426, 37, 82, 382, 294, 437, 307, 264, 51230], 'temperature': 0.0, 'avg_logprob': -0.18239688873291016, 'compression_ratio': 1.5953488372093023, 'no_speech_prob': 0.0022117614280432463}, {'id': 280, 'seek': 164396, 'start': 1661.28, 'end': 1664.8, 'text': ' binary format of the archive.', 'tokens': [51230, 17434, 7877, 295, 264, 23507, 13, 51406], 'temperature': 0.0, 'avg_logprob': -0.18239688873291016, 'compression_ratio': 1.5953488372093023, 'no_speech_prob': 0.0022117614280432463}, {'id': 281, 'seek': 164396, 'start': 1664.8, 'end': 1669.8400000000001, 'text': ' Yes.', 'tokens': [51406, 1079, 13, 51658], 'temperature': 0.0, 'avg_logprob': -0.18239688873291016, 'compression_ratio': 1.5953488372093023, 'no_speech_prob': 0.0022117614280432463}, {'id': 282, 'seek': 164396, 'start': 1669.8400000000001, 'end': 1673.24, 'text': ' So the question is is libc a static library?', 'tokens': [51658, 407, 264, 1168, 307, 307, 22854, 66, 257, 13437, 6405, 30, 51828], 'temperature': 0.0, 'avg_logprob': -0.18239688873291016, 'compression_ratio': 1.5953488372093023, 'no_speech_prob': 0.0022117614280432463}, {'id': 283, 'seek': 167324, 'start': 1673.24, 'end': 1676.08, 'text': ' So libc comes in both form static and dynamic.', 'tokens': [50364, 407, 22854, 66, 1487, 294, 1293, 1254, 13437, 293, 8546, 13, 50506], 'temperature': 0.0, 'avg_logprob': -0.15328338020726254, 'compression_ratio': 1.6306306306306306, 'no_speech_prob': 0.007570777554064989}, {'id': 284, 'seek': 167324, 'start': 1676.08, 'end': 1679.04, 'text': ' What I am showing here is the static version of it.', 'tokens': [50506, 708, 286, 669, 4099, 510, 307, 264, 13437, 3037, 295, 309, 13, 50654], 'temperature': 0.0, 'avg_logprob': -0.15328338020726254, 'compression_ratio': 1.6306306306306306, 'no_speech_prob': 0.007570777554064989}, {'id': 285, 'seek': 167324, 'start': 1679.04, 'end': 1685.22, 'text': ' But in most common cases what whenever you are compiling your programs etc by default', 'tokens': [50654, 583, 294, 881, 2689, 3331, 437, 5699, 291, 366, 715, 4883, 428, 4268, 5183, 538, 7576, 50963], 'temperature': 0.0, 'avg_logprob': -0.15328338020726254, 'compression_ratio': 1.6306306306306306, 'no_speech_prob': 0.007570777554064989}, {'id': 286, 'seek': 167324, 'start': 1685.22, 'end': 1689.64, 'text': ' the shared version of the libc is used.', 'tokens': [50963, 264, 5507, 3037, 295, 264, 22854, 66, 307, 1143, 13, 51184], 'temperature': 0.0, 'avg_logprob': -0.15328338020726254, 'compression_ratio': 1.6306306306306306, 'no_speech_prob': 0.007570777554064989}, {'id': 287, 'seek': 167324, 'start': 1689.64, 'end': 1693.4, 'text': " And we will get into details of what is a shared library those who don't know what it", 'tokens': [51184, 400, 321, 486, 483, 666, 4365, 295, 437, 307, 257, 5507, 6405, 729, 567, 500, 380, 458, 437, 309, 51372], 'temperature': 0.0, 'avg_logprob': -0.15328338020726254, 'compression_ratio': 1.6306306306306306, 'no_speech_prob': 0.007570777554064989}, {'id': 288, 'seek': 167324, 'start': 1693.4, 'end': 1696.1200000000001, 'text': ' is.', 'tokens': [51372, 307, 13, 51508], 'temperature': 0.0, 'avg_logprob': -0.15328338020726254, 'compression_ratio': 1.6306306306306306, 'no_speech_prob': 0.007570777554064989}, {'id': 289, 'seek': 167324, 'start': 1696.1200000000001, 'end': 1699.72, 'text': ' But you can specify something called as static.', 'tokens': [51508, 583, 291, 393, 16500, 746, 1219, 382, 13437, 13, 51688], 'temperature': 0.0, 'avg_logprob': -0.15328338020726254, 'compression_ratio': 1.6306306306306306, 'no_speech_prob': 0.007570777554064989}, {'id': 290, 'seek': 169972, 'start': 1699.72, 'end': 1712.52, 'text': ' So there is a command line option called dash static to the GCC to link against libc statically.', 'tokens': [50364, 407, 456, 307, 257, 5622, 1622, 3614, 1219, 8240, 13437, 281, 264, 460, 11717, 281, 2113, 1970, 22854, 66, 2219, 984, 13, 51004], 'temperature': 0.0, 'avg_logprob': -0.2519874083690154, 'compression_ratio': 1.2564102564102564, 'no_speech_prob': 0.46554088592529297}, {'id': 291, 'seek': 169972, 'start': 1712.52, 'end': 1715.92, 'text': ' Any questions so far on things which we have seen?', 'tokens': [51004, 2639, 1651, 370, 1400, 322, 721, 597, 321, 362, 1612, 30, 51174], 'temperature': 0.0, 'avg_logprob': -0.2519874083690154, 'compression_ratio': 1.2564102564102564, 'no_speech_prob': 0.46554088592529297}, {'id': 292, 'seek': 171592, 'start': 1715.92, 'end': 1737.0800000000002, 'text': ' We will get into details of how dynamic libraries work.', 'tokens': [50364, 492, 486, 483, 666, 4365, 295, 577, 8546, 15148, 589, 13, 51422], 'temperature': 0.0, 'avg_logprob': -0.1469868696652926, 'compression_ratio': 1.2045454545454546, 'no_speech_prob': 0.06350711733102798}, {'id': 293, 'seek': 171592, 'start': 1737.0800000000002, 'end': 1742.1200000000001, 'text': ' So what are the disadvantages of static libraries?', 'tokens': [51422, 407, 437, 366, 264, 37431, 295, 13437, 15148, 30, 51674], 'temperature': 0.0, 'avg_logprob': -0.1469868696652926, 'compression_ratio': 1.2045454545454546, 'no_speech_prob': 0.06350711733102798}, {'id': 294, 'seek': 174212, 'start': 1742.2399999999998, 'end': 1748.56, 'text': ' Now one of the things is you have to remember is after you are done linking a static library', 'tokens': [50370, 823, 472, 295, 264, 721, 307, 291, 362, 281, 1604, 307, 934, 291, 366, 1096, 25775, 257, 13437, 6405, 50686], 'temperature': 0.0, 'avg_logprob': -0.2088611814710829, 'compression_ratio': 1.4179104477611941, 'no_speech_prob': 0.6706936359405518}, {'id': 295, 'seek': 174212, 'start': 1748.56, 'end': 1756.6799999999998, 'text': ' the executable which is produced the code from the library was actually part of your', 'tokens': [50686, 264, 7568, 712, 597, 307, 7126, 264, 3089, 490, 264, 6405, 390, 767, 644, 295, 428, 51092], 'temperature': 0.0, 'avg_logprob': -0.2088611814710829, 'compression_ratio': 1.4179104477611941, 'no_speech_prob': 0.6706936359405518}, {'id': 296, 'seek': 174212, 'start': 1756.6799999999998, 'end': 1758.4799999999998, 'text': ' application.', 'tokens': [51092, 3861, 13, 51182], 'temperature': 0.0, 'avg_logprob': -0.2088611814710829, 'compression_ratio': 1.4179104477611941, 'no_speech_prob': 0.6706936359405518}, {'id': 297, 'seek': 175848, 'start': 1758.48, 'end': 1778.52, 'text': ' So to see that let us say so I have this mylib.a.', 'tokens': [50364, 407, 281, 536, 300, 718, 505, 584, 370, 286, 362, 341, 452, 38270, 13, 64, 13, 51366], 'temperature': 0.0, 'avg_logprob': -0.285455060005188, 'compression_ratio': 0.8909090909090909, 'no_speech_prob': 0.4439976215362549}, {'id': 298, 'seek': 177852, 'start': 1778.56, 'end': 1782.16, 'text': ' So it defines some symbols.', 'tokens': [50366, 407, 309, 23122, 512, 16944, 13, 50546], 'temperature': 0.0, 'avg_logprob': -0.6956510897035952, 'compression_ratio': 1.0, 'no_speech_prob': 0.8097213506698608}, {'id': 299, 'seek': 177852, 'start': 1782.16, 'end': 1784.72, 'text': ' Let me actually create new one.', 'tokens': [50546, 961, 385, 767, 1884, 777, 472, 13, 50674], 'temperature': 0.0, 'avg_logprob': -0.6956510897035952, 'compression_ratio': 1.0, 'no_speech_prob': 0.8097213506698608}, {'id': 300, 'seek': 177852, 'start': 1784.72, 'end': 1799.52, 'text': ' Why is this so slow?', 'tokens': [50674, 1545, 307, 341, 370, 2964, 30, 51414], 'temperature': 0.0, 'avg_logprob': -0.6956510897035952, 'compression_ratio': 1.0, 'no_speech_prob': 0.8097213506698608}, {'id': 301, 'seek': 185952, 'start': 1859.52, 'end': 1878.76, 'text': ' Is someone running some cron jobs on these machines user 9, user 2, user 1?', 'tokens': [50364, 1119, 1580, 2614, 512, 941, 266, 4782, 322, 613, 8379, 4195, 1722, 11, 4195, 568, 11, 4195, 502, 30, 51326], 'temperature': 0.0, 'avg_logprob': -0.41599701390121924, 'compression_ratio': 1.211111111111111, 'no_speech_prob': 0.33104777336120605}, {'id': 302, 'seek': 185952, 'start': 1878.76, 'end': 1886.92, 'text': ' Do you know are these users here?', 'tokens': [51326, 1144, 291, 458, 366, 613, 5022, 510, 30, 51734], 'temperature': 0.0, 'avg_logprob': -0.41599701390121924, 'compression_ratio': 1.211111111111111, 'no_speech_prob': 0.33104777336120605}, {'id': 303, 'seek': 188692, 'start': 1886.92, 'end': 1905.92, 'text': ' It has slowed down the machine a lot anyways.', 'tokens': [50364, 467, 575, 32057, 760, 264, 3479, 257, 688, 13448, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.7300231640155499, 'compression_ratio': 0.8490566037735849, 'no_speech_prob': 0.8256181478500366}, {'id': 304, 'seek': 197692, 'start': 1976.92, 'end': 2005.92, 'text': ' So here I have created a program with simply.', 'tokens': [50364, 407, 510, 286, 362, 2942, 257, 1461, 365, 2935, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.623840468270438, 'compression_ratio': 0.8490566037735849, 'no_speech_prob': 0.9740216135978699}, {'id': 305, 'seek': 212592, 'start': 2125.92, 'end': 2135.44, 'text': ' So here I have code which was essentially doing so unfortunately the machine is has', 'tokens': [50364, 407, 510, 286, 362, 3089, 597, 390, 4476, 884, 370, 7015, 264, 3479, 307, 575, 50840], 'temperature': 0.0, 'avg_logprob': -0.166104861668178, 'compression_ratio': 1.5616438356164384, 'no_speech_prob': 0.002180580049753189}, {'id': 306, 'seek': 212592, 'start': 2135.44, 'end': 2137.64, 'text': ' become really slow.', 'tokens': [50840, 1813, 534, 2964, 13, 50950], 'temperature': 0.0, 'avg_logprob': -0.166104861668178, 'compression_ratio': 1.5616438356164384, 'no_speech_prob': 0.002180580049753189}, {'id': 307, 'seek': 212592, 'start': 2137.64, 'end': 2143.76, 'text': ' So there is some client code which calls function foo and then there is some sample.c which', 'tokens': [50950, 407, 456, 307, 512, 6423, 3089, 597, 5498, 2445, 726, 78, 293, 550, 456, 307, 512, 6889, 13, 66, 597, 51256], 'temperature': 0.0, 'avg_logprob': -0.166104861668178, 'compression_ratio': 1.5616438356164384, 'no_speech_prob': 0.002180580049753189}, {'id': 308, 'seek': 212592, 'start': 2143.76, 'end': 2146.8, 'text': ' I have created a static library.', 'tokens': [51256, 286, 362, 2942, 257, 13437, 6405, 13, 51408], 'temperature': 0.0, 'avg_logprob': -0.166104861668178, 'compression_ratio': 1.5616438356164384, 'no_speech_prob': 0.002180580049753189}, {'id': 309, 'seek': 214680, 'start': 2146.8, 'end': 2156.6800000000003, 'text': ' Now if you look at the code which is present in a.out you will actually see the foo is', 'tokens': [50364, 823, 498, 291, 574, 412, 264, 3089, 597, 307, 1974, 294, 257, 13, 346, 291, 486, 767, 536, 264, 726, 78, 307, 50858], 'temperature': 0.0, 'avg_logprob': -0.11205315877156086, 'compression_ratio': 1.8087431693989071, 'no_speech_prob': 0.018239794299006462}, {'id': 310, 'seek': 214680, 'start': 2156.6800000000003, 'end': 2159.4, 'text': ' also part of the same executable.', 'tokens': [50858, 611, 644, 295, 264, 912, 7568, 712, 13, 50994], 'temperature': 0.0, 'avg_logprob': -0.11205315877156086, 'compression_ratio': 1.8087431693989071, 'no_speech_prob': 0.018239794299006462}, {'id': 311, 'seek': 214680, 'start': 2159.4, 'end': 2167.84, 'text': ' That means what linker did when it created the after linking the created the executable', 'tokens': [50994, 663, 1355, 437, 2113, 260, 630, 562, 309, 2942, 264, 934, 25775, 264, 2942, 264, 7568, 712, 51416], 'temperature': 0.0, 'avg_logprob': -0.11205315877156086, 'compression_ratio': 1.8087431693989071, 'no_speech_prob': 0.018239794299006462}, {'id': 312, 'seek': 214680, 'start': 2167.84, 'end': 2173.28, 'text': ' all the things which were present in the static libraries which were needed were also pulled', 'tokens': [51416, 439, 264, 721, 597, 645, 1974, 294, 264, 13437, 15148, 597, 645, 2978, 645, 611, 7373, 51688], 'temperature': 0.0, 'avg_logprob': -0.11205315877156086, 'compression_ratio': 1.8087431693989071, 'no_speech_prob': 0.018239794299006462}, {'id': 313, 'seek': 214680, 'start': 2173.28, 'end': 2175.9, 'text': ' in as part of the executable.', 'tokens': [51688, 294, 382, 644, 295, 264, 7568, 712, 13, 51819], 'temperature': 0.0, 'avg_logprob': -0.11205315877156086, 'compression_ratio': 1.8087431693989071, 'no_speech_prob': 0.018239794299006462}, {'id': 314, 'seek': 217590, 'start': 2175.9, 'end': 2182.1800000000003, 'text': ' So the executable does not have any dependency post creation on the library.', 'tokens': [50364, 407, 264, 7568, 712, 775, 406, 362, 604, 33621, 2183, 8016, 322, 264, 6405, 13, 50678], 'temperature': 0.0, 'avg_logprob': -0.1603419475066356, 'compression_ratio': 1.725, 'no_speech_prob': 0.006085231434553862}, {'id': 315, 'seek': 217590, 'start': 2182.1800000000003, 'end': 2187.9, 'text': ' That is why it is called a static library because the dependencies results statically.', 'tokens': [50678, 663, 307, 983, 309, 307, 1219, 257, 13437, 6405, 570, 264, 36606, 3542, 2219, 984, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.1603419475066356, 'compression_ratio': 1.725, 'no_speech_prob': 0.006085231434553862}, {'id': 316, 'seek': 217590, 'start': 2187.9, 'end': 2196.58, 'text': ' Now one of the problems is for common libraries like libc every code will have I mean if you', 'tokens': [50964, 823, 472, 295, 264, 2740, 307, 337, 2689, 15148, 411, 22854, 66, 633, 3089, 486, 362, 286, 914, 498, 291, 51398], 'temperature': 0.0, 'avg_logprob': -0.1603419475066356, 'compression_ratio': 1.725, 'no_speech_prob': 0.006085231434553862}, {'id': 317, 'seek': 217590, 'start': 2196.58, 'end': 2203.62, 'text': ' link statically against a library like libc every executable which you will produce will', 'tokens': [51398, 2113, 2219, 984, 1970, 257, 6405, 411, 22854, 66, 633, 7568, 712, 597, 291, 486, 5258, 486, 51750], 'temperature': 0.0, 'avg_logprob': -0.1603419475066356, 'compression_ratio': 1.725, 'no_speech_prob': 0.006085231434553862}, {'id': 318, 'seek': 220362, 'start': 2203.62, 'end': 2208.6, 'text': ' have code for printf copied into it.', 'tokens': [50364, 362, 3089, 337, 4482, 69, 25365, 666, 309, 13, 50613], 'temperature': 0.0, 'avg_logprob': -0.2090691972052914, 'compression_ratio': 1.6384976525821595, 'no_speech_prob': 0.2873772084712982}, {'id': 319, 'seek': 220362, 'start': 2208.6, 'end': 2216.46, 'text': ' So it will occupy lot of space on the disk and everyone will have a copy of printf code', 'tokens': [50613, 407, 309, 486, 30645, 688, 295, 1901, 322, 264, 12355, 293, 1518, 486, 362, 257, 5055, 295, 4482, 69, 3089, 51006], 'temperature': 0.0, 'avg_logprob': -0.2090691972052914, 'compression_ratio': 1.6384976525821595, 'no_speech_prob': 0.2873772084712982}, {'id': 320, 'seek': 220362, 'start': 2216.46, 'end': 2219.6, 'text': ' which may or may not be the best alternative.', 'tokens': [51006, 597, 815, 420, 815, 406, 312, 264, 1151, 8535, 13, 51163], 'temperature': 0.0, 'avg_logprob': -0.2090691972052914, 'compression_ratio': 1.6384976525821595, 'no_speech_prob': 0.2873772084712982}, {'id': 321, 'seek': 220362, 'start': 2219.6, 'end': 2225.3199999999997, 'text': ' Furthermore the biggest problem is let us say there is some bug fix which is done in', 'tokens': [51163, 23999, 264, 3880, 1154, 307, 718, 505, 584, 456, 307, 512, 7426, 3191, 597, 307, 1096, 294, 51449], 'temperature': 0.0, 'avg_logprob': -0.2090691972052914, 'compression_ratio': 1.6384976525821595, 'no_speech_prob': 0.2873772084712982}, {'id': 322, 'seek': 220362, 'start': 2225.3199999999997, 'end': 2230.7999999999997, 'text': ' a static library then every user needs to re link their application with the updated', 'tokens': [51449, 257, 13437, 6405, 550, 633, 4195, 2203, 281, 319, 2113, 641, 3861, 365, 264, 10588, 51723], 'temperature': 0.0, 'avg_logprob': -0.2090691972052914, 'compression_ratio': 1.6384976525821595, 'no_speech_prob': 0.2873772084712982}, {'id': 323, 'seek': 220362, 'start': 2230.7999999999997, 'end': 2231.7999999999997, 'text': ' library.', 'tokens': [51723, 6405, 13, 51773], 'temperature': 0.0, 'avg_logprob': -0.2090691972052914, 'compression_ratio': 1.6384976525821595, 'no_speech_prob': 0.2873772084712982}, {'id': 324, 'seek': 223180, 'start': 2231.8, 'end': 2237.04, 'text': ' For example let us say you had distributed your data structure library to your friend', 'tokens': [50364, 1171, 1365, 718, 505, 584, 291, 632, 12631, 428, 1412, 3877, 6405, 281, 428, 1277, 50626], 'temperature': 0.0, 'avg_logprob': -0.1818523406982422, 'compression_ratio': 1.6592178770949721, 'no_speech_prob': 0.18169257044792175}, {'id': 325, 'seek': 223180, 'start': 2237.04, 'end': 2244.2000000000003, 'text': ' and he started using it entire college started using it and then you realize that there is', 'tokens': [50626, 293, 415, 1409, 1228, 309, 2302, 3859, 1409, 1228, 309, 293, 550, 291, 4325, 300, 456, 307, 50984], 'temperature': 0.0, 'avg_logprob': -0.1818523406982422, 'compression_ratio': 1.6592178770949721, 'no_speech_prob': 0.18169257044792175}, {'id': 326, 'seek': 223180, 'start': 2244.2000000000003, 'end': 2246.7200000000003, 'text': ' some bug in your tree code.', 'tokens': [50984, 512, 7426, 294, 428, 4230, 3089, 13, 51110], 'temperature': 0.0, 'avg_logprob': -0.1818523406982422, 'compression_ratio': 1.6592178770949721, 'no_speech_prob': 0.18169257044792175}, {'id': 327, 'seek': 223180, 'start': 2246.7200000000003, 'end': 2249.84, 'text': ' So you have to redistribute your library.', 'tokens': [51110, 407, 291, 362, 281, 36198, 2024, 1169, 428, 6405, 13, 51266], 'temperature': 0.0, 'avg_logprob': -0.1818523406982422, 'compression_ratio': 1.6592178770949721, 'no_speech_prob': 0.18169257044792175}, {'id': 328, 'seek': 223180, 'start': 2249.84, 'end': 2254.92, 'text': ' Now simply placing that library is not sufficient.', 'tokens': [51266, 823, 2935, 17221, 300, 6405, 307, 406, 11563, 13, 51520], 'temperature': 0.0, 'avg_logprob': -0.1818523406982422, 'compression_ratio': 1.6592178770949721, 'no_speech_prob': 0.18169257044792175}, {'id': 329, 'seek': 225492, 'start': 2254.92, 'end': 2263.28, 'text': ' Every user needs to rebuild their application to take the updated fix which you have done.', 'tokens': [50364, 2048, 4195, 2203, 281, 16877, 641, 3861, 281, 747, 264, 10588, 3191, 597, 291, 362, 1096, 13, 50782], 'temperature': 0.0, 'avg_logprob': -0.12795380542152807, 'compression_ratio': 1.509433962264151, 'no_speech_prob': 0.3658354580402374}, {'id': 330, 'seek': 225492, 'start': 2263.28, 'end': 2271.9, 'text': ' Now imagine every time some bug is fixed in libc and every program in the universe needs', 'tokens': [50782, 823, 3811, 633, 565, 512, 7426, 307, 6806, 294, 22854, 66, 293, 633, 1461, 294, 264, 6445, 2203, 51213], 'temperature': 0.0, 'avg_logprob': -0.12795380542152807, 'compression_ratio': 1.509433962264151, 'no_speech_prob': 0.3658354580402374}, {'id': 331, 'seek': 225492, 'start': 2271.9, 'end': 2277.88, 'text': ' to be recompiled then that is going to be a messy situation.', 'tokens': [51213, 281, 312, 48000, 7292, 550, 300, 307, 516, 281, 312, 257, 16191, 2590, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.12795380542152807, 'compression_ratio': 1.509433962264151, 'no_speech_prob': 0.3658354580402374}, {'id': 332, 'seek': 227788, 'start': 2277.88, 'end': 2285.28, 'text': ' That is why static libraries have a problem with respect to distribution and updates which', 'tokens': [50364, 663, 307, 983, 13437, 15148, 362, 257, 1154, 365, 3104, 281, 7316, 293, 9205, 597, 50734], 'temperature': 0.0, 'avg_logprob': -0.19679814074412885, 'compression_ratio': 1.5896226415094339, 'no_speech_prob': 0.2998311519622803}, {'id': 333, 'seek': 227788, 'start': 2285.28, 'end': 2290.48, 'text': ' the library author may want to give to the clients.', 'tokens': [50734, 264, 6405, 3793, 815, 528, 281, 976, 281, 264, 6982, 13, 50994], 'temperature': 0.0, 'avg_logprob': -0.19679814074412885, 'compression_ratio': 1.5896226415094339, 'no_speech_prob': 0.2998311519622803}, {'id': 334, 'seek': 227788, 'start': 2290.48, 'end': 2296.04, 'text': ' And how to overcome both of these fundamental things so shared libraries will help us solve', 'tokens': [50994, 400, 577, 281, 10473, 1293, 295, 613, 8088, 721, 370, 5507, 15148, 486, 854, 505, 5039, 51272], 'temperature': 0.0, 'avg_logprob': -0.19679814074412885, 'compression_ratio': 1.5896226415094339, 'no_speech_prob': 0.2998311519622803}, {'id': 335, 'seek': 227788, 'start': 2296.04, 'end': 2297.04, 'text': ' this.', 'tokens': [51272, 341, 13, 51322], 'temperature': 0.0, 'avg_logprob': -0.19679814074412885, 'compression_ratio': 1.5896226415094339, 'no_speech_prob': 0.2998311519622803}, {'id': 336, 'seek': 227788, 'start': 2297.04, 'end': 2299.84, 'text': ' We will see them a bit later today.', 'tokens': [51322, 492, 486, 536, 552, 257, 857, 1780, 965, 13, 51462], 'temperature': 0.0, 'avg_logprob': -0.19679814074412885, 'compression_ratio': 1.5896226415094339, 'no_speech_prob': 0.2998311519622803}, {'id': 337, 'seek': 227788, 'start': 2299.84, 'end': 2301.36, 'text': ' But is it clear?', 'tokens': [51462, 583, 307, 309, 1850, 30, 51538], 'temperature': 0.0, 'avg_logprob': -0.19679814074412885, 'compression_ratio': 1.5896226415094339, 'no_speech_prob': 0.2998311519622803}, {'id': 338, 'seek': 227788, 'start': 2301.36, 'end': 2304.8, 'text': ' So we saw how static libraries are created.', 'tokens': [51538, 407, 321, 1866, 577, 13437, 15148, 366, 2942, 13, 51710], 'temperature': 0.0, 'avg_logprob': -0.19679814074412885, 'compression_ratio': 1.5896226415094339, 'no_speech_prob': 0.2998311519622803}, {'id': 339, 'seek': 230480, 'start': 2304.8, 'end': 2311.28, 'text': ' We saw how linker is kind of bit lazy in not opening up all the object files but taking', 'tokens': [50364, 492, 1866, 577, 2113, 260, 307, 733, 295, 857, 14847, 294, 406, 5193, 493, 439, 264, 2657, 7098, 457, 1940, 50688], 'temperature': 0.0, 'avg_logprob': -0.12424056831447558, 'compression_ratio': 1.646788990825688, 'no_speech_prob': 0.16851554811000824}, {'id': 340, 'seek': 230480, 'start': 2311.28, 'end': 2317.1200000000003, 'text': ' only things which are defined and undefined and using that information to figure out which', 'tokens': [50688, 787, 721, 597, 366, 7642, 293, 674, 5666, 2001, 293, 1228, 300, 1589, 281, 2573, 484, 597, 50980], 'temperature': 0.0, 'avg_logprob': -0.12424056831447558, 'compression_ratio': 1.646788990825688, 'no_speech_prob': 0.16851554811000824}, {'id': 341, 'seek': 230480, 'start': 2317.1200000000003, 'end': 2320.88, 'text': ' all object files to actually pull in from the archives.', 'tokens': [50980, 439, 2657, 7098, 281, 767, 2235, 294, 490, 264, 25607, 13, 51168], 'temperature': 0.0, 'avg_logprob': -0.12424056831447558, 'compression_ratio': 1.646788990825688, 'no_speech_prob': 0.16851554811000824}, {'id': 342, 'seek': 230480, 'start': 2320.88, 'end': 2327.78, 'text': ' And that requires you to specify command line and specific order.', 'tokens': [51168, 400, 300, 7029, 291, 281, 16500, 5622, 1622, 293, 2685, 1668, 13, 51513], 'temperature': 0.0, 'avg_logprob': -0.12424056831447558, 'compression_ratio': 1.646788990825688, 'no_speech_prob': 0.16851554811000824}, {'id': 343, 'seek': 230480, 'start': 2327.78, 'end': 2332.6800000000003, 'text': ' So if you look at what is happening in the linker as such.', 'tokens': [51513, 407, 498, 291, 574, 412, 437, 307, 2737, 294, 264, 2113, 260, 382, 1270, 13, 51758], 'temperature': 0.0, 'avg_logprob': -0.12424056831447558, 'compression_ratio': 1.646788990825688, 'no_speech_prob': 0.16851554811000824}, {'id': 344, 'seek': 233268, 'start': 2332.72, 'end': 2336.08, 'text': ' So in nutshell linker is trying to do something like this.', 'tokens': [50366, 407, 294, 37711, 2113, 260, 307, 1382, 281, 360, 746, 411, 341, 13, 50534], 'temperature': 0.0, 'avg_logprob': -0.11779248714447021, 'compression_ratio': 1.6948356807511737, 'no_speech_prob': 0.043214913457632065}, {'id': 345, 'seek': 233268, 'start': 2336.08, 'end': 2339.3999999999996, 'text': ' So linker is reading all the inputs which were given to it.', 'tokens': [50534, 407, 2113, 260, 307, 3760, 439, 264, 15743, 597, 645, 2212, 281, 309, 13, 50700], 'temperature': 0.0, 'avg_logprob': -0.11779248714447021, 'compression_ratio': 1.6948356807511737, 'no_speech_prob': 0.043214913457632065}, {'id': 346, 'seek': 233268, 'start': 2339.3999999999996, 'end': 2344.3999999999996, 'text': ' It will keep recording all the metadata in terms of what are the sections defined in', 'tokens': [50700, 467, 486, 1066, 6613, 439, 264, 26603, 294, 2115, 295, 437, 366, 264, 10863, 7642, 294, 50950], 'temperature': 0.0, 'avg_logprob': -0.11779248714447021, 'compression_ratio': 1.6948356807511737, 'no_speech_prob': 0.043214913457632065}, {'id': 347, 'seek': 233268, 'start': 2344.3999999999996, 'end': 2349.2799999999997, 'text': ' this, what all symbols exist, what all relocations exist and so on.', 'tokens': [50950, 341, 11, 437, 439, 16944, 2514, 11, 437, 439, 26981, 763, 2514, 293, 370, 322, 13, 51194], 'temperature': 0.0, 'avg_logprob': -0.11779248714447021, 'compression_ratio': 1.6948356807511737, 'no_speech_prob': 0.043214913457632065}, {'id': 348, 'seek': 233268, 'start': 2349.2799999999997, 'end': 2356.24, 'text': ' Then it will do symbol resolution which we saw yesterday where it has to categorize every', 'tokens': [51194, 1396, 309, 486, 360, 5986, 8669, 597, 321, 1866, 5186, 689, 309, 575, 281, 19250, 1125, 633, 51542], 'temperature': 0.0, 'avg_logprob': -0.11779248714447021, 'compression_ratio': 1.6948356807511737, 'no_speech_prob': 0.043214913457632065}, {'id': 349, 'seek': 235624, 'start': 2356.24, 'end': 2363.4799999999996, 'text': ' symbol as strong or weak and then replace all the weak symbols with a strong symbol.', 'tokens': [50364, 5986, 382, 2068, 420, 5336, 293, 550, 7406, 439, 264, 5336, 16944, 365, 257, 2068, 5986, 13, 50726], 'temperature': 0.0, 'avg_logprob': -0.1630159668300463, 'compression_ratio': 2.1, 'no_speech_prob': 0.2683209776878357}, {'id': 350, 'seek': 235624, 'start': 2363.4799999999996, 'end': 2368.8999999999996, 'text': ' And it will duplicate, error on duplicate strong symbols when they are present.', 'tokens': [50726, 400, 309, 486, 23976, 11, 6713, 322, 23976, 2068, 16944, 562, 436, 366, 1974, 13, 50997], 'temperature': 0.0, 'avg_logprob': -0.1630159668300463, 'compression_ratio': 2.1, 'no_speech_prob': 0.2683209776878357}, {'id': 351, 'seek': 235624, 'start': 2368.8999999999996, 'end': 2372.9599999999996, 'text': ' And then it will lay out all the sections where it will take all the text sections from various', 'tokens': [50997, 400, 550, 309, 486, 2360, 484, 439, 264, 10863, 689, 309, 486, 747, 439, 264, 2487, 10863, 490, 3683, 51200], 'temperature': 0.0, 'avg_logprob': -0.1630159668300463, 'compression_ratio': 2.1, 'no_speech_prob': 0.2683209776878357}, {'id': 352, 'seek': 235624, 'start': 2372.9599999999996, 'end': 2376.4599999999996, 'text': ' objects file, put them together to form a segment.', 'tokens': [51200, 6565, 3991, 11, 829, 552, 1214, 281, 1254, 257, 9469, 13, 51375], 'temperature': 0.0, 'avg_logprob': -0.1630159668300463, 'compression_ratio': 2.1, 'no_speech_prob': 0.2683209776878357}, {'id': 353, 'seek': 235624, 'start': 2376.4599999999996, 'end': 2381.8799999999997, 'text': ' It will take all the data sections from various objects file, put them as data segment.', 'tokens': [51375, 467, 486, 747, 439, 264, 1412, 10863, 490, 3683, 6565, 3991, 11, 829, 552, 382, 1412, 9469, 13, 51646], 'temperature': 0.0, 'avg_logprob': -0.1630159668300463, 'compression_ratio': 2.1, 'no_speech_prob': 0.2683209776878357}, {'id': 354, 'seek': 238188, 'start': 2381.88, 'end': 2386.6800000000003, 'text': ' And then it will assign addresses to all of the segments which it has created.', 'tokens': [50364, 400, 550, 309, 486, 6269, 16862, 281, 439, 295, 264, 19904, 597, 309, 575, 2942, 13, 50604], 'temperature': 0.0, 'avg_logprob': -0.16745998693066974, 'compression_ratio': 1.6, 'no_speech_prob': 0.013620363548398018}, {'id': 355, 'seek': 238188, 'start': 2386.6800000000003, 'end': 2391.6800000000003, 'text': ' Then it will do the relocation and it will write the final executable.', 'tokens': [50604, 1396, 309, 486, 360, 264, 26981, 399, 293, 309, 486, 2464, 264, 2572, 7568, 712, 13, 50854], 'temperature': 0.0, 'avg_logprob': -0.16745998693066974, 'compression_ratio': 1.6, 'no_speech_prob': 0.013620363548398018}, {'id': 356, 'seek': 238188, 'start': 2391.6800000000003, 'end': 2394.84, 'text': ' So this is what linker does in nutshell.', 'tokens': [50854, 407, 341, 307, 437, 2113, 260, 775, 294, 37711, 13, 51012], 'temperature': 0.0, 'avg_logprob': -0.16745998693066974, 'compression_ratio': 1.6, 'no_speech_prob': 0.013620363548398018}, {'id': 357, 'seek': 238188, 'start': 2394.84, 'end': 2400.6800000000003, 'text': ' And all of this is happening statically as part of your compilation.', 'tokens': [51012, 400, 439, 295, 341, 307, 2737, 2219, 984, 382, 644, 295, 428, 40261, 13, 51304], 'temperature': 0.0, 'avg_logprob': -0.16745998693066974, 'compression_ratio': 1.6, 'no_speech_prob': 0.013620363548398018}, {'id': 358, 'seek': 238188, 'start': 2400.6800000000003, 'end': 2405.6800000000003, 'text': ' Any questions so far on linker or libraries which we have seen?', 'tokens': [51304, 2639, 1651, 370, 1400, 322, 2113, 260, 420, 15148, 597, 321, 362, 1612, 30, 51554], 'temperature': 0.0, 'avg_logprob': -0.16745998693066974, 'compression_ratio': 1.6, 'no_speech_prob': 0.013620363548398018}, {'id': 359, 'seek': 238188, 'start': 2405.6800000000003, 'end': 2406.6800000000003, 'text': ' Yes.', 'tokens': [51554, 1079, 13, 51604], 'temperature': 0.0, 'avg_logprob': -0.16745998693066974, 'compression_ratio': 1.6, 'no_speech_prob': 0.013620363548398018}, {'id': 360, 'seek': 240668, 'start': 2406.68, 'end': 2430.44, 'text': ' Yes, so typically no one will link against Lipsy statically unless there are very specific', 'tokens': [50364, 1079, 11, 370, 5850, 572, 472, 486, 2113, 1970, 441, 2600, 88, 2219, 984, 5969, 456, 366, 588, 2685, 51552], 'temperature': 0.0, 'avg_logprob': -0.3650343153211806, 'compression_ratio': 1.1511627906976745, 'no_speech_prob': 0.12824586033821106}, {'id': 361, 'seek': 240668, 'start': 2430.44, 'end': 2431.44, 'text': ' reasons.', 'tokens': [51552, 4112, 13, 51602], 'temperature': 0.0, 'avg_logprob': -0.3650343153211806, 'compression_ratio': 1.1511627906976745, 'no_speech_prob': 0.12824586033821106}, {'id': 362, 'seek': 243144, 'start': 2432.2000000000003, 'end': 2437.4, 'text': ' There are specific cases where you might want to link because you might be doing something', 'tokens': [50402, 821, 366, 2685, 3331, 689, 291, 1062, 528, 281, 2113, 570, 291, 1062, 312, 884, 746, 50662], 'temperature': 0.0, 'avg_logprob': -0.11352938835066978, 'compression_ratio': 1.7892561983471074, 'no_speech_prob': 0.3405820429325104}, {'id': 363, 'seek': 243144, 'start': 2437.4, 'end': 2444.96, 'text': " very custom with that and you don't want the client side Lipsy affect your implementation.", 'tokens': [50662, 588, 2375, 365, 300, 293, 291, 500, 380, 528, 264, 6423, 1252, 441, 2600, 88, 3345, 428, 11420, 13, 51040], 'temperature': 0.0, 'avg_logprob': -0.11352938835066978, 'compression_ratio': 1.7892561983471074, 'no_speech_prob': 0.3405820429325104}, {'id': 364, 'seek': 243144, 'start': 2444.96, 'end': 2450.66, 'text': " See what happens is if you don't link against Lipsy statically and shared library is used", 'tokens': [51040, 3008, 437, 2314, 307, 498, 291, 500, 380, 2113, 1970, 441, 2600, 88, 2219, 984, 293, 5507, 6405, 307, 1143, 51325], 'temperature': 0.0, 'avg_logprob': -0.11352938835066978, 'compression_ratio': 1.7892561983471074, 'no_speech_prob': 0.3405820429325104}, {'id': 365, 'seek': 243144, 'start': 2450.66, 'end': 2454.56, 'text': ' then you are relying on shared library which is present at the client side.', 'tokens': [51325, 550, 291, 366, 24140, 322, 5507, 6405, 597, 307, 1974, 412, 264, 6423, 1252, 13, 51520], 'temperature': 0.0, 'avg_logprob': -0.11352938835066978, 'compression_ratio': 1.7892561983471074, 'no_speech_prob': 0.3405820429325104}, {'id': 366, 'seek': 243144, 'start': 2454.56, 'end': 2459.36, 'text': " And if that version had some issues let's say hypothetically then it will affect your", 'tokens': [51520, 400, 498, 300, 3037, 632, 512, 2663, 718, 311, 584, 24371, 22652, 550, 309, 486, 3345, 428, 51760], 'temperature': 0.0, 'avg_logprob': -0.11352938835066978, 'compression_ratio': 1.7892561983471074, 'no_speech_prob': 0.3405820429325104}, {'id': 367, 'seek': 245936, 'start': 2459.44, 'end': 2465.1200000000003, 'text': ' library also.', 'tokens': [50368, 6405, 611, 13, 50652], 'temperature': 0.0, 'avg_logprob': -0.17351043925565832, 'compression_ratio': 1.558659217877095, 'no_speech_prob': 0.1383240669965744}, {'id': 368, 'seek': 245936, 'start': 2465.1200000000003, 'end': 2469.88, 'text': ' Any other questions?', 'tokens': [50652, 2639, 661, 1651, 30, 50890], 'temperature': 0.0, 'avg_logprob': -0.17351043925565832, 'compression_ratio': 1.558659217877095, 'no_speech_prob': 0.1383240669965744}, {'id': 369, 'seek': 245936, 'start': 2469.88, 'end': 2475.96, 'text': ' So far whatever we have seen everything was happening before program was being executed.', 'tokens': [50890, 407, 1400, 2035, 321, 362, 1612, 1203, 390, 2737, 949, 1461, 390, 885, 17577, 13, 51194], 'temperature': 0.0, 'avg_logprob': -0.17351043925565832, 'compression_ratio': 1.558659217877095, 'no_speech_prob': 0.1383240669965744}, {'id': 370, 'seek': 245936, 'start': 2475.96, 'end': 2478.84, 'text': ' We never tried to run the program.', 'tokens': [51194, 492, 1128, 3031, 281, 1190, 264, 1461, 13, 51338], 'temperature': 0.0, 'avg_logprob': -0.17351043925565832, 'compression_ratio': 1.558659217877095, 'no_speech_prob': 0.1383240669965744}, {'id': 371, 'seek': 245936, 'start': 2478.84, 'end': 2483.2400000000002, 'text': " So now let's see the other side of the things where program actually starts running and", 'tokens': [51338, 407, 586, 718, 311, 536, 264, 661, 1252, 295, 264, 721, 689, 1461, 767, 3719, 2614, 293, 51558], 'temperature': 0.0, 'avg_logprob': -0.17351043925565832, 'compression_ratio': 1.558659217877095, 'no_speech_prob': 0.1383240669965744}, {'id': 372, 'seek': 245936, 'start': 2483.2400000000002, 'end': 2486.88, 'text': ' what all happens in that aspect.', 'tokens': [51558, 437, 439, 2314, 294, 300, 4171, 13, 51740], 'temperature': 0.0, 'avg_logprob': -0.17351043925565832, 'compression_ratio': 1.558659217877095, 'no_speech_prob': 0.1383240669965744}, {'id': 373, 'seek': 248688, 'start': 2486.88, 'end': 2491.6800000000003, 'text': ' So you remember I had told you that ELF has two views.', 'tokens': [50364, 407, 291, 1604, 286, 632, 1907, 291, 300, 14426, 37, 575, 732, 6809, 13, 50604], 'temperature': 0.0, 'avg_logprob': -0.10817638397216797, 'compression_ratio': 1.7836257309941521, 'no_speech_prob': 0.048630211502313614}, {'id': 374, 'seek': 248688, 'start': 2491.6800000000003, 'end': 2495.88, 'text': ' One was linking view and one was executable view.', 'tokens': [50604, 1485, 390, 25775, 1910, 293, 472, 390, 7568, 712, 1910, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.10817638397216797, 'compression_ratio': 1.7836257309941521, 'no_speech_prob': 0.048630211502313614}, {'id': 375, 'seek': 248688, 'start': 2495.88, 'end': 2502.2400000000002, 'text': ' So linking view had section header table and all the things in the sections.', 'tokens': [50814, 407, 25775, 1910, 632, 3541, 23117, 3199, 293, 439, 264, 721, 294, 264, 10863, 13, 51132], 'temperature': 0.0, 'avg_logprob': -0.10817638397216797, 'compression_ratio': 1.7836257309941521, 'no_speech_prob': 0.048630211502313614}, {'id': 376, 'seek': 248688, 'start': 2502.2400000000002, 'end': 2509.92, 'text': ' Executable view is more about program header table and the segments.', 'tokens': [51132, 17662, 32148, 1910, 307, 544, 466, 1461, 23117, 3199, 293, 264, 19904, 13, 51516], 'temperature': 0.0, 'avg_logprob': -0.10817638397216797, 'compression_ratio': 1.7836257309941521, 'no_speech_prob': 0.048630211502313614}, {'id': 377, 'seek': 248688, 'start': 2509.92, 'end': 2513.84, 'text': ' Section header table at this stage is really optional.', 'tokens': [51516, 21804, 23117, 3199, 412, 341, 3233, 307, 534, 17312, 13, 51712], 'temperature': 0.0, 'avg_logprob': -0.10817638397216797, 'compression_ratio': 1.7836257309941521, 'no_speech_prob': 0.048630211502313614}, {'id': 378, 'seek': 251384, 'start': 2513.84, 'end': 2519.2000000000003, 'text': " So the executables which are produced don't need to have section header table.", 'tokens': [50364, 407, 264, 7568, 2965, 597, 366, 7126, 500, 380, 643, 281, 362, 3541, 23117, 3199, 13, 50632], 'temperature': 0.0, 'avg_logprob': -0.11947154998779297, 'compression_ratio': 1.7857142857142858, 'no_speech_prob': 0.006285296753048897}, {'id': 379, 'seek': 251384, 'start': 2519.2000000000003, 'end': 2523.2400000000002, 'text': ' Although in most cases you will find they do have because it simplifies some of the', 'tokens': [50632, 5780, 294, 881, 3331, 291, 486, 915, 436, 360, 362, 570, 309, 6883, 11221, 512, 295, 264, 50834], 'temperature': 0.0, 'avg_logprob': -0.11947154998779297, 'compression_ratio': 1.7857142857142858, 'no_speech_prob': 0.006285296753048897}, {'id': 380, 'seek': 251384, 'start': 2523.2400000000002, 'end': 2529.08, 'text': ' things in the tools which are kind of trying to read the ELF.', 'tokens': [50834, 721, 294, 264, 3873, 597, 366, 733, 295, 1382, 281, 1401, 264, 14426, 37, 13, 51126], 'temperature': 0.0, 'avg_logprob': -0.11947154998779297, 'compression_ratio': 1.7857142857142858, 'no_speech_prob': 0.006285296753048897}, {'id': 381, 'seek': 251384, 'start': 2529.08, 'end': 2535.56, 'text': ' So if you look into a program header so it is similar to how section headers were there', 'tokens': [51126, 407, 498, 291, 574, 666, 257, 1461, 23117, 370, 309, 307, 2531, 281, 577, 3541, 45101, 645, 456, 51450], 'temperature': 0.0, 'avg_logprob': -0.11947154998779297, 'compression_ratio': 1.7857142857142858, 'no_speech_prob': 0.006285296753048897}, {'id': 382, 'seek': 251384, 'start': 2535.56, 'end': 2541.28, 'text': ' that from ELF header you have a offset to program header table and program header table', 'tokens': [51450, 300, 490, 14426, 37, 23117, 291, 362, 257, 18687, 281, 1461, 23117, 3199, 293, 1461, 23117, 3199, 51736], 'temperature': 0.0, 'avg_logprob': -0.11947154998779297, 'compression_ratio': 1.7857142857142858, 'no_speech_prob': 0.006285296753048897}, {'id': 383, 'seek': 254128, 'start': 2541.36, 'end': 2544.1200000000003, 'text': ' will describe each of the segments.', 'tokens': [50368, 486, 6786, 1184, 295, 264, 19904, 13, 50506], 'temperature': 0.0, 'avg_logprob': -0.18097365774759433, 'compression_ratio': 1.888268156424581, 'no_speech_prob': 0.20142576098442078}, {'id': 384, 'seek': 254128, 'start': 2544.1200000000003, 'end': 2549.44, 'text': ' Now each of the segment essentially will and remember the segment was nothing but collection', 'tokens': [50506, 823, 1184, 295, 264, 9469, 4476, 486, 293, 1604, 264, 9469, 390, 1825, 457, 5765, 50772], 'temperature': 0.0, 'avg_logprob': -0.18097365774759433, 'compression_ratio': 1.888268156424581, 'no_speech_prob': 0.20142576098442078}, {'id': 385, 'seek': 254128, 'start': 2549.44, 'end': 2550.5600000000004, 'text': ' of sections.', 'tokens': [50772, 295, 10863, 13, 50828], 'temperature': 0.0, 'avg_logprob': -0.18097365774759433, 'compression_ratio': 1.888268156424581, 'no_speech_prob': 0.20142576098442078}, {'id': 386, 'seek': 254128, 'start': 2550.5600000000004, 'end': 2556.4, 'text': ' So we said that all the text sections are combined together to form a segment.', 'tokens': [50828, 407, 321, 848, 300, 439, 264, 2487, 10863, 366, 9354, 1214, 281, 1254, 257, 9469, 13, 51120], 'temperature': 0.0, 'avg_logprob': -0.18097365774759433, 'compression_ratio': 1.888268156424581, 'no_speech_prob': 0.20142576098442078}, {'id': 387, 'seek': 254128, 'start': 2556.4, 'end': 2562.88, 'text': ' Now each of the section if you look at each of the segment has a type.', 'tokens': [51120, 823, 1184, 295, 264, 3541, 498, 291, 574, 412, 1184, 295, 264, 9469, 575, 257, 2010, 13, 51444], 'temperature': 0.0, 'avg_logprob': -0.18097365774759433, 'compression_ratio': 1.888268156424581, 'no_speech_prob': 0.20142576098442078}, {'id': 388, 'seek': 254128, 'start': 2562.88, 'end': 2566.7200000000003, 'text': ' Type will indicate what type of segment it is.', 'tokens': [51444, 15576, 486, 13330, 437, 2010, 295, 9469, 309, 307, 13, 51636], 'temperature': 0.0, 'avg_logprob': -0.18097365774759433, 'compression_ratio': 1.888268156424581, 'no_speech_prob': 0.20142576098442078}, {'id': 389, 'seek': 256672, 'start': 2566.7599999999998, 'end': 2572.52, 'text': ' Then it has offset which indicates where that segment begins in the file.', 'tokens': [50366, 1396, 309, 575, 18687, 597, 16203, 689, 300, 9469, 7338, 294, 264, 3991, 13, 50654], 'temperature': 0.0, 'avg_logprob': -0.10815846920013428, 'compression_ratio': 1.8387096774193548, 'no_speech_prob': 0.014892121776938438}, {'id': 390, 'seek': 256672, 'start': 2572.52, 'end': 2575.9199999999996, 'text': ' Then it has virtual address and physical address.', 'tokens': [50654, 1396, 309, 575, 6374, 2985, 293, 4001, 2985, 13, 50824], 'temperature': 0.0, 'avg_logprob': -0.10815846920013428, 'compression_ratio': 1.8387096774193548, 'no_speech_prob': 0.014892121776938438}, {'id': 391, 'seek': 256672, 'start': 2575.9199999999996, 'end': 2581.04, 'text': ' So this is the address at which this segment will actually be loaded.', 'tokens': [50824, 407, 341, 307, 264, 2985, 412, 597, 341, 9469, 486, 767, 312, 13210, 13, 51080], 'temperature': 0.0, 'avg_logprob': -0.10815846920013428, 'compression_ratio': 1.8387096774193548, 'no_speech_prob': 0.014892121776938438}, {'id': 392, 'seek': 256672, 'start': 2581.04, 'end': 2587.08, 'text': ' So when linker says this segment begins at virtual address 100 then loader is supposed', 'tokens': [51080, 407, 562, 2113, 260, 1619, 341, 9469, 7338, 412, 6374, 2985, 2319, 550, 3677, 260, 307, 3442, 51382], 'temperature': 0.0, 'avg_logprob': -0.10815846920013428, 'compression_ratio': 1.8387096774193548, 'no_speech_prob': 0.014892121776938438}, {'id': 393, 'seek': 256672, 'start': 2587.08, 'end': 2592.4399999999996, 'text': ' to take that content and put it at address 100 in the memory.', 'tokens': [51382, 281, 747, 300, 2701, 293, 829, 309, 412, 2985, 2319, 294, 264, 4675, 13, 51650], 'temperature': 0.0, 'avg_logprob': -0.10815846920013428, 'compression_ratio': 1.8387096774193548, 'no_speech_prob': 0.014892121776938438}, {'id': 394, 'seek': 259244, 'start': 2592.64, 'end': 2596.84, 'text': ' In systems which have virtual addressing the physical address could be actually same as', 'tokens': [50374, 682, 3652, 597, 362, 6374, 14329, 264, 4001, 2985, 727, 312, 767, 912, 382, 50584], 'temperature': 0.0, 'avg_logprob': -0.12578880025985392, 'compression_ratio': 2.047169811320755, 'no_speech_prob': 0.0019249763572588563}, {'id': 395, 'seek': 259244, 'start': 2596.84, 'end': 2603.32, 'text': ' virtual address because physical address is not accessible in a system with virtual memory.', 'tokens': [50584, 6374, 2985, 570, 4001, 2985, 307, 406, 9515, 294, 257, 1185, 365, 6374, 4675, 13, 50908], 'temperature': 0.0, 'avg_logprob': -0.12578880025985392, 'compression_ratio': 2.047169811320755, 'no_speech_prob': 0.0019249763572588563}, {'id': 396, 'seek': 259244, 'start': 2603.32, 'end': 2607.8, 'text': ' Then there is something called as file size which is saying how much this segment occupies', 'tokens': [50908, 1396, 456, 307, 746, 1219, 382, 3991, 2744, 597, 307, 1566, 577, 709, 341, 9469, 8073, 530, 51132], 'temperature': 0.0, 'avg_logprob': -0.12578880025985392, 'compression_ratio': 2.047169811320755, 'no_speech_prob': 0.0019249763572588563}, {'id': 397, 'seek': 259244, 'start': 2607.8, 'end': 2610.4, 'text': ' in file.', 'tokens': [51132, 294, 3991, 13, 51262], 'temperature': 0.0, 'avg_logprob': -0.12578880025985392, 'compression_ratio': 2.047169811320755, 'no_speech_prob': 0.0019249763572588563}, {'id': 398, 'seek': 259244, 'start': 2610.4, 'end': 2615.36, 'text': ' Then there is something called as memory size which is essentially how much this segment', 'tokens': [51262, 1396, 456, 307, 746, 1219, 382, 4675, 2744, 597, 307, 4476, 577, 709, 341, 9469, 51510], 'temperature': 0.0, 'avg_logprob': -0.12578880025985392, 'compression_ratio': 2.047169811320755, 'no_speech_prob': 0.0019249763572588563}, {'id': 399, 'seek': 259244, 'start': 2615.36, 'end': 2617.96, 'text': ' will occupy in memory.', 'tokens': [51510, 486, 30645, 294, 4675, 13, 51640], 'temperature': 0.0, 'avg_logprob': -0.12578880025985392, 'compression_ratio': 2.047169811320755, 'no_speech_prob': 0.0019249763572588563}, {'id': 400, 'seek': 259244, 'start': 2617.96, 'end': 2620.28, 'text': ' Any idea why these two could be different?', 'tokens': [51640, 2639, 1558, 983, 613, 732, 727, 312, 819, 30, 51756], 'temperature': 0.0, 'avg_logprob': -0.12578880025985392, 'compression_ratio': 2.047169811320755, 'no_speech_prob': 0.0019249763572588563}, {'id': 401, 'seek': 262028, 'start': 2620.28, 'end': 2631.36, 'text': ' Why could there be a segment which takes less space on file but more space in memory or', 'tokens': [50364, 1545, 727, 456, 312, 257, 9469, 597, 2516, 1570, 1901, 322, 3991, 457, 544, 1901, 294, 4675, 420, 50918], 'temperature': 0.0, 'avg_logprob': -0.23208868945086444, 'compression_ratio': 1.574468085106383, 'no_speech_prob': 0.008067378774285316}, {'id': 402, 'seek': 262028, 'start': 2631.36, 'end': 2637.6800000000003, 'text': ' different space in memory?', 'tokens': [50918, 819, 1901, 294, 4675, 30, 51234], 'temperature': 0.0, 'avg_logprob': -0.23208868945086444, 'compression_ratio': 1.574468085106383, 'no_speech_prob': 0.008067378774285316}, {'id': 403, 'seek': 262028, 'start': 2637.6800000000003, 'end': 2644.0800000000004, 'text': ' So in what cases size of section could be different from when the section is actually', 'tokens': [51234, 407, 294, 437, 3331, 2744, 295, 3541, 727, 312, 819, 490, 562, 264, 3541, 307, 767, 51554], 'temperature': 0.0, 'avg_logprob': -0.23208868945086444, 'compression_ratio': 1.574468085106383, 'no_speech_prob': 0.008067378774285316}, {'id': 404, 'seek': 262028, 'start': 2644.0800000000004, 'end': 2646.4, 'text': ' loaded in the memory?', 'tokens': [51554, 13210, 294, 264, 4675, 30, 51670], 'temperature': 0.0, 'avg_logprob': -0.23208868945086444, 'compression_ratio': 1.574468085106383, 'no_speech_prob': 0.008067378774285316}, {'id': 405, 'seek': 264640, 'start': 2646.4, 'end': 2654.1600000000003, 'text': ' Sorry, but that is not present in the object file.', 'tokens': [50364, 4919, 11, 457, 300, 307, 406, 1974, 294, 264, 2657, 3991, 13, 50752], 'temperature': 0.0, 'avg_logprob': -0.19694212038223058, 'compression_ratio': 1.6043956043956045, 'no_speech_prob': 0.0033552520908415318}, {'id': 406, 'seek': 264640, 'start': 2654.1600000000003, 'end': 2662.52, 'text': ' So far we never saw how mallocs information was present in the object.', 'tokens': [50752, 407, 1400, 321, 1128, 1866, 577, 16026, 905, 82, 1589, 390, 1974, 294, 264, 2657, 13, 51170], 'temperature': 0.0, 'avg_logprob': -0.19694212038223058, 'compression_ratio': 1.6043956043956045, 'no_speech_prob': 0.0033552520908415318}, {'id': 407, 'seek': 264640, 'start': 2662.52, 'end': 2670.7200000000003, 'text': ' So you remember uninitialized variables and they were called BSS better safe space.', 'tokens': [51170, 407, 291, 1604, 43456, 270, 831, 1602, 9102, 293, 436, 645, 1219, 363, 21929, 1101, 3273, 1901, 13, 51580], 'temperature': 0.0, 'avg_logprob': -0.19694212038223058, 'compression_ratio': 1.6043956043956045, 'no_speech_prob': 0.0033552520908415318}, {'id': 408, 'seek': 264640, 'start': 2670.7200000000003, 'end': 2676.0, 'text': ' So those were essentially bunch of zeros and we simply said we need to simply hold the', 'tokens': [51580, 407, 729, 645, 4476, 3840, 295, 35193, 293, 321, 2935, 848, 321, 643, 281, 2935, 1797, 264, 51844], 'temperature': 0.0, 'avg_logprob': -0.19694212038223058, 'compression_ratio': 1.6043956043956045, 'no_speech_prob': 0.0033552520908415318}, {'id': 409, 'seek': 267600, 'start': 2676.0, 'end': 2678.96, 'text': ' size of how many zeros we want.', 'tokens': [50364, 2744, 295, 577, 867, 35193, 321, 528, 13, 50512], 'temperature': 0.0, 'avg_logprob': -0.1462362546187181, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.002978677162900567}, {'id': 410, 'seek': 267600, 'start': 2678.96, 'end': 2684.4, 'text': " But when we need to load it in memory we can't simply say assume there are these many zeros", 'tokens': [50512, 583, 562, 321, 643, 281, 3677, 309, 294, 4675, 321, 393, 380, 2935, 584, 6552, 456, 366, 613, 867, 35193, 50784], 'temperature': 0.0, 'avg_logprob': -0.1462362546187181, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.002978677162900567}, {'id': 411, 'seek': 267600, 'start': 2684.4, 'end': 2685.4, 'text': ' here.', 'tokens': [50784, 510, 13, 50834], 'temperature': 0.0, 'avg_logprob': -0.1462362546187181, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.002978677162900567}, {'id': 412, 'seek': 267600, 'start': 2685.4, 'end': 2689.32, 'text': ' We have to actually create those many zeros in the memory.', 'tokens': [50834, 492, 362, 281, 767, 1884, 729, 867, 35193, 294, 264, 4675, 13, 51030], 'temperature': 0.0, 'avg_logprob': -0.1462362546187181, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.002978677162900567}, {'id': 413, 'seek': 267600, 'start': 2689.32, 'end': 2694.96, 'text': " That's why the memory size can actually be different than file size.", 'tokens': [51030, 663, 311, 983, 264, 4675, 2744, 393, 767, 312, 819, 813, 3991, 2744, 13, 51312], 'temperature': 0.0, 'avg_logprob': -0.1462362546187181, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.002978677162900567}, {'id': 414, 'seek': 267600, 'start': 2694.96, 'end': 2699.32, 'text': ' And then there are flags which typically talk about the permissions.', 'tokens': [51312, 400, 550, 456, 366, 23265, 597, 5850, 751, 466, 264, 32723, 13, 51530], 'temperature': 0.0, 'avg_logprob': -0.1462362546187181, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.002978677162900567}, {'id': 415, 'seek': 267600, 'start': 2699.32, 'end': 2704.56, 'text': ' You remember we had permissions like code section can be executed but not return and', 'tokens': [51530, 509, 1604, 321, 632, 32723, 411, 3089, 3541, 393, 312, 17577, 457, 406, 2736, 293, 51792], 'temperature': 0.0, 'avg_logprob': -0.1462362546187181, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.002978677162900567}, {'id': 416, 'seek': 267600, 'start': 2704.56, 'end': 2705.56, 'text': ' so on.', 'tokens': [51792, 370, 322, 13, 51842], 'temperature': 0.0, 'avg_logprob': -0.1462362546187181, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.002978677162900567}, {'id': 417, 'seek': 270556, 'start': 2705.56, 'end': 2711.4, 'text': ' And then there is section alignment which is how to align this section and what addresses.', 'tokens': [50364, 400, 550, 456, 307, 3541, 18515, 597, 307, 577, 281, 7975, 341, 3541, 293, 437, 16862, 13, 50656], 'temperature': 0.0, 'avg_logprob': -0.145652832523469, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.000625841086730361}, {'id': 418, 'seek': 270556, 'start': 2711.4, 'end': 2716.32, 'text': ' Now one of the things you have to remember is not all sections which are present in the', 'tokens': [50656, 823, 472, 295, 264, 721, 291, 362, 281, 1604, 307, 406, 439, 10863, 597, 366, 1974, 294, 264, 50902], 'temperature': 0.0, 'avg_logprob': -0.145652832523469, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.000625841086730361}, {'id': 419, 'seek': 270556, 'start': 2716.32, 'end': 2719.96, 'text': ' elf form a segment.', 'tokens': [50902, 35565, 1254, 257, 9469, 13, 51084], 'temperature': 0.0, 'avg_logprob': -0.145652832523469, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.000625841086730361}, {'id': 420, 'seek': 270556, 'start': 2719.96, 'end': 2724.24, 'text': ' Segments are needed for things which are actually needed for program execution.', 'tokens': [51084, 21595, 1117, 366, 2978, 337, 721, 597, 366, 767, 2978, 337, 1461, 15058, 13, 51298], 'temperature': 0.0, 'avg_logprob': -0.145652832523469, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.000625841086730361}, {'id': 421, 'seek': 270556, 'start': 2724.24, 'end': 2729.2799999999997, 'text': ' For example does symbol table need to be there in memory?', 'tokens': [51298, 1171, 1365, 775, 5986, 3199, 643, 281, 312, 456, 294, 4675, 30, 51550], 'temperature': 0.0, 'avg_logprob': -0.145652832523469, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.000625841086730361}, {'id': 422, 'seek': 270556, 'start': 2729.2799999999997, 'end': 2733.12, 'text': ' Symbol table it just used by linker to resolve things.', 'tokens': [51550, 3902, 5612, 3199, 309, 445, 1143, 538, 2113, 260, 281, 14151, 721, 13, 51742], 'temperature': 0.0, 'avg_logprob': -0.145652832523469, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.000625841086730361}, {'id': 423, 'seek': 273312, 'start': 2733.12, 'end': 2740.2, 'text': ' Symbol table cannot be does not need to be loaded into the memory for execution because', 'tokens': [50364, 3902, 5612, 3199, 2644, 312, 775, 406, 643, 281, 312, 13210, 666, 264, 4675, 337, 15058, 570, 50718], 'temperature': 0.0, 'avg_logprob': -0.14373176380739375, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.08479508757591248}, {'id': 424, 'seek': 273312, 'start': 2740.2, 'end': 2745.44, 'text': ' it plays no role in the execution of the program because it was an abstraction which was created', 'tokens': [50718, 309, 5749, 572, 3090, 294, 264, 15058, 295, 264, 1461, 570, 309, 390, 364, 37765, 597, 390, 2942, 50980], 'temperature': 0.0, 'avg_logprob': -0.14373176380739375, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.08479508757591248}, {'id': 425, 'seek': 273312, 'start': 2745.44, 'end': 2748.22, 'text': ' for programmers.', 'tokens': [50980, 337, 41504, 13, 51119], 'temperature': 0.0, 'avg_logprob': -0.14373176380739375, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.08479508757591248}, {'id': 426, 'seek': 273312, 'start': 2748.22, 'end': 2754.44, 'text': ' So not all sections in the elf become a segment.', 'tokens': [51119, 407, 406, 439, 10863, 294, 264, 35565, 1813, 257, 9469, 13, 51430], 'temperature': 0.0, 'avg_logprob': -0.14373176380739375, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.08479508757591248}, {'id': 427, 'seek': 275444, 'start': 2754.44, 'end': 2763.2000000000003, 'text': " Now let's look at this code and with read elf dash el you can actually dump out the", 'tokens': [50364, 823, 718, 311, 574, 412, 341, 3089, 293, 365, 1401, 35565, 8240, 806, 291, 393, 767, 11430, 484, 264, 50802], 'temperature': 0.0, 'avg_logprob': -0.1530007979449104, 'compression_ratio': 1.9297297297297298, 'no_speech_prob': 0.08750195056200027}, {'id': 428, 'seek': 275444, 'start': 2763.2000000000003, 'end': 2765.86, 'text': ' program headers just like section headers.', 'tokens': [50802, 1461, 45101, 445, 411, 3541, 45101, 13, 50935], 'temperature': 0.0, 'avg_logprob': -0.1530007979449104, 'compression_ratio': 1.9297297297297298, 'no_speech_prob': 0.08750195056200027}, {'id': 429, 'seek': 275444, 'start': 2765.86, 'end': 2770.96, 'text': ' So this was the section header which was there for the program and this is how program header', 'tokens': [50935, 407, 341, 390, 264, 3541, 23117, 597, 390, 456, 337, 264, 1461, 293, 341, 307, 577, 1461, 23117, 51190], 'temperature': 0.0, 'avg_logprob': -0.1530007979449104, 'compression_ratio': 1.9297297297297298, 'no_speech_prob': 0.08750195056200027}, {'id': 430, 'seek': 275444, 'start': 2770.96, 'end': 2772.78, 'text': ' looks like.', 'tokens': [51190, 1542, 411, 13, 51281], 'temperature': 0.0, 'avg_logprob': -0.1530007979449104, 'compression_ratio': 1.9297297297297298, 'no_speech_prob': 0.08750195056200027}, {'id': 431, 'seek': 275444, 'start': 2772.78, 'end': 2779.56, 'text': ' So you can see that program header I mean this actually is not part of the program header', 'tokens': [51281, 407, 291, 393, 536, 300, 1461, 23117, 286, 914, 341, 767, 307, 406, 644, 295, 264, 1461, 23117, 51620], 'temperature': 0.0, 'avg_logprob': -0.1530007979449104, 'compression_ratio': 1.9297297297297298, 'no_speech_prob': 0.08750195056200027}, {'id': 432, 'seek': 275444, 'start': 2779.56, 'end': 2781.52, 'text': ' but this is something interesting.', 'tokens': [51620, 457, 341, 307, 746, 1880, 13, 51718], 'temperature': 0.0, 'avg_logprob': -0.1530007979449104, 'compression_ratio': 1.9297297297297298, 'no_speech_prob': 0.08750195056200027}, {'id': 433, 'seek': 278152, 'start': 2781.52, 'end': 2790.68, 'text': ' So it says there is some address called 8048310 which is the entry point.', 'tokens': [50364, 407, 309, 1619, 456, 307, 512, 2985, 1219, 4688, 13318, 18, 3279, 597, 307, 264, 8729, 935, 13, 50822], 'temperature': 0.0, 'avg_logprob': -0.15437192916870118, 'compression_ratio': 1.4378698224852071, 'no_speech_prob': 0.17983399331569672}, {'id': 434, 'seek': 278152, 'start': 2790.68, 'end': 2797.72, 'text': ' This is the actual address where the first instruction to be executed lives.', 'tokens': [50822, 639, 307, 264, 3539, 2985, 689, 264, 700, 10951, 281, 312, 17577, 2909, 13, 51174], 'temperature': 0.0, 'avg_logprob': -0.15437192916870118, 'compression_ratio': 1.4378698224852071, 'no_speech_prob': 0.17983399331569672}, {'id': 435, 'seek': 278152, 'start': 2797.72, 'end': 2801.64, 'text': ' Is this address of main?', 'tokens': [51174, 1119, 341, 2985, 295, 2135, 30, 51370], 'temperature': 0.0, 'avg_logprob': -0.15437192916870118, 'compression_ratio': 1.4378698224852071, 'no_speech_prob': 0.17983399331569672}, {'id': 436, 'seek': 278152, 'start': 2801.64, 'end': 2803.14, 'text': " Let's try that.", 'tokens': [51370, 961, 311, 853, 300, 13, 51445], 'temperature': 0.0, 'avg_logprob': -0.15437192916870118, 'compression_ratio': 1.4378698224852071, 'no_speech_prob': 0.17983399331569672}, {'id': 437, 'seek': 278152, 'start': 2803.14, 'end': 2804.98, 'text': ' So let me create a program.', 'tokens': [51445, 407, 718, 385, 1884, 257, 1461, 13, 51537], 'temperature': 0.0, 'avg_logprob': -0.15437192916870118, 'compression_ratio': 1.4378698224852071, 'no_speech_prob': 0.17983399331569672}, {'id': 438, 'seek': 278152, 'start': 2804.98, 'end': 2808.46, 'text': ' So I already have this.', 'tokens': [51537, 407, 286, 1217, 362, 341, 13, 51711], 'temperature': 0.0, 'avg_logprob': -0.15437192916870118, 'compression_ratio': 1.4378698224852071, 'no_speech_prob': 0.17983399331569672}, {'id': 439, 'seek': 280846, 'start': 2808.46, 'end': 2816.82, 'text': " Now let's look at.", 'tokens': [50364, 823, 718, 311, 574, 412, 13, 50782], 'temperature': 0.0, 'avg_logprob': -0.19860203201706345, 'compression_ratio': 1.13, 'no_speech_prob': 0.08247550576925278}, {'id': 440, 'seek': 280846, 'start': 2816.82, 'end': 2828.58, 'text': " So if I look at main, main's address is something like this 804840D which is not same as this.", 'tokens': [50782, 407, 498, 286, 574, 412, 2135, 11, 2135, 311, 2985, 307, 746, 411, 341, 4688, 13318, 5254, 35, 597, 307, 406, 912, 382, 341, 13, 51370], 'temperature': 0.0, 'avg_logprob': -0.19860203201706345, 'compression_ratio': 1.13, 'no_speech_prob': 0.08247550576925278}, {'id': 441, 'seek': 282858, 'start': 2829.5, 'end': 2839.56, 'text': " But let's look at a function called underscore start.", 'tokens': [50410, 583, 718, 311, 574, 412, 257, 2445, 1219, 37556, 722, 13, 50913], 'temperature': 0.0, 'avg_logprob': -0.18314724342495786, 'compression_ratio': 1.4963503649635037, 'no_speech_prob': 0.006486160680651665}, {'id': 442, 'seek': 282858, 'start': 2839.56, 'end': 2843.72, 'text': ' Underscore start has that address.', 'tokens': [50913, 2719, 433, 12352, 722, 575, 300, 2985, 13, 51121], 'temperature': 0.0, 'avg_logprob': -0.18314724342495786, 'compression_ratio': 1.4963503649635037, 'no_speech_prob': 0.006486160680651665}, {'id': 443, 'seek': 282858, 'start': 2843.72, 'end': 2850.4, 'text': ' So what this entry point is telling is once you are done loading this elf start executing', 'tokens': [51121, 407, 437, 341, 8729, 935, 307, 3585, 307, 1564, 291, 366, 1096, 15114, 341, 35565, 722, 32368, 51455], 'temperature': 0.0, 'avg_logprob': -0.18314724342495786, 'compression_ratio': 1.4963503649635037, 'no_speech_prob': 0.006486160680651665}, {'id': 444, 'seek': 282858, 'start': 2850.4, 'end': 2853.46, 'text': ' program from this address.', 'tokens': [51455, 1461, 490, 341, 2985, 13, 51608], 'temperature': 0.0, 'avg_logprob': -0.18314724342495786, 'compression_ratio': 1.4963503649635037, 'no_speech_prob': 0.006486160680651665}, {'id': 445, 'seek': 285346, 'start': 2853.46, 'end': 2861.2, 'text': ' Now since you know how to read elf and how to interpret elf you can simply locate this', 'tokens': [50364, 823, 1670, 291, 458, 577, 281, 1401, 35565, 293, 577, 281, 7302, 35565, 291, 393, 2935, 22370, 341, 50751], 'temperature': 0.0, 'avg_logprob': -0.12043778598308563, 'compression_ratio': 1.5340909090909092, 'no_speech_prob': 0.01341816782951355}, {'id': 446, 'seek': 285346, 'start': 2861.2, 'end': 2869.36, 'text': ' field and modify it and what will happen is the elf program will start running from that', 'tokens': [50751, 2519, 293, 16927, 309, 293, 437, 486, 1051, 307, 264, 35565, 1461, 486, 722, 2614, 490, 300, 51159], 'temperature': 0.0, 'avg_logprob': -0.12043778598308563, 'compression_ratio': 1.5340909090909092, 'no_speech_prob': 0.01341816782951355}, {'id': 447, 'seek': 285346, 'start': 2869.36, 'end': 2873.88, 'text': ' point.', 'tokens': [51159, 935, 13, 51385], 'temperature': 0.0, 'avg_logprob': -0.12043778598308563, 'compression_ratio': 1.5340909090909092, 'no_speech_prob': 0.01341816782951355}, {'id': 448, 'seek': 285346, 'start': 2873.88, 'end': 2879.92, 'text': ' So if I put here address of something which is something which I want to execute before', 'tokens': [51385, 407, 498, 286, 829, 510, 2985, 295, 746, 597, 307, 746, 597, 286, 528, 281, 14483, 949, 51687], 'temperature': 0.0, 'avg_logprob': -0.12043778598308563, 'compression_ratio': 1.5340909090909092, 'no_speech_prob': 0.01341816782951355}, {'id': 449, 'seek': 287992, 'start': 2879.92, 'end': 2889.38, 'text': ' start or before main I could actually overwrite this somehow and then that function will start', 'tokens': [50364, 722, 420, 949, 2135, 286, 727, 767, 670, 21561, 341, 6063, 293, 550, 300, 2445, 486, 722, 50837], 'temperature': 0.0, 'avg_logprob': -0.22360828187730578, 'compression_ratio': 1.4375, 'no_speech_prob': 0.018513578921556473}, {'id': 450, 'seek': 287992, 'start': 2889.38, 'end': 2894.66, 'text': ' executing.', 'tokens': [50837, 32368, 13, 51101], 'temperature': 0.0, 'avg_logprob': -0.22360828187730578, 'compression_ratio': 1.4375, 'no_speech_prob': 0.018513578921556473}, {'id': 451, 'seek': 287992, 'start': 2894.66, 'end': 2903.7400000000002, 'text': ' Then we said that every program header or every segment has a type.', 'tokens': [51101, 1396, 321, 848, 300, 633, 1461, 23117, 420, 633, 9469, 575, 257, 2010, 13, 51555], 'temperature': 0.0, 'avg_logprob': -0.22360828187730578, 'compression_ratio': 1.4375, 'no_speech_prob': 0.018513578921556473}, {'id': 452, 'seek': 287992, 'start': 2903.7400000000002, 'end': 2908.7000000000003, 'text': ' Now the most important type is something called as load.', 'tokens': [51555, 823, 264, 881, 1021, 2010, 307, 746, 1219, 382, 3677, 13, 51803], 'temperature': 0.0, 'avg_logprob': -0.22360828187730578, 'compression_ratio': 1.4375, 'no_speech_prob': 0.018513578921556473}, {'id': 453, 'seek': 290870, 'start': 2908.7, 'end': 2914.6, 'text': ' Load is the segment which needs to be loaded into the memory.', 'tokens': [50364, 48408, 307, 264, 9469, 597, 2203, 281, 312, 13210, 666, 264, 4675, 13, 50659], 'temperature': 0.0, 'avg_logprob': -0.1926195166084204, 'compression_ratio': 1.9668508287292819, 'no_speech_prob': 0.05655597522854805}, {'id': 454, 'seek': 290870, 'start': 2914.6, 'end': 2919.9399999999996, 'text': ' So text segment for example needs to be loaded as it is from file into memory.', 'tokens': [50659, 407, 2487, 9469, 337, 1365, 2203, 281, 312, 13210, 382, 309, 307, 490, 3991, 666, 4675, 13, 50926], 'temperature': 0.0, 'avg_logprob': -0.1926195166084204, 'compression_ratio': 1.9668508287292819, 'no_speech_prob': 0.05655597522854805}, {'id': 455, 'seek': 290870, 'start': 2919.9399999999996, 'end': 2926.1, 'text': ' Data segment which is present in the file needs to be loaded into the memory.', 'tokens': [50926, 11888, 9469, 597, 307, 1974, 294, 264, 3991, 2203, 281, 312, 13210, 666, 264, 4675, 13, 51234], 'temperature': 0.0, 'avg_logprob': -0.1926195166084204, 'compression_ratio': 1.9668508287292819, 'no_speech_prob': 0.05655597522854805}, {'id': 456, 'seek': 290870, 'start': 2926.1, 'end': 2929.1, 'text': ' So all the things will be of that category.', 'tokens': [51234, 407, 439, 264, 721, 486, 312, 295, 300, 7719, 13, 51384], 'temperature': 0.0, 'avg_logprob': -0.1926195166084204, 'compression_ratio': 1.9668508287292819, 'no_speech_prob': 0.05655597522854805}, {'id': 457, 'seek': 290870, 'start': 2929.1, 'end': 2934.5, 'text': ' PH header is essentially the header which is telling link loader on how to load these', 'tokens': [51384, 16530, 23117, 307, 4476, 264, 23117, 597, 307, 3585, 2113, 3677, 260, 322, 577, 281, 3677, 613, 51654], 'temperature': 0.0, 'avg_logprob': -0.1926195166084204, 'compression_ratio': 1.9668508287292819, 'no_speech_prob': 0.05655597522854805}, {'id': 458, 'seek': 290870, 'start': 2934.5, 'end': 2935.96, 'text': ' things.', 'tokens': [51654, 721, 13, 51727], 'temperature': 0.0, 'avg_logprob': -0.1926195166084204, 'compression_ratio': 1.9668508287292819, 'no_speech_prob': 0.05655597522854805}, {'id': 459, 'seek': 293596, 'start': 2935.96, 'end': 2939.88, 'text': ' And then there is few other things which we will see later.', 'tokens': [50364, 400, 550, 456, 307, 1326, 661, 721, 597, 321, 486, 536, 1780, 13, 50560], 'temperature': 0.0, 'avg_logprob': -0.11782004038492838, 'compression_ratio': 1.6700507614213198, 'no_speech_prob': 0.10950512439012527}, {'id': 460, 'seek': 293596, 'start': 2939.88, 'end': 2944.82, 'text': ' But remember the load is the most important thing which is coming from your disk executable', 'tokens': [50560, 583, 1604, 264, 3677, 307, 264, 881, 1021, 551, 597, 307, 1348, 490, 428, 12355, 7568, 712, 50807], 'temperature': 0.0, 'avg_logprob': -0.11782004038492838, 'compression_ratio': 1.6700507614213198, 'no_speech_prob': 0.10950512439012527}, {'id': 461, 'seek': 293596, 'start': 2944.82, 'end': 2948.12, 'text': ' file and getting loaded into the memory.', 'tokens': [50807, 3991, 293, 1242, 13210, 666, 264, 4675, 13, 50972], 'temperature': 0.0, 'avg_logprob': -0.11782004038492838, 'compression_ratio': 1.6700507614213198, 'no_speech_prob': 0.10950512439012527}, {'id': 462, 'seek': 293596, 'start': 2948.12, 'end': 2952.92, 'text': ' Then there is something called as section to segment mapping.', 'tokens': [50972, 1396, 456, 307, 746, 1219, 382, 3541, 281, 9469, 18350, 13, 51212], 'temperature': 0.0, 'avg_logprob': -0.11782004038492838, 'compression_ratio': 1.6700507614213198, 'no_speech_prob': 0.10950512439012527}, {'id': 463, 'seek': 293596, 'start': 2952.92, 'end': 2958.7200000000003, 'text': ' So this is essentially telling which all sections in the elf form segment.', 'tokens': [51212, 407, 341, 307, 4476, 3585, 597, 439, 10863, 294, 264, 35565, 1254, 9469, 13, 51502], 'temperature': 0.0, 'avg_logprob': -0.11782004038492838, 'compression_ratio': 1.6700507614213198, 'no_speech_prob': 0.10950512439012527}, {'id': 464, 'seek': 295872, 'start': 2958.72, 'end': 2968.62, 'text': ' So this is saying segment 02 is actually formed out of these sections which are present.', 'tokens': [50364, 407, 341, 307, 1566, 9469, 37202, 307, 767, 8693, 484, 295, 613, 10863, 597, 366, 1974, 13, 50859], 'temperature': 0.0, 'avg_logprob': -0.2025738979907746, 'compression_ratio': 1.766990291262136, 'no_speech_prob': 0.17254726588726044}, {'id': 465, 'seek': 295872, 'start': 2968.62, 'end': 2974.04, 'text': " You don't have to worry about what these are in terms of I mean what does inter has, what", 'tokens': [50859, 509, 500, 380, 362, 281, 3292, 466, 437, 613, 366, 294, 2115, 295, 286, 914, 437, 775, 728, 575, 11, 437, 51130], 'temperature': 0.0, 'avg_logprob': -0.2025738979907746, 'compression_ratio': 1.766990291262136, 'no_speech_prob': 0.17254726588726044}, {'id': 466, 'seek': 295872, 'start': 2974.04, 'end': 2976.48, 'text': ' does not ABI has and so on.', 'tokens': [51130, 775, 406, 316, 11291, 575, 293, 370, 322, 13, 51252], 'temperature': 0.0, 'avg_logprob': -0.2025738979907746, 'compression_ratio': 1.766990291262136, 'no_speech_prob': 0.17254726588726044}, {'id': 467, 'seek': 295872, 'start': 2976.48, 'end': 2981.22, 'text': ' But essentially what it is saying is all these sections which are present in the elf file', 'tokens': [51252, 583, 4476, 437, 309, 307, 1566, 307, 439, 613, 10863, 597, 366, 1974, 294, 264, 35565, 3991, 51489], 'temperature': 0.0, 'avg_logprob': -0.2025738979907746, 'compression_ratio': 1.766990291262136, 'no_speech_prob': 0.17254726588726044}, {'id': 468, 'seek': 295872, 'start': 2981.22, 'end': 2983.68, 'text': ' form segment number 02.', 'tokens': [51489, 1254, 9469, 1230, 37202, 13, 51612], 'temperature': 0.0, 'avg_logprob': -0.2025738979907746, 'compression_ratio': 1.766990291262136, 'no_speech_prob': 0.17254726588726044}, {'id': 469, 'seek': 295872, 'start': 2983.68, 'end': 2987.7799999999997, 'text': ' 03 is formed by all these things and so on.', 'tokens': [51612, 43677, 307, 8693, 538, 439, 613, 721, 293, 370, 322, 13, 51817], 'temperature': 0.0, 'avg_logprob': -0.2025738979907746, 'compression_ratio': 1.766990291262136, 'no_speech_prob': 0.17254726588726044}, {'id': 470, 'seek': 298778, 'start': 2987.78, 'end': 2998.3, 'text': ' So you can see that using read elf dash L. So there are bunch of segments which are formed', 'tokens': [50364, 407, 291, 393, 536, 300, 1228, 1401, 35565, 8240, 441, 13, 407, 456, 366, 3840, 295, 19904, 597, 366, 8693, 50890], 'temperature': 0.0, 'avg_logprob': -0.17887122389199078, 'compression_ratio': 1.5892857142857142, 'no_speech_prob': 0.009980525821447372}, {'id': 471, 'seek': 298778, 'start': 2998.3, 'end': 3004.3, 'text': ' by different sections within the elf.', 'tokens': [50890, 538, 819, 10863, 1951, 264, 35565, 13, 51190], 'temperature': 0.0, 'avg_logprob': -0.17887122389199078, 'compression_ratio': 1.5892857142857142, 'no_speech_prob': 0.009980525821447372}, {'id': 472, 'seek': 298778, 'start': 3004.3, 'end': 3007.5600000000004, 'text': ' Then every segment has permission.', 'tokens': [51190, 1396, 633, 9469, 575, 11226, 13, 51353], 'temperature': 0.0, 'avg_logprob': -0.17887122389199078, 'compression_ratio': 1.5892857142857142, 'no_speech_prob': 0.009980525821447372}, {'id': 473, 'seek': 298778, 'start': 3007.5600000000004, 'end': 3009.96, 'text': ' So this has read and execute permission.', 'tokens': [51353, 407, 341, 575, 1401, 293, 14483, 11226, 13, 51473], 'temperature': 0.0, 'avg_logprob': -0.17887122389199078, 'compression_ratio': 1.5892857142857142, 'no_speech_prob': 0.009980525821447372}, {'id': 474, 'seek': 298778, 'start': 3009.96, 'end': 3012.0600000000004, 'text': ' That means this is code section.', 'tokens': [51473, 663, 1355, 341, 307, 3089, 3541, 13, 51578], 'temperature': 0.0, 'avg_logprob': -0.17887122389199078, 'compression_ratio': 1.5892857142857142, 'no_speech_prob': 0.009980525821447372}, {'id': 475, 'seek': 298778, 'start': 3012.0600000000004, 'end': 3014.1200000000003, 'text': ' But you cannot write into it.', 'tokens': [51578, 583, 291, 2644, 2464, 666, 309, 13, 51681], 'temperature': 0.0, 'avg_logprob': -0.17887122389199078, 'compression_ratio': 1.5892857142857142, 'no_speech_prob': 0.009980525821447372}, {'id': 476, 'seek': 301412, 'start': 3014.12, 'end': 3020.24, 'text': ' So if you try to write into the code segment, it will not work.', 'tokens': [50364, 407, 498, 291, 853, 281, 2464, 666, 264, 3089, 9469, 11, 309, 486, 406, 589, 13, 50670], 'temperature': 0.0, 'avg_logprob': -0.19958446336829144, 'compression_ratio': 1.5833333333333333, 'no_speech_prob': 0.08729784935712814}, {'id': 477, 'seek': 301412, 'start': 3020.24, 'end': 3022.7599999999998, 'text': ' It will result in a secfault.', 'tokens': [50670, 467, 486, 1874, 294, 257, 907, 69, 5107, 13, 50796], 'temperature': 0.0, 'avg_logprob': -0.19958446336829144, 'compression_ratio': 1.5833333333333333, 'no_speech_prob': 0.08729784935712814}, {'id': 478, 'seek': 301412, 'start': 3022.7599999999998, 'end': 3025.64, 'text': ' Similarly this has read and write permission.', 'tokens': [50796, 13157, 341, 575, 1401, 293, 2464, 11226, 13, 50940], 'temperature': 0.0, 'avg_logprob': -0.19958446336829144, 'compression_ratio': 1.5833333333333333, 'no_speech_prob': 0.08729784935712814}, {'id': 479, 'seek': 301412, 'start': 3025.64, 'end': 3029.6, 'text': ' But if you try to execute, it will actually secfault.', 'tokens': [50940, 583, 498, 291, 853, 281, 14483, 11, 309, 486, 767, 907, 69, 5107, 13, 51138], 'temperature': 0.0, 'avg_logprob': -0.19958446336829144, 'compression_ratio': 1.5833333333333333, 'no_speech_prob': 0.08729784935712814}, {'id': 480, 'seek': 301412, 'start': 3029.6, 'end': 3036.08, 'text': ' Remember yesterday we had seen example where I had my var which was defined to be a variable', 'tokens': [51138, 5459, 5186, 321, 632, 1612, 1365, 689, 286, 632, 452, 1374, 597, 390, 7642, 281, 312, 257, 7006, 51462], 'temperature': 0.0, 'avg_logprob': -0.19958446336829144, 'compression_ratio': 1.5833333333333333, 'no_speech_prob': 0.08729784935712814}, {'id': 481, 'seek': 301412, 'start': 3036.08, 'end': 3039.6, 'text': " and in the other file I said it's an external function.", 'tokens': [51462, 293, 294, 264, 661, 3991, 286, 848, 309, 311, 364, 8320, 2445, 13, 51638], 'temperature': 0.0, 'avg_logprob': -0.19958446336829144, 'compression_ratio': 1.5833333333333333, 'no_speech_prob': 0.08729784935712814}, {'id': 482, 'seek': 303960, 'start': 3039.6, 'end': 3046.12, 'text': " And I tried to execute it and it didn't work because the address was in the data segment.", 'tokens': [50364, 400, 286, 3031, 281, 14483, 309, 293, 309, 994, 380, 589, 570, 264, 2985, 390, 294, 264, 1412, 9469, 13, 50690], 'temperature': 0.0, 'avg_logprob': -0.17208826685526285, 'compression_ratio': 1.7604166666666667, 'no_speech_prob': 0.2744895815849304}, {'id': 483, 'seek': 303960, 'start': 3046.12, 'end': 3051.64, 'text': " And when I actually tried to execute it, it secfaulted because the data segment didn't", 'tokens': [50690, 400, 562, 286, 767, 3031, 281, 14483, 309, 11, 309, 907, 69, 5107, 292, 570, 264, 1412, 9469, 994, 380, 50966], 'temperature': 0.0, 'avg_logprob': -0.17208826685526285, 'compression_ratio': 1.7604166666666667, 'no_speech_prob': 0.2744895815849304}, {'id': 484, 'seek': 303960, 'start': 3051.64, 'end': 3053.7, 'text': ' have execute permissions.', 'tokens': [50966, 362, 14483, 32723, 13, 51069], 'temperature': 0.0, 'avg_logprob': -0.17208826685526285, 'compression_ratio': 1.7604166666666667, 'no_speech_prob': 0.2744895815849304}, {'id': 485, 'seek': 303960, 'start': 3053.7, 'end': 3061.6, 'text': ' If I somehow data segment had execute permission, then it would have happily continued and executed', 'tokens': [51069, 759, 286, 6063, 1412, 9469, 632, 14483, 11226, 11, 550, 309, 576, 362, 19909, 7014, 293, 17577, 51464], 'temperature': 0.0, 'avg_logprob': -0.17208826685526285, 'compression_ratio': 1.7604166666666667, 'no_speech_prob': 0.2744895815849304}, {'id': 486, 'seek': 303960, 'start': 3061.6, 'end': 3065.3199999999997, 'text': ' that problem.', 'tokens': [51464, 300, 1154, 13, 51650], 'temperature': 0.0, 'avg_logprob': -0.17208826685526285, 'compression_ratio': 1.7604166666666667, 'no_speech_prob': 0.2744895815849304}, {'id': 487, 'seek': 303960, 'start': 3065.3199999999997, 'end': 3068.96, 'text': ' Does that make sense?', 'tokens': [51650, 4402, 300, 652, 2020, 30, 51832], 'temperature': 0.0, 'avg_logprob': -0.17208826685526285, 'compression_ratio': 1.7604166666666667, 'no_speech_prob': 0.2744895815849304}, {'id': 488, 'seek': 306896, 'start': 3068.96, 'end': 3074.16, 'text': ' And file size and memory size we already talked about that these can actually be different.', 'tokens': [50364, 400, 3991, 2744, 293, 4675, 2744, 321, 1217, 2825, 466, 300, 613, 393, 767, 312, 819, 13, 50624], 'temperature': 0.0, 'avg_logprob': -0.15530710335237435, 'compression_ratio': 1.5893719806763285, 'no_speech_prob': 0.06557446718215942}, {'id': 489, 'seek': 306896, 'start': 3074.16, 'end': 3079.32, 'text': ' In most cases file size will be smaller than memory size.', 'tokens': [50624, 682, 881, 3331, 3991, 2744, 486, 312, 4356, 813, 4675, 2744, 13, 50882], 'temperature': 0.0, 'avg_logprob': -0.15530710335237435, 'compression_ratio': 1.5893719806763285, 'no_speech_prob': 0.06557446718215942}, {'id': 490, 'seek': 306896, 'start': 3079.32, 'end': 3087.32, 'text': ' Any questions on the program header so far?', 'tokens': [50882, 2639, 1651, 322, 264, 1461, 23117, 370, 1400, 30, 51282], 'temperature': 0.0, 'avg_logprob': -0.15530710335237435, 'compression_ratio': 1.5893719806763285, 'no_speech_prob': 0.06557446718215942}, {'id': 491, 'seek': 306896, 'start': 3087.32, 'end': 3091.84, 'text': ' So compiler does not allow you to change them.', 'tokens': [51282, 407, 31958, 775, 406, 2089, 291, 281, 1319, 552, 13, 51508], 'temperature': 0.0, 'avg_logprob': -0.15530710335237435, 'compression_ratio': 1.5893719806763285, 'no_speech_prob': 0.06557446718215942}, {'id': 492, 'seek': 306896, 'start': 3091.84, 'end': 3094.8, 'text': ' There are no options for you to make it change.', 'tokens': [51508, 821, 366, 572, 3956, 337, 291, 281, 652, 309, 1319, 13, 51656], 'temperature': 0.0, 'avg_logprob': -0.15530710335237435, 'compression_ratio': 1.5893719806763285, 'no_speech_prob': 0.06557446718215942}, {'id': 493, 'seek': 306896, 'start': 3094.8, 'end': 3097.54, 'text': ' But since you know how to read elf file.', 'tokens': [51656, 583, 1670, 291, 458, 577, 281, 1401, 35565, 3991, 13, 51793], 'temperature': 0.0, 'avg_logprob': -0.15530710335237435, 'compression_ratio': 1.5893719806763285, 'no_speech_prob': 0.06557446718215942}, {'id': 494, 'seek': 309754, 'start': 3097.54, 'end': 3100.46, 'text': ' So for example you now know the structure of the elf file.', 'tokens': [50364, 407, 337, 1365, 291, 586, 458, 264, 3877, 295, 264, 35565, 3991, 13, 50510], 'temperature': 0.0, 'avg_logprob': -0.14786836375360904, 'compression_ratio': 1.8604651162790697, 'no_speech_prob': 0.06347821652889252}, {'id': 495, 'seek': 309754, 'start': 3100.46, 'end': 3104.58, 'text': ' So you are free to go and binary edit the file and overwrite it.', 'tokens': [50510, 407, 291, 366, 1737, 281, 352, 293, 17434, 8129, 264, 3991, 293, 670, 21561, 309, 13, 50716], 'temperature': 0.0, 'avg_logprob': -0.14786836375360904, 'compression_ratio': 1.8604651162790697, 'no_speech_prob': 0.06347821652889252}, {'id': 496, 'seek': 309754, 'start': 3104.58, 'end': 3108.58, 'text': ' For example what you can simply do is you can write a program which will read the elf', 'tokens': [50716, 1171, 1365, 437, 291, 393, 2935, 360, 307, 291, 393, 2464, 257, 1461, 597, 486, 1401, 264, 35565, 50916], 'temperature': 0.0, 'avg_logprob': -0.14786836375360904, 'compression_ratio': 1.8604651162790697, 'no_speech_prob': 0.06347821652889252}, {'id': 497, 'seek': 309754, 'start': 3108.58, 'end': 3115.58, 'text': ' file, examine all the things, overwrite some of the things and write back a binary file', 'tokens': [50916, 3991, 11, 17496, 439, 264, 721, 11, 670, 21561, 512, 295, 264, 721, 293, 2464, 646, 257, 17434, 3991, 51266], 'temperature': 0.0, 'avg_logprob': -0.14786836375360904, 'compression_ratio': 1.8604651162790697, 'no_speech_prob': 0.06347821652889252}, {'id': 498, 'seek': 309754, 'start': 3115.58, 'end': 3119.18, 'text': ' with different permissions or different these things.', 'tokens': [51266, 365, 819, 32723, 420, 819, 613, 721, 13, 51446], 'temperature': 0.0, 'avg_logprob': -0.14786836375360904, 'compression_ratio': 1.8604651162790697, 'no_speech_prob': 0.06347821652889252}, {'id': 499, 'seek': 309754, 'start': 3119.18, 'end': 3122.2599999999998, 'text': ' And it will actually do what you want.', 'tokens': [51446, 400, 309, 486, 767, 360, 437, 291, 528, 13, 51600], 'temperature': 0.0, 'avg_logprob': -0.14786836375360904, 'compression_ratio': 1.8604651162790697, 'no_speech_prob': 0.06347821652889252}, {'id': 500, 'seek': 309754, 'start': 3122.2599999999998, 'end': 3126.82, 'text': " So that's the power of knowing the details because you can do something interesting which", 'tokens': [51600, 407, 300, 311, 264, 1347, 295, 5276, 264, 4365, 570, 291, 393, 360, 746, 1880, 597, 51828], 'temperature': 0.0, 'avg_logprob': -0.14786836375360904, 'compression_ratio': 1.8604651162790697, 'no_speech_prob': 0.06347821652889252}, {'id': 501, 'seek': 312682, 'start': 3126.82, 'end': 3131.32, 'text': ' was otherwise in default case not possible.', 'tokens': [50364, 390, 5911, 294, 7576, 1389, 406, 1944, 13, 50589], 'temperature': 0.0, 'avg_logprob': -0.2082451082045032, 'compression_ratio': 1.4857142857142858, 'no_speech_prob': 0.06349685788154602}, {'id': 502, 'seek': 312682, 'start': 3131.32, 'end': 3142.02, 'text': ' So for example you can change the entry point address and see what happens.', 'tokens': [50589, 407, 337, 1365, 291, 393, 1319, 264, 8729, 935, 2985, 293, 536, 437, 2314, 13, 51124], 'temperature': 0.0, 'avg_logprob': -0.2082451082045032, 'compression_ratio': 1.4857142857142858, 'no_speech_prob': 0.06349685788154602}, {'id': 503, 'seek': 312682, 'start': 3142.02, 'end': 3146.7400000000002, 'text': ' It may not work.', 'tokens': [51124, 467, 815, 406, 589, 13, 51360], 'temperature': 0.0, 'avg_logprob': -0.2082451082045032, 'compression_ratio': 1.4857142857142858, 'no_speech_prob': 0.06349685788154602}, {'id': 504, 'seek': 312682, 'start': 3146.7400000000002, 'end': 3152.1000000000004, 'text': ' So whatever I am saying there are equal counterparts in the security side which try to prevent', 'tokens': [51360, 407, 2035, 286, 669, 1566, 456, 366, 2681, 33287, 294, 264, 3825, 1252, 597, 853, 281, 4871, 51628], 'temperature': 0.0, 'avg_logprob': -0.2082451082045032, 'compression_ratio': 1.4857142857142858, 'no_speech_prob': 0.06349685788154602}, {'id': 505, 'seek': 312682, 'start': 3152.1000000000004, 'end': 3154.6000000000004, 'text': ' those things from happening.', 'tokens': [51628, 729, 721, 490, 2737, 13, 51753], 'temperature': 0.0, 'avg_logprob': -0.2082451082045032, 'compression_ratio': 1.4857142857142858, 'no_speech_prob': 0.06349685788154602}, {'id': 506, 'seek': 315460, 'start': 3154.6, 'end': 3163.48, 'text': " So it's not that just like things on the hacking side have evolved, same things have", 'tokens': [50364, 407, 309, 311, 406, 300, 445, 411, 721, 322, 264, 31422, 1252, 362, 14178, 11, 912, 721, 362, 50808], 'temperature': 0.0, 'avg_logprob': -0.13332226910168612, 'compression_ratio': 1.6436170212765957, 'no_speech_prob': 0.022234229370951653}, {'id': 507, 'seek': 315460, 'start': 3163.48, 'end': 3165.18, 'text': ' evolved on the security side.', 'tokens': [50808, 14178, 322, 264, 3825, 1252, 13, 50893], 'temperature': 0.0, 'avg_logprob': -0.13332226910168612, 'compression_ratio': 1.6436170212765957, 'no_speech_prob': 0.022234229370951653}, {'id': 508, 'seek': 315460, 'start': 3165.18, 'end': 3170.0, 'text': ' So they have equal counter measures to be able to do that.', 'tokens': [50893, 407, 436, 362, 2681, 5682, 8000, 281, 312, 1075, 281, 360, 300, 13, 51134], 'temperature': 0.0, 'avg_logprob': -0.13332226910168612, 'compression_ratio': 1.6436170212765957, 'no_speech_prob': 0.022234229370951653}, {'id': 509, 'seek': 315460, 'start': 3170.0, 'end': 3173.2799999999997, 'text': ' And we will see some of them as we get later.', 'tokens': [51134, 400, 321, 486, 536, 512, 295, 552, 382, 321, 483, 1780, 13, 51298], 'temperature': 0.0, 'avg_logprob': -0.13332226910168612, 'compression_ratio': 1.6436170212765957, 'no_speech_prob': 0.022234229370951653}, {'id': 510, 'seek': 315460, 'start': 3173.2799999999997, 'end': 3179.9, 'text': ' But essentially the idea is if you have a raw system which does not have all these things', 'tokens': [51298, 583, 4476, 264, 1558, 307, 498, 291, 362, 257, 8936, 1185, 597, 775, 406, 362, 439, 613, 721, 51629], 'temperature': 0.0, 'avg_logprob': -0.13332226910168612, 'compression_ratio': 1.6436170212765957, 'no_speech_prob': 0.022234229370951653}, {'id': 511, 'seek': 317990, 'start': 3180.12, 'end': 3190.28, 'text': ' then you can actually see these things happening and you can try them for good reasons.', 'tokens': [50375, 550, 291, 393, 767, 536, 613, 721, 2737, 293, 291, 393, 853, 552, 337, 665, 4112, 13, 50883], 'temperature': 0.0, 'avg_logprob': -0.15899598598480225, 'compression_ratio': 1.7107843137254901, 'no_speech_prob': 0.42157793045043945}, {'id': 512, 'seek': 317990, 'start': 3190.28, 'end': 3192.32, 'text': ' Then abstraction of process.', 'tokens': [50883, 1396, 37765, 295, 1399, 13, 50985], 'temperature': 0.0, 'avg_logprob': -0.15899598598480225, 'compression_ratio': 1.7107843137254901, 'no_speech_prob': 0.42157793045043945}, {'id': 513, 'seek': 317990, 'start': 3192.32, 'end': 3199.84, 'text': ' So we just saw that there is executable which has various information for loader on how', 'tokens': [50985, 407, 321, 445, 1866, 300, 456, 307, 7568, 712, 597, 575, 3683, 1589, 337, 3677, 260, 322, 577, 51361], 'temperature': 0.0, 'avg_logprob': -0.15899598598480225, 'compression_ratio': 1.7107843137254901, 'no_speech_prob': 0.42157793045043945}, {'id': 514, 'seek': 317990, 'start': 3199.84, 'end': 3200.84, 'text': ' to do things.', 'tokens': [51361, 281, 360, 721, 13, 51411], 'temperature': 0.0, 'avg_logprob': -0.15899598598480225, 'compression_ratio': 1.7107843137254901, 'no_speech_prob': 0.42157793045043945}, {'id': 515, 'seek': 317990, 'start': 3200.84, 'end': 3202.2000000000003, 'text': ' We will see loader a bit later.', 'tokens': [51411, 492, 486, 536, 3677, 260, 257, 857, 1780, 13, 51479], 'temperature': 0.0, 'avg_logprob': -0.15899598598480225, 'compression_ratio': 1.7107843137254901, 'no_speech_prob': 0.42157793045043945}, {'id': 516, 'seek': 317990, 'start': 3202.2000000000003, 'end': 3207.0, 'text': ' We will kind of first start with abstraction of process and then get into details of other', 'tokens': [51479, 492, 486, 733, 295, 700, 722, 365, 37765, 295, 1399, 293, 550, 483, 666, 4365, 295, 661, 51719], 'temperature': 0.0, 'avg_logprob': -0.15899598598480225, 'compression_ratio': 1.7107843137254901, 'no_speech_prob': 0.42157793045043945}, {'id': 517, 'seek': 317990, 'start': 3207.0, 'end': 3208.12, 'text': ' things.', 'tokens': [51719, 721, 13, 51775], 'temperature': 0.0, 'avg_logprob': -0.15899598598480225, 'compression_ratio': 1.7107843137254901, 'no_speech_prob': 0.42157793045043945}, {'id': 518, 'seek': 320812, 'start': 3208.12, 'end': 3211.9, 'text': ' So can someone tell me what is a process?', 'tokens': [50364, 407, 393, 1580, 980, 385, 437, 307, 257, 1399, 30, 50553], 'temperature': 0.0, 'avg_logprob': -0.18508225758870442, 'compression_ratio': 1.6597938144329898, 'no_speech_prob': 0.017432544380426407}, {'id': 519, 'seek': 320812, 'start': 3211.9, 'end': 3217.46, 'text': ' Must have learned in operating systems course.', 'tokens': [50553, 13252, 362, 3264, 294, 7447, 3652, 1164, 13, 50831], 'temperature': 0.0, 'avg_logprob': -0.18508225758870442, 'compression_ratio': 1.6597938144329898, 'no_speech_prob': 0.017432544380426407}, {'id': 520, 'seek': 320812, 'start': 3217.46, 'end': 3219.14, 'text': ' So that is the standard definition.', 'tokens': [50831, 407, 300, 307, 264, 3832, 7123, 13, 50915], 'temperature': 0.0, 'avg_logprob': -0.18508225758870442, 'compression_ratio': 1.6597938144329898, 'no_speech_prob': 0.017432544380426407}, {'id': 521, 'seek': 320812, 'start': 3219.14, 'end': 3224.14, 'text': ' So process is instance of the running program.', 'tokens': [50915, 407, 1399, 307, 5197, 295, 264, 2614, 1461, 13, 51165], 'temperature': 0.0, 'avg_logprob': -0.18508225758870442, 'compression_ratio': 1.6597938144329898, 'no_speech_prob': 0.017432544380426407}, {'id': 522, 'seek': 320812, 'start': 3224.14, 'end': 3229.44, 'text': ' And each program whatever you have runs in context of some process.', 'tokens': [51165, 400, 1184, 1461, 2035, 291, 362, 6676, 294, 4319, 295, 512, 1399, 13, 51430], 'temperature': 0.0, 'avg_logprob': -0.18508225758870442, 'compression_ratio': 1.6597938144329898, 'no_speech_prob': 0.017432544380426407}, {'id': 523, 'seek': 320812, 'start': 3229.44, 'end': 3234.5, 'text': ' And context essentially will be all the dynamic state associated with the process.', 'tokens': [51430, 400, 4319, 4476, 486, 312, 439, 264, 8546, 1785, 6615, 365, 264, 1399, 13, 51683], 'temperature': 0.0, 'avg_logprob': -0.18508225758870442, 'compression_ratio': 1.6597938144329898, 'no_speech_prob': 0.017432544380426407}, {'id': 524, 'seek': 323450, 'start': 3234.5, 'end': 3239.88, 'text': ' So all the data associated with the process and so on will form the context.', 'tokens': [50364, 407, 439, 264, 1412, 6615, 365, 264, 1399, 293, 370, 322, 486, 1254, 264, 4319, 13, 50633], 'temperature': 0.0, 'avg_logprob': -0.14359419686453684, 'compression_ratio': 1.625, 'no_speech_prob': 0.007339697331190109}, {'id': 525, 'seek': 323450, 'start': 3239.88, 'end': 3245.92, 'text': ' And why we have process as abstraction is because it kind of gives you two abstractions.', 'tokens': [50633, 400, 983, 321, 362, 1399, 382, 37765, 307, 570, 309, 733, 295, 2709, 291, 732, 12649, 626, 13, 50935], 'temperature': 0.0, 'avg_logprob': -0.14359419686453684, 'compression_ratio': 1.625, 'no_speech_prob': 0.007339697331190109}, {'id': 526, 'seek': 323450, 'start': 3245.92, 'end': 3251.28, 'text': ' Two key things are enabled by having a model of process.', 'tokens': [50935, 4453, 2141, 721, 366, 15172, 538, 1419, 257, 2316, 295, 1399, 13, 51203], 'temperature': 0.0, 'avg_logprob': -0.14359419686453684, 'compression_ratio': 1.625, 'no_speech_prob': 0.007339697331190109}, {'id': 527, 'seek': 323450, 'start': 3251.28, 'end': 3255.28, 'text': ' One is it gives you a logical control flow.', 'tokens': [51203, 1485, 307, 309, 2709, 291, 257, 14978, 1969, 3095, 13, 51403], 'temperature': 0.0, 'avg_logprob': -0.14359419686453684, 'compression_ratio': 1.625, 'no_speech_prob': 0.007339697331190109}, {'id': 528, 'seek': 323450, 'start': 3255.28, 'end': 3261.64, 'text': ' What that means is it creates an illusion that every program which is running on the', 'tokens': [51403, 708, 300, 1355, 307, 309, 7829, 364, 18854, 300, 633, 1461, 597, 307, 2614, 322, 264, 51721], 'temperature': 0.0, 'avg_logprob': -0.14359419686453684, 'compression_ratio': 1.625, 'no_speech_prob': 0.007339697331190109}, {'id': 529, 'seek': 326164, 'start': 3262.18, 'end': 3267.94, 'text': ' has exclusive use of the CPU.', 'tokens': [50391, 575, 13005, 764, 295, 264, 13199, 13, 50679], 'temperature': 0.0, 'avg_logprob': -0.15416400040252298, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.18690024316310883}, {'id': 530, 'seek': 326164, 'start': 3267.94, 'end': 3273.44, 'text': ' And this is provided by operating systems kernel by doing context switching.', 'tokens': [50679, 400, 341, 307, 5649, 538, 7447, 3652, 28256, 538, 884, 4319, 16493, 13, 50954], 'temperature': 0.0, 'avg_logprob': -0.15416400040252298, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.18690024316310883}, {'id': 531, 'seek': 326164, 'start': 3273.44, 'end': 3278.4, 'text': ' But it gives you an illusion that when your program is running only your program is running.', 'tokens': [50954, 583, 309, 2709, 291, 364, 18854, 300, 562, 428, 1461, 307, 2614, 787, 428, 1461, 307, 2614, 13, 51202], 'temperature': 0.0, 'avg_logprob': -0.15416400040252298, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.18690024316310883}, {'id': 532, 'seek': 326164, 'start': 3278.4, 'end': 3284.48, 'text': ' But we knew when editor got slow editor was not the only thing running and someone had', 'tokens': [51202, 583, 321, 2586, 562, 9839, 658, 2964, 9839, 390, 406, 264, 787, 551, 2614, 293, 1580, 632, 51506], 'temperature': 0.0, 'avg_logprob': -0.15416400040252298, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.18690024316310883}, {'id': 533, 'seek': 326164, 'start': 3284.48, 'end': 3289.1, 'text': ' a cron job running which was sucking all the CPU.', 'tokens': [51506, 257, 941, 266, 1691, 2614, 597, 390, 38669, 439, 264, 13199, 13, 51737], 'temperature': 0.0, 'avg_logprob': -0.15416400040252298, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.18690024316310883}, {'id': 534, 'seek': 328910, 'start': 3289.1, 'end': 3294.2599999999998, 'text': ' And the other thing processes as abstraction provide is the private address space.', 'tokens': [50364, 400, 264, 661, 551, 7555, 382, 37765, 2893, 307, 264, 4551, 2985, 1901, 13, 50622], 'temperature': 0.0, 'avg_logprob': -0.14422907973780777, 'compression_ratio': 1.6464088397790055, 'no_speech_prob': 0.004193093162029982}, {'id': 535, 'seek': 328910, 'start': 3294.2599999999998, 'end': 3301.72, 'text': ' So just like processors as a resource process abstraction also gives an impression that', 'tokens': [50622, 407, 445, 411, 27751, 382, 257, 7684, 1399, 37765, 611, 2709, 364, 9995, 300, 50995], 'temperature': 0.0, 'avg_logprob': -0.14422907973780777, 'compression_ratio': 1.6464088397790055, 'no_speech_prob': 0.004193093162029982}, {'id': 536, 'seek': 328910, 'start': 3301.72, 'end': 3306.5, 'text': ' the entire memory is available to only my program.', 'tokens': [50995, 264, 2302, 4675, 307, 2435, 281, 787, 452, 1461, 13, 51234], 'temperature': 0.0, 'avg_logprob': -0.14422907973780777, 'compression_ratio': 1.6464088397790055, 'no_speech_prob': 0.004193093162029982}, {'id': 537, 'seek': 328910, 'start': 3306.5, 'end': 3311.42, 'text': ' And this is actually provided by virtual memory.', 'tokens': [51234, 400, 341, 307, 767, 5649, 538, 6374, 4675, 13, 51480], 'temperature': 0.0, 'avg_logprob': -0.14422907973780777, 'compression_ratio': 1.6464088397790055, 'no_speech_prob': 0.004193093162029982}, {'id': 538, 'seek': 328910, 'start': 3311.42, 'end': 3314.24, 'text': ' Now this is how things are.', 'tokens': [51480, 823, 341, 307, 577, 721, 366, 13, 51621], 'temperature': 0.0, 'avg_logprob': -0.14422907973780777, 'compression_ratio': 1.6464088397790055, 'no_speech_prob': 0.004193093162029982}, {'id': 539, 'seek': 331424, 'start': 3314.2599999999998, 'end': 3321.7599999999998, 'text': ' So if you look at illusion every process thinks that I have exclusive use of CPU and memory.', 'tokens': [50365, 407, 498, 291, 574, 412, 18854, 633, 1399, 7309, 300, 286, 362, 13005, 764, 295, 13199, 293, 4675, 13, 50740], 'temperature': 0.0, 'avg_logprob': -0.12529828673914858, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.04873374104499817}, {'id': 540, 'seek': 331424, 'start': 3321.7599999999998, 'end': 3326.4199999999996, 'text': ' And CPU has a register so I have exclusive use of them.', 'tokens': [50740, 400, 13199, 575, 257, 7280, 370, 286, 362, 13005, 764, 295, 552, 13, 50973], 'temperature': 0.0, 'avg_logprob': -0.12529828673914858, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.04873374104499817}, {'id': 541, 'seek': 331424, 'start': 3326.4199999999996, 'end': 3335.8399999999997, 'text': ' What is really happening though is every process gets CPU and memory only for chunk of time.', 'tokens': [50973, 708, 307, 534, 2737, 1673, 307, 633, 1399, 2170, 13199, 293, 4675, 787, 337, 16635, 295, 565, 13, 51444], 'temperature': 0.0, 'avg_logprob': -0.12529828673914858, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.04873374104499817}, {'id': 542, 'seek': 331424, 'start': 3335.8399999999997, 'end': 3343.0, 'text': ' So whenever the time for context switch comes the operating system will have to save all', 'tokens': [51444, 407, 5699, 264, 565, 337, 4319, 3679, 1487, 264, 7447, 1185, 486, 362, 281, 3155, 439, 51802], 'temperature': 0.0, 'avg_logprob': -0.12529828673914858, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.04873374104499817}, {'id': 543, 'seek': 334300, 'start': 3343.0, 'end': 3353.1, 'text': ' the state of the current program into the memory and then switch to the other process', 'tokens': [50364, 264, 1785, 295, 264, 2190, 1461, 666, 264, 4675, 293, 550, 3679, 281, 264, 661, 1399, 50869], 'temperature': 0.0, 'avg_logprob': -0.17194385239572235, 'compression_ratio': 1.8291139240506329, 'no_speech_prob': 0.02158818207681179}, {'id': 544, 'seek': 334300, 'start': 3353.1, 'end': 3355.96, 'text': ' and load back its context.', 'tokens': [50869, 293, 3677, 646, 1080, 4319, 13, 51012], 'temperature': 0.0, 'avg_logprob': -0.17194385239572235, 'compression_ratio': 1.8291139240506329, 'no_speech_prob': 0.02158818207681179}, {'id': 545, 'seek': 334300, 'start': 3355.96, 'end': 3362.16, 'text': ' So context switching is nothing but load all the state of the earlier process which was', 'tokens': [51012, 407, 4319, 16493, 307, 1825, 457, 3677, 439, 264, 1785, 295, 264, 3071, 1399, 597, 390, 51322], 'temperature': 0.0, 'avg_logprob': -0.17194385239572235, 'compression_ratio': 1.8291139240506329, 'no_speech_prob': 0.02158818207681179}, {'id': 546, 'seek': 334300, 'start': 3362.16, 'end': 3368.48, 'text': ' stopped and before you do that you have to save the state of the current process so that', 'tokens': [51322, 5936, 293, 949, 291, 360, 300, 291, 362, 281, 3155, 264, 1785, 295, 264, 2190, 1399, 370, 300, 51638], 'temperature': 0.0, 'avg_logprob': -0.17194385239572235, 'compression_ratio': 1.8291139240506329, 'no_speech_prob': 0.02158818207681179}, {'id': 547, 'seek': 336848, 'start': 3368.6, 'end': 3374.28, 'text': ' when you resume it later it will start executing from the same point.', 'tokens': [50370, 562, 291, 15358, 309, 1780, 309, 486, 722, 32368, 490, 264, 912, 935, 13, 50654], 'temperature': 0.0, 'avg_logprob': -0.1257626508411608, 'compression_ratio': 1.8022598870056497, 'no_speech_prob': 0.13285750150680542}, {'id': 548, 'seek': 336848, 'start': 3374.28, 'end': 3380.2400000000002, 'text': ' So logically this is what is happening where process A runs for some time then process', 'tokens': [50654, 407, 38887, 341, 307, 437, 307, 2737, 689, 1399, 316, 6676, 337, 512, 565, 550, 1399, 50952], 'temperature': 0.0, 'avg_logprob': -0.1257626508411608, 'compression_ratio': 1.8022598870056497, 'no_speech_prob': 0.13285750150680542}, {'id': 549, 'seek': 336848, 'start': 3380.2400000000002, 'end': 3387.76, 'text': ' B comes then process C comes then process A comes and then process C comes.', 'tokens': [50952, 363, 1487, 550, 1399, 383, 1487, 550, 1399, 316, 1487, 293, 550, 1399, 383, 1487, 13, 51328], 'temperature': 0.0, 'avg_logprob': -0.1257626508411608, 'compression_ratio': 1.8022598870056497, 'no_speech_prob': 0.13285750150680542}, {'id': 550, 'seek': 336848, 'start': 3387.76, 'end': 3393.88, 'text': ' But as a programmer or as a user of a system what you will see is process A is running', 'tokens': [51328, 583, 382, 257, 32116, 420, 382, 257, 4195, 295, 257, 1185, 437, 291, 486, 536, 307, 1399, 316, 307, 2614, 51634], 'temperature': 0.0, 'avg_logprob': -0.1257626508411608, 'compression_ratio': 1.8022598870056497, 'no_speech_prob': 0.13285750150680542}, {'id': 551, 'seek': 339388, 'start': 3393.88, 'end': 3399.44, 'text': ' continuously, process B is running continuously, process C is running continuously without', 'tokens': [50364, 15684, 11, 1399, 363, 307, 2614, 15684, 11, 1399, 383, 307, 2614, 15684, 1553, 50642], 'temperature': 0.0, 'avg_logprob': -0.18746641084745333, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.04465535655617714}, {'id': 552, 'seek': 339388, 'start': 3399.44, 'end': 3403.48, 'text': ' any interruptions.', 'tokens': [50642, 604, 12729, 626, 13, 50844], 'temperature': 0.0, 'avg_logprob': -0.18746641084745333, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.04465535655617714}, {'id': 553, 'seek': 339388, 'start': 3403.48, 'end': 3404.48, 'text': ' Any questions so far?', 'tokens': [50844, 2639, 1651, 370, 1400, 30, 50894], 'temperature': 0.0, 'avg_logprob': -0.18746641084745333, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.04465535655617714}, {'id': 554, 'seek': 339388, 'start': 3404.48, 'end': 3410.0, 'text': ' I am kind of not going into all the details of operating system theories on how processes', 'tokens': [50894, 286, 669, 733, 295, 406, 516, 666, 439, 264, 4365, 295, 7447, 1185, 13667, 322, 577, 7555, 51170], 'temperature': 0.0, 'avg_logprob': -0.18746641084745333, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.04465535655617714}, {'id': 555, 'seek': 339388, 'start': 3410.0, 'end': 3413.44, 'text': ' are and so on.', 'tokens': [51170, 366, 293, 370, 322, 13, 51342], 'temperature': 0.0, 'avg_logprob': -0.18746641084745333, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.04465535655617714}, {'id': 556, 'seek': 339388, 'start': 3413.44, 'end': 3415.48, 'text': ' So how do you create process?', 'tokens': [51342, 407, 577, 360, 291, 1884, 1399, 30, 51444], 'temperature': 0.0, 'avg_logprob': -0.18746641084745333, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.04465535655617714}, {'id': 557, 'seek': 339388, 'start': 3415.48, 'end': 3421.2400000000002, 'text': ' Now this again is an implementation dependent thing.', 'tokens': [51444, 823, 341, 797, 307, 364, 11420, 12334, 551, 13, 51732], 'temperature': 0.0, 'avg_logprob': -0.18746641084745333, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.04465535655617714}, {'id': 558, 'seek': 342124, 'start': 3421.24, 'end': 3425.7999999999997, 'text': ' One of the common models is something called as fork EXEC model which is what is used on', 'tokens': [50364, 1485, 295, 264, 2689, 5245, 307, 746, 1219, 382, 17716, 16385, 8140, 2316, 597, 307, 437, 307, 1143, 322, 50592], 'temperature': 0.0, 'avg_logprob': -0.18919016255272758, 'compression_ratio': 1.5368421052631578, 'no_speech_prob': 0.05829094350337982}, {'id': 559, 'seek': 342124, 'start': 3425.7999999999997, 'end': 3427.4799999999996, 'text': ' Linux.', 'tokens': [50592, 18734, 13, 50676], 'temperature': 0.0, 'avg_logprob': -0.18919016255272758, 'compression_ratio': 1.5368421052631578, 'no_speech_prob': 0.05829094350337982}, {'id': 560, 'seek': 342124, 'start': 3427.4799999999996, 'end': 3431.5, 'text': ' Windows has completely different ways to handle processes.', 'tokens': [50676, 8591, 575, 2584, 819, 2098, 281, 4813, 7555, 13, 50877], 'temperature': 0.0, 'avg_logprob': -0.18919016255272758, 'compression_ratio': 1.5368421052631578, 'no_speech_prob': 0.05829094350337982}, {'id': 561, 'seek': 342124, 'start': 3431.5, 'end': 3438.9799999999996, 'text': ' So what forks API does is it creates a copy of the current process.', 'tokens': [50877, 407, 437, 337, 1694, 9362, 775, 307, 309, 7829, 257, 5055, 295, 264, 2190, 1399, 13, 51251], 'temperature': 0.0, 'avg_logprob': -0.18919016255272758, 'compression_ratio': 1.5368421052631578, 'no_speech_prob': 0.05829094350337982}, {'id': 562, 'seek': 342124, 'start': 3438.9799999999996, 'end': 3445.7599999999998, 'text': ' So whenever I fork something I am creating an identical copy of that.', 'tokens': [51251, 407, 5699, 286, 17716, 746, 286, 669, 4084, 364, 14800, 5055, 295, 300, 13, 51590], 'temperature': 0.0, 'avg_logprob': -0.18919016255272758, 'compression_ratio': 1.5368421052631578, 'no_speech_prob': 0.05829094350337982}, {'id': 563, 'seek': 344576, 'start': 3446.28, 'end': 3452.92, 'text': ' The copy which is created has its own address space.', 'tokens': [50390, 440, 5055, 597, 307, 2942, 575, 1080, 1065, 2985, 1901, 13, 50722], 'temperature': 0.0, 'avg_logprob': -0.18912674398983226, 'compression_ratio': 1.8556701030927836, 'no_speech_prob': 0.18226031959056854}, {'id': 564, 'seek': 344576, 'start': 3452.92, 'end': 3460.48, 'text': " And what will happen is fork will return 0 to the child process and return child's process", 'tokens': [50722, 400, 437, 486, 1051, 307, 17716, 486, 2736, 1958, 281, 264, 1440, 1399, 293, 2736, 1440, 311, 1399, 51100], 'temperature': 0.0, 'avg_logprob': -0.18912674398983226, 'compression_ratio': 1.8556701030927836, 'no_speech_prob': 0.18226031959056854}, {'id': 565, 'seek': 344576, 'start': 3460.48, 'end': 3462.6000000000004, 'text': ' ID to the parent process.', 'tokens': [51100, 7348, 281, 264, 2596, 1399, 13, 51206], 'temperature': 0.0, 'avg_logprob': -0.18912674398983226, 'compression_ratio': 1.8556701030927836, 'no_speech_prob': 0.18226031959056854}, {'id': 566, 'seek': 344576, 'start': 3462.6000000000004, 'end': 3468.1600000000003, 'text': ' So once you call fork you are calling it once but the function is actually returning twice', 'tokens': [51206, 407, 1564, 291, 818, 17716, 291, 366, 5141, 309, 1564, 457, 264, 2445, 307, 767, 12678, 6091, 51484], 'temperature': 0.0, 'avg_logprob': -0.18912674398983226, 'compression_ratio': 1.8556701030927836, 'no_speech_prob': 0.18226031959056854}, {'id': 567, 'seek': 344576, 'start': 3468.1600000000003, 'end': 3470.0200000000004, 'text': ' logically.', 'tokens': [51484, 38887, 13, 51577], 'temperature': 0.0, 'avg_logprob': -0.18912674398983226, 'compression_ratio': 1.8556701030927836, 'no_speech_prob': 0.18226031959056854}, {'id': 568, 'seek': 344576, 'start': 3470.0200000000004, 'end': 3474.7200000000003, 'text': ' Because once it is returning to the parent process and once it is returning to the child', 'tokens': [51577, 1436, 1564, 309, 307, 12678, 281, 264, 2596, 1399, 293, 1564, 309, 307, 12678, 281, 264, 1440, 51812], 'temperature': 0.0, 'avg_logprob': -0.18912674398983226, 'compression_ratio': 1.8556701030927836, 'no_speech_prob': 0.18226031959056854}, {'id': 569, 'seek': 347472, 'start': 3474.72, 'end': 3478.04, 'text': ' process.', 'tokens': [50364, 1399, 13, 50530], 'temperature': 0.0, 'avg_logprob': -0.14992119221205122, 'compression_ratio': 1.7634408602150538, 'no_speech_prob': 0.017431391403079033}, {'id': 570, 'seek': 347472, 'start': 3478.04, 'end': 3487.4399999999996, 'text': ' So if you look at this code, once I do fork the PID there are two copies of code now running', 'tokens': [50530, 407, 498, 291, 574, 412, 341, 3089, 11, 1564, 286, 360, 17716, 264, 430, 2777, 456, 366, 732, 14341, 295, 3089, 586, 2614, 51000], 'temperature': 0.0, 'avg_logprob': -0.14992119221205122, 'compression_ratio': 1.7634408602150538, 'no_speech_prob': 0.017431391403079033}, {'id': 571, 'seek': 347472, 'start': 3487.4399999999996, 'end': 3488.4399999999996, 'text': ' simultaneously.', 'tokens': [51000, 16561, 13, 51050], 'temperature': 0.0, 'avg_logprob': -0.14992119221205122, 'compression_ratio': 1.7634408602150538, 'no_speech_prob': 0.017431391403079033}, {'id': 572, 'seek': 347472, 'start': 3488.4399999999996, 'end': 3495.8399999999997, 'text': ' PID will be 0 when the child process is running and PID will be actual ID of the child when', 'tokens': [51050, 430, 2777, 486, 312, 1958, 562, 264, 1440, 1399, 307, 2614, 293, 430, 2777, 486, 312, 3539, 7348, 295, 264, 1440, 562, 51420], 'temperature': 0.0, 'avg_logprob': -0.14992119221205122, 'compression_ratio': 1.7634408602150538, 'no_speech_prob': 0.017431391403079033}, {'id': 573, 'seek': 347472, 'start': 3495.8399999999997, 'end': 3498.04, 'text': ' the parent process is running.', 'tokens': [51420, 264, 2596, 1399, 307, 2614, 13, 51530], 'temperature': 0.0, 'avg_logprob': -0.14992119221205122, 'compression_ratio': 1.7634408602150538, 'no_speech_prob': 0.017431391403079033}, {'id': 574, 'seek': 347472, 'start': 3498.04, 'end': 3504.64, 'text': ' So if I check if PID is 0 and print this then child process will print hello from child', 'tokens': [51530, 407, 498, 286, 1520, 498, 430, 2777, 307, 1958, 293, 4482, 341, 550, 1440, 1399, 486, 4482, 7751, 490, 1440, 51860], 'temperature': 0.0, 'avg_logprob': -0.14992119221205122, 'compression_ratio': 1.7634408602150538, 'no_speech_prob': 0.017431391403079033}, {'id': 575, 'seek': 350464, 'start': 3504.7599999999998, 'end': 3509.72, 'text': ' and the parent process will print hello from parent.', 'tokens': [50370, 293, 264, 2596, 1399, 486, 4482, 7751, 490, 2596, 13, 50618], 'temperature': 0.0, 'avg_logprob': -0.133708788001019, 'compression_ratio': 1.663716814159292, 'no_speech_prob': 0.0002452221233397722}, {'id': 576, 'seek': 350464, 'start': 3509.72, 'end': 3511.68, 'text': ' Does that make sense?', 'tokens': [50618, 4402, 300, 652, 2020, 30, 50716], 'temperature': 0.0, 'avg_logprob': -0.133708788001019, 'compression_ratio': 1.663716814159292, 'no_speech_prob': 0.0002452221233397722}, {'id': 577, 'seek': 350464, 'start': 3511.68, 'end': 3518.04, 'text': ' And there is not much use of executing same program twice.', 'tokens': [50716, 400, 456, 307, 406, 709, 764, 295, 32368, 912, 1461, 6091, 13, 51034], 'temperature': 0.0, 'avg_logprob': -0.133708788001019, 'compression_ratio': 1.663716814159292, 'no_speech_prob': 0.0002452221233397722}, {'id': 578, 'seek': 350464, 'start': 3518.04, 'end': 3523.64, 'text': ' So although we forked created a copy of it I really wanted to do something different.', 'tokens': [51034, 407, 4878, 321, 17716, 292, 2942, 257, 5055, 295, 309, 286, 534, 1415, 281, 360, 746, 819, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.133708788001019, 'compression_ratio': 1.663716814159292, 'no_speech_prob': 0.0002452221233397722}, {'id': 579, 'seek': 350464, 'start': 3523.64, 'end': 3528.3599999999997, 'text': " I don't want child to keep doing the same thing as parent was doing.", 'tokens': [51314, 286, 500, 380, 528, 1440, 281, 1066, 884, 264, 912, 551, 382, 2596, 390, 884, 13, 51550], 'temperature': 0.0, 'avg_logprob': -0.133708788001019, 'compression_ratio': 1.663716814159292, 'no_speech_prob': 0.0002452221233397722}, {'id': 580, 'seek': 350464, 'start': 3528.3599999999997, 'end': 3533.24, 'text': ' So there is a different function called exec which will actually change the code in the', 'tokens': [51550, 407, 456, 307, 257, 819, 2445, 1219, 454, 3045, 597, 486, 767, 1319, 264, 3089, 294, 264, 51794], 'temperature': 0.0, 'avg_logprob': -0.133708788001019, 'compression_ratio': 1.663716814159292, 'no_speech_prob': 0.0002452221233397722}, {'id': 581, 'seek': 353324, 'start': 3533.24, 'end': 3535.12, 'text': ' child process.', 'tokens': [50364, 1440, 1399, 13, 50458], 'temperature': 0.0, 'avg_logprob': -0.1365963159148226, 'compression_ratio': 1.7815533980582525, 'no_speech_prob': 0.040790632367134094}, {'id': 582, 'seek': 353324, 'start': 3535.12, 'end': 3539.7999999999997, 'text': ' So anytime you have to create a process you have to go through this model where the parent', 'tokens': [50458, 407, 13038, 291, 362, 281, 1884, 257, 1399, 291, 362, 281, 352, 807, 341, 2316, 689, 264, 2596, 50692], 'temperature': 0.0, 'avg_logprob': -0.1365963159148226, 'compression_ratio': 1.7815533980582525, 'no_speech_prob': 0.040790632367134094}, {'id': 583, 'seek': 353324, 'start': 3539.7999999999997, 'end': 3549.56, 'text': ' process has to fork a child and exec will actually replace the child code.', 'tokens': [50692, 1399, 575, 281, 17716, 257, 1440, 293, 454, 3045, 486, 767, 7406, 264, 1440, 3089, 13, 51180], 'temperature': 0.0, 'avg_logprob': -0.1365963159148226, 'compression_ratio': 1.7815533980582525, 'no_speech_prob': 0.040790632367134094}, {'id': 584, 'seek': 353324, 'start': 3549.56, 'end': 3551.2, 'text': ' So logically this is what is happening.', 'tokens': [51180, 407, 38887, 341, 307, 437, 307, 2737, 13, 51262], 'temperature': 0.0, 'avg_logprob': -0.1365963159148226, 'compression_ratio': 1.7815533980582525, 'no_speech_prob': 0.040790632367134094}, {'id': 585, 'seek': 353324, 'start': 3551.2, 'end': 3556.3199999999997, 'text': ' So parent is running, parent has its own stack, its own data and its own code.', 'tokens': [51262, 407, 2596, 307, 2614, 11, 2596, 575, 1080, 1065, 8630, 11, 1080, 1065, 1412, 293, 1080, 1065, 3089, 13, 51518], 'temperature': 0.0, 'avg_logprob': -0.1365963159148226, 'compression_ratio': 1.7815533980582525, 'no_speech_prob': 0.040790632367134094}, {'id': 586, 'seek': 353324, 'start': 3556.3199999999997, 'end': 3560.18, 'text': " So let's assume parent was the bash which was running.", 'tokens': [51518, 407, 718, 311, 6552, 2596, 390, 264, 46183, 597, 390, 2614, 13, 51711], 'temperature': 0.0, 'avg_logprob': -0.1365963159148226, 'compression_ratio': 1.7815533980582525, 'no_speech_prob': 0.040790632367134094}, {'id': 587, 'seek': 353324, 'start': 3560.18, 'end': 3561.4399999999996, 'text': ' I do a fork.', 'tokens': [51711, 286, 360, 257, 17716, 13, 51774], 'temperature': 0.0, 'avg_logprob': -0.1365963159148226, 'compression_ratio': 1.7815533980582525, 'no_speech_prob': 0.040790632367134094}, {'id': 588, 'seek': 356144, 'start': 3561.44, 'end': 3566.76, 'text': ' So whenever you execute command ls for example on the shell this is what is happening behind', 'tokens': [50364, 407, 5699, 291, 14483, 5622, 287, 82, 337, 1365, 322, 264, 8720, 341, 307, 437, 307, 2737, 2261, 50630], 'temperature': 0.0, 'avg_logprob': -0.12242033607081364, 'compression_ratio': 1.6564102564102565, 'no_speech_prob': 0.005540876183658838}, {'id': 589, 'seek': 356144, 'start': 3566.76, 'end': 3567.76, 'text': ' the scenes.', 'tokens': [50630, 264, 8026, 13, 50680], 'temperature': 0.0, 'avg_logprob': -0.12242033607081364, 'compression_ratio': 1.6564102564102565, 'no_speech_prob': 0.005540876183658838}, {'id': 590, 'seek': 356144, 'start': 3567.76, 'end': 3573.32, 'text': ' The terminal is going to bash is actually going to call a fork function.', 'tokens': [50680, 440, 14709, 307, 516, 281, 46183, 307, 767, 516, 281, 818, 257, 17716, 2445, 13, 50958], 'temperature': 0.0, 'avg_logprob': -0.12242033607081364, 'compression_ratio': 1.6564102564102565, 'no_speech_prob': 0.005540876183658838}, {'id': 591, 'seek': 356144, 'start': 3573.32, 'end': 3578.2400000000002, 'text': ' So parent will continue doing execution of the bash.', 'tokens': [50958, 407, 2596, 486, 2354, 884, 15058, 295, 264, 46183, 13, 51204], 'temperature': 0.0, 'avg_logprob': -0.12242033607081364, 'compression_ratio': 1.6564102564102565, 'no_speech_prob': 0.005540876183658838}, {'id': 592, 'seek': 356144, 'start': 3578.2400000000002, 'end': 3588.28, 'text': ' A child will be created which is also exactly same but child will then execute exec function', 'tokens': [51204, 316, 1440, 486, 312, 2942, 597, 307, 611, 2293, 912, 457, 1440, 486, 550, 14483, 454, 3045, 2445, 51706], 'temperature': 0.0, 'avg_logprob': -0.12242033607081364, 'compression_ratio': 1.6564102564102565, 'no_speech_prob': 0.005540876183658838}, {'id': 593, 'seek': 358828, 'start': 3588.28, 'end': 3596.6800000000003, 'text': ' which will replace the entire content and child is now executing ls.', 'tokens': [50364, 597, 486, 7406, 264, 2302, 2701, 293, 1440, 307, 586, 32368, 287, 82, 13, 50784], 'temperature': 0.0, 'avg_logprob': -0.1396303330698321, 'compression_ratio': 1.5527950310559007, 'no_speech_prob': 0.05176173895597458}, {'id': 594, 'seek': 358828, 'start': 3596.6800000000003, 'end': 3599.52, 'text': ' Is this clear to everyone?', 'tokens': [50784, 1119, 341, 1850, 281, 1518, 30, 50926], 'temperature': 0.0, 'avg_logprob': -0.1396303330698321, 'compression_ratio': 1.5527950310559007, 'no_speech_prob': 0.05176173895597458}, {'id': 595, 'seek': 358828, 'start': 3599.52, 'end': 3608.2000000000003, 'text': ' So everything starts from fork and then you keep replacing content of the process using', 'tokens': [50926, 407, 1203, 3719, 490, 17716, 293, 550, 291, 1066, 19139, 2701, 295, 264, 1399, 1228, 51360], 'temperature': 0.0, 'avg_logprob': -0.1396303330698321, 'compression_ratio': 1.5527950310559007, 'no_speech_prob': 0.05176173895597458}, {'id': 596, 'seek': 358828, 'start': 3608.2000000000003, 'end': 3615.36, 'text': " exec and that's how you run a new program or create a new process.", 'tokens': [51360, 454, 3045, 293, 300, 311, 577, 291, 1190, 257, 777, 1461, 420, 1884, 257, 777, 1399, 13, 51718], 'temperature': 0.0, 'avg_logprob': -0.1396303330698321, 'compression_ratio': 1.5527950310559007, 'no_speech_prob': 0.05176173895597458}, {'id': 597, 'seek': 361536, 'start': 3615.36, 'end': 3619.92, 'text': ' Any questions so far?', 'tokens': [50364, 2639, 1651, 370, 1400, 30, 50592], 'temperature': 0.0, 'avg_logprob': -0.2760793822152274, 'compression_ratio': 0.9264705882352942, 'no_speech_prob': 0.84765625}, {'id': 598, 'seek': 361536, 'start': 3619.92, 'end': 3642.0, 'text': ' So quiz what will be output of this code?', 'tokens': [50592, 407, 15450, 437, 486, 312, 5598, 295, 341, 3089, 30, 51696], 'temperature': 0.0, 'avg_logprob': -0.2760793822152274, 'compression_ratio': 0.9264705882352942, 'no_speech_prob': 0.84765625}, {'id': 599, 'seek': 364200, 'start': 3642.0, 'end': 3648.04, 'text': ' So one answer is two will be printed by parent process and four and three will be printed', 'tokens': [50364, 407, 472, 1867, 307, 732, 486, 312, 13567, 538, 2596, 1399, 293, 1451, 293, 1045, 486, 312, 13567, 50666], 'temperature': 0.0, 'avg_logprob': -0.1718705693880717, 'compression_ratio': 1.6610169491525424, 'no_speech_prob': 0.7571113705635071}, {'id': 600, 'seek': 364200, 'start': 3648.04, 'end': 3654.3, 'text': ' by child process.', 'tokens': [50666, 538, 1440, 1399, 13, 50979], 'temperature': 0.0, 'avg_logprob': -0.1718705693880717, 'compression_ratio': 1.6610169491525424, 'no_speech_prob': 0.7571113705635071}, {'id': 601, 'seek': 364200, 'start': 3654.3, 'end': 3663.48, 'text': ' The sequence is not known but you know parent will print this and child will print this.', 'tokens': [50979, 440, 8310, 307, 406, 2570, 457, 291, 458, 2596, 486, 4482, 341, 293, 1440, 486, 4482, 341, 13, 51438], 'temperature': 0.0, 'avg_logprob': -0.1718705693880717, 'compression_ratio': 1.6610169491525424, 'no_speech_prob': 0.7571113705635071}, {'id': 602, 'seek': 366348, 'start': 3663.48, 'end': 3678.96, 'text': ' One other thing is sequence in which parent and child will run is kind of non deterministic.', 'tokens': [50364, 1485, 661, 551, 307, 8310, 294, 597, 2596, 293, 1440, 486, 1190, 307, 733, 295, 2107, 15957, 3142, 13, 51138], 'temperature': 0.0, 'avg_logprob': -0.1822399801137496, 'compression_ratio': 1.3877551020408163, 'no_speech_prob': 0.05162423476576805}, {'id': 603, 'seek': 366348, 'start': 3678.96, 'end': 3680.6, 'text': ' Does everyone get that?', 'tokens': [51138, 4402, 1518, 483, 300, 30, 51220], 'temperature': 0.0, 'avg_logprob': -0.1822399801137496, 'compression_ratio': 1.3877551020408163, 'no_speech_prob': 0.05162423476576805}, {'id': 604, 'seek': 366348, 'start': 3680.6, 'end': 3687.48, 'text': ' So remember what happened is when child started executing it had its own copy of stack.', 'tokens': [51220, 407, 1604, 437, 2011, 307, 562, 1440, 1409, 32368, 309, 632, 1080, 1065, 5055, 295, 8630, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.1822399801137496, 'compression_ratio': 1.3877551020408163, 'no_speech_prob': 0.05162423476576805}, {'id': 605, 'seek': 368748, 'start': 3687.48, 'end': 3692.42, 'text': ' So the x variable which is actually allocated on stack cannot be modified.', 'tokens': [50364, 407, 264, 2031, 7006, 597, 307, 767, 29772, 322, 8630, 2644, 312, 15873, 13, 50611], 'temperature': 0.0, 'avg_logprob': -0.131176700592041, 'compression_ratio': 1.8153153153153154, 'no_speech_prob': 0.2563018202781677}, {'id': 606, 'seek': 368748, 'start': 3692.42, 'end': 3697.54, 'text': ' The parent stack was not modified by the child.', 'tokens': [50611, 440, 2596, 8630, 390, 406, 15873, 538, 264, 1440, 13, 50867], 'temperature': 0.0, 'avg_logprob': -0.131176700592041, 'compression_ratio': 1.8153153153153154, 'no_speech_prob': 0.2563018202781677}, {'id': 607, 'seek': 368748, 'start': 3697.54, 'end': 3703.8, 'text': ' So when child did plus plus x it modified its own stack not the stack of the parent', 'tokens': [50867, 407, 562, 1440, 630, 1804, 1804, 2031, 309, 15873, 1080, 1065, 8630, 406, 264, 8630, 295, 264, 2596, 51180], 'temperature': 0.0, 'avg_logprob': -0.131176700592041, 'compression_ratio': 1.8153153153153154, 'no_speech_prob': 0.2563018202781677}, {'id': 608, 'seek': 368748, 'start': 3703.8, 'end': 3704.8, 'text': ' process.', 'tokens': [51180, 1399, 13, 51230], 'temperature': 0.0, 'avg_logprob': -0.131176700592041, 'compression_ratio': 1.8153153153153154, 'no_speech_prob': 0.2563018202781677}, {'id': 609, 'seek': 368748, 'start': 3704.8, 'end': 3711.0, 'text': " That's why this became four and it printed four and the child then decremented it and", 'tokens': [51230, 663, 311, 983, 341, 3062, 1451, 293, 309, 13567, 1451, 293, 264, 1440, 550, 6853, 14684, 309, 293, 51540], 'temperature': 0.0, 'avg_logprob': -0.131176700592041, 'compression_ratio': 1.8153153153153154, 'no_speech_prob': 0.2563018202781677}, {'id': 610, 'seek': 368748, 'start': 3711.0, 'end': 3712.52, 'text': ' printed three.', 'tokens': [51540, 13567, 1045, 13, 51616], 'temperature': 0.0, 'avg_logprob': -0.131176700592041, 'compression_ratio': 1.8153153153153154, 'no_speech_prob': 0.2563018202781677}, {'id': 611, 'seek': 368748, 'start': 3712.52, 'end': 3717.08, 'text': ' If you look at the parent, parent was not at all affected by this code and simply came', 'tokens': [51616, 759, 291, 574, 412, 264, 2596, 11, 2596, 390, 406, 412, 439, 8028, 538, 341, 3089, 293, 2935, 1361, 51844], 'temperature': 0.0, 'avg_logprob': -0.131176700592041, 'compression_ratio': 1.8153153153153154, 'no_speech_prob': 0.2563018202781677}, {'id': 612, 'seek': 371708, 'start': 3717.68, 'end': 3718.68, 'text': ' here and printed two.', 'tokens': [50394, 510, 293, 13567, 732, 13, 50444], 'temperature': 0.0, 'avg_logprob': -0.20004402963738693, 'compression_ratio': 1.5025906735751295, 'no_speech_prob': 0.03512055054306984}, {'id': 613, 'seek': 371708, 'start': 3718.68, 'end': 3722.6, 'text': " Now let's look at virtual memory.", 'tokens': [50444, 823, 718, 311, 574, 412, 6374, 4675, 13, 50640], 'temperature': 0.0, 'avg_logprob': -0.20004402963738693, 'compression_ratio': 1.5025906735751295, 'no_speech_prob': 0.03512055054306984}, {'id': 614, 'seek': 371708, 'start': 3722.6, 'end': 3731.74, 'text': ' So process as I told you also provides illusion of actually saying that every program has', 'tokens': [50640, 407, 1399, 382, 286, 1907, 291, 611, 6417, 18854, 295, 767, 1566, 300, 633, 1461, 575, 51097], 'temperature': 0.0, 'avg_logprob': -0.20004402963738693, 'compression_ratio': 1.5025906735751295, 'no_speech_prob': 0.03512055054306984}, {'id': 615, 'seek': 371708, 'start': 3731.74, 'end': 3734.68, 'text': ' access to the entire memory.', 'tokens': [51097, 2105, 281, 264, 2302, 4675, 13, 51244], 'temperature': 0.0, 'avg_logprob': -0.20004402963738693, 'compression_ratio': 1.5025906735751295, 'no_speech_prob': 0.03512055054306984}, {'id': 616, 'seek': 371708, 'start': 3734.68, 'end': 3742.48, 'text': ' Now if you have a machine with 32 bit address or 64 bit address you can at max get 2 raise', 'tokens': [51244, 823, 498, 291, 362, 257, 3479, 365, 8858, 857, 2985, 420, 12145, 857, 2985, 291, 393, 412, 11469, 483, 568, 5300, 51634], 'temperature': 0.0, 'avg_logprob': -0.20004402963738693, 'compression_ratio': 1.5025906735751295, 'no_speech_prob': 0.03512055054306984}, {'id': 617, 'seek': 371708, 'start': 3742.48, 'end': 3744.38, 'text': ' to n bytes of addresses.', 'tokens': [51634, 281, 297, 36088, 295, 16862, 13, 51729], 'temperature': 0.0, 'avg_logprob': -0.20004402963738693, 'compression_ratio': 1.5025906735751295, 'no_speech_prob': 0.03512055054306984}, {'id': 618, 'seek': 374438, 'start': 3744.38, 'end': 3750.42, 'text': ' So if you have 32 bit machine you get up to 4 GB memory and if you have 64 bit machine', 'tokens': [50364, 407, 498, 291, 362, 8858, 857, 3479, 291, 483, 493, 281, 1017, 26809, 4675, 293, 498, 291, 362, 12145, 857, 3479, 50666], 'temperature': 0.0, 'avg_logprob': -0.18321619460831828, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.04392009600996971}, {'id': 619, 'seek': 374438, 'start': 3750.42, 'end': 3756.02, 'text': ' you get up to 2 raise to 64 bytes memory.', 'tokens': [50666, 291, 483, 493, 281, 568, 5300, 281, 12145, 36088, 4675, 13, 50946], 'temperature': 0.0, 'avg_logprob': -0.18321619460831828, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.04392009600996971}, {'id': 620, 'seek': 374438, 'start': 3756.02, 'end': 3764.1, 'text': ' So you have this is your memory from 0 0 0 to whatever f f f f f depending on width of', 'tokens': [50946, 407, 291, 362, 341, 307, 428, 4675, 490, 1958, 1958, 1958, 281, 2035, 283, 283, 283, 283, 283, 5413, 322, 11402, 295, 51350], 'temperature': 0.0, 'avg_logprob': -0.18321619460831828, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.04392009600996971}, {'id': 621, 'seek': 374438, 'start': 3764.1, 'end': 3766.38, 'text': ' the address.', 'tokens': [51350, 264, 2985, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.18321619460831828, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.04392009600996971}, {'id': 622, 'seek': 376638, 'start': 3766.38, 'end': 3775.38, 'text': " Now one thing is you want to have private address for every process because you don't", 'tokens': [50364, 823, 472, 551, 307, 291, 528, 281, 362, 4551, 2985, 337, 633, 1399, 570, 291, 500, 380, 50814], 'temperature': 0.0, 'avg_logprob': -0.10337962468465169, 'compression_ratio': 1.6717948717948719, 'no_speech_prob': 0.008310000412166119}, {'id': 623, 'seek': 376638, 'start': 3775.38, 'end': 3777.92, 'text': ' want accidentally to modify these things.', 'tokens': [50814, 528, 15715, 281, 16927, 613, 721, 13, 50941], 'temperature': 0.0, 'avg_logprob': -0.10337962468465169, 'compression_ratio': 1.6717948717948719, 'no_speech_prob': 0.008310000412166119}, {'id': 624, 'seek': 376638, 'start': 3777.92, 'end': 3783.6800000000003, 'text': " So just like we saw in the prior example you don't want child to accidentally write stack", 'tokens': [50941, 407, 445, 411, 321, 1866, 294, 264, 4059, 1365, 291, 500, 380, 528, 1440, 281, 15715, 2464, 8630, 51229], 'temperature': 0.0, 'avg_logprob': -0.10337962468465169, 'compression_ratio': 1.6717948717948719, 'no_speech_prob': 0.008310000412166119}, {'id': 625, 'seek': 376638, 'start': 3783.6800000000003, 'end': 3785.86, 'text': ' of parent.', 'tokens': [51229, 295, 2596, 13, 51338], 'temperature': 0.0, 'avg_logprob': -0.10337962468465169, 'compression_ratio': 1.6717948717948719, 'no_speech_prob': 0.008310000412166119}, {'id': 626, 'seek': 376638, 'start': 3785.86, 'end': 3793.92, 'text': ' So you want to ensure that you create separation between the processes in terms of memory access.', 'tokens': [51338, 407, 291, 528, 281, 5586, 300, 291, 1884, 14634, 1296, 264, 7555, 294, 2115, 295, 4675, 2105, 13, 51741], 'temperature': 0.0, 'avg_logprob': -0.10337962468465169, 'compression_ratio': 1.6717948717948719, 'no_speech_prob': 0.008310000412166119}, {'id': 627, 'seek': 379392, 'start': 3793.92, 'end': 3800.1800000000003, 'text': " So you don't want accidentally one process to modify something of the other process because", 'tokens': [50364, 407, 291, 500, 380, 528, 15715, 472, 1399, 281, 16927, 746, 295, 264, 661, 1399, 570, 50677], 'temperature': 0.0, 'avg_logprob': -0.13883282764848456, 'compression_ratio': 1.5194174757281553, 'no_speech_prob': 0.009669548831880093}, {'id': 628, 'seek': 379392, 'start': 3800.1800000000003, 'end': 3803.66, 'text': ' it will cause other process to malfunction.', 'tokens': [50677, 309, 486, 3082, 661, 1399, 281, 50229, 13, 50851], 'temperature': 0.0, 'avg_logprob': -0.13883282764848456, 'compression_ratio': 1.5194174757281553, 'no_speech_prob': 0.009669548831880093}, {'id': 629, 'seek': 379392, 'start': 3803.66, 'end': 3805.7400000000002, 'text': ' Does everyone get that?', 'tokens': [50851, 4402, 1518, 483, 300, 30, 50955], 'temperature': 0.0, 'avg_logprob': -0.13883282764848456, 'compression_ratio': 1.5194174757281553, 'no_speech_prob': 0.009669548831880093}, {'id': 630, 'seek': 379392, 'start': 3805.7400000000002, 'end': 3811.96, 'text': ' Now do we have 2 raise to n bytes of physical memory?', 'tokens': [50955, 823, 360, 321, 362, 568, 5300, 281, 297, 36088, 295, 4001, 4675, 30, 51266], 'temperature': 0.0, 'avg_logprob': -0.13883282764848456, 'compression_ratio': 1.5194174757281553, 'no_speech_prob': 0.009669548831880093}, {'id': 631, 'seek': 379392, 'start': 3811.96, 'end': 3817.84, 'text': ' Maybe you have 4 GB RAM but 2 raise to 64 is just too much to ask for.', 'tokens': [51266, 2704, 291, 362, 1017, 26809, 14561, 457, 568, 5300, 281, 12145, 307, 445, 886, 709, 281, 1029, 337, 13, 51560], 'temperature': 0.0, 'avg_logprob': -0.13883282764848456, 'compression_ratio': 1.5194174757281553, 'no_speech_prob': 0.009669548831880093}, {'id': 632, 'seek': 379392, 'start': 3817.84, 'end': 3819.84, 'text': " So you don't have that much.", 'tokens': [51560, 407, 291, 500, 380, 362, 300, 709, 13, 51660], 'temperature': 0.0, 'avg_logprob': -0.13883282764848456, 'compression_ratio': 1.5194174757281553, 'no_speech_prob': 0.009669548831880093}, {'id': 633, 'seek': 381984, 'start': 3819.84, 'end': 3824.1400000000003, 'text': " Now you certainly don't have that much RAM for every process.", 'tokens': [50364, 823, 291, 3297, 500, 380, 362, 300, 709, 14561, 337, 633, 1399, 13, 50579], 'temperature': 0.0, 'avg_logprob': -0.13492340737200798, 'compression_ratio': 1.78, 'no_speech_prob': 0.196202352643013}, {'id': 634, 'seek': 381984, 'start': 3824.1400000000003, 'end': 3831.28, 'text': ' So you cannot say my P1 has 4 GB RAM, my P2 has 4 GB RAM, my P3 has 4 GB RAM and so on.', 'tokens': [50579, 407, 291, 2644, 584, 452, 430, 16, 575, 1017, 26809, 14561, 11, 452, 430, 17, 575, 1017, 26809, 14561, 11, 452, 430, 18, 575, 1017, 26809, 14561, 293, 370, 322, 13, 50936], 'temperature': 0.0, 'avg_logprob': -0.13492340737200798, 'compression_ratio': 1.78, 'no_speech_prob': 0.196202352643013}, {'id': 635, 'seek': 381984, 'start': 3831.28, 'end': 3836.8, 'text': " So you will have some memory but you certainly don't have sufficient to get all the addresses.", 'tokens': [50936, 407, 291, 486, 362, 512, 4675, 457, 291, 3297, 500, 380, 362, 11563, 281, 483, 439, 264, 16862, 13, 51212], 'temperature': 0.0, 'avg_logprob': -0.13492340737200798, 'compression_ratio': 1.78, 'no_speech_prob': 0.196202352643013}, {'id': 636, 'seek': 381984, 'start': 3836.8, 'end': 3843.76, 'text': " Furthermore you don't have really sufficient memory to have completely separate memory", 'tokens': [51212, 23999, 291, 500, 380, 362, 534, 11563, 4675, 281, 362, 2584, 4994, 4675, 51560], 'temperature': 0.0, 'avg_logprob': -0.13492340737200798, 'compression_ratio': 1.78, 'no_speech_prob': 0.196202352643013}, {'id': 637, 'seek': 381984, 'start': 3843.76, 'end': 3847.42, 'text': ' for each of the process.', 'tokens': [51560, 337, 1184, 295, 264, 1399, 13, 51743], 'temperature': 0.0, 'avg_logprob': -0.13492340737200798, 'compression_ratio': 1.78, 'no_speech_prob': 0.196202352643013}, {'id': 638, 'seek': 384742, 'start': 3847.42, 'end': 3859.1800000000003, 'text': ' So address space is essentially the layout of how the memory is organized for each process.', 'tokens': [50364, 407, 2985, 1901, 307, 4476, 264, 13333, 295, 577, 264, 4675, 307, 9983, 337, 1184, 1399, 13, 50952], 'temperature': 0.0, 'avg_logprob': -0.14540191888809204, 'compression_ratio': 1.6548223350253808, 'no_speech_prob': 0.006899477448314428}, {'id': 639, 'seek': 384742, 'start': 3859.1800000000003, 'end': 3865.6800000000003, 'text': ' So every process which we saw will have this kind of a memory map.', 'tokens': [50952, 407, 633, 1399, 597, 321, 1866, 486, 362, 341, 733, 295, 257, 4675, 4471, 13, 51277], 'temperature': 0.0, 'avg_logprob': -0.14540191888809204, 'compression_ratio': 1.6548223350253808, 'no_speech_prob': 0.006899477448314428}, {'id': 640, 'seek': 384742, 'start': 3865.6800000000003, 'end': 3868.44, 'text': ' Now this again is implementation specific.', 'tokens': [51277, 823, 341, 797, 307, 11420, 2685, 13, 51415], 'temperature': 0.0, 'avg_logprob': -0.14540191888809204, 'compression_ratio': 1.6548223350253808, 'no_speech_prob': 0.006899477448314428}, {'id': 641, 'seek': 384742, 'start': 3868.44, 'end': 3871.34, 'text': ' So this is again for x86 Linux.', 'tokens': [51415, 407, 341, 307, 797, 337, 2031, 22193, 18734, 13, 51560], 'temperature': 0.0, 'avg_logprob': -0.14540191888809204, 'compression_ratio': 1.6548223350253808, 'no_speech_prob': 0.006899477448314428}, {'id': 642, 'seek': 384742, 'start': 3871.34, 'end': 3876.1, 'text': ' x86 64 Linux will have something different, Windows will have something different and', 'tokens': [51560, 2031, 22193, 12145, 18734, 486, 362, 746, 819, 11, 8591, 486, 362, 746, 819, 293, 51798], 'temperature': 0.0, 'avg_logprob': -0.14540191888809204, 'compression_ratio': 1.6548223350253808, 'no_speech_prob': 0.006899477448314428}, {'id': 643, 'seek': 384742, 'start': 3876.1, 'end': 3877.1, 'text': ' so on.', 'tokens': [51798, 370, 322, 13, 51848], 'temperature': 0.0, 'avg_logprob': -0.14540191888809204, 'compression_ratio': 1.6548223350253808, 'no_speech_prob': 0.006899477448314428}, {'id': 644, 'seek': 387710, 'start': 3877.22, 'end': 3880.1, 'text': ' So all these things are kind of implementation specific.', 'tokens': [50370, 407, 439, 613, 721, 366, 733, 295, 11420, 2685, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.16157357352120535, 'compression_ratio': 1.790794979079498, 'no_speech_prob': 0.004607868380844593}, {'id': 645, 'seek': 387710, 'start': 3880.1, 'end': 3886.2999999999997, 'text': ' But if you look at the Linux, what Linux says its code segment always starts at this address.', 'tokens': [50514, 583, 498, 291, 574, 412, 264, 18734, 11, 437, 18734, 1619, 1080, 3089, 9469, 1009, 3719, 412, 341, 2985, 13, 50824], 'temperature': 0.0, 'avg_logprob': -0.16157357352120535, 'compression_ratio': 1.790794979079498, 'no_speech_prob': 0.004607868380844593}, {'id': 646, 'seek': 387710, 'start': 3886.2999999999997, 'end': 3890.3399999999997, 'text': ' Remember this address we saw somewhere in the ELF.', 'tokens': [50824, 5459, 341, 2985, 321, 1866, 4079, 294, 264, 14426, 37, 13, 51026], 'temperature': 0.0, 'avg_logprob': -0.16157357352120535, 'compression_ratio': 1.790794979079498, 'no_speech_prob': 0.004607868380844593}, {'id': 647, 'seek': 387710, 'start': 3890.3399999999997, 'end': 3893.14, 'text': ' So this is where the code segment starts.', 'tokens': [51026, 407, 341, 307, 689, 264, 3089, 9469, 3719, 13, 51166], 'temperature': 0.0, 'avg_logprob': -0.16157357352120535, 'compression_ratio': 1.790794979079498, 'no_speech_prob': 0.004607868380844593}, {'id': 648, 'seek': 387710, 'start': 3893.14, 'end': 3898.48, 'text': ' Then you have all the data segment which has initialized variables and then you have BSS', 'tokens': [51166, 1396, 291, 362, 439, 264, 1412, 9469, 597, 575, 5883, 1602, 9102, 293, 550, 291, 362, 363, 21929, 51433], 'temperature': 0.0, 'avg_logprob': -0.16157357352120535, 'compression_ratio': 1.790794979079498, 'no_speech_prob': 0.004607868380844593}, {'id': 649, 'seek': 387710, 'start': 3898.48, 'end': 3902.1, 'text': ' segment which is all the uninitialized variables.', 'tokens': [51433, 9469, 597, 307, 439, 264, 43456, 270, 831, 1602, 9102, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.16157357352120535, 'compression_ratio': 1.790794979079498, 'no_speech_prob': 0.004607868380844593}, {'id': 650, 'seek': 387710, 'start': 3902.1, 'end': 3905.2999999999997, 'text': ' And these are all loaded from the executable.', 'tokens': [51614, 400, 613, 366, 439, 13210, 490, 264, 7568, 712, 13, 51774], 'temperature': 0.0, 'avg_logprob': -0.16157357352120535, 'compression_ratio': 1.790794979079498, 'no_speech_prob': 0.004607868380844593}, {'id': 651, 'seek': 390530, 'start': 3905.3, 'end': 3911.2200000000003, 'text': ' So the executable file which you had, had the information for these segments.', 'tokens': [50364, 407, 264, 7568, 712, 3991, 597, 291, 632, 11, 632, 264, 1589, 337, 613, 19904, 13, 50660], 'temperature': 0.0, 'avg_logprob': -0.14801315257423803, 'compression_ratio': 1.7430167597765363, 'no_speech_prob': 0.005549050867557526}, {'id': 652, 'seek': 390530, 'start': 3911.2200000000003, 'end': 3918.1800000000003, 'text': ' So these are directly copied from the executable and loaded at these addresses.', 'tokens': [50660, 407, 613, 366, 3838, 25365, 490, 264, 7568, 712, 293, 13210, 412, 613, 16862, 13, 51008], 'temperature': 0.0, 'avg_logprob': -0.14801315257423803, 'compression_ratio': 1.7430167597765363, 'no_speech_prob': 0.005549050867557526}, {'id': 653, 'seek': 390530, 'start': 3918.1800000000003, 'end': 3923.3, 'text': ' So wherever code segment ends the data segment starts, wherever data segment ends BSS segment', 'tokens': [51008, 407, 8660, 3089, 9469, 5314, 264, 1412, 9469, 3719, 11, 8660, 1412, 9469, 5314, 363, 21929, 9469, 51264], 'temperature': 0.0, 'avg_logprob': -0.14801315257423803, 'compression_ratio': 1.7430167597765363, 'no_speech_prob': 0.005549050867557526}, {'id': 654, 'seek': 390530, 'start': 3923.3, 'end': 3925.88, 'text': ' starts.', 'tokens': [51264, 3719, 13, 51393], 'temperature': 0.0, 'avg_logprob': -0.14801315257423803, 'compression_ratio': 1.7430167597765363, 'no_speech_prob': 0.005549050867557526}, {'id': 655, 'seek': 390530, 'start': 3925.88, 'end': 3928.38, 'text': ' Then you have heap.', 'tokens': [51393, 1396, 291, 362, 33591, 13, 51518], 'temperature': 0.0, 'avg_logprob': -0.14801315257423803, 'compression_ratio': 1.7430167597765363, 'no_speech_prob': 0.005549050867557526}, {'id': 656, 'seek': 390530, 'start': 3928.38, 'end': 3931.1200000000003, 'text': ' Does everyone know what is heap?', 'tokens': [51518, 4402, 1518, 458, 437, 307, 33591, 30, 51655], 'temperature': 0.0, 'avg_logprob': -0.14801315257423803, 'compression_ratio': 1.7430167597765363, 'no_speech_prob': 0.005549050867557526}, {'id': 657, 'seek': 393112, 'start': 3931.12, 'end': 3938.64, 'text': ' So typically when you do dynamic memory allocation using malloc or new kind of functions, you', 'tokens': [50364, 407, 5850, 562, 291, 360, 8546, 4675, 27599, 1228, 16026, 905, 420, 777, 733, 295, 6828, 11, 291, 50740], 'temperature': 0.0, 'avg_logprob': -0.1072026202553197, 'compression_ratio': 1.8468468468468469, 'no_speech_prob': 0.0034815294202417135}, {'id': 658, 'seek': 393112, 'start': 3938.64, 'end': 3940.52, 'text': ' are allocating memory from heap.', 'tokens': [50740, 366, 12660, 990, 4675, 490, 33591, 13, 50834], 'temperature': 0.0, 'avg_logprob': -0.1072026202553197, 'compression_ratio': 1.8468468468468469, 'no_speech_prob': 0.0034815294202417135}, {'id': 659, 'seek': 393112, 'start': 3940.52, 'end': 3946.12, 'text': ' You are not allocating them from stack, you are not allocating it from data segment.', 'tokens': [50834, 509, 366, 406, 12660, 990, 552, 490, 8630, 11, 291, 366, 406, 12660, 990, 309, 490, 1412, 9469, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.1072026202553197, 'compression_ratio': 1.8468468468468469, 'no_speech_prob': 0.0034815294202417135}, {'id': 660, 'seek': 393112, 'start': 3946.12, 'end': 3951.04, 'text': ' So that all memory comes from this region called heap.', 'tokens': [51114, 407, 300, 439, 4675, 1487, 490, 341, 4458, 1219, 33591, 13, 51360], 'temperature': 0.0, 'avg_logprob': -0.1072026202553197, 'compression_ratio': 1.8468468468468469, 'no_speech_prob': 0.0034815294202417135}, {'id': 661, 'seek': 393112, 'start': 3951.04, 'end': 3955.92, 'text': ' And then we have something called as memory mapped region for shared library which we', 'tokens': [51360, 400, 550, 321, 362, 746, 1219, 382, 4675, 33318, 4458, 337, 5507, 6405, 597, 321, 51604], 'temperature': 0.0, 'avg_logprob': -0.1072026202553197, 'compression_ratio': 1.8468468468468469, 'no_speech_prob': 0.0034815294202417135}, {'id': 662, 'seek': 393112, 'start': 3955.92, 'end': 3958.96, 'text': ' will see later when we actually see the shared libraries.', 'tokens': [51604, 486, 536, 1780, 562, 321, 767, 536, 264, 5507, 15148, 13, 51756], 'temperature': 0.0, 'avg_logprob': -0.1072026202553197, 'compression_ratio': 1.8468468468468469, 'no_speech_prob': 0.0034815294202417135}, {'id': 663, 'seek': 395896, 'start': 3958.96, 'end': 3963.7200000000003, 'text': ' And then you have stack which is actually growing down.', 'tokens': [50364, 400, 550, 291, 362, 8630, 597, 307, 767, 4194, 760, 13, 50602], 'temperature': 0.0, 'avg_logprob': -0.1400933539730379, 'compression_ratio': 1.8980582524271845, 'no_speech_prob': 0.16430485248565674}, {'id': 664, 'seek': 395896, 'start': 3963.7200000000003, 'end': 3971.68, 'text': ' And then you have the upper 1 GB space in Linux 32 is reserved by the kernel.', 'tokens': [50602, 400, 550, 291, 362, 264, 6597, 502, 26809, 1901, 294, 18734, 8858, 307, 24819, 538, 264, 28256, 13, 51000], 'temperature': 0.0, 'avg_logprob': -0.1400933539730379, 'compression_ratio': 1.8980582524271845, 'no_speech_prob': 0.16430485248565674}, {'id': 665, 'seek': 395896, 'start': 3971.68, 'end': 3978.36, 'text': ' So kernel actually has upper 1 GB addresses reserved for its own use.', 'tokens': [51000, 407, 28256, 767, 575, 6597, 502, 26809, 16862, 24819, 337, 1080, 1065, 764, 13, 51334], 'temperature': 0.0, 'avg_logprob': -0.1400933539730379, 'compression_ratio': 1.8980582524271845, 'no_speech_prob': 0.16430485248565674}, {'id': 666, 'seek': 395896, 'start': 3978.36, 'end': 3985.36, 'text': ' Now every process which is getting created, although will have different content in memory,', 'tokens': [51334, 823, 633, 1399, 597, 307, 1242, 2942, 11, 4878, 486, 362, 819, 2701, 294, 4675, 11, 51684], 'temperature': 0.0, 'avg_logprob': -0.1400933539730379, 'compression_ratio': 1.8980582524271845, 'no_speech_prob': 0.16430485248565674}, {'id': 667, 'seek': 395896, 'start': 3985.36, 'end': 3988.92, 'text': ' every process has different data, every process has different code, every process has different', 'tokens': [51684, 633, 1399, 575, 819, 1412, 11, 633, 1399, 575, 819, 3089, 11, 633, 1399, 575, 819, 51862], 'temperature': 0.0, 'avg_logprob': -0.1400933539730379, 'compression_ratio': 1.8980582524271845, 'no_speech_prob': 0.16430485248565674}, {'id': 668, 'seek': 398892, 'start': 3988.92, 'end': 3989.92, 'text': ' stack.', 'tokens': [50364, 8630, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.1685663859049479, 'compression_ratio': 1.480263157894737, 'no_speech_prob': 0.00512900622561574}, {'id': 669, 'seek': 398892, 'start': 3989.92, 'end': 3995.48, 'text': ' The layout of how memory is organized itself is going to be same.', 'tokens': [50414, 440, 13333, 295, 577, 4675, 307, 9983, 2564, 307, 516, 281, 312, 912, 13, 50692], 'temperature': 0.0, 'avg_logprob': -0.1685663859049479, 'compression_ratio': 1.480263157894737, 'no_speech_prob': 0.00512900622561574}, {'id': 670, 'seek': 398892, 'start': 3995.48, 'end': 4000.92, 'text': ' So every process will have its code at this, every process will have its stack just below', 'tokens': [50692, 407, 633, 1399, 486, 362, 1080, 3089, 412, 341, 11, 633, 1399, 486, 362, 1080, 8630, 445, 2507, 50964], 'temperature': 0.0, 'avg_logprob': -0.1685663859049479, 'compression_ratio': 1.480263157894737, 'no_speech_prob': 0.00512900622561574}, {'id': 671, 'seek': 398892, 'start': 4000.92, 'end': 4004.7200000000003, 'text': ' the kernel address space and so on.', 'tokens': [50964, 264, 28256, 2985, 1901, 293, 370, 322, 13, 51154], 'temperature': 0.0, 'avg_logprob': -0.1685663859049479, 'compression_ratio': 1.480263157894737, 'no_speech_prob': 0.00512900622561574}, {'id': 672, 'seek': 398892, 'start': 4004.7200000000003, 'end': 4005.7200000000003, 'text': ' Does that make sense?', 'tokens': [51154, 4402, 300, 652, 2020, 30, 51204], 'temperature': 0.0, 'avg_logprob': -0.1685663859049479, 'compression_ratio': 1.480263157894737, 'no_speech_prob': 0.00512900622561574}, {'id': 673, 'seek': 398892, 'start': 4005.7200000000003, 'end': 4006.7200000000003, 'text': ' Yes.', 'tokens': [51204, 1079, 13, 51254], 'temperature': 0.0, 'avg_logprob': -0.1685663859049479, 'compression_ratio': 1.480263157894737, 'no_speech_prob': 0.00512900622561574}, {'id': 674, 'seek': 400672, 'start': 4006.72, 'end': 4021.24, 'text': ' Yes, I mean it is a specification by ABI, but linker puts all these addresses.', 'tokens': [50364, 1079, 11, 286, 914, 309, 307, 257, 31256, 538, 316, 11291, 11, 457, 2113, 260, 8137, 439, 613, 16862, 13, 51090], 'temperature': 0.0, 'avg_logprob': -0.26177019639448684, 'compression_ratio': 1.4177215189873418, 'no_speech_prob': 0.10644648969173431}, {'id': 675, 'seek': 400672, 'start': 4021.24, 'end': 4027.1, 'text': ' Remember in the program header we had virtual address and physical address fields.', 'tokens': [51090, 5459, 294, 264, 1461, 23117, 321, 632, 6374, 2985, 293, 4001, 2985, 7909, 13, 51383], 'temperature': 0.0, 'avg_logprob': -0.26177019639448684, 'compression_ratio': 1.4177215189873418, 'no_speech_prob': 0.10644648969173431}, {'id': 676, 'seek': 400672, 'start': 4027.1, 'end': 4031.9199999999996, 'text': ' So those fields will be populated by linker using this layout.', 'tokens': [51383, 407, 729, 7909, 486, 312, 32998, 538, 2113, 260, 1228, 341, 13333, 13, 51624], 'temperature': 0.0, 'avg_logprob': -0.26177019639448684, 'compression_ratio': 1.4177215189873418, 'no_speech_prob': 0.10644648969173431}, {'id': 677, 'seek': 403192, 'start': 4031.92, 'end': 4043.14, 'text': " So that's why data segment does not have a fixed stack, code segment has a fixed stack.", 'tokens': [50364, 407, 300, 311, 983, 1412, 9469, 775, 406, 362, 257, 6806, 8630, 11, 3089, 9469, 575, 257, 6806, 8630, 13, 50925], 'temperature': 0.0, 'avg_logprob': -0.18611987093661694, 'compression_ratio': 1.8990384615384615, 'no_speech_prob': 0.2564147412776947}, {'id': 678, 'seek': 403192, 'start': 4043.14, 'end': 4047.8, 'text': ' And depending on how much size code segment takes, the data segment will be after that', 'tokens': [50925, 400, 5413, 322, 577, 709, 2744, 3089, 9469, 2516, 11, 264, 1412, 9469, 486, 312, 934, 300, 51158], 'temperature': 0.0, 'avg_logprob': -0.18611987093661694, 'compression_ratio': 1.8990384615384615, 'no_speech_prob': 0.2564147412776947}, {'id': 679, 'seek': 403192, 'start': 4047.8, 'end': 4050.16, 'text': ' and the BSS segment will be after that.', 'tokens': [51158, 293, 264, 363, 21929, 9469, 486, 312, 934, 300, 13, 51276], 'temperature': 0.0, 'avg_logprob': -0.18611987093661694, 'compression_ratio': 1.8990384615384615, 'no_speech_prob': 0.2564147412776947}, {'id': 680, 'seek': 403192, 'start': 4050.16, 'end': 4055.34, 'text': ' So linker is responsible for only laying out these three things because information of', 'tokens': [51276, 407, 2113, 260, 307, 6250, 337, 787, 14903, 484, 613, 1045, 721, 570, 1589, 295, 51535], 'temperature': 0.0, 'avg_logprob': -0.18611987093661694, 'compression_ratio': 1.8990384615384615, 'no_speech_prob': 0.2564147412776947}, {'id': 681, 'seek': 403192, 'start': 4055.34, 'end': 4061.44, 'text': ' stack is not present in the executable, information of heap is not present in the executable.', 'tokens': [51535, 8630, 307, 406, 1974, 294, 264, 7568, 712, 11, 1589, 295, 33591, 307, 406, 1974, 294, 264, 7568, 712, 13, 51840], 'temperature': 0.0, 'avg_logprob': -0.18611987093661694, 'compression_ratio': 1.8990384615384615, 'no_speech_prob': 0.2564147412776947}, {'id': 682, 'seek': 406144, 'start': 4061.44, 'end': 4067.2000000000003, 'text': ' No, assembler does not.', 'tokens': [50364, 883, 11, 8438, 1918, 775, 406, 13, 50652], 'temperature': 0.0, 'avg_logprob': -0.15684627257671552, 'compression_ratio': 1.6637554585152838, 'no_speech_prob': 0.0016460695769637823}, {'id': 683, 'seek': 406144, 'start': 4067.2000000000003, 'end': 4072.8, 'text': ' This is where the linker, the fact that linker has to take all the things together and merge', 'tokens': [50652, 639, 307, 689, 264, 2113, 260, 11, 264, 1186, 300, 2113, 260, 575, 281, 747, 439, 264, 721, 1214, 293, 22183, 50932], 'temperature': 0.0, 'avg_logprob': -0.15684627257671552, 'compression_ratio': 1.6637554585152838, 'no_speech_prob': 0.0016460695769637823}, {'id': 684, 'seek': 406144, 'start': 4072.8, 'end': 4075.2400000000002, 'text': ' them together is this reason.', 'tokens': [50932, 552, 1214, 307, 341, 1778, 13, 51054], 'temperature': 0.0, 'avg_logprob': -0.15684627257671552, 'compression_ratio': 1.6637554585152838, 'no_speech_prob': 0.0016460695769637823}, {'id': 685, 'seek': 406144, 'start': 4075.2400000000002, 'end': 4077.1, 'text': ' Imagine something like this.', 'tokens': [51054, 11739, 746, 411, 341, 13, 51147], 'temperature': 0.0, 'avg_logprob': -0.15684627257671552, 'compression_ratio': 1.6637554585152838, 'no_speech_prob': 0.0016460695769637823}, {'id': 686, 'seek': 406144, 'start': 4077.1, 'end': 4082.12, 'text': " So you had a linker which didn't concatenate all the text sections.", 'tokens': [51147, 407, 291, 632, 257, 2113, 260, 597, 994, 380, 1588, 7186, 473, 439, 264, 2487, 10863, 13, 51398], 'temperature': 0.0, 'avg_logprob': -0.15684627257671552, 'compression_ratio': 1.6637554585152838, 'no_speech_prob': 0.0016460695769637823}, {'id': 687, 'seek': 406144, 'start': 4082.12, 'end': 4086.12, 'text': ' Then what will happen is you will create holes here.', 'tokens': [51398, 1396, 437, 486, 1051, 307, 291, 486, 1884, 8118, 510, 13, 51598], 'temperature': 0.0, 'avg_logprob': -0.15684627257671552, 'compression_ratio': 1.6637554585152838, 'no_speech_prob': 0.0016460695769637823}, {'id': 688, 'seek': 406144, 'start': 4086.12, 'end': 4090.46, 'text': ' And that becomes inefficient because what happens is there are some APIs which allow', 'tokens': [51598, 400, 300, 3643, 43495, 570, 437, 2314, 307, 456, 366, 512, 21445, 597, 2089, 51815], 'temperature': 0.0, 'avg_logprob': -0.15684627257671552, 'compression_ratio': 1.6637554585152838, 'no_speech_prob': 0.0016460695769637823}, {'id': 689, 'seek': 409046, 'start': 4090.48, 'end': 4095.84, 'text': ' you to load these segments very quickly from the executable using a technique called as', 'tokens': [50365, 291, 281, 3677, 613, 19904, 588, 2661, 490, 264, 7568, 712, 1228, 257, 6532, 1219, 382, 50633], 'temperature': 0.0, 'avg_logprob': -0.1421284870225556, 'compression_ratio': 1.5854700854700854, 'no_speech_prob': 0.12586218118667603}, {'id': 690, 'seek': 409046, 'start': 4095.84, 'end': 4096.84, 'text': ' memory mapped files.', 'tokens': [50633, 4675, 33318, 7098, 13, 50683], 'temperature': 0.0, 'avg_logprob': -0.1421284870225556, 'compression_ratio': 1.5854700854700854, 'no_speech_prob': 0.12586218118667603}, {'id': 691, 'seek': 409046, 'start': 4096.84, 'end': 4099.32, 'text': " I don't know how many of you are aware.", 'tokens': [50683, 286, 500, 380, 458, 577, 867, 295, 291, 366, 3650, 13, 50807], 'temperature': 0.0, 'avg_logprob': -0.1421284870225556, 'compression_ratio': 1.5854700854700854, 'no_speech_prob': 0.12586218118667603}, {'id': 692, 'seek': 409046, 'start': 4099.32, 'end': 4105.2, 'text': ' So there is an API called as Mmap which essentially allows you to read something from disk and', 'tokens': [50807, 407, 456, 307, 364, 9362, 1219, 382, 376, 24223, 597, 4476, 4045, 291, 281, 1401, 746, 490, 12355, 293, 51101], 'temperature': 0.0, 'avg_logprob': -0.1421284870225556, 'compression_ratio': 1.5854700854700854, 'no_speech_prob': 0.12586218118667603}, {'id': 693, 'seek': 409046, 'start': 4105.2, 'end': 4107.5, 'text': ' map it into the memory.', 'tokens': [51101, 4471, 309, 666, 264, 4675, 13, 51216], 'temperature': 0.0, 'avg_logprob': -0.1421284870225556, 'compression_ratio': 1.5854700854700854, 'no_speech_prob': 0.12586218118667603}, {'id': 694, 'seek': 409046, 'start': 4107.5, 'end': 4115.32, 'text': ' So what linker does is linker will arrange segments in such a way that they can be Mmapped', 'tokens': [51216, 407, 437, 2113, 260, 775, 307, 2113, 260, 486, 9424, 19904, 294, 1270, 257, 636, 300, 436, 393, 312, 376, 1696, 3320, 51607], 'temperature': 0.0, 'avg_logprob': -0.1421284870225556, 'compression_ratio': 1.5854700854700854, 'no_speech_prob': 0.12586218118667603}, {'id': 695, 'seek': 409046, 'start': 4115.32, 'end': 4117.78, 'text': ' in one shot.', 'tokens': [51607, 294, 472, 3347, 13, 51730], 'temperature': 0.0, 'avg_logprob': -0.1421284870225556, 'compression_ratio': 1.5854700854700854, 'no_speech_prob': 0.12586218118667603}, {'id': 696, 'seek': 411778, 'start': 4117.78, 'end': 4123.4, 'text': " Linker doesn't want loader to do Mmap multiple times because if it creates holes then loader", 'tokens': [50364, 8466, 260, 1177, 380, 528, 3677, 260, 281, 360, 376, 24223, 3866, 1413, 570, 498, 309, 7829, 8118, 550, 3677, 260, 50645], 'temperature': 0.0, 'avg_logprob': -0.17500490300795613, 'compression_ratio': 1.7342995169082125, 'no_speech_prob': 0.09524866193532944}, {'id': 697, 'seek': 411778, 'start': 4123.4, 'end': 4129.9, 'text': ' will have to take portion from here, other portion from here, other portion from here.', 'tokens': [50645, 486, 362, 281, 747, 8044, 490, 510, 11, 661, 8044, 490, 510, 11, 661, 8044, 490, 510, 13, 50970], 'temperature': 0.0, 'avg_logprob': -0.17500490300795613, 'compression_ratio': 1.7342995169082125, 'no_speech_prob': 0.09524866193532944}, {'id': 698, 'seek': 411778, 'start': 4129.9, 'end': 4140.179999999999, 'text': ' So this layout of the lower part is actually decided at link time not at the assembly time.', 'tokens': [50970, 407, 341, 13333, 295, 264, 3126, 644, 307, 767, 3047, 412, 2113, 565, 406, 412, 264, 12103, 565, 13, 51484], 'temperature': 0.0, 'avg_logprob': -0.17500490300795613, 'compression_ratio': 1.7342995169082125, 'no_speech_prob': 0.09524866193532944}, {'id': 699, 'seek': 411778, 'start': 4140.179999999999, 'end': 4146.82, 'text': ' Now kernel space is obviously part of the process but it does not mean that the process', 'tokens': [51484, 823, 28256, 1901, 307, 2745, 644, 295, 264, 1399, 457, 309, 775, 406, 914, 300, 264, 1399, 51816], 'temperature': 0.0, 'avg_logprob': -0.17500490300795613, 'compression_ratio': 1.7342995169082125, 'no_speech_prob': 0.09524866193532944}, {'id': 700, 'seek': 414682, 'start': 4146.86, 'end': 4149.0199999999995, 'text': ' can actually access it.', 'tokens': [50366, 393, 767, 2105, 309, 13, 50474], 'temperature': 0.0, 'avg_logprob': -0.17864369844135486, 'compression_ratio': 1.6680672268907564, 'no_speech_prob': 0.02927243709564209}, {'id': 701, 'seek': 414682, 'start': 4149.0199999999995, 'end': 4155.0199999999995, 'text': ' So process, if you start accessing this address in your program on Linux 32 you will actually', 'tokens': [50474, 407, 1399, 11, 498, 291, 722, 26440, 341, 2985, 294, 428, 1461, 322, 18734, 8858, 291, 486, 767, 50774], 'temperature': 0.0, 'avg_logprob': -0.17864369844135486, 'compression_ratio': 1.6680672268907564, 'no_speech_prob': 0.02927243709564209}, {'id': 702, 'seek': 414682, 'start': 4155.0199999999995, 'end': 4159.92, 'text': " get a secfork because you don't have permission to access these.", 'tokens': [50774, 483, 257, 907, 69, 1284, 570, 291, 500, 380, 362, 11226, 281, 2105, 613, 13, 51019], 'temperature': 0.0, 'avg_logprob': -0.17864369844135486, 'compression_ratio': 1.6680672268907564, 'no_speech_prob': 0.02927243709564209}, {'id': 703, 'seek': 414682, 'start': 4159.92, 'end': 4166.0199999999995, 'text': ' If you have studied the processor architectures especially 80386 and later there is something', 'tokens': [51019, 759, 291, 362, 9454, 264, 15321, 6331, 1303, 2318, 4688, 12625, 21, 293, 1780, 456, 307, 746, 51324], 'temperature': 0.0, 'avg_logprob': -0.17864369844135486, 'compression_ratio': 1.6680672268907564, 'no_speech_prob': 0.02927243709564209}, {'id': 704, 'seek': 414682, 'start': 4166.0199999999995, 'end': 4169.82, 'text': ' called as privilege for every code.', 'tokens': [51324, 1219, 382, 12122, 337, 633, 3089, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.17864369844135486, 'compression_ratio': 1.6680672268907564, 'no_speech_prob': 0.02927243709564209}, {'id': 705, 'seek': 414682, 'start': 4169.82, 'end': 4175.54, 'text': ' So this is running at ring 0 or ring 1 and user code is running at outer rings which', 'tokens': [51514, 407, 341, 307, 2614, 412, 4875, 1958, 420, 4875, 502, 293, 4195, 3089, 307, 2614, 412, 10847, 11136, 597, 51800], 'temperature': 0.0, 'avg_logprob': -0.17864369844135486, 'compression_ratio': 1.6680672268907564, 'no_speech_prob': 0.02927243709564209}, {'id': 706, 'seek': 417554, 'start': 4175.54, 'end': 4177.22, 'text': ' have lower privileges.', 'tokens': [50364, 362, 3126, 32588, 13, 50448], 'temperature': 0.0, 'avg_logprob': -0.13766556370015048, 'compression_ratio': 1.742489270386266, 'no_speech_prob': 0.024393944069743156}, {'id': 707, 'seek': 417554, 'start': 4177.22, 'end': 4182.74, 'text': ' So you cannot go from outer privilege to the inner privilege without having some interface', 'tokens': [50448, 407, 291, 2644, 352, 490, 10847, 12122, 281, 264, 7284, 12122, 1553, 1419, 512, 9226, 50724], 'temperature': 0.0, 'avg_logprob': -0.13766556370015048, 'compression_ratio': 1.742489270386266, 'no_speech_prob': 0.024393944069743156}, {'id': 708, 'seek': 417554, 'start': 4182.74, 'end': 4183.9, 'text': ' in between.', 'tokens': [50724, 294, 1296, 13, 50782], 'temperature': 0.0, 'avg_logprob': -0.13766556370015048, 'compression_ratio': 1.742489270386266, 'no_speech_prob': 0.024393944069743156}, {'id': 709, 'seek': 417554, 'start': 4183.9, 'end': 4188.9, 'text': ' So what happens is the program can access this space indirectly.', 'tokens': [50782, 407, 437, 2314, 307, 264, 1461, 393, 2105, 341, 1901, 37779, 13, 51032], 'temperature': 0.0, 'avg_logprob': -0.13766556370015048, 'compression_ratio': 1.742489270386266, 'no_speech_prob': 0.024393944069743156}, {'id': 710, 'seek': 417554, 'start': 4188.9, 'end': 4193.18, 'text': " You have to do a system call that's where kernel space will come into picture and do", 'tokens': [51032, 509, 362, 281, 360, 257, 1185, 818, 300, 311, 689, 28256, 1901, 486, 808, 666, 3036, 293, 360, 51246], 'temperature': 0.0, 'avg_logprob': -0.13766556370015048, 'compression_ratio': 1.742489270386266, 'no_speech_prob': 0.024393944069743156}, {'id': 711, 'seek': 417554, 'start': 4193.18, 'end': 4195.54, 'text': ' something for you.', 'tokens': [51246, 746, 337, 291, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.13766556370015048, 'compression_ratio': 1.742489270386266, 'no_speech_prob': 0.024393944069743156}, {'id': 712, 'seek': 417554, 'start': 4195.54, 'end': 4198.0199999999995, 'text': ' So you cannot access this directly.', 'tokens': [51364, 407, 291, 2644, 2105, 341, 3838, 13, 51488], 'temperature': 0.0, 'avg_logprob': -0.13766556370015048, 'compression_ratio': 1.742489270386266, 'no_speech_prob': 0.024393944069743156}, {'id': 713, 'seek': 417554, 'start': 4198.0199999999995, 'end': 4203.14, 'text': ' Kernel exposes some APIs which are further abstracted by libc or something.', 'tokens': [51488, 40224, 338, 1278, 4201, 512, 21445, 597, 366, 3052, 12649, 292, 538, 22854, 66, 420, 746, 13, 51744], 'temperature': 0.0, 'avg_logprob': -0.13766556370015048, 'compression_ratio': 1.742489270386266, 'no_speech_prob': 0.024393944069743156}, {'id': 714, 'seek': 420314, 'start': 4203.14, 'end': 4207.820000000001, 'text': ' So for example whenever you have to open a file in your program what will happen is', 'tokens': [50364, 407, 337, 1365, 5699, 291, 362, 281, 1269, 257, 3991, 294, 428, 1461, 437, 486, 1051, 307, 50598], 'temperature': 0.0, 'avg_logprob': -0.11902884876026827, 'compression_ratio': 1.757936507936508, 'no_speech_prob': 0.00755623122677207}, {'id': 715, 'seek': 420314, 'start': 4207.820000000001, 'end': 4214.14, 'text': ' libc at some point will call an API from kernel which will actually do the file handling thing', 'tokens': [50598, 22854, 66, 412, 512, 935, 486, 818, 364, 9362, 490, 28256, 597, 486, 767, 360, 264, 3991, 13175, 551, 50914], 'temperature': 0.0, 'avg_logprob': -0.11902884876026827, 'compression_ratio': 1.757936507936508, 'no_speech_prob': 0.00755623122677207}, {'id': 716, 'seek': 420314, 'start': 4214.14, 'end': 4217.820000000001, 'text': ' using the file system portion in the kernel.', 'tokens': [50914, 1228, 264, 3991, 1185, 8044, 294, 264, 28256, 13, 51098], 'temperature': 0.0, 'avg_logprob': -0.11902884876026827, 'compression_ratio': 1.757936507936508, 'no_speech_prob': 0.00755623122677207}, {'id': 717, 'seek': 420314, 'start': 4217.820000000001, 'end': 4223.06, 'text': ' Whenever kernel has to do some context switching the kernel space will come into picture do', 'tokens': [51098, 14159, 28256, 575, 281, 360, 512, 4319, 16493, 264, 28256, 1901, 486, 808, 666, 3036, 360, 51360], 'temperature': 0.0, 'avg_logprob': -0.11902884876026827, 'compression_ratio': 1.757936507936508, 'no_speech_prob': 0.00755623122677207}, {'id': 718, 'seek': 420314, 'start': 4223.06, 'end': 4226.52, 'text': ' the context switching and start the other process.', 'tokens': [51360, 264, 4319, 16493, 293, 722, 264, 661, 1399, 13, 51533], 'temperature': 0.0, 'avg_logprob': -0.11902884876026827, 'compression_ratio': 1.757936507936508, 'no_speech_prob': 0.00755623122677207}, {'id': 719, 'seek': 420314, 'start': 4226.52, 'end': 4228.38, 'text': ' Does that make sense?', 'tokens': [51533, 4402, 300, 652, 2020, 30, 51626], 'temperature': 0.0, 'avg_logprob': -0.11902884876026827, 'compression_ratio': 1.757936507936508, 'no_speech_prob': 0.00755623122677207}, {'id': 720, 'seek': 420314, 'start': 4228.38, 'end': 4231.5, 'text': ' Now there is something like this which you are seeing.', 'tokens': [51626, 823, 456, 307, 746, 411, 341, 597, 291, 366, 2577, 13, 51782], 'temperature': 0.0, 'avg_logprob': -0.11902884876026827, 'compression_ratio': 1.757936507936508, 'no_speech_prob': 0.00755623122677207}, {'id': 721, 'seek': 423150, 'start': 4231.54, 'end': 4237.5, 'text': ' So I have said that beyond kernel space there is a random stack offset and just before heap', 'tokens': [50366, 407, 286, 362, 848, 300, 4399, 28256, 1901, 456, 307, 257, 4974, 8630, 18687, 293, 445, 949, 33591, 50664], 'temperature': 0.0, 'avg_logprob': -0.14717522645607972, 'compression_ratio': 1.721951219512195, 'no_speech_prob': 0.014054789207875729}, {'id': 722, 'seek': 423150, 'start': 4237.5, 'end': 4241.22, 'text': ' there is random brk offset.', 'tokens': [50664, 456, 307, 4974, 738, 74, 18687, 13, 50850], 'temperature': 0.0, 'avg_logprob': -0.14717522645607972, 'compression_ratio': 1.721951219512195, 'no_speech_prob': 0.014054789207875729}, {'id': 723, 'seek': 423150, 'start': 4241.22, 'end': 4243.78, 'text': ' Historically this was not true.', 'tokens': [50850, 25108, 984, 341, 390, 406, 2074, 13, 50978], 'temperature': 0.0, 'avg_logprob': -0.14717522645607972, 'compression_ratio': 1.721951219512195, 'no_speech_prob': 0.014054789207875729}, {'id': 724, 'seek': 423150, 'start': 4243.78, 'end': 4249.66, 'text': ' Historically even stack was beginning just immediately after this address and heap was', 'tokens': [50978, 25108, 984, 754, 8630, 390, 2863, 445, 4258, 934, 341, 2985, 293, 33591, 390, 51272], 'temperature': 0.0, 'avg_logprob': -0.14717522645607972, 'compression_ratio': 1.721951219512195, 'no_speech_prob': 0.014054789207875729}, {'id': 725, 'seek': 423150, 'start': 4249.66, 'end': 4252.42, 'text': ' immediately beginning here.', 'tokens': [51272, 4258, 2863, 510, 13, 51410], 'temperature': 0.0, 'avg_logprob': -0.14717522645607972, 'compression_ratio': 1.721951219512195, 'no_speech_prob': 0.014054789207875729}, {'id': 726, 'seek': 423150, 'start': 4252.42, 'end': 4258.66, 'text': ' Now that created a problem for lot of things especially security because what happened', 'tokens': [51410, 823, 300, 2942, 257, 1154, 337, 688, 295, 721, 2318, 3825, 570, 437, 2011, 51722], 'temperature': 0.0, 'avg_logprob': -0.14717522645607972, 'compression_ratio': 1.721951219512195, 'no_speech_prob': 0.014054789207875729}, {'id': 727, 'seek': 425866, 'start': 4258.66, 'end': 4264.9, 'text': ' is you know deterministically every time the program is run the stack is at this location,', 'tokens': [50364, 307, 291, 458, 15957, 20458, 633, 565, 264, 1461, 307, 1190, 264, 8630, 307, 412, 341, 4914, 11, 50676], 'temperature': 0.0, 'avg_logprob': -0.1387256834242079, 'compression_ratio': 1.6991525423728813, 'no_speech_prob': 0.031114792451262474}, {'id': 728, 'seek': 425866, 'start': 4264.9, 'end': 4269.66, 'text': ' heap is at this location and so on and that was universally true for all the programs', 'tokens': [50676, 33591, 307, 412, 341, 4914, 293, 370, 322, 293, 300, 390, 43995, 2074, 337, 439, 264, 4268, 50914], 'temperature': 0.0, 'avg_logprob': -0.1387256834242079, 'compression_ratio': 1.6991525423728813, 'no_speech_prob': 0.031114792451262474}, {'id': 729, 'seek': 425866, 'start': 4269.66, 'end': 4273.34, 'text': ' which were running on linux 32 bit.', 'tokens': [50914, 597, 645, 2614, 322, 22896, 2449, 8858, 857, 13, 51098], 'temperature': 0.0, 'avg_logprob': -0.1387256834242079, 'compression_ratio': 1.6991525423728813, 'no_speech_prob': 0.031114792451262474}, {'id': 730, 'seek': 425866, 'start': 4273.34, 'end': 4279.66, 'text': ' And that created lot of security problems because you can very easily write code which', 'tokens': [51098, 400, 300, 2942, 688, 295, 3825, 2740, 570, 291, 393, 588, 3612, 2464, 3089, 597, 51414], 'temperature': 0.0, 'avg_logprob': -0.1387256834242079, 'compression_ratio': 1.6991525423728813, 'no_speech_prob': 0.031114792451262474}, {'id': 731, 'seek': 425866, 'start': 4279.66, 'end': 4283.58, 'text': ' can assume those addresses and do something interesting.', 'tokens': [51414, 393, 6552, 729, 16862, 293, 360, 746, 1880, 13, 51610], 'temperature': 0.0, 'avg_logprob': -0.1387256834242079, 'compression_ratio': 1.6991525423728813, 'no_speech_prob': 0.031114792451262474}, {'id': 732, 'seek': 425866, 'start': 4283.58, 'end': 4287.0199999999995, 'text': ' So they added something which is randomized.', 'tokens': [51610, 407, 436, 3869, 746, 597, 307, 38513, 13, 51782], 'temperature': 0.0, 'avg_logprob': -0.1387256834242079, 'compression_ratio': 1.6991525423728813, 'no_speech_prob': 0.031114792451262474}, {'id': 733, 'seek': 428702, 'start': 4287.02, 'end': 4293.860000000001, 'text': ' So they add some offset here every time you run a program stack is not at the same position.', 'tokens': [50364, 407, 436, 909, 512, 18687, 510, 633, 565, 291, 1190, 257, 1461, 8630, 307, 406, 412, 264, 912, 2535, 13, 50706], 'temperature': 0.0, 'avg_logprob': -0.1294143317949654, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.008836474269628525}, {'id': 734, 'seek': 428702, 'start': 4293.860000000001, 'end': 4298.860000000001, 'text': ' Stack will start at some different offsets and similarly heap will start at some different', 'tokens': [50706, 37649, 486, 722, 412, 512, 819, 39457, 1385, 293, 14138, 33591, 486, 722, 412, 512, 819, 50956], 'temperature': 0.0, 'avg_logprob': -0.1294143317949654, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.008836474269628525}, {'id': 735, 'seek': 428702, 'start': 4298.860000000001, 'end': 4299.900000000001, 'text': ' offsets.', 'tokens': [50956, 39457, 1385, 13, 51008], 'temperature': 0.0, 'avg_logprob': -0.1294143317949654, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.008836474269628525}, {'id': 736, 'seek': 428702, 'start': 4299.900000000001, 'end': 4304.860000000001, 'text': ' This is called address space layout randomization or ASLR.', 'tokens': [51008, 639, 307, 1219, 2985, 1901, 13333, 4974, 2144, 420, 7469, 31722, 13, 51256], 'temperature': 0.0, 'avg_logprob': -0.1294143317949654, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.008836474269628525}, {'id': 737, 'seek': 428702, 'start': 4304.860000000001, 'end': 4309.860000000001, 'text': ' This is not that effective in 32 bit linux because what happens is there is not much', 'tokens': [51256, 639, 307, 406, 300, 4942, 294, 8858, 857, 22896, 2449, 570, 437, 2314, 307, 456, 307, 406, 709, 51506], 'temperature': 0.0, 'avg_logprob': -0.1294143317949654, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.008836474269628525}, {'id': 738, 'seek': 428702, 'start': 4309.860000000001, 'end': 4315.580000000001, 'text': " address space to do much with it because you can't have large random offsets because your", 'tokens': [51506, 2985, 1901, 281, 360, 709, 365, 309, 570, 291, 393, 380, 362, 2416, 4974, 39457, 1385, 570, 428, 51792], 'temperature': 0.0, 'avg_logprob': -0.1294143317949654, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.008836474269628525}, {'id': 739, 'seek': 431558, 'start': 4315.9, 'end': 4318.22, 'text': ' address space is already constrained.', 'tokens': [50380, 2985, 1901, 307, 1217, 38901, 13, 50496], 'temperature': 0.0, 'avg_logprob': -0.17547517073781868, 'compression_ratio': 1.5572139303482586, 'no_speech_prob': 0.042067598551511765}, {'id': 740, 'seek': 431558, 'start': 4318.22, 'end': 4323.62, 'text': ' But on 64 bit variants where there is very large address space this actually plays much', 'tokens': [50496, 583, 322, 12145, 857, 21669, 689, 456, 307, 588, 2416, 2985, 1901, 341, 767, 5749, 709, 50766], 'temperature': 0.0, 'avg_logprob': -0.17547517073781868, 'compression_ratio': 1.5572139303482586, 'no_speech_prob': 0.042067598551511765}, {'id': 741, 'seek': 431558, 'start': 4323.62, 'end': 4325.62, 'text': ' interesting role.', 'tokens': [50766, 1880, 3090, 13, 50866], 'temperature': 0.0, 'avg_logprob': -0.17547517073781868, 'compression_ratio': 1.5572139303482586, 'no_speech_prob': 0.042067598551511765}, {'id': 742, 'seek': 431558, 'start': 4325.62, 'end': 4330.22, 'text': ' Most of the systems which you will have will have ASLR enabled.', 'tokens': [50866, 4534, 295, 264, 3652, 597, 291, 486, 362, 486, 362, 7469, 31722, 15172, 13, 51096], 'temperature': 0.0, 'avg_logprob': -0.17547517073781868, 'compression_ratio': 1.5572139303482586, 'no_speech_prob': 0.042067598551511765}, {'id': 743, 'seek': 431558, 'start': 4330.22, 'end': 4333.1, 'text': ' I think kernel 2.6 or something started it.', 'tokens': [51096, 286, 519, 28256, 568, 13, 21, 420, 746, 1409, 309, 13, 51240], 'temperature': 0.0, 'avg_logprob': -0.17547517073781868, 'compression_ratio': 1.5572139303482586, 'no_speech_prob': 0.042067598551511765}, {'id': 744, 'seek': 431558, 'start': 4333.1, 'end': 4339.86, 'text': ' So most of the recent distributions should have ASLR enabled.', 'tokens': [51240, 407, 881, 295, 264, 5162, 37870, 820, 362, 7469, 31722, 15172, 13, 51578], 'temperature': 0.0, 'avg_logprob': -0.17547517073781868, 'compression_ratio': 1.5572139303482586, 'no_speech_prob': 0.042067598551511765}, {'id': 745, 'seek': 433986, 'start': 4339.86, 'end': 4345.78, 'text': ' Now what are the problems with respect to the memory management which we need to solve.', 'tokens': [50364, 823, 437, 366, 264, 2740, 365, 3104, 281, 264, 4675, 4592, 597, 321, 643, 281, 5039, 13, 50660], 'temperature': 0.0, 'avg_logprob': -0.12471517603448097, 'compression_ratio': 1.6903765690376569, 'no_speech_prob': 0.05491205304861069}, {'id': 746, 'seek': 433986, 'start': 4345.78, 'end': 4351.099999999999, 'text': ' We said that this is the address map which we want to create for every process.', 'tokens': [50660, 492, 848, 300, 341, 307, 264, 2985, 4471, 597, 321, 528, 281, 1884, 337, 633, 1399, 13, 50926], 'temperature': 0.0, 'avg_logprob': -0.12471517603448097, 'compression_ratio': 1.6903765690376569, 'no_speech_prob': 0.05491205304861069}, {'id': 747, 'seek': 433986, 'start': 4351.099999999999, 'end': 4358.099999999999, 'text': " But we still have to we still know that we don't have sufficient memory and we cannot", 'tokens': [50926, 583, 321, 920, 362, 281, 321, 920, 458, 300, 321, 500, 380, 362, 11563, 4675, 293, 321, 2644, 51276], 'temperature': 0.0, 'avg_logprob': -0.12471517603448097, 'compression_ratio': 1.6903765690376569, 'no_speech_prob': 0.05491205304861069}, {'id': 748, 'seek': 433986, 'start': 4358.099999999999, 'end': 4363.339999999999, 'text': ' we need to ensure that there could be multiple processes active at the same time.', 'tokens': [51276, 321, 643, 281, 5586, 300, 456, 727, 312, 3866, 7555, 4967, 412, 264, 912, 565, 13, 51538], 'temperature': 0.0, 'avg_logprob': -0.12471517603448097, 'compression_ratio': 1.6903765690376569, 'no_speech_prob': 0.05491205304861069}, {'id': 749, 'seek': 433986, 'start': 4363.339999999999, 'end': 4367.339999999999, 'text': ' So how do we fit everything into the actual physical memory we have.', 'tokens': [51538, 407, 577, 360, 321, 3318, 1203, 666, 264, 3539, 4001, 4675, 321, 362, 13, 51738], 'temperature': 0.0, 'avg_logprob': -0.12471517603448097, 'compression_ratio': 1.6903765690376569, 'no_speech_prob': 0.05491205304861069}, {'id': 750, 'seek': 436734, 'start': 4367.82, 'end': 4373.18, 'text': " We don't have that much memory but we want to have multiple things running.", 'tokens': [50388, 492, 500, 380, 362, 300, 709, 4675, 457, 321, 528, 281, 362, 3866, 721, 2614, 13, 50656], 'temperature': 0.0, 'avg_logprob': -0.17065504120617378, 'compression_ratio': 1.6586538461538463, 'no_speech_prob': 0.03505541384220123}, {'id': 751, 'seek': 436734, 'start': 4373.18, 'end': 4377.02, 'text': ' And where are the different address spaces allocated.', 'tokens': [50656, 400, 689, 366, 264, 819, 2985, 7673, 29772, 13, 50848], 'temperature': 0.0, 'avg_logprob': -0.17065504120617378, 'compression_ratio': 1.6586538461538463, 'no_speech_prob': 0.03505541384220123}, {'id': 752, 'seek': 436734, 'start': 4377.02, 'end': 4380.06, 'text': ' So I said that code segment will be here.', 'tokens': [50848, 407, 286, 848, 300, 3089, 9469, 486, 312, 510, 13, 51000], 'temperature': 0.0, 'avg_logprob': -0.17065504120617378, 'compression_ratio': 1.6586538461538463, 'no_speech_prob': 0.03505541384220123}, {'id': 753, 'seek': 436734, 'start': 4380.06, 'end': 4384.18, 'text': ' Now everyone cannot get that address in the physical memory.', 'tokens': [51000, 823, 1518, 2644, 483, 300, 2985, 294, 264, 4001, 4675, 13, 51206], 'temperature': 0.0, 'avg_logprob': -0.17065504120617378, 'compression_ratio': 1.6586538461538463, 'no_speech_prob': 0.03505541384220123}, {'id': 754, 'seek': 436734, 'start': 4384.18, 'end': 4390.82, 'text': ' The 8c0 address all the programs cannot start at that address because physically there is', 'tokens': [51206, 440, 1649, 66, 15, 2985, 439, 264, 4268, 2644, 722, 412, 300, 2985, 570, 9762, 456, 307, 51538], 'temperature': 0.0, 'avg_logprob': -0.17065504120617378, 'compression_ratio': 1.6586538461538463, 'no_speech_prob': 0.03505541384220123}, {'id': 755, 'seek': 436734, 'start': 4390.82, 'end': 4393.18, 'text': ' only one that address.', 'tokens': [51538, 787, 472, 300, 2985, 13, 51656], 'temperature': 0.0, 'avg_logprob': -0.17065504120617378, 'compression_ratio': 1.6586538461538463, 'no_speech_prob': 0.03505541384220123}, {'id': 756, 'seek': 439318, 'start': 4393.18, 'end': 4399.9400000000005, 'text': ' So how do I allocate different portions of the address space in the physical memory.', 'tokens': [50364, 407, 577, 360, 286, 35713, 819, 25070, 295, 264, 2985, 1901, 294, 264, 4001, 4675, 13, 50702], 'temperature': 0.0, 'avg_logprob': -0.1521367927392324, 'compression_ratio': 1.719626168224299, 'no_speech_prob': 0.00581413833424449}, {'id': 757, 'seek': 439318, 'start': 4399.9400000000005, 'end': 4402.9800000000005, 'text': ' Then how do we protect data from each other.', 'tokens': [50702, 1396, 577, 360, 321, 2371, 1412, 490, 1184, 661, 13, 50854], 'temperature': 0.0, 'avg_logprob': -0.1521367927392324, 'compression_ratio': 1.719626168224299, 'no_speech_prob': 0.00581413833424449}, {'id': 758, 'seek': 439318, 'start': 4402.9800000000005, 'end': 4408.54, 'text': " You don't want accidentally process p1 to write into p2 data and so on.", 'tokens': [50854, 509, 500, 380, 528, 15715, 1399, 280, 16, 281, 2464, 666, 280, 17, 1412, 293, 370, 322, 13, 51132], 'temperature': 0.0, 'avg_logprob': -0.1521367927392324, 'compression_ratio': 1.719626168224299, 'no_speech_prob': 0.00581413833424449}, {'id': 759, 'seek': 439318, 'start': 4408.54, 'end': 4411.62, 'text': ' And can we actually share the data.', 'tokens': [51132, 400, 393, 321, 767, 2073, 264, 1412, 13, 51286], 'temperature': 0.0, 'avg_logprob': -0.1521367927392324, 'compression_ratio': 1.719626168224299, 'no_speech_prob': 0.00581413833424449}, {'id': 760, 'seek': 439318, 'start': 4411.62, 'end': 4416.14, 'text': " Let's say we don't want accidentally to share modify the data.", 'tokens': [51286, 961, 311, 584, 321, 500, 380, 528, 15715, 281, 2073, 16927, 264, 1412, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.1521367927392324, 'compression_ratio': 1.719626168224299, 'no_speech_prob': 0.00581413833424449}, {'id': 761, 'seek': 439318, 'start': 4416.14, 'end': 4421.66, 'text': ' But if two processes do want to share the data how can you do that.', 'tokens': [51512, 583, 498, 732, 7555, 360, 528, 281, 2073, 264, 1412, 577, 393, 291, 360, 300, 13, 51788], 'temperature': 0.0, 'avg_logprob': -0.1521367927392324, 'compression_ratio': 1.719626168224299, 'no_speech_prob': 0.00581413833424449}, {'id': 762, 'seek': 442166, 'start': 4421.66, 'end': 4425.98, 'text': ' So these are some of the things which we will actually see.', 'tokens': [50364, 407, 613, 366, 512, 295, 264, 721, 597, 321, 486, 767, 536, 13, 50580], 'temperature': 0.0, 'avg_logprob': -0.11448798179626465, 'compression_ratio': 1.5769230769230769, 'no_speech_prob': 0.005548286717385054}, {'id': 763, 'seek': 442166, 'start': 4425.98, 'end': 4429.9, 'text': ' So virtual memory is essentially an indirection.', 'tokens': [50580, 407, 6374, 4675, 307, 4476, 364, 1016, 621, 882, 13, 50776], 'temperature': 0.0, 'avg_logprob': -0.11448798179626465, 'compression_ratio': 1.5769230769230769, 'no_speech_prob': 0.005548286717385054}, {'id': 764, 'seek': 442166, 'start': 4429.9, 'end': 4434.0599999999995, 'text': ' Has anyone heard of fundamental theorem in software engineering.', 'tokens': [50776, 8646, 2878, 2198, 295, 8088, 20904, 294, 4722, 7043, 13, 50984], 'temperature': 0.0, 'avg_logprob': -0.11448798179626465, 'compression_ratio': 1.5769230769230769, 'no_speech_prob': 0.005548286717385054}, {'id': 765, 'seek': 442166, 'start': 4434.0599999999995, 'end': 4440.18, 'text': " So it's a theorem which says that every problem in computer science can be solved by additional", 'tokens': [50984, 407, 309, 311, 257, 20904, 597, 1619, 300, 633, 1154, 294, 3820, 3497, 393, 312, 13041, 538, 4497, 51290], 'temperature': 0.0, 'avg_logprob': -0.11448798179626465, 'compression_ratio': 1.5769230769230769, 'no_speech_prob': 0.005548286717385054}, {'id': 766, 'seek': 442166, 'start': 4440.18, 'end': 4443.66, 'text': ' level of indirection.', 'tokens': [51290, 1496, 295, 1016, 621, 882, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.11448798179626465, 'compression_ratio': 1.5769230769230769, 'no_speech_prob': 0.005548286717385054}, {'id': 767, 'seek': 442166, 'start': 4443.66, 'end': 4445.5, 'text': " And we'll see some examples of that.", 'tokens': [51464, 400, 321, 603, 536, 512, 5110, 295, 300, 13, 51556], 'temperature': 0.0, 'avg_logprob': -0.11448798179626465, 'compression_ratio': 1.5769230769230769, 'no_speech_prob': 0.005548286717385054}, {'id': 768, 'seek': 444550, 'start': 4445.5, 'end': 4452.54, 'text': ' So virtual memory most of these problems which we have are all solved by just creating one', 'tokens': [50364, 407, 6374, 4675, 881, 295, 613, 2740, 597, 321, 362, 366, 439, 13041, 538, 445, 4084, 472, 50716], 'temperature': 0.0, 'avg_logprob': -0.13796569079887577, 'compression_ratio': 1.7692307692307692, 'no_speech_prob': 0.07152821868658066}, {'id': 769, 'seek': 444550, 'start': 4452.54, 'end': 4455.62, 'text': ' level of indirection.', 'tokens': [50716, 1496, 295, 1016, 621, 882, 13, 50870], 'temperature': 0.0, 'avg_logprob': -0.13796569079887577, 'compression_ratio': 1.7692307692307692, 'no_speech_prob': 0.07152821868658066}, {'id': 770, 'seek': 444550, 'start': 4455.62, 'end': 4458.7, 'text': ' So virtual memory creates something like this.', 'tokens': [50870, 407, 6374, 4675, 7829, 746, 411, 341, 13, 51024], 'temperature': 0.0, 'avg_logprob': -0.13796569079887577, 'compression_ratio': 1.7692307692307692, 'no_speech_prob': 0.07152821868658066}, {'id': 771, 'seek': 444550, 'start': 4458.7, 'end': 4463.7, 'text': ' So every process does not access the memory directly.', 'tokens': [51024, 407, 633, 1399, 775, 406, 2105, 264, 4675, 3838, 13, 51274], 'temperature': 0.0, 'avg_logprob': -0.13796569079887577, 'compression_ratio': 1.7692307692307692, 'no_speech_prob': 0.07152821868658066}, {'id': 772, 'seek': 444550, 'start': 4463.7, 'end': 4467.54, 'text': ' There is an indirection in between of mapping.', 'tokens': [51274, 821, 307, 364, 1016, 621, 882, 294, 1296, 295, 18350, 13, 51466], 'temperature': 0.0, 'avg_logprob': -0.13796569079887577, 'compression_ratio': 1.7692307692307692, 'no_speech_prob': 0.07152821868658066}, {'id': 773, 'seek': 444550, 'start': 4467.54, 'end': 4474.22, 'text': ' So every process actually has some mapping which will get it to the physical memory.', 'tokens': [51466, 407, 633, 1399, 767, 575, 512, 18350, 597, 486, 483, 309, 281, 264, 4001, 4675, 13, 51800], 'temperature': 0.0, 'avg_logprob': -0.13796569079887577, 'compression_ratio': 1.7692307692307692, 'no_speech_prob': 0.07152821868658066}, {'id': 774, 'seek': 447422, 'start': 4474.22, 'end': 4481.3, 'text': ' And this is what and every process what it views is actually virtual memory.', 'tokens': [50364, 400, 341, 307, 437, 293, 633, 1399, 437, 309, 6809, 307, 767, 6374, 4675, 13, 50718], 'temperature': 0.0, 'avg_logprob': -0.13947591327485584, 'compression_ratio': 1.8383233532934131, 'no_speech_prob': 0.0025504734367132187}, {'id': 775, 'seek': 447422, 'start': 4481.3, 'end': 4487.780000000001, 'text': ' Now address spaces so every process gets its own address space that we already saw.', 'tokens': [50718, 823, 2985, 7673, 370, 633, 1399, 2170, 1080, 1065, 2985, 1901, 300, 321, 1217, 1866, 13, 51042], 'temperature': 0.0, 'avg_logprob': -0.13947591327485584, 'compression_ratio': 1.8383233532934131, 'no_speech_prob': 0.0025504734367132187}, {'id': 776, 'seek': 447422, 'start': 4487.780000000001, 'end': 4491.62, 'text': ' And the address space will actually be 0 to 2 raise to n.', 'tokens': [51042, 400, 264, 2985, 1901, 486, 767, 312, 1958, 281, 568, 5300, 281, 297, 13, 51234], 'temperature': 0.0, 'avg_logprob': -0.13947591327485584, 'compression_ratio': 1.8383233532934131, 'no_speech_prob': 0.0025504734367132187}, {'id': 777, 'seek': 447422, 'start': 4491.62, 'end': 4496.02, 'text': ' So on Linux 32 it will be 0 to 2 raise to 32.', 'tokens': [51234, 407, 322, 18734, 8858, 309, 486, 312, 1958, 281, 568, 5300, 281, 8858, 13, 51454], 'temperature': 0.0, 'avg_logprob': -0.13947591327485584, 'compression_ratio': 1.8383233532934131, 'no_speech_prob': 0.0025504734367132187}, {'id': 778, 'seek': 447422, 'start': 4496.02, 'end': 4499.860000000001, 'text': ' On Linux 64 it will be 0 to 2 raise to 64.', 'tokens': [51454, 1282, 18734, 12145, 309, 486, 312, 1958, 281, 568, 5300, 281, 12145, 13, 51646], 'temperature': 0.0, 'avg_logprob': -0.13947591327485584, 'compression_ratio': 1.8383233532934131, 'no_speech_prob': 0.0025504734367132187}, {'id': 779, 'seek': 449986, 'start': 4499.86, 'end': 4504.66, 'text': ' The physical address can actually be smaller than that which could be m depending on how', 'tokens': [50364, 440, 4001, 2985, 393, 767, 312, 4356, 813, 300, 597, 727, 312, 275, 5413, 322, 577, 50604], 'temperature': 0.0, 'avg_logprob': -0.13220961888631186, 'compression_ratio': 1.6858638743455496, 'no_speech_prob': 0.004903311841189861}, {'id': 780, 'seek': 449986, 'start': 4504.66, 'end': 4509.86, 'text': ' much RAM you actually have 2 GB 4 GB and so on.', 'tokens': [50604, 709, 14561, 291, 767, 362, 568, 26809, 1017, 26809, 293, 370, 322, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.13220961888631186, 'compression_ratio': 1.6858638743455496, 'no_speech_prob': 0.004903311841189861}, {'id': 781, 'seek': 449986, 'start': 4509.86, 'end': 4514.86, 'text': ' Now every byte in the physical memory actually has only one address because physical memory', 'tokens': [50864, 823, 633, 40846, 294, 264, 4001, 4675, 767, 575, 787, 472, 2985, 570, 4001, 4675, 51114], 'temperature': 0.0, 'avg_logprob': -0.13220961888631186, 'compression_ratio': 1.6858638743455496, 'no_speech_prob': 0.004903311841189861}, {'id': 782, 'seek': 449986, 'start': 4514.86, 'end': 4515.86, 'text': ' is fixed.', 'tokens': [51114, 307, 6806, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.13220961888631186, 'compression_ratio': 1.6858638743455496, 'no_speech_prob': 0.004903311841189861}, {'id': 783, 'seek': 449986, 'start': 4515.86, 'end': 4517.98, 'text': ' There is no illusion you can create.', 'tokens': [51164, 821, 307, 572, 18854, 291, 393, 1884, 13, 51270], 'temperature': 0.0, 'avg_logprob': -0.13220961888631186, 'compression_ratio': 1.6858638743455496, 'no_speech_prob': 0.004903311841189861}, {'id': 784, 'seek': 449986, 'start': 4517.98, 'end': 4522.66, 'text': ' So every physical memory has just one address.', 'tokens': [51270, 407, 633, 4001, 4675, 575, 445, 472, 2985, 13, 51504], 'temperature': 0.0, 'avg_logprob': -0.13220961888631186, 'compression_ratio': 1.6858638743455496, 'no_speech_prob': 0.004903311841189861}, {'id': 785, 'seek': 452266, 'start': 4522.66, 'end': 4530.7, 'text': ' But every location in the physical memory can have one or more virtual addresses.', 'tokens': [50364, 583, 633, 4914, 294, 264, 4001, 4675, 393, 362, 472, 420, 544, 6374, 16862, 13, 50766], 'temperature': 0.0, 'avg_logprob': -0.1776608912150065, 'compression_ratio': 1.7348066298342542, 'no_speech_prob': 0.05100168660283089}, {'id': 786, 'seek': 452266, 'start': 4530.7, 'end': 4532.86, 'text': ' Does that make sense?', 'tokens': [50766, 4402, 300, 652, 2020, 30, 50874], 'temperature': 0.0, 'avg_logprob': -0.1776608912150065, 'compression_ratio': 1.7348066298342542, 'no_speech_prob': 0.05100168660283089}, {'id': 787, 'seek': 452266, 'start': 4532.86, 'end': 4538.7, 'text': ' Because physical memory is there I might refer to the same location using two different virtual', 'tokens': [50874, 1436, 4001, 4675, 307, 456, 286, 1062, 2864, 281, 264, 912, 4914, 1228, 732, 819, 6374, 51166], 'temperature': 0.0, 'avg_logprob': -0.1776608912150065, 'compression_ratio': 1.7348066298342542, 'no_speech_prob': 0.05100168660283089}, {'id': 788, 'seek': 452266, 'start': 4538.7, 'end': 4542.139999999999, 'text': ' addresses.', 'tokens': [51166, 16862, 13, 51338], 'temperature': 0.0, 'avg_logprob': -0.1776608912150065, 'compression_ratio': 1.7348066298342542, 'no_speech_prob': 0.05100168660283089}, {'id': 789, 'seek': 452266, 'start': 4542.139999999999, 'end': 4543.48, 'text': ' So this is how it works.', 'tokens': [51338, 407, 341, 307, 577, 309, 1985, 13, 51405], 'temperature': 0.0, 'avg_logprob': -0.1776608912150065, 'compression_ratio': 1.7348066298342542, 'no_speech_prob': 0.05100168660283089}, {'id': 790, 'seek': 452266, 'start': 4543.48, 'end': 4548.72, 'text': " You have process 1's virtual address space, process 2's virtual address space.", 'tokens': [51405, 509, 362, 1399, 502, 311, 6374, 2985, 1901, 11, 1399, 568, 311, 6374, 2985, 1901, 13, 51667], 'temperature': 0.0, 'avg_logprob': -0.1776608912150065, 'compression_ratio': 1.7348066298342542, 'no_speech_prob': 0.05100168660283089}, {'id': 791, 'seek': 454872, 'start': 4548.72, 'end': 4556.34, 'text': ' Some of the addresses in the process 1 map to some location in physical memory.', 'tokens': [50364, 2188, 295, 264, 16862, 294, 264, 1399, 502, 4471, 281, 512, 4914, 294, 4001, 4675, 13, 50745], 'temperature': 0.0, 'avg_logprob': -0.16749529308742947, 'compression_ratio': 1.6343612334801763, 'no_speech_prob': 0.20653899013996124}, {'id': 792, 'seek': 454872, 'start': 4556.34, 'end': 4564.52, 'text': ' And some of the locations can actually be even on the disk which is called as swap space.', 'tokens': [50745, 400, 512, 295, 264, 9253, 393, 767, 312, 754, 322, 264, 12355, 597, 307, 1219, 382, 18135, 1901, 13, 51154], 'temperature': 0.0, 'avg_logprob': -0.16749529308742947, 'compression_ratio': 1.6343612334801763, 'no_speech_prob': 0.20653899013996124}, {'id': 793, 'seek': 454872, 'start': 4564.52, 'end': 4567.04, 'text': ' Have you heard of this term swap space earlier?', 'tokens': [51154, 3560, 291, 2198, 295, 341, 1433, 18135, 1901, 3071, 30, 51280], 'temperature': 0.0, 'avg_logprob': -0.16749529308742947, 'compression_ratio': 1.6343612334801763, 'no_speech_prob': 0.20653899013996124}, {'id': 794, 'seek': 454872, 'start': 4567.04, 'end': 4572.72, 'text': ' Whenever you were say installing Linux or something it asks you how much swap space', 'tokens': [51280, 14159, 291, 645, 584, 20762, 18734, 420, 746, 309, 8962, 291, 577, 709, 18135, 1901, 51564], 'temperature': 0.0, 'avg_logprob': -0.16749529308742947, 'compression_ratio': 1.6343612334801763, 'no_speech_prob': 0.20653899013996124}, {'id': 795, 'seek': 454872, 'start': 4572.72, 'end': 4574.400000000001, 'text': ' to keep.', 'tokens': [51564, 281, 1066, 13, 51648], 'temperature': 0.0, 'avg_logprob': -0.16749529308742947, 'compression_ratio': 1.6343612334801763, 'no_speech_prob': 0.20653899013996124}, {'id': 796, 'seek': 454872, 'start': 4574.400000000001, 'end': 4578.58, 'text': ' And the typical guideline was keep it twice of the RAM size.', 'tokens': [51648, 400, 264, 7476, 41653, 390, 1066, 309, 6091, 295, 264, 14561, 2744, 13, 51857], 'temperature': 0.0, 'avg_logprob': -0.16749529308742947, 'compression_ratio': 1.6343612334801763, 'no_speech_prob': 0.20653899013996124}, {'id': 797, 'seek': 457858, 'start': 4578.58, 'end': 4587.2, 'text': ' The swap space is actually used to do some lazy thing which we will see a bit later on', 'tokens': [50364, 440, 18135, 1901, 307, 767, 1143, 281, 360, 512, 14847, 551, 597, 321, 486, 536, 257, 857, 1780, 322, 50795], 'temperature': 0.0, 'avg_logprob': -0.1274941359894185, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.0009081792668439448}, {'id': 798, 'seek': 457858, 'start': 4587.2, 'end': 4590.36, 'text': ' why we have disk also.', 'tokens': [50795, 983, 321, 362, 12355, 611, 13, 50953], 'temperature': 0.0, 'avg_logprob': -0.1274941359894185, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.0009081792668439448}, {'id': 799, 'seek': 457858, 'start': 4590.36, 'end': 4595.7, 'text': ' But essentially you can think of it this way that your physical memory is actually extended', 'tokens': [50953, 583, 4476, 291, 393, 519, 295, 309, 341, 636, 300, 428, 4001, 4675, 307, 767, 10913, 51220], 'temperature': 0.0, 'avg_logprob': -0.1274941359894185, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.0009081792668439448}, {'id': 800, 'seek': 457858, 'start': 4595.7, 'end': 4599.68, 'text': ' by having disk also saving some stuff.', 'tokens': [51220, 538, 1419, 12355, 611, 6816, 512, 1507, 13, 51419], 'temperature': 0.0, 'avg_logprob': -0.1274941359894185, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.0009081792668439448}, {'id': 801, 'seek': 457858, 'start': 4599.68, 'end': 4602.42, 'text': ' Now how does actually things work?', 'tokens': [51419, 823, 577, 775, 767, 721, 589, 30, 51556], 'temperature': 0.0, 'avg_logprob': -0.1274941359894185, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.0009081792668439448}, {'id': 802, 'seek': 457858, 'start': 4602.42, 'end': 4607.92, 'text': ' So CPU actually never looks at physical address.', 'tokens': [51556, 407, 13199, 767, 1128, 1542, 412, 4001, 2985, 13, 51831], 'temperature': 0.0, 'avg_logprob': -0.1274941359894185, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.0009081792668439448}, {'id': 803, 'seek': 460792, 'start': 4607.92, 'end': 4614.04, 'text': ' So all the addresses which we saw so far, all the pointers which are pointing to everything', 'tokens': [50364, 407, 439, 264, 16862, 597, 321, 1866, 370, 1400, 11, 439, 264, 44548, 597, 366, 12166, 281, 1203, 50670], 'temperature': 0.0, 'avg_logprob': -0.1365268803850005, 'compression_ratio': 1.7348066298342542, 'no_speech_prob': 0.001366501790471375}, {'id': 804, 'seek': 460792, 'start': 4614.04, 'end': 4616.84, 'text': ' is pointing to virtual memory.', 'tokens': [50670, 307, 12166, 281, 6374, 4675, 13, 50810], 'temperature': 0.0, 'avg_logprob': -0.1365268803850005, 'compression_ratio': 1.7348066298342542, 'no_speech_prob': 0.001366501790471375}, {'id': 805, 'seek': 460792, 'start': 4616.84, 'end': 4625.6, 'text': ' There is no way for you as a programmer to get access to physical address of something.', 'tokens': [50810, 821, 307, 572, 636, 337, 291, 382, 257, 32116, 281, 483, 2105, 281, 4001, 2985, 295, 746, 13, 51248], 'temperature': 0.0, 'avg_logprob': -0.1365268803850005, 'compression_ratio': 1.7348066298342542, 'no_speech_prob': 0.001366501790471375}, {'id': 806, 'seek': 460792, 'start': 4625.6, 'end': 4632.3, 'text': ' So whenever I say ptr is equal to and b it is not physical address of b which is stored', 'tokens': [51248, 407, 5699, 286, 584, 280, 6903, 307, 2681, 281, 293, 272, 309, 307, 406, 4001, 2985, 295, 272, 597, 307, 12187, 51583], 'temperature': 0.0, 'avg_logprob': -0.1365268803850005, 'compression_ratio': 1.7348066298342542, 'no_speech_prob': 0.001366501790471375}, {'id': 807, 'seek': 460792, 'start': 4632.3, 'end': 4633.3, 'text': ' in the pointer.', 'tokens': [51583, 294, 264, 23918, 13, 51633], 'temperature': 0.0, 'avg_logprob': -0.1365268803850005, 'compression_ratio': 1.7348066298342542, 'no_speech_prob': 0.001366501790471375}, {'id': 808, 'seek': 463330, 'start': 4633.3, 'end': 4639.0, 'text': ' So it is virtual address of b which is stored in the pointer.', 'tokens': [50364, 407, 309, 307, 6374, 2985, 295, 272, 597, 307, 12187, 294, 264, 23918, 13, 50649], 'temperature': 0.0, 'avg_logprob': -0.20580426534016927, 'compression_ratio': 1.6633663366336633, 'no_speech_prob': 0.06554188579320908}, {'id': 809, 'seek': 463330, 'start': 4639.0, 'end': 4646.02, 'text': ' And what happens is as CPU is executing its various instruction internally it will send', 'tokens': [50649, 400, 437, 2314, 307, 382, 13199, 307, 32368, 1080, 3683, 10951, 19501, 309, 486, 2845, 51000], 'temperature': 0.0, 'avg_logprob': -0.20580426534016927, 'compression_ratio': 1.6633663366336633, 'no_speech_prob': 0.06554188579320908}, {'id': 810, 'seek': 463330, 'start': 4646.02, 'end': 4652.5, 'text': ' the virtual address which it is getting to a unit called as mmu which has a responsibility', 'tokens': [51000, 264, 6374, 2985, 597, 309, 307, 1242, 281, 257, 4985, 1219, 382, 11169, 84, 597, 575, 257, 6357, 51324], 'temperature': 0.0, 'avg_logprob': -0.20580426534016927, 'compression_ratio': 1.6633663366336633, 'no_speech_prob': 0.06554188579320908}, {'id': 811, 'seek': 463330, 'start': 4652.5, 'end': 4657.0, 'text': ' of translating that to physical address and then the physical memory will actually be', 'tokens': [51324, 295, 35030, 300, 281, 4001, 2985, 293, 550, 264, 4001, 4675, 486, 767, 312, 51549], 'temperature': 0.0, 'avg_logprob': -0.20580426534016927, 'compression_ratio': 1.6633663366336633, 'no_speech_prob': 0.06554188579320908}, {'id': 812, 'seek': 463330, 'start': 4657.0, 'end': 4659.92, 'text': ' accessed.', 'tokens': [51549, 34211, 13, 51695], 'temperature': 0.0, 'avg_logprob': -0.20580426534016927, 'compression_ratio': 1.6633663366336633, 'no_speech_prob': 0.06554188579320908}, {'id': 813, 'seek': 465992, 'start': 4659.92, 'end': 4666.56, 'text': ' And there is no bypass which is available for you from CPU directly to physical address.', 'tokens': [50364, 400, 456, 307, 572, 24996, 597, 307, 2435, 337, 291, 490, 13199, 3838, 281, 4001, 2985, 13, 50696], 'temperature': 0.0, 'avg_logprob': -0.17929016219245064, 'compression_ratio': 1.470899470899471, 'no_speech_prob': 0.11258674412965775}, {'id': 814, 'seek': 465992, 'start': 4666.56, 'end': 4668.64, 'text': ' Does that make sense?', 'tokens': [50696, 4402, 300, 652, 2020, 30, 50800], 'temperature': 0.0, 'avg_logprob': -0.17929016219245064, 'compression_ratio': 1.470899470899471, 'no_speech_prob': 0.11258674412965775}, {'id': 815, 'seek': 465992, 'start': 4668.64, 'end': 4671.68, 'text': ' Now why we have virtual memory?', 'tokens': [50800, 823, 983, 321, 362, 6374, 4675, 30, 50952], 'temperature': 0.0, 'avg_logprob': -0.17929016219245064, 'compression_ratio': 1.470899470899471, 'no_speech_prob': 0.11258674412965775}, {'id': 816, 'seek': 465992, 'start': 4671.68, 'end': 4675.42, 'text': ' So we have created this thing what does it buy us?', 'tokens': [50952, 407, 321, 362, 2942, 341, 551, 437, 775, 309, 2256, 505, 30, 51139], 'temperature': 0.0, 'avg_logprob': -0.17929016219245064, 'compression_ratio': 1.470899470899471, 'no_speech_prob': 0.11258674412965775}, {'id': 817, 'seek': 465992, 'start': 4675.42, 'end': 4682.14, 'text': ' So it allows us to efficiently use the main memory and it does it by couple of ways.', 'tokens': [51139, 407, 309, 4045, 505, 281, 19621, 764, 264, 2135, 4675, 293, 309, 775, 309, 538, 1916, 295, 2098, 13, 51475], 'temperature': 0.0, 'avg_logprob': -0.17929016219245064, 'compression_ratio': 1.470899470899471, 'no_speech_prob': 0.11258674412965775}, {'id': 818, 'seek': 468214, 'start': 4682.14, 'end': 4689.900000000001, 'text': ' One is every process now has the virtual address space which is private to its own', 'tokens': [50364, 1485, 307, 633, 1399, 586, 575, 264, 6374, 2985, 1901, 597, 307, 4551, 281, 1080, 1065, 50752], 'temperature': 0.0, 'avg_logprob': -0.18472143429428783, 'compression_ratio': 1.6153846153846154, 'no_speech_prob': 0.14358019828796387}, {'id': 819, 'seek': 468214, 'start': 4689.900000000001, 'end': 4695.1, 'text': ' and there is this mapping function which is mapping it to physical memory.', 'tokens': [50752, 293, 456, 307, 341, 18350, 2445, 597, 307, 18350, 309, 281, 4001, 4675, 13, 51012], 'temperature': 0.0, 'avg_logprob': -0.18472143429428783, 'compression_ratio': 1.6153846153846154, 'no_speech_prob': 0.14358019828796387}, {'id': 820, 'seek': 468214, 'start': 4695.1, 'end': 4698.3, 'text': ' Now this mapping function can keep changing.', 'tokens': [51012, 823, 341, 18350, 2445, 393, 1066, 4473, 13, 51172], 'temperature': 0.0, 'avg_logprob': -0.18472143429428783, 'compression_ratio': 1.6153846153846154, 'no_speech_prob': 0.14358019828796387}, {'id': 821, 'seek': 468214, 'start': 4698.3, 'end': 4706.900000000001, 'text': ' For example first time when I look up address 0 it might be mapped to physical address 500.', 'tokens': [51172, 1171, 1365, 700, 565, 562, 286, 574, 493, 2985, 1958, 309, 1062, 312, 33318, 281, 4001, 2985, 5923, 13, 51602], 'temperature': 0.0, 'avg_logprob': -0.18472143429428783, 'compression_ratio': 1.6153846153846154, 'no_speech_prob': 0.14358019828796387}, {'id': 822, 'seek': 470690, 'start': 4707.66, 'end': 4714.46, 'text': ' Later it might actually be mapped to physical address 10000.', 'tokens': [50402, 11965, 309, 1062, 767, 312, 33318, 281, 4001, 2985, 2319, 628, 13, 50742], 'temperature': 0.0, 'avg_logprob': -0.15630257757086502, 'compression_ratio': 1.6454545454545455, 'no_speech_prob': 0.015755191445350647}, {'id': 823, 'seek': 470690, 'start': 4714.46, 'end': 4720.86, 'text': ' And this happens behind the scenes because what memory management unit and operating', 'tokens': [50742, 400, 341, 2314, 2261, 264, 8026, 570, 437, 4675, 4592, 4985, 293, 7447, 51062], 'temperature': 0.0, 'avg_logprob': -0.15630257757086502, 'compression_ratio': 1.6454545454545455, 'no_speech_prob': 0.015755191445350647}, {'id': 824, 'seek': 470690, 'start': 4720.86, 'end': 4726.9, 'text': ' system together are they doing is they are constantly swapping in what goes what actually', 'tokens': [51062, 1185, 1214, 366, 436, 884, 307, 436, 366, 6460, 1693, 10534, 294, 437, 1709, 437, 767, 51364], 'temperature': 0.0, 'avg_logprob': -0.15630257757086502, 'compression_ratio': 1.6454545454545455, 'no_speech_prob': 0.015755191445350647}, {'id': 825, 'seek': 470690, 'start': 4726.9, 'end': 4730.339999999999, 'text': ' resides in physical memory at every time.', 'tokens': [51364, 47157, 294, 4001, 4675, 412, 633, 565, 13, 51536], 'temperature': 0.0, 'avg_logprob': -0.15630257757086502, 'compression_ratio': 1.6454545454545455, 'no_speech_prob': 0.015755191445350647}, {'id': 826, 'seek': 470690, 'start': 4730.339999999999, 'end': 4736.0199999999995, 'text': ' So it is not that when your program starts running everything needed for the program', 'tokens': [51536, 407, 309, 307, 406, 300, 562, 428, 1461, 3719, 2614, 1203, 2978, 337, 264, 1461, 51820], 'temperature': 0.0, 'avg_logprob': -0.15630257757086502, 'compression_ratio': 1.6454545454545455, 'no_speech_prob': 0.015755191445350647}, {'id': 827, 'seek': 473602, 'start': 4736.14, 'end': 4738.780000000001, 'text': ' is present in the physical memory.', 'tokens': [50370, 307, 1974, 294, 264, 4001, 4675, 13, 50502], 'temperature': 0.0, 'avg_logprob': -0.11657952178608287, 'compression_ratio': 1.829268292682927, 'no_speech_prob': 0.006484113167971373}, {'id': 828, 'seek': 473602, 'start': 4738.780000000001, 'end': 4743.280000000001, 'text': ' It will be brought into the physical memory only on demand.', 'tokens': [50502, 467, 486, 312, 3038, 666, 264, 4001, 4675, 787, 322, 4733, 13, 50727], 'temperature': 0.0, 'avg_logprob': -0.11657952178608287, 'compression_ratio': 1.829268292682927, 'no_speech_prob': 0.006484113167971373}, {'id': 829, 'seek': 473602, 'start': 4743.280000000001, 'end': 4748.9400000000005, 'text': ' So whenever you access something it is brought on demand.', 'tokens': [50727, 407, 5699, 291, 2105, 746, 309, 307, 3038, 322, 4733, 13, 51010], 'temperature': 0.0, 'avg_logprob': -0.11657952178608287, 'compression_ratio': 1.829268292682927, 'no_speech_prob': 0.006484113167971373}, {'id': 830, 'seek': 473602, 'start': 4748.9400000000005, 'end': 4755.06, 'text': ' Now what happens is because of this not everything of a program is always in memory and that', 'tokens': [51010, 823, 437, 2314, 307, 570, 295, 341, 406, 1203, 295, 257, 1461, 307, 1009, 294, 4675, 293, 300, 51316], 'temperature': 0.0, 'avg_logprob': -0.11657952178608287, 'compression_ratio': 1.829268292682927, 'no_speech_prob': 0.006484113167971373}, {'id': 831, 'seek': 473602, 'start': 4755.06, 'end': 4758.52, 'text': ' is where the swap space comes into picture.', 'tokens': [51316, 307, 689, 264, 18135, 1901, 1487, 666, 3036, 13, 51489], 'temperature': 0.0, 'avg_logprob': -0.11657952178608287, 'compression_ratio': 1.829268292682927, 'no_speech_prob': 0.006484113167971373}, {'id': 832, 'seek': 473602, 'start': 4758.52, 'end': 4764.860000000001, 'text': ' So whenever you have something of a program which is not being used you will put that', 'tokens': [51489, 407, 5699, 291, 362, 746, 295, 257, 1461, 597, 307, 406, 885, 1143, 291, 486, 829, 300, 51806], 'temperature': 0.0, 'avg_logprob': -0.11657952178608287, 'compression_ratio': 1.829268292682927, 'no_speech_prob': 0.006484113167971373}, {'id': 833, 'seek': 476486, 'start': 4764.86, 'end': 4770.54, 'text': ' into the swap space and that is why you free up the physical memory.', 'tokens': [50364, 666, 264, 18135, 1901, 293, 300, 307, 983, 291, 1737, 493, 264, 4001, 4675, 13, 50648], 'temperature': 0.0, 'avg_logprob': -0.1117463545365767, 'compression_ratio': 2.118918918918919, 'no_speech_prob': 0.0035911602899432182}, {'id': 834, 'seek': 476486, 'start': 4770.54, 'end': 4775.62, 'text': ' And the only time you will run out of the physical memory is when your swap space is', 'tokens': [50648, 400, 264, 787, 565, 291, 486, 1190, 484, 295, 264, 4001, 4675, 307, 562, 428, 18135, 1901, 307, 50902], 'temperature': 0.0, 'avg_logprob': -0.1117463545365767, 'compression_ratio': 2.118918918918919, 'no_speech_prob': 0.0035911602899432182}, {'id': 835, 'seek': 476486, 'start': 4775.62, 'end': 4781.139999999999, 'text': ' full and your main memory is also full.', 'tokens': [50902, 1577, 293, 428, 2135, 4675, 307, 611, 1577, 13, 51178], 'temperature': 0.0, 'avg_logprob': -0.1117463545365767, 'compression_ratio': 2.118918918918919, 'no_speech_prob': 0.0035911602899432182}, {'id': 836, 'seek': 476486, 'start': 4781.139999999999, 'end': 4782.5, 'text': ' Does that make sense?', 'tokens': [51178, 4402, 300, 652, 2020, 30, 51246], 'temperature': 0.0, 'avg_logprob': -0.1117463545365767, 'compression_ratio': 2.118918918918919, 'no_speech_prob': 0.0035911602899432182}, {'id': 837, 'seek': 476486, 'start': 4782.5, 'end': 4788.759999999999, 'text': ' You will run out of physical memory only when your swap space is full and your RAM is full.', 'tokens': [51246, 509, 486, 1190, 484, 295, 4001, 4675, 787, 562, 428, 18135, 1901, 307, 1577, 293, 428, 14561, 307, 1577, 13, 51559], 'temperature': 0.0, 'avg_logprob': -0.1117463545365767, 'compression_ratio': 2.118918918918919, 'no_speech_prob': 0.0035911602899432182}, {'id': 838, 'seek': 476486, 'start': 4788.759999999999, 'end': 4794.099999999999, 'text': ' As long as your RAM is full but you still have space in swap your programs will keep', 'tokens': [51559, 1018, 938, 382, 428, 14561, 307, 1577, 457, 291, 920, 362, 1901, 294, 18135, 428, 4268, 486, 1066, 51826], 'temperature': 0.0, 'avg_logprob': -0.1117463545365767, 'compression_ratio': 2.118918918918919, 'no_speech_prob': 0.0035911602899432182}, {'id': 839, 'seek': 479410, 'start': 4794.22, 'end': 4795.22, 'text': ' running.', 'tokens': [50370, 2614, 13, 50420], 'temperature': 0.0, 'avg_logprob': -0.14623671043209913, 'compression_ratio': 1.5666666666666667, 'no_speech_prob': 0.0031663193367421627}, {'id': 840, 'seek': 479410, 'start': 4795.22, 'end': 4801.860000000001, 'text': ' They will run very slow because processor and MMU has to constantly swap in and swap', 'tokens': [50420, 814, 486, 1190, 588, 2964, 570, 15321, 293, 34191, 52, 575, 281, 6460, 18135, 294, 293, 18135, 50752], 'temperature': 0.0, 'avg_logprob': -0.14623671043209913, 'compression_ratio': 1.5666666666666667, 'no_speech_prob': 0.0031663193367421627}, {'id': 841, 'seek': 479410, 'start': 4801.860000000001, 'end': 4807.42, 'text': ' out but it will still functionally run.', 'tokens': [50752, 484, 457, 309, 486, 920, 2445, 379, 1190, 13, 51030], 'temperature': 0.0, 'avg_logprob': -0.14623671043209913, 'compression_ratio': 1.5666666666666667, 'no_speech_prob': 0.0031663193367421627}, {'id': 842, 'seek': 479410, 'start': 4807.42, 'end': 4815.22, 'text': ' The other thing which this does virtual memory is it simplifies lot of job for programmer', 'tokens': [51030, 440, 661, 551, 597, 341, 775, 6374, 4675, 307, 309, 6883, 11221, 688, 295, 1691, 337, 32116, 51420], 'temperature': 0.0, 'avg_logprob': -0.14623671043209913, 'compression_ratio': 1.5666666666666667, 'no_speech_prob': 0.0031663193367421627}, {'id': 843, 'seek': 479410, 'start': 4815.22, 'end': 4817.620000000001, 'text': ' linkers compilers.', 'tokens': [51420, 2113, 433, 715, 388, 433, 13, 51540], 'temperature': 0.0, 'avg_logprob': -0.14623671043209913, 'compression_ratio': 1.5666666666666667, 'no_speech_prob': 0.0031663193367421627}, {'id': 844, 'seek': 479410, 'start': 4817.620000000001, 'end': 4822.660000000001, 'text': ' Imagine if you are living in a world where there was no virtual memory then what would', 'tokens': [51540, 11739, 498, 291, 366, 2647, 294, 257, 1002, 689, 456, 390, 572, 6374, 4675, 550, 437, 576, 51792], 'temperature': 0.0, 'avg_logprob': -0.14623671043209913, 'compression_ratio': 1.5666666666666667, 'no_speech_prob': 0.0031663193367421627}, {'id': 845, 'seek': 482266, 'start': 4822.66, 'end': 4830.26, 'text': ' happen is programmer had to write programs where it cannot assume the entire address', 'tokens': [50364, 1051, 307, 32116, 632, 281, 2464, 4268, 689, 309, 2644, 6552, 264, 2302, 2985, 50744], 'temperature': 0.0, 'avg_logprob': -0.1512397884093609, 'compression_ratio': 1.759493670886076, 'no_speech_prob': 0.03511540964245796}, {'id': 846, 'seek': 482266, 'start': 4830.26, 'end': 4832.7, 'text': ' space is available.', 'tokens': [50744, 1901, 307, 2435, 13, 50866], 'temperature': 0.0, 'avg_logprob': -0.1512397884093609, 'compression_ratio': 1.759493670886076, 'no_speech_prob': 0.03511540964245796}, {'id': 847, 'seek': 482266, 'start': 4832.7, 'end': 4835.0199999999995, 'text': ' Linker cannot do the address space layout.', 'tokens': [50866, 8466, 260, 2644, 360, 264, 2985, 1901, 13333, 13, 50982], 'temperature': 0.0, 'avg_logprob': -0.1512397884093609, 'compression_ratio': 1.759493670886076, 'no_speech_prob': 0.03511540964245796}, {'id': 848, 'seek': 482266, 'start': 4835.0199999999995, 'end': 4840.54, 'text': ' So most of the things will get delayed to the loader and loader will become bottleneck.', 'tokens': [50982, 407, 881, 295, 264, 721, 486, 483, 20268, 281, 264, 3677, 260, 293, 3677, 260, 486, 1813, 44641, 547, 13, 51258], 'temperature': 0.0, 'avg_logprob': -0.1512397884093609, 'compression_ratio': 1.759493670886076, 'no_speech_prob': 0.03511540964245796}, {'id': 849, 'seek': 482266, 'start': 4840.54, 'end': 4844.82, 'text': ' As of now loader actually is fairly straightforward because loader simply has to take whatever', 'tokens': [51258, 1018, 295, 586, 3677, 260, 767, 307, 6457, 15325, 570, 3677, 260, 2935, 575, 281, 747, 2035, 51472], 'temperature': 0.0, 'avg_logprob': -0.1512397884093609, 'compression_ratio': 1.759493670886076, 'no_speech_prob': 0.03511540964245796}, {'id': 850, 'seek': 482266, 'start': 4844.82, 'end': 4851.38, 'text': ' linker has done at link time and simply load it into the memory and that too on demand', 'tokens': [51472, 2113, 260, 575, 1096, 412, 2113, 565, 293, 2935, 3677, 309, 666, 264, 4675, 293, 300, 886, 322, 4733, 51800], 'temperature': 0.0, 'avg_logprob': -0.1512397884093609, 'compression_ratio': 1.759493670886076, 'no_speech_prob': 0.03511540964245796}, {'id': 851, 'seek': 485138, 'start': 4851.5, 'end': 4854.46, 'text': ' it does not do it by default always.', 'tokens': [50370, 309, 775, 406, 360, 309, 538, 7576, 1009, 13, 50518], 'temperature': 0.0, 'avg_logprob': -0.162003493309021, 'compression_ratio': 1.6681614349775784, 'no_speech_prob': 0.058215346187353134}, {'id': 852, 'seek': 485138, 'start': 4854.46, 'end': 4860.7, 'text': ' So that simplifies the overall time you need to spend at load time which is more critical', 'tokens': [50518, 407, 300, 6883, 11221, 264, 4787, 565, 291, 643, 281, 3496, 412, 3677, 565, 597, 307, 544, 4924, 50830], 'temperature': 0.0, 'avg_logprob': -0.162003493309021, 'compression_ratio': 1.6681614349775784, 'no_speech_prob': 0.058215346187353134}, {'id': 853, 'seek': 485138, 'start': 4860.7, 'end': 4864.54, 'text': ' because load time is when your application is actually running.', 'tokens': [50830, 570, 3677, 565, 307, 562, 428, 3861, 307, 767, 2614, 13, 51022], 'temperature': 0.0, 'avg_logprob': -0.162003493309021, 'compression_ratio': 1.6681614349775784, 'no_speech_prob': 0.058215346187353134}, {'id': 854, 'seek': 485138, 'start': 4864.54, 'end': 4871.34, 'text': ' You do not want slow startup for your application and then it provides isolation of the address', 'tokens': [51022, 509, 360, 406, 528, 2964, 18578, 337, 428, 3861, 293, 550, 309, 6417, 16001, 295, 264, 2985, 51362], 'temperature': 0.0, 'avg_logprob': -0.162003493309021, 'compression_ratio': 1.6681614349775784, 'no_speech_prob': 0.058215346187353134}, {'id': 855, 'seek': 485138, 'start': 4871.34, 'end': 4878.62, 'text': ' spaces because everything in virtual memory has permissions associated with it and as', 'tokens': [51362, 7673, 570, 1203, 294, 6374, 4675, 575, 32723, 6615, 365, 309, 293, 382, 51726], 'temperature': 0.0, 'avg_logprob': -0.162003493309021, 'compression_ratio': 1.6681614349775784, 'no_speech_prob': 0.058215346187353134}, {'id': 856, 'seek': 487862, 'start': 4878.62, 'end': 4885.42, 'text': ' soon as someone tries to dereference it you get a problem because imagine everyone is', 'tokens': [50364, 2321, 382, 1580, 9898, 281, 15969, 5158, 309, 291, 483, 257, 1154, 570, 3811, 1518, 307, 50704], 'temperature': 0.0, 'avg_logprob': -0.13494722304805631, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.0073285275138914585}, {'id': 857, 'seek': 487862, 'start': 4885.42, 'end': 4888.18, 'text': ' trying to get the virtual address.', 'tokens': [50704, 1382, 281, 483, 264, 6374, 2985, 13, 50842], 'temperature': 0.0, 'avg_logprob': -0.13494722304805631, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.0073285275138914585}, {'id': 858, 'seek': 487862, 'start': 4888.18, 'end': 4890.599999999999, 'text': ' No one has access to physical address.', 'tokens': [50842, 883, 472, 575, 2105, 281, 4001, 2985, 13, 50963], 'temperature': 0.0, 'avg_logprob': -0.13494722304805631, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.0073285275138914585}, {'id': 859, 'seek': 487862, 'start': 4890.599999999999, 'end': 4895.44, 'text': ' So how will you access physical memory of another process?', 'tokens': [50963, 407, 577, 486, 291, 2105, 4001, 4675, 295, 1071, 1399, 30, 51205], 'temperature': 0.0, 'avg_logprob': -0.13494722304805631, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.0073285275138914585}, {'id': 860, 'seek': 487862, 'start': 4895.44, 'end': 4901.58, 'text': ' There is no way for you to know where is the data of some process stored physically in', 'tokens': [51205, 821, 307, 572, 636, 337, 291, 281, 458, 689, 307, 264, 1412, 295, 512, 1399, 12187, 9762, 294, 51512], 'temperature': 0.0, 'avg_logprob': -0.13494722304805631, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.0073285275138914585}, {'id': 861, 'seek': 487862, 'start': 4901.58, 'end': 4906.62, 'text': ' the RAM and even if you knew it is at this particular address there is no way for you', 'tokens': [51512, 264, 14561, 293, 754, 498, 291, 2586, 309, 307, 412, 341, 1729, 2985, 456, 307, 572, 636, 337, 291, 51764], 'temperature': 0.0, 'avg_logprob': -0.13494722304805631, 'compression_ratio': 1.7455357142857142, 'no_speech_prob': 0.0073285275138914585}, {'id': 862, 'seek': 490662, 'start': 4906.62, 'end': 4914.42, 'text': ' to write to that address because you can only generate virtual addresses in your program.', 'tokens': [50364, 281, 2464, 281, 300, 2985, 570, 291, 393, 787, 8460, 6374, 16862, 294, 428, 1461, 13, 50754], 'temperature': 0.0, 'avg_logprob': -0.1119009502350338, 'compression_ratio': 1.9113924050632911, 'no_speech_prob': 0.07358504086732864}, {'id': 863, 'seek': 490662, 'start': 4914.42, 'end': 4920.22, 'text': ' So every program can only generate virtual address and virtual address may map to different', 'tokens': [50754, 407, 633, 1461, 393, 787, 8460, 6374, 2985, 293, 6374, 2985, 815, 4471, 281, 819, 51044], 'temperature': 0.0, 'avg_logprob': -0.1119009502350338, 'compression_ratio': 1.9113924050632911, 'no_speech_prob': 0.07358504086732864}, {'id': 864, 'seek': 490662, 'start': 4920.22, 'end': 4923.7, 'text': ' physical address in different processes.', 'tokens': [51044, 4001, 2985, 294, 819, 7555, 13, 51218], 'temperature': 0.0, 'avg_logprob': -0.1119009502350338, 'compression_ratio': 1.9113924050632911, 'no_speech_prob': 0.07358504086732864}, {'id': 865, 'seek': 490662, 'start': 4923.7, 'end': 4936.18, 'text': ' So there is no way for you to actually access physical memory of other process.', 'tokens': [51218, 407, 456, 307, 572, 636, 337, 291, 281, 767, 2105, 4001, 4675, 295, 661, 1399, 13, 51842], 'temperature': 0.0, 'avg_logprob': -0.1119009502350338, 'compression_ratio': 1.9113924050632911, 'no_speech_prob': 0.07358504086732864}, {'id': 866, 'seek': 493618, 'start': 4936.18, 'end': 4938.58, 'text': ' So this mapping will get to that.', 'tokens': [50364, 407, 341, 18350, 486, 483, 281, 300, 13, 50484], 'temperature': 0.0, 'avg_logprob': -0.10577463841700292, 'compression_ratio': 1.7417840375586855, 'no_speech_prob': 0.010978556238114834}, {'id': 867, 'seek': 493618, 'start': 4938.58, 'end': 4942.34, 'text': ' So how does the actual translation happens?', 'tokens': [50484, 407, 577, 775, 264, 3539, 12853, 2314, 30, 50672], 'temperature': 0.0, 'avg_logprob': -0.10577463841700292, 'compression_ratio': 1.7417840375586855, 'no_speech_prob': 0.010978556238114834}, {'id': 868, 'seek': 493618, 'start': 4942.34, 'end': 4950.02, 'text': ' So this is what happens is the CPU generated address is always a virtual address.', 'tokens': [50672, 407, 341, 307, 437, 2314, 307, 264, 13199, 10833, 2985, 307, 1009, 257, 6374, 2985, 13, 51056], 'temperature': 0.0, 'avg_logprob': -0.10577463841700292, 'compression_ratio': 1.7417840375586855, 'no_speech_prob': 0.010978556238114834}, {'id': 869, 'seek': 493618, 'start': 4950.02, 'end': 4955.22, 'text': ' So what CPUs typically do is they split this address into two parts.', 'tokens': [51056, 407, 437, 13199, 82, 5850, 360, 307, 436, 7472, 341, 2985, 666, 732, 3166, 13, 51316], 'temperature': 0.0, 'avg_logprob': -0.10577463841700292, 'compression_ratio': 1.7417840375586855, 'no_speech_prob': 0.010978556238114834}, {'id': 870, 'seek': 493618, 'start': 4955.22, 'end': 4959.240000000001, 'text': ' There is a page number and then there is a page offset.', 'tokens': [51316, 821, 307, 257, 3028, 1230, 293, 550, 456, 307, 257, 3028, 18687, 13, 51517], 'temperature': 0.0, 'avg_logprob': -0.10577463841700292, 'compression_ratio': 1.7417840375586855, 'no_speech_prob': 0.010978556238114834}, {'id': 871, 'seek': 493618, 'start': 4959.240000000001, 'end': 4964.360000000001, 'text': ' So you can think of it this way that your entire virtual address space is divided into', 'tokens': [51517, 407, 291, 393, 519, 295, 309, 341, 636, 300, 428, 2302, 6374, 2985, 1901, 307, 6666, 666, 51773], 'temperature': 0.0, 'avg_logprob': -0.10577463841700292, 'compression_ratio': 1.7417840375586855, 'no_speech_prob': 0.010978556238114834}, {'id': 872, 'seek': 496436, 'start': 4964.36, 'end': 4967.24, 'text': ' a series of pages.', 'tokens': [50364, 257, 2638, 295, 7183, 13, 50508], 'temperature': 0.0, 'avg_logprob': -0.15478024202234605, 'compression_ratio': 1.8177083333333333, 'no_speech_prob': 0.11587310582399368}, {'id': 873, 'seek': 496436, 'start': 4967.24, 'end': 4971.48, 'text': ' Typically the page size is 4 KB or 4 MB.', 'tokens': [50508, 23129, 264, 3028, 2744, 307, 1017, 591, 33, 420, 1017, 28866, 13, 50720], 'temperature': 0.0, 'avg_logprob': -0.15478024202234605, 'compression_ratio': 1.8177083333333333, 'no_speech_prob': 0.11587310582399368}, {'id': 874, 'seek': 496436, 'start': 4971.48, 'end': 4976.46, 'text': ' So you can imagine the virtual address space is split into set of pages.', 'tokens': [50720, 407, 291, 393, 3811, 264, 6374, 2985, 1901, 307, 7472, 666, 992, 295, 7183, 13, 50969], 'temperature': 0.0, 'avg_logprob': -0.15478024202234605, 'compression_ratio': 1.8177083333333333, 'no_speech_prob': 0.11587310582399368}, {'id': 875, 'seek': 496436, 'start': 4976.46, 'end': 4982.94, 'text': ' The page offset gives offset within the page and the page number gives the page number.', 'tokens': [50969, 440, 3028, 18687, 2709, 18687, 1951, 264, 3028, 293, 264, 3028, 1230, 2709, 264, 3028, 1230, 13, 51293], 'temperature': 0.0, 'avg_logprob': -0.15478024202234605, 'compression_ratio': 1.8177083333333333, 'no_speech_prob': 0.11587310582399368}, {'id': 876, 'seek': 496436, 'start': 4982.94, 'end': 4987.32, 'text': ' So every address is translated to that.', 'tokens': [51293, 407, 633, 2985, 307, 16805, 281, 300, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.15478024202234605, 'compression_ratio': 1.8177083333333333, 'no_speech_prob': 0.11587310582399368}, {'id': 877, 'seek': 496436, 'start': 4987.32, 'end': 4992.88, 'text': ' So you need some function which will translate the virtual address into physical address', 'tokens': [51512, 407, 291, 643, 512, 2445, 597, 486, 13799, 264, 6374, 2985, 666, 4001, 2985, 51790], 'temperature': 0.0, 'avg_logprob': -0.15478024202234605, 'compression_ratio': 1.8177083333333333, 'no_speech_prob': 0.11587310582399368}, {'id': 878, 'seek': 499288, 'start': 4993.1, 'end': 4997.26, 'text': ' And this is done using a page table.', 'tokens': [50375, 400, 341, 307, 1096, 1228, 257, 3028, 3199, 13, 50583], 'temperature': 0.0, 'avg_logprob': -0.16820622697661194, 'compression_ratio': 1.808139534883721, 'no_speech_prob': 0.18692471086978912}, {'id': 879, 'seek': 499288, 'start': 4997.26, 'end': 5003.32, 'text': ' So every process has a page table which is set up by operating system.', 'tokens': [50583, 407, 633, 1399, 575, 257, 3028, 3199, 597, 307, 992, 493, 538, 7447, 1185, 13, 50886], 'temperature': 0.0, 'avg_logprob': -0.16820622697661194, 'compression_ratio': 1.808139534883721, 'no_speech_prob': 0.18692471086978912}, {'id': 880, 'seek': 499288, 'start': 5003.32, 'end': 5008.900000000001, 'text': ' And page table holds mapping that this page maps to this physical memory location, this', 'tokens': [50886, 400, 3028, 3199, 9190, 18350, 300, 341, 3028, 11317, 281, 341, 4001, 4675, 4914, 11, 341, 51165], 'temperature': 0.0, 'avg_logprob': -0.16820622697661194, 'compression_ratio': 1.808139534883721, 'no_speech_prob': 0.18692471086978912}, {'id': 881, 'seek': 499288, 'start': 5008.900000000001, 'end': 5012.78, 'text': ' page maps to this physical memory location and so on.', 'tokens': [51165, 3028, 11317, 281, 341, 4001, 4675, 4914, 293, 370, 322, 13, 51359], 'temperature': 0.0, 'avg_logprob': -0.16820622697661194, 'compression_ratio': 1.808139534883721, 'no_speech_prob': 0.18692471086978912}, {'id': 882, 'seek': 499288, 'start': 5012.78, 'end': 5018.88, 'text': " So to see in diagram, so let's say you have these many pages.", 'tokens': [51359, 407, 281, 536, 294, 10686, 11, 370, 718, 311, 584, 291, 362, 613, 867, 7183, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.16820622697661194, 'compression_ratio': 1.808139534883721, 'no_speech_prob': 0.18692471086978912}, {'id': 883, 'seek': 501888, 'start': 5018.88, 'end': 5024.42, 'text': ' What this says is this page is mapped to this address in the physical memory.', 'tokens': [50364, 708, 341, 1619, 307, 341, 3028, 307, 33318, 281, 341, 2985, 294, 264, 4001, 4675, 13, 50641], 'temperature': 0.0, 'avg_logprob': -0.13906511005602384, 'compression_ratio': 1.8836206896551724, 'no_speech_prob': 0.008058072999119759}, {'id': 884, 'seek': 501888, 'start': 5024.42, 'end': 5029.4400000000005, 'text': ' This page table itself will be configured by the operating system.', 'tokens': [50641, 639, 3028, 3199, 2564, 486, 312, 30538, 538, 264, 7447, 1185, 13, 50892], 'temperature': 0.0, 'avg_logprob': -0.13906511005602384, 'compression_ratio': 1.8836206896551724, 'no_speech_prob': 0.008058072999119759}, {'id': 885, 'seek': 501888, 'start': 5029.4400000000005, 'end': 5035.04, 'text': ' But once it is configured processor and the memory subsystem can fetch these addresses', 'tokens': [50892, 583, 1564, 309, 307, 30538, 15321, 293, 264, 4675, 2090, 9321, 393, 23673, 613, 16862, 51172], 'temperature': 0.0, 'avg_logprob': -0.13906511005602384, 'compression_ratio': 1.8836206896551724, 'no_speech_prob': 0.008058072999119759}, {'id': 886, 'seek': 501888, 'start': 5035.04, 'end': 5036.58, 'text': ' from the physical memory.', 'tokens': [51172, 490, 264, 4001, 4675, 13, 51249], 'temperature': 0.0, 'avg_logprob': -0.13906511005602384, 'compression_ratio': 1.8836206896551724, 'no_speech_prob': 0.008058072999119759}, {'id': 887, 'seek': 501888, 'start': 5036.58, 'end': 5042.58, 'text': " So it's a task which is done by both operating systems and processor together and that's", 'tokens': [51249, 407, 309, 311, 257, 5633, 597, 307, 1096, 538, 1293, 7447, 3652, 293, 15321, 1214, 293, 300, 311, 51549], 'temperature': 0.0, 'avg_logprob': -0.13906511005602384, 'compression_ratio': 1.8836206896551724, 'no_speech_prob': 0.008058072999119759}, {'id': 888, 'seek': 501888, 'start': 5042.58, 'end': 5046.76, 'text': ' why you learn typically virtual memory in operating system course as well as the processor', 'tokens': [51549, 983, 291, 1466, 5850, 6374, 4675, 294, 7447, 1185, 1164, 382, 731, 382, 264, 15321, 51758], 'temperature': 0.0, 'avg_logprob': -0.13906511005602384, 'compression_ratio': 1.8836206896551724, 'no_speech_prob': 0.008058072999119759}, {'id': 889, 'seek': 504676, 'start': 5046.76, 'end': 5051.18, 'text': ' course because both of them are playing some role with it.', 'tokens': [50364, 1164, 570, 1293, 295, 552, 366, 2433, 512, 3090, 365, 309, 13, 50585], 'temperature': 0.0, 'avg_logprob': -0.20516041089903633, 'compression_ratio': 1.7552742616033756, 'no_speech_prob': 0.028400536626577377}, {'id': 890, 'seek': 504676, 'start': 5051.18, 'end': 5054.42, 'text': ' Setting up page table is job of the operating system.', 'tokens': [50585, 21063, 493, 3028, 3199, 307, 1691, 295, 264, 7447, 1185, 13, 50747], 'temperature': 0.0, 'avg_logprob': -0.20516041089903633, 'compression_ratio': 1.7552742616033756, 'no_speech_prob': 0.028400536626577377}, {'id': 891, 'seek': 504676, 'start': 5054.42, 'end': 5059.96, 'text': ' Actual using page table and reading the addresses and getting data from memory is done by the', 'tokens': [50747, 3251, 901, 1228, 3028, 3199, 293, 3760, 264, 16862, 293, 1242, 1412, 490, 4675, 307, 1096, 538, 264, 51024], 'temperature': 0.0, 'avg_logprob': -0.20516041089903633, 'compression_ratio': 1.7552742616033756, 'no_speech_prob': 0.028400536626577377}, {'id': 892, 'seek': 504676, 'start': 5059.96, 'end': 5062.22, 'text': ' processor.', 'tokens': [51024, 15321, 13, 51137], 'temperature': 0.0, 'avg_logprob': -0.20516041089903633, 'compression_ratio': 1.7552742616033756, 'no_speech_prob': 0.028400536626577377}, {'id': 893, 'seek': 504676, 'start': 5062.22, 'end': 5066.34, 'text': ' Now some of the virtual addresses might not map to anything.', 'tokens': [51137, 823, 512, 295, 264, 6374, 16862, 1062, 406, 4471, 281, 1340, 13, 51343], 'temperature': 0.0, 'avg_logprob': -0.20516041089903633, 'compression_ratio': 1.7552742616033756, 'no_speech_prob': 0.028400536626577377}, {'id': 894, 'seek': 504676, 'start': 5066.34, 'end': 5067.74, 'text': ' So those are null.', 'tokens': [51343, 407, 729, 366, 18184, 13, 51413], 'temperature': 0.0, 'avg_logprob': -0.20516041089903633, 'compression_ratio': 1.7552742616033756, 'no_speech_prob': 0.028400536626577377}, {'id': 895, 'seek': 504676, 'start': 5067.74, 'end': 5071.7, 'text': ' And if you try to access these addresses, you will get a sec fault.', 'tokens': [51413, 400, 498, 291, 853, 281, 2105, 613, 16862, 11, 291, 486, 483, 257, 907, 7441, 13, 51611], 'temperature': 0.0, 'avg_logprob': -0.20516041089903633, 'compression_ratio': 1.7552742616033756, 'no_speech_prob': 0.028400536626577377}, {'id': 896, 'seek': 504676, 'start': 5071.7, 'end': 5075.9400000000005, 'text': ' So the reason you get sec fault is for two things.', 'tokens': [51611, 407, 264, 1778, 291, 483, 907, 7441, 307, 337, 732, 721, 13, 51823], 'temperature': 0.0, 'avg_logprob': -0.20516041089903633, 'compression_ratio': 1.7552742616033756, 'no_speech_prob': 0.028400536626577377}, {'id': 897, 'seek': 507594, 'start': 5075.94, 'end': 5084.04, 'text': ' You are trying to access a virtual address which is not allocated to any physical address.', 'tokens': [50364, 509, 366, 1382, 281, 2105, 257, 6374, 2985, 597, 307, 406, 29772, 281, 604, 4001, 2985, 13, 50769], 'temperature': 0.0, 'avg_logprob': -0.1271748804784083, 'compression_ratio': 1.7740384615384615, 'no_speech_prob': 0.0023220116272568703}, {'id': 898, 'seek': 507594, 'start': 5084.04, 'end': 5087.0, 'text': " That's when you get a sec fault.", 'tokens': [50769, 663, 311, 562, 291, 483, 257, 907, 7441, 13, 50917], 'temperature': 0.0, 'avg_logprob': -0.1271748804784083, 'compression_ratio': 1.7740384615384615, 'no_speech_prob': 0.0023220116272568703}, {'id': 899, 'seek': 507594, 'start': 5087.0, 'end': 5093.96, 'text': ' You are trying to access a page which has permissions marked which are not for your', 'tokens': [50917, 509, 366, 1382, 281, 2105, 257, 3028, 597, 575, 32723, 12658, 597, 366, 406, 337, 428, 51265], 'temperature': 0.0, 'avg_logprob': -0.1271748804784083, 'compression_ratio': 1.7740384615384615, 'no_speech_prob': 0.0023220116272568703}, {'id': 900, 'seek': 507594, 'start': 5093.96, 'end': 5094.96, 'text': ' case.', 'tokens': [51265, 1389, 13, 51315], 'temperature': 0.0, 'avg_logprob': -0.1271748804784083, 'compression_ratio': 1.7740384615384615, 'no_speech_prob': 0.0023220116272568703}, {'id': 901, 'seek': 507594, 'start': 5094.96, 'end': 5100.0, 'text': ' For example, if you try to access a page which lives in the kernel space, then the permissions', 'tokens': [51315, 1171, 1365, 11, 498, 291, 853, 281, 2105, 257, 3028, 597, 2909, 294, 264, 28256, 1901, 11, 550, 264, 32723, 51567], 'temperature': 0.0, 'avg_logprob': -0.1271748804784083, 'compression_ratio': 1.7740384615384615, 'no_speech_prob': 0.0023220116272568703}, {'id': 902, 'seek': 507594, 'start': 5100.0, 'end': 5104.639999999999, 'text': ' of that will be set up such that user program cannot access.', 'tokens': [51567, 295, 300, 486, 312, 992, 493, 1270, 300, 4195, 1461, 2644, 2105, 13, 51799], 'temperature': 0.0, 'avg_logprob': -0.1271748804784083, 'compression_ratio': 1.7740384615384615, 'no_speech_prob': 0.0023220116272568703}, {'id': 903, 'seek': 510464, 'start': 5104.64, 'end': 5109.9400000000005, 'text': " Now let's go back to the quiz which we were discussing yesterday.", 'tokens': [50364, 823, 718, 311, 352, 646, 281, 264, 15450, 597, 321, 645, 10850, 5186, 13, 50629], 'temperature': 0.0, 'avg_logprob': -0.12251619545810194, 'compression_ratio': 1.5721153846153846, 'no_speech_prob': 0.02296469733119011}, {'id': 904, 'seek': 510464, 'start': 5109.9400000000005, 'end': 5115.4400000000005, 'text': ' What we said is if you return address of a variable on the stack to the caller function', 'tokens': [50629, 708, 321, 848, 307, 498, 291, 2736, 2985, 295, 257, 7006, 322, 264, 8630, 281, 264, 48324, 2445, 50904], 'temperature': 0.0, 'avg_logprob': -0.12251619545810194, 'compression_ratio': 1.5721153846153846, 'no_speech_prob': 0.02296469733119011}, {'id': 905, 'seek': 510464, 'start': 5115.4400000000005, 'end': 5124.9400000000005, 'text': ' and the caller function tries to access it, it will still be able to print it although', 'tokens': [50904, 293, 264, 48324, 2445, 9898, 281, 2105, 309, 11, 309, 486, 920, 312, 1075, 281, 4482, 309, 4878, 51379], 'temperature': 0.0, 'avg_logprob': -0.12251619545810194, 'compression_ratio': 1.5721153846153846, 'no_speech_prob': 0.02296469733119011}, {'id': 906, 'seek': 510464, 'start': 5124.9400000000005, 'end': 5128.240000000001, 'text': " it's logically incorrect thing to do.", 'tokens': [51379, 309, 311, 38887, 18424, 551, 281, 360, 13, 51544], 'temperature': 0.0, 'avg_logprob': -0.12251619545810194, 'compression_ratio': 1.5721153846153846, 'no_speech_prob': 0.02296469733119011}, {'id': 907, 'seek': 510464, 'start': 5128.240000000001, 'end': 5132.1, 'text': " Now why you didn't get a sec fault in that case?", 'tokens': [51544, 823, 983, 291, 994, 380, 483, 257, 907, 7441, 294, 300, 1389, 30, 51737], 'temperature': 0.0, 'avg_logprob': -0.12251619545810194, 'compression_ratio': 1.5721153846153846, 'no_speech_prob': 0.02296469733119011}, {'id': 908, 'seek': 513210, 'start': 5132.1, 'end': 5140.22, 'text': ' You are trying to access memory which you are not supposed to access.', 'tokens': [50364, 509, 366, 1382, 281, 2105, 4675, 597, 291, 366, 406, 3442, 281, 2105, 13, 50770], 'temperature': 0.0, 'avg_logprob': -0.15411605834960937, 'compression_ratio': 1.4759036144578312, 'no_speech_prob': 0.20166978240013123}, {'id': 909, 'seek': 513210, 'start': 5140.22, 'end': 5146.280000000001, 'text': " And the reason was even when the stack pointer was moved, it's not that the page for that", 'tokens': [50770, 400, 264, 1778, 390, 754, 562, 264, 8630, 23918, 390, 4259, 11, 309, 311, 406, 300, 264, 3028, 337, 300, 51073], 'temperature': 0.0, 'avg_logprob': -0.15411605834960937, 'compression_ratio': 1.4759036144578312, 'no_speech_prob': 0.20166978240013123}, {'id': 910, 'seek': 513210, 'start': 5146.280000000001, 'end': 5147.900000000001, 'text': ' was marked as null.', 'tokens': [51073, 390, 12658, 382, 18184, 13, 51154], 'temperature': 0.0, 'avg_logprob': -0.15411605834960937, 'compression_ratio': 1.4759036144578312, 'no_speech_prob': 0.20166978240013123}, {'id': 911, 'seek': 513210, 'start': 5147.900000000001, 'end': 5152.68, 'text': " To give an example, let's do this.", 'tokens': [51154, 1407, 976, 364, 1365, 11, 718, 311, 360, 341, 13, 51393], 'temperature': 0.0, 'avg_logprob': -0.15411605834960937, 'compression_ratio': 1.4759036144578312, 'no_speech_prob': 0.20166978240013123}, {'id': 912, 'seek': 513210, 'start': 5152.68, 'end': 5158.3, 'text': " So let's say I have some code.", 'tokens': [51393, 407, 718, 311, 584, 286, 362, 512, 3089, 13, 51674], 'temperature': 0.0, 'avg_logprob': -0.15411605834960937, 'compression_ratio': 1.4759036144578312, 'no_speech_prob': 0.20166978240013123}, {'id': 913, 'seek': 515830, 'start': 5158.3, 'end': 5176.4800000000005, 'text': " So let's say I declare an array of 4 kb.", 'tokens': [50364, 407, 718, 311, 584, 286, 19710, 364, 10225, 295, 1017, 350, 65, 13, 51273], 'temperature': 0.0, 'avg_logprob': -0.37638097650864544, 'compression_ratio': 0.851063829787234, 'no_speech_prob': 0.937390923500061}, {'id': 914, 'seek': 517648, 'start': 5176.48, 'end': 5202.5599999999995, 'text': ' And let me access arr of 0, arr of 1, arr of 4095.', 'tokens': [50364, 400, 718, 385, 2105, 5539, 295, 1958, 11, 5539, 295, 502, 11, 5539, 295, 3356, 15718, 13, 51668], 'temperature': 0.0, 'avg_logprob': -0.24212255844703087, 'compression_ratio': 1.1090909090909091, 'no_speech_prob': 0.15168598294258118}, {'id': 915, 'seek': 517648, 'start': 5202.5599999999995, 'end': 5204.639999999999, 'text': ' It worked.', 'tokens': [51668, 467, 2732, 13, 51772], 'temperature': 0.0, 'avg_logprob': -0.24212255844703087, 'compression_ratio': 1.1090909090909091, 'no_speech_prob': 0.15168598294258118}, {'id': 916, 'seek': 520464, 'start': 5204.72, 'end': 5210.4400000000005, 'text': " Now let's try accessing something.", 'tokens': [50368, 823, 718, 311, 853, 26440, 746, 13, 50654], 'temperature': 0.0, 'avg_logprob': -0.33039719263712564, 'compression_ratio': 1.0919540229885059, 'no_speech_prob': 0.8726122975349426}, {'id': 917, 'seek': 520464, 'start': 5210.4400000000005, 'end': 5224.4800000000005, 'text': ' This is outside the array.', 'tokens': [50654, 639, 307, 2380, 264, 10225, 13, 51356], 'temperature': 0.0, 'avg_logprob': -0.33039719263712564, 'compression_ratio': 1.0919540229885059, 'no_speech_prob': 0.8726122975349426}, {'id': 918, 'seek': 520464, 'start': 5224.4800000000005, 'end': 5229.240000000001, 'text': " I still didn't get any sec fault.", 'tokens': [51356, 286, 920, 994, 380, 483, 604, 907, 7441, 13, 51594], 'temperature': 0.0, 'avg_logprob': -0.33039719263712564, 'compression_ratio': 1.0919540229885059, 'no_speech_prob': 0.8726122975349426}, {'id': 919, 'seek': 522924, 'start': 5229.24, 'end': 5235.44, 'text': " Let's try to access this.", 'tokens': [50364, 961, 311, 853, 281, 2105, 341, 13, 50674], 'temperature': 0.0, 'avg_logprob': -0.18409568071365356, 'compression_ratio': 1.3278688524590163, 'no_speech_prob': 0.01362562831491232}, {'id': 920, 'seek': 522924, 'start': 5235.44, 'end': 5244.82, 'text': " I still didn't get any sec fault.", 'tokens': [50674, 286, 920, 994, 380, 483, 604, 907, 7441, 13, 51143], 'temperature': 0.0, 'avg_logprob': -0.18409568071365356, 'compression_ratio': 1.3278688524590163, 'no_speech_prob': 0.01362562831491232}, {'id': 921, 'seek': 522924, 'start': 5244.82, 'end': 5246.94, 'text': ' I got sec fault.', 'tokens': [51143, 286, 658, 907, 7441, 13, 51249], 'temperature': 0.0, 'avg_logprob': -0.18409568071365356, 'compression_ratio': 1.3278688524590163, 'no_speech_prob': 0.01362562831491232}, {'id': 922, 'seek': 522924, 'start': 5246.94, 'end': 5255.32, 'text': ' The reason most likely is this offset falls into a next page which was not allocated.', 'tokens': [51249, 440, 1778, 881, 3700, 307, 341, 18687, 8804, 666, 257, 958, 3028, 597, 390, 406, 29772, 13, 51668], 'temperature': 0.0, 'avg_logprob': -0.18409568071365356, 'compression_ratio': 1.3278688524590163, 'no_speech_prob': 0.01362562831491232}, {'id': 923, 'seek': 525532, 'start': 5255.32, 'end': 5266.24, 'text': ' So whenever you do access memory which is outside some logical object, you are not guaranteed', 'tokens': [50364, 407, 5699, 291, 360, 2105, 4675, 597, 307, 2380, 512, 14978, 2657, 11, 291, 366, 406, 18031, 50910], 'temperature': 0.0, 'avg_logprob': -0.1336510210152132, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.014401677995920181}, {'id': 924, 'seek': 525532, 'start': 5266.24, 'end': 5267.32, 'text': ' to get a sec fault.', 'tokens': [50910, 281, 483, 257, 907, 7441, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.1336510210152132, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.014401677995920181}, {'id': 925, 'seek': 525532, 'start': 5267.32, 'end': 5270.88, 'text': ' In fact, sec fault is a good thing because then you can realize there is some bug in', 'tokens': [50964, 682, 1186, 11, 907, 7441, 307, 257, 665, 551, 570, 550, 291, 393, 4325, 456, 307, 512, 7426, 294, 51142], 'temperature': 0.0, 'avg_logprob': -0.1336510210152132, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.014401677995920181}, {'id': 926, 'seek': 525532, 'start': 5270.88, 'end': 5272.639999999999, 'text': ' your program.', 'tokens': [51142, 428, 1461, 13, 51230], 'temperature': 0.0, 'avg_logprob': -0.1336510210152132, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.014401677995920181}, {'id': 927, 'seek': 525532, 'start': 5272.639999999999, 'end': 5279.24, 'text': " This was much more bad because what happens is let's say I was reading this somehow,", 'tokens': [51230, 639, 390, 709, 544, 1578, 570, 437, 2314, 307, 718, 311, 584, 286, 390, 3760, 341, 6063, 11, 51560], 'temperature': 0.0, 'avg_logprob': -0.1336510210152132, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.014401677995920181}, {'id': 928, 'seek': 525532, 'start': 5279.24, 'end': 5281.36, 'text': ' then it gave me something.', 'tokens': [51560, 550, 309, 2729, 385, 746, 13, 51666], 'temperature': 0.0, 'avg_logprob': -0.1336510210152132, 'compression_ratio': 1.5960591133004927, 'no_speech_prob': 0.014401677995920181}, {'id': 929, 'seek': 528136, 'start': 5281.36, 'end': 5286.4, 'text': ' And this is much more harder bug to find in your program than when you get a sec fault', 'tokens': [50364, 400, 341, 307, 709, 544, 6081, 7426, 281, 915, 294, 428, 1461, 813, 562, 291, 483, 257, 907, 7441, 50616], 'temperature': 0.0, 'avg_logprob': -0.09861517465242775, 'compression_ratio': 1.7843137254901962, 'no_speech_prob': 0.09796582907438278}, {'id': 930, 'seek': 528136, 'start': 5286.4, 'end': 5290.719999999999, 'text': ' because when you get a sec fault, you know that this is the point where it got sec fault.', 'tokens': [50616, 570, 562, 291, 483, 257, 907, 7441, 11, 291, 458, 300, 341, 307, 264, 935, 689, 309, 658, 907, 7441, 13, 50832], 'temperature': 0.0, 'avg_logprob': -0.09861517465242775, 'compression_ratio': 1.7843137254901962, 'no_speech_prob': 0.09796582907438278}, {'id': 931, 'seek': 528136, 'start': 5290.719999999999, 'end': 5294.32, 'text': " So let me check if I'm trying to access something illegal.", 'tokens': [50832, 407, 718, 385, 1520, 498, 286, 478, 1382, 281, 2105, 746, 11905, 13, 51012], 'temperature': 0.0, 'avg_logprob': -0.09861517465242775, 'compression_ratio': 1.7843137254901962, 'no_speech_prob': 0.09796582907438278}, {'id': 932, 'seek': 528136, 'start': 5294.32, 'end': 5304.04, 'text': ' In this case, there was no easy way for me to identify that I was trying to access something', 'tokens': [51012, 682, 341, 1389, 11, 456, 390, 572, 1858, 636, 337, 385, 281, 5876, 300, 286, 390, 1382, 281, 2105, 746, 51498], 'temperature': 0.0, 'avg_logprob': -0.09861517465242775, 'compression_ratio': 1.7843137254901962, 'no_speech_prob': 0.09796582907438278}, {'id': 933, 'seek': 528136, 'start': 5304.04, 'end': 5308.24, 'text': ' which was illegal for me to access.', 'tokens': [51498, 597, 390, 11905, 337, 385, 281, 2105, 13, 51708], 'temperature': 0.0, 'avg_logprob': -0.09861517465242775, 'compression_ratio': 1.7843137254901962, 'no_speech_prob': 0.09796582907438278}, {'id': 934, 'seek': 530824, 'start': 5308.24, 'end': 5311.9, 'text': ' So these kind of bugs are very hard.', 'tokens': [50364, 407, 613, 733, 295, 15120, 366, 588, 1152, 13, 50547], 'temperature': 0.0, 'avg_logprob': -0.20456962287425995, 'compression_ratio': 1.4038461538461537, 'no_speech_prob': 0.16442567110061646}, {'id': 935, 'seek': 530824, 'start': 5311.9, 'end': 5317.639999999999, 'text': " Now there is one tool which I don't know if it is installed on this.", 'tokens': [50547, 823, 456, 307, 472, 2290, 597, 286, 500, 380, 458, 498, 309, 307, 8899, 322, 341, 13, 50834], 'temperature': 0.0, 'avg_logprob': -0.20456962287425995, 'compression_ratio': 1.4038461538461537, 'no_speech_prob': 0.16442567110061646}, {'id': 936, 'seek': 530824, 'start': 5317.639999999999, 'end': 5334.4, 'text': ' If you run your program under a command called, so Valgrind is not running.', 'tokens': [50834, 759, 291, 1190, 428, 1461, 833, 257, 5622, 1219, 11, 370, 7188, 861, 471, 307, 406, 2614, 13, 51672], 'temperature': 0.0, 'avg_logprob': -0.20456962287425995, 'compression_ratio': 1.4038461538461537, 'no_speech_prob': 0.16442567110061646}, {'id': 937, 'seek': 530824, 'start': 5334.4, 'end': 5337.82, 'text': " So even Valgrind couldn't catch this.", 'tokens': [51672, 407, 754, 7188, 861, 471, 2809, 380, 3745, 341, 13, 51843], 'temperature': 0.0, 'avg_logprob': -0.20456962287425995, 'compression_ratio': 1.4038461538461537, 'no_speech_prob': 0.16442567110061646}, {'id': 938, 'seek': 533782, 'start': 5337.82, 'end': 5343.54, 'text': ' So there is a tool called Valgrind which essentially can detect some sort of logical bugs in your', 'tokens': [50364, 407, 456, 307, 257, 2290, 1219, 7188, 861, 471, 597, 4476, 393, 5531, 512, 1333, 295, 14978, 15120, 294, 428, 50650], 'temperature': 0.0, 'avg_logprob': -0.10432731499106197, 'compression_ratio': 1.790874524714829, 'no_speech_prob': 0.002115258714184165}, {'id': 939, 'seek': 533782, 'start': 5343.54, 'end': 5346.12, 'text': ' program, especially with respect to memory.', 'tokens': [50650, 1461, 11, 2318, 365, 3104, 281, 4675, 13, 50779], 'temperature': 0.0, 'avg_logprob': -0.10432731499106197, 'compression_ratio': 1.790874524714829, 'no_speech_prob': 0.002115258714184165}, {'id': 940, 'seek': 533782, 'start': 5346.12, 'end': 5351.54, 'text': ' So if you are trying to access memory which was not allocated or if you are trying to', 'tokens': [50779, 407, 498, 291, 366, 1382, 281, 2105, 4675, 597, 390, 406, 29772, 420, 498, 291, 366, 1382, 281, 51050], 'temperature': 0.0, 'avg_logprob': -0.10432731499106197, 'compression_ratio': 1.790874524714829, 'no_speech_prob': 0.002115258714184165}, {'id': 941, 'seek': 533782, 'start': 5351.54, 'end': 5358.34, 'text': ' look at heap and dereference a dangling pointer and those kind of things, those are all detected', 'tokens': [51050, 574, 412, 33591, 293, 15969, 5158, 257, 21892, 1688, 23918, 293, 729, 733, 295, 721, 11, 729, 366, 439, 21896, 51390], 'temperature': 0.0, 'avg_logprob': -0.10432731499106197, 'compression_ratio': 1.790874524714829, 'no_speech_prob': 0.002115258714184165}, {'id': 942, 'seek': 533782, 'start': 5358.34, 'end': 5359.34, 'text': ' by Valgrind.', 'tokens': [51390, 538, 7188, 861, 471, 13, 51440], 'temperature': 0.0, 'avg_logprob': -0.10432731499106197, 'compression_ratio': 1.790874524714829, 'no_speech_prob': 0.002115258714184165}, {'id': 943, 'seek': 533782, 'start': 5359.34, 'end': 5361.46, 'text': ' But even Valgrind is of no help here.', 'tokens': [51440, 583, 754, 7188, 861, 471, 307, 295, 572, 854, 510, 13, 51546], 'temperature': 0.0, 'avg_logprob': -0.10432731499106197, 'compression_ratio': 1.790874524714829, 'no_speech_prob': 0.002115258714184165}, {'id': 944, 'seek': 533782, 'start': 5361.46, 'end': 5367.38, 'text': ' So these kind of bugs are going to be nightmare, especially if they happen in a large software.', 'tokens': [51546, 407, 613, 733, 295, 15120, 366, 516, 281, 312, 18724, 11, 2318, 498, 436, 1051, 294, 257, 2416, 4722, 13, 51842], 'temperature': 0.0, 'avg_logprob': -0.10432731499106197, 'compression_ratio': 1.790874524714829, 'no_speech_prob': 0.002115258714184165}, {'id': 945, 'seek': 536738, 'start': 5367.38, 'end': 5373.86, 'text': " So always be, don't try to write such codes.", 'tokens': [50364, 407, 1009, 312, 11, 500, 380, 853, 281, 2464, 1270, 14211, 13, 50688], 'temperature': 0.0, 'avg_logprob': -0.14629665053034402, 'compression_ratio': 1.6435643564356435, 'no_speech_prob': 0.10963756591081619}, {'id': 946, 'seek': 536738, 'start': 5373.86, 'end': 5379.66, 'text': ' And then some of the addresses can actually be mapped into the disk.', 'tokens': [50688, 400, 550, 512, 295, 264, 16862, 393, 767, 312, 33318, 666, 264, 12355, 13, 50978], 'temperature': 0.0, 'avg_logprob': -0.14629665053034402, 'compression_ratio': 1.6435643564356435, 'no_speech_prob': 0.10963756591081619}, {'id': 947, 'seek': 536738, 'start': 5379.66, 'end': 5384.56, 'text': ' Now what happens is you must have heard of something called as a page fault.', 'tokens': [50978, 823, 437, 2314, 307, 291, 1633, 362, 2198, 295, 746, 1219, 382, 257, 3028, 7441, 13, 51223], 'temperature': 0.0, 'avg_logprob': -0.14629665053034402, 'compression_ratio': 1.6435643564356435, 'no_speech_prob': 0.10963756591081619}, {'id': 948, 'seek': 536738, 'start': 5384.56, 'end': 5387.78, 'text': ' How many of you have heard this term, page fault?', 'tokens': [51223, 1012, 867, 295, 291, 362, 2198, 341, 1433, 11, 3028, 7441, 30, 51384], 'temperature': 0.0, 'avg_logprob': -0.14629665053034402, 'compression_ratio': 1.6435643564356435, 'no_speech_prob': 0.10963756591081619}, {'id': 949, 'seek': 536738, 'start': 5387.78, 'end': 5393.3, 'text': ' Now what happens is if your address is actually in the physical memory, then processor will', 'tokens': [51384, 823, 437, 2314, 307, 498, 428, 2985, 307, 767, 294, 264, 4001, 4675, 11, 550, 15321, 486, 51660], 'temperature': 0.0, 'avg_logprob': -0.14629665053034402, 'compression_ratio': 1.6435643564356435, 'no_speech_prob': 0.10963756591081619}, {'id': 950, 'seek': 539330, 'start': 5393.3, 'end': 5397.9400000000005, 'text': ' happily go and execute and get data from that address.', 'tokens': [50364, 19909, 352, 293, 14483, 293, 483, 1412, 490, 300, 2985, 13, 50596], 'temperature': 0.0, 'avg_logprob': -0.14198370294256524, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.30689579248428345}, {'id': 951, 'seek': 539330, 'start': 5397.9400000000005, 'end': 5404.9400000000005, 'text': ' But if the address is present in the swap area, if address is mapped onto the disk,', 'tokens': [50596, 583, 498, 264, 2985, 307, 1974, 294, 264, 18135, 1859, 11, 498, 2985, 307, 33318, 3911, 264, 12355, 11, 50946], 'temperature': 0.0, 'avg_logprob': -0.14198370294256524, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.30689579248428345}, {'id': 952, 'seek': 539330, 'start': 5404.9400000000005, 'end': 5409.9800000000005, 'text': ' then you need to, the event is called as page fault.', 'tokens': [50946, 550, 291, 643, 281, 11, 264, 2280, 307, 1219, 382, 3028, 7441, 13, 51198], 'temperature': 0.0, 'avg_logprob': -0.14198370294256524, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.30689579248428345}, {'id': 953, 'seek': 539330, 'start': 5409.9800000000005, 'end': 5414.14, 'text': " And that's where again operating systems come into picture and operating system will", 'tokens': [51198, 400, 300, 311, 689, 797, 7447, 3652, 808, 666, 3036, 293, 7447, 1185, 486, 51406], 'temperature': 0.0, 'avg_logprob': -0.14198370294256524, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.30689579248428345}, {'id': 954, 'seek': 539330, 'start': 5414.14, 'end': 5421.22, 'text': ' read that data from the disk and bring it back into the physical memory.', 'tokens': [51406, 1401, 300, 1412, 490, 264, 12355, 293, 1565, 309, 646, 666, 264, 4001, 4675, 13, 51760], 'temperature': 0.0, 'avg_logprob': -0.14198370294256524, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.30689579248428345}, {'id': 955, 'seek': 539330, 'start': 5421.22, 'end': 5422.84, 'text': ' Does that make sense?', 'tokens': [51760, 4402, 300, 652, 2020, 30, 51841], 'temperature': 0.0, 'avg_logprob': -0.14198370294256524, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.30689579248428345}, {'id': 956, 'seek': 542284, 'start': 5422.84, 'end': 5428.16, 'text': ' So all of this essentially allowed you to efficiently utilize memory because remember', 'tokens': [50364, 407, 439, 295, 341, 4476, 4350, 291, 281, 19621, 16117, 4675, 570, 1604, 50630], 'temperature': 0.0, 'avg_logprob': -0.1662163856701973, 'compression_ratio': 1.5936073059360731, 'no_speech_prob': 0.0033212860580533743}, {'id': 957, 'seek': 542284, 'start': 5428.16, 'end': 5434.68, 'text': ' we were keeping things in physical RAM, only things which were needed.', 'tokens': [50630, 321, 645, 5145, 721, 294, 4001, 14561, 11, 787, 721, 597, 645, 2978, 13, 50956], 'temperature': 0.0, 'avg_logprob': -0.1662163856701973, 'compression_ratio': 1.5936073059360731, 'no_speech_prob': 0.0033212860580533743}, {'id': 958, 'seek': 542284, 'start': 5434.68, 'end': 5436.56, 'text': " We didn't keep everything.", 'tokens': [50956, 492, 994, 380, 1066, 1203, 13, 51050], 'temperature': 0.0, 'avg_logprob': -0.1662163856701973, 'compression_ratio': 1.5936073059360731, 'no_speech_prob': 0.0033212860580533743}, {'id': 959, 'seek': 542284, 'start': 5436.56, 'end': 5443.04, 'text': ' And whenever we tried to access something which was not in RAM, but in the disk, operating', 'tokens': [51050, 400, 5699, 321, 3031, 281, 2105, 746, 597, 390, 406, 294, 14561, 11, 457, 294, 264, 12355, 11, 7447, 51374], 'temperature': 0.0, 'avg_logprob': -0.1662163856701973, 'compression_ratio': 1.5936073059360731, 'no_speech_prob': 0.0033212860580533743}, {'id': 960, 'seek': 542284, 'start': 5443.04, 'end': 5446.84, 'text': ' system came into picture, brought something from the disk into the memory.', 'tokens': [51374, 1185, 1361, 666, 3036, 11, 3038, 746, 490, 264, 12355, 666, 264, 4675, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.1662163856701973, 'compression_ratio': 1.5936073059360731, 'no_speech_prob': 0.0033212860580533743}, {'id': 961, 'seek': 544684, 'start': 5446.84, 'end': 5451.72, 'text': " And then it may do something like a page replacement if it doesn't have, sorry, if", 'tokens': [50364, 400, 550, 309, 815, 360, 746, 411, 257, 3028, 14419, 498, 309, 1177, 380, 362, 11, 2597, 11, 498, 50608], 'temperature': 0.0, 'avg_logprob': -0.13627727976385154, 'compression_ratio': 1.7565217391304349, 'no_speech_prob': 0.18221768736839294}, {'id': 962, 'seek': 544684, 'start': 5451.72, 'end': 5455.02, 'text': " it doesn't have space in the RAM.", 'tokens': [50608, 309, 1177, 380, 362, 1901, 294, 264, 14561, 13, 50773], 'temperature': 0.0, 'avg_logprob': -0.13627727976385154, 'compression_ratio': 1.7565217391304349, 'no_speech_prob': 0.18221768736839294}, {'id': 963, 'seek': 544684, 'start': 5455.02, 'end': 5459.72, 'text': ' So only when you run out of physical RAM and the disk is when you have a problem because', 'tokens': [50773, 407, 787, 562, 291, 1190, 484, 295, 4001, 14561, 293, 264, 12355, 307, 562, 291, 362, 257, 1154, 570, 51008], 'temperature': 0.0, 'avg_logprob': -0.13627727976385154, 'compression_ratio': 1.7565217391304349, 'no_speech_prob': 0.18221768736839294}, {'id': 964, 'seek': 544684, 'start': 5459.72, 'end': 5464.82, 'text': ' then there is no way operating system can put in some data.', 'tokens': [51008, 550, 456, 307, 572, 636, 7447, 1185, 393, 829, 294, 512, 1412, 13, 51263], 'temperature': 0.0, 'avg_logprob': -0.13627727976385154, 'compression_ratio': 1.7565217391304349, 'no_speech_prob': 0.18221768736839294}, {'id': 965, 'seek': 544684, 'start': 5464.82, 'end': 5470.72, 'text': ' And if you try to access something which is not mapped at all, not mapped to RAM or not', 'tokens': [51263, 400, 498, 291, 853, 281, 2105, 746, 597, 307, 406, 33318, 412, 439, 11, 406, 33318, 281, 14561, 420, 406, 51558], 'temperature': 0.0, 'avg_logprob': -0.13627727976385154, 'compression_ratio': 1.7565217391304349, 'no_speech_prob': 0.18221768736839294}, {'id': 966, 'seek': 544684, 'start': 5470.72, 'end': 5474.860000000001, 'text': ' mapped to physical disk, then you get a set fault.', 'tokens': [51558, 33318, 281, 4001, 12355, 11, 550, 291, 483, 257, 992, 7441, 13, 51765], 'temperature': 0.0, 'avg_logprob': -0.13627727976385154, 'compression_ratio': 1.7565217391304349, 'no_speech_prob': 0.18221768736839294}, {'id': 967, 'seek': 547486, 'start': 5474.86, 'end': 5481.74, 'text': ' In all other cases, program will silently do something.', 'tokens': [50364, 682, 439, 661, 3331, 11, 1461, 486, 40087, 360, 746, 13, 50708], 'temperature': 0.0, 'avg_logprob': -0.20726893107096353, 'compression_ratio': 1.650273224043716, 'no_speech_prob': 0.03618700057268143}, {'id': 968, 'seek': 547486, 'start': 5481.74, 'end': 5484.46, 'text': ' And how many page tables you need?', 'tokens': [50708, 400, 577, 867, 3028, 8020, 291, 643, 30, 50844], 'temperature': 0.0, 'avg_logprob': -0.20726893107096353, 'compression_ratio': 1.650273224043716, 'no_speech_prob': 0.03618700057268143}, {'id': 969, 'seek': 547486, 'start': 5484.46, 'end': 5487.0199999999995, 'text': ' Correct.', 'tokens': [50844, 12753, 13, 50972], 'temperature': 0.0, 'avg_logprob': -0.20726893107096353, 'compression_ratio': 1.650273224043716, 'no_speech_prob': 0.03618700057268143}, {'id': 970, 'seek': 547486, 'start': 5487.0199999999995, 'end': 5490.62, 'text': ' So you need one page table per process.', 'tokens': [50972, 407, 291, 643, 472, 3028, 3199, 680, 1399, 13, 51152], 'temperature': 0.0, 'avg_logprob': -0.20726893107096353, 'compression_ratio': 1.650273224043716, 'no_speech_prob': 0.03618700057268143}, {'id': 971, 'seek': 547486, 'start': 5490.62, 'end': 5497.42, 'text': ' So every page table has a process, every process has a page table which essentially tells how', 'tokens': [51152, 407, 633, 3028, 3199, 575, 257, 1399, 11, 633, 1399, 575, 257, 3028, 3199, 597, 4476, 5112, 577, 51492], 'temperature': 0.0, 'avg_logprob': -0.20726893107096353, 'compression_ratio': 1.650273224043716, 'no_speech_prob': 0.03618700057268143}, {'id': 972, 'seek': 547486, 'start': 5497.42, 'end': 5503.219999999999, 'text': ' to map virtual address space of this process to the physical memory.', 'tokens': [51492, 281, 4471, 6374, 2985, 1901, 295, 341, 1399, 281, 264, 4001, 4675, 13, 51782], 'temperature': 0.0, 'avg_logprob': -0.20726893107096353, 'compression_ratio': 1.650273224043716, 'no_speech_prob': 0.03618700057268143}, {'id': 973, 'seek': 550322, 'start': 5503.22, 'end': 5505.04, 'text': ' Does that make sense?', 'tokens': [50364, 4402, 300, 652, 2020, 30, 50455], 'temperature': 0.0, 'avg_logprob': -0.1938797124226888, 'compression_ratio': 1.6184971098265897, 'no_speech_prob': 0.0047537158243358135}, {'id': 974, 'seek': 550322, 'start': 5505.04, 'end': 5510.54, 'text': ' Now obviously the address translation is a costly activity.', 'tokens': [50455, 823, 2745, 264, 2985, 12853, 307, 257, 28328, 5191, 13, 50730], 'temperature': 0.0, 'avg_logprob': -0.1938797124226888, 'compression_ratio': 1.6184971098265897, 'no_speech_prob': 0.0047537158243358135}, {'id': 975, 'seek': 550322, 'start': 5510.54, 'end': 5512.5, 'text': ' And this is what happens in that.', 'tokens': [50730, 400, 341, 307, 437, 2314, 294, 300, 13, 50828], 'temperature': 0.0, 'avg_logprob': -0.1938797124226888, 'compression_ratio': 1.6184971098265897, 'no_speech_prob': 0.0047537158243358135}, {'id': 976, 'seek': 550322, 'start': 5512.5, 'end': 5519.38, 'text': ' So page table, how does processor know where is page table for process P1?', 'tokens': [50828, 407, 3028, 3199, 11, 577, 775, 15321, 458, 689, 307, 3028, 3199, 337, 1399, 430, 16, 30, 51172], 'temperature': 0.0, 'avg_logprob': -0.1938797124226888, 'compression_ratio': 1.6184971098265897, 'no_speech_prob': 0.0047537158243358135}, {'id': 977, 'seek': 550322, 'start': 5519.38, 'end': 5524.46, 'text': ' Or how does it know where is process for page process P2?', 'tokens': [51172, 1610, 577, 775, 309, 458, 689, 307, 1399, 337, 3028, 1399, 430, 17, 30, 51426], 'temperature': 0.0, 'avg_logprob': -0.1938797124226888, 'compression_ratio': 1.6184971098265897, 'no_speech_prob': 0.0047537158243358135}, {'id': 978, 'seek': 550322, 'start': 5524.46, 'end': 5526.9800000000005, 'text': ' So there is a special register.', 'tokens': [51426, 407, 456, 307, 257, 2121, 7280, 13, 51552], 'temperature': 0.0, 'avg_logprob': -0.1938797124226888, 'compression_ratio': 1.6184971098265897, 'no_speech_prob': 0.0047537158243358135}, {'id': 979, 'seek': 552698, 'start': 5527.259999999999, 'end': 5533.179999999999, 'text': ' In x86 there is a register called CR3 which actually holds the page table address.', 'tokens': [50378, 682, 2031, 22193, 456, 307, 257, 7280, 1219, 14123, 18, 597, 767, 9190, 264, 3028, 3199, 2985, 13, 50674], 'temperature': 0.0, 'avg_logprob': -0.14126299648750118, 'compression_ratio': 1.7577319587628866, 'no_speech_prob': 0.1518644541501999}, {'id': 980, 'seek': 552698, 'start': 5533.179999999999, 'end': 5540.099999999999, 'text': ' But essentially this register actually holds the address of the page table of the current', 'tokens': [50674, 583, 4476, 341, 7280, 767, 9190, 264, 2985, 295, 264, 3028, 3199, 295, 264, 2190, 51020], 'temperature': 0.0, 'avg_logprob': -0.14126299648750118, 'compression_ratio': 1.7577319587628866, 'no_speech_prob': 0.1518644541501999}, {'id': 981, 'seek': 552698, 'start': 5540.099999999999, 'end': 5541.099999999999, 'text': ' process.', 'tokens': [51020, 1399, 13, 51070], 'temperature': 0.0, 'avg_logprob': -0.14126299648750118, 'compression_ratio': 1.7577319587628866, 'no_speech_prob': 0.1518644541501999}, {'id': 982, 'seek': 552698, 'start': 5541.099999999999, 'end': 5544.0199999999995, 'text': ' And remember page table itself is also stored in memory.', 'tokens': [51070, 400, 1604, 3028, 3199, 2564, 307, 611, 12187, 294, 4675, 13, 51216], 'temperature': 0.0, 'avg_logprob': -0.14126299648750118, 'compression_ratio': 1.7577319587628866, 'no_speech_prob': 0.1518644541501999}, {'id': 983, 'seek': 552698, 'start': 5544.0199999999995, 'end': 5549.36, 'text': ' So page table is not something which has magical storage on the CPU.', 'tokens': [51216, 407, 3028, 3199, 307, 406, 746, 597, 575, 12066, 6725, 322, 264, 13199, 13, 51483], 'temperature': 0.0, 'avg_logprob': -0.14126299648750118, 'compression_ratio': 1.7577319587628866, 'no_speech_prob': 0.1518644541501999}, {'id': 984, 'seek': 552698, 'start': 5549.36, 'end': 5552.299999999999, 'text': ' Page table is also stored in RAM.', 'tokens': [51483, 21217, 3199, 307, 611, 12187, 294, 14561, 13, 51630], 'temperature': 0.0, 'avg_logprob': -0.14126299648750118, 'compression_ratio': 1.7577319587628866, 'no_speech_prob': 0.1518644541501999}, {'id': 985, 'seek': 555230, 'start': 5552.3, 'end': 5557.9400000000005, 'text': ' So this will actually hold the address of the page table.', 'tokens': [50364, 407, 341, 486, 767, 1797, 264, 2985, 295, 264, 3028, 3199, 13, 50646], 'temperature': 0.0, 'avg_logprob': -0.1331115234188917, 'compression_ratio': 1.728643216080402, 'no_speech_prob': 0.006896878592669964}, {'id': 986, 'seek': 555230, 'start': 5557.9400000000005, 'end': 5562.22, 'text': ' And page table will have whether it is a valid page or not.', 'tokens': [50646, 400, 3028, 3199, 486, 362, 1968, 309, 307, 257, 7363, 3028, 420, 406, 13, 50860], 'temperature': 0.0, 'avg_logprob': -0.1331115234188917, 'compression_ratio': 1.728643216080402, 'no_speech_prob': 0.006896878592669964}, {'id': 987, 'seek': 555230, 'start': 5562.22, 'end': 5568.54, 'text': ' And then it will have a table which will essentially say that this virtual address maps to this', 'tokens': [50860, 400, 550, 309, 486, 362, 257, 3199, 597, 486, 4476, 584, 300, 341, 6374, 2985, 11317, 281, 341, 51176], 'temperature': 0.0, 'avg_logprob': -0.1331115234188917, 'compression_ratio': 1.728643216080402, 'no_speech_prob': 0.006896878592669964}, {'id': 988, 'seek': 555230, 'start': 5568.54, 'end': 5570.7, 'text': ' physical address.', 'tokens': [51176, 4001, 2985, 13, 51284], 'temperature': 0.0, 'avg_logprob': -0.1331115234188917, 'compression_ratio': 1.728643216080402, 'no_speech_prob': 0.006896878592669964}, {'id': 989, 'seek': 555230, 'start': 5570.7, 'end': 5573.38, 'text': ' Does that make sense?', 'tokens': [51284, 4402, 300, 652, 2020, 30, 51418], 'temperature': 0.0, 'avg_logprob': -0.1331115234188917, 'compression_ratio': 1.728643216080402, 'no_speech_prob': 0.006896878592669964}, {'id': 990, 'seek': 555230, 'start': 5573.38, 'end': 5579.9800000000005, 'text': ' Now the translation itself is costly because what will happen is every time you are trying', 'tokens': [51418, 823, 264, 12853, 2564, 307, 28328, 570, 437, 486, 1051, 307, 633, 565, 291, 366, 1382, 51748], 'temperature': 0.0, 'avg_logprob': -0.1331115234188917, 'compression_ratio': 1.728643216080402, 'no_speech_prob': 0.006896878592669964}, {'id': 991, 'seek': 557998, 'start': 5579.98, 'end': 5584.9, 'text': ' to access any memory location you have to first do the address translation.', 'tokens': [50364, 281, 2105, 604, 4675, 4914, 291, 362, 281, 700, 360, 264, 2985, 12853, 13, 50610], 'temperature': 0.0, 'avg_logprob': -0.14508509149356763, 'compression_ratio': 1.711111111111111, 'no_speech_prob': 0.15147621929645538}, {'id': 992, 'seek': 557998, 'start': 5584.9, 'end': 5589.58, 'text': ' That means you have to first read something from memory because you need to at least read', 'tokens': [50610, 663, 1355, 291, 362, 281, 700, 1401, 746, 490, 4675, 570, 291, 643, 281, 412, 1935, 1401, 50844], 'temperature': 0.0, 'avg_logprob': -0.14508509149356763, 'compression_ratio': 1.711111111111111, 'no_speech_prob': 0.15147621929645538}, {'id': 993, 'seek': 557998, 'start': 5589.58, 'end': 5592.12, 'text': ' the page table itself.', 'tokens': [50844, 264, 3028, 3199, 2564, 13, 50971], 'temperature': 0.0, 'avg_logprob': -0.14508509149356763, 'compression_ratio': 1.711111111111111, 'no_speech_prob': 0.15147621929645538}, {'id': 994, 'seek': 557998, 'start': 5592.12, 'end': 5595.12, 'text': ' So it is going to be a costly activity.', 'tokens': [50971, 407, 309, 307, 516, 281, 312, 257, 28328, 5191, 13, 51121], 'temperature': 0.0, 'avg_logprob': -0.14508509149356763, 'compression_ratio': 1.711111111111111, 'no_speech_prob': 0.15147621929645538}, {'id': 995, 'seek': 557998, 'start': 5595.12, 'end': 5601.639999999999, 'text': ' Now what happens is most of the times if there is a rule 80-20, most of the time is spent', 'tokens': [51121, 823, 437, 2314, 307, 881, 295, 264, 1413, 498, 456, 307, 257, 4978, 4688, 12, 2009, 11, 881, 295, 264, 565, 307, 4418, 51447], 'temperature': 0.0, 'avg_logprob': -0.14508509149356763, 'compression_ratio': 1.711111111111111, 'no_speech_prob': 0.15147621929645538}, {'id': 996, 'seek': 557998, 'start': 5601.639999999999, 'end': 5605.5599999999995, 'text': ' in the 80% of the code because you will have loops and everything.', 'tokens': [51447, 294, 264, 4688, 4, 295, 264, 3089, 570, 291, 486, 362, 16121, 293, 1203, 13, 51643], 'temperature': 0.0, 'avg_logprob': -0.14508509149356763, 'compression_ratio': 1.711111111111111, 'no_speech_prob': 0.15147621929645538}, {'id': 997, 'seek': 560556, 'start': 5605.68, 'end': 5610.320000000001, 'text': ' So most of the addresses generated could be together or related.', 'tokens': [50370, 407, 881, 295, 264, 16862, 10833, 727, 312, 1214, 420, 4077, 13, 50602], 'temperature': 0.0, 'avg_logprob': -0.17887646638894383, 'compression_ratio': 1.7064676616915422, 'no_speech_prob': 0.2622259259223938}, {'id': 998, 'seek': 560556, 'start': 5610.320000000001, 'end': 5615.54, 'text': ' So what you will have is you will create a cache of address translation.', 'tokens': [50602, 407, 437, 291, 486, 362, 307, 291, 486, 1884, 257, 19459, 295, 2985, 12853, 13, 50863], 'temperature': 0.0, 'avg_logprob': -0.17887646638894383, 'compression_ratio': 1.7064676616915422, 'no_speech_prob': 0.2622259259223938}, {'id': 999, 'seek': 560556, 'start': 5615.54, 'end': 5621.9800000000005, 'text': ' So whenever a process, whenever an address translation happens that virtual address 5', 'tokens': [50863, 407, 5699, 257, 1399, 11, 5699, 364, 2985, 12853, 2314, 300, 6374, 2985, 1025, 51185], 'temperature': 0.0, 'avg_logprob': -0.17887646638894383, 'compression_ratio': 1.7064676616915422, 'no_speech_prob': 0.2622259259223938}, {'id': 1000, 'seek': 560556, 'start': 5621.9800000000005, 'end': 5628.080000000001, 'text': ' maps to physical address 100, you store that mapping into a cache which is called as TLB', 'tokens': [51185, 11317, 281, 4001, 2985, 2319, 11, 291, 3531, 300, 18350, 666, 257, 19459, 597, 307, 1219, 382, 40277, 33, 51490], 'temperature': 0.0, 'avg_logprob': -0.17887646638894383, 'compression_ratio': 1.7064676616915422, 'no_speech_prob': 0.2622259259223938}, {'id': 1001, 'seek': 560556, 'start': 5628.080000000001, 'end': 5630.68, 'text': ' translation look-aside buffer.', 'tokens': [51490, 12853, 574, 12, 296, 482, 21762, 13, 51620], 'temperature': 0.0, 'avg_logprob': -0.17887646638894383, 'compression_ratio': 1.7064676616915422, 'no_speech_prob': 0.2622259259223938}, {'id': 1002, 'seek': 563068, 'start': 5630.68, 'end': 5636.58, 'text': ' So what happens is every time you are going to translate you first look up whether this', 'tokens': [50364, 407, 437, 2314, 307, 633, 565, 291, 366, 516, 281, 13799, 291, 700, 574, 493, 1968, 341, 50659], 'temperature': 0.0, 'avg_logprob': -0.14225763297942748, 'compression_ratio': 1.6304347826086956, 'no_speech_prob': 0.0017258157022297382}, {'id': 1003, 'seek': 563068, 'start': 5636.58, 'end': 5641.56, 'text': ' is present in the cache and if it is present you use that information directly.', 'tokens': [50659, 307, 1974, 294, 264, 19459, 293, 498, 309, 307, 1974, 291, 764, 300, 1589, 3838, 13, 50908], 'temperature': 0.0, 'avg_logprob': -0.14225763297942748, 'compression_ratio': 1.6304347826086956, 'no_speech_prob': 0.0017258157022297382}, {'id': 1004, 'seek': 563068, 'start': 5641.56, 'end': 5647.4400000000005, 'text': ' Otherwise you go via your normal page table translation mechanisms.', 'tokens': [50908, 10328, 291, 352, 5766, 428, 2710, 3028, 3199, 12853, 15902, 13, 51202], 'temperature': 0.0, 'avg_logprob': -0.14225763297942748, 'compression_ratio': 1.6304347826086956, 'no_speech_prob': 0.0017258157022297382}, {'id': 1005, 'seek': 563068, 'start': 5647.4400000000005, 'end': 5652.18, 'text': ' Is it clear to everyone on how virtual memory works?', 'tokens': [51202, 1119, 309, 1850, 281, 1518, 322, 577, 6374, 4675, 1985, 30, 51439], 'temperature': 0.0, 'avg_logprob': -0.14225763297942748, 'compression_ratio': 1.6304347826086956, 'no_speech_prob': 0.0017258157022297382}, {'id': 1006, 'seek': 563068, 'start': 5652.18, 'end': 5658.84, 'text': ' So just to summarize virtual memory gave us a way to create illusion of entire address', 'tokens': [51439, 407, 445, 281, 20858, 6374, 4675, 2729, 505, 257, 636, 281, 1884, 18854, 295, 2302, 2985, 51772], 'temperature': 0.0, 'avg_logprob': -0.14225763297942748, 'compression_ratio': 1.6304347826086956, 'no_speech_prob': 0.0017258157022297382}, {'id': 1007, 'seek': 565884, 'start': 5658.84, 'end': 5660.900000000001, 'text': ' space being available.', 'tokens': [50364, 1901, 885, 2435, 13, 50467], 'temperature': 0.0, 'avg_logprob': -0.1555898224098095, 'compression_ratio': 1.618279569892473, 'no_speech_prob': 0.07570365071296692}, {'id': 1008, 'seek': 565884, 'start': 5660.900000000001, 'end': 5666.02, 'text': ' It allows us to efficiently utilize the physical resources because we keep only things which', 'tokens': [50467, 467, 4045, 505, 281, 19621, 16117, 264, 4001, 3593, 570, 321, 1066, 787, 721, 597, 50723], 'temperature': 0.0, 'avg_logprob': -0.1555898224098095, 'compression_ratio': 1.618279569892473, 'no_speech_prob': 0.07570365071296692}, {'id': 1009, 'seek': 565884, 'start': 5666.02, 'end': 5669.6, 'text': ' are needed in the physical RAM.', 'tokens': [50723, 366, 2978, 294, 264, 4001, 14561, 13, 50902], 'temperature': 0.0, 'avg_logprob': -0.1555898224098095, 'compression_ratio': 1.618279569892473, 'no_speech_prob': 0.07570365071296692}, {'id': 1010, 'seek': 565884, 'start': 5669.6, 'end': 5676.74, 'text': ' And it allowed us to isolate data of two processes because no one can access physical memory.', 'tokens': [50902, 400, 309, 4350, 505, 281, 25660, 1412, 295, 732, 7555, 570, 572, 472, 393, 2105, 4001, 4675, 13, 51259], 'temperature': 0.0, 'avg_logprob': -0.1555898224098095, 'compression_ratio': 1.618279569892473, 'no_speech_prob': 0.07570365071296692}, {'id': 1011, 'seek': 565884, 'start': 5676.74, 'end': 5683.12, 'text': ' There is no way for a process to access other process data.', 'tokens': [51259, 821, 307, 572, 636, 337, 257, 1399, 281, 2105, 661, 1399, 1412, 13, 51578], 'temperature': 0.0, 'avg_logprob': -0.1555898224098095, 'compression_ratio': 1.618279569892473, 'no_speech_prob': 0.07570365071296692}, {'id': 1012, 'seek': 568312, 'start': 5683.12, 'end': 5690.0, 'text': ' And the address translation itself has a cache to make it fast.', 'tokens': [50364, 400, 264, 2985, 12853, 2564, 575, 257, 19459, 281, 652, 309, 2370, 13, 50708], 'temperature': 0.0, 'avg_logprob': -0.16109983311143034, 'compression_ratio': 1.638743455497382, 'no_speech_prob': 0.25625327229499817}, {'id': 1013, 'seek': 568312, 'start': 5690.0, 'end': 5695.68, 'text': " Now quiz, so let's say we started off with one of the requirements that if two process", 'tokens': [50708, 823, 15450, 11, 370, 718, 311, 584, 321, 1409, 766, 365, 472, 295, 264, 7728, 300, 498, 732, 1399, 50992], 'temperature': 0.0, 'avg_logprob': -0.16109983311143034, 'compression_ratio': 1.638743455497382, 'no_speech_prob': 0.25625327229499817}, {'id': 1014, 'seek': 568312, 'start': 5695.68, 'end': 5700.12, 'text': ' do want to share data, how will you do that?', 'tokens': [50992, 360, 528, 281, 2073, 1412, 11, 577, 486, 291, 360, 300, 30, 51214], 'temperature': 0.0, 'avg_logprob': -0.16109983311143034, 'compression_ratio': 1.638743455497382, 'no_speech_prob': 0.25625327229499817}, {'id': 1015, 'seek': 568312, 'start': 5700.12, 'end': 5701.28, 'text': ' What can you do?', 'tokens': [51214, 708, 393, 291, 360, 30, 51272], 'temperature': 0.0, 'avg_logprob': -0.16109983311143034, 'compression_ratio': 1.638743455497382, 'no_speech_prob': 0.25625327229499817}, {'id': 1016, 'seek': 568312, 'start': 5701.28, 'end': 5708.9, 'text': " So let's say there is some data which two processes want to share a physical copy.", 'tokens': [51272, 407, 718, 311, 584, 456, 307, 512, 1412, 597, 732, 7555, 528, 281, 2073, 257, 4001, 5055, 13, 51653], 'temperature': 0.0, 'avg_logprob': -0.16109983311143034, 'compression_ratio': 1.638743455497382, 'no_speech_prob': 0.25625327229499817}, {'id': 1017, 'seek': 568312, 'start': 5708.9, 'end': 5709.9, 'text': ' What will you do?', 'tokens': [51653, 708, 486, 291, 360, 30, 51703], 'temperature': 0.0, 'avg_logprob': -0.16109983311143034, 'compression_ratio': 1.638743455497382, 'no_speech_prob': 0.25625327229499817}, {'id': 1018, 'seek': 570990, 'start': 5709.9, 'end': 5715.0599999999995, 'text': ' How will you configure the virtual memory page tables so that both of them share the', 'tokens': [50364, 1012, 486, 291, 22162, 264, 6374, 4675, 3028, 8020, 370, 300, 1293, 295, 552, 2073, 264, 50622], 'temperature': 0.0, 'avg_logprob': -0.22983805338541666, 'compression_ratio': 1.5297297297297296, 'no_speech_prob': 0.2678729295730591}, {'id': 1019, 'seek': 570990, 'start': 5715.0599999999995, 'end': 5721.0599999999995, 'text': ' same data?', 'tokens': [50622, 912, 1412, 30, 50922], 'temperature': 0.0, 'avg_logprob': -0.22983805338541666, 'compression_ratio': 1.5297297297297296, 'no_speech_prob': 0.2678729295730591}, {'id': 1020, 'seek': 570990, 'start': 5721.0599999999995, 'end': 5729.62, 'text': " So what he is saying is, so let's say virtual address 100 to 200 are reserved for that data.", 'tokens': [50922, 407, 437, 415, 307, 1566, 307, 11, 370, 718, 311, 584, 6374, 2985, 2319, 281, 2331, 366, 24819, 337, 300, 1412, 13, 51350], 'temperature': 0.0, 'avg_logprob': -0.22983805338541666, 'compression_ratio': 1.5297297297297296, 'no_speech_prob': 0.2678729295730591}, {'id': 1021, 'seek': 570990, 'start': 5729.62, 'end': 5731.839999999999, 'text': ' But does that really matter?', 'tokens': [51350, 583, 775, 300, 534, 1871, 30, 51461], 'temperature': 0.0, 'avg_logprob': -0.22983805338541666, 'compression_ratio': 1.5297297297297296, 'no_speech_prob': 0.2678729295730591}, {'id': 1022, 'seek': 570990, 'start': 5731.839999999999, 'end': 5735.62, 'text': ' Because virtual addresses will be translated to physical address.', 'tokens': [51461, 1436, 6374, 16862, 486, 312, 16805, 281, 4001, 2985, 13, 51650], 'temperature': 0.0, 'avg_logprob': -0.22983805338541666, 'compression_ratio': 1.5297297297297296, 'no_speech_prob': 0.2678729295730591}, {'id': 1023, 'seek': 573562, 'start': 5735.62, 'end': 5749.84, 'text': ' Correct.', 'tokens': [50364, 12753, 13, 51075], 'temperature': 0.0, 'avg_logprob': -0.21708373228708902, 'compression_ratio': 1.544, 'no_speech_prob': 0.06935315579175949}, {'id': 1024, 'seek': 573562, 'start': 5749.84, 'end': 5754.16, 'text': ' So what you will instead do is, see virtual address does not matter whether virtual address', 'tokens': [51075, 407, 437, 291, 486, 2602, 360, 307, 11, 536, 6374, 2985, 775, 406, 1871, 1968, 6374, 2985, 51291], 'temperature': 0.0, 'avg_logprob': -0.21708373228708902, 'compression_ratio': 1.544, 'no_speech_prob': 0.06935315579175949}, {'id': 1025, 'seek': 573562, 'start': 5754.16, 'end': 5756.5599999999995, 'text': ' is same or different does not matter.', 'tokens': [51291, 307, 912, 420, 819, 775, 406, 1871, 13, 51411], 'temperature': 0.0, 'avg_logprob': -0.21708373228708902, 'compression_ratio': 1.544, 'no_speech_prob': 0.06935315579175949}, {'id': 1026, 'seek': 573562, 'start': 5756.5599999999995, 'end': 5759.98, 'text': ' What matters is the physical address needs to be same.', 'tokens': [51411, 708, 7001, 307, 264, 4001, 2985, 2203, 281, 312, 912, 13, 51582], 'temperature': 0.0, 'avg_logprob': -0.21708373228708902, 'compression_ratio': 1.544, 'no_speech_prob': 0.06935315579175949}, {'id': 1027, 'seek': 575998, 'start': 5759.98, 'end': 5768.04, 'text': " So you can say process P1's address 100 maps to physical memory location 5 and process", 'tokens': [50364, 407, 291, 393, 584, 1399, 430, 16, 311, 2985, 2319, 11317, 281, 4001, 4675, 4914, 1025, 293, 1399, 50767], 'temperature': 0.0, 'avg_logprob': -0.17832447761713072, 'compression_ratio': 1.6544502617801047, 'no_speech_prob': 0.2624010443687439}, {'id': 1028, 'seek': 575998, 'start': 5768.04, 'end': 5774.16, 'text': " P2's location 10,000 maps to location 5.", 'tokens': [50767, 430, 17, 311, 4914, 1266, 11, 1360, 11317, 281, 4914, 1025, 13, 51073], 'temperature': 0.0, 'avg_logprob': -0.17832447761713072, 'compression_ratio': 1.6544502617801047, 'no_speech_prob': 0.2624010443687439}, {'id': 1029, 'seek': 575998, 'start': 5774.16, 'end': 5776.7, 'text': ' And this is how you can share say kernel data.', 'tokens': [51073, 400, 341, 307, 577, 291, 393, 2073, 584, 28256, 1412, 13, 51200], 'temperature': 0.0, 'avg_logprob': -0.17832447761713072, 'compression_ratio': 1.6544502617801047, 'no_speech_prob': 0.2624010443687439}, {'id': 1030, 'seek': 575998, 'start': 5776.7, 'end': 5779.08, 'text': ' See kernel, there is only one kernel.', 'tokens': [51200, 3008, 28256, 11, 456, 307, 787, 472, 28256, 13, 51319], 'temperature': 0.0, 'avg_logprob': -0.17832447761713072, 'compression_ratio': 1.6544502617801047, 'no_speech_prob': 0.2624010443687439}, {'id': 1031, 'seek': 575998, 'start': 5779.08, 'end': 5780.82, 'text': ' There are no multiple kernels.', 'tokens': [51319, 821, 366, 572, 3866, 23434, 1625, 13, 51406], 'temperature': 0.0, 'avg_logprob': -0.17832447761713072, 'compression_ratio': 1.6544502617801047, 'no_speech_prob': 0.2624010443687439}, {'id': 1032, 'seek': 575998, 'start': 5780.82, 'end': 5786.339999999999, 'text': " Now you don't want to create duplicate data of kernel for every process.", 'tokens': [51406, 823, 291, 500, 380, 528, 281, 1884, 23976, 1412, 295, 28256, 337, 633, 1399, 13, 51682], 'temperature': 0.0, 'avg_logprob': -0.17832447761713072, 'compression_ratio': 1.6544502617801047, 'no_speech_prob': 0.2624010443687439}, {'id': 1033, 'seek': 578634, 'start': 5786.34, 'end': 5793.02, 'text': " So what you will do is every process page table will have that kernel's data lives", 'tokens': [50364, 407, 437, 291, 486, 360, 307, 633, 1399, 3028, 3199, 486, 362, 300, 28256, 311, 1412, 2909, 50698], 'temperature': 0.0, 'avg_logprob': -0.1579568968878852, 'compression_ratio': 1.6504424778761062, 'no_speech_prob': 0.08028621971607208}, {'id': 1034, 'seek': 578634, 'start': 5793.02, 'end': 5797.28, 'text': ' at this physical memory location.', 'tokens': [50698, 412, 341, 4001, 4675, 4914, 13, 50911], 'temperature': 0.0, 'avg_logprob': -0.1579568968878852, 'compression_ratio': 1.6504424778761062, 'no_speech_prob': 0.08028621971607208}, {'id': 1035, 'seek': 578634, 'start': 5797.28, 'end': 5800.16, 'text': ' And they could actually be at different virtual addresses.', 'tokens': [50911, 400, 436, 727, 767, 312, 412, 819, 6374, 16862, 13, 51055], 'temperature': 0.0, 'avg_logprob': -0.1579568968878852, 'compression_ratio': 1.6504424778761062, 'no_speech_prob': 0.08028621971607208}, {'id': 1036, 'seek': 578634, 'start': 5800.16, 'end': 5801.16, 'text': ' That does not matter.', 'tokens': [51055, 663, 775, 406, 1871, 13, 51105], 'temperature': 0.0, 'avg_logprob': -0.1579568968878852, 'compression_ratio': 1.6504424778761062, 'no_speech_prob': 0.08028621971607208}, {'id': 1037, 'seek': 578634, 'start': 5801.16, 'end': 5806.92, 'text': ' Virtual address is merely going to be translated to a physical address.', 'tokens': [51105, 23887, 2985, 307, 17003, 516, 281, 312, 16805, 281, 257, 4001, 2985, 13, 51393], 'temperature': 0.0, 'avg_logprob': -0.1579568968878852, 'compression_ratio': 1.6504424778761062, 'no_speech_prob': 0.08028621971607208}, {'id': 1038, 'seek': 578634, 'start': 5806.92, 'end': 5808.9800000000005, 'text': ' Is that clear?', 'tokens': [51393, 1119, 300, 1850, 30, 51496], 'temperature': 0.0, 'avg_logprob': -0.1579568968878852, 'compression_ratio': 1.6504424778761062, 'no_speech_prob': 0.08028621971607208}, {'id': 1039, 'seek': 578634, 'start': 5808.9800000000005, 'end': 5815.2, 'text': ' Now when we say arrays are contiguous, are they contiguous in virtual memory or are they', 'tokens': [51496, 823, 562, 321, 584, 41011, 366, 660, 30525, 11, 366, 436, 660, 30525, 294, 6374, 4675, 420, 366, 436, 51807], 'temperature': 0.0, 'avg_logprob': -0.1579568968878852, 'compression_ratio': 1.6504424778761062, 'no_speech_prob': 0.08028621971607208}, {'id': 1040, 'seek': 581520, 'start': 5815.74, 'end': 5825.0199999999995, 'text': ' contiguous in physical memory or both of them?', 'tokens': [50391, 660, 30525, 294, 4001, 4675, 420, 1293, 295, 552, 30, 50855], 'temperature': 0.0, 'avg_logprob': -0.26022574305534363, 'compression_ratio': 1.3736263736263736, 'no_speech_prob': 0.7752784490585327}, {'id': 1041, 'seek': 581520, 'start': 5825.0199999999995, 'end': 5838.22, 'text': ' How many of you think they are contiguous in both physical and virtual memory?', 'tokens': [50855, 1012, 867, 295, 291, 519, 436, 366, 660, 30525, 294, 1293, 4001, 293, 6374, 4675, 30, 51515], 'temperature': 0.0, 'avg_logprob': -0.26022574305534363, 'compression_ratio': 1.3736263736263736, 'no_speech_prob': 0.7752784490585327}, {'id': 1042, 'seek': 583822, 'start': 5838.22, 'end': 5850.900000000001, 'text': ' How many of you think they are contiguous only in physical memory?', 'tokens': [50364, 1012, 867, 295, 291, 519, 436, 366, 660, 30525, 787, 294, 4001, 4675, 30, 50998], 'temperature': 0.0, 'avg_logprob': -0.24027041999661192, 'compression_ratio': 1.6055045871559632, 'no_speech_prob': 0.06944550573825836}, {'id': 1043, 'seek': 583822, 'start': 5850.900000000001, 'end': 5861.02, 'text': ' How many of you think they are contiguous only in virtual memory?', 'tokens': [50998, 1012, 867, 295, 291, 519, 436, 366, 660, 30525, 787, 294, 6374, 4675, 30, 51504], 'temperature': 0.0, 'avg_logprob': -0.24027041999661192, 'compression_ratio': 1.6055045871559632, 'no_speech_prob': 0.06944550573825836}, {'id': 1044, 'seek': 583822, 'start': 5861.02, 'end': 5865.34, 'text': " Let's look at, so let's try to build this.", 'tokens': [51504, 961, 311, 574, 412, 11, 370, 718, 311, 853, 281, 1322, 341, 13, 51720], 'temperature': 0.0, 'avg_logprob': -0.24027041999661192, 'compression_ratio': 1.6055045871559632, 'no_speech_prob': 0.06944550573825836}, {'id': 1045, 'seek': 586534, 'start': 5865.34, 'end': 5871.12, 'text': " So let's hypothetically assume they were supposed to be contiguous in physical memory.", 'tokens': [50364, 407, 718, 311, 24371, 22652, 6552, 436, 645, 3442, 281, 312, 660, 30525, 294, 4001, 4675, 13, 50653], 'temperature': 0.0, 'avg_logprob': -0.10716827099139874, 'compression_ratio': 1.8156682027649769, 'no_speech_prob': 0.17753958702087402}, {'id': 1046, 'seek': 586534, 'start': 5871.12, 'end': 5876.1, 'text': ' Then what happens is if you have a very large array, that means you need that much contiguous', 'tokens': [50653, 1396, 437, 2314, 307, 498, 291, 362, 257, 588, 2416, 10225, 11, 300, 1355, 291, 643, 300, 709, 660, 30525, 50902], 'temperature': 0.0, 'avg_logprob': -0.10716827099139874, 'compression_ratio': 1.8156682027649769, 'no_speech_prob': 0.17753958702087402}, {'id': 1047, 'seek': 586534, 'start': 5876.1, 'end': 5878.3, 'text': ' space in physical memory.', 'tokens': [50902, 1901, 294, 4001, 4675, 13, 51012], 'temperature': 0.0, 'avg_logprob': -0.10716827099139874, 'compression_ratio': 1.8156682027649769, 'no_speech_prob': 0.17753958702087402}, {'id': 1048, 'seek': 586534, 'start': 5878.3, 'end': 5883.400000000001, 'text': ' So every time you need to bring that array, you need to have that much contiguous space', 'tokens': [51012, 407, 633, 565, 291, 643, 281, 1565, 300, 10225, 11, 291, 643, 281, 362, 300, 709, 660, 30525, 1901, 51267], 'temperature': 0.0, 'avg_logprob': -0.10716827099139874, 'compression_ratio': 1.8156682027649769, 'no_speech_prob': 0.17753958702087402}, {'id': 1049, 'seek': 586534, 'start': 5883.400000000001, 'end': 5884.76, 'text': ' in RAM.', 'tokens': [51267, 294, 14561, 13, 51335], 'temperature': 0.0, 'avg_logprob': -0.10716827099139874, 'compression_ratio': 1.8156682027649769, 'no_speech_prob': 0.17753958702087402}, {'id': 1050, 'seek': 586534, 'start': 5884.76, 'end': 5891.3, 'text': ' Now that fundamentally goes against the principle of efficiently utilizing physical memory.', 'tokens': [51335, 823, 300, 17879, 1709, 1970, 264, 8665, 295, 19621, 26775, 4001, 4675, 13, 51662], 'temperature': 0.0, 'avg_logprob': -0.10716827099139874, 'compression_ratio': 1.8156682027649769, 'no_speech_prob': 0.17753958702087402}, {'id': 1051, 'seek': 589130, 'start': 5891.3, 'end': 5900.320000000001, 'text': " Because you don't want to create large contiguous chunks because then that forms a constraint.", 'tokens': [50364, 1436, 291, 500, 380, 528, 281, 1884, 2416, 660, 30525, 24004, 570, 550, 300, 6422, 257, 25534, 13, 50815], 'temperature': 0.0, 'avg_logprob': -0.18698482748902875, 'compression_ratio': 1.7091836734693877, 'no_speech_prob': 0.14019113779067993}, {'id': 1052, 'seek': 589130, 'start': 5900.320000000001, 'end': 5904.5, 'text': ' Because see whenever you have to look for free memory in the physical space, you have', 'tokens': [50815, 1436, 536, 5699, 291, 362, 281, 574, 337, 1737, 4675, 294, 264, 4001, 1901, 11, 291, 362, 51024], 'temperature': 0.0, 'avg_logprob': -0.18698482748902875, 'compression_ratio': 1.7091836734693877, 'no_speech_prob': 0.14019113779067993}, {'id': 1053, 'seek': 589130, 'start': 5904.5, 'end': 5907.74, 'text': ' to find a contiguous chunk of that much.', 'tokens': [51024, 281, 915, 257, 660, 30525, 16635, 295, 300, 709, 13, 51186], 'temperature': 0.0, 'avg_logprob': -0.18698482748902875, 'compression_ratio': 1.7091836734693877, 'no_speech_prob': 0.14019113779067993}, {'id': 1054, 'seek': 589130, 'start': 5907.74, 'end': 5915.2, 'text': " So that's design wise doesn't sound really promising that we don't want them to be contiguous", 'tokens': [51186, 407, 300, 311, 1715, 10829, 1177, 380, 1626, 534, 20257, 300, 321, 500, 380, 528, 552, 281, 312, 660, 30525, 51559], 'temperature': 0.0, 'avg_logprob': -0.18698482748902875, 'compression_ratio': 1.7091836734693877, 'no_speech_prob': 0.14019113779067993}, {'id': 1055, 'seek': 589130, 'start': 5915.2, 'end': 5918.06, 'text': ' in physical memory.', 'tokens': [51559, 294, 4001, 4675, 13, 51702], 'temperature': 0.0, 'avg_logprob': -0.18698482748902875, 'compression_ratio': 1.7091836734693877, 'no_speech_prob': 0.14019113779067993}, {'id': 1056, 'seek': 591806, 'start': 5918.06, 'end': 5923.580000000001, 'text': ' Can they be non-contiguous in virtual memory?', 'tokens': [50364, 1664, 436, 312, 2107, 12, 9000, 30525, 294, 6374, 4675, 30, 50640], 'temperature': 0.0, 'avg_logprob': -0.1684989808480951, 'compression_ratio': 1.8176100628930818, 'no_speech_prob': 0.010002563707530499}, {'id': 1057, 'seek': 591806, 'start': 5923.580000000001, 'end': 5927.34, 'text': ' Can they be non-contiguous in virtual memory?', 'tokens': [50640, 1664, 436, 312, 2107, 12, 9000, 30525, 294, 6374, 4675, 30, 50828], 'temperature': 0.0, 'avg_logprob': -0.1684989808480951, 'compression_ratio': 1.8176100628930818, 'no_speech_prob': 0.010002563707530499}, {'id': 1058, 'seek': 591806, 'start': 5927.34, 'end': 5930.34, 'text': ' Why not?', 'tokens': [50828, 1545, 406, 30, 50978], 'temperature': 0.0, 'avg_logprob': -0.1684989808480951, 'compression_ratio': 1.8176100628930818, 'no_speech_prob': 0.010002563707530499}, {'id': 1059, 'seek': 591806, 'start': 5930.34, 'end': 5932.5, 'text': ' Correct.', 'tokens': [50978, 12753, 13, 51086], 'temperature': 0.0, 'avg_logprob': -0.1684989808480951, 'compression_ratio': 1.8176100628930818, 'no_speech_prob': 0.010002563707530499}, {'id': 1060, 'seek': 591806, 'start': 5932.5, 'end': 5938.22, 'text': ' So the entire indexing operation or pointer plus plus operation which you do relies on', 'tokens': [51086, 407, 264, 2302, 8186, 278, 6916, 420, 23918, 1804, 1804, 6916, 597, 291, 360, 30910, 322, 51372], 'temperature': 0.0, 'avg_logprob': -0.1684989808480951, 'compression_ratio': 1.8176100628930818, 'no_speech_prob': 0.010002563707530499}, {'id': 1061, 'seek': 591806, 'start': 5938.22, 'end': 5941.06, 'text': ' the fact that addresses are contiguous.', 'tokens': [51372, 264, 1186, 300, 16862, 366, 660, 30525, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.1684989808480951, 'compression_ratio': 1.8176100628930818, 'no_speech_prob': 0.010002563707530499}, {'id': 1062, 'seek': 591806, 'start': 5941.06, 'end': 5944.400000000001, 'text': ' So it has to be contiguous in virtual address space.', 'tokens': [51514, 407, 309, 575, 281, 312, 660, 30525, 294, 6374, 2985, 1901, 13, 51681], 'temperature': 0.0, 'avg_logprob': -0.1684989808480951, 'compression_ratio': 1.8176100628930818, 'no_speech_prob': 0.010002563707530499}, {'id': 1063, 'seek': 594440, 'start': 5944.4, 'end': 5952.98, 'text': " So every time you have a big array, it's not that you are contiguously allocating that", 'tokens': [50364, 407, 633, 565, 291, 362, 257, 955, 10225, 11, 309, 311, 406, 300, 291, 366, 660, 16397, 5098, 12660, 990, 300, 50793], 'temperature': 0.0, 'avg_logprob': -0.35208698419424206, 'compression_ratio': 1.5862068965517242, 'no_speech_prob': 0.22216641902923584}, {'id': 1064, 'seek': 594440, 'start': 5952.98, 'end': 5960.48, 'text': ' much physical memory, you are contiguously allocating that much virtual memory.', 'tokens': [50793, 709, 4001, 4675, 11, 291, 366, 660, 16397, 5098, 12660, 990, 300, 709, 6374, 4675, 13, 51168], 'temperature': 0.0, 'avg_logprob': -0.35208698419424206, 'compression_ratio': 1.5862068965517242, 'no_speech_prob': 0.22216641902923584}, {'id': 1065, 'seek': 594440, 'start': 5960.48, 'end': 5963.48, 'text': ' And yes.', 'tokens': [51168, 400, 2086, 13, 51318], 'temperature': 0.0, 'avg_logprob': -0.35208698419424206, 'compression_ratio': 1.5862068965517242, 'no_speech_prob': 0.22216641902923584}, {'id': 1066, 'seek': 594440, 'start': 5963.48, 'end': 5968.759999999999, 'text': ' Correct.', 'tokens': [51318, 12753, 13, 51582], 'temperature': 0.0, 'avg_logprob': -0.35208698419424206, 'compression_ratio': 1.5862068965517242, 'no_speech_prob': 0.22216641902923584}, {'id': 1067, 'seek': 596876, 'start': 5969.76, 'end': 5978.24, 'text': ' So for example, if your array fits within one page like 4kb, then it will be contiguous.', 'tokens': [50414, 407, 337, 1365, 11, 498, 428, 10225, 9001, 1951, 472, 3028, 411, 1017, 74, 65, 11, 550, 309, 486, 312, 660, 30525, 13, 50838], 'temperature': 0.0, 'avg_logprob': -0.14685726165771484, 'compression_ratio': 1.6540284360189574, 'no_speech_prob': 0.442739874124527}, {'id': 1068, 'seek': 596876, 'start': 5978.24, 'end': 5980.360000000001, 'text': ' Now how will you do the mapping?', 'tokens': [50838, 823, 577, 486, 291, 360, 264, 18350, 30, 50944], 'temperature': 0.0, 'avg_logprob': -0.14685726165771484, 'compression_ratio': 1.6540284360189574, 'no_speech_prob': 0.442739874124527}, {'id': 1069, 'seek': 596876, 'start': 5980.360000000001, 'end': 5987.14, 'text': ' You just need to say that address 0 to address 4k maps to this physical location.', 'tokens': [50944, 509, 445, 643, 281, 584, 300, 2985, 1958, 281, 2985, 1017, 74, 11317, 281, 341, 4001, 4914, 13, 51283], 'temperature': 0.0, 'avg_logprob': -0.14685726165771484, 'compression_ratio': 1.6540284360189574, 'no_speech_prob': 0.442739874124527}, {'id': 1070, 'seek': 596876, 'start': 5987.14, 'end': 5991.74, 'text': ' Address 4k plus 1 plus something maps to some other physical location.', 'tokens': [51283, 5349, 735, 1017, 74, 1804, 502, 1804, 746, 11317, 281, 512, 661, 4001, 4914, 13, 51513], 'temperature': 0.0, 'avg_logprob': -0.14685726165771484, 'compression_ratio': 1.6540284360189574, 'no_speech_prob': 0.442739874124527}, {'id': 1071, 'seek': 596876, 'start': 5991.74, 'end': 5998.5, 'text': ' So the addresses in the physical space can be non-contiguous for an array.', 'tokens': [51513, 407, 264, 16862, 294, 264, 4001, 1901, 393, 312, 2107, 12, 9000, 30525, 337, 364, 10225, 13, 51851], 'temperature': 0.0, 'avg_logprob': -0.14685726165771484, 'compression_ratio': 1.6540284360189574, 'no_speech_prob': 0.442739874124527}, {'id': 1072, 'seek': 599850, 'start': 5998.5, 'end': 6001.88, 'text': ' Now this is where the interesting part comes in.', 'tokens': [50364, 823, 341, 307, 689, 264, 1880, 644, 1487, 294, 13, 50533], 'temperature': 0.0, 'avg_logprob': -0.13036001790868174, 'compression_ratio': 1.6120689655172413, 'no_speech_prob': 0.005055673886090517}, {'id': 1073, 'seek': 599850, 'start': 6001.88, 'end': 6005.7, 'text': ' Does cache work on physical address or virtual address?', 'tokens': [50533, 4402, 19459, 589, 322, 4001, 2985, 420, 6374, 2985, 30, 50724], 'temperature': 0.0, 'avg_logprob': -0.13036001790868174, 'compression_ratio': 1.6120689655172413, 'no_speech_prob': 0.005055673886090517}, {'id': 1074, 'seek': 599850, 'start': 6005.7, 'end': 6011.38, 'text': ' So when we say there is L1 cache, you must have learned L1 cache, L2 cache and so on.', 'tokens': [50724, 407, 562, 321, 584, 456, 307, 441, 16, 19459, 11, 291, 1633, 362, 3264, 441, 16, 19459, 11, 441, 17, 19459, 293, 370, 322, 13, 51008], 'temperature': 0.0, 'avg_logprob': -0.13036001790868174, 'compression_ratio': 1.6120689655172413, 'no_speech_prob': 0.005055673886090517}, {'id': 1075, 'seek': 599850, 'start': 6011.38, 'end': 6014.06, 'text': ' So what is the principle of cache?', 'tokens': [51008, 407, 437, 307, 264, 8665, 295, 19459, 30, 51142], 'temperature': 0.0, 'avg_logprob': -0.13036001790868174, 'compression_ratio': 1.6120689655172413, 'no_speech_prob': 0.005055673886090517}, {'id': 1076, 'seek': 599850, 'start': 6014.06, 'end': 6020.1, 'text': ' That when I fetch something, I will fetch data contiguous to it because it might be', 'tokens': [51142, 663, 562, 286, 23673, 746, 11, 286, 486, 23673, 1412, 660, 30525, 281, 309, 570, 309, 1062, 312, 51444], 'temperature': 0.0, 'avg_logprob': -0.13036001790868174, 'compression_ratio': 1.6120689655172413, 'no_speech_prob': 0.005055673886090517}, {'id': 1077, 'seek': 599850, 'start': 6020.1, 'end': 6021.46, 'text': ' accessed.', 'tokens': [51444, 34211, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.13036001790868174, 'compression_ratio': 1.6120689655172413, 'no_speech_prob': 0.005055673886090517}, {'id': 1078, 'seek': 599850, 'start': 6021.46, 'end': 6024.9, 'text': " So that's the spatial locality principle of the cache.", 'tokens': [51512, 407, 300, 311, 264, 23598, 1628, 1860, 8665, 295, 264, 19459, 13, 51684], 'temperature': 0.0, 'avg_logprob': -0.13036001790868174, 'compression_ratio': 1.6120689655172413, 'no_speech_prob': 0.005055673886090517}, {'id': 1079, 'seek': 602490, 'start': 6024.9, 'end': 6030.179999999999, 'text': " So when I'm talking about spatial locality, am I talking about physical memory or am I", 'tokens': [50364, 407, 562, 286, 478, 1417, 466, 23598, 1628, 1860, 11, 669, 286, 1417, 466, 4001, 4675, 420, 669, 286, 50628], 'temperature': 0.0, 'avg_logprob': -0.1738123893737793, 'compression_ratio': 1.7211538461538463, 'no_speech_prob': 0.03989957273006439}, {'id': 1080, 'seek': 602490, 'start': 6030.179999999999, 'end': 6034.379999999999, 'text': ' talking about virtual memory?', 'tokens': [50628, 1417, 466, 6374, 4675, 30, 50838], 'temperature': 0.0, 'avg_logprob': -0.1738123893737793, 'compression_ratio': 1.7211538461538463, 'no_speech_prob': 0.03989957273006439}, {'id': 1081, 'seek': 602490, 'start': 6034.379999999999, 'end': 6037.86, 'text': ' How many of you think virtual?', 'tokens': [50838, 1012, 867, 295, 291, 519, 6374, 30, 51012], 'temperature': 0.0, 'avg_logprob': -0.1738123893737793, 'compression_ratio': 1.7211538461538463, 'no_speech_prob': 0.03989957273006439}, {'id': 1082, 'seek': 602490, 'start': 6037.86, 'end': 6044.139999999999, 'text': ' How many of you think physical?', 'tokens': [51012, 1012, 867, 295, 291, 519, 4001, 30, 51326], 'temperature': 0.0, 'avg_logprob': -0.1738123893737793, 'compression_ratio': 1.7211538461538463, 'no_speech_prob': 0.03989957273006439}, {'id': 1083, 'seek': 604414, 'start': 6044.14, 'end': 6048.14, 'text': ' Can you debate with each other and come up with a conclusion?', 'tokens': [50414, 1664, 291, 7958, 365, 1184, 661, 293, 808, 493, 365, 257, 10063, 30, 50564], 'temperature': 0.0, 'avg_logprob': -0.5424773097038269, 'compression_ratio': 0.9682539682539683, 'no_speech_prob': 0.9704580307006836}, {'id': 1084, 'seek': 607414, 'start': 6074.14, 'end': 6079.14, 'text': ' So that might or might not actually be the legal thing.', 'tokens': [50364, 407, 300, 1062, 420, 1062, 406, 767, 312, 264, 5089, 551, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.7840171701767865, 'compression_ratio': 1.603658536585366, 'no_speech_prob': 0.9040775895118713}, {'id': 1085, 'seek': 607414, 'start': 6079.14, 'end': 6084.14, 'text': ' Now with that, your data graph is the base from you.', 'tokens': [50614, 823, 365, 300, 11, 428, 1412, 4295, 307, 264, 3096, 490, 291, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.7840171701767865, 'compression_ratio': 1.603658536585366, 'no_speech_prob': 0.9040775895118713}, {'id': 1086, 'seek': 607414, 'start': 6084.14, 'end': 6087.14, 'text': ' Otherwise, it is not the physical memory address.', 'tokens': [50864, 10328, 11, 309, 307, 406, 264, 4001, 4675, 2985, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.7840171701767865, 'compression_ratio': 1.603658536585366, 'no_speech_prob': 0.9040775895118713}, {'id': 1087, 'seek': 607414, 'start': 6087.14, 'end': 6101.14, 'text': ' So I think physically, your physical access is putting a physical address on the data', 'tokens': [51014, 407, 286, 519, 9762, 11, 428, 4001, 2105, 307, 3372, 257, 4001, 2985, 322, 264, 1412, 51714], 'temperature': 0.0, 'avg_logprob': -0.7840171701767865, 'compression_ratio': 1.603658536585366, 'no_speech_prob': 0.9040775895118713}, {'id': 1088, 'seek': 607414, 'start': 6101.14, 'end': 6102.14, 'text': ' and fetching data.', 'tokens': [51714, 293, 23673, 278, 1412, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.7840171701767865, 'compression_ratio': 1.603658536585366, 'no_speech_prob': 0.9040775895118713}, {'id': 1089, 'seek': 610214, 'start': 6102.14, 'end': 6110.14, 'text': ' So I think it is not just bringing that data but some more data along with it.', 'tokens': [50364, 407, 286, 519, 309, 307, 406, 445, 5062, 300, 1412, 457, 512, 544, 1412, 2051, 365, 309, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.3269352632410386, 'compression_ratio': 1.471698113207547, 'no_speech_prob': 0.07101500034332275}, {'id': 1090, 'seek': 610214, 'start': 6110.14, 'end': 6112.14, 'text': ' So I think it is physical in that sense.', 'tokens': [50764, 407, 286, 519, 309, 307, 4001, 294, 300, 2020, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.3269352632410386, 'compression_ratio': 1.471698113207547, 'no_speech_prob': 0.07101500034332275}, {'id': 1091, 'seek': 610214, 'start': 6112.14, 'end': 6113.14, 'text': ' OK.', 'tokens': [50864, 2264, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.3269352632410386, 'compression_ratio': 1.471698113207547, 'no_speech_prob': 0.07101500034332275}, {'id': 1092, 'seek': 610214, 'start': 6113.14, 'end': 6115.14, 'text': ' You have counterpoint to that.', 'tokens': [50914, 509, 362, 5682, 6053, 281, 300, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.3269352632410386, 'compression_ratio': 1.471698113207547, 'no_speech_prob': 0.07101500034332275}, {'id': 1093, 'seek': 610214, 'start': 6115.14, 'end': 6121.14, 'text': ' So if I have to hardware the cache, you can change what would be a data object.', 'tokens': [51014, 407, 498, 286, 362, 281, 8837, 264, 19459, 11, 291, 393, 1319, 437, 576, 312, 257, 1412, 2657, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.3269352632410386, 'compression_ratio': 1.471698113207547, 'no_speech_prob': 0.07101500034332275}, {'id': 1094, 'seek': 612114, 'start': 6121.14, 'end': 6126.14, 'text': ' OK.', 'tokens': [50364, 2264, 13, 50614], 'temperature': 0.4, 'avg_logprob': -0.37534790654336253, 'compression_ratio': 0.9875, 'no_speech_prob': 0.25690802931785583}, {'id': 1095, 'seek': 612114, 'start': 6126.14, 'end': 6129.14, 'text': ' Why?', 'tokens': [50614, 1545, 30, 50764], 'temperature': 0.4, 'avg_logprob': -0.37534790654336253, 'compression_ratio': 0.9875, 'no_speech_prob': 0.25690802931785583}, {'id': 1096, 'seek': 612114, 'start': 6129.14, 'end': 6140.14, 'text': " That's an interesting point.", 'tokens': [50764, 663, 311, 364, 1880, 935, 13, 51314], 'temperature': 0.4, 'avg_logprob': -0.37534790654336253, 'compression_ratio': 0.9875, 'no_speech_prob': 0.25690802931785583}, {'id': 1097, 'seek': 612114, 'start': 6140.14, 'end': 6144.14, 'text': ' Can you say why you want TLB after cache?', 'tokens': [51314, 1664, 291, 584, 983, 291, 528, 40277, 33, 934, 19459, 30, 51514], 'temperature': 0.4, 'avg_logprob': -0.37534790654336253, 'compression_ratio': 0.9875, 'no_speech_prob': 0.25690802931785583}, {'id': 1098, 'seek': 614414, 'start': 6144.14, 'end': 6167.14, 'text': ' Any other points?', 'tokens': [50364, 2639, 661, 2793, 30, 51514], 'temperature': 0.0, 'avg_logprob': -0.18205868403116862, 'compression_ratio': 1.0476190476190477, 'no_speech_prob': 0.03666654974222183}, {'id': 1099, 'seek': 614414, 'start': 6167.14, 'end': 6169.14, 'text': " Let's try to play both ways.", 'tokens': [51514, 961, 311, 853, 281, 862, 1293, 2098, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.18205868403116862, 'compression_ratio': 1.0476190476190477, 'no_speech_prob': 0.03666654974222183}, {'id': 1100, 'seek': 614414, 'start': 6169.14, 'end': 6171.14, 'text': " So we'll derive what is the right answer.", 'tokens': [51614, 407, 321, 603, 28446, 437, 307, 264, 558, 1867, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.18205868403116862, 'compression_ratio': 1.0476190476190477, 'no_speech_prob': 0.03666654974222183}, {'id': 1101, 'seek': 617114, 'start': 6171.14, 'end': 6174.14, 'text': " So let's say it works on physical memory.", 'tokens': [50364, 407, 718, 311, 584, 309, 1985, 322, 4001, 4675, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.09623069348542587, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.43677279353141785}, {'id': 1102, 'seek': 617114, 'start': 6174.14, 'end': 6175.14, 'text': ' OK.', 'tokens': [50514, 2264, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.09623069348542587, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.43677279353141785}, {'id': 1103, 'seek': 617114, 'start': 6175.14, 'end': 6177.14, 'text': " Let's go with their solution.", 'tokens': [50564, 961, 311, 352, 365, 641, 3827, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.09623069348542587, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.43677279353141785}, {'id': 1104, 'seek': 617114, 'start': 6177.14, 'end': 6185.14, 'text': ' So what we are trying to say is whenever a memory access happens, first we will do the address translation.', 'tokens': [50664, 407, 437, 321, 366, 1382, 281, 584, 307, 5699, 257, 4675, 2105, 2314, 11, 700, 321, 486, 360, 264, 2985, 12853, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.09623069348542587, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.43677279353141785}, {'id': 1105, 'seek': 617114, 'start': 6185.14, 'end': 6186.14, 'text': ' Right?', 'tokens': [51064, 1779, 30, 51114], 'temperature': 0.0, 'avg_logprob': -0.09623069348542587, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.43677279353141785}, {'id': 1106, 'seek': 617114, 'start': 6186.14, 'end': 6192.14, 'text': ' Because for cache to work at physical address, first the address translation must happen.', 'tokens': [51114, 1436, 337, 19459, 281, 589, 412, 4001, 2985, 11, 700, 264, 2985, 12853, 1633, 1051, 13, 51414], 'temperature': 0.0, 'avg_logprob': -0.09623069348542587, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.43677279353141785}, {'id': 1107, 'seek': 617114, 'start': 6192.14, 'end': 6193.14, 'text': ' Right?', 'tokens': [51414, 1779, 30, 51464], 'temperature': 0.0, 'avg_logprob': -0.09623069348542587, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.43677279353141785}, {'id': 1108, 'seek': 617114, 'start': 6193.14, 'end': 6197.14, 'text': ' So you must be able to translate virtual address to physical address.', 'tokens': [51464, 407, 291, 1633, 312, 1075, 281, 13799, 6374, 2985, 281, 4001, 2985, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.09623069348542587, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.43677279353141785}, {'id': 1109, 'seek': 619714, 'start': 6197.14, 'end': 6202.14, 'text': ' And then cache will look whether that physical addresses data is present in the cache or not.', 'tokens': [50364, 400, 550, 19459, 486, 574, 1968, 300, 4001, 16862, 1412, 307, 1974, 294, 264, 19459, 420, 406, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.09448094712090246, 'compression_ratio': 1.7264150943396226, 'no_speech_prob': 0.37671101093292236}, {'id': 1110, 'seek': 619714, 'start': 6202.14, 'end': 6203.14, 'text': ' Right?', 'tokens': [50614, 1779, 30, 50664], 'temperature': 0.0, 'avg_logprob': -0.09448094712090246, 'compression_ratio': 1.7264150943396226, 'no_speech_prob': 0.37671101093292236}, {'id': 1111, 'seek': 619714, 'start': 6203.14, 'end': 6209.14, 'text': ' And then if it is present, it will give you that.', 'tokens': [50664, 400, 550, 498, 309, 307, 1974, 11, 309, 486, 976, 291, 300, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.09448094712090246, 'compression_ratio': 1.7264150943396226, 'no_speech_prob': 0.37671101093292236}, {'id': 1112, 'seek': 619714, 'start': 6209.14, 'end': 6212.14, 'text': ' What are the downsides with that approach?', 'tokens': [50964, 708, 366, 264, 21554, 1875, 365, 300, 3109, 30, 51114], 'temperature': 0.0, 'avg_logprob': -0.09448094712090246, 'compression_ratio': 1.7264150943396226, 'no_speech_prob': 0.37671101093292236}, {'id': 1113, 'seek': 619714, 'start': 6212.14, 'end': 6217.14, 'text': " Let's say you were doing the system design and he came up with this idea.", 'tokens': [51114, 961, 311, 584, 291, 645, 884, 264, 1185, 1715, 293, 415, 1361, 493, 365, 341, 1558, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.09448094712090246, 'compression_ratio': 1.7264150943396226, 'no_speech_prob': 0.37671101093292236}, {'id': 1114, 'seek': 619714, 'start': 6217.14, 'end': 6223.14, 'text': ' What is the problem with this in terms of is there any correctness problem?', 'tokens': [51364, 708, 307, 264, 1154, 365, 341, 294, 2115, 295, 307, 456, 604, 3006, 1287, 1154, 30, 51664], 'temperature': 0.0, 'avg_logprob': -0.09448094712090246, 'compression_ratio': 1.7264150943396226, 'no_speech_prob': 0.37671101093292236}, {'id': 1115, 'seek': 619714, 'start': 6223.14, 'end': 6224.14, 'text': " Let's start with that.", 'tokens': [51664, 961, 311, 722, 365, 300, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.09448094712090246, 'compression_ratio': 1.7264150943396226, 'no_speech_prob': 0.37671101093292236}, {'id': 1116, 'seek': 622414, 'start': 6224.14, 'end': 6230.14, 'text': ' Is there any functional issue which can arise if the cache was supposed to work on physical address?', 'tokens': [50364, 1119, 456, 604, 11745, 2734, 597, 393, 20288, 498, 264, 19459, 390, 3442, 281, 589, 322, 4001, 2985, 30, 50664], 'temperature': 0.0, 'avg_logprob': -0.17771631632095727, 'compression_ratio': 1.2777777777777777, 'no_speech_prob': 0.7639105319976807}, {'id': 1117, 'seek': 622414, 'start': 6230.14, 'end': 6239.14, 'text': ' OK.', 'tokens': [50664, 2264, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.17771631632095727, 'compression_ratio': 1.2777777777777777, 'no_speech_prob': 0.7639105319976807}, {'id': 1118, 'seek': 622414, 'start': 6239.14, 'end': 6244.14, 'text': ' Then I mean same virtual address in different processes.', 'tokens': [51114, 1396, 286, 914, 912, 6374, 2985, 294, 819, 7555, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.17771631632095727, 'compression_ratio': 1.2777777777777777, 'no_speech_prob': 0.7639105319976807}, {'id': 1119, 'seek': 624414, 'start': 6244.14, 'end': 6245.14, 'text': ' Correct.', 'tokens': [50364, 12753, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.285298671362535, 'compression_ratio': 2.169398907103825, 'no_speech_prob': 0.08241128921508789}, {'id': 1120, 'seek': 624414, 'start': 6245.14, 'end': 6246.14, 'text': ' Correctness.', 'tokens': [50414, 12753, 1287, 13, 50464], 'temperature': 0.0, 'avg_logprob': -0.285298671362535, 'compression_ratio': 2.169398907103825, 'no_speech_prob': 0.08241128921508789}, {'id': 1121, 'seek': 624414, 'start': 6246.14, 'end': 6249.14, 'text': ' So everyone agrees there is no correctness issue with that scheme.', 'tokens': [50464, 407, 1518, 26383, 456, 307, 572, 3006, 1287, 2734, 365, 300, 12232, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.285298671362535, 'compression_ratio': 2.169398907103825, 'no_speech_prob': 0.08241128921508789}, {'id': 1122, 'seek': 624414, 'start': 6249.14, 'end': 6250.14, 'text': ' Right?', 'tokens': [50614, 1779, 30, 50664], 'temperature': 0.0, 'avg_logprob': -0.285298671362535, 'compression_ratio': 2.169398907103825, 'no_speech_prob': 0.08241128921508789}, {'id': 1123, 'seek': 624414, 'start': 6250.14, 'end': 6255.14, 'text': ' So if cache was supposed to work on physical address, there is no correctness issue.', 'tokens': [50664, 407, 498, 19459, 390, 3442, 281, 589, 322, 4001, 2985, 11, 456, 307, 572, 3006, 1287, 2734, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.285298671362535, 'compression_ratio': 2.169398907103825, 'no_speech_prob': 0.08241128921508789}, {'id': 1124, 'seek': 624414, 'start': 6255.14, 'end': 6258.14, 'text': ' What are the performance issues with that?', 'tokens': [50914, 708, 366, 264, 3389, 2663, 365, 300, 30, 51064], 'temperature': 0.0, 'avg_logprob': -0.285298671362535, 'compression_ratio': 2.169398907103825, 'no_speech_prob': 0.08241128921508789}, {'id': 1125, 'seek': 624414, 'start': 6258.14, 'end': 6259.14, 'text': ' Correct.', 'tokens': [51064, 12753, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.285298671362535, 'compression_ratio': 2.169398907103825, 'no_speech_prob': 0.08241128921508789}, {'id': 1126, 'seek': 624414, 'start': 6259.14, 'end': 6262.14, 'text': ' So address translation is the biggest problem.', 'tokens': [51114, 407, 2985, 12853, 307, 264, 3880, 1154, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.285298671362535, 'compression_ratio': 2.169398907103825, 'no_speech_prob': 0.08241128921508789}, {'id': 1127, 'seek': 624414, 'start': 6262.14, 'end': 6264.14, 'text': ' So what is the problem?', 'tokens': [51264, 407, 437, 307, 264, 1154, 30, 51364], 'temperature': 0.0, 'avg_logprob': -0.285298671362535, 'compression_ratio': 2.169398907103825, 'no_speech_prob': 0.08241128921508789}, {'id': 1128, 'seek': 624414, 'start': 6264.14, 'end': 6269.14, 'text': ' So if cache was supposed to work on physical address, there is no correctness issue.', 'tokens': [51364, 407, 498, 19459, 390, 3442, 281, 589, 322, 4001, 2985, 11, 456, 307, 572, 3006, 1287, 2734, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.285298671362535, 'compression_ratio': 2.169398907103825, 'no_speech_prob': 0.08241128921508789}, {'id': 1129, 'seek': 624414, 'start': 6269.14, 'end': 6270.14, 'text': ' Correct.', 'tokens': [51614, 12753, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.285298671362535, 'compression_ratio': 2.169398907103825, 'no_speech_prob': 0.08241128921508789}, {'id': 1130, 'seek': 627014, 'start': 6270.14, 'end': 6278.14, 'text': ' So address translation is the biggest heavy weight because I wanted something to be looked', 'tokens': [50364, 407, 2985, 12853, 307, 264, 3880, 4676, 3364, 570, 286, 1415, 746, 281, 312, 2956, 50764], 'temperature': 0.0, 'avg_logprob': -0.10128446880139802, 'compression_ratio': 1.6919831223628692, 'no_speech_prob': 0.0140297319740057}, {'id': 1131, 'seek': 627014, 'start': 6278.14, 'end': 6284.14, 'text': ' up faster, but address translation is sitting in between and address translation itself', 'tokens': [50764, 493, 4663, 11, 457, 2985, 12853, 307, 3798, 294, 1296, 293, 2985, 12853, 2564, 51064], 'temperature': 0.0, 'avg_logprob': -0.10128446880139802, 'compression_ratio': 1.6919831223628692, 'no_speech_prob': 0.0140297319740057}, {'id': 1132, 'seek': 627014, 'start': 6284.14, 'end': 6288.14, 'text': ' may involve reading of the page table which goes to the memory and comes back and so on.', 'tokens': [51064, 815, 9494, 3760, 295, 264, 3028, 3199, 597, 1709, 281, 264, 4675, 293, 1487, 646, 293, 370, 322, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.10128446880139802, 'compression_ratio': 1.6919831223628692, 'no_speech_prob': 0.0140297319740057}, {'id': 1133, 'seek': 627014, 'start': 6288.14, 'end': 6290.14, 'text': ' So there is some performance issue.', 'tokens': [51264, 407, 456, 307, 512, 3389, 2734, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.10128446880139802, 'compression_ratio': 1.6919831223628692, 'no_speech_prob': 0.0140297319740057}, {'id': 1134, 'seek': 627014, 'start': 6290.14, 'end': 6292.14, 'text': " Now let's try to look at your side.", 'tokens': [51364, 823, 718, 311, 853, 281, 574, 412, 428, 1252, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.10128446880139802, 'compression_ratio': 1.6919831223628692, 'no_speech_prob': 0.0140297319740057}, {'id': 1135, 'seek': 627014, 'start': 6292.14, 'end': 6297.14, 'text': " So he's saying caches should be virtual address based.", 'tokens': [51464, 407, 415, 311, 1566, 269, 13272, 820, 312, 6374, 2985, 2361, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.10128446880139802, 'compression_ratio': 1.6919831223628692, 'no_speech_prob': 0.0140297319740057}, {'id': 1136, 'seek': 627014, 'start': 6297.14, 'end': 6298.14, 'text': ' Right?', 'tokens': [51714, 1779, 30, 51764], 'temperature': 0.0, 'avg_logprob': -0.10128446880139802, 'compression_ratio': 1.6919831223628692, 'no_speech_prob': 0.0140297319740057}, {'id': 1137, 'seek': 629814, 'start': 6298.14, 'end': 6301.14, 'text': ' What are the functional issues with that?', 'tokens': [50364, 708, 366, 264, 11745, 2663, 365, 300, 30, 50514], 'temperature': 0.0, 'avg_logprob': -0.12153933421674981, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.025900257751345634}, {'id': 1138, 'seek': 629814, 'start': 6301.14, 'end': 6304.14, 'text': ' Are there any functional issues with that?', 'tokens': [50514, 2014, 456, 604, 11745, 2663, 365, 300, 30, 50664], 'temperature': 0.0, 'avg_logprob': -0.12153933421674981, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.025900257751345634}, {'id': 1139, 'seek': 629814, 'start': 6304.14, 'end': 6305.14, 'text': ' Correct.', 'tokens': [50664, 12753, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.12153933421674981, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.025900257751345634}, {'id': 1140, 'seek': 629814, 'start': 6305.14, 'end': 6310.14, 'text': ' So this is a problem.', 'tokens': [50714, 407, 341, 307, 257, 1154, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.12153933421674981, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.025900257751345634}, {'id': 1141, 'seek': 629814, 'start': 6310.14, 'end': 6311.14, 'text': ' OK.', 'tokens': [50964, 2264, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.12153933421674981, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.025900257751345634}, {'id': 1142, 'seek': 629814, 'start': 6311.14, 'end': 6317.14, 'text': ' Two processes may have same virtual address which maps to two different locations in the', 'tokens': [51014, 4453, 7555, 815, 362, 912, 6374, 2985, 597, 11317, 281, 732, 819, 9253, 294, 264, 51314], 'temperature': 0.0, 'avg_logprob': -0.12153933421674981, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.025900257751345634}, {'id': 1143, 'seek': 629814, 'start': 6317.14, 'end': 6318.14, 'text': ' cache.', 'tokens': [51314, 19459, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.12153933421674981, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.025900257751345634}, {'id': 1144, 'seek': 629814, 'start': 6318.14, 'end': 6327.14, 'text': ' So address 500 in P1 might actually mean data X and address 500 in P2 might mean data Y.', 'tokens': [51364, 407, 2985, 5923, 294, 430, 16, 1062, 767, 914, 1412, 1783, 293, 2985, 5923, 294, 430, 17, 1062, 914, 1412, 398, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.12153933421674981, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.025900257751345634}, {'id': 1145, 'seek': 632714, 'start': 6327.14, 'end': 6337.14, 'text': ' So if cache stores 500 holds data X, then that is incorrect in context of process P2.', 'tokens': [50364, 407, 498, 19459, 9512, 5923, 9190, 1412, 1783, 11, 550, 300, 307, 18424, 294, 4319, 295, 1399, 430, 17, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.12137122587724165, 'compression_ratio': 1.4076433121019107, 'no_speech_prob': 0.0030728124547749758}, {'id': 1146, 'seek': 632714, 'start': 6337.14, 'end': 6338.14, 'text': ' OK.', 'tokens': [50864, 2264, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.12137122587724165, 'compression_ratio': 1.4076433121019107, 'no_speech_prob': 0.0030728124547749758}, {'id': 1147, 'seek': 632714, 'start': 6338.14, 'end': 6341.14, 'text': ' So is this viable solution?', 'tokens': [50914, 407, 307, 341, 22024, 3827, 30, 51064], 'temperature': 0.0, 'avg_logprob': -0.12137122587724165, 'compression_ratio': 1.4076433121019107, 'no_speech_prob': 0.0030728124547749758}, {'id': 1148, 'seek': 632714, 'start': 6341.14, 'end': 6342.14, 'text': ' Correct.', 'tokens': [51064, 12753, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.12137122587724165, 'compression_ratio': 1.4076433121019107, 'no_speech_prob': 0.0030728124547749758}, {'id': 1149, 'seek': 632714, 'start': 6342.14, 'end': 6350.14, 'text': ' So when you do a context switch, you can flush the cache and that will solve this problem.', 'tokens': [51114, 407, 562, 291, 360, 257, 4319, 3679, 11, 291, 393, 19568, 264, 19459, 293, 300, 486, 5039, 341, 1154, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.12137122587724165, 'compression_ratio': 1.4076433121019107, 'no_speech_prob': 0.0030728124547749758}, {'id': 1150, 'seek': 632714, 'start': 6350.14, 'end': 6351.14, 'text': ' OK.', 'tokens': [51514, 2264, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.12137122587724165, 'compression_ratio': 1.4076433121019107, 'no_speech_prob': 0.0030728124547749758}, {'id': 1151, 'seek': 635114, 'start': 6352.14, 'end': 6357.14, 'text': ' So process context switch now has additional overhead of flushing the cache also.', 'tokens': [50414, 407, 1399, 4319, 3679, 586, 575, 4497, 19922, 295, 932, 5371, 264, 19459, 611, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.09724618648660593, 'compression_ratio': 1.3846153846153846, 'no_speech_prob': 0.31348803639411926}, {'id': 1152, 'seek': 635114, 'start': 6357.14, 'end': 6360.14, 'text': ' But if you do that, then there is no correctness issue.', 'tokens': [50664, 583, 498, 291, 360, 300, 11, 550, 456, 307, 572, 3006, 1287, 2734, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.09724618648660593, 'compression_ratio': 1.3846153846153846, 'no_speech_prob': 0.31348803639411926}, {'id': 1153, 'seek': 635114, 'start': 6360.14, 'end': 6367.14, 'text': ' Are there any other issues?', 'tokens': [50814, 2014, 456, 604, 661, 2663, 30, 51164], 'temperature': 0.0, 'avg_logprob': -0.09724618648660593, 'compression_ratio': 1.3846153846153846, 'no_speech_prob': 0.31348803639411926}, {'id': 1154, 'seek': 635114, 'start': 6367.14, 'end': 6368.14, 'text': ' OK.', 'tokens': [51164, 2264, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.09724618648660593, 'compression_ratio': 1.3846153846153846, 'no_speech_prob': 0.31348803639411926}, {'id': 1155, 'seek': 635114, 'start': 6368.14, 'end': 6378.14, 'text': ' What is the advantage compared to that scheme?', 'tokens': [51214, 708, 307, 264, 5002, 5347, 281, 300, 12232, 30, 51714], 'temperature': 0.0, 'avg_logprob': -0.09724618648660593, 'compression_ratio': 1.3846153846153846, 'no_speech_prob': 0.31348803639411926}, {'id': 1156, 'seek': 637814, 'start': 6378.14, 'end': 6384.14, 'text': ' So if you have a context switch, you have to fetch whatever was available.', 'tokens': [50364, 407, 498, 291, 362, 257, 4319, 3679, 11, 291, 362, 281, 23673, 2035, 390, 2435, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.2567172257796578, 'compression_ratio': 1.7135416666666667, 'no_speech_prob': 0.07143703103065491}, {'id': 1157, 'seek': 637814, 'start': 6384.14, 'end': 6388.14, 'text': ' It might have been contiguous or it may not have been contiguous.', 'tokens': [50664, 467, 1062, 362, 668, 660, 30525, 420, 309, 815, 406, 362, 668, 660, 30525, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.2567172257796578, 'compression_ratio': 1.7135416666666667, 'no_speech_prob': 0.07143703103065491}, {'id': 1158, 'seek': 637814, 'start': 6388.14, 'end': 6389.14, 'text': ' Sorry?', 'tokens': [50864, 4919, 30, 50914], 'temperature': 0.0, 'avg_logprob': -0.2567172257796578, 'compression_ratio': 1.7135416666666667, 'no_speech_prob': 0.07143703103065491}, {'id': 1159, 'seek': 637814, 'start': 6389.14, 'end': 6390.14, 'text': ' Correct.', 'tokens': [50914, 12753, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.2567172257796578, 'compression_ratio': 1.7135416666666667, 'no_speech_prob': 0.07143703103065491}, {'id': 1160, 'seek': 637814, 'start': 6390.14, 'end': 6395.14, 'text': ' So address translation is saved.', 'tokens': [50964, 407, 2985, 12853, 307, 6624, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.2567172257796578, 'compression_ratio': 1.7135416666666667, 'no_speech_prob': 0.07143703103065491}, {'id': 1161, 'seek': 637814, 'start': 6395.14, 'end': 6396.14, 'text': ' Right?', 'tokens': [51214, 1779, 30, 51264], 'temperature': 0.0, 'avg_logprob': -0.2567172257796578, 'compression_ratio': 1.7135416666666667, 'no_speech_prob': 0.07143703103065491}, {'id': 1162, 'seek': 637814, 'start': 6396.14, 'end': 6403.14, 'text': ' So on this side, you have advantage because do we need to flush cache in case of context', 'tokens': [51264, 407, 322, 341, 1252, 11, 291, 362, 5002, 570, 360, 321, 643, 281, 19568, 19459, 294, 1389, 295, 4319, 51614], 'temperature': 0.0, 'avg_logprob': -0.2567172257796578, 'compression_ratio': 1.7135416666666667, 'no_speech_prob': 0.07143703103065491}, {'id': 1163, 'seek': 637814, 'start': 6403.14, 'end': 6406.14, 'text': ' switch if you have a physical cache?', 'tokens': [51614, 3679, 498, 291, 362, 257, 4001, 19459, 30, 51764], 'temperature': 0.0, 'avg_logprob': -0.2567172257796578, 'compression_ratio': 1.7135416666666667, 'no_speech_prob': 0.07143703103065491}, {'id': 1164, 'seek': 637814, 'start': 6406.14, 'end': 6407.14, 'text': ' Right?', 'tokens': [51764, 1779, 30, 51814], 'temperature': 0.0, 'avg_logprob': -0.2567172257796578, 'compression_ratio': 1.7135416666666667, 'no_speech_prob': 0.07143703103065491}, {'id': 1165, 'seek': 640714, 'start': 6407.14, 'end': 6415.14, 'text': ' So you have advantage of no cache flush with their scheme and you have advantage of no', 'tokens': [50364, 407, 291, 362, 5002, 295, 572, 19459, 19568, 365, 641, 12232, 293, 291, 362, 5002, 295, 572, 50764], 'temperature': 0.0, 'avg_logprob': -0.09256901922105235, 'compression_ratio': 1.6483516483516483, 'no_speech_prob': 0.0030197412706911564}, {'id': 1166, 'seek': 640714, 'start': 6415.14, 'end': 6417.14, 'text': ' address translation with your scheme.', 'tokens': [50764, 2985, 12853, 365, 428, 12232, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.09256901922105235, 'compression_ratio': 1.6483516483516483, 'no_speech_prob': 0.0030197412706911564}, {'id': 1167, 'seek': 640714, 'start': 6417.14, 'end': 6418.14, 'text': ' OK.', 'tokens': [50864, 2264, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.09256901922105235, 'compression_ratio': 1.6483516483516483, 'no_speech_prob': 0.0030197412706911564}, {'id': 1168, 'seek': 640714, 'start': 6418.14, 'end': 6421.14, 'text': ' So which one is better?', 'tokens': [50914, 407, 597, 472, 307, 1101, 30, 51064], 'temperature': 0.0, 'avg_logprob': -0.09256901922105235, 'compression_ratio': 1.6483516483516483, 'no_speech_prob': 0.0030197412706911564}, {'id': 1169, 'seek': 640714, 'start': 6421.14, 'end': 6430.14, 'text': " It's not because see as soon as you flush the cache, it means all the references which", 'tokens': [51064, 467, 311, 406, 570, 536, 382, 2321, 382, 291, 19568, 264, 19459, 11, 309, 1355, 439, 264, 15400, 597, 51514], 'temperature': 0.0, 'avg_logprob': -0.09256901922105235, 'compression_ratio': 1.6483516483516483, 'no_speech_prob': 0.0030197412706911564}, {'id': 1170, 'seek': 640714, 'start': 6430.14, 'end': 6435.14, 'text': ' are made now cannot be in cache and they have to go to wrap.', 'tokens': [51514, 366, 1027, 586, 2644, 312, 294, 19459, 293, 436, 362, 281, 352, 281, 7019, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.09256901922105235, 'compression_ratio': 1.6483516483516483, 'no_speech_prob': 0.0030197412706911564}, {'id': 1171, 'seek': 643514, 'start': 6435.14, 'end': 6440.14, 'text': ' So you have to again populate the cache with the cache entries.', 'tokens': [50364, 407, 291, 362, 281, 797, 1665, 5256, 264, 19459, 365, 264, 19459, 23041, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.12979496286270467, 'compression_ratio': 1.5568181818181819, 'no_speech_prob': 0.015895504504442215}, {'id': 1172, 'seek': 643514, 'start': 6440.14, 'end': 6442.14, 'text': ' So it is equally bad.', 'tokens': [50614, 407, 309, 307, 12309, 1578, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.12979496286270467, 'compression_ratio': 1.5568181818181819, 'no_speech_prob': 0.015895504504442215}, {'id': 1173, 'seek': 643514, 'start': 6442.14, 'end': 6443.14, 'text': ' OK.', 'tokens': [50714, 2264, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.12979496286270467, 'compression_ratio': 1.5568181818181819, 'no_speech_prob': 0.015895504504442215}, {'id': 1174, 'seek': 643514, 'start': 6443.14, 'end': 6446.14, 'text': ' Now what is actually done?', 'tokens': [50764, 823, 437, 307, 767, 1096, 30, 50914], 'temperature': 0.0, 'avg_logprob': -0.12979496286270467, 'compression_ratio': 1.5568181818181819, 'no_speech_prob': 0.015895504504442215}, {'id': 1175, 'seek': 643514, 'start': 6446.14, 'end': 6447.14, 'text': ' OK.', 'tokens': [50914, 2264, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.12979496286270467, 'compression_ratio': 1.5568181818181819, 'no_speech_prob': 0.015895504504442215}, {'id': 1176, 'seek': 643514, 'start': 6447.14, 'end': 6449.14, 'text': ' So we do both.', 'tokens': [50964, 407, 321, 360, 1293, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.12979496286270467, 'compression_ratio': 1.5568181818181819, 'no_speech_prob': 0.015895504504442215}, {'id': 1177, 'seek': 643514, 'start': 6449.14, 'end': 6450.14, 'text': ' OK.', 'tokens': [51064, 2264, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.12979496286270467, 'compression_ratio': 1.5568181818181819, 'no_speech_prob': 0.015895504504442215}, {'id': 1178, 'seek': 643514, 'start': 6450.14, 'end': 6451.14, 'text': ' We do both.', 'tokens': [51114, 492, 360, 1293, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.12979496286270467, 'compression_ratio': 1.5568181818181819, 'no_speech_prob': 0.015895504504442215}, {'id': 1179, 'seek': 643514, 'start': 6451.14, 'end': 6458.14, 'text': ' So have you heard of something called as on die cache, which is typically L1.', 'tokens': [51164, 407, 362, 291, 2198, 295, 746, 1219, 382, 322, 978, 19459, 11, 597, 307, 5850, 441, 16, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.12979496286270467, 'compression_ratio': 1.5568181818181819, 'no_speech_prob': 0.015895504504442215}, {'id': 1180, 'seek': 643514, 'start': 6458.14, 'end': 6459.14, 'text': ' Right?', 'tokens': [51514, 1779, 30, 51564], 'temperature': 0.0, 'avg_logprob': -0.12979496286270467, 'compression_ratio': 1.5568181818181819, 'no_speech_prob': 0.015895504504442215}, {'id': 1181, 'seek': 643514, 'start': 6459.14, 'end': 6463.14, 'text': ' So L1 typically is virtually indexed.', 'tokens': [51564, 407, 441, 16, 5850, 307, 14103, 8186, 292, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.12979496286270467, 'compression_ratio': 1.5568181818181819, 'no_speech_prob': 0.015895504504442215}, {'id': 1182, 'seek': 646314, 'start': 6463.14, 'end': 6468.14, 'text': ' L2, L3, L4 are physically indexed.', 'tokens': [50364, 441, 17, 11, 441, 18, 11, 441, 19, 366, 9762, 8186, 292, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.07149403122649796, 'compression_ratio': 1.4817073170731707, 'no_speech_prob': 0.0474064014852047}, {'id': 1183, 'seek': 646314, 'start': 6468.14, 'end': 6469.14, 'text': ' OK.', 'tokens': [50614, 2264, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.07149403122649796, 'compression_ratio': 1.4817073170731707, 'no_speech_prob': 0.0474064014852047}, {'id': 1184, 'seek': 646314, 'start': 6469.14, 'end': 6475.14, 'text': ' The reason you do that is because L1 is on die.', 'tokens': [50664, 440, 1778, 291, 360, 300, 307, 570, 441, 16, 307, 322, 978, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.07149403122649796, 'compression_ratio': 1.4817073170731707, 'no_speech_prob': 0.0474064014852047}, {'id': 1185, 'seek': 646314, 'start': 6475.14, 'end': 6479.14, 'text': ' MMU is actually off the die.', 'tokens': [50964, 34191, 52, 307, 767, 766, 264, 978, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.07149403122649796, 'compression_ratio': 1.4817073170731707, 'no_speech_prob': 0.0474064014852047}, {'id': 1186, 'seek': 646314, 'start': 6479.14, 'end': 6480.14, 'text': ' OK.', 'tokens': [51164, 2264, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.07149403122649796, 'compression_ratio': 1.4817073170731707, 'no_speech_prob': 0.0474064014852047}, {'id': 1187, 'seek': 646314, 'start': 6480.14, 'end': 6488.14, 'text': " So you don't want L1 to have to look up address translation and do that.", 'tokens': [51214, 407, 291, 500, 380, 528, 441, 16, 281, 362, 281, 574, 493, 2985, 12853, 293, 360, 300, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.07149403122649796, 'compression_ratio': 1.4817073170731707, 'no_speech_prob': 0.0474064014852047}, {'id': 1188, 'seek': 646314, 'start': 6488.14, 'end': 6489.14, 'text': ' OK.', 'tokens': [51614, 2264, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.07149403122649796, 'compression_ratio': 1.4817073170731707, 'no_speech_prob': 0.0474064014852047}, {'id': 1189, 'seek': 646314, 'start': 6489.14, 'end': 6492.14, 'text': ' So you want L1 to work with virtual addresses.', 'tokens': [51664, 407, 291, 528, 441, 16, 281, 589, 365, 6374, 16862, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.07149403122649796, 'compression_ratio': 1.4817073170731707, 'no_speech_prob': 0.0474064014852047}, {'id': 1190, 'seek': 649214, 'start': 6492.14, 'end': 6498.14, 'text': ' But beyond L2, which is off die, you are anyway given hope that you have to do memory access', 'tokens': [50364, 583, 4399, 441, 17, 11, 597, 307, 766, 978, 11, 291, 366, 4033, 2212, 1454, 300, 291, 362, 281, 360, 4675, 2105, 50664], 'temperature': 0.0, 'avg_logprob': -0.13686624695273006, 'compression_ratio': 1.3424657534246576, 'no_speech_prob': 0.01736191287636757}, {'id': 1191, 'seek': 649214, 'start': 6498.14, 'end': 6499.14, 'text': ' to some extent.', 'tokens': [50664, 281, 512, 8396, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.13686624695273006, 'compression_ratio': 1.3424657534246576, 'no_speech_prob': 0.01736191287636757}, {'id': 1192, 'seek': 649214, 'start': 6499.14, 'end': 6503.14, 'text': ' So you better do the address translation.', 'tokens': [50714, 407, 291, 1101, 360, 264, 2985, 12853, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.13686624695273006, 'compression_ratio': 1.3424657534246576, 'no_speech_prob': 0.01736191287636757}, {'id': 1193, 'seek': 649214, 'start': 6503.14, 'end': 6504.14, 'text': ' OK.', 'tokens': [50914, 2264, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.13686624695273006, 'compression_ratio': 1.3424657534246576, 'no_speech_prob': 0.01736191287636757}, {'id': 1194, 'seek': 649214, 'start': 6504.14, 'end': 6505.14, 'text': ' Yes.', 'tokens': [50964, 1079, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.13686624695273006, 'compression_ratio': 1.3424657534246576, 'no_speech_prob': 0.01736191287636757}, {'id': 1195, 'seek': 649214, 'start': 6505.14, 'end': 6510.14, 'text': ' TLB is in the MMU.', 'tokens': [51014, 40277, 33, 307, 294, 264, 34191, 52, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.13686624695273006, 'compression_ratio': 1.3424657534246576, 'no_speech_prob': 0.01736191287636757}, {'id': 1196, 'seek': 649214, 'start': 6510.14, 'end': 6519.14, 'text': ' So it is off die.', 'tokens': [51264, 407, 309, 307, 766, 978, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.13686624695273006, 'compression_ratio': 1.3424657534246576, 'no_speech_prob': 0.01736191287636757}, {'id': 1197, 'seek': 651914, 'start': 6519.14, 'end': 6520.14, 'text': ' OK.', 'tokens': [50364, 2264, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.18508193367405942, 'compression_ratio': 1.7973568281938326, 'no_speech_prob': 0.6433140635490417}, {'id': 1198, 'seek': 651914, 'start': 6520.14, 'end': 6521.14, 'text': ' So you have to do address translation.', 'tokens': [50414, 407, 291, 362, 281, 360, 2985, 12853, 13, 50464], 'temperature': 0.0, 'avg_logprob': -0.18508193367405942, 'compression_ratio': 1.7973568281938326, 'no_speech_prob': 0.6433140635490417}, {'id': 1199, 'seek': 651914, 'start': 6521.14, 'end': 6522.14, 'text': ' Correct.', 'tokens': [50464, 12753, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.18508193367405942, 'compression_ratio': 1.7973568281938326, 'no_speech_prob': 0.6433140635490417}, {'id': 1200, 'seek': 651914, 'start': 6522.14, 'end': 6525.14, 'text': ' Now processors are a bit more smart.', 'tokens': [50514, 823, 27751, 366, 257, 857, 544, 4069, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.18508193367405942, 'compression_ratio': 1.7973568281938326, 'no_speech_prob': 0.6433140635490417}, {'id': 1201, 'seek': 651914, 'start': 6525.14, 'end': 6526.14, 'text': ' OK.', 'tokens': [50664, 2264, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.18508193367405942, 'compression_ratio': 1.7973568281938326, 'no_speech_prob': 0.6433140635490417}, {'id': 1202, 'seek': 651914, 'start': 6526.14, 'end': 6532.14, 'text': ' What they do is they start looking up L1 cache and they issue the address translation also', 'tokens': [50714, 708, 436, 360, 307, 436, 722, 1237, 493, 441, 16, 19459, 293, 436, 2734, 264, 2985, 12853, 611, 51014], 'temperature': 0.0, 'avg_logprob': -0.18508193367405942, 'compression_ratio': 1.7973568281938326, 'no_speech_prob': 0.6433140635490417}, {'id': 1203, 'seek': 651914, 'start': 6532.14, 'end': 6533.14, 'text': ' to happen.', 'tokens': [51014, 281, 1051, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.18508193367405942, 'compression_ratio': 1.7973568281938326, 'no_speech_prob': 0.6433140635490417}, {'id': 1204, 'seek': 651914, 'start': 6533.14, 'end': 6538.14, 'text': ' So by the time L1 lookup happens, you would have address translation also done.', 'tokens': [51064, 407, 538, 264, 565, 441, 16, 574, 1010, 2314, 11, 291, 576, 362, 2985, 12853, 611, 1096, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.18508193367405942, 'compression_ratio': 1.7973568281938326, 'no_speech_prob': 0.6433140635490417}, {'id': 1205, 'seek': 651914, 'start': 6538.14, 'end': 6541.14, 'text': ' And you may throw it away or you may use it.', 'tokens': [51314, 400, 291, 815, 3507, 309, 1314, 420, 291, 815, 764, 309, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.18508193367405942, 'compression_ratio': 1.7973568281938326, 'no_speech_prob': 0.6433140635490417}, {'id': 1206, 'seek': 651914, 'start': 6541.14, 'end': 6546.14, 'text': ' So processors try to do things parallelly when it comes to translation versus L1 lookup.', 'tokens': [51464, 407, 27751, 853, 281, 360, 721, 8069, 7442, 562, 309, 1487, 281, 12853, 5717, 441, 16, 574, 1010, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.18508193367405942, 'compression_ratio': 1.7973568281938326, 'no_speech_prob': 0.6433140635490417}, {'id': 1207, 'seek': 654614, 'start': 6546.14, 'end': 6547.14, 'text': ' Yes.', 'tokens': [50364, 1079, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.1375257968902588, 'compression_ratio': 1.6135265700483092, 'no_speech_prob': 0.06945779919624329}, {'id': 1208, 'seek': 654614, 'start': 6547.14, 'end': 6551.14, 'text': ' So TLB is kind of fused within the address translation itself.', 'tokens': [50414, 407, 40277, 33, 307, 733, 295, 283, 4717, 1951, 264, 2985, 12853, 2564, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.1375257968902588, 'compression_ratio': 1.6135265700483092, 'no_speech_prob': 0.06945779919624329}, {'id': 1209, 'seek': 654614, 'start': 6551.14, 'end': 6556.14, 'text': ' So if you already have an address translation done, you use that.', 'tokens': [50614, 407, 498, 291, 1217, 362, 364, 2985, 12853, 1096, 11, 291, 764, 300, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.1375257968902588, 'compression_ratio': 1.6135265700483092, 'no_speech_prob': 0.06945779919624329}, {'id': 1210, 'seek': 654614, 'start': 6556.14, 'end': 6557.14, 'text': ' OK.', 'tokens': [50864, 2264, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.1375257968902588, 'compression_ratio': 1.6135265700483092, 'no_speech_prob': 0.06945779919624329}, {'id': 1211, 'seek': 654614, 'start': 6557.14, 'end': 6560.14, 'text': ' Now some processors also go a bit further.', 'tokens': [50914, 823, 512, 27751, 611, 352, 257, 857, 3052, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.1375257968902588, 'compression_ratio': 1.6135265700483092, 'no_speech_prob': 0.06945779919624329}, {'id': 1212, 'seek': 654614, 'start': 6560.14, 'end': 6561.14, 'text': ' OK.', 'tokens': [51064, 2264, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.1375257968902588, 'compression_ratio': 1.6135265700483092, 'no_speech_prob': 0.06945779919624329}, {'id': 1213, 'seek': 654614, 'start': 6561.14, 'end': 6566.14, 'text': ' So what you have, the problem which we had with L1 is every time the context switch happens,', 'tokens': [51114, 407, 437, 291, 362, 11, 264, 1154, 597, 321, 632, 365, 441, 16, 307, 633, 565, 264, 4319, 3679, 2314, 11, 51364], 'temperature': 0.0, 'avg_logprob': -0.1375257968902588, 'compression_ratio': 1.6135265700483092, 'no_speech_prob': 0.06945779919624329}, {'id': 1214, 'seek': 654614, 'start': 6566.14, 'end': 6568.14, 'text': ' you had to do cache flush.', 'tokens': [51364, 291, 632, 281, 360, 19459, 19568, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.1375257968902588, 'compression_ratio': 1.6135265700483092, 'no_speech_prob': 0.06945779919624329}, {'id': 1215, 'seek': 654614, 'start': 6568.14, 'end': 6571.14, 'text': ' So you had to flush L1 cache.', 'tokens': [51464, 407, 291, 632, 281, 19568, 441, 16, 19459, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.1375257968902588, 'compression_ratio': 1.6135265700483092, 'no_speech_prob': 0.06945779919624329}, {'id': 1216, 'seek': 657114, 'start': 6572.14, 'end': 6575.14, 'text': ' Some processors have something called as process identifier.', 'tokens': [50414, 2188, 27751, 362, 746, 1219, 382, 1399, 45690, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.21425450785776204, 'compression_ratio': 1.75, 'no_speech_prob': 0.14004701375961304}, {'id': 1217, 'seek': 657114, 'start': 6575.14, 'end': 6576.14, 'text': ' OK.', 'tokens': [50564, 2264, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.21425450785776204, 'compression_ratio': 1.75, 'no_speech_prob': 0.14004701375961304}, {'id': 1218, 'seek': 657114, 'start': 6576.14, 'end': 6583.14, 'text': ' Which is essentially, so process identifier plus virtual address is used as the indexing', 'tokens': [50614, 3013, 307, 4476, 11, 370, 1399, 45690, 1804, 6374, 2985, 307, 1143, 382, 264, 8186, 278, 50964], 'temperature': 0.0, 'avg_logprob': -0.21425450785776204, 'compression_ratio': 1.75, 'no_speech_prob': 0.14004701375961304}, {'id': 1219, 'seek': 657114, 'start': 6583.14, 'end': 6585.14, 'text': ' scheme into the L1.', 'tokens': [50964, 12232, 666, 264, 441, 16, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.21425450785776204, 'compression_ratio': 1.75, 'no_speech_prob': 0.14004701375961304}, {'id': 1220, 'seek': 657114, 'start': 6585.14, 'end': 6590.14, 'text': ' So what will happen is everything you will, it is not a function of just virtual address.', 'tokens': [51064, 407, 437, 486, 1051, 307, 1203, 291, 486, 11, 309, 307, 406, 257, 2445, 295, 445, 6374, 2985, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.21425450785776204, 'compression_ratio': 1.75, 'no_speech_prob': 0.14004701375961304}, {'id': 1221, 'seek': 657114, 'start': 6590.14, 'end': 6593.14, 'text': ' It is also a function of process identifier.', 'tokens': [51314, 467, 307, 611, 257, 2445, 295, 1399, 45690, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.21425450785776204, 'compression_ratio': 1.75, 'no_speech_prob': 0.14004701375961304}, {'id': 1222, 'seek': 657114, 'start': 6593.14, 'end': 6594.14, 'text': ' OK.', 'tokens': [51464, 2264, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.21425450785776204, 'compression_ratio': 1.75, 'no_speech_prob': 0.14004701375961304}, {'id': 1223, 'seek': 657114, 'start': 6594.14, 'end': 6597.14, 'text': ' So you have to do cache flush.', 'tokens': [51514, 407, 291, 362, 281, 360, 19459, 19568, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.21425450785776204, 'compression_ratio': 1.75, 'no_speech_prob': 0.14004701375961304}, {'id': 1224, 'seek': 659714, 'start': 6597.14, 'end': 6598.14, 'text': ' OK.', 'tokens': [50364, 2264, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.5720868791852679, 'compression_ratio': 0.8636363636363636, 'no_speech_prob': 0.990853488445282}, {'id': 1225, 'seek': 659714, 'start': 6598.14, 'end': 6601.14, 'text': ' So that is the process identifier.', 'tokens': [50414, 407, 300, 307, 264, 1399, 45690, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.5720868791852679, 'compression_ratio': 0.8636363636363636, 'no_speech_prob': 0.990853488445282}]