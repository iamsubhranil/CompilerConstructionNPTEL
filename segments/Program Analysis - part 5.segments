[{'id': 0, 'seek': 0, 'start': 0.0, 'end': 11.48, 'text': ' So, let us do a few more definitions. Just to revise I mean we construct these gen and', 'tokens': [50364, 407, 11, 718, 505, 360, 257, 1326, 544, 21988, 13, 1449, 281, 44252, 286, 914, 321, 7690, 613, 1049, 293, 50938], 'temperature': 0.0, 'avg_logprob': -0.22211599349975586, 'compression_ratio': 1.8215767634854771, 'no_speech_prob': 0.16835777461528778}, {'id': 1, 'seek': 0, 'start': 11.48, 'end': 15.200000000000001, 'text': ' kill sets. So, all definitions that are generated and do not get killed before reaching the', 'tokens': [50938, 1961, 6352, 13, 407, 11, 439, 21988, 300, 366, 10833, 293, 360, 406, 483, 4652, 949, 9906, 264, 51124], 'temperature': 0.0, 'avg_logprob': -0.22211599349975586, 'compression_ratio': 1.8215767634854771, 'no_speech_prob': 0.16835777461528778}, {'id': 2, 'seek': 0, 'start': 15.200000000000001, 'end': 18.64, 'text': ' end of the basic block are put in the gen set you know how to construct it and kill', 'tokens': [51124, 917, 295, 264, 3875, 3461, 366, 829, 294, 264, 1049, 992, 291, 458, 577, 281, 7690, 309, 293, 1961, 51296], 'temperature': 0.0, 'avg_logprob': -0.22211599349975586, 'compression_ratio': 1.8215767634854771, 'no_speech_prob': 0.16835777461528778}, {'id': 3, 'seek': 0, 'start': 18.64, 'end': 22.400000000000002, 'text': ' is all definition that killed whose area was resigned in the basic block as simple as that.', 'tokens': [51296, 307, 439, 7123, 300, 4652, 6104, 1859, 390, 41180, 294, 264, 3875, 3461, 382, 2199, 382, 300, 13, 51484], 'temperature': 0.0, 'avg_logprob': -0.22211599349975586, 'compression_ratio': 1.8215767634854771, 'no_speech_prob': 0.16835777461528778}, {'id': 4, 'seek': 0, 'start': 22.400000000000002, 'end': 26.76, 'text': ' Again as you understand that it is on that in the on this particular equation I mean', 'tokens': [51484, 3764, 382, 291, 1223, 300, 309, 307, 322, 300, 294, 264, 322, 341, 1729, 5367, 286, 914, 51702], 'temperature': 0.0, 'avg_logprob': -0.22211599349975586, 'compression_ratio': 1.8215767634854771, 'no_speech_prob': 0.16835777461528778}, {'id': 5, 'seek': 2676, 'start': 26.76, 'end': 39.96, 'text': ' if you say out of n is equals in of n minus kill of n union gen of n. So, given this equation', 'tokens': [50364, 498, 291, 584, 484, 295, 297, 307, 6915, 294, 295, 297, 3175, 1961, 295, 297, 11671, 1049, 295, 297, 13, 407, 11, 2212, 341, 5367, 51024], 'temperature': 0.0, 'avg_logprob': -0.1329754711536879, 'compression_ratio': 1.7959183673469388, 'no_speech_prob': 0.051664140075445175}, {'id': 6, 'seek': 2676, 'start': 39.96, 'end': 43.480000000000004, 'text': ' these are the definitions, but if you change the equation you do the gen first and the', 'tokens': [51024, 613, 366, 264, 21988, 11, 457, 498, 291, 1319, 264, 5367, 291, 360, 264, 1049, 700, 293, 264, 51200], 'temperature': 0.0, 'avg_logprob': -0.1329754711536879, 'compression_ratio': 1.7959183673469388, 'no_speech_prob': 0.051664140075445175}, {'id': 7, 'seek': 2676, 'start': 43.480000000000004, 'end': 49.480000000000004, 'text': ' equation like you have to do it differently. So, if you do this for instance then your', 'tokens': [51200, 5367, 411, 291, 362, 281, 360, 309, 7614, 13, 407, 11, 498, 291, 360, 341, 337, 5197, 550, 428, 51500], 'temperature': 0.0, 'avg_logprob': -0.1329754711536879, 'compression_ratio': 1.7959183673469388, 'no_speech_prob': 0.051664140075445175}, {'id': 8, 'seek': 2676, 'start': 49.480000000000004, 'end': 54.96, 'text': ' kill should not contain the ones which get generated right. So, those are so nothing', 'tokens': [51500, 1961, 820, 406, 5304, 264, 2306, 597, 483, 10833, 558, 13, 407, 11, 729, 366, 370, 1825, 51774], 'temperature': 0.0, 'avg_logprob': -0.1329754711536879, 'compression_ratio': 1.7959183673469388, 'no_speech_prob': 0.051664140075445175}, {'id': 9, 'seek': 5496, 'start': 54.96, 'end': 58.0, 'text': ' is set in stone you can define things the way you want to, but you have to make sure', 'tokens': [50364, 307, 992, 294, 7581, 291, 393, 6964, 721, 264, 636, 291, 528, 281, 11, 457, 291, 362, 281, 652, 988, 50516], 'temperature': 0.0, 'avg_logprob': -0.2051754126677642, 'compression_ratio': 1.6594594594594594, 'no_speech_prob': 0.032056406140327454}, {'id': 10, 'seek': 5496, 'start': 58.0, 'end': 65.32, 'text': ' the other things are also consistent that is all.', 'tokens': [50516, 264, 661, 721, 366, 611, 8398, 300, 307, 439, 13, 50882], 'temperature': 0.0, 'avg_logprob': -0.2051754126677642, 'compression_ratio': 1.6594594594594594, 'no_speech_prob': 0.032056406140327454}, {'id': 11, 'seek': 5496, 'start': 65.32, 'end': 71.88, 'text': ' So, how to compute we have done that. So, there are many abstraction techniques about', 'tokens': [50882, 407, 11, 577, 281, 14722, 321, 362, 1096, 300, 13, 407, 11, 456, 366, 867, 37765, 7512, 466, 51210], 'temperature': 0.0, 'avg_logprob': -0.2051754126677642, 'compression_ratio': 1.6594594594594594, 'no_speech_prob': 0.032056406140327454}, {'id': 12, 'seek': 5496, 'start': 71.88, 'end': 78.88, 'text': ' for arrays like for instance one abstraction is that you assume that each array is one', 'tokens': [51210, 337, 41011, 411, 337, 5197, 472, 37765, 307, 300, 291, 6552, 300, 1184, 10225, 307, 472, 51560], 'temperature': 0.0, 'avg_logprob': -0.2051754126677642, 'compression_ratio': 1.6594594594594594, 'no_speech_prob': 0.032056406140327454}, {'id': 13, 'seek': 7888, 'start': 78.88, 'end': 86.52, 'text': ' variable right one large variable. So, any update so you forget what happens on an index', 'tokens': [50364, 7006, 558, 472, 2416, 7006, 13, 407, 11, 604, 5623, 370, 291, 2870, 437, 2314, 322, 364, 8186, 50746], 'temperature': 0.0, 'avg_logprob': -0.21856664021809896, 'compression_ratio': 1.7303921568627452, 'no_speech_prob': 0.04461401328444481}, {'id': 14, 'seek': 7888, 'start': 86.52, 'end': 94.0, 'text': ' you just say that if I have written a of 2 it is just writing to a right. So, essentially', 'tokens': [50746, 291, 445, 584, 300, 498, 286, 362, 3720, 257, 295, 568, 309, 307, 445, 3579, 281, 257, 558, 13, 407, 11, 4476, 51120], 'temperature': 0.0, 'avg_logprob': -0.21856664021809896, 'compression_ratio': 1.7303921568627452, 'no_speech_prob': 0.04461401328444481}, {'id': 15, 'seek': 7888, 'start': 94.0, 'end': 100.52, 'text': ' what will happen is even if it is writing to like a of 2 a of 3 will also get killed.', 'tokens': [51120, 437, 486, 1051, 307, 754, 498, 309, 307, 3579, 281, 411, 257, 295, 568, 257, 295, 805, 486, 611, 483, 4652, 13, 51446], 'temperature': 0.0, 'avg_logprob': -0.21856664021809896, 'compression_ratio': 1.7303921568627452, 'no_speech_prob': 0.04461401328444481}, {'id': 16, 'seek': 7888, 'start': 100.52, 'end': 105.44, 'text': ' So, you are your precision of an analysis will decrease, but you have to design analysis', 'tokens': [51446, 407, 11, 291, 366, 428, 18356, 295, 364, 5215, 486, 11514, 11, 457, 291, 362, 281, 1715, 5215, 51692], 'temperature': 0.0, 'avg_logprob': -0.21856664021809896, 'compression_ratio': 1.7303921568627452, 'no_speech_prob': 0.04461401328444481}, {'id': 17, 'seek': 10544, 'start': 105.44, 'end': 109.92, 'text': ' so that it remains sound even in under those constraints, but again there are other abstraction', 'tokens': [50364, 370, 300, 309, 7023, 1626, 754, 294, 833, 729, 18491, 11, 457, 797, 456, 366, 661, 37765, 50588], 'temperature': 0.0, 'avg_logprob': -0.1686835166735527, 'compression_ratio': 1.8986013986013985, 'no_speech_prob': 0.10635877400636673}, {'id': 18, 'seek': 10544, 'start': 109.92, 'end': 113.96, 'text': ' techniques of arrays which essentially make it better. So, you can so there is something', 'tokens': [50588, 7512, 295, 41011, 597, 4476, 652, 309, 1101, 13, 407, 11, 291, 393, 370, 456, 307, 746, 50790], 'temperature': 0.0, 'avg_logprob': -0.1686835166735527, 'compression_ratio': 1.8986013986013985, 'no_speech_prob': 0.10635877400636673}, {'id': 19, 'seek': 10544, 'start': 113.96, 'end': 118.96, 'text': ' called recency abstraction which essentially says that let me just keep the first few array', 'tokens': [50790, 1219, 850, 3020, 37765, 597, 4476, 1619, 300, 718, 385, 445, 1066, 264, 700, 1326, 10225, 51040], 'temperature': 0.0, 'avg_logprob': -0.1686835166735527, 'compression_ratio': 1.8986013986013985, 'no_speech_prob': 0.10635877400636673}, {'id': 20, 'seek': 10544, 'start': 118.96, 'end': 123.64, 'text': ' indices separate I will treat them as separate variables and the rest of the array again', 'tokens': [51040, 43840, 4994, 286, 486, 2387, 552, 382, 4994, 9102, 293, 264, 1472, 295, 264, 10225, 797, 51274], 'temperature': 0.0, 'avg_logprob': -0.1686835166735527, 'compression_ratio': 1.8986013986013985, 'no_speech_prob': 0.10635877400636673}, {'id': 21, 'seek': 10544, 'start': 123.64, 'end': 129.0, 'text': ' I will merge into a one big aggregate variable. So, there are such techniques. So, in fact', 'tokens': [51274, 286, 486, 22183, 666, 257, 472, 955, 26118, 7006, 13, 407, 11, 456, 366, 1270, 7512, 13, 407, 11, 294, 1186, 51542], 'temperature': 0.0, 'avg_logprob': -0.1686835166735527, 'compression_ratio': 1.8986013986013985, 'no_speech_prob': 0.10635877400636673}, {'id': 22, 'seek': 10544, 'start': 129.0, 'end': 133.88, 'text': ' abstracting array is abstracting heap these are research topics by their own right and', 'tokens': [51542, 12649, 278, 10225, 307, 12649, 278, 33591, 613, 366, 2132, 8378, 538, 641, 1065, 558, 293, 51786], 'temperature': 0.0, 'avg_logprob': -0.1686835166735527, 'compression_ratio': 1.8986013986013985, 'no_speech_prob': 0.10635877400636673}, {'id': 23, 'seek': 13388, 'start': 133.96, 'end': 138.04, 'text': ' how to do it well and what applications they will work well at different things or different', 'tokens': [50368, 577, 281, 360, 309, 731, 293, 437, 5821, 436, 486, 589, 731, 412, 819, 721, 420, 819, 50572], 'temperature': 0.0, 'avg_logprob': -0.24659045537312826, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.04067854583263397}, {'id': 24, 'seek': 13388, 'start': 138.04, 'end': 143.16, 'text': ' thing or so very good observation. So, at this point in time we will only restrict', 'tokens': [50572, 551, 420, 370, 588, 665, 14816, 13, 407, 11, 412, 341, 935, 294, 565, 321, 486, 787, 7694, 50828], 'temperature': 0.0, 'avg_logprob': -0.24659045537312826, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.04067854583263397}, {'id': 25, 'seek': 13388, 'start': 143.16, 'end': 150.44, 'text': ' ourselves to scalar variables right, but there are modeling techniques which can reduce these', 'tokens': [50828, 4175, 281, 39684, 9102, 558, 11, 457, 456, 366, 15983, 7512, 597, 393, 5407, 613, 51192], 'temperature': 0.0, 'avg_logprob': -0.24659045537312826, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.04067854583263397}, {'id': 26, 'seek': 13388, 'start': 150.44, 'end': 155.44, 'text': ' accesses of these aggregate data structures also into an array or into scalars or something', 'tokens': [51192, 2105, 279, 295, 613, 26118, 1412, 9227, 611, 666, 364, 10225, 420, 666, 15664, 685, 420, 746, 51442], 'temperature': 0.0, 'avg_logprob': -0.24659045537312826, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.04067854583263397}, {'id': 27, 'seek': 13388, 'start': 155.44, 'end': 161.12, 'text': ' similar. So, you have to modify your transfer function similarly for these guys right.', 'tokens': [51442, 2531, 13, 407, 11, 291, 362, 281, 16927, 428, 5003, 2445, 14138, 337, 613, 1074, 558, 13, 51726], 'temperature': 0.0, 'avg_logprob': -0.24659045537312826, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.04067854583263397}, {'id': 28, 'seek': 16112, 'start': 161.12, 'end': 169.72, 'text': ' So, this we have finished right. So, essentially finally, we in summary the reaching definition', 'tokens': [50364, 407, 11, 341, 321, 362, 4335, 558, 13, 407, 11, 4476, 2721, 11, 321, 294, 12691, 264, 9906, 7123, 50794], 'temperature': 0.0, 'avg_logprob': -0.2072504794958866, 'compression_ratio': 1.9656652360515021, 'no_speech_prob': 0.029156416654586792}, {'id': 29, 'seek': 16112, 'start': 169.72, 'end': 175.32, 'text': ' analysis is a analysis which is done in the forward direction it is an any path analysis', 'tokens': [50794, 5215, 307, 257, 5215, 597, 307, 1096, 294, 264, 2128, 3513, 309, 307, 364, 604, 3100, 5215, 51074], 'temperature': 0.0, 'avg_logprob': -0.2072504794958866, 'compression_ratio': 1.9656652360515021, 'no_speech_prob': 0.029156416654586792}, {'id': 30, 'seek': 16112, 'start': 175.32, 'end': 180.32, 'text': ' which meaning that reaching definitions arrive at any path I would put it in my set and it', 'tokens': [51074, 597, 3620, 300, 9906, 21988, 8881, 412, 604, 3100, 286, 576, 829, 309, 294, 452, 992, 293, 309, 51324], 'temperature': 0.0, 'avg_logprob': -0.2072504794958866, 'compression_ratio': 1.9656652360515021, 'no_speech_prob': 0.029156416654586792}, {'id': 31, 'seek': 16112, 'start': 180.32, 'end': 186.24, 'text': ' always tries to get you the meaningful solution is the smallest solution right where the size', 'tokens': [51324, 1009, 9898, 281, 483, 291, 264, 10995, 3827, 307, 264, 16998, 3827, 558, 689, 264, 2744, 51620], 'temperature': 0.0, 'avg_logprob': -0.2072504794958866, 'compression_ratio': 1.9656652360515021, 'no_speech_prob': 0.029156416654586792}, {'id': 32, 'seek': 16112, 'start': 186.24, 'end': 190.56, 'text': ' of the sets are the smallest right those are solutions which we are which we really want', 'tokens': [51620, 295, 264, 6352, 366, 264, 16998, 558, 729, 366, 6547, 597, 321, 366, 597, 321, 534, 528, 51836], 'temperature': 0.0, 'avg_logprob': -0.2072504794958866, 'compression_ratio': 1.9656652360515021, 'no_speech_prob': 0.029156416654586792}, {'id': 33, 'seek': 19056, 'start': 190.56, 'end': 196.88, 'text': ' if you really desire. Now, let us come to available expressions. So, again the idea', 'tokens': [50364, 498, 291, 534, 7516, 13, 823, 11, 718, 505, 808, 281, 2435, 15277, 13, 407, 11, 797, 264, 1558, 50680], 'temperature': 0.0, 'avg_logprob': -0.19035951614379884, 'compression_ratio': 1.73828125, 'no_speech_prob': 0.0037612146697938442}, {'id': 34, 'seek': 19056, 'start': 196.88, 'end': 200.96, 'text': ' we have discussed it yesterday. So, I will not get into too much the idea is very similar', 'tokens': [50680, 321, 362, 7152, 309, 5186, 13, 407, 11, 286, 486, 406, 483, 666, 886, 709, 264, 1558, 307, 588, 2531, 50884], 'temperature': 0.0, 'avg_logprob': -0.19035951614379884, 'compression_ratio': 1.73828125, 'no_speech_prob': 0.0037612146697938442}, {'id': 35, 'seek': 19056, 'start': 200.96, 'end': 206.4, 'text': ' you generate your gen and kill sets and your global equations look a bit different. So,', 'tokens': [50884, 291, 8460, 428, 1049, 293, 1961, 6352, 293, 428, 4338, 11787, 574, 257, 857, 819, 13, 407, 11, 51156], 'temperature': 0.0, 'avg_logprob': -0.19035951614379884, 'compression_ratio': 1.73828125, 'no_speech_prob': 0.0037612146697938442}, {'id': 36, 'seek': 19056, 'start': 206.4, 'end': 212.28, 'text': ' you do an intersection over your outs instead of taking a union and the transfer function', 'tokens': [51156, 291, 360, 364, 15236, 670, 428, 14758, 2602, 295, 1940, 257, 11671, 293, 264, 5003, 2445, 51450], 'temperature': 0.0, 'avg_logprob': -0.19035951614379884, 'compression_ratio': 1.73828125, 'no_speech_prob': 0.0037612146697938442}, {'id': 37, 'seek': 19056, 'start': 212.28, 'end': 218.0, 'text': ' remains the same and the direction available expression is which direction it is also forward', 'tokens': [51450, 7023, 264, 912, 293, 264, 3513, 2435, 6114, 307, 597, 3513, 309, 307, 611, 2128, 51736], 'temperature': 0.0, 'avg_logprob': -0.19035951614379884, 'compression_ratio': 1.73828125, 'no_speech_prob': 0.0037612146697938442}, {'id': 38, 'seek': 21800, 'start': 218.0, 'end': 224.88, 'text': ' direction it is a any path or all path it is all path analysis and in this case do you', 'tokens': [50364, 3513, 309, 307, 257, 604, 3100, 420, 439, 3100, 309, 307, 439, 3100, 5215, 293, 294, 341, 1389, 360, 291, 50708], 'temperature': 0.0, 'avg_logprob': -0.17453172273724993, 'compression_ratio': 1.8081632653061224, 'no_speech_prob': 0.14344969391822815}, {'id': 39, 'seek': 21800, 'start': 224.88, 'end': 229.24, 'text': ' want the largest solution or the smallest solution think about it. Now, again like I', 'tokens': [50708, 528, 264, 6443, 3827, 420, 264, 16998, 3827, 519, 466, 309, 13, 823, 11, 797, 411, 286, 50926], 'temperature': 0.0, 'avg_logprob': -0.17453172273724993, 'compression_ratio': 1.8081632653061224, 'no_speech_prob': 0.14344969391822815}, {'id': 40, 'seek': 21800, 'start': 229.24, 'end': 232.28, 'text': ' said whenever you are asked this question you should think about what applications you', 'tokens': [50926, 848, 5699, 291, 366, 2351, 341, 1168, 291, 820, 519, 466, 437, 5821, 291, 51078], 'temperature': 0.0, 'avg_logprob': -0.17453172273724993, 'compression_ratio': 1.8081632653061224, 'no_speech_prob': 0.14344969391822815}, {'id': 41, 'seek': 21800, 'start': 232.28, 'end': 238.44, 'text': ' can put it to use. So, you can do this something called redundancy elimination right. So, what', 'tokens': [51078, 393, 829, 309, 281, 764, 13, 407, 11, 291, 393, 360, 341, 746, 1219, 27830, 6717, 29224, 558, 13, 407, 11, 437, 51386], 'temperature': 0.0, 'avg_logprob': -0.17453172273724993, 'compression_ratio': 1.8081632653061224, 'no_speech_prob': 0.14344969391822815}, {'id': 42, 'seek': 21800, 'start': 238.44, 'end': 242.28, 'text': ' you can do is if there are. So, remember the example I talked about yesterday. So, if you', 'tokens': [51386, 291, 393, 360, 307, 498, 456, 366, 13, 407, 11, 1604, 264, 1365, 286, 2825, 466, 5186, 13, 407, 11, 498, 291, 51578], 'temperature': 0.0, 'avg_logprob': -0.17453172273724993, 'compression_ratio': 1.8081632653061224, 'no_speech_prob': 0.14344969391822815}, {'id': 43, 'seek': 24228, 'start': 242.28, 'end': 252.44, 'text': ' have a equals x plus y here and you have another b equals x plus y and at some later point you say', 'tokens': [50364, 362, 257, 6915, 2031, 1804, 288, 510, 293, 291, 362, 1071, 272, 6915, 2031, 1804, 288, 293, 412, 512, 1780, 935, 291, 584, 50872], 'temperature': 0.0, 'avg_logprob': -0.11360646565755209, 'compression_ratio': 1.7100591715976332, 'no_speech_prob': 0.21671994030475616}, {'id': 44, 'seek': 24228, 'start': 252.44, 'end': 260.92, 'text': ' c equals x plus y then essentially there are two computations of x plus y along these two paths', 'tokens': [50872, 269, 6915, 2031, 1804, 288, 550, 4476, 456, 366, 732, 2807, 763, 295, 2031, 1804, 288, 2051, 613, 732, 14518, 51296], 'temperature': 0.0, 'avg_logprob': -0.11360646565755209, 'compression_ratio': 1.7100591715976332, 'no_speech_prob': 0.21671994030475616}, {'id': 45, 'seek': 24228, 'start': 260.92, 'end': 269.52, 'text': ' right. So, if I know that x plus y is surely available here then what I can do is I can simply', 'tokens': [51296, 558, 13, 407, 11, 498, 286, 458, 300, 2031, 1804, 288, 307, 11468, 2435, 510, 550, 437, 286, 393, 360, 307, 286, 393, 2935, 51726], 'temperature': 0.0, 'avg_logprob': -0.11360646565755209, 'compression_ratio': 1.7100591715976332, 'no_speech_prob': 0.21671994030475616}, {'id': 46, 'seek': 26952, 'start': 269.52, 'end': 280.79999999999995, 'text': ' do this optimization I can define an h equals x plus y b equals sorry h equals x plus y this I', 'tokens': [50364, 360, 341, 19618, 286, 393, 6964, 364, 276, 6915, 2031, 1804, 288, 272, 6915, 2597, 276, 6915, 2031, 1804, 288, 341, 286, 50928], 'temperature': 0.0, 'avg_logprob': -0.12706197451238763, 'compression_ratio': 1.7898089171974523, 'no_speech_prob': 0.0938638225197792}, {'id': 47, 'seek': 26952, 'start': 280.79999999999995, 'end': 290.64, 'text': ' move to h this I move to h and this also I move to h this is an possible optimization. Now,', 'tokens': [50928, 1286, 281, 276, 341, 286, 1286, 281, 276, 293, 341, 611, 286, 1286, 281, 276, 341, 307, 364, 1944, 19618, 13, 823, 11, 51420], 'temperature': 0.0, 'avg_logprob': -0.12706197451238763, 'compression_ratio': 1.7898089171974523, 'no_speech_prob': 0.0938638225197792}, {'id': 48, 'seek': 26952, 'start': 290.64, 'end': 297.08, 'text': ' the good part is I compute x plus y only once no matter which path I take instead of computing', 'tokens': [51420, 264, 665, 644, 307, 286, 14722, 2031, 1804, 288, 787, 1564, 572, 1871, 597, 3100, 286, 747, 2602, 295, 15866, 51742], 'temperature': 0.0, 'avg_logprob': -0.12706197451238763, 'compression_ratio': 1.7898089171974523, 'no_speech_prob': 0.0938638225197792}, {'id': 49, 'seek': 29708, 'start': 297.08, 'end': 306.88, 'text': ' twice. So, for this particular case what will. So, now let us think about the safe solution which', 'tokens': [50364, 6091, 13, 407, 11, 337, 341, 1729, 1389, 437, 486, 13, 407, 11, 586, 718, 505, 519, 466, 264, 3273, 3827, 597, 50854], 'temperature': 0.0, 'avg_logprob': -0.2315834004391906, 'compression_ratio': 1.989010989010989, 'no_speech_prob': 0.5513484477996826}, {'id': 50, 'seek': 29708, 'start': 306.88, 'end': 311.24, 'text': ' is the safe solution for a safe solution will should be smaller than the required thing or', 'tokens': [50854, 307, 264, 3273, 3827, 337, 257, 3273, 3827, 486, 820, 312, 4356, 813, 264, 4739, 551, 420, 51072], 'temperature': 0.0, 'avg_logprob': -0.2315834004391906, 'compression_ratio': 1.989010989010989, 'no_speech_prob': 0.5513484477996826}, {'id': 51, 'seek': 29708, 'start': 311.24, 'end': 316.03999999999996, 'text': ' the larger than the required thing. So, it will be larger why larger why smaller. So,', 'tokens': [51072, 264, 4833, 813, 264, 4739, 551, 13, 407, 11, 309, 486, 312, 4833, 983, 4833, 983, 4356, 13, 407, 11, 51312], 'temperature': 0.0, 'avg_logprob': -0.2315834004391906, 'compression_ratio': 1.989010989010989, 'no_speech_prob': 0.5513484477996826}, {'id': 52, 'seek': 29708, 'start': 316.03999999999996, 'end': 321.15999999999997, 'text': ' what can go wrong if with this analysis. So, what can go wrong. So, if I say that it is', 'tokens': [51312, 437, 393, 352, 2085, 498, 365, 341, 5215, 13, 407, 11, 437, 393, 352, 2085, 13, 407, 11, 498, 286, 584, 300, 309, 307, 51568], 'temperature': 0.0, 'avg_logprob': -0.2315834004391906, 'compression_ratio': 1.989010989010989, 'no_speech_prob': 0.5513484477996826}, {'id': 53, 'seek': 32116, 'start': 321.16, 'end': 328.72, 'text': ' ok no. So, let us say n solution what what would like like it to be larger than the actual', 'tokens': [50364, 3133, 572, 13, 407, 11, 718, 505, 584, 297, 3827, 437, 437, 576, 411, 411, 309, 281, 312, 4833, 813, 264, 3539, 50742], 'temperature': 0.0, 'avg_logprob': -0.1789297440472771, 'compression_ratio': 2.0, 'no_speech_prob': 0.044093962758779526}, {'id': 54, 'seek': 32116, 'start': 328.72, 'end': 335.28000000000003, 'text': ' solution or smaller than the actual solution smaller than the actual solution why is that', 'tokens': [50742, 3827, 420, 4356, 813, 264, 3539, 3827, 4356, 813, 264, 3539, 3827, 983, 307, 300, 51070], 'temperature': 0.0, 'avg_logprob': -0.1789297440472771, 'compression_ratio': 2.0, 'no_speech_prob': 0.044093962758779526}, {'id': 55, 'seek': 32116, 'start': 335.28000000000003, 'end': 341.64000000000004, 'text': ' if it is larger than what happens yeah then we will think that x plus y was not available', 'tokens': [51070, 498, 309, 307, 4833, 813, 437, 2314, 1338, 550, 321, 486, 519, 300, 2031, 1804, 288, 390, 406, 2435, 51388], 'temperature': 0.0, 'avg_logprob': -0.1789297440472771, 'compression_ratio': 2.0, 'no_speech_prob': 0.044093962758779526}, {'id': 56, 'seek': 32116, 'start': 341.64000000000004, 'end': 346.6, 'text': ' we might think it is available and we might just put a computation of something which is not even', 'tokens': [51388, 321, 1062, 519, 309, 307, 2435, 293, 321, 1062, 445, 829, 257, 24903, 295, 746, 597, 307, 406, 754, 51636], 'temperature': 0.0, 'avg_logprob': -0.1789297440472771, 'compression_ratio': 2.0, 'no_speech_prob': 0.044093962758779526}, {'id': 57, 'seek': 34660, 'start': 346.6, 'end': 353.08000000000004, 'text': ' computed yet then it will put a garbage value in that location right. So, now the safe solution', 'tokens': [50364, 40610, 1939, 550, 309, 486, 829, 257, 14150, 2158, 294, 300, 4914, 558, 13, 407, 11, 586, 264, 3273, 3827, 50688], 'temperature': 0.0, 'avg_logprob': -0.20161051809051891, 'compression_ratio': 1.9014778325123152, 'no_speech_prob': 0.14397235214710236}, {'id': 58, 'seek': 34660, 'start': 353.08000000000004, 'end': 360.16, 'text': ' must be smaller so anything anything larger is unsafe that is what I am saying anything larger', 'tokens': [50688, 1633, 312, 4356, 370, 1340, 1340, 4833, 307, 35948, 300, 307, 437, 286, 669, 1566, 1340, 4833, 51042], 'temperature': 0.0, 'avg_logprob': -0.20161051809051891, 'compression_ratio': 1.9014778325123152, 'no_speech_prob': 0.14397235214710236}, {'id': 59, 'seek': 34660, 'start': 360.16, 'end': 368.16, 'text': ' than the optimal size is unsafe what about the best solution the largest right the largest possible', 'tokens': [51042, 813, 264, 16252, 2744, 307, 35948, 437, 466, 264, 1151, 3827, 264, 6443, 558, 264, 6443, 1944, 51442], 'temperature': 0.0, 'avg_logprob': -0.20161051809051891, 'compression_ratio': 1.9014778325123152, 'no_speech_prob': 0.14397235214710236}, {'id': 60, 'seek': 34660, 'start': 368.16, 'end': 373.08000000000004, 'text': ' solution because it will enable me to do the most optimization larger than the largest would be', 'tokens': [51442, 3827, 570, 309, 486, 9528, 385, 281, 360, 264, 881, 19618, 4833, 813, 264, 6443, 576, 312, 51688], 'temperature': 0.0, 'avg_logprob': -0.20161051809051891, 'compression_ratio': 1.9014778325123152, 'no_speech_prob': 0.14397235214710236}, {'id': 61, 'seek': 37308, 'start': 373.08, 'end': 379.59999999999997, 'text': ' unsafe right. So, the solutions can be from you can say that nothing is available that is a solution', 'tokens': [50364, 35948, 558, 13, 407, 11, 264, 6547, 393, 312, 490, 291, 393, 584, 300, 1825, 307, 2435, 300, 307, 257, 3827, 50690], 'temperature': 0.0, 'avg_logprob': -0.15823292087864232, 'compression_ratio': 2.0208333333333335, 'no_speech_prob': 0.09520234912633896}, {'id': 62, 'seek': 37308, 'start': 379.59999999999997, 'end': 386.47999999999996, 'text': ' right I would I will not do the optimization anywhere that is ok that is safe right but', 'tokens': [50690, 558, 286, 576, 286, 486, 406, 360, 264, 19618, 4992, 300, 307, 3133, 300, 307, 3273, 558, 457, 51034], 'temperature': 0.0, 'avg_logprob': -0.15823292087864232, 'compression_ratio': 2.0208333333333335, 'no_speech_prob': 0.09520234912633896}, {'id': 63, 'seek': 37308, 'start': 386.47999999999996, 'end': 391.79999999999995, 'text': ' universal set is not safe because then I would say anything everything is computed and I do not', 'tokens': [51034, 11455, 992, 307, 406, 3273, 570, 550, 286, 576, 584, 1340, 1203, 307, 40610, 293, 286, 360, 406, 51300], 'temperature': 0.0, 'avg_logprob': -0.15823292087864232, 'compression_ratio': 2.0208333333333335, 'no_speech_prob': 0.09520234912633896}, {'id': 64, 'seek': 37308, 'start': 391.79999999999995, 'end': 395.24, 'text': ' need to do any computation at all then everything is wrong you have not done any computation at all', 'tokens': [51300, 643, 281, 360, 604, 24903, 412, 439, 550, 1203, 307, 2085, 291, 362, 406, 1096, 604, 24903, 412, 439, 51472], 'temperature': 0.0, 'avg_logprob': -0.15823292087864232, 'compression_ratio': 2.0208333333333335, 'no_speech_prob': 0.09520234912633896}, {'id': 65, 'seek': 37308, 'start': 395.24, 'end': 401.96, 'text': ' and you try to use use values which are not even computed. So, the so now we desire a solution which', 'tokens': [51472, 293, 291, 853, 281, 764, 764, 4190, 597, 366, 406, 754, 40610, 13, 407, 11, 264, 370, 586, 321, 7516, 257, 3827, 597, 51808], 'temperature': 0.0, 'avg_logprob': -0.15823292087864232, 'compression_ratio': 2.0208333333333335, 'no_speech_prob': 0.09520234912633896}, {'id': 66, 'seek': 40196, 'start': 401.96, 'end': 410.28, 'text': ' is the largest possible solution any solution beyond that the best solution is going to be bad', 'tokens': [50364, 307, 264, 6443, 1944, 3827, 604, 3827, 4399, 300, 264, 1151, 3827, 307, 516, 281, 312, 1578, 50780], 'temperature': 0.0, 'avg_logprob': -0.09432439906622773, 'compression_ratio': 1.8557692307692308, 'no_speech_prob': 0.007802841253578663}, {'id': 67, 'seek': 40196, 'start': 410.28, 'end': 415.79999999999995, 'text': ' is going to be unsafe that is not even a solution that is not even a correct solution the problem', 'tokens': [50780, 307, 516, 281, 312, 35948, 300, 307, 406, 754, 257, 3827, 300, 307, 406, 754, 257, 3006, 3827, 264, 1154, 51056], 'temperature': 0.0, 'avg_logprob': -0.09432439906622773, 'compression_ratio': 1.8557692307692308, 'no_speech_prob': 0.007802841253578663}, {'id': 68, 'seek': 40196, 'start': 415.79999999999995, 'end': 423.44, 'text': ' is I might assume here that say x plus y and x star y are available which was not the case right.', 'tokens': [51056, 307, 286, 1062, 6552, 510, 300, 584, 2031, 1804, 288, 293, 2031, 3543, 288, 366, 2435, 597, 390, 406, 264, 1389, 558, 13, 51438], 'temperature': 0.0, 'avg_logprob': -0.09432439906622773, 'compression_ratio': 1.8557692307692308, 'no_speech_prob': 0.007802841253578663}, {'id': 69, 'seek': 40196, 'start': 423.44, 'end': 429.79999999999995, 'text': ' So, then maybe there is a computation of d is equal to x star y then I will try to replace this', 'tokens': [51438, 407, 11, 550, 1310, 456, 307, 257, 24903, 295, 274, 307, 2681, 281, 2031, 3543, 288, 550, 286, 486, 853, 281, 7406, 341, 51756], 'temperature': 0.0, 'avg_logprob': -0.09432439906622773, 'compression_ratio': 1.8557692307692308, 'no_speech_prob': 0.007802841253578663}, {'id': 70, 'seek': 42980, 'start': 429.8, 'end': 433.72, 'text': ' x star y because I say that this is already available. So, I try to replace it by some h2', 'tokens': [50364, 2031, 3543, 288, 570, 286, 584, 300, 341, 307, 1217, 2435, 13, 407, 11, 286, 853, 281, 7406, 309, 538, 512, 276, 17, 50560], 'temperature': 0.0, 'avg_logprob': -0.1504359978895921, 'compression_ratio': 1.7735849056603774, 'no_speech_prob': 0.13211368024349213}, {'id': 71, 'seek': 42980, 'start': 433.72, 'end': 443.84000000000003, 'text': ' but then this one will be garbage because it was not even computed. So, let us say that it comes', 'tokens': [50560, 457, 550, 341, 472, 486, 312, 14150, 570, 309, 390, 406, 754, 40610, 13, 407, 11, 718, 505, 584, 300, 309, 1487, 51066], 'temperature': 0.0, 'avg_logprob': -0.1504359978895921, 'compression_ratio': 1.7735849056603774, 'no_speech_prob': 0.13211368024349213}, {'id': 72, 'seek': 42980, 'start': 443.84000000000003, 'end': 450.96000000000004, 'text': ' here maybe what happened was that there was a x star y here and I said h1 equals h star y. So,', 'tokens': [51066, 510, 1310, 437, 2011, 390, 300, 456, 390, 257, 2031, 3543, 288, 510, 293, 286, 848, 276, 16, 6915, 276, 3543, 288, 13, 407, 11, 51422], 'temperature': 0.0, 'avg_logprob': -0.1504359978895921, 'compression_ratio': 1.7735849056603774, 'no_speech_prob': 0.13211368024349213}, {'id': 73, 'seek': 42980, 'start': 450.96000000000004, 'end': 456.48, 'text': ' let us say the h was h1 was initially set to 0 initialized to 0 then it went here then it went', 'tokens': [51422, 718, 505, 584, 264, 276, 390, 276, 16, 390, 9105, 992, 281, 1958, 5883, 1602, 281, 1958, 550, 309, 1437, 510, 550, 309, 1437, 51698], 'temperature': 0.0, 'avg_logprob': -0.1504359978895921, 'compression_ratio': 1.7735849056603774, 'no_speech_prob': 0.13211368024349213}, {'id': 74, 'seek': 45648, 'start': 456.48, 'end': 463.16, 'text': ' here on this part it got computed to x star y on this part it never got computed right.', 'tokens': [50364, 510, 322, 341, 644, 309, 658, 40610, 281, 2031, 3543, 288, 322, 341, 644, 309, 1128, 658, 40610, 558, 13, 50698], 'temperature': 0.0, 'avg_logprob': -0.16122157152961283, 'compression_ratio': 1.7403846153846154, 'no_speech_prob': 0.1121993362903595}, {'id': 75, 'seek': 45648, 'start': 463.16, 'end': 469.8, 'text': ' But my available expression analysis is bad and it says that x plus y is available right. So,', 'tokens': [50698, 583, 452, 2435, 6114, 5215, 307, 1578, 293, 309, 1619, 300, 2031, 1804, 288, 307, 2435, 558, 13, 407, 11, 51030], 'temperature': 0.0, 'avg_logprob': -0.16122157152961283, 'compression_ratio': 1.7403846153846154, 'no_speech_prob': 0.1121993362903595}, {'id': 76, 'seek': 45648, 'start': 469.8, 'end': 475.08000000000004, 'text': ' I see it is available in h1 good I substitute with h1 which is wrong because along this path', 'tokens': [51030, 286, 536, 309, 307, 2435, 294, 276, 16, 665, 286, 15802, 365, 276, 16, 597, 307, 2085, 570, 2051, 341, 3100, 51294], 'temperature': 0.0, 'avg_logprob': -0.16122157152961283, 'compression_ratio': 1.7403846153846154, 'no_speech_prob': 0.1121993362903595}, {'id': 77, 'seek': 45648, 'start': 475.08000000000004, 'end': 483.48, 'text': ' there was no computation of that particular expression cannot be enough because what in', 'tokens': [51294, 456, 390, 572, 24903, 295, 300, 1729, 6114, 2644, 312, 1547, 570, 437, 294, 51714], 'temperature': 0.0, 'avg_logprob': -0.16122157152961283, 'compression_ratio': 1.7403846153846154, 'no_speech_prob': 0.1121993362903595}, {'id': 78, 'seek': 48348, 'start': 483.48, 'end': 496.88, 'text': ' the program executes along this path right then I then h is not even computed yes that is true', 'tokens': [50364, 264, 1461, 4454, 1819, 2051, 341, 3100, 558, 550, 286, 550, 276, 307, 406, 754, 40610, 2086, 300, 307, 2074, 51034], 'temperature': 0.0, 'avg_logprob': -0.2115466734942268, 'compression_ratio': 1.5555555555555556, 'no_speech_prob': 0.11262969672679901}, {'id': 79, 'seek': 48348, 'start': 496.88, 'end': 505.24, 'text': ' but so okay. So, one way to think about it is yeah by definition that is not an available', 'tokens': [51034, 457, 370, 1392, 13, 407, 11, 472, 636, 281, 519, 466, 309, 307, 1338, 538, 7123, 300, 307, 406, 364, 2435, 51452], 'temperature': 0.0, 'avg_logprob': -0.2115466734942268, 'compression_ratio': 1.5555555555555556, 'no_speech_prob': 0.11262969672679901}, {'id': 80, 'seek': 48348, 'start': 505.24, 'end': 512.36, 'text': ' expression but I am saying see whenever we were computing things we saw that there may not be a', 'tokens': [51452, 6114, 457, 286, 669, 1566, 536, 5699, 321, 645, 15866, 721, 321, 1866, 300, 456, 815, 406, 312, 257, 51808], 'temperature': 0.0, 'avg_logprob': -0.2115466734942268, 'compression_ratio': 1.5555555555555556, 'no_speech_prob': 0.11262969672679901}, {'id': 81, 'seek': 51236, 'start': 512.36, 'end': 518.44, 'text': ' unique solution there may be multiple solutions right. So, now I should have a way of saying just', 'tokens': [50364, 3845, 3827, 456, 815, 312, 3866, 6547, 558, 13, 407, 11, 586, 286, 820, 362, 257, 636, 295, 1566, 445, 50668], 'temperature': 0.0, 'avg_logprob': -0.08841374516487122, 'compression_ratio': 2.068421052631579, 'no_speech_prob': 0.05636652186512947}, {'id': 82, 'seek': 51236, 'start': 518.44, 'end': 524.5600000000001, 'text': ' picking an arbitrary assignment to my sets and we should be able to say that is it even a solution', 'tokens': [50668, 8867, 364, 23211, 15187, 281, 452, 6352, 293, 321, 820, 312, 1075, 281, 584, 300, 307, 309, 754, 257, 3827, 50974], 'temperature': 0.0, 'avg_logprob': -0.08841374516487122, 'compression_ratio': 2.068421052631579, 'no_speech_prob': 0.05636652186512947}, {'id': 83, 'seek': 51236, 'start': 524.5600000000001, 'end': 532.16, 'text': ' which means that is it a sound solution or is it not a solution or it is a extra solution or a bad', 'tokens': [50974, 597, 1355, 300, 307, 309, 257, 1626, 3827, 420, 307, 309, 406, 257, 3827, 420, 309, 307, 257, 2857, 3827, 420, 257, 1578, 51354], 'temperature': 0.0, 'avg_logprob': -0.08841374516487122, 'compression_ratio': 2.068421052631579, 'no_speech_prob': 0.05636652186512947}, {'id': 84, 'seek': 51236, 'start': 532.16, 'end': 541.84, 'text': ' solution right. So, I should be able to say it is not a solution or not a sound solution I should', 'tokens': [51354, 3827, 558, 13, 407, 11, 286, 820, 312, 1075, 281, 584, 309, 307, 406, 257, 3827, 420, 406, 257, 1626, 3827, 286, 820, 51838], 'temperature': 0.0, 'avg_logprob': -0.08841374516487122, 'compression_ratio': 2.068421052631579, 'no_speech_prob': 0.05636652186512947}, {'id': 85, 'seek': 54184, 'start': 541.84, 'end': 550.48, 'text': ' be able to say that it is the right solution or it is a bad solution. So, I am trying to classify', 'tokens': [50364, 312, 1075, 281, 584, 300, 309, 307, 264, 558, 3827, 420, 309, 307, 257, 1578, 3827, 13, 407, 11, 286, 669, 1382, 281, 33872, 50796], 'temperature': 0.0, 'avg_logprob': -0.09833087921142578, 'compression_ratio': 1.832535885167464, 'no_speech_prob': 0.004597044549882412}, {'id': 86, 'seek': 54184, 'start': 550.48, 'end': 556.76, 'text': ' these three things right. So, a bad solution is a solution which is fine but it will inhibit your', 'tokens': [50796, 613, 1045, 721, 558, 13, 407, 11, 257, 1578, 3827, 307, 257, 3827, 597, 307, 2489, 457, 309, 486, 49858, 428, 51110], 'temperature': 0.0, 'avg_logprob': -0.09833087921142578, 'compression_ratio': 1.832535885167464, 'no_speech_prob': 0.004597044549882412}, {'id': 87, 'seek': 54184, 'start': 556.76, 'end': 565.2800000000001, 'text': ' optimizations right. So, if you remove something from the available expression set that is fine', 'tokens': [51110, 5028, 14455, 558, 13, 407, 11, 498, 291, 4159, 746, 490, 264, 2435, 6114, 992, 300, 307, 2489, 51536], 'temperature': 0.0, 'avg_logprob': -0.09833087921142578, 'compression_ratio': 1.832535885167464, 'no_speech_prob': 0.004597044549882412}, {'id': 88, 'seek': 54184, 'start': 565.2800000000001, 'end': 570.6, 'text': ' why is that fine you will say that let us say x plus 1 was available but you said it is not', 'tokens': [51536, 983, 307, 300, 2489, 291, 486, 584, 300, 718, 505, 584, 2031, 1804, 502, 390, 2435, 457, 291, 848, 309, 307, 406, 51802], 'temperature': 0.0, 'avg_logprob': -0.09833087921142578, 'compression_ratio': 1.832535885167464, 'no_speech_prob': 0.004597044549882412}, {'id': 89, 'seek': 57060, 'start': 570.6, 'end': 574.84, 'text': ' available you have a smaller set then what will happen you will not do this optimization you will', 'tokens': [50364, 2435, 291, 362, 257, 4356, 992, 550, 437, 486, 1051, 291, 486, 406, 360, 341, 19618, 291, 486, 50576], 'temperature': 0.0, 'avg_logprob': -0.16970269339425223, 'compression_ratio': 1.817490494296578, 'no_speech_prob': 0.027796611189842224}, {'id': 90, 'seek': 57060, 'start': 574.84, 'end': 580.76, 'text': ' not do this replacement I lost opportunity but I did not harm anything now I mean my program', 'tokens': [50576, 406, 360, 341, 14419, 286, 2731, 2650, 457, 286, 630, 406, 6491, 1340, 586, 286, 914, 452, 1461, 50872], 'temperature': 0.0, 'avg_logprob': -0.16970269339425223, 'compression_ratio': 1.817490494296578, 'no_speech_prob': 0.027796611189842224}, {'id': 91, 'seek': 57060, 'start': 580.76, 'end': 585.72, 'text': ' is still run correctly but the dangerous part is if I extend the solution with something which', 'tokens': [50872, 307, 920, 1190, 8944, 457, 264, 5795, 644, 307, 498, 286, 10101, 264, 3827, 365, 746, 597, 51120], 'temperature': 0.0, 'avg_logprob': -0.16970269339425223, 'compression_ratio': 1.817490494296578, 'no_speech_prob': 0.027796611189842224}, {'id': 92, 'seek': 57060, 'start': 585.72, 'end': 591.6, 'text': ' was not even available if I extend it by x star y that is a dangerous case because then I would', 'tokens': [51120, 390, 406, 754, 2435, 498, 286, 10101, 309, 538, 2031, 3543, 288, 300, 307, 257, 5795, 1389, 570, 550, 286, 576, 51414], 'temperature': 0.0, 'avg_logprob': -0.16970269339425223, 'compression_ratio': 1.817490494296578, 'no_speech_prob': 0.027796611189842224}, {'id': 93, 'seek': 57060, 'start': 591.6, 'end': 598.44, 'text': ' start doing replacements of things which are not even computed. So, whenever any sequence set of', 'tokens': [51414, 722, 884, 3248, 41140, 295, 721, 597, 366, 406, 754, 40610, 13, 407, 11, 5699, 604, 8310, 992, 295, 51756], 'temperature': 0.0, 'avg_logprob': -0.16970269339425223, 'compression_ratio': 1.817490494296578, 'no_speech_prob': 0.027796611189842224}, {'id': 94, 'seek': 59844, 'start': 598.44, 'end': 602.7600000000001, 'text': ' equations has multiple solutions that question is always there that what is which one is the', 'tokens': [50364, 11787, 575, 3866, 6547, 300, 1168, 307, 1009, 456, 300, 437, 307, 597, 472, 307, 264, 50580], 'temperature': 0.0, 'avg_logprob': -0.1699289453440699, 'compression_ratio': 2.33, 'no_speech_prob': 0.02671533264219761}, {'id': 95, 'seek': 59844, 'start': 602.7600000000001, 'end': 607.5600000000001, 'text': ' right solution see the problem is that there is a engineering problem right at the beginning there', 'tokens': [50580, 558, 3827, 536, 264, 1154, 307, 300, 456, 307, 257, 7043, 1154, 558, 412, 264, 2863, 456, 50820], 'temperature': 0.0, 'avg_logprob': -0.1699289453440699, 'compression_ratio': 2.33, 'no_speech_prob': 0.02671533264219761}, {'id': 96, 'seek': 59844, 'start': 607.5600000000001, 'end': 613.2800000000001, 'text': ' is a engineering problem you translate that into a mathematical formulation to a mathematical', 'tokens': [50820, 307, 257, 7043, 1154, 291, 13799, 300, 666, 257, 18894, 37642, 281, 257, 18894, 51106], 'temperature': 0.0, 'avg_logprob': -0.1699289453440699, 'compression_ratio': 2.33, 'no_speech_prob': 0.02671533264219761}, {'id': 97, 'seek': 59844, 'start': 613.2800000000001, 'end': 618.6800000000001, 'text': ' form mathematical problem right. Now when you are analyzing this mathematical problem this', 'tokens': [51106, 1254, 18894, 1154, 558, 13, 823, 562, 291, 366, 23663, 341, 18894, 1154, 341, 51376], 'temperature': 0.0, 'avg_logprob': -0.1699289453440699, 'compression_ratio': 2.33, 'no_speech_prob': 0.02671533264219761}, {'id': 98, 'seek': 59844, 'start': 618.6800000000001, 'end': 623.4000000000001, 'text': ' mathematical problem can allow for multiple solutions right but all the solutions may not', 'tokens': [51376, 18894, 1154, 393, 2089, 337, 3866, 6547, 558, 457, 439, 264, 6547, 815, 406, 51612], 'temperature': 0.0, 'avg_logprob': -0.1699289453440699, 'compression_ratio': 2.33, 'no_speech_prob': 0.02671533264219761}, {'id': 99, 'seek': 62340, 'start': 623.4, 'end': 628.36, 'text': ' be the right solution for the engineering problem right so there is this modeling step', 'tokens': [50364, 312, 264, 558, 3827, 337, 264, 7043, 1154, 558, 370, 456, 307, 341, 15983, 1823, 50612], 'temperature': 0.0, 'avg_logprob': -0.19867730140686035, 'compression_ratio': 2.0105263157894737, 'no_speech_prob': 0.18686836957931519}, {'id': 100, 'seek': 62340, 'start': 628.36, 'end': 635.16, 'text': ' where you model engineering problem into mathematical problem right. So, the multiple solution business', 'tokens': [50612, 689, 291, 2316, 7043, 1154, 666, 18894, 1154, 558, 13, 407, 11, 264, 3866, 3827, 1606, 50952], 'temperature': 0.0, 'avg_logprob': -0.19867730140686035, 'compression_ratio': 2.0105263157894737, 'no_speech_prob': 0.18686836957931519}, {'id': 101, 'seek': 62340, 'start': 635.16, 'end': 638.68, 'text': ' I am talking about in this mathematical space which does not know what was the original problem', 'tokens': [50952, 286, 669, 1417, 466, 294, 341, 18894, 1901, 597, 775, 406, 458, 437, 390, 264, 3380, 1154, 51128], 'temperature': 0.0, 'avg_logprob': -0.19867730140686035, 'compression_ratio': 2.0105263157894737, 'no_speech_prob': 0.18686836957931519}, {'id': 102, 'seek': 62340, 'start': 638.68, 'end': 642.76, 'text': ' I came from it does not know are you doing digital information are you doing our available', 'tokens': [51128, 286, 1361, 490, 309, 775, 406, 458, 366, 291, 884, 4562, 1589, 366, 291, 884, 527, 2435, 51332], 'temperature': 0.0, 'avg_logprob': -0.19867730140686035, 'compression_ratio': 2.0105263157894737, 'no_speech_prob': 0.18686836957931519}, {'id': 103, 'seek': 62340, 'start': 642.76, 'end': 646.48, 'text': ' expression the machinery is the same for all of them you give it to the solver fixed point solver', 'tokens': [51332, 6114, 264, 27302, 307, 264, 912, 337, 439, 295, 552, 291, 976, 309, 281, 264, 1404, 331, 6806, 935, 1404, 331, 51518], 'temperature': 0.0, 'avg_logprob': -0.19867730140686035, 'compression_ratio': 2.0105263157894737, 'no_speech_prob': 0.18686836957931519}, {'id': 104, 'seek': 62340, 'start': 646.48, 'end': 650.48, 'text': ' it will compute something and give you the result back it does not know which one is the best one', 'tokens': [51518, 309, 486, 14722, 746, 293, 976, 291, 264, 1874, 646, 309, 775, 406, 458, 597, 472, 307, 264, 1151, 472, 51718], 'temperature': 0.0, 'avg_logprob': -0.19867730140686035, 'compression_ratio': 2.0105263157894737, 'no_speech_prob': 0.18686836957931519}, {'id': 105, 'seek': 65048, 'start': 650.72, 'end': 655.44, 'text': ' so you have to tell it that okay give me a solution which is the optimal solution is best in this', 'tokens': [50376, 370, 291, 362, 281, 980, 309, 300, 1392, 976, 385, 257, 3827, 597, 307, 264, 16252, 3827, 307, 1151, 294, 341, 50612], 'temperature': 0.0, 'avg_logprob': -0.20625100816999162, 'compression_ratio': 1.9098360655737705, 'no_speech_prob': 0.10644816607236862}, {'id': 106, 'seek': 65048, 'start': 655.44, 'end': 660.72, 'text': ' time you tell me again why did we want that what was the optimization we were trying to do with', 'tokens': [50612, 565, 291, 980, 385, 797, 983, 630, 321, 528, 300, 437, 390, 264, 19618, 321, 645, 1382, 281, 360, 365, 50876], 'temperature': 0.0, 'avg_logprob': -0.20625100816999162, 'compression_ratio': 1.9098360655737705, 'no_speech_prob': 0.10644816607236862}, {'id': 107, 'seek': 65048, 'start': 660.72, 'end': 666.9200000000001, 'text': ' that yes when can we replace it when it is a singleton set anything bigger than a singleton', 'tokens': [50876, 300, 2086, 562, 393, 321, 7406, 309, 562, 309, 307, 257, 1522, 14806, 992, 1340, 3801, 813, 257, 1522, 14806, 51186], 'temperature': 0.0, 'avg_logprob': -0.20625100816999162, 'compression_ratio': 1.9098360655737705, 'no_speech_prob': 0.10644816607236862}, {'id': 108, 'seek': 65048, 'start': 666.9200000000001, 'end': 674.36, 'text': ' set we would not have been able to do it now here we are doing the other way around we are', 'tokens': [51186, 992, 321, 576, 406, 362, 668, 1075, 281, 360, 309, 586, 510, 321, 366, 884, 264, 661, 636, 926, 321, 366, 51558], 'temperature': 0.0, 'avg_logprob': -0.20625100816999162, 'compression_ratio': 1.9098360655737705, 'no_speech_prob': 0.10644816607236862}, {'id': 109, 'seek': 65048, 'start': 674.36, 'end': 679.12, 'text': ' this is a all path solution all path problem right we say something is available if it is', 'tokens': [51558, 341, 307, 257, 439, 3100, 3827, 439, 3100, 1154, 558, 321, 584, 746, 307, 2435, 498, 309, 307, 51796], 'temperature': 0.0, 'avg_logprob': -0.20625100816999162, 'compression_ratio': 1.9098360655737705, 'no_speech_prob': 0.10644816607236862}, {'id': 110, 'seek': 67912, 'start': 679.12, 'end': 685.84, 'text': ' available along all paths right reaching definition was any path problem right we say something is', 'tokens': [50364, 2435, 2051, 439, 14518, 558, 9906, 7123, 390, 604, 3100, 1154, 558, 321, 584, 746, 307, 50700], 'temperature': 0.0, 'avg_logprob': -0.1732891597104876, 'compression_ratio': 2.0366492146596857, 'no_speech_prob': 0.005375448148697615}, {'id': 111, 'seek': 67912, 'start': 685.84, 'end': 694.52, 'text': ' reachable if it is reaches to any path right so here what we want to do is I do not want to see', 'tokens': [50700, 2524, 712, 498, 309, 307, 14235, 281, 604, 3100, 558, 370, 510, 437, 321, 528, 281, 360, 307, 286, 360, 406, 528, 281, 536, 51134], 'temperature': 0.0, 'avg_logprob': -0.1732891597104876, 'compression_ratio': 2.0366492146596857, 'no_speech_prob': 0.005375448148697615}, {'id': 112, 'seek': 67912, 'start': 694.52, 'end': 699.2, 'text': ' in this all path problem essentially we can say something is available if my if along all paths', 'tokens': [51134, 294, 341, 439, 3100, 1154, 4476, 321, 393, 584, 746, 307, 2435, 498, 452, 498, 2051, 439, 14518, 51368], 'temperature': 0.0, 'avg_logprob': -0.1732891597104876, 'compression_ratio': 2.0366492146596857, 'no_speech_prob': 0.005375448148697615}, {'id': 113, 'seek': 67912, 'start': 699.2, 'end': 706.92, 'text': ' I get that expression if I miss any one path that is no more unavailable expression so had it been', 'tokens': [51368, 286, 483, 300, 6114, 498, 286, 1713, 604, 472, 3100, 300, 307, 572, 544, 36541, 32699, 6114, 370, 632, 309, 668, 51754], 'temperature': 0.0, 'avg_logprob': -0.1732891597104876, 'compression_ratio': 2.0366492146596857, 'no_speech_prob': 0.005375448148697615}, {'id': 114, 'seek': 70692, 'start': 706.92, 'end': 713.28, 'text': ' the case that I there is one path one path I miss that solution in that case that optimization', 'tokens': [50364, 264, 1389, 300, 286, 456, 307, 472, 3100, 472, 3100, 286, 1713, 300, 3827, 294, 300, 1389, 300, 19618, 50682], 'temperature': 0.0, 'avg_logprob': -0.16391607284545898, 'compression_ratio': 1.9406779661016949, 'no_speech_prob': 0.030198222026228905}, {'id': 115, 'seek': 70692, 'start': 713.28, 'end': 716.64, 'text': ' may not be possible I may not be able to do that optimization because my set size is not', 'tokens': [50682, 815, 406, 312, 1944, 286, 815, 406, 312, 1075, 281, 360, 300, 19618, 570, 452, 992, 2744, 307, 406, 50850], 'temperature': 0.0, 'avg_logprob': -0.16391607284545898, 'compression_ratio': 1.9406779661016949, 'no_speech_prob': 0.030198222026228905}, {'id': 116, 'seek': 70692, 'start': 716.64, 'end': 724.12, 'text': ' the optimal set do we get this so this is confusing now your brain will get twisted because', 'tokens': [50850, 264, 16252, 992, 360, 321, 483, 341, 370, 341, 307, 13181, 586, 428, 3567, 486, 483, 23057, 570, 51224], 'temperature': 0.0, 'avg_logprob': -0.16391607284545898, 'compression_ratio': 1.9406779661016949, 'no_speech_prob': 0.030198222026228905}, {'id': 117, 'seek': 70692, 'start': 724.12, 'end': 729.4399999999999, 'text': " these four are like this that's why these are called these four classical problems and any", 'tokens': [51224, 613, 1451, 366, 411, 341, 300, 311, 983, 613, 366, 1219, 613, 1451, 13735, 2740, 293, 604, 51490], 'temperature': 0.0, 'avg_logprob': -0.16391607284545898, 'compression_ratio': 1.9406779661016949, 'no_speech_prob': 0.030198222026228905}, {'id': 118, 'seek': 70692, 'start': 729.4399999999999, 'end': 733.68, 'text': ' data flow analysis you see they will always start talking about these four problems because', 'tokens': [51490, 1412, 3095, 5215, 291, 536, 436, 486, 1009, 722, 1417, 466, 613, 1451, 2740, 570, 51702], 'temperature': 0.0, 'avg_logprob': -0.16391607284545898, 'compression_ratio': 1.9406779661016949, 'no_speech_prob': 0.030198222026228905}, {'id': 119, 'seek': 73368, 'start': 733.68, 'end': 740.5999999999999, 'text': ' like they like they try to really twist our brain around in a big way because these are four two', 'tokens': [50364, 411, 436, 411, 436, 853, 281, 534, 8203, 527, 3567, 926, 294, 257, 955, 636, 570, 613, 366, 1451, 732, 50710], 'temperature': 0.0, 'avg_logprob': -0.16420613565752584, 'compression_ratio': 1.8695652173913044, 'no_speech_prob': 0.013717497698962688}, {'id': 120, 'seek': 73368, 'start': 740.5999999999999, 'end': 746.92, 'text': ' of them in forward two of them back two of them are all two of them are any right so you get all', 'tokens': [50710, 295, 552, 294, 2128, 732, 295, 552, 646, 732, 295, 552, 366, 439, 732, 295, 552, 366, 604, 558, 370, 291, 483, 439, 51026], 'temperature': 0.0, 'avg_logprob': -0.16420613565752584, 'compression_ratio': 1.8695652173913044, 'no_speech_prob': 0.013717497698962688}, {'id': 121, 'seek': 73368, 'start': 746.92, 'end': 751.4799999999999, 'text': ' the combinations so that is why it becomes so you have to keep on thinking which is the largest', 'tokens': [51026, 264, 21267, 370, 300, 307, 983, 309, 3643, 370, 291, 362, 281, 1066, 322, 1953, 597, 307, 264, 6443, 51254], 'temperature': 0.0, 'avg_logprob': -0.16420613565752584, 'compression_ratio': 1.8695652173913044, 'no_speech_prob': 0.013717497698962688}, {'id': 122, 'seek': 73368, 'start': 751.4799999999999, 'end': 756.8399999999999, 'text': ' which is the smallest which case what happens are we good with this okay so let us go to the next', 'tokens': [51254, 597, 307, 264, 16998, 597, 1389, 437, 2314, 366, 321, 665, 365, 341, 1392, 370, 718, 505, 352, 281, 264, 958, 51522], 'temperature': 0.0, 'avg_logprob': -0.16420613565752584, 'compression_ratio': 1.8695652173913044, 'no_speech_prob': 0.013717497698962688}, {'id': 123, 'seek': 75684, 'start': 756.84, 'end': 765.48, 'text': ' one so here the I am sure you guys can write these equations now right again in this case', 'tokens': [50364, 472, 370, 510, 264, 286, 669, 988, 291, 1074, 393, 2464, 613, 11787, 586, 558, 797, 294, 341, 1389, 50796], 'temperature': 0.0, 'avg_logprob': -0.14804814353821769, 'compression_ratio': 1.6766467065868262, 'no_speech_prob': 0.15988102555274963}, {'id': 124, 'seek': 75684, 'start': 765.48, 'end': 771.36, 'text': ' what is my initialization for all basic blocks I start with the universal solution universal', 'tokens': [50796, 437, 307, 452, 5883, 2144, 337, 439, 3875, 8474, 286, 722, 365, 264, 11455, 3827, 11455, 51090], 'temperature': 0.0, 'avg_logprob': -0.14804814353821769, 'compression_ratio': 1.6766467065868262, 'no_speech_prob': 0.15988102555274963}, {'id': 125, 'seek': 75684, 'start': 771.36, 'end': 778.76, 'text': ' set why is that it is a solution in some cases not always no but your initialization is different', 'tokens': [51090, 992, 983, 307, 300, 309, 307, 257, 3827, 294, 512, 3331, 406, 1009, 572, 457, 428, 5883, 2144, 307, 819, 51460], 'temperature': 0.0, 'avg_logprob': -0.14804814353821769, 'compression_ratio': 1.6766467065868262, 'no_speech_prob': 0.15988102555274963}, {'id': 126, 'seek': 77876, 'start': 778.76, 'end': 786.4399999999999, 'text': ' right so initialization of your will it work for all cases at the beginning the initialize', 'tokens': [50364, 558, 370, 5883, 2144, 295, 428, 486, 309, 589, 337, 439, 3331, 412, 264, 2863, 264, 5883, 1125, 50748], 'temperature': 0.0, 'avg_logprob': -0.17629940807819366, 'compression_ratio': 1.716867469879518, 'no_speech_prob': 0.02926303632557392}, {'id': 127, 'seek': 77876, 'start': 786.4399999999999, 'end': 793.24, 'text': ' your initial set is empty no but still something will become available and that will seep in right', 'tokens': [50748, 428, 5883, 992, 307, 6707, 572, 457, 920, 746, 486, 1813, 2435, 293, 300, 486, 536, 79, 294, 558, 51088], 'temperature': 0.0, 'avg_logprob': -0.17629940807819366, 'compression_ratio': 1.716867469879518, 'no_speech_prob': 0.02926303632557392}, {'id': 128, 'seek': 77876, 'start': 793.24, 'end': 799.3199999999999, 'text': ' so think about the case like you have x equals y plus z then something will get generated right', 'tokens': [51088, 370, 519, 466, 264, 1389, 411, 291, 362, 2031, 6915, 288, 1804, 710, 550, 746, 486, 483, 10833, 558, 51392], 'temperature': 0.0, 'avg_logprob': -0.17629940807819366, 'compression_ratio': 1.716867469879518, 'no_speech_prob': 0.02926303632557392}, {'id': 129, 'seek': 79932, 'start': 799.32, 'end': 809.1600000000001, 'text': ' so gents will be there but it can be yes yes so essentially one way to think about it is that', 'tokens': [50364, 370, 290, 791, 486, 312, 456, 457, 309, 393, 312, 2086, 2086, 370, 4476, 472, 636, 281, 519, 466, 309, 307, 300, 50856], 'temperature': 0.0, 'avg_logprob': -0.12192608759953426, 'compression_ratio': 2.081447963800905, 'no_speech_prob': 0.06740091741085052}, {'id': 130, 'seek': 79932, 'start': 809.1600000000001, 'end': 813.2800000000001, 'text': ' you should not start from a point which is a potential solution start from point which', 'tokens': [50856, 291, 820, 406, 722, 490, 257, 935, 597, 307, 257, 3995, 3827, 722, 490, 935, 597, 51062], 'temperature': 0.0, 'avg_logprob': -0.12192608759953426, 'compression_ratio': 2.081447963800905, 'no_speech_prob': 0.06740091741085052}, {'id': 131, 'seek': 79932, 'start': 813.2800000000001, 'end': 818.88, 'text': ' is not a solution right remember anything larger it was not a solution was not a safe solution so', 'tokens': [51062, 307, 406, 257, 3827, 558, 1604, 1340, 4833, 309, 390, 406, 257, 3827, 390, 406, 257, 3273, 3827, 370, 51342], 'temperature': 0.0, 'avg_logprob': -0.12192608759953426, 'compression_ratio': 2.081447963800905, 'no_speech_prob': 0.06740091741085052}, {'id': 132, 'seek': 79932, 'start': 818.88, 'end': 823.7600000000001, 'text': ' it was not a solution allowed by the system equations right so if you start with that the', 'tokens': [51342, 309, 390, 406, 257, 3827, 4350, 538, 264, 1185, 11787, 558, 370, 498, 291, 722, 365, 300, 264, 51586], 'temperature': 0.0, 'avg_logprob': -0.12192608759953426, 'compression_ratio': 2.081447963800905, 'no_speech_prob': 0.06740091741085052}, {'id': 133, 'seek': 79932, 'start': 823.7600000000001, 'end': 828.2800000000001, 'text': ' system will do something and reach a solution and hopefully we are hoping that we reach the', 'tokens': [51586, 1185, 486, 360, 746, 293, 2524, 257, 3827, 293, 4696, 321, 366, 7159, 300, 321, 2524, 264, 51812], 'temperature': 0.0, 'avg_logprob': -0.12192608759953426, 'compression_ratio': 2.081447963800905, 'no_speech_prob': 0.06740091741085052}, {'id': 134, 'seek': 82828, 'start': 828.28, 'end': 833.24, 'text': ' best solution which you do not know why should it reach the best solution but looks like think', 'tokens': [50364, 1151, 3827, 597, 291, 360, 406, 458, 983, 820, 309, 2524, 264, 1151, 3827, 457, 1542, 411, 519, 50612], 'temperature': 0.0, 'avg_logprob': -0.22836259482563406, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.015873588621616364}, {'id': 135, 'seek': 82828, 'start': 833.24, 'end': 841.9599999999999, 'text': ' that it does so you guys are going to work it out right ok so next now quickly move to the next one', 'tokens': [50612, 300, 309, 775, 370, 291, 1074, 366, 516, 281, 589, 309, 484, 558, 3133, 370, 958, 586, 2661, 1286, 281, 264, 958, 472, 51048], 'temperature': 0.0, 'avg_logprob': -0.22836259482563406, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.015873588621616364}, {'id': 136, 'seek': 82828, 'start': 841.9599999999999, 'end': 850.04, 'text': ' but you guys should go back and think about it as slightly more deeply like what is going on ok', 'tokens': [51048, 457, 291, 1074, 820, 352, 646, 293, 519, 466, 309, 382, 4748, 544, 8760, 411, 437, 307, 516, 322, 3133, 51452], 'temperature': 0.0, 'avg_logprob': -0.22836259482563406, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.015873588621616364}, {'id': 137, 'seek': 85004, 'start': 850.04, 'end': 859.36, 'text': ' live variable analysis so live variable analysis is the same business so this is the summary so', 'tokens': [50364, 1621, 7006, 5215, 370, 1621, 7006, 5215, 307, 264, 912, 1606, 370, 341, 307, 264, 12691, 370, 50830], 'temperature': 0.0, 'avg_logprob': -0.1514204776648319, 'compression_ratio': 1.9215686274509804, 'no_speech_prob': 0.7405753135681152}, {'id': 138, 'seek': 85004, 'start': 859.36, 'end': 868.48, 'text': ' you have in this case it is a backward direction problem and it is a any path problem so a variable', 'tokens': [50830, 291, 362, 294, 341, 1389, 309, 307, 257, 23897, 3513, 1154, 293, 309, 307, 257, 604, 3100, 1154, 370, 257, 7006, 51286], 'temperature': 0.0, 'avg_logprob': -0.1514204776648319, 'compression_ratio': 1.9215686274509804, 'no_speech_prob': 0.7405753135681152}, {'id': 139, 'seek': 85004, 'start': 868.48, 'end': 877.8, 'text': ' is live if it is live along any path right so the analysis the transfer function and the meter you', 'tokens': [51286, 307, 1621, 498, 309, 307, 1621, 2051, 604, 3100, 558, 370, 264, 5215, 264, 5003, 2445, 293, 264, 9255, 291, 51752], 'temperature': 0.0, 'avg_logprob': -0.1514204776648319, 'compression_ratio': 1.9215686274509804, 'no_speech_prob': 0.7405753135681152}, {'id': 140, 'seek': 87780, 'start': 877.8, 'end': 883.24, 'text': ' can understand and in this case we would like the smallest possible solution why is that again', 'tokens': [50364, 393, 1223, 293, 294, 341, 1389, 321, 576, 411, 264, 16998, 1944, 3827, 983, 307, 300, 797, 50636], 'temperature': 0.0, 'avg_logprob': -0.14834675496938277, 'compression_ratio': 2.08675799086758, 'no_speech_prob': 0.06707768142223358}, {'id': 141, 'seek': 87780, 'start': 883.24, 'end': 888.3199999999999, 'text': ' what is optimization we are doing with live variable analysis dead code elimination right', 'tokens': [50636, 437, 307, 19618, 321, 366, 884, 365, 1621, 7006, 5215, 3116, 3089, 29224, 558, 50890], 'temperature': 0.0, 'avg_logprob': -0.14834675496938277, 'compression_ratio': 2.08675799086758, 'no_speech_prob': 0.06707768142223358}, {'id': 142, 'seek': 87780, 'start': 888.3199999999999, 'end': 896.0, 'text': ' so smaller is the set of live variables the more are the dead variables if more are the dead', 'tokens': [50890, 370, 4356, 307, 264, 992, 295, 1621, 9102, 264, 544, 366, 264, 3116, 9102, 498, 544, 366, 264, 3116, 51274], 'temperature': 0.0, 'avg_logprob': -0.14834675496938277, 'compression_ratio': 2.08675799086758, 'no_speech_prob': 0.06707768142223358}, {'id': 143, 'seek': 87780, 'start': 896.0, 'end': 901.4, 'text': ' variables I can do more dead code elimination I can do the optimization more and what will be', 'tokens': [51274, 9102, 286, 393, 360, 544, 3116, 3089, 29224, 286, 393, 360, 264, 19618, 544, 293, 437, 486, 312, 51544], 'temperature': 0.0, 'avg_logprob': -0.14834675496938277, 'compression_ratio': 2.08675799086758, 'no_speech_prob': 0.06707768142223358}, {'id': 144, 'seek': 87780, 'start': 901.4, 'end': 906.92, 'text': ' a bad solution yeah so if I have more dead variables then what was allowed or my live', 'tokens': [51544, 257, 1578, 3827, 1338, 370, 498, 286, 362, 544, 3116, 9102, 550, 437, 390, 4350, 420, 452, 1621, 51820], 'temperature': 0.0, 'avg_logprob': -0.14834675496938277, 'compression_ratio': 2.08675799086758, 'no_speech_prob': 0.06707768142223358}, {'id': 145, 'seek': 90692, 'start': 906.92, 'end': 913.52, 'text': ' variable set is smaller right then I have a problem because I eliminate statements which', 'tokens': [50364, 7006, 992, 307, 4356, 558, 550, 286, 362, 257, 1154, 570, 286, 13819, 12363, 597, 50694], 'temperature': 0.0, 'avg_logprob': -0.15270317577924886, 'compression_ratio': 1.6449704142011834, 'no_speech_prob': 0.012761122547090054}, {'id': 146, 'seek': 90692, 'start': 913.52, 'end': 920.16, 'text': ' have uses which are going to be used later those I will remove that is dangerous that will make', 'tokens': [50694, 362, 4960, 597, 366, 516, 281, 312, 1143, 1780, 729, 286, 486, 4159, 300, 307, 5795, 300, 486, 652, 51026], 'temperature': 0.0, 'avg_logprob': -0.15270317577924886, 'compression_ratio': 1.6449704142011834, 'no_speech_prob': 0.012761122547090054}, {'id': 147, 'seek': 90692, 'start': 920.16, 'end': 929.76, 'text': ' the program go wrong agree cool so that is done so last is very busy expressions so very busy', 'tokens': [51026, 264, 1461, 352, 2085, 3986, 1627, 370, 300, 307, 1096, 370, 1036, 307, 588, 5856, 15277, 370, 588, 5856, 51506], 'temperature': 0.0, 'avg_logprob': -0.15270317577924886, 'compression_ratio': 1.6449704142011834, 'no_speech_prob': 0.012761122547090054}, {'id': 148, 'seek': 92976, 'start': 929.76, 'end': 937.04, 'text': ' expressions let us now just go down to the definition ok so in this case again I am sure', 'tokens': [50364, 15277, 718, 505, 586, 445, 352, 760, 281, 264, 7123, 3133, 370, 294, 341, 1389, 797, 286, 669, 988, 50728], 'temperature': 0.0, 'avg_logprob': -0.1404571533203125, 'compression_ratio': 1.7715736040609138, 'no_speech_prob': 0.21021339297294617}, {'id': 149, 'seek': 92976, 'start': 937.04, 'end': 940.92, 'text': ' you can understand this you can figure out the reason for this it is a backward analysis', 'tokens': [50728, 291, 393, 1223, 341, 291, 393, 2573, 484, 264, 1778, 337, 341, 309, 307, 257, 23897, 5215, 50922], 'temperature': 0.0, 'avg_logprob': -0.1404571533203125, 'compression_ratio': 1.7715736040609138, 'no_speech_prob': 0.21021339297294617}, {'id': 150, 'seek': 92976, 'start': 940.92, 'end': 950.68, 'text': ' and it is a any path or all path so it is an all path analysis this case we need the', 'tokens': [50922, 293, 309, 307, 257, 604, 3100, 420, 439, 3100, 370, 309, 307, 364, 439, 3100, 5215, 341, 1389, 321, 643, 264, 51410], 'temperature': 0.0, 'avg_logprob': -0.1404571533203125, 'compression_ratio': 1.7715736040609138, 'no_speech_prob': 0.21021339297294617}, {'id': 151, 'seek': 92976, 'start': 950.68, 'end': 955.48, 'text': ' largest solution why what was the optimization we are doing with very busy expressions', 'tokens': [51410, 6443, 3827, 983, 437, 390, 264, 19618, 321, 366, 884, 365, 588, 5856, 15277, 51650], 'temperature': 0.0, 'avg_logprob': -0.1404571533203125, 'compression_ratio': 1.7715736040609138, 'no_speech_prob': 0.21021339297294617}, {'id': 152, 'seek': 95976, 'start': 960.28, 'end': 972.52, 'text': ' right so why do we need it to be largest more wasting I can do more code I can move to the', 'tokens': [50390, 558, 370, 983, 360, 321, 643, 309, 281, 312, 6443, 544, 20457, 286, 393, 360, 544, 3089, 286, 393, 1286, 281, 264, 51002], 'temperature': 0.0, 'avg_logprob': -0.20403568561260516, 'compression_ratio': 1.7515923566878981, 'no_speech_prob': 0.01855001412332058}, {'id': 153, 'seek': 95976, 'start': 972.52, 'end': 979.08, 'text': ' earlier blocks right bigger is the set more is the more variables more expressions I can waste up', 'tokens': [51002, 3071, 8474, 558, 3801, 307, 264, 992, 544, 307, 264, 544, 9102, 544, 15277, 286, 393, 5964, 493, 51330], 'temperature': 0.0, 'avg_logprob': -0.20403568561260516, 'compression_ratio': 1.7515923566878981, 'no_speech_prob': 0.01855001412332058}, {'id': 154, 'seek': 95976, 'start': 979.08, 'end': 989.04, 'text': ' what will be the bad case the bad solution right so we should not waste any expression', 'tokens': [51330, 437, 486, 312, 264, 1578, 1389, 264, 1578, 3827, 558, 370, 321, 820, 406, 5964, 604, 6114, 51828], 'temperature': 0.0, 'avg_logprob': -0.20403568561260516, 'compression_ratio': 1.7515923566878981, 'no_speech_prob': 0.01855001412332058}, {'id': 155, 'seek': 98904, 'start': 989.04, 'end': 995.88, 'text': ' which is not computed along all paths right so if my set is larger we are solved with respect', 'tokens': [50364, 597, 307, 406, 40610, 2051, 439, 14518, 558, 370, 498, 452, 992, 307, 4833, 321, 366, 13041, 365, 3104, 50706], 'temperature': 0.0, 'avg_logprob': -0.13651637789569324, 'compression_ratio': 1.7647058823529411, 'no_speech_prob': 0.0026656901463866234}, {'id': 156, 'seek': 98904, 'start': 995.88, 'end': 1000.9599999999999, 'text': ' to the correctness of the problem but not sound with respect to the like additional', 'tokens': [50706, 281, 264, 3006, 1287, 295, 264, 1154, 457, 406, 1626, 365, 3104, 281, 264, 411, 4497, 50960], 'temperature': 0.0, 'avg_logprob': -0.13651637789569324, 'compression_ratio': 1.7647058823529411, 'no_speech_prob': 0.0026656901463866234}, {'id': 157, 'seek': 98904, 'start': 1000.9599999999999, 'end': 1010.1999999999999, 'text': ' statements that you might add so there is a there is this ok so there is this what should', 'tokens': [50960, 12363, 300, 291, 1062, 909, 370, 456, 307, 257, 456, 307, 341, 3133, 370, 456, 307, 341, 437, 820, 51422], 'temperature': 0.0, 'avg_logprob': -0.13651637789569324, 'compression_ratio': 1.7647058823529411, 'no_speech_prob': 0.0026656901463866234}, {'id': 158, 'seek': 98904, 'start': 1010.1999999999999, 'end': 1017.28, 'text': ' I say requirement of an program optimization so whenever you do an optimization so generally', 'tokens': [51422, 286, 584, 11695, 295, 364, 1461, 19618, 370, 5699, 291, 360, 364, 19618, 370, 5101, 51776], 'temperature': 0.0, 'avg_logprob': -0.13651637789569324, 'compression_ratio': 1.7647058823529411, 'no_speech_prob': 0.0026656901463866234}, {'id': 159, 'seek': 101728, 'start': 1017.28, 'end': 1022.64, 'text': ' the requirement is and that is what you prove whenever you have to design an optimization you', 'tokens': [50364, 264, 11695, 307, 293, 300, 307, 437, 291, 7081, 5699, 291, 362, 281, 1715, 364, 19618, 291, 50632], 'temperature': 0.0, 'avg_logprob': -0.13752664838518416, 'compression_ratio': 2.0549450549450547, 'no_speech_prob': 0.013904302380979061}, {'id': 160, 'seek': 101728, 'start': 1022.64, 'end': 1030.28, 'text': ' have to prove that this optimization is one it is sound which means that for every possible input', 'tokens': [50632, 362, 281, 7081, 300, 341, 19618, 307, 472, 309, 307, 1626, 597, 1355, 300, 337, 633, 1944, 4846, 51014], 'temperature': 0.0, 'avg_logprob': -0.13752664838518416, 'compression_ratio': 2.0549450549450547, 'no_speech_prob': 0.013904302380979061}, {'id': 161, 'seek': 101728, 'start': 1030.28, 'end': 1036.16, 'text': ' that this optimization can be run with the optimized program and the original program', 'tokens': [51014, 300, 341, 19618, 393, 312, 1190, 365, 264, 26941, 1461, 293, 264, 3380, 1461, 51308], 'temperature': 0.0, 'avg_logprob': -0.13752664838518416, 'compression_ratio': 2.0549450549450547, 'no_speech_prob': 0.013904302380979061}, {'id': 162, 'seek': 101728, 'start': 1036.16, 'end': 1042.84, 'text': ' will match up on their outputs for every possible inputs their output should match up so this is', 'tokens': [51308, 486, 2995, 493, 322, 641, 23930, 337, 633, 1944, 15743, 641, 5598, 820, 2995, 493, 370, 341, 307, 51642], 'temperature': 0.0, 'avg_logprob': -0.13752664838518416, 'compression_ratio': 2.0549450549450547, 'no_speech_prob': 0.013904302380979061}, {'id': 163, 'seek': 104284, 'start': 1042.84, 'end': 1053.12, 'text': ' what is referred to as semantic equivalence so that is one proof soundness proof you have to do', 'tokens': [50364, 437, 307, 10839, 281, 382, 47982, 9052, 655, 370, 300, 307, 472, 8177, 1626, 1287, 8177, 291, 362, 281, 360, 50878], 'temperature': 0.0, 'avg_logprob': -0.11835605165232783, 'compression_ratio': 1.5950413223140496, 'no_speech_prob': 0.010555214248597622}, {'id': 164, 'seek': 104284, 'start': 1053.12, 'end': 1064.0, 'text': ' the other proof generally you have to do is that it is beneficial which means that once I do this', 'tokens': [50878, 264, 661, 8177, 5101, 291, 362, 281, 360, 307, 300, 309, 307, 14072, 597, 1355, 300, 1564, 286, 360, 341, 51422], 'temperature': 0.0, 'avg_logprob': -0.11835605165232783, 'compression_ratio': 1.5950413223140496, 'no_speech_prob': 0.010555214248597622}, {'id': 165, 'seek': 106400, 'start': 1064.0, 'end': 1075.16, 'text': ' optimization there is at least there is so there is no path where I will increase computation so', 'tokens': [50364, 19618, 456, 307, 412, 1935, 456, 307, 370, 456, 307, 572, 3100, 689, 286, 486, 3488, 24903, 370, 50922], 'temperature': 0.0, 'avg_logprob': -0.15716012688570244, 'compression_ratio': 2.0, 'no_speech_prob': 0.2735002338886261}, {'id': 166, 'seek': 106400, 'start': 1075.16, 'end': 1079.92, 'text': ' it is ok to do a null optimization which does not do anything that is ok but it is not allowed to', 'tokens': [50922, 309, 307, 3133, 281, 360, 257, 18184, 19618, 597, 775, 406, 360, 1340, 300, 307, 3133, 457, 309, 307, 406, 4350, 281, 51160], 'temperature': 0.0, 'avg_logprob': -0.15716012688570244, 'compression_ratio': 2.0, 'no_speech_prob': 0.2735002338886261}, {'id': 167, 'seek': 106400, 'start': 1079.92, 'end': 1086.0, 'text': ' do an optimization which increases computation along any path right even if you take computation', 'tokens': [51160, 360, 364, 19618, 597, 8637, 24903, 2051, 604, 3100, 558, 754, 498, 291, 747, 24903, 51464], 'temperature': 0.0, 'avg_logprob': -0.15716012688570244, 'compression_ratio': 2.0, 'no_speech_prob': 0.2735002338886261}, {'id': 168, 'seek': 106400, 'start': 1086.0, 'end': 1090.72, 'text': ' from one path and put it in another that ok the time for this has reduced the time of this other', 'tokens': [51464, 490, 472, 3100, 293, 829, 309, 294, 1071, 300, 3133, 264, 565, 337, 341, 575, 9212, 264, 565, 295, 341, 661, 51700], 'temperature': 0.0, 'avg_logprob': -0.15716012688570244, 'compression_ratio': 2.0, 'no_speech_prob': 0.2735002338886261}, {'id': 169, 'seek': 109072, 'start': 1090.72, 'end': 1097.4, 'text': ' thing has increased that is not allowed so either it should remain the same or decrease', 'tokens': [50364, 551, 575, 6505, 300, 307, 406, 4350, 370, 2139, 309, 820, 6222, 264, 912, 420, 11514, 50698], 'temperature': 0.0, 'avg_logprob': -0.11755851850117723, 'compression_ratio': 1.7536945812807883, 'no_speech_prob': 0.027521366253495216}, {'id': 170, 'seek': 109072, 'start': 1097.4, 'end': 1104.64, 'text': ' along all paths only then it is supposed to be a valid optimization so there is a separate', 'tokens': [50698, 2051, 439, 14518, 787, 550, 309, 307, 3442, 281, 312, 257, 7363, 19618, 370, 456, 307, 257, 4994, 51060], 'temperature': 0.0, 'avg_logprob': -0.11755851850117723, 'compression_ratio': 1.7536945812807883, 'no_speech_prob': 0.027521366253495216}, {'id': 171, 'seek': 109072, 'start': 1104.64, 'end': 1110.72, 'text': ' class of optimizations called speculative optimizations where essentially sometimes', 'tokens': [51060, 1508, 295, 5028, 14455, 1219, 49415, 5028, 14455, 689, 4476, 2171, 51364], 'temperature': 0.0, 'avg_logprob': -0.11755851850117723, 'compression_ratio': 1.7536945812807883, 'no_speech_prob': 0.027521366253495216}, {'id': 172, 'seek': 109072, 'start': 1110.72, 'end': 1117.72, 'text': ' you can use like data about frequency of paths that which paths are more frequent and you can', 'tokens': [51364, 291, 393, 764, 411, 1412, 466, 7893, 295, 14518, 300, 597, 14518, 366, 544, 18004, 293, 291, 393, 51714], 'temperature': 0.0, 'avg_logprob': -0.11755851850117723, 'compression_ratio': 1.7536945812807883, 'no_speech_prob': 0.027521366253495216}, {'id': 173, 'seek': 111772, 'start': 1117.72, 'end': 1123.44, 'text': ' do such weird things where you can increase the cost of one path but by decreasing something else', 'tokens': [50364, 360, 1270, 3657, 721, 689, 291, 393, 3488, 264, 2063, 295, 472, 3100, 457, 538, 23223, 746, 1646, 50650], 'temperature': 0.0, 'avg_logprob': -0.1104145330541274, 'compression_ratio': 2.0782608695652174, 'no_speech_prob': 0.022255128249526024}, {'id': 174, 'seek': 111772, 'start': 1123.44, 'end': 1130.2, 'text': ' maybe decrease the cost on the frequent paths but increase the cost on infrequent paths you', 'tokens': [50650, 1310, 11514, 264, 2063, 322, 264, 18004, 14518, 457, 3488, 264, 2063, 322, 1536, 265, 28842, 14518, 291, 50988], 'temperature': 0.0, 'avg_logprob': -0.1104145330541274, 'compression_ratio': 2.0782608695652174, 'no_speech_prob': 0.022255128249526024}, {'id': 175, 'seek': 111772, 'start': 1130.2, 'end': 1134.2, 'text': ' can do such things in this class of optimizations but in traditional optimizations you are not', 'tokens': [50988, 393, 360, 1270, 721, 294, 341, 1508, 295, 5028, 14455, 457, 294, 5164, 5028, 14455, 291, 366, 406, 51188], 'temperature': 0.0, 'avg_logprob': -0.1104145330541274, 'compression_ratio': 2.0782608695652174, 'no_speech_prob': 0.022255128249526024}, {'id': 176, 'seek': 111772, 'start': 1134.2, 'end': 1139.88, 'text': ' allowed to do that so in that sense very busy expression is a problem because you are not', 'tokens': [51188, 4350, 281, 360, 300, 370, 294, 300, 2020, 588, 5856, 6114, 307, 257, 1154, 570, 291, 366, 406, 51472], 'temperature': 0.0, 'avg_logprob': -0.1104145330541274, 'compression_ratio': 2.0782608695652174, 'no_speech_prob': 0.022255128249526024}, {'id': 177, 'seek': 111772, 'start': 1139.88, 'end': 1145.96, 'text': ' allowed to increase computation so now essentially if you think about this whole gamut of optimizations', 'tokens': [51472, 4350, 281, 3488, 24903, 370, 586, 4476, 498, 291, 519, 466, 341, 1379, 8019, 325, 295, 5028, 14455, 51776], 'temperature': 0.0, 'avg_logprob': -0.1104145330541274, 'compression_ratio': 2.0782608695652174, 'no_speech_prob': 0.022255128249526024}, {'id': 178, 'seek': 114596, 'start': 1145.96, 'end': 1155.88, 'text': ' we have sort of seen a wide spectrum of analysis and let us try to summarize how do these optimizations', 'tokens': [50364, 321, 362, 1333, 295, 1612, 257, 4874, 11143, 295, 5215, 293, 718, 505, 853, 281, 20858, 577, 360, 613, 5028, 14455, 50860], 'temperature': 0.0, 'avg_logprob': -0.15994931805518367, 'compression_ratio': 1.8709677419354838, 'no_speech_prob': 0.02717793919146061}, {'id': 179, 'seek': 114596, 'start': 1155.88, 'end': 1162.96, 'text': ' fit in the whole map right so first is direction the direction we have seen there are analysis', 'tokens': [50860, 3318, 294, 264, 1379, 4471, 558, 370, 700, 307, 3513, 264, 3513, 321, 362, 1612, 456, 366, 5215, 51214], 'temperature': 0.0, 'avg_logprob': -0.15994931805518367, 'compression_ratio': 1.8709677419354838, 'no_speech_prob': 0.02717793919146061}, {'id': 180, 'seek': 114596, 'start': 1162.96, 'end': 1169.76, 'text': ' which are forward analysis there are analysis which are backward analysis the thing is that', 'tokens': [51214, 597, 366, 2128, 5215, 456, 366, 5215, 597, 366, 23897, 5215, 264, 551, 307, 300, 51554], 'temperature': 0.0, 'avg_logprob': -0.15994931805518367, 'compression_ratio': 1.8709677419354838, 'no_speech_prob': 0.02717793919146061}, {'id': 181, 'seek': 116976, 'start': 1169.76, 'end': 1176.96, 'text': ' whenever you have forward analysis there is a particular order okay let me just come here there', 'tokens': [50364, 5699, 291, 362, 2128, 5215, 456, 307, 257, 1729, 1668, 1392, 718, 385, 445, 808, 510, 456, 50724], 'temperature': 0.0, 'avg_logprob': -0.18996493021647134, 'compression_ratio': 1.7577639751552796, 'no_speech_prob': 0.0780554935336113}, {'id': 182, 'seek': 116976, 'start': 1176.96, 'end': 1183.16, 'text': ' are also analysis which are what are called bi-directional analysis these are very weird', 'tokens': [50724, 366, 611, 5215, 597, 366, 437, 366, 1219, 3228, 12, 18267, 41048, 5215, 613, 366, 588, 3657, 51034], 'temperature': 0.0, 'avg_logprob': -0.18996493021647134, 'compression_ratio': 1.7577639751552796, 'no_speech_prob': 0.0780554935336113}, {'id': 183, 'seek': 116976, 'start': 1183.16, 'end': 1189.24, 'text': ' analysis their equations look very messy so there is how can you imagine what the these might look', 'tokens': [51034, 5215, 641, 11787, 574, 588, 16191, 370, 456, 307, 577, 393, 291, 3811, 437, 264, 613, 1062, 574, 51338], 'temperature': 0.0, 'avg_logprob': -0.18996493021647134, 'compression_ratio': 1.7577639751552796, 'no_speech_prob': 0.0780554935336113}, {'id': 184, 'seek': 118924, 'start': 1189.24, 'end': 1203.88, 'text': ' like so the equation might look like something like union over P which is like out of n is', 'tokens': [50364, 411, 370, 264, 5367, 1062, 574, 411, 746, 411, 11671, 670, 430, 597, 307, 411, 484, 295, 297, 307, 51096], 'temperature': 0.0, 'avg_logprob': -0.21518249097077743, 'compression_ratio': 1.25, 'no_speech_prob': 0.14266107976436615}, {'id': 185, 'seek': 120388, 'start': 1203.88, 'end': 1221.3600000000001, 'text': ' equal to union over predecessors of n of some n1 let us say and let us say union intersection', 'tokens': [50364, 2681, 281, 11671, 670, 24874, 45700, 295, 297, 295, 512, 297, 16, 718, 505, 584, 293, 718, 505, 584, 11671, 15236, 51238], 'temperature': 0.0, 'avg_logprob': -0.17823641035291884, 'compression_ratio': 1.5478260869565217, 'no_speech_prob': 0.10871966928243637}, {'id': 186, 'seek': 120388, 'start': 1221.3600000000001, 'end': 1228.96, 'text': ' over s elements successor of n in of some other set n2 so you are combining multiple', 'tokens': [51238, 670, 262, 4959, 31864, 295, 297, 294, 295, 512, 661, 992, 297, 17, 370, 291, 366, 21928, 3866, 51618], 'temperature': 0.0, 'avg_logprob': -0.17823641035291884, 'compression_ratio': 1.5478260869565217, 'no_speech_prob': 0.10871966928243637}, {'id': 187, 'seek': 122896, 'start': 1228.96, 'end': 1237.1200000000001, 'text': ' analysis and so this becomes very weird and there are analysis like that which are what', 'tokens': [50364, 5215, 293, 370, 341, 3643, 588, 3657, 293, 456, 366, 5215, 411, 300, 597, 366, 437, 50772], 'temperature': 0.0, 'avg_logprob': -0.20187192860216197, 'compression_ratio': 2.061611374407583, 'no_speech_prob': 0.4385989308357239}, {'id': 188, 'seek': 122896, 'start': 1237.1200000000001, 'end': 1241.44, 'text': ' are called bi-directional they are some of them are coming from their predecessors some', 'tokens': [50772, 366, 1219, 3228, 12, 18267, 41048, 436, 366, 512, 295, 552, 366, 1348, 490, 641, 24874, 45700, 512, 50988], 'temperature': 0.0, 'avg_logprob': -0.20187192860216197, 'compression_ratio': 2.061611374407583, 'no_speech_prob': 0.4385989308357239}, {'id': 189, 'seek': 122896, 'start': 1241.44, 'end': 1247.76, 'text': ' of them are coming from the successors what is bad with this I mean yeah I mean we had', 'tokens': [50988, 295, 552, 366, 1348, 490, 264, 2245, 830, 437, 307, 1578, 365, 341, 286, 914, 1338, 286, 914, 321, 632, 51304], 'temperature': 0.0, 'avg_logprob': -0.20187192860216197, 'compression_ratio': 2.061611374407583, 'no_speech_prob': 0.4385989308357239}, {'id': 190, 'seek': 122896, 'start': 1247.76, 'end': 1252.1200000000001, 'text': ' equations here we had equation we had equation here I mean at the end of the day this is', 'tokens': [51304, 11787, 510, 321, 632, 5367, 321, 632, 5367, 510, 286, 914, 412, 264, 917, 295, 264, 786, 341, 307, 51522], 'temperature': 0.0, 'avg_logprob': -0.20187192860216197, 'compression_ratio': 2.061611374407583, 'no_speech_prob': 0.4385989308357239}, {'id': 191, 'seek': 122896, 'start': 1252.1200000000001, 'end': 1256.8400000000001, 'text': ' a set of equation we are working with and would the same equation the same strategy', 'tokens': [51522, 257, 992, 295, 5367, 321, 366, 1364, 365, 293, 576, 264, 912, 5367, 264, 912, 5206, 51758], 'temperature': 0.0, 'avg_logprob': -0.20187192860216197, 'compression_ratio': 2.061611374407583, 'no_speech_prob': 0.4385989308357239}, {'id': 192, 'seek': 125684, 'start': 1256.9199999999998, 'end': 1263.9599999999998, 'text': ' I can still compute the same fixed point solution the same algorithm we can use yeah the same', 'tokens': [50368, 286, 393, 920, 14722, 264, 912, 6806, 935, 3827, 264, 912, 9284, 321, 393, 764, 1338, 264, 912, 50720], 'temperature': 0.0, 'avg_logprob': -0.2641260964529855, 'compression_ratio': 1.890547263681592, 'no_speech_prob': 0.1031155213713646}, {'id': 193, 'seek': 125684, 'start': 1263.9599999999998, 'end': 1270.12, 'text': ' equipment some equation does not matter what they are what they are taking things from but', 'tokens': [50720, 5927, 512, 5367, 775, 406, 1871, 437, 436, 366, 437, 436, 366, 1940, 721, 490, 457, 51028], 'temperature': 0.0, 'avg_logprob': -0.2641260964529855, 'compression_ratio': 1.890547263681592, 'no_speech_prob': 0.1031155213713646}, {'id': 194, 'seek': 125684, 'start': 1270.12, 'end': 1276.9599999999998, 'text': ' what is not so good about these bi-directional analysis can you think of something you can get', 'tokens': [51028, 437, 307, 406, 370, 665, 466, 613, 3228, 12, 18267, 41048, 5215, 393, 291, 519, 295, 746, 291, 393, 483, 51370], 'temperature': 0.0, 'avg_logprob': -0.2641260964529855, 'compression_ratio': 1.890547263681592, 'no_speech_prob': 0.1031155213713646}, {'id': 195, 'seek': 125684, 'start': 1276.9599999999998, 'end': 1281.6799999999998, 'text': ' updated sample things here you can get the updated value of this updated value of this so I mean you', 'tokens': [51370, 10588, 6889, 721, 510, 291, 393, 483, 264, 10588, 2158, 295, 341, 10588, 2158, 295, 341, 370, 286, 914, 291, 51606], 'temperature': 0.0, 'avg_logprob': -0.2641260964529855, 'compression_ratio': 1.890547263681592, 'no_speech_prob': 0.1031155213713646}, {'id': 196, 'seek': 128168, 'start': 1281.68, 'end': 1288.1200000000001, 'text': ' are right but I just want to deal you more so what what is so what can I do in forward analysis', 'tokens': [50364, 366, 558, 457, 286, 445, 528, 281, 2028, 291, 544, 370, 437, 437, 307, 370, 437, 393, 286, 360, 294, 2128, 5215, 50686], 'temperature': 0.0, 'avg_logprob': -0.19516661407750682, 'compression_ratio': 1.9306122448979592, 'no_speech_prob': 0.07223312556743622}, {'id': 197, 'seek': 128168, 'start': 1288.1200000000001, 'end': 1294.44, 'text': ' or backward analysis that I cannot do in that in by that yes I can come up with a good ordering', 'tokens': [50686, 420, 23897, 5215, 300, 286, 2644, 360, 294, 300, 294, 538, 300, 2086, 286, 393, 808, 493, 365, 257, 665, 21739, 51002], 'temperature': 0.0, 'avg_logprob': -0.19516661407750682, 'compression_ratio': 1.9306122448979592, 'no_speech_prob': 0.07223312556743622}, {'id': 198, 'seek': 128168, 'start': 1294.44, 'end': 1299.3200000000002, 'text': ' of these basic blocks in case of forward and backward analysis I can decide that either my', 'tokens': [51002, 295, 613, 3875, 8474, 294, 1389, 295, 2128, 293, 23897, 5215, 286, 393, 4536, 300, 2139, 452, 51246], 'temperature': 0.0, 'avg_logprob': -0.19516661407750682, 'compression_ratio': 1.9306122448979592, 'no_speech_prob': 0.07223312556743622}, {'id': 199, 'seek': 128168, 'start': 1299.3200000000002, 'end': 1303.04, 'text': ' predecessor should be computed before I do the particular node or the successor should be done', 'tokens': [51246, 34991, 820, 312, 40610, 949, 286, 360, 264, 1729, 9984, 420, 264, 31864, 820, 312, 1096, 51432], 'temperature': 0.0, 'avg_logprob': -0.19516661407750682, 'compression_ratio': 1.9306122448979592, 'no_speech_prob': 0.07223312556743622}, {'id': 200, 'seek': 128168, 'start': 1303.04, 'end': 1308.92, 'text': ' but in bi-directional analysis what we do they are in both directions right so now we are stuck', 'tokens': [51432, 457, 294, 3228, 12, 18267, 41048, 5215, 437, 321, 360, 436, 366, 294, 1293, 11095, 558, 370, 586, 321, 366, 5541, 51726], 'temperature': 0.0, 'avg_logprob': -0.19516661407750682, 'compression_ratio': 1.9306122448979592, 'no_speech_prob': 0.07223312556743622}, {'id': 201, 'seek': 130892, 'start': 1308.92, 'end': 1319.28, 'text': ' so that is why bi-directional analysis is becomes trickier to use the next is that it is about the', 'tokens': [50364, 370, 300, 307, 983, 3228, 12, 18267, 41048, 5215, 307, 3643, 4282, 811, 281, 764, 264, 958, 307, 300, 309, 307, 466, 264, 50882], 'temperature': 0.0, 'avg_logprob': -0.12281836232831402, 'compression_ratio': 2.035532994923858, 'no_speech_prob': 0.008567700162529945}, {'id': 202, 'seek': 130892, 'start': 1319.28, 'end': 1325.1200000000001, 'text': ' property that we want so essentially we do we want the property to hold along any path or do you want', 'tokens': [50882, 4707, 300, 321, 528, 370, 4476, 321, 360, 321, 528, 264, 4707, 281, 1797, 2051, 604, 3100, 420, 360, 291, 528, 51174], 'temperature': 0.0, 'avg_logprob': -0.12281836232831402, 'compression_ratio': 2.035532994923858, 'no_speech_prob': 0.008567700162529945}, {'id': 203, 'seek': 130892, 'start': 1325.1200000000001, 'end': 1332.48, 'text': ' it to hold along all paths that is one characterization of data flow problems and the next is the solution', 'tokens': [51174, 309, 281, 1797, 2051, 439, 14518, 300, 307, 472, 49246, 295, 1412, 3095, 2740, 293, 264, 958, 307, 264, 3827, 51542], 'temperature': 0.0, 'avg_logprob': -0.12281836232831402, 'compression_ratio': 2.035532994923858, 'no_speech_prob': 0.008567700162529945}, {'id': 204, 'seek': 130892, 'start': 1332.48, 'end': 1337.4, 'text': ' set do we want the smallest solution set or do we want the largest solution set right that is', 'tokens': [51542, 992, 360, 321, 528, 264, 16998, 3827, 992, 420, 360, 321, 528, 264, 6443, 3827, 992, 558, 300, 307, 51788], 'temperature': 0.0, 'avg_logprob': -0.12281836232831402, 'compression_ratio': 2.035532994923858, 'no_speech_prob': 0.008567700162529945}, {'id': 205, 'seek': 133740, 'start': 1337.4, 'end': 1341.8400000000001, 'text': ' another characterization of data flow problems right and you can have a product of any of these', 'tokens': [50364, 1071, 49246, 295, 1412, 3095, 2740, 558, 293, 291, 393, 362, 257, 1674, 295, 604, 295, 613, 50586], 'temperature': 0.0, 'avg_logprob': -0.1447985603695824, 'compression_ratio': 1.9180327868852458, 'no_speech_prob': 0.00325235933996737}, {'id': 206, 'seek': 133740, 'start': 1341.8400000000001, 'end': 1346.52, 'text': ' possible combinations right we can have a bi-directional analysis which is any path', 'tokens': [50586, 1944, 21267, 558, 321, 393, 362, 257, 3228, 12, 18267, 41048, 5215, 597, 307, 604, 3100, 50820], 'temperature': 0.0, 'avg_logprob': -0.1447985603695824, 'compression_ratio': 1.9180327868852458, 'no_speech_prob': 0.00325235933996737}, {'id': 207, 'seek': 133740, 'start': 1346.52, 'end': 1355.0400000000002, 'text': ' and compute the largest or whatever you can come up with right so this is the roadmap so whenever', 'tokens': [50820, 293, 14722, 264, 6443, 420, 2035, 291, 393, 808, 493, 365, 558, 370, 341, 307, 264, 35738, 370, 5699, 51246], 'temperature': 0.0, 'avg_logprob': -0.1447985603695824, 'compression_ratio': 1.9180327868852458, 'no_speech_prob': 0.00325235933996737}, {'id': 208, 'seek': 133740, 'start': 1355.0400000000002, 'end': 1359.76, 'text': ' you have a new problem to attack a new data flow problem to attack so these problems that we looked', 'tokens': [51246, 291, 362, 257, 777, 1154, 281, 2690, 257, 777, 1412, 3095, 1154, 281, 2690, 370, 613, 2740, 300, 321, 2956, 51482], 'temperature': 0.0, 'avg_logprob': -0.1447985603695824, 'compression_ratio': 1.9180327868852458, 'no_speech_prob': 0.00325235933996737}, {'id': 209, 'seek': 133740, 'start': 1359.76, 'end': 1364.6000000000001, 'text': ' at were already done so we do not care about them so the question is now if you have a new', 'tokens': [51482, 412, 645, 1217, 1096, 370, 321, 360, 406, 1127, 466, 552, 370, 264, 1168, 307, 586, 498, 291, 362, 257, 777, 51724], 'temperature': 0.0, 'avg_logprob': -0.1447985603695824, 'compression_ratio': 1.9180327868852458, 'no_speech_prob': 0.00325235933996737}, {'id': 210, 'seek': 136460, 'start': 1364.6, 'end': 1369.84, 'text': ' analysis that you want to design how will you go about with designing that is important right', 'tokens': [50364, 5215, 300, 291, 528, 281, 1715, 577, 486, 291, 352, 466, 365, 14685, 300, 307, 1021, 558, 50626], 'temperature': 0.0, 'avg_logprob': -0.12762949726369122, 'compression_ratio': 1.932, 'no_speech_prob': 0.10926356166601181}, {'id': 211, 'seek': 136460, 'start': 1369.84, 'end': 1375.32, 'text': ' now whenever you have a problem you should first try to answer them along these directions right', 'tokens': [50626, 586, 5699, 291, 362, 257, 1154, 291, 820, 700, 853, 281, 1867, 552, 2051, 613, 11095, 558, 50900], 'temperature': 0.0, 'avg_logprob': -0.12762949726369122, 'compression_ratio': 1.932, 'no_speech_prob': 0.10926356166601181}, {'id': 212, 'seek': 136460, 'start': 1375.32, 'end': 1380.24, 'text': ' and then you have to think about how to design the analysis so because there is so much commonality', 'tokens': [50900, 293, 550, 291, 362, 281, 519, 466, 577, 281, 1715, 264, 5215, 370, 570, 456, 307, 370, 709, 2689, 1860, 51146], 'temperature': 0.0, 'avg_logprob': -0.12762949726369122, 'compression_ratio': 1.932, 'no_speech_prob': 0.10926356166601181}, {'id': 213, 'seek': 136460, 'start': 1380.24, 'end': 1387.0, 'text': ' along for the different problems the question is that can I have a unified framework which can', 'tokens': [51146, 2051, 337, 264, 819, 2740, 264, 1168, 307, 300, 393, 286, 362, 257, 26787, 8388, 597, 393, 51484], 'temperature': 0.0, 'avg_logprob': -0.12762949726369122, 'compression_ratio': 1.932, 'no_speech_prob': 0.10926356166601181}, {'id': 214, 'seek': 136460, 'start': 1387.0, 'end': 1394.4399999999998, 'text': ' answer with where I can sort of abstract out the commonalities whatever are common I can separate', 'tokens': [51484, 1867, 365, 689, 286, 393, 1333, 295, 12649, 484, 264, 2689, 16110, 2035, 366, 2689, 286, 393, 4994, 51856], 'temperature': 0.0, 'avg_logprob': -0.12762949726369122, 'compression_ratio': 1.932, 'no_speech_prob': 0.10926356166601181}, {'id': 215, 'seek': 139444, 'start': 1394.44, 'end': 1399.3600000000001, 'text': ' out and I can plug in what are different I can just plug in those things and the whole framework', 'tokens': [50364, 484, 293, 286, 393, 5452, 294, 437, 366, 819, 286, 393, 445, 5452, 294, 729, 721, 293, 264, 1379, 8388, 50610], 'temperature': 0.0, 'avg_logprob': -0.15056972877652036, 'compression_ratio': 1.95850622406639, 'no_speech_prob': 0.002389653353020549}, {'id': 216, 'seek': 139444, 'start': 1399.3600000000001, 'end': 1404.76, 'text': ' will just work on its own right can I do that so that is the next question so can we detect', 'tokens': [50610, 486, 445, 589, 322, 1080, 1065, 558, 393, 286, 360, 300, 370, 300, 307, 264, 958, 1168, 370, 393, 321, 5531, 50880], 'temperature': 0.0, 'avg_logprob': -0.15056972877652036, 'compression_ratio': 1.95850622406639, 'no_speech_prob': 0.002389653353020549}, {'id': 217, 'seek': 139444, 'start': 1404.76, 'end': 1411.16, 'text': ' common patterns right we have to figure out what is the initialization the so there is something', 'tokens': [50880, 2689, 8294, 558, 321, 362, 281, 2573, 484, 437, 307, 264, 5883, 2144, 264, 370, 456, 307, 746, 51200], 'temperature': 0.0, 'avg_logprob': -0.15056972877652036, 'compression_ratio': 1.95850622406639, 'no_speech_prob': 0.002389653353020549}, {'id': 218, 'seek': 139444, 'start': 1411.16, 'end': 1415.4, 'text': ' about the initialization there is something about the fixed band computation and something about', 'tokens': [51200, 466, 264, 5883, 2144, 456, 307, 746, 466, 264, 6806, 4116, 24903, 293, 746, 466, 51412], 'temperature': 0.0, 'avg_logprob': -0.15056972877652036, 'compression_ratio': 1.95850622406639, 'no_speech_prob': 0.002389653353020549}, {'id': 219, 'seek': 139444, 'start': 1415.4, 'end': 1422.96, 'text': ' how many iterations it takes to civilize so essentially so these are the important things', 'tokens': [51412, 577, 867, 36540, 309, 2516, 281, 5605, 1125, 370, 4476, 370, 613, 366, 264, 1021, 721, 51790], 'temperature': 0.0, 'avg_logprob': -0.15056972877652036, 'compression_ratio': 1.95850622406639, 'no_speech_prob': 0.002389653353020549}, {'id': 220, 'seek': 142296, 'start': 1422.96, 'end': 1427.68, 'text': ' you have to keep in mind you have to keep in mind whether how do we initialize it the fixed', 'tokens': [50364, 291, 362, 281, 1066, 294, 1575, 291, 362, 281, 1066, 294, 1575, 1968, 577, 360, 321, 5883, 1125, 309, 264, 6806, 50600], 'temperature': 0.0, 'avg_logprob': -0.12172824953809197, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.011256313882768154}, {'id': 221, 'seek': 142296, 'start': 1427.68, 'end': 1432.92, 'text': ' band computation almost remains the same but what is what changes are these transfer functions', 'tokens': [50600, 4116, 24903, 1920, 7023, 264, 912, 457, 437, 307, 437, 2962, 366, 613, 5003, 6828, 50862], 'temperature': 0.0, 'avg_logprob': -0.12172824953809197, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.011256313882768154}, {'id': 222, 'seek': 142296, 'start': 1432.92, 'end': 1444.68, 'text': ' and the meet operation so if you for the same framework that we discussed the same algorithm', 'tokens': [50862, 293, 264, 1677, 6916, 370, 498, 291, 337, 264, 912, 8388, 300, 321, 7152, 264, 912, 9284, 51450], 'temperature': 0.0, 'avg_logprob': -0.12172824953809197, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.011256313882768154}, {'id': 223, 'seek': 142296, 'start': 1444.68, 'end': 1451.32, 'text': ' that we saw that would simply work for any dataflow problem if you plug in these three', 'tokens': [51450, 300, 321, 1866, 300, 576, 2935, 589, 337, 604, 1412, 10565, 1154, 498, 291, 5452, 294, 613, 1045, 51782], 'temperature': 0.0, 'avg_logprob': -0.12172824953809197, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.011256313882768154}, {'id': 224, 'seek': 145132, 'start': 1451.32, 'end': 1457.8799999999999, 'text': ' things the how we are going to initialize the problems the thus initial sets how what', 'tokens': [50364, 721, 264, 577, 321, 366, 516, 281, 5883, 1125, 264, 2740, 264, 8807, 5883, 6352, 577, 437, 50692], 'temperature': 0.0, 'avg_logprob': -0.1911402940750122, 'compression_ratio': 1.7658536585365854, 'no_speech_prob': 0.07341399043798447}, {'id': 225, 'seek': 145132, 'start': 1457.8799999999999, 'end': 1464.12, 'text': ' is going to be my transfer function and how do I join multiple solutions along successors', 'tokens': [50692, 307, 516, 281, 312, 452, 5003, 2445, 293, 577, 360, 286, 3917, 3866, 6547, 2051, 2245, 830, 51004], 'temperature': 0.0, 'avg_logprob': -0.1911402940750122, 'compression_ratio': 1.7658536585365854, 'no_speech_prob': 0.07341399043798447}, {'id': 226, 'seek': 145132, 'start': 1464.12, 'end': 1470.72, 'text': ' of the decision to get the solution for the meter the in and out for respective sets okay', 'tokens': [51004, 295, 264, 3537, 281, 483, 264, 3827, 337, 264, 9255, 264, 294, 293, 484, 337, 23649, 6352, 1392, 51334], 'temperature': 0.0, 'avg_logprob': -0.1911402940750122, 'compression_ratio': 1.7658536585365854, 'no_speech_prob': 0.07341399043798447}, {'id': 227, 'seek': 145132, 'start': 1470.72, 'end': 1475.9199999999998, 'text': ' so now let us look at what I promised that we will look at something called constant propagation', 'tokens': [51334, 370, 586, 718, 505, 574, 412, 437, 286, 10768, 300, 321, 486, 574, 412, 746, 1219, 5754, 38377, 51594], 'temperature': 0.0, 'avg_logprob': -0.1911402940750122, 'compression_ratio': 1.7658536585365854, 'no_speech_prob': 0.07341399043798447}, {'id': 228, 'seek': 147592, 'start': 1475.92, 'end': 1482.5600000000002, 'text': ' so let us look at that analysis and I will ask you to design this analysis can you now think', 'tokens': [50364, 370, 718, 505, 574, 412, 300, 5215, 293, 286, 486, 1029, 291, 281, 1715, 341, 5215, 393, 291, 586, 519, 50696], 'temperature': 0.0, 'avg_logprob': -0.1366929140957919, 'compression_ratio': 1.942408376963351, 'no_speech_prob': 0.13931801915168762}, {'id': 229, 'seek': 147592, 'start': 1482.5600000000002, 'end': 1487.24, 'text': ' of coming up with this analysis so what is the constant propagation problem the constant', 'tokens': [50696, 295, 1348, 493, 365, 341, 5215, 370, 437, 307, 264, 5754, 38377, 1154, 264, 5754, 50930], 'temperature': 0.0, 'avg_logprob': -0.1366929140957919, 'compression_ratio': 1.942408376963351, 'no_speech_prob': 0.13931801915168762}, {'id': 230, 'seek': 147592, 'start': 1487.24, 'end': 1496.0, 'text': ' propagation problem is that if I have some use of a variable let us say a use of y I would like', 'tokens': [50930, 38377, 1154, 307, 300, 498, 286, 362, 512, 764, 295, 257, 7006, 718, 505, 584, 257, 764, 295, 288, 286, 576, 411, 51368], 'temperature': 0.0, 'avg_logprob': -0.1366929140957919, 'compression_ratio': 1.942408376963351, 'no_speech_prob': 0.13931801915168762}, {'id': 231, 'seek': 147592, 'start': 1496.0, 'end': 1503.6000000000001, 'text': ' to find out is it possible that y is a constant and if yes what is that constant value so can', 'tokens': [51368, 281, 915, 484, 307, 309, 1944, 300, 288, 307, 257, 5754, 293, 498, 2086, 437, 307, 300, 5754, 2158, 370, 393, 51748], 'temperature': 0.0, 'avg_logprob': -0.1366929140957919, 'compression_ratio': 1.942408376963351, 'no_speech_prob': 0.13931801915168762}, {'id': 232, 'seek': 150360, 'start': 1503.6, 'end': 1520.28, 'text': ' you come up with this I come up with this can you think how to do this analysis that', 'tokens': [50364, 291, 808, 493, 365, 341, 286, 808, 493, 365, 341, 393, 291, 519, 577, 281, 360, 341, 5215, 300, 51198], 'temperature': 0.0, 'avg_logprob': -0.1493451191828801, 'compression_ratio': 1.8439716312056738, 'no_speech_prob': 0.027355756610631943}, {'id': 233, 'seek': 150360, 'start': 1520.28, 'end': 1526.9199999999998, 'text': ' too we saw but I want a more more powerful analysis so now you have to come you have', 'tokens': [51198, 886, 321, 1866, 457, 286, 528, 257, 544, 544, 4005, 5215, 370, 586, 291, 362, 281, 808, 291, 362, 51530], 'temperature': 0.0, 'avg_logprob': -0.1493451191828801, 'compression_ratio': 1.8439716312056738, 'no_speech_prob': 0.027355756610631943}, {'id': 234, 'seek': 150360, 'start': 1526.9199999999998, 'end': 1530.52, 'text': ' to tell me these three things other things were done you have to tell me how to initialize', 'tokens': [51530, 281, 980, 385, 613, 1045, 721, 661, 721, 645, 1096, 291, 362, 281, 980, 385, 577, 281, 5883, 1125, 51710], 'temperature': 0.0, 'avg_logprob': -0.1493451191828801, 'compression_ratio': 1.8439716312056738, 'no_speech_prob': 0.027355756610631943}, {'id': 235, 'seek': 153052, 'start': 1530.52, 'end': 1537.6, 'text': ' it so you have to tell me what are the dataflow facts first so over what are we doing this', 'tokens': [50364, 309, 370, 291, 362, 281, 980, 385, 437, 366, 264, 1412, 10565, 9130, 700, 370, 670, 437, 366, 321, 884, 341, 50718], 'temperature': 0.0, 'avg_logprob': -0.1327640603228313, 'compression_ratio': 2.104651162790698, 'no_speech_prob': 0.08096547424793243}, {'id': 236, 'seek': 153052, 'start': 1537.6, 'end': 1543.6, 'text': ' computation then you have to tell me what is the initialization then you have to tell me the', 'tokens': [50718, 24903, 550, 291, 362, 281, 980, 385, 437, 307, 264, 5883, 2144, 550, 291, 362, 281, 980, 385, 264, 51018], 'temperature': 0.0, 'avg_logprob': -0.1327640603228313, 'compression_ratio': 2.104651162790698, 'no_speech_prob': 0.08096547424793243}, {'id': 237, 'seek': 153052, 'start': 1543.6, 'end': 1550.68, 'text': ' transfer functions and you have to give me the meet operations what are dataflow facts', 'tokens': [51018, 5003, 6828, 293, 291, 362, 281, 976, 385, 264, 1677, 7705, 437, 366, 1412, 10565, 9130, 51372], 'temperature': 0.0, 'avg_logprob': -0.1327640603228313, 'compression_ratio': 2.104651162790698, 'no_speech_prob': 0.08096547424793243}, {'id': 238, 'seek': 153052, 'start': 1550.68, 'end': 1555.4, 'text': ' dataflow facts are whatever we are computing on like for instance in live variable analysis', 'tokens': [51372, 1412, 10565, 9130, 366, 2035, 321, 366, 15866, 322, 411, 337, 5197, 294, 1621, 7006, 5215, 51608], 'temperature': 0.0, 'avg_logprob': -0.1327640603228313, 'compression_ratio': 2.104651162790698, 'no_speech_prob': 0.08096547424793243}, {'id': 239, 'seek': 155540, 'start': 1555.4, 'end': 1561.16, 'text': ' it was a set of all live variables for reaching definitions it was a set of all definitions', 'tokens': [50364, 309, 390, 257, 992, 295, 439, 1621, 9102, 337, 9906, 21988, 309, 390, 257, 992, 295, 439, 21988, 50652], 'temperature': 0.0, 'avg_logprob': -0.19229657914903428, 'compression_ratio': 2.206896551724138, 'no_speech_prob': 0.0995783880352974}, {'id': 240, 'seek': 155540, 'start': 1561.16, 'end': 1566.3200000000002, 'text': ' or reaching definitions all definitions that reach in available expression and busy expressions', 'tokens': [50652, 420, 9906, 21988, 439, 21988, 300, 2524, 294, 2435, 6114, 293, 5856, 15277, 50910], 'temperature': 0.0, 'avg_logprob': -0.19229657914903428, 'compression_ratio': 2.206896551724138, 'no_speech_prob': 0.0995783880352974}, {'id': 241, 'seek': 155540, 'start': 1566.3200000000002, 'end': 1571.0, 'text': ' these are the set of expressions right so these are the facts that that what are we', 'tokens': [50910, 613, 366, 264, 992, 295, 15277, 558, 370, 613, 366, 264, 9130, 300, 300, 437, 366, 321, 51144], 'temperature': 0.0, 'avg_logprob': -0.19229657914903428, 'compression_ratio': 2.206896551724138, 'no_speech_prob': 0.0995783880352974}, {'id': 242, 'seek': 155540, 'start': 1571.0, 'end': 1580.2, 'text': ' interested in understanding no no reaching definition was one way of arriving at constant', 'tokens': [51144, 3102, 294, 3701, 572, 572, 9906, 7123, 390, 472, 636, 295, 22436, 412, 5754, 51604], 'temperature': 0.0, 'avg_logprob': -0.19229657914903428, 'compression_ratio': 2.206896551724138, 'no_speech_prob': 0.0995783880352974}, {'id': 243, 'seek': 155540, 'start': 1580.2, 'end': 1584.88, 'text': ' propagation but I want to now I want a more powerful constant propagation which is the', 'tokens': [51604, 38377, 457, 286, 528, 281, 586, 286, 528, 257, 544, 4005, 5754, 38377, 597, 307, 264, 51838], 'temperature': 0.0, 'avg_logprob': -0.19229657914903428, 'compression_ratio': 2.206896551724138, 'no_speech_prob': 0.0995783880352974}, {'id': 244, 'seek': 158488, 'start': 1584.88, 'end': 1590.1200000000001, 'text': " analysis is designed to do constant propagation so now let's go to the basic question the basic", 'tokens': [50364, 5215, 307, 4761, 281, 360, 5754, 38377, 370, 586, 718, 311, 352, 281, 264, 3875, 1168, 264, 3875, 50626], 'temperature': 0.0, 'avg_logprob': -0.1338079474693121, 'compression_ratio': 1.9742268041237114, 'no_speech_prob': 0.017368344590067863}, {'id': 245, 'seek': 158488, 'start': 1590.1200000000001, 'end': 1596.7600000000002, 'text': ' question constant propagation asks is that can the value so the query would look like this so you', 'tokens': [50626, 1168, 5754, 38377, 8962, 307, 300, 393, 264, 2158, 370, 264, 14581, 576, 574, 411, 341, 370, 291, 50958], 'temperature': 0.0, 'avg_logprob': -0.1338079474693121, 'compression_ratio': 1.9742268041237114, 'no_speech_prob': 0.017368344590067863}, {'id': 246, 'seek': 158488, 'start': 1596.7600000000002, 'end': 1605.48, 'text': ' will ask that for this value of y what is is it possible that this value is constant no matter', 'tokens': [50958, 486, 1029, 300, 337, 341, 2158, 295, 288, 437, 307, 307, 309, 1944, 300, 341, 2158, 307, 5754, 572, 1871, 51394], 'temperature': 0.0, 'avg_logprob': -0.1338079474693121, 'compression_ratio': 1.9742268041237114, 'no_speech_prob': 0.017368344590067863}, {'id': 247, 'seek': 158488, 'start': 1605.48, 'end': 1613.2800000000002, 'text': ' what execution path I take and if yes then what is the constant that is the question I need to', 'tokens': [51394, 437, 15058, 3100, 286, 747, 293, 498, 2086, 550, 437, 307, 264, 5754, 300, 307, 264, 1168, 286, 643, 281, 51784], 'temperature': 0.0, 'avg_logprob': -0.1338079474693121, 'compression_ratio': 1.9742268041237114, 'no_speech_prob': 0.017368344590067863}, {'id': 248, 'seek': 161328, 'start': 1613.28, 'end': 1624.36, 'text': ' answer that is the problem I have so reaching definition is one way to answer it but what', 'tokens': [50364, 1867, 300, 307, 264, 1154, 286, 362, 370, 9906, 7123, 307, 472, 636, 281, 1867, 309, 457, 437, 50918], 'temperature': 0.0, 'avg_logprob': -0.20026825798882378, 'compression_ratio': 1.4453125, 'no_speech_prob': 0.04760631546378136}, {'id': 249, 'seek': 161328, 'start': 1624.36, 'end': 1632.32, 'text': " other other than that but can I like from grounds up can I build a constant so let's start with", 'tokens': [50918, 661, 661, 813, 300, 457, 393, 286, 411, 490, 19196, 493, 393, 286, 1322, 257, 5754, 370, 718, 311, 722, 365, 51316], 'temperature': 0.0, 'avg_logprob': -0.20026825798882378, 'compression_ratio': 1.4453125, 'no_speech_prob': 0.04760631546378136}, {'id': 250, 'seek': 163232, 'start': 1632.32, 'end': 1647.28, 'text': ' what are the set of data flow facts so what are what will you compute the value of so mathematically', 'tokens': [50364, 437, 366, 264, 992, 295, 1412, 3095, 9130, 370, 437, 366, 437, 486, 291, 14722, 264, 2158, 295, 370, 44003, 51112], 'temperature': 0.0, 'avg_logprob': -0.23316704708596933, 'compression_ratio': 1.6528925619834711, 'no_speech_prob': 0.048322707414627075}, {'id': 251, 'seek': 163232, 'start': 1647.28, 'end': 1657.76, 'text': ' can tell me what is the set look like what would the set look like variable common values very good', 'tokens': [51112, 393, 980, 385, 437, 307, 264, 992, 574, 411, 437, 576, 264, 992, 574, 411, 7006, 2689, 4190, 588, 665, 51636], 'temperature': 0.0, 'avg_logprob': -0.23316704708596933, 'compression_ratio': 1.6528925619834711, 'no_speech_prob': 0.048322707414627075}, {'id': 252, 'seek': 165776, 'start': 1657.76, 'end': 1672.12, 'text': ' so the set of v1 value 1 v2 value 2 something like this and what can these values be what', 'tokens': [50364, 370, 264, 992, 295, 371, 16, 2158, 502, 371, 17, 2158, 568, 746, 411, 341, 293, 437, 393, 613, 4190, 312, 437, 51082], 'temperature': 0.0, 'avg_logprob': -0.11050534248352051, 'compression_ratio': 1.5, 'no_speech_prob': 0.04804760217666626}, {'id': 253, 'seek': 165776, 'start': 1672.12, 'end': 1686.28, 'text': ' is this possible set of values but expression I cannot do anything with that no but I just', 'tokens': [51082, 307, 341, 1944, 992, 295, 4190, 457, 6114, 286, 2644, 360, 1340, 365, 300, 572, 457, 286, 445, 51790], 'temperature': 0.0, 'avg_logprob': -0.11050534248352051, 'compression_ratio': 1.5, 'no_speech_prob': 0.04804760217666626}, {'id': 254, 'seek': 168628, 'start': 1686.28, 'end': 1698.68, 'text': ' want this answer that is it a constant or not I cannot say anything else like x is a constant', 'tokens': [50364, 528, 341, 1867, 300, 307, 309, 257, 5754, 420, 406, 286, 2644, 584, 1340, 1646, 411, 2031, 307, 257, 5754, 50984], 'temperature': 0.0, 'avg_logprob': -0.22330284118652344, 'compression_ratio': 1.6179775280898876, 'no_speech_prob': 0.12415991723537445}, {'id': 255, 'seek': 168628, 'start': 1698.68, 'end': 1705.36, 'text': " or not that question is not important because I redefining x so had it been 2 or 3 I don't care", 'tokens': [50984, 420, 406, 300, 1168, 307, 406, 1021, 570, 286, 38818, 1760, 2031, 370, 632, 309, 668, 568, 420, 805, 286, 500, 380, 1127, 51318], 'temperature': 0.0, 'avg_logprob': -0.22330284118652344, 'compression_ratio': 1.6179775280898876, 'no_speech_prob': 0.12415991723537445}, {'id': 256, 'seek': 168628, 'start': 1705.36, 'end': 1714.6399999999999, 'text': ' but if y was 2 then I can do some nice computation here at compile time right so I only find out I', 'tokens': [51318, 457, 498, 288, 390, 568, 550, 286, 393, 360, 512, 1481, 24903, 510, 412, 31413, 565, 558, 370, 286, 787, 915, 484, 286, 51782], 'temperature': 0.0, 'avg_logprob': -0.22330284118652344, 'compression_ratio': 1.6179775280898876, 'no_speech_prob': 0.12415991723537445}, {'id': 257, 'seek': 171464, 'start': 1715.1200000000001, 'end': 1723.88, 'text': ' will be more interested in wearing the constant values for users not so much for definitions so', 'tokens': [50388, 486, 312, 544, 3102, 294, 4769, 264, 5754, 4190, 337, 5022, 406, 370, 709, 337, 21988, 370, 50826], 'temperature': 0.0, 'avg_logprob': -0.1878969989605804, 'compression_ratio': 1.7839506172839505, 'no_speech_prob': 0.005355239380151033}, {'id': 258, 'seek': 171464, 'start': 1723.88, 'end': 1733.0800000000002, 'text': ' the question is that how would I so I would like to find out so this is my this is what my solution', 'tokens': [50826, 264, 1168, 307, 300, 577, 576, 286, 370, 286, 576, 411, 281, 915, 484, 370, 341, 307, 452, 341, 307, 437, 452, 3827, 51286], 'temperature': 0.0, 'avg_logprob': -0.1878969989605804, 'compression_ratio': 1.7839506172839505, 'no_speech_prob': 0.005355239380151033}, {'id': 259, 'seek': 171464, 'start': 1733.0800000000002, 'end': 1739.5800000000002, 'text': " would look like at every basic block right so every basic block I'd like or every basic block", 'tokens': [51286, 576, 574, 411, 412, 633, 3875, 3461, 558, 370, 633, 3875, 3461, 286, 1116, 411, 420, 633, 3875, 3461, 51611], 'temperature': 0.0, 'avg_logprob': -0.1878969989605804, 'compression_ratio': 1.7839506172839505, 'no_speech_prob': 0.005355239380151033}, {'id': 260, 'seek': 173958, 'start': 1740.26, 'end': 1749.6599999999999, 'text': ' I would like to find out that what value can take what variable can take what value and the', 'tokens': [50398, 286, 576, 411, 281, 915, 484, 300, 437, 2158, 393, 747, 437, 7006, 393, 747, 437, 2158, 293, 264, 50868], 'temperature': 0.0, 'avg_logprob': -0.2375974935643813, 'compression_ratio': 1.8580645161290323, 'no_speech_prob': 0.2514714002609253}, {'id': 261, 'seek': 173958, 'start': 1749.6599999999999, 'end': 1756.58, 'text': ' question is that what can this be but that is not enough right I need to meet that value also right', 'tokens': [50868, 1168, 307, 300, 437, 393, 341, 312, 457, 300, 307, 406, 1547, 558, 286, 643, 281, 1677, 300, 2158, 611, 558, 51214], 'temperature': 0.0, 'avg_logprob': -0.2375974935643813, 'compression_ratio': 1.8580645161290323, 'no_speech_prob': 0.2514714002609253}, {'id': 262, 'seek': 173958, 'start': 1756.58, 'end': 1762.62, 'text': ' anything in the domain right so if it is a into variable that it can be anything right from like', 'tokens': [51214, 1340, 294, 264, 9274, 558, 370, 498, 309, 307, 257, 666, 7006, 300, 309, 393, 312, 1340, 558, 490, 411, 51516], 'temperature': 0.0, 'avg_logprob': -0.2375974935643813, 'compression_ratio': 1.8580645161290323, 'no_speech_prob': 0.2514714002609253}, {'id': 263, 'seek': 176262, 'start': 1762.62, 'end': 1769.82, 'text': ' minus infinity to plus infinity or if you really think about like how to get integers fine right', 'tokens': [50364, 3175, 13202, 281, 1804, 13202, 420, 498, 291, 534, 519, 466, 411, 577, 281, 483, 41674, 2489, 558, 50724], 'temperature': 0.0, 'avg_logprob': -0.21445232433277173, 'compression_ratio': 1.7706422018348624, 'no_speech_prob': 0.07318791002035141}, {'id': 264, 'seek': 176262, 'start': 1769.82, 'end': 1777.4599999999998, 'text': " but mathematically let's keep it right so it is set of any constant can I give it a give it a", 'tokens': [50724, 457, 44003, 718, 311, 1066, 309, 558, 370, 309, 307, 992, 295, 604, 5754, 393, 286, 976, 309, 257, 976, 309, 257, 51106], 'temperature': 0.0, 'avg_logprob': -0.21445232433277173, 'compression_ratio': 1.7706422018348624, 'no_speech_prob': 0.07318791002035141}, {'id': 265, 'seek': 176262, 'start': 1777.4599999999998, 'end': 1784.1, 'text': " constant in this range so it will be one constant value from there or let's say I define something", 'tokens': [51106, 5754, 294, 341, 3613, 370, 309, 486, 312, 472, 5754, 2158, 490, 456, 420, 718, 311, 584, 286, 6964, 746, 51438], 'temperature': 0.0, 'avg_logprob': -0.21445232433277173, 'compression_ratio': 1.7706422018348624, 'no_speech_prob': 0.07318791002035141}, {'id': 266, 'seek': 176262, 'start': 1784.1, 'end': 1790.06, 'text': " called top and I'll tell you why I use top later hopefully which will which means that it is not", 'tokens': [51438, 1219, 1192, 293, 286, 603, 980, 291, 983, 286, 764, 1192, 1780, 4696, 597, 486, 597, 1355, 300, 309, 307, 406, 51736], 'temperature': 0.0, 'avg_logprob': -0.21445232433277173, 'compression_ratio': 1.7706422018348624, 'no_speech_prob': 0.07318791002035141}, {'id': 267, 'seek': 179006, 'start': 1790.06, 'end': 1800.46, 'text': ' a constant or let me just call it NC not constant right there is some value which may not be', 'tokens': [50364, 257, 5754, 420, 718, 385, 445, 818, 309, 20786, 406, 5754, 558, 456, 307, 512, 2158, 597, 815, 406, 312, 50884], 'temperature': 0.0, 'avg_logprob': -0.12966537475585938, 'compression_ratio': 1.6745562130177514, 'no_speech_prob': 0.014675983227789402}, {'id': 268, 'seek': 179006, 'start': 1800.46, 'end': 1807.82, 'text': " constant why cannot maybe not constant because let's say I have x equals 29 x equals 42 and", 'tokens': [50884, 5754, 983, 2644, 1310, 406, 5754, 570, 718, 311, 584, 286, 362, 2031, 6915, 9413, 2031, 6915, 14034, 293, 51252], 'temperature': 0.0, 'avg_logprob': -0.12966537475585938, 'compression_ratio': 1.6745562130177514, 'no_speech_prob': 0.014675983227789402}, {'id': 269, 'seek': 179006, 'start': 1807.82, 'end': 1815.86, 'text': ' this value is reaching here z equals x it is not a constant it can either if it comes to this part', 'tokens': [51252, 341, 2158, 307, 9906, 510, 710, 6915, 2031, 309, 307, 406, 257, 5754, 309, 393, 2139, 498, 309, 1487, 281, 341, 644, 51654], 'temperature': 0.0, 'avg_logprob': -0.12966537475585938, 'compression_ratio': 1.6745562130177514, 'no_speech_prob': 0.014675983227789402}, {'id': 270, 'seek': 181586, 'start': 1815.86, 'end': 1824.54, 'text': " then it follow to if it comes to this part then it is 29 then I don't know so so I will either it", 'tokens': [50364, 550, 309, 1524, 281, 498, 309, 1487, 281, 341, 644, 550, 309, 307, 9413, 550, 286, 500, 380, 458, 370, 370, 286, 486, 2139, 309, 50798], 'temperature': 0.0, 'avg_logprob': -0.19080882736399205, 'compression_ratio': 1.755952380952381, 'no_speech_prob': 0.04681942239403725}, {'id': 271, 'seek': 181586, 'start': 1824.54, 'end': 1828.5, 'text': " will either be a value from this range or it will be just marked as not constant I don't know it's", 'tokens': [50798, 486, 2139, 312, 257, 2158, 490, 341, 3613, 420, 309, 486, 312, 445, 12658, 382, 406, 5754, 286, 500, 380, 458, 309, 311, 50996], 'temperature': 0.0, 'avg_logprob': -0.19080882736399205, 'compression_ratio': 1.755952380952381, 'no_speech_prob': 0.04681942239403725}, {'id': 272, 'seek': 181586, 'start': 1828.5, 'end': 1842.02, 'text': " a constant it is not constant so what's the point which value do I put no I'm keeping it simple so", 'tokens': [50996, 257, 5754, 309, 307, 406, 5754, 370, 437, 311, 264, 935, 597, 2158, 360, 286, 829, 572, 286, 478, 5145, 309, 2199, 370, 51672], 'temperature': 0.0, 'avg_logprob': -0.19080882736399205, 'compression_ratio': 1.755952380952381, 'no_speech_prob': 0.04681942239403725}, {'id': 273, 'seek': 184202, 'start': 1842.02, 'end': 1848.66, 'text': " let's say it's a vector of finite size I just keep all my variables and I for each variable I", 'tokens': [50364, 718, 311, 584, 309, 311, 257, 8062, 295, 19362, 2744, 286, 445, 1066, 439, 452, 9102, 293, 286, 337, 1184, 7006, 286, 50696], 'temperature': 0.0, 'avg_logprob': -0.1582569454027259, 'compression_ratio': 1.5804597701149425, 'no_speech_prob': 0.011247018352150917}, {'id': 274, 'seek': 184202, 'start': 1848.66, 'end': 1855.3799999999999, 'text': ' update it where with saying that it is not constant or if it is a value in that range', 'tokens': [50696, 5623, 309, 689, 365, 1566, 300, 309, 307, 406, 5754, 420, 498, 309, 307, 257, 2158, 294, 300, 3613, 51032], 'temperature': 0.0, 'avg_logprob': -0.1582569454027259, 'compression_ratio': 1.5804597701149425, 'no_speech_prob': 0.011247018352150917}, {'id': 275, 'seek': 184202, 'start': 1855.3799999999999, 'end': 1864.7, 'text': " so we are done with the dataflow facts the next things let's think about the initialization how", 'tokens': [51032, 370, 321, 366, 1096, 365, 264, 1412, 10565, 9130, 264, 958, 721, 718, 311, 519, 466, 264, 5883, 2144, 577, 51498], 'temperature': 0.0, 'avg_logprob': -0.1582569454027259, 'compression_ratio': 1.5804597701149425, 'no_speech_prob': 0.011247018352150917}, {'id': 276, 'seek': 186470, 'start': 1864.7, 'end': 1873.94, 'text': ' do I initialize this set what where what do I know not constant is a trouble because if', 'tokens': [50364, 360, 286, 5883, 1125, 341, 992, 437, 689, 437, 360, 286, 458, 406, 5754, 307, 257, 5253, 570, 498, 50826], 'temperature': 0.0, 'avg_logprob': -0.13130067643665133, 'compression_ratio': 1.7864077669902914, 'no_speech_prob': 0.13960440456867218}, {'id': 277, 'seek': 186470, 'start': 1873.94, 'end': 1879.42, 'text': ' something is not constant then it can never become a constant right because it was already', 'tokens': [50826, 746, 307, 406, 5754, 550, 309, 393, 1128, 1813, 257, 5754, 558, 570, 309, 390, 1217, 51100], 'temperature': 0.0, 'avg_logprob': -0.13130067643665133, 'compression_ratio': 1.7864077669902914, 'no_speech_prob': 0.13960440456867218}, {'id': 278, 'seek': 186470, 'start': 1879.42, 'end': 1883.9, 'text': " not constant so for initialization actually I need a different value which says that I don't", 'tokens': [51100, 406, 5754, 370, 337, 5883, 2144, 767, 286, 643, 257, 819, 2158, 597, 1619, 300, 286, 500, 380, 51324], 'temperature': 0.0, 'avg_logprob': -0.13130067643665133, 'compression_ratio': 1.7864077669902914, 'no_speech_prob': 0.13960440456867218}, {'id': 279, 'seek': 186470, 'start': 1883.9, 'end': 1890.6200000000001, 'text': ' know what this is right so I like when you get the full algorithm you will see why you need this', 'tokens': [51324, 458, 437, 341, 307, 558, 370, 286, 411, 562, 291, 483, 264, 1577, 9284, 291, 486, 536, 983, 291, 643, 341, 51660], 'temperature': 0.0, 'avg_logprob': -0.13130067643665133, 'compression_ratio': 1.7864077669902914, 'no_speech_prob': 0.13960440456867218}, {'id': 280, 'seek': 189062, 'start': 1890.62, 'end': 1897.86, 'text': " separate value so I will say don't know dn right so I have so this initially it will be every", 'tokens': [50364, 4994, 2158, 370, 286, 486, 584, 500, 380, 458, 274, 77, 558, 370, 286, 362, 370, 341, 9105, 309, 486, 312, 633, 50726], 'temperature': 0.0, 'avg_logprob': -0.1809703879160424, 'compression_ratio': 1.650887573964497, 'no_speech_prob': 0.17640769481658936}, {'id': 281, 'seek': 189062, 'start': 1897.86, 'end': 1909.3799999999999, 'text': " variable marked to dn which says I don't know what this values yes yes yes yes NC value means", 'tokens': [50726, 7006, 12658, 281, 274, 77, 597, 1619, 286, 500, 380, 458, 437, 341, 4190, 2086, 2086, 2086, 2086, 20786, 2158, 1355, 51302], 'temperature': 0.0, 'avg_logprob': -0.1809703879160424, 'compression_ratio': 1.650887573964497, 'no_speech_prob': 0.17640769481658936}, {'id': 282, 'seek': 189062, 'start': 1909.3799999999999, 'end': 1913.9799999999998, 'text': " I definitely know it is not going to be constant so now it's like a Poisson bit right so if", 'tokens': [51302, 286, 2138, 458, 309, 307, 406, 516, 281, 312, 5754, 370, 586, 309, 311, 411, 257, 6165, 30472, 857, 558, 370, 498, 51532], 'temperature': 0.0, 'avg_logprob': -0.1809703879160424, 'compression_ratio': 1.650887573964497, 'no_speech_prob': 0.17640769481658936}, {'id': 283, 'seek': 191398, 'start': 1913.98, 'end': 1922.34, 'text': ' something is not constant I do any operation with that that cannot be a constant anymore okay so', 'tokens': [50364, 746, 307, 406, 5754, 286, 360, 604, 6916, 365, 300, 300, 2644, 312, 257, 5754, 3602, 1392, 370, 50782], 'temperature': 0.0, 'avg_logprob': -0.1219590172838809, 'compression_ratio': 1.6333333333333333, 'no_speech_prob': 0.0611983984708786}, {'id': 284, 'seek': 191398, 'start': 1922.34, 'end': 1930.18, 'text': " now you have we have done with initialization now let's talk about the meet operator how will be so", 'tokens': [50782, 586, 291, 362, 321, 362, 1096, 365, 5883, 2144, 586, 718, 311, 751, 466, 264, 1677, 12973, 577, 486, 312, 370, 51174], 'temperature': 0.0, 'avg_logprob': -0.1219590172838809, 'compression_ratio': 1.6333333333333333, 'no_speech_prob': 0.0611983984708786}, {'id': 285, 'seek': 191398, 'start': 1930.18, 'end': 1938.7, 'text': ' now I will have these solutions coming from two basic blocks and I want to find out what is going', 'tokens': [51174, 586, 286, 486, 362, 613, 6547, 1348, 490, 732, 3875, 8474, 293, 286, 528, 281, 915, 484, 437, 307, 516, 51600], 'temperature': 0.0, 'avg_logprob': -0.1219590172838809, 'compression_ratio': 1.6333333333333333, 'no_speech_prob': 0.0611983984708786}, {'id': 286, 'seek': 193870, 'start': 1938.7, 'end': 1946.38, 'text': " to be my solution here how do how will I merge so again it's is it a forward analysis or is", 'tokens': [50364, 281, 312, 452, 3827, 510, 577, 360, 577, 486, 286, 22183, 370, 797, 309, 311, 307, 309, 257, 2128, 5215, 420, 307, 50748], 'temperature': 0.0, 'avg_logprob': -0.23369144385969134, 'compression_ratio': 1.688622754491018, 'no_speech_prob': 0.27994444966316223}, {'id': 287, 'seek': 193870, 'start': 1946.38, 'end': 1952.42, 'text': ' it a backward analysis forward right I will keep on computing things as they go and if I want to', 'tokens': [50748, 309, 257, 23897, 5215, 2128, 558, 286, 486, 1066, 322, 15866, 721, 382, 436, 352, 293, 498, 286, 528, 281, 51050], 'temperature': 0.0, 'avg_logprob': -0.23369144385969134, 'compression_ratio': 1.688622754491018, 'no_speech_prob': 0.27994444966316223}, {'id': 288, 'seek': 193870, 'start': 1952.42, 'end': 1965.06, 'text': ' meet how would I do the meet yeah yeah now you need the section each other so you need a more', 'tokens': [51050, 1677, 577, 576, 286, 360, 264, 1677, 1338, 1338, 586, 291, 643, 264, 3541, 1184, 661, 370, 291, 643, 257, 544, 51682], 'temperature': 0.0, 'avg_logprob': -0.23369144385969134, 'compression_ratio': 1.688622754491018, 'no_speech_prob': 0.27994444966316223}, {'id': 289, 'seek': 196506, 'start': 1965.06, 'end': 1982.62, 'text': ' like a more sophisticated meet operator right so now you have to define a meet operator by', 'tokens': [50364, 411, 257, 544, 16950, 1677, 12973, 558, 370, 586, 291, 362, 281, 6964, 257, 1677, 12973, 538, 51242], 'temperature': 0.0, 'avg_logprob': -0.113956938619199, 'compression_ratio': 1.537190082644628, 'no_speech_prob': 0.07311985641717911}, {'id': 290, 'seek': 196506, 'start': 1982.62, 'end': 1992.1799999999998, 'text': ' giving a table right so that is the way to do it there is no other option so so you say this is', 'tokens': [51242, 2902, 257, 3199, 558, 370, 300, 307, 264, 636, 281, 360, 309, 456, 307, 572, 661, 3614, 370, 370, 291, 584, 341, 307, 51720], 'temperature': 0.0, 'avg_logprob': -0.113956938619199, 'compression_ratio': 1.537190082644628, 'no_speech_prob': 0.07311985641717911}, {'id': 291, 'seek': 199218, 'start': 1992.18, 'end': 1999.42, 'text': ' the meet operation so the value can be actually a constant value say CI or it can be NC for one', 'tokens': [50364, 264, 1677, 6916, 370, 264, 2158, 393, 312, 767, 257, 5754, 2158, 584, 37777, 420, 309, 393, 312, 20786, 337, 472, 50726], 'temperature': 0.0, 'avg_logprob': -0.12465107440948486, 'compression_ratio': 1.728395061728395, 'no_speech_prob': 0.21076688170433044}, {'id': 292, 'seek': 199218, 'start': 1999.42, 'end': 2009.9, 'text': ' one path one of the predecessors and for the other predecessor it can be CK and NC then how', 'tokens': [50726, 472, 3100, 472, 295, 264, 24874, 45700, 293, 337, 264, 661, 34991, 309, 393, 312, 383, 42, 293, 20786, 550, 577, 51250], 'temperature': 0.0, 'avg_logprob': -0.12465107440948486, 'compression_ratio': 1.728395061728395, 'no_speech_prob': 0.21076688170433044}, {'id': 293, 'seek': 199218, 'start': 2009.9, 'end': 2018.78, 'text': ' will it happen how will I populate this table what is NC and NC this is NC right if both the', 'tokens': [51250, 486, 309, 1051, 577, 486, 286, 1665, 5256, 341, 3199, 437, 307, 20786, 293, 20786, 341, 307, 20786, 558, 498, 1293, 264, 51694], 'temperature': 0.0, 'avg_logprob': -0.12465107440948486, 'compression_ratio': 1.728395061728395, 'no_speech_prob': 0.21076688170433044}, {'id': 294, 'seek': 201878, 'start': 2018.78, 'end': 2025.58, 'text': ' direction I am getting NC then I this is going to be NC what is CK and NC NC there is nothing I', 'tokens': [50364, 3513, 286, 669, 1242, 20786, 550, 286, 341, 307, 516, 281, 312, 20786, 437, 307, 383, 42, 293, 20786, 20786, 456, 307, 1825, 286, 50704], 'temperature': 0.0, 'avg_logprob': -0.1198256575031045, 'compression_ratio': 1.7076023391812865, 'no_speech_prob': 0.11769558489322662}, {'id': 295, 'seek': 201878, 'start': 2025.58, 'end': 2030.3, 'text': " can do one of them is not constant so no matter what happens I don't care what about this guy is", 'tokens': [50704, 393, 360, 472, 295, 552, 307, 406, 5754, 370, 572, 1871, 437, 2314, 286, 500, 380, 1127, 437, 466, 341, 2146, 307, 50940], 'temperature': 0.0, 'avg_logprob': -0.1198256575031045, 'compression_ratio': 1.7076023391812865, 'no_speech_prob': 0.11769558489322662}, {'id': 296, 'seek': 201878, 'start': 2030.3, 'end': 2043.74, 'text': ' again the same case what about CK and CI yes yes so here I will say that it is it is it is NC if CI', 'tokens': [50940, 797, 264, 912, 1389, 437, 466, 383, 42, 293, 37777, 2086, 2086, 370, 510, 286, 486, 584, 300, 309, 307, 309, 307, 309, 307, 20786, 498, 37777, 51612], 'temperature': 0.0, 'avg_logprob': -0.1198256575031045, 'compression_ratio': 1.7076023391812865, 'no_speech_prob': 0.11769558489322662}, {'id': 297, 'seek': 204374, 'start': 2043.74, 'end': 2059.14, 'text': ' is not equal to CK and it is CI if CI is equal to CK right so I wanted to take you out of the comfort', 'tokens': [50364, 307, 406, 2681, 281, 383, 42, 293, 309, 307, 37777, 498, 37777, 307, 2681, 281, 383, 42, 558, 370, 286, 1415, 281, 747, 291, 484, 295, 264, 3400, 51134], 'temperature': 0.0, 'avg_logprob': -0.1398013004889855, 'compression_ratio': 1.463768115942029, 'no_speech_prob': 0.05647486448287964}, {'id': 298, 'seek': 204374, 'start': 2059.14, 'end': 2064.14, 'text': ' zone things are not as simple as union intersection always your meet operator can be a slightly more', 'tokens': [51134, 6668, 721, 366, 406, 382, 2199, 382, 11671, 15236, 1009, 428, 1677, 12973, 393, 312, 257, 4748, 544, 51384], 'temperature': 0.0, 'avg_logprob': -0.1398013004889855, 'compression_ratio': 1.463768115942029, 'no_speech_prob': 0.05647486448287964}, {'id': 299, 'seek': 206414, 'start': 2064.14, 'end': 2081.58, 'text': ' sophisticated meet operation yeah yeah why not so this is the case right I just that does the', 'tokens': [50364, 16950, 1677, 6916, 1338, 1338, 983, 406, 370, 341, 307, 264, 1389, 558, 286, 445, 300, 775, 264, 51236], 'temperature': 0.0, 'avg_logprob': -0.1998742132475882, 'compression_ratio': 1.6149425287356323, 'no_speech_prob': 0.10882801562547684}, {'id': 300, 'seek': 206414, 'start': 2081.58, 'end': 2087.18, 'text': ' next with this example in one one place it is assigned 29 the other place it is assigned 42', 'tokens': [51236, 958, 365, 341, 1365, 294, 472, 472, 1081, 309, 307, 13279, 9413, 264, 661, 1081, 309, 307, 13279, 14034, 51516], 'temperature': 0.0, 'avg_logprob': -0.1998742132475882, 'compression_ratio': 1.6149425287356323, 'no_speech_prob': 0.10882801562547684}, {'id': 301, 'seek': 206414, 'start': 2087.18, 'end': 2091.8199999999997, 'text': " but you don't know runtime you do not know which path will be taken so I cannot surely say that", 'tokens': [51516, 457, 291, 500, 380, 458, 34474, 291, 360, 406, 458, 597, 3100, 486, 312, 2726, 370, 286, 2644, 11468, 584, 300, 51748], 'temperature': 0.0, 'avg_logprob': -0.1998742132475882, 'compression_ratio': 1.6149425287356323, 'no_speech_prob': 0.10882801562547684}, {'id': 302, 'seek': 209182, 'start': 2091.82, 'end': 2103.78, 'text': ' this value is going to be 29 42 what about ha right sorry sorry I am sorry I should have made', 'tokens': [50364, 341, 2158, 307, 516, 281, 312, 9413, 14034, 437, 466, 324, 558, 2597, 2597, 286, 669, 2597, 286, 820, 362, 1027, 50962], 'temperature': 0.0, 'avg_logprob': -0.32349010308583576, 'compression_ratio': 1.4538461538461538, 'no_speech_prob': 0.1949891299009323}, {'id': 303, 'seek': 209182, 'start': 2103.78, 'end': 2117.1400000000003, 'text': " the don't know column also so tell me what should happen we don't know that was easy thing that", 'tokens': [50962, 264, 500, 380, 458, 7738, 611, 370, 980, 385, 437, 820, 1051, 321, 500, 380, 458, 300, 390, 1858, 551, 300, 51630], 'temperature': 0.0, 'avg_logprob': -0.32349010308583576, 'compression_ratio': 1.4538461538461538, 'no_speech_prob': 0.1949891299009323}, {'id': 304, 'seek': 211714, 'start': 2117.14, 'end': 2129.58, 'text': " okay now I can relax I've done one okay don't know don't know don't know don't know NC NC I", 'tokens': [50364, 1392, 586, 286, 393, 5789, 286, 600, 1096, 472, 1392, 500, 380, 458, 500, 380, 458, 500, 380, 458, 500, 380, 458, 20786, 20786, 286, 50986], 'temperature': 0.0, 'avg_logprob': -0.3296944467644942, 'compression_ratio': 1.6964285714285714, 'no_speech_prob': 0.11757469922304153}, {'id': 305, 'seek': 211714, 'start': 2129.58, 'end': 2138.14, 'text': " don't care I can't do anything don't know an NC again NC okay then what I was on this table is", 'tokens': [50986, 500, 380, 1127, 286, 393, 380, 360, 1340, 500, 380, 458, 364, 20786, 797, 20786, 1392, 550, 437, 286, 390, 322, 341, 3199, 307, 51414], 'temperature': 0.0, 'avg_logprob': -0.3296944467644942, 'compression_ratio': 1.6964285714285714, 'no_speech_prob': 0.11757469922304153}, {'id': 306, 'seek': 211714, 'start': 2138.14, 'end': 2144.7799999999997, 'text': ' symmetric so I did not actually feel both sides I can just fill the upper triangular so what about', 'tokens': [51414, 32330, 370, 286, 630, 406, 767, 841, 1293, 4881, 286, 393, 445, 2836, 264, 6597, 38190, 370, 437, 466, 51746], 'temperature': 0.0, 'avg_logprob': -0.3296944467644942, 'compression_ratio': 1.6964285714285714, 'no_speech_prob': 0.11757469922304153}, {'id': 307, 'seek': 214478, 'start': 2144.78, 'end': 2153.5800000000004, 'text': " constant and don't know so it cannot be NC because don't know you don't know right what", 'tokens': [50364, 5754, 293, 500, 380, 458, 370, 309, 2644, 312, 20786, 570, 500, 380, 458, 291, 500, 380, 458, 558, 437, 50804], 'temperature': 0.0, 'avg_logprob': -0.20411740711757115, 'compression_ratio': 1.74375, 'no_speech_prob': 0.01430773176252842}, {'id': 308, 'seek': 214478, 'start': 2153.5800000000004, 'end': 2159.02, 'text': " if it becomes CI you write don't know what is the value no but if you say don't know then it", 'tokens': [50804, 498, 309, 3643, 37777, 291, 2464, 500, 380, 458, 437, 307, 264, 2158, 572, 457, 498, 291, 584, 500, 380, 458, 550, 309, 51076], 'temperature': 0.0, 'avg_logprob': -0.20411740711757115, 'compression_ratio': 1.74375, 'no_speech_prob': 0.01430773176252842}, {'id': 309, 'seek': 214478, 'start': 2159.02, 'end': 2170.0600000000004, 'text': " will always remain don't know because maybe that guy is eventually become CI so for the time being", 'tokens': [51076, 486, 1009, 6222, 500, 380, 458, 570, 1310, 300, 2146, 307, 4728, 1813, 37777, 370, 337, 264, 565, 885, 51628], 'temperature': 0.0, 'avg_logprob': -0.20411740711757115, 'compression_ratio': 1.74375, 'no_speech_prob': 0.01430773176252842}, {'id': 310, 'seek': 217006, 'start': 2170.06, 'end': 2177.2999999999997, 'text': " you can actually put it as CI if it gets later this don't know will turn into something eventually", 'tokens': [50364, 291, 393, 767, 829, 309, 382, 37777, 498, 309, 2170, 1780, 341, 500, 380, 458, 486, 1261, 666, 746, 4728, 50726], 'temperature': 0.0, 'avg_logprob': -0.12832982856107045, 'compression_ratio': 1.85, 'no_speech_prob': 0.039258964359760284}, {'id': 311, 'seek': 217006, 'start': 2177.2999999999997, 'end': 2183.5, 'text': ' it will either turn to some other come other constant or some not constant so at the end of', 'tokens': [50726, 309, 486, 2139, 1261, 281, 512, 661, 808, 661, 5754, 420, 512, 406, 5754, 370, 412, 264, 917, 295, 51036], 'temperature': 0.0, 'avg_logprob': -0.12832982856107045, 'compression_ratio': 1.85, 'no_speech_prob': 0.039258964359760284}, {'id': 312, 'seek': 217006, 'start': 2183.5, 'end': 2187.34, 'text': " the analysis you will never have don't know anywhere right everything will get propagated", 'tokens': [51036, 264, 5215, 291, 486, 1128, 362, 500, 380, 458, 4992, 558, 1203, 486, 483, 12425, 770, 51228], 'temperature': 0.0, 'avg_logprob': -0.12832982856107045, 'compression_ratio': 1.85, 'no_speech_prob': 0.039258964359760284}, {'id': 313, 'seek': 217006, 'start': 2187.34, 'end': 2193.82, 'text': ' right so then you will eventually be able to tell you that the final meet will happen and', 'tokens': [51228, 558, 370, 550, 291, 486, 4728, 312, 1075, 281, 980, 291, 300, 264, 2572, 1677, 486, 1051, 293, 51552], 'temperature': 0.0, 'avg_logprob': -0.12832982856107045, 'compression_ratio': 1.85, 'no_speech_prob': 0.039258964359760284}, {'id': 314, 'seek': 219382, 'start': 2193.82, 'end': 2202.38, 'text': ' eventually some things can be NC things can remain NC right things can be not constant', 'tokens': [50364, 4728, 512, 721, 393, 312, 20786, 721, 393, 6222, 20786, 558, 721, 393, 312, 406, 5754, 50792], 'temperature': 0.0, 'avg_logprob': -0.25634796336545784, 'compression_ratio': 1.8533333333333333, 'no_speech_prob': 0.04725867882370949}, {'id': 315, 'seek': 219382, 'start': 2202.38, 'end': 2211.9, 'text': ' like this guy is not constant right this particular location this this particular location right you', 'tokens': [50792, 411, 341, 2146, 307, 406, 5754, 558, 341, 1729, 4914, 341, 341, 1729, 4914, 558, 291, 51268], 'temperature': 0.0, 'avg_logprob': -0.25634796336545784, 'compression_ratio': 1.8533333333333333, 'no_speech_prob': 0.04725867882370949}, {'id': 316, 'seek': 219382, 'start': 2211.9, 'end': 2221.1800000000003, 'text': ' are getting from you are getting X equal to 42 and X equals 29 was somewhere right so then', 'tokens': [51268, 366, 1242, 490, 291, 366, 1242, 1783, 2681, 281, 14034, 293, 1783, 6915, 9413, 390, 4079, 558, 370, 550, 51732], 'temperature': 0.0, 'avg_logprob': -0.25634796336545784, 'compression_ratio': 1.8533333333333333, 'no_speech_prob': 0.04725867882370949}, {'id': 317, 'seek': 222118, 'start': 2221.18, 'end': 2229.7799999999997, 'text': " it will remain NC eventually so I am being optimistic let's put instead of putting don't", 'tokens': [50364, 309, 486, 6222, 20786, 4728, 370, 286, 669, 885, 19397, 718, 311, 829, 2602, 295, 3372, 500, 380, 50794], 'temperature': 0.0, 'avg_logprob': -0.3615886744330911, 'compression_ratio': 1.6904761904761905, 'no_speech_prob': 0.05124155059456825}, {'id': 318, 'seek': 222118, 'start': 2229.7799999999997, 'end': 2236.1, 'text': " know let's put CI which is the data here eventually that don't know will resolve something else and", 'tokens': [50794, 458, 718, 311, 829, 37777, 597, 307, 264, 1412, 510, 4728, 300, 500, 380, 458, 486, 14151, 746, 1646, 293, 51110], 'temperature': 0.0, 'avg_logprob': -0.3615886744330911, 'compression_ratio': 1.6904761904761905, 'no_speech_prob': 0.05124155059456825}, {'id': 319, 'seek': 222118, 'start': 2236.1, 'end': 2244.7, 'text': " will update get updated anyway so I don't care so I do the same business right so I have a meet", 'tokens': [51110, 486, 5623, 483, 10588, 4033, 370, 286, 500, 380, 1127, 370, 286, 360, 264, 912, 1606, 558, 370, 286, 362, 257, 1677, 51540], 'temperature': 0.0, 'avg_logprob': -0.3615886744330911, 'compression_ratio': 1.6904761904761905, 'no_speech_prob': 0.05124155059456825}, {'id': 320, 'seek': 224470, 'start': 2244.7, 'end': 2249.62, 'text': " table now and you have to look up this table yeah it's constant but constant can move to", 'tokens': [50364, 3199, 586, 293, 291, 362, 281, 574, 493, 341, 3199, 1338, 309, 311, 5754, 457, 5754, 393, 1286, 281, 50610], 'temperature': 0.0, 'avg_logprob': -0.1711280367790012, 'compression_ratio': 1.8795180722891567, 'no_speech_prob': 0.590987503528595}, {'id': 321, 'seek': 224470, 'start': 2249.62, 'end': 2255.8199999999997, 'text': ' NC no no no even at this location we when do when does analysis terminate when nothing changes', 'tokens': [50610, 20786, 572, 572, 572, 754, 412, 341, 4914, 321, 562, 360, 562, 775, 5215, 10761, 473, 562, 1825, 2962, 50920], 'temperature': 0.0, 'avg_logprob': -0.1711280367790012, 'compression_ratio': 1.8795180722891567, 'no_speech_prob': 0.590987503528595}, {'id': 322, 'seek': 224470, 'start': 2255.8199999999997, 'end': 2259.8199999999997, 'text': ' across any basic block and in the while loop we revisit every basic block again and again', 'tokens': [50920, 2108, 604, 3875, 3461, 293, 294, 264, 1339, 6367, 321, 32676, 633, 3875, 3461, 797, 293, 797, 51120], 'temperature': 0.0, 'avg_logprob': -0.1711280367790012, 'compression_ratio': 1.8795180722891567, 'no_speech_prob': 0.590987503528595}, {'id': 323, 'seek': 224470, 'start': 2259.8199999999997, 'end': 2267.7, 'text': ' when this location will get updated later but in that case it would not have been like the other', 'tokens': [51120, 562, 341, 4914, 486, 483, 10588, 1780, 457, 294, 300, 1389, 309, 576, 406, 362, 668, 411, 264, 661, 51514], 'temperature': 0.0, 'avg_logprob': -0.1711280367790012, 'compression_ratio': 1.8795180722891567, 'no_speech_prob': 0.590987503528595}, {'id': 324, 'seek': 224470, 'start': 2267.7, 'end': 2272.4199999999996, 'text': " edge would not have been in so if you're getting a don't know from one of the sites it means that", 'tokens': [51514, 4691, 576, 406, 362, 668, 294, 370, 498, 291, 434, 1242, 257, 500, 380, 458, 490, 472, 295, 264, 7533, 309, 1355, 300, 51750], 'temperature': 0.0, 'avg_logprob': -0.1711280367790012, 'compression_ratio': 1.8795180722891567, 'no_speech_prob': 0.590987503528595}, {'id': 325, 'seek': 227242, 'start': 2272.42, 'end': 2279.2200000000003, 'text': " basic block has not got traversed yet otherwise it cannot have remained don't know that's what", 'tokens': [50364, 3875, 3461, 575, 406, 658, 23149, 292, 1939, 5911, 309, 2644, 362, 12780, 500, 380, 458, 300, 311, 437, 50704], 'temperature': 0.0, 'avg_logprob': -0.18862486339750745, 'compression_ratio': 1.83203125, 'no_speech_prob': 0.024222861975431442}, {'id': 326, 'seek': 227242, 'start': 2279.2200000000003, 'end': 2283.06, 'text': " I'm saying at the end of the analysis you'll never have don't know anywhere other than maybe", 'tokens': [50704, 286, 478, 1566, 412, 264, 917, 295, 264, 5215, 291, 603, 1128, 362, 500, 380, 458, 4992, 661, 813, 1310, 50896], 'temperature': 0.0, 'avg_logprob': -0.18862486339750745, 'compression_ratio': 1.83203125, 'no_speech_prob': 0.024222861975431442}, {'id': 327, 'seek': 227242, 'start': 2283.06, 'end': 2289.98, 'text': " unreachable code right everywhere else you will have certain value you'll either have a constant", 'tokens': [50896, 517, 16226, 712, 3089, 558, 5315, 1646, 291, 486, 362, 1629, 2158, 291, 603, 2139, 362, 257, 5754, 51242], 'temperature': 0.0, 'avg_logprob': -0.18862486339750745, 'compression_ratio': 1.83203125, 'no_speech_prob': 0.024222861975431442}, {'id': 328, 'seek': 227242, 'start': 2289.98, 'end': 2294.7000000000003, 'text': " value or you'll have not constant you cannot it cannot remain don't know excellent question", 'tokens': [51242, 2158, 420, 291, 603, 362, 406, 5754, 291, 2644, 309, 2644, 6222, 500, 380, 458, 7103, 1168, 51478], 'temperature': 0.0, 'avg_logprob': -0.18862486339750745, 'compression_ratio': 1.83203125, 'no_speech_prob': 0.024222861975431442}, {'id': 329, 'seek': 227242, 'start': 2294.7000000000003, 'end': 2300.7000000000003, 'text': ' guys are asking really good questions so okay so what if we take input from the user what is', 'tokens': [51478, 1074, 366, 3365, 534, 665, 1651, 370, 1392, 370, 437, 498, 321, 747, 4846, 490, 264, 4195, 437, 307, 51778], 'temperature': 0.0, 'avg_logprob': -0.18862486339750745, 'compression_ratio': 1.83203125, 'no_speech_prob': 0.024222861975431442}, {'id': 330, 'seek': 230070, 'start': 2300.7, 'end': 2307.5, 'text': " that going to be what is that variable going to be don't know not constant not constant you", 'tokens': [50364, 300, 516, 281, 312, 437, 307, 300, 7006, 516, 281, 312, 500, 380, 458, 406, 5754, 406, 5754, 291, 50704], 'temperature': 0.0, 'avg_logprob': -0.2524455451965332, 'compression_ratio': 2.034632034632035, 'no_speech_prob': 0.038438111543655396}, {'id': 331, 'seek': 230070, 'start': 2307.5, 'end': 2312.22, 'text': " immediately tell it not constant for parameters I mean if you're doing interprocedural analysis", 'tokens': [50704, 4258, 980, 309, 406, 5754, 337, 9834, 286, 914, 498, 291, 434, 884, 728, 4318, 1232, 1807, 5215, 50940], 'temperature': 0.0, 'avg_logprob': -0.2524455451965332, 'compression_ratio': 2.034632034632035, 'no_speech_prob': 0.038438111543655396}, {'id': 332, 'seek': 230070, 'start': 2312.22, 'end': 2318.98, 'text': ' and those are the inputs for a function the parameters are the inputs if you consider the', 'tokens': [50940, 293, 729, 366, 264, 15743, 337, 257, 2445, 264, 9834, 366, 264, 15743, 498, 291, 1949, 264, 51278], 'temperature': 0.0, 'avg_logprob': -0.2524455451965332, 'compression_ratio': 2.034632034632035, 'no_speech_prob': 0.038438111543655396}, {'id': 333, 'seek': 230070, 'start': 2318.98, 'end': 2324.3799999999997, 'text': " effect of other functions so right now we're doing this intra procedure analysis which is", 'tokens': [51278, 1802, 295, 661, 6828, 370, 558, 586, 321, 434, 884, 341, 43358, 10747, 5215, 597, 307, 51548], 'temperature': 0.0, 'avg_logprob': -0.2524455451965332, 'compression_ratio': 2.034632034632035, 'no_speech_prob': 0.038438111543655396}, {'id': 334, 'seek': 230070, 'start': 2324.3799999999997, 'end': 2329.2599999999998, 'text': ' not looking at other functions what other functions are so again the other question is safety right so', 'tokens': [51548, 406, 1237, 412, 661, 6828, 437, 661, 6828, 366, 370, 797, 264, 661, 1168, 307, 4514, 558, 370, 51792], 'temperature': 0.0, 'avg_logprob': -0.2524455451965332, 'compression_ratio': 2.034632034632035, 'no_speech_prob': 0.038438111543655396}, {'id': 335, 'seek': 232926, 'start': 2329.26, 'end': 2334.6200000000003, 'text': " what is more safe putting a variable to don't know or sorry don't know is not even in the picture", 'tokens': [50364, 437, 307, 544, 3273, 3372, 257, 7006, 281, 500, 380, 458, 420, 2597, 500, 380, 458, 307, 406, 754, 294, 264, 3036, 50632], 'temperature': 0.0, 'avg_logprob': -0.14298966590394366, 'compression_ratio': 1.8365384615384615, 'no_speech_prob': 0.012692347168922424}, {'id': 336, 'seek': 232926, 'start': 2334.6200000000003, 'end': 2341.5, 'text': ' is it to putting a variable to a constant or putting it to a not constant which is safe not', 'tokens': [50632, 307, 309, 281, 3372, 257, 7006, 281, 257, 5754, 420, 3372, 309, 281, 257, 406, 5754, 597, 307, 3273, 406, 50976], 'temperature': 0.0, 'avg_logprob': -0.14298966590394366, 'compression_ratio': 1.8365384615384615, 'no_speech_prob': 0.012692347168922424}, {'id': 337, 'seek': 232926, 'start': 2341.5, 'end': 2349.94, 'text': " constant I'll run with optimization right but if I put it to like constant it's propagated and I'll", 'tokens': [50976, 5754, 286, 603, 1190, 365, 19618, 558, 457, 498, 286, 829, 309, 281, 411, 5754, 309, 311, 12425, 770, 293, 286, 603, 51398], 'temperature': 0.0, 'avg_logprob': -0.14298966590394366, 'compression_ratio': 1.8365384615384615, 'no_speech_prob': 0.012692347168922424}, {'id': 338, 'seek': 232926, 'start': 2349.94, 'end': 2355.86, 'text': " reduce it and I'll replace it by wrong things that is dangerous I can't allow that to happen", 'tokens': [51398, 5407, 309, 293, 286, 603, 7406, 309, 538, 2085, 721, 300, 307, 5795, 286, 393, 380, 2089, 300, 281, 1051, 51694], 'temperature': 0.0, 'avg_logprob': -0.14298966590394366, 'compression_ratio': 1.8365384615384615, 'no_speech_prob': 0.012692347168922424}, {'id': 339, 'seek': 235586, 'start': 2355.86, 'end': 2362.98, 'text': ' right so by same direction is putting something to not constant is always safe so putting the', 'tokens': [50364, 558, 370, 538, 912, 3513, 307, 3372, 746, 281, 406, 5754, 307, 1009, 3273, 370, 3372, 264, 50720], 'temperature': 0.0, 'avg_logprob': -0.16492492181283455, 'compression_ratio': 1.9090909090909092, 'no_speech_prob': 0.003361660521477461}, {'id': 340, 'seek': 235586, 'start': 2362.98, 'end': 2368.82, 'text': " parameters to not constants is always safe I don't have a problem right so I'll not be", 'tokens': [50720, 9834, 281, 406, 35870, 307, 1009, 3273, 286, 500, 380, 362, 257, 1154, 558, 370, 286, 603, 406, 312, 51012], 'temperature': 0.0, 'avg_logprob': -0.16492492181283455, 'compression_ratio': 1.9090909090909092, 'no_speech_prob': 0.003361660521477461}, {'id': 341, 'seek': 235586, 'start': 2368.82, 'end': 2373.7000000000003, 'text': ' able to do some optimization yes fine so if you are if you are ready to do an interprocedural', 'tokens': [51012, 1075, 281, 360, 512, 19618, 2086, 2489, 370, 498, 291, 366, 498, 291, 366, 1919, 281, 360, 364, 728, 4318, 1232, 1807, 51256], 'temperature': 0.0, 'avg_logprob': -0.16492492181283455, 'compression_ratio': 1.9090909090909092, 'no_speech_prob': 0.003361660521477461}, {'id': 342, 'seek': 235586, 'start': 2373.7000000000003, 'end': 2377.26, 'text': ' analysis which looks at the effect of other procedures then maybe some of them will turn', 'tokens': [51256, 5215, 597, 1542, 412, 264, 1802, 295, 661, 13846, 550, 1310, 512, 295, 552, 486, 1261, 51434], 'temperature': 0.0, 'avg_logprob': -0.16492492181283455, 'compression_ratio': 1.9090909090909092, 'no_speech_prob': 0.003361660521477461}, {'id': 343, 'seek': 235586, 'start': 2377.26, 'end': 2383.02, 'text': " into constants great you can make use of it but till then you can keep it as constant if you don't", 'tokens': [51434, 666, 35870, 869, 291, 393, 652, 764, 295, 309, 457, 4288, 550, 291, 393, 1066, 309, 382, 5754, 498, 291, 500, 380, 51722], 'temperature': 0.0, 'avg_logprob': -0.16492492181283455, 'compression_ratio': 1.9090909090909092, 'no_speech_prob': 0.003361660521477461}, {'id': 344, 'seek': 238302, 'start': 2383.02, 'end': 2395.78, 'text': ' want to do right okay so good so we have now the meat table now the other question is the transfer', 'tokens': [50364, 528, 281, 360, 558, 1392, 370, 665, 370, 321, 362, 586, 264, 4615, 3199, 586, 264, 661, 1168, 307, 264, 5003, 51002], 'temperature': 0.0, 'avg_logprob': -0.2257336207798549, 'compression_ratio': 2.1452513966480447, 'no_speech_prob': 0.11578919738531113}, {'id': 345, 'seek': 238302, 'start': 2395.78, 'end': 2400.2599999999998, 'text': ' function more than two predecessors that was that was the case right why have predecessor one and', 'tokens': [51002, 2445, 544, 813, 732, 24874, 45700, 300, 390, 300, 390, 264, 1389, 558, 983, 362, 34991, 472, 293, 51226], 'temperature': 0.0, 'avg_logprob': -0.2257336207798549, 'compression_ratio': 2.1452513966480447, 'no_speech_prob': 0.11578919738531113}, {'id': 346, 'seek': 238302, 'start': 2400.2599999999998, 'end': 2406.5, 'text': ' predecessor two that was the meat is always between two predecessors the meat operation is', 'tokens': [51226, 34991, 732, 300, 390, 264, 4615, 307, 1009, 1296, 732, 24874, 45700, 264, 4615, 6916, 307, 51538], 'temperature': 0.0, 'avg_logprob': -0.2257336207798549, 'compression_ratio': 2.1452513966480447, 'no_speech_prob': 0.11578919738531113}, {'id': 347, 'seek': 238302, 'start': 2406.5, 'end': 2411.18, 'text': ' always between two predecessors right or you are saying more than two so you take first take the', 'tokens': [51538, 1009, 1296, 732, 24874, 45700, 558, 420, 291, 366, 1566, 544, 813, 732, 370, 291, 747, 700, 747, 264, 51772], 'temperature': 0.0, 'avg_logprob': -0.2257336207798549, 'compression_ratio': 2.1452513966480447, 'no_speech_prob': 0.11578919738531113}, {'id': 348, 'seek': 241118, 'start': 2411.18, 'end': 2417.58, 'text': ' meat of two and then apply that to the third apply that to the fourth take pairs like pair', 'tokens': [50364, 4615, 295, 732, 293, 550, 3079, 300, 281, 264, 2636, 3079, 300, 281, 264, 6409, 747, 15494, 411, 6119, 50684], 'temperature': 0.0, 'avg_logprob': -0.2068669354474103, 'compression_ratio': 1.9893048128342246, 'no_speech_prob': 0.051732733845710754}, {'id': 349, 'seek': 241118, 'start': 2417.58, 'end': 2428.66, 'text': ' wise reduces right so where are we sorry I lost that the transfer function so transfer function', 'tokens': [50684, 10829, 18081, 558, 370, 689, 366, 321, 2597, 286, 2731, 300, 264, 5003, 2445, 370, 5003, 2445, 51238], 'temperature': 0.0, 'avg_logprob': -0.2068669354474103, 'compression_ratio': 1.9893048128342246, 'no_speech_prob': 0.051732733845710754}, {'id': 350, 'seek': 241118, 'start': 2428.66, 'end': 2433.46, 'text': ' how do we how do we model the transfer function so what is the transfer function given such a', 'tokens': [51238, 577, 360, 321, 577, 360, 321, 2316, 264, 5003, 2445, 370, 437, 307, 264, 5003, 2445, 2212, 1270, 257, 51478], 'temperature': 0.0, 'avg_logprob': -0.2068669354474103, 'compression_ratio': 1.9893048128342246, 'no_speech_prob': 0.051732733845710754}, {'id': 351, 'seek': 241118, 'start': 2433.46, 'end': 2439.7, 'text': ' solution given you know this variable value binding at the beginning of the basic block you', 'tokens': [51478, 3827, 2212, 291, 458, 341, 7006, 2158, 17359, 412, 264, 2863, 295, 264, 3875, 3461, 291, 51790], 'temperature': 0.0, 'avg_logprob': -0.2068669354474103, 'compression_ratio': 1.9893048128342246, 'no_speech_prob': 0.051732733845710754}, {'id': 352, 'seek': 243970, 'start': 2439.7, 'end': 2446.54, 'text': ' would like to find out the variable bind value binding at the end of the basic block so how do', 'tokens': [50364, 576, 411, 281, 915, 484, 264, 7006, 14786, 2158, 17359, 412, 264, 917, 295, 264, 3875, 3461, 370, 577, 360, 50706], 'temperature': 0.0, 'avg_logprob': -0.1924200165137816, 'compression_ratio': 1.7906976744186047, 'no_speech_prob': 0.012420589104294777}, {'id': 353, 'seek': 243970, 'start': 2446.54, 'end': 2454.9399999999996, 'text': ' we do this why should you make it NC okay previous so what is so how do I write it you want to dictate', 'tokens': [50706, 321, 360, 341, 983, 820, 291, 652, 309, 20786, 1392, 3894, 370, 437, 307, 370, 577, 360, 286, 2464, 309, 291, 528, 281, 36071, 51126], 'temperature': 0.0, 'avg_logprob': -0.1924200165137816, 'compression_ratio': 1.7906976744186047, 'no_speech_prob': 0.012420589104294777}, {'id': 354, 'seek': 243970, 'start': 2454.9399999999996, 'end': 2463.54, 'text': ' me which one which one what for a variable assignment okay why NC why why if that gets', 'tokens': [51126, 385, 597, 472, 597, 472, 437, 337, 257, 7006, 15187, 1392, 983, 20786, 983, 983, 498, 300, 2170, 51556], 'temperature': 0.0, 'avg_logprob': -0.1924200165137816, 'compression_ratio': 1.7906976744186047, 'no_speech_prob': 0.012420589104294777}, {'id': 355, 'seek': 243970, 'start': 2463.54, 'end': 2469.66, 'text': ' calculated to the same constant if that expression that evaluate maybe it computes the same constant', 'tokens': [51556, 15598, 281, 264, 912, 5754, 498, 300, 6114, 300, 13059, 1310, 309, 715, 1819, 264, 912, 5754, 51862], 'temperature': 0.0, 'avg_logprob': -0.1924200165137816, 'compression_ratio': 1.7906976744186047, 'no_speech_prob': 0.012420589104294777}, {'id': 356, 'seek': 246966, 'start': 2469.66, 'end': 2477.42, 'text': ' very good very good if it is a constant then yeah so we have to look at now this is very tricky', 'tokens': [50364, 588, 665, 588, 665, 498, 309, 307, 257, 5754, 550, 1338, 370, 321, 362, 281, 574, 412, 586, 341, 307, 588, 12414, 50752], 'temperature': 0.0, 'avg_logprob': -0.11885803010728624, 'compression_ratio': 1.829268292682927, 'no_speech_prob': 0.0013662666315212846}, {'id': 357, 'seek': 246966, 'start': 2477.42, 'end': 2483.3799999999997, 'text': ' because I will have to look at what is the operation happening right so essentially now', 'tokens': [50752, 570, 286, 486, 362, 281, 574, 412, 437, 307, 264, 6916, 2737, 558, 370, 4476, 586, 51050], 'temperature': 0.0, 'avg_logprob': -0.11885803010728624, 'compression_ratio': 1.829268292682927, 'no_speech_prob': 0.0013662666315212846}, {'id': 358, 'seek': 246966, 'start': 2483.3799999999997, 'end': 2492.7799999999997, 'text': " let's say I have plus operator which is that I have expression like X equals a plus B right in", 'tokens': [51050, 718, 311, 584, 286, 362, 1804, 12973, 597, 307, 300, 286, 362, 6114, 411, 1783, 6915, 257, 1804, 363, 558, 294, 51520], 'temperature': 0.0, 'avg_logprob': -0.11885803010728624, 'compression_ratio': 1.829268292682927, 'no_speech_prob': 0.0013662666315212846}, {'id': 359, 'seek': 246966, 'start': 2492.7799999999997, 'end': 2498.54, 'text': ' that case I will have to decide that what is the value of what are the values of a possible what', 'tokens': [51520, 300, 1389, 286, 486, 362, 281, 4536, 300, 437, 307, 264, 2158, 295, 437, 366, 264, 4190, 295, 257, 1944, 437, 51808], 'temperature': 0.0, 'avg_logprob': -0.11885803010728624, 'compression_ratio': 1.829268292682927, 'no_speech_prob': 0.0013662666315212846}, {'id': 360, 'seek': 249854, 'start': 2498.54, 'end': 2510.42, 'text': " are the values of B possible if value of a is c1 this is c2 let's say c a cb then we have this", 'tokens': [50364, 366, 264, 4190, 295, 363, 1944, 498, 2158, 295, 257, 307, 269, 16, 341, 307, 269, 17, 718, 311, 584, 269, 257, 269, 65, 550, 321, 362, 341, 50958], 'temperature': 0.0, 'avg_logprob': -0.15679173591809395, 'compression_ratio': 1.7407407407407407, 'no_speech_prob': 0.005040737334638834}, {'id': 361, 'seek': 249854, 'start': 2510.42, 'end': 2518.06, 'text': " can be not constant this can be don't know and it can be not constant and it can be don't know I", 'tokens': [50958, 393, 312, 406, 5754, 341, 393, 312, 500, 380, 458, 293, 309, 393, 312, 406, 5754, 293, 309, 393, 312, 500, 380, 458, 286, 51340], 'temperature': 0.0, 'avg_logprob': -0.15679173591809395, 'compression_ratio': 1.7407407407407407, 'no_speech_prob': 0.005040737334638834}, {'id': 362, 'seek': 249854, 'start': 2518.06, 'end': 2525.42, 'text': ' have to write such a table for every single operation that I want to model because now you', 'tokens': [51340, 362, 281, 2464, 1270, 257, 3199, 337, 633, 2167, 6916, 300, 286, 528, 281, 2316, 570, 586, 291, 51708], 'temperature': 0.0, 'avg_logprob': -0.15679173591809395, 'compression_ratio': 1.7407407407407407, 'no_speech_prob': 0.005040737334638834}, {'id': 363, 'seek': 252542, 'start': 2525.42, 'end': 2533.82, 'text': ' have yes so you have to do this is going to be c a plus cb you have to add them at runtime sorry', 'tokens': [50364, 362, 2086, 370, 291, 362, 281, 360, 341, 307, 516, 281, 312, 269, 257, 1804, 269, 65, 291, 362, 281, 909, 552, 412, 34474, 2597, 50784], 'temperature': 0.0, 'avg_logprob': -0.1619368808370241, 'compression_ratio': 1.630952380952381, 'no_speech_prob': 0.004051745403558016}, {'id': 364, 'seek': 252542, 'start': 2533.82, 'end': 2541.46, 'text': ' compile time like analysis time you have to actually add 2 and 3 figure out that value and', 'tokens': [50784, 31413, 565, 411, 5215, 565, 291, 362, 281, 767, 909, 568, 293, 805, 2573, 484, 300, 2158, 293, 51166], 'temperature': 0.0, 'avg_logprob': -0.1619368808370241, 'compression_ratio': 1.630952380952381, 'no_speech_prob': 0.004051745403558016}, {'id': 365, 'seek': 252542, 'start': 2541.46, 'end': 2550.5, 'text': " put it in the constant right what about NC business NC is going to be NC don't know is", 'tokens': [51166, 829, 309, 294, 264, 5754, 558, 437, 466, 20786, 1606, 20786, 307, 516, 281, 312, 20786, 500, 380, 458, 307, 51618], 'temperature': 0.0, 'avg_logprob': -0.1619368808370241, 'compression_ratio': 1.630952380952381, 'no_speech_prob': 0.004051745403558016}, {'id': 366, 'seek': 255050, 'start': 2550.5, 'end': 2556.02, 'text': " that troublesome thing so let's keep it don't know I don't even know what to do with it I mean", 'tokens': [50364, 300, 46838, 551, 370, 718, 311, 1066, 309, 500, 380, 458, 286, 500, 380, 754, 458, 437, 281, 360, 365, 309, 286, 914, 50640], 'temperature': 0.0, 'avg_logprob': -0.3273128668467204, 'compression_ratio': 1.8317307692307692, 'no_speech_prob': 0.09050668030977249}, {'id': 367, 'seek': 255050, 'start': 2556.02, 'end': 2565.5, 'text': " let's not even bother so this will eventually get resolved anyway I mean I can be totally get a", 'tokens': [50640, 718, 311, 406, 754, 8677, 370, 341, 486, 4728, 483, 20772, 4033, 286, 914, 286, 393, 312, 3879, 483, 257, 51114], 'temperature': 0.0, 'avg_logprob': -0.3273128668467204, 'compression_ratio': 1.8317307692307692, 'no_speech_prob': 0.09050668030977249}, {'id': 368, 'seek': 255050, 'start': 2565.5, 'end': 2571.22, 'text': " value and get result I don't that's not matter that's what I am saying so for the moment we", 'tokens': [51114, 2158, 293, 483, 1874, 286, 500, 380, 300, 311, 406, 1871, 300, 311, 437, 286, 669, 1566, 370, 337, 264, 1623, 321, 51400], 'temperature': 0.0, 'avg_logprob': -0.3273128668467204, 'compression_ratio': 1.8317307692307692, 'no_speech_prob': 0.09050668030977249}, {'id': 369, 'seek': 255050, 'start': 2571.22, 'end': 2577.62, 'text': ' just put a constant but eventually even that will get revaluated in here I mean you can change the', 'tokens': [51400, 445, 829, 257, 5754, 457, 4728, 754, 300, 486, 483, 319, 3337, 27275, 294, 510, 286, 914, 291, 393, 1319, 264, 51720], 'temperature': 0.0, 'avg_logprob': -0.3273128668467204, 'compression_ratio': 1.8317307692307692, 'no_speech_prob': 0.09050668030977249}, {'id': 370, 'seek': 257762, 'start': 2577.62, 'end': 2582.2599999999998, 'text': " I mean these are not set in stone it's just that I was trying to be like slightly more optimistic", 'tokens': [50364, 286, 914, 613, 366, 406, 992, 294, 7581, 309, 311, 445, 300, 286, 390, 1382, 281, 312, 411, 4748, 544, 19397, 50596], 'temperature': 0.0, 'avg_logprob': -0.42227931406306124, 'compression_ratio': 1.7212389380530972, 'no_speech_prob': 0.303659051656723}, {'id': 371, 'seek': 257762, 'start': 2582.2599999999998, 'end': 2588.1, 'text': " correct which is the again a little all the things will come and I'll eventually figure out but you", 'tokens': [50596, 3006, 597, 307, 264, 797, 257, 707, 439, 264, 721, 486, 808, 293, 286, 603, 4728, 2573, 484, 457, 291, 50888], 'temperature': 0.0, 'avg_logprob': -0.42227931406306124, 'compression_ratio': 1.7212389380530972, 'no_speech_prob': 0.303659051656723}, {'id': 372, 'seek': 257762, 'start': 2588.1, 'end': 2593.02, 'text': ' can even that does not hurt because eventually things will get resolved only if all the branches', 'tokens': [50888, 393, 754, 300, 775, 406, 4607, 570, 4728, 721, 486, 483, 20772, 787, 498, 439, 264, 14770, 51134], 'temperature': 0.0, 'avg_logprob': -0.42227931406306124, 'compression_ratio': 1.7212389380530972, 'no_speech_prob': 0.303659051656723}, {'id': 373, 'seek': 257762, 'start': 2593.02, 'end': 2598.94, 'text': " are not don't know only then will that actual value be computed till then whatever it is there", 'tokens': [51134, 366, 406, 500, 380, 458, 787, 550, 486, 300, 3539, 2158, 312, 40610, 4288, 550, 2035, 309, 307, 456, 51430], 'temperature': 0.0, 'avg_logprob': -0.42227931406306124, 'compression_ratio': 1.7212389380530972, 'no_speech_prob': 0.303659051656723}, {'id': 374, 'seek': 259894, 'start': 2598.94, 'end': 2609.82, 'text': " it will get overwritten by the next iteration so right so this becomes don't know NC k satas", 'tokens': [50364, 309, 486, 483, 670, 26859, 538, 264, 958, 24784, 370, 558, 370, 341, 3643, 500, 380, 458, 20786, 350, 3227, 296, 50908], 'temperature': 0.0, 'avg_logprob': -0.2945593619833187, 'compression_ratio': 1.450381679389313, 'no_speech_prob': 0.2913247346878052}, {'id': 375, 'seek': 259894, 'start': 2609.82, 'end': 2622.66, 'text': " everything becomes NC I don't know why I'm filling this table but yeah but he get and this is the", 'tokens': [50908, 1203, 3643, 20786, 286, 500, 380, 458, 983, 286, 478, 10623, 341, 3199, 457, 1338, 457, 415, 483, 293, 341, 307, 264, 51550], 'temperature': 0.0, 'avg_logprob': -0.2945593619833187, 'compression_ratio': 1.450381679389313, 'no_speech_prob': 0.2913247346878052}, {'id': 376, 'seek': 262266, 'start': 2622.66, 'end': 2634.1, 'text': ' case right so you see that this part will be common to every operator no matter what the', 'tokens': [50364, 1389, 558, 370, 291, 536, 300, 341, 644, 486, 312, 2689, 281, 633, 12973, 572, 1871, 437, 264, 50936], 'temperature': 0.0, 'avg_logprob': -0.09448895631013093, 'compression_ratio': 1.8235294117647058, 'no_speech_prob': 0.07564284652471542}, {'id': 377, 'seek': 262266, 'start': 2634.1, 'end': 2638.74, 'text': " operator is this part remains constant I don't care right as long as one of the operators have", 'tokens': [50936, 12973, 307, 341, 644, 7023, 5754, 286, 500, 380, 1127, 558, 382, 938, 382, 472, 295, 264, 19077, 362, 51168], 'temperature': 0.0, 'avg_logprob': -0.09448895631013093, 'compression_ratio': 1.8235294117647058, 'no_speech_prob': 0.07564284652471542}, {'id': 378, 'seek': 262266, 'start': 2638.74, 'end': 2644.22, 'text': ' any of these patterns I can pick a value from here only this particular part how would the', 'tokens': [51168, 604, 295, 613, 8294, 286, 393, 1888, 257, 2158, 490, 510, 787, 341, 1729, 644, 577, 576, 264, 51442], 'temperature': 0.0, 'avg_logprob': -0.09448895631013093, 'compression_ratio': 1.8235294117647058, 'no_speech_prob': 0.07564284652471542}, {'id': 379, 'seek': 262266, 'start': 2644.22, 'end': 2648.62, 'text': ' constants have to be manipulated to get the new constant value changes depending on what operator', 'tokens': [51442, 35870, 362, 281, 312, 37161, 281, 483, 264, 777, 5754, 2158, 2962, 5413, 322, 437, 12973, 51662], 'temperature': 0.0, 'avg_logprob': -0.09448895631013093, 'compression_ratio': 1.8235294117647058, 'no_speech_prob': 0.07564284652471542}, {'id': 380, 'seek': 264862, 'start': 2648.62, 'end': 2661.22, 'text': ' means right awesome so that is my transfer function so now can you define precisely what', 'tokens': [50364, 1355, 558, 3476, 370, 300, 307, 452, 5003, 2445, 370, 586, 393, 291, 6964, 13402, 437, 50994], 'temperature': 0.0, 'avg_logprob': -0.20896966116768972, 'compression_ratio': 1.6388888888888888, 'no_speech_prob': 0.017086362466216087}, {'id': 381, 'seek': 264862, 'start': 2661.22, 'end': 2668.42, 'text': " my transfer function is so it's a big switch case it's a big switch case on the operator", 'tokens': [50994, 452, 5003, 2445, 307, 370, 309, 311, 257, 955, 3679, 1389, 309, 311, 257, 955, 3679, 1389, 322, 264, 12973, 51354], 'temperature': 0.0, 'avg_logprob': -0.20896966116768972, 'compression_ratio': 1.6388888888888888, 'no_speech_prob': 0.017086362466216087}, {'id': 382, 'seek': 266842, 'start': 2668.42, 'end': 2681.3, 'text': " right okay if both the both are constants if the both the operands are constants then it's a large", 'tokens': [50364, 558, 1392, 498, 1293, 264, 1293, 366, 35870, 498, 264, 1293, 264, 2208, 2967, 366, 35870, 550, 309, 311, 257, 2416, 51008], 'temperature': 0.0, 'avg_logprob': -0.19086818089560856, 'compression_ratio': 1.7560975609756098, 'no_speech_prob': 0.01128291618078947}, {'id': 383, 'seek': 266842, 'start': 2681.3, 'end': 2687.78, 'text': ' switch case depending on what case you land up with you will have to return that particular', 'tokens': [51008, 3679, 1389, 5413, 322, 437, 1389, 291, 2117, 493, 365, 291, 486, 362, 281, 2736, 300, 1729, 51332], 'temperature': 0.0, 'avg_logprob': -0.19086818089560856, 'compression_ratio': 1.7560975609756098, 'no_speech_prob': 0.01128291618078947}, {'id': 384, 'seek': 266842, 'start': 2687.78, 'end': 2695.98, 'text': ' output that is how you will define your transfer function and how will define your meet operation', 'tokens': [51332, 5598, 300, 307, 577, 291, 486, 6964, 428, 5003, 2445, 293, 577, 486, 6964, 428, 1677, 6916, 51742], 'temperature': 0.0, 'avg_logprob': -0.19086818089560856, 'compression_ratio': 1.7560975609756098, 'no_speech_prob': 0.01128291618078947}, {'id': 385, 'seek': 269598, 'start': 2695.98, 'end': 2701.1, 'text': ' the meet operation is also going to be a big if and else ladder depending on what values you', 'tokens': [50364, 264, 1677, 6916, 307, 611, 516, 281, 312, 257, 955, 498, 293, 1646, 18325, 5413, 322, 437, 4190, 291, 50620], 'temperature': 0.0, 'avg_logprob': -0.23345852994370733, 'compression_ratio': 1.8038277511961722, 'no_speech_prob': 0.02559255063533783}, {'id': 386, 'seek': 269598, 'start': 2701.1, 'end': 2705.3, 'text': " get for these two things you'll have to compute and give the value whatever you know we are", 'tokens': [50620, 483, 337, 613, 732, 721, 291, 603, 362, 281, 14722, 293, 976, 264, 2158, 2035, 291, 458, 321, 366, 50830], 'temperature': 0.0, 'avg_logprob': -0.23345852994370733, 'compression_ratio': 1.8038277511961722, 'no_speech_prob': 0.02559255063533783}, {'id': 387, 'seek': 269598, 'start': 2705.3, 'end': 2709.66, 'text': ' yeah like this is the meet operation is always a column predecessors so this is predecessor 1', 'tokens': [50830, 1338, 411, 341, 307, 264, 1677, 6916, 307, 1009, 257, 7738, 24874, 45700, 370, 341, 307, 34991, 502, 51048], 'temperature': 0.0, 'avg_logprob': -0.23345852994370733, 'compression_ratio': 1.8038277511961722, 'no_speech_prob': 0.02559255063533783}, {'id': 388, 'seek': 269598, 'start': 2709.66, 'end': 2719.82, 'text': ' predecessor 2 enough so so I get a constant value at the end of something only if I get a constant', 'tokens': [51048, 34991, 568, 1547, 370, 370, 286, 483, 257, 5754, 2158, 412, 264, 917, 295, 746, 787, 498, 286, 483, 257, 5754, 51556], 'temperature': 0.0, 'avg_logprob': -0.23345852994370733, 'compression_ratio': 1.8038277511961722, 'no_speech_prob': 0.02559255063533783}, {'id': 389, 'seek': 271982, 'start': 2719.82, 'end': 2727.78, 'text': ' value for the same variable from the in of both the predecessors so the whole framework remains', 'tokens': [50364, 2158, 337, 264, 912, 7006, 490, 264, 294, 295, 1293, 264, 24874, 45700, 370, 264, 1379, 8388, 7023, 50762], 'temperature': 0.0, 'avg_logprob': -0.1395575647000913, 'compression_ratio': 1.92578125, 'no_speech_prob': 0.42919522523880005}, {'id': 390, 'seek': 271982, 'start': 2727.78, 'end': 2732.98, 'text': " the same there is only thing see the how beautiful this framework is right my algorithm also doesn't", 'tokens': [50762, 264, 912, 456, 307, 787, 551, 536, 264, 577, 2238, 341, 8388, 307, 558, 452, 9284, 611, 1177, 380, 51022], 'temperature': 0.0, 'avg_logprob': -0.1395575647000913, 'compression_ratio': 1.92578125, 'no_speech_prob': 0.42919522523880005}, {'id': 391, 'seek': 271982, 'start': 2732.98, 'end': 2738.26, 'text': ' change the algorithm that I put here except the place where I computed the the transfer function', 'tokens': [51022, 1319, 264, 9284, 300, 286, 829, 510, 3993, 264, 1081, 689, 286, 40610, 264, 264, 5003, 2445, 51286], 'temperature': 0.0, 'avg_logprob': -0.1395575647000913, 'compression_ratio': 1.92578125, 'no_speech_prob': 0.42919522523880005}, {'id': 392, 'seek': 271982, 'start': 2738.26, 'end': 2743.78, 'text': ' and the meat right other than that place everything remains the same all I need to do is I need to', 'tokens': [51286, 293, 264, 4615, 558, 661, 813, 300, 1081, 1203, 7023, 264, 912, 439, 286, 643, 281, 360, 307, 286, 643, 281, 51562], 'temperature': 0.0, 'avg_logprob': -0.1395575647000913, 'compression_ratio': 1.92578125, 'no_speech_prob': 0.42919522523880005}, {'id': 393, 'seek': 271982, 'start': 2743.78, 'end': 2749.26, 'text': " plug in these new guys these are the four so it's a very beautiful framework and all the correctness", 'tokens': [51562, 5452, 294, 613, 777, 1074, 613, 366, 264, 1451, 370, 309, 311, 257, 588, 2238, 8388, 293, 439, 264, 3006, 1287, 51836], 'temperature': 0.0, 'avg_logprob': -0.1395575647000913, 'compression_ratio': 1.92578125, 'no_speech_prob': 0.42919522523880005}, {'id': 394, 'seek': 274926, 'start': 2749.26, 'end': 2758.86, 'text': ' proofs I talked about all the termination things I talked about all of them work so again why should', 'tokens': [50364, 8177, 82, 286, 2825, 466, 439, 264, 1433, 2486, 721, 286, 2825, 466, 439, 295, 552, 589, 370, 797, 983, 820, 50844], 'temperature': 0.0, 'avg_logprob': -0.17631002456422837, 'compression_ratio': 1.92, 'no_speech_prob': 0.006959657650440931}, {'id': 395, 'seek': 274926, 'start': 2758.86, 'end': 2764.6600000000003, 'text': ' this algorithm terminate remember what was the termination argument there were two things right', 'tokens': [50844, 341, 9284, 10761, 473, 1604, 437, 390, 264, 1433, 2486, 6770, 456, 645, 732, 721, 558, 51134], 'temperature': 0.0, 'avg_logprob': -0.17631002456422837, 'compression_ratio': 1.92, 'no_speech_prob': 0.006959657650440931}, {'id': 396, 'seek': 274926, 'start': 2764.6600000000003, 'end': 2773.78, 'text': ' why why would it terminate what was the reason things would terminate bounded nature of the', 'tokens': [51134, 983, 983, 576, 309, 10761, 473, 437, 390, 264, 1778, 721, 576, 10761, 473, 37498, 3687, 295, 264, 51590], 'temperature': 0.0, 'avg_logprob': -0.17631002456422837, 'compression_ratio': 1.92, 'no_speech_prob': 0.006959657650440931}, {'id': 397, 'seek': 277378, 'start': 2774.1000000000004, 'end': 2786.94, 'text': ' the data flow facts and and what was the other thing yes so about the nature of the function', 'tokens': [50380, 264, 1412, 3095, 9130, 293, 293, 437, 390, 264, 661, 551, 2086, 370, 466, 264, 3687, 295, 264, 2445, 51022], 'temperature': 0.0, 'avg_logprob': -0.19907940517772327, 'compression_ratio': 1.6017699115044248, 'no_speech_prob': 0.2718762755393982}, {'id': 398, 'seek': 277378, 'start': 2786.94, 'end': 2795.7000000000003, 'text': ' right these are the two things okay so now about the set of data flow facts is it finite', 'tokens': [51022, 558, 613, 366, 264, 732, 721, 1392, 370, 586, 466, 264, 992, 295, 1412, 3095, 9130, 307, 309, 19362, 51460], 'temperature': 0.0, 'avg_logprob': -0.19907940517772327, 'compression_ratio': 1.6017699115044248, 'no_speech_prob': 0.2718762755393982}, {'id': 399, 'seek': 279570, 'start': 2795.7, 'end': 2813.4199999999996, 'text': ' or is it infinite finite yeah but every such mapping is a is a possible solution there my', 'tokens': [50364, 420, 307, 309, 13785, 19362, 1338, 457, 633, 1270, 18350, 307, 257, 307, 257, 1944, 3827, 456, 452, 51250], 'temperature': 0.0, 'avg_logprob': -0.1639174981550737, 'compression_ratio': 1.546218487394958, 'no_speech_prob': 0.03870272636413574}, {'id': 400, 'seek': 279570, 'start': 2813.4199999999996, 'end': 2823.18, 'text': ' data flow the set of definitions was finite but now my set of values are not finite do you see', 'tokens': [51250, 1412, 3095, 264, 992, 295, 21988, 390, 19362, 457, 586, 452, 992, 295, 4190, 366, 406, 19362, 360, 291, 536, 51738], 'temperature': 0.0, 'avg_logprob': -0.1639174981550737, 'compression_ratio': 1.546218487394958, 'no_speech_prob': 0.03870272636413574}, {'id': 401, 'seek': 282318, 'start': 2823.18, 'end': 2831.06, 'text': ' this so I can assign a variable to any infinite any of the infinite values from minus infinity', 'tokens': [50364, 341, 370, 286, 393, 6269, 257, 7006, 281, 604, 13785, 604, 295, 264, 13785, 4190, 490, 3175, 13202, 50758], 'temperature': 0.0, 'avg_logprob': -0.2865909201199891, 'compression_ratio': 1.6829268292682926, 'no_speech_prob': 0.012032773345708847}, {'id': 402, 'seek': 282318, 'start': 2831.06, 'end': 2839.66, 'text': ' to infinity so does it break our correctness proof that is dangerous correct the termination', 'tokens': [50758, 281, 13202, 370, 775, 309, 1821, 527, 3006, 1287, 8177, 300, 307, 5795, 3006, 264, 1433, 2486, 51188], 'temperature': 0.0, 'avg_logprob': -0.2865909201199891, 'compression_ratio': 1.6829268292682926, 'no_speech_prob': 0.012032773345708847}, {'id': 403, 'seek': 282318, 'start': 2839.66, 'end': 2845.02, 'text': ' proof no no we need the value otherwise how will it do the constant rotation I of course', 'tokens': [51188, 8177, 572, 572, 321, 643, 264, 2158, 5911, 577, 486, 309, 360, 264, 5754, 12447, 286, 295, 1164, 51456], 'temperature': 0.0, 'avg_logprob': -0.2865909201199891, 'compression_ratio': 1.6829268292682926, 'no_speech_prob': 0.012032773345708847}, {'id': 404, 'seek': 284502, 'start': 2845.02, 'end': 2853.78, 'text': ' need that value so this is my solution this is what my solution looks like and it is an', 'tokens': [50364, 643, 300, 2158, 370, 341, 307, 452, 3827, 341, 307, 437, 452, 3827, 1542, 411, 293, 309, 307, 364, 50802], 'temperature': 0.0, 'avg_logprob': -0.13210047781467438, 'compression_ratio': 1.7564102564102564, 'no_speech_prob': 0.07568702101707458}, {'id': 405, 'seek': 284502, 'start': 2853.78, 'end': 2858.3, 'text': ' infinite set yes it is very much an infinite set because my variables can be mapped to any', 'tokens': [50802, 13785, 992, 2086, 309, 307, 588, 709, 364, 13785, 992, 570, 452, 9102, 393, 312, 33318, 281, 604, 51028], 'temperature': 0.0, 'avg_logprob': -0.13210047781467438, 'compression_ratio': 1.7564102564102564, 'no_speech_prob': 0.07568702101707458}, {'id': 406, 'seek': 284502, 'start': 2858.3, 'end': 2873.22, 'text': ' possible value from the infinite set so now just think about you have some idea no okay so what', 'tokens': [51028, 1944, 2158, 490, 264, 13785, 992, 370, 586, 445, 519, 466, 291, 362, 512, 1558, 572, 1392, 370, 437, 51774], 'temperature': 0.0, 'avg_logprob': -0.13210047781467438, 'compression_ratio': 1.7564102564102564, 'no_speech_prob': 0.07568702101707458}, {'id': 407, 'seek': 287322, 'start': 2873.2599999999998, 'end': 2878.8599999999997, 'text': ' about my so what is the what about the nature of the computation can you think about the function', 'tokens': [50366, 466, 452, 370, 437, 307, 264, 437, 466, 264, 3687, 295, 264, 24903, 393, 291, 519, 466, 264, 2445, 50646], 'temperature': 0.0, 'avg_logprob': -0.1299707997928966, 'compression_ratio': 1.8932038834951457, 'no_speech_prob': 0.005716531537473202}, {'id': 408, 'seek': 287322, 'start': 2878.8599999999997, 'end': 2888.22, 'text': ' f that we discussed for so long what does it what does that look like can you give some now these', 'tokens': [50646, 283, 300, 321, 7152, 337, 370, 938, 437, 775, 309, 437, 775, 300, 574, 411, 393, 291, 976, 512, 586, 613, 51114], 'temperature': 0.0, 'avg_logprob': -0.1299707997928966, 'compression_ratio': 1.8932038834951457, 'no_speech_prob': 0.005716531537473202}, {'id': 409, 'seek': 287322, 'start': 2888.22, 'end': 2893.8199999999997, 'text': ' are not sets that you can say smaller larger you cannot say that unfortunately but still can you', 'tokens': [51114, 366, 406, 6352, 300, 291, 393, 584, 4356, 4833, 291, 2644, 584, 300, 7015, 457, 920, 393, 291, 51394], 'temperature': 0.0, 'avg_logprob': -0.1299707997928966, 'compression_ratio': 1.8932038834951457, 'no_speech_prob': 0.005716531537473202}, {'id': 410, 'seek': 287322, 'start': 2893.8199999999997, 'end': 2902.4199999999996, 'text': " say something about what this thing is doing like for instance let's say at some point in time my", 'tokens': [51394, 584, 746, 466, 437, 341, 551, 307, 884, 411, 337, 5197, 718, 311, 584, 412, 512, 935, 294, 565, 452, 51824], 'temperature': 0.0, 'avg_logprob': -0.1299707997928966, 'compression_ratio': 1.8932038834951457, 'no_speech_prob': 0.005716531537473202}, {'id': 411, 'seek': 290242, 'start': 2902.42, 'end': 2914.94, 'text': " for a given variable vi my current binding to the vi is don't know due to an update where can it go", 'tokens': [50364, 337, 257, 2212, 7006, 1932, 452, 2190, 17359, 281, 264, 1932, 307, 500, 380, 458, 3462, 281, 364, 5623, 689, 393, 309, 352, 50990], 'temperature': 0.0, 'avg_logprob': -0.21997674982598486, 'compression_ratio': 1.492063492063492, 'no_speech_prob': 0.002183077856898308}, {'id': 412, 'seek': 290242, 'start': 2914.94, 'end': 2922.82, 'text': ' which all possible values can it get so it can become not constant or it can become some', 'tokens': [50990, 597, 439, 1944, 4190, 393, 309, 483, 370, 309, 393, 1813, 406, 5754, 420, 309, 393, 1813, 512, 51384], 'temperature': 0.0, 'avg_logprob': -0.21997674982598486, 'compression_ratio': 1.492063492063492, 'no_speech_prob': 0.002183077856898308}, {'id': 413, 'seek': 292282, 'start': 2922.82, 'end': 2932.98, 'text': ' constant CI right if it is not constant then when can it go it cannot go anywhere it is not', 'tokens': [50364, 5754, 37777, 558, 498, 309, 307, 406, 5754, 550, 562, 393, 309, 352, 309, 2644, 352, 4992, 309, 307, 406, 50872], 'temperature': 0.0, 'avg_logprob': -0.13660391171773276, 'compression_ratio': 1.9788732394366197, 'no_speech_prob': 0.4655073881149292}, {'id': 414, 'seek': 292282, 'start': 2932.98, 'end': 2938.54, 'text': ' constant it has to sit in non-constant there is no way it can move what if it is a constant', 'tokens': [50872, 5754, 309, 575, 281, 1394, 294, 2107, 12, 25279, 394, 456, 307, 572, 636, 309, 393, 1286, 437, 498, 309, 307, 257, 5754, 51150], 'temperature': 0.0, 'avg_logprob': -0.13660391171773276, 'compression_ratio': 1.9788732394366197, 'no_speech_prob': 0.4655073881149292}, {'id': 415, 'seek': 292282, 'start': 2938.54, 'end': 2952.1400000000003, 'text': ' it can either go to not constant or it can remain at the same constant so though the total set is', 'tokens': [51150, 309, 393, 2139, 352, 281, 406, 5754, 420, 309, 393, 6222, 412, 264, 912, 5754, 370, 1673, 264, 3217, 992, 307, 51830], 'temperature': 0.0, 'avg_logprob': -0.13660391171773276, 'compression_ratio': 1.9788732394366197, 'no_speech_prob': 0.4655073881149292}, {'id': 416, 'seek': 295214, 'start': 2952.14, 'end': 2961.5, 'text': ' infinite but the sort of movement I can see of my data flow values that is sort of bounded right', 'tokens': [50364, 13785, 457, 264, 1333, 295, 3963, 286, 393, 536, 295, 452, 1412, 3095, 4190, 300, 307, 1333, 295, 37498, 558, 50832], 'temperature': 0.0, 'avg_logprob': -0.15486057505888098, 'compression_ratio': 1.900990099009901, 'no_speech_prob': 0.0047452934086322784}, {'id': 417, 'seek': 295214, 'start': 2961.5, 'end': 2969.2599999999998, 'text': " that is that is very interesting right because I can my don't know can at most become not I can", 'tokens': [50832, 300, 307, 300, 307, 588, 1880, 558, 570, 286, 393, 452, 500, 380, 458, 393, 412, 881, 1813, 406, 286, 393, 51220], 'temperature': 0.0, 'avg_logprob': -0.15486057505888098, 'compression_ratio': 1.900990099009901, 'no_speech_prob': 0.0047452934086322784}, {'id': 418, 'seek': 295214, 'start': 2969.2599999999998, 'end': 2973.8599999999997, 'text': " act more the what is the largest path that can happen but don't know becomes constant and becomes", 'tokens': [51220, 605, 544, 264, 437, 307, 264, 6443, 3100, 300, 393, 1051, 457, 500, 380, 458, 3643, 5754, 293, 3643, 51450], 'temperature': 0.0, 'avg_logprob': -0.15486057505888098, 'compression_ratio': 1.900990099009901, 'no_speech_prob': 0.0047452934086322784}, {'id': 419, 'seek': 295214, 'start': 2973.8599999999997, 'end': 2980.66, 'text': ' not constant so three rather two transitions at most two possible transitions and within that', 'tokens': [51450, 406, 5754, 370, 1045, 2831, 732, 23767, 412, 881, 732, 1944, 23767, 293, 1951, 300, 51790], 'temperature': 0.0, 'avg_logprob': -0.15486057505888098, 'compression_ratio': 1.900990099009901, 'no_speech_prob': 0.0047452934086322784}, {'id': 420, 'seek': 298066, 'start': 2980.66, 'end': 2991.46, 'text': ' something will terminate or not terminate I am seeing the worst case and the worst case it is', 'tokens': [50364, 746, 486, 10761, 473, 420, 406, 10761, 473, 286, 669, 2577, 264, 5855, 1389, 293, 264, 5855, 1389, 309, 307, 50904], 'temperature': 0.0, 'avg_logprob': -0.17012410897475022, 'compression_ratio': 2.1788990825688073, 'no_speech_prob': 0.01576954312622547}, {'id': 421, 'seek': 298066, 'start': 2991.46, 'end': 2995.96, 'text': " this is the longest path right so the don't know can directly become not constant but that is the", 'tokens': [50904, 341, 307, 264, 15438, 3100, 558, 370, 264, 500, 380, 458, 393, 3838, 1813, 406, 5754, 457, 300, 307, 264, 51129], 'temperature': 0.0, 'avg_logprob': -0.17012410897475022, 'compression_ratio': 2.1788990825688073, 'no_speech_prob': 0.01576954312622547}, {'id': 422, 'seek': 298066, 'start': 2995.96, 'end': 3000.5, 'text': ' shortest path only one transition but I am saying the worst case the worst case it will be two', 'tokens': [51129, 31875, 3100, 787, 472, 6034, 457, 286, 669, 1566, 264, 5855, 1389, 264, 5855, 1389, 309, 486, 312, 732, 51356], 'temperature': 0.0, 'avg_logprob': -0.17012410897475022, 'compression_ratio': 2.1788990825688073, 'no_speech_prob': 0.01576954312622547}, {'id': 423, 'seek': 298066, 'start': 3000.5, 'end': 3004.94, 'text': ' transitions it can become a constant first time one edge becomes constant so I give it constant', 'tokens': [51356, 23767, 309, 393, 1813, 257, 5754, 700, 565, 472, 4691, 3643, 5754, 370, 286, 976, 309, 5754, 51578], 'temperature': 0.0, 'avg_logprob': -0.17012410897475022, 'compression_ratio': 2.1788990825688073, 'no_speech_prob': 0.01576954312622547}, {'id': 424, 'seek': 298066, 'start': 3004.94, 'end': 3008.74, 'text': ' and then the second edge becomes some other constant and becomes not constant and after that', 'tokens': [51578, 293, 550, 264, 1150, 4691, 3643, 512, 661, 5754, 293, 3643, 406, 5754, 293, 934, 300, 51768], 'temperature': 0.0, 'avg_logprob': -0.17012410897475022, 'compression_ratio': 2.1788990825688073, 'no_speech_prob': 0.01576954312622547}, {'id': 425, 'seek': 300874, 'start': 3008.74, 'end': 3023.2599999999998, 'text': ' it cannot move can it can it look at all your rules so you are you are at meet operation C1', 'tokens': [50364, 309, 2644, 1286, 393, 309, 393, 309, 574, 412, 439, 428, 4474, 370, 291, 366, 291, 366, 412, 1677, 6916, 383, 16, 51090], 'temperature': 0.0, 'avg_logprob': -0.16071976252964565, 'compression_ratio': 1.6588235294117648, 'no_speech_prob': 0.07734645158052444}, {'id': 426, 'seek': 300874, 'start': 3023.2599999999998, 'end': 3029.02, 'text': ' and C2 right so so remember the algorithm where was the change the flag was checked on the ins', 'tokens': [51090, 293, 383, 17, 558, 370, 370, 1604, 264, 9284, 689, 390, 264, 1319, 264, 7166, 390, 10033, 322, 264, 1028, 51378], 'temperature': 0.0, 'avg_logprob': -0.16071976252964565, 'compression_ratio': 1.6588235294117648, 'no_speech_prob': 0.07734645158052444}, {'id': 427, 'seek': 300874, 'start': 3029.02, 'end': 3036.4199999999996, 'text': ' right you were computing a new in which you are getting by taking a mute over the outs and then', 'tokens': [51378, 558, 291, 645, 15866, 257, 777, 294, 597, 291, 366, 1242, 538, 1940, 257, 24523, 670, 264, 14758, 293, 550, 51748], 'temperature': 0.0, 'avg_logprob': -0.16071976252964565, 'compression_ratio': 1.6588235294117648, 'no_speech_prob': 0.07734645158052444}, {'id': 428, 'seek': 303642, 'start': 3036.42, 'end': 3042.78, 'text': " you were checking it with the old in old value of in right so let's look at the meet operator can", 'tokens': [50364, 291, 645, 8568, 309, 365, 264, 1331, 294, 1331, 2158, 295, 294, 558, 370, 718, 311, 574, 412, 264, 1677, 12973, 393, 50682], 'temperature': 0.0, 'avg_logprob': -0.12812484635247123, 'compression_ratio': 1.6590909090909092, 'no_speech_prob': 0.05983933433890343}, {'id': 429, 'seek': 303642, 'start': 3042.78, 'end': 3050.7400000000002, 'text': ' it ever allow something else to happen so for instance if it is CI then there are two possibilities', 'tokens': [50682, 309, 1562, 2089, 746, 1646, 281, 1051, 370, 337, 5197, 498, 309, 307, 37777, 550, 456, 366, 732, 12178, 51080], 'temperature': 0.0, 'avg_logprob': -0.12812484635247123, 'compression_ratio': 1.6590909090909092, 'no_speech_prob': 0.05983933433890343}, {'id': 430, 'seek': 303642, 'start': 3050.7400000000002, 'end': 3055.34, 'text': ' if CI and CK are not the same it becomes not constant and if CI and CK becomes same it becomes', 'tokens': [51080, 498, 37777, 293, 383, 42, 366, 406, 264, 912, 309, 3643, 406, 5754, 293, 498, 37777, 293, 383, 42, 3643, 912, 309, 3643, 51310], 'temperature': 0.0, 'avg_logprob': -0.12812484635247123, 'compression_ratio': 1.6590909090909092, 'no_speech_prob': 0.05983933433890343}, {'id': 431, 'seek': 305534, 'start': 3055.34, 'end': 3067.1400000000003, 'text': ' the same constant so there is no way that one constant can become another constant again remember', 'tokens': [50364, 264, 912, 5754, 370, 456, 307, 572, 636, 300, 472, 5754, 393, 1813, 1071, 5754, 797, 1604, 50954], 'temperature': 0.0, 'avg_logprob': -0.1726997147745161, 'compression_ratio': 1.744047619047619, 'no_speech_prob': 0.1887679249048233}, {'id': 432, 'seek': 305534, 'start': 3067.1400000000003, 'end': 3073.7400000000002, 'text': " the algorithm where was that flag being set let me just pull out that it's little far but maybe", 'tokens': [50954, 264, 9284, 689, 390, 300, 7166, 885, 992, 718, 385, 445, 2235, 484, 300, 309, 311, 707, 1400, 457, 1310, 51284], 'temperature': 0.0, 'avg_logprob': -0.1726997147745161, 'compression_ratio': 1.744047619047619, 'no_speech_prob': 0.1887679249048233}, {'id': 433, 'seek': 305534, 'start': 3073.7400000000002, 'end': 3083.5, 'text': " it's worth it oh shit this is the other direction don't don't look at this now forget forget forget", 'tokens': [51284, 309, 311, 3163, 309, 1954, 4611, 341, 307, 264, 661, 3513, 500, 380, 500, 380, 574, 412, 341, 586, 2870, 2870, 2870, 51772], 'temperature': 0.0, 'avg_logprob': -0.1726997147745161, 'compression_ratio': 1.744047619047619, 'no_speech_prob': 0.1887679249048233}, {'id': 434, 'seek': 308350, 'start': 3083.5, 'end': 3095.74, 'text': ' yeah so this was algorithm right so this is not the whole algorithm but there is no space', 'tokens': [50364, 1338, 370, 341, 390, 9284, 558, 370, 341, 307, 406, 264, 1379, 9284, 457, 456, 307, 572, 1901, 50976], 'temperature': 0.0, 'avg_logprob': -0.1950691679249639, 'compression_ratio': 1.5416666666666667, 'no_speech_prob': 0.007637949660420418}, {'id': 435, 'seek': 308350, 'start': 3095.74, 'end': 3109.02, 'text': ' okay so so but whatever we can look at this now should be able to see the black from the red so', 'tokens': [50976, 1392, 370, 370, 457, 2035, 321, 393, 574, 412, 341, 586, 820, 312, 1075, 281, 536, 264, 2211, 490, 264, 2182, 370, 51640], 'temperature': 0.0, 'avg_logprob': -0.1950691679249639, 'compression_ratio': 1.5416666666666667, 'no_speech_prob': 0.007637949660420418}, {'id': 436, 'seek': 310902, 'start': 3109.02, 'end': 3115.66, 'text': " essentially what are we going to do now my ins and outs would sort of change right I don't know my", 'tokens': [50364, 4476, 437, 366, 321, 516, 281, 360, 586, 452, 1028, 293, 14758, 576, 1333, 295, 1319, 558, 286, 500, 380, 458, 452, 50696], 'temperature': 0.0, 'avg_logprob': -0.23194283076695033, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.07704140990972519}, {'id': 437, 'seek': 310902, 'start': 3115.66, 'end': 3128.1, 'text': ' mouse works on yeah mouse works so okay so you have this ins and the outs will be initialized', 'tokens': [50696, 9719, 1985, 322, 1338, 9719, 1985, 370, 1392, 370, 291, 362, 341, 1028, 293, 264, 14758, 486, 312, 5883, 1602, 51318], 'temperature': 0.0, 'avg_logprob': -0.23194283076695033, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.07704140990972519}, {'id': 438, 'seek': 310902, 'start': 3128.1, 'end': 3132.74, 'text': ' to what you will be initialized to the what is what what will they how will you rewrite this', 'tokens': [51318, 281, 437, 291, 486, 312, 5883, 1602, 281, 264, 437, 307, 437, 437, 486, 436, 577, 486, 291, 28132, 341, 51550], 'temperature': 0.0, 'avg_logprob': -0.23194283076695033, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.07704140990972519}, {'id': 439, 'seek': 313274, 'start': 3132.74, 'end': 3138.66, 'text': ' algorithm for that so ins and outs in me and out we will be rewritten to what all variables', 'tokens': [50364, 9284, 337, 300, 370, 1028, 293, 14758, 294, 385, 293, 484, 321, 486, 312, 319, 26859, 281, 437, 439, 9102, 50660], 'temperature': 0.0, 'avg_logprob': -0.27330788322117017, 'compression_ratio': 1.8768472906403941, 'no_speech_prob': 0.19256839156150818}, {'id': 440, 'seek': 313274, 'start': 3138.66, 'end': 3147.06, 'text': ' to do not know and the only thing will be different will be the input the the in in of B in of entry', 'tokens': [50660, 281, 360, 406, 458, 293, 264, 787, 551, 486, 312, 819, 486, 312, 264, 4846, 264, 264, 294, 294, 295, 363, 294, 295, 8729, 51080], 'temperature': 0.0, 'avg_logprob': -0.27330788322117017, 'compression_ratio': 1.8768472906403941, 'no_speech_prob': 0.19256839156150818}, {'id': 441, 'seek': 313274, 'start': 3147.06, 'end': 3156.3399999999997, 'text': ' enough entry will be what so there are two possibilities either you put them to all constant', 'tokens': [51080, 1547, 8729, 486, 312, 437, 370, 456, 366, 732, 12178, 2139, 291, 829, 552, 281, 439, 5754, 51544], 'temperature': 0.0, 'avg_logprob': -0.27330788322117017, 'compression_ratio': 1.8768472906403941, 'no_speech_prob': 0.19256839156150818}, {'id': 442, 'seek': 313274, 'start': 3156.3399999999997, 'end': 3161.18, 'text': " so those both answers are right you can either put it to all constant as don't knows or you can", 'tokens': [51544, 370, 729, 1293, 6338, 366, 558, 291, 393, 2139, 829, 309, 281, 439, 5754, 382, 500, 380, 3255, 420, 291, 393, 51786], 'temperature': 0.0, 'avg_logprob': -0.27330788322117017, 'compression_ratio': 1.8768472906403941, 'no_speech_prob': 0.19256839156150818}, {'id': 443, 'seek': 316118, 'start': 3161.18, 'end': 3168.62, 'text': " put all constant as all variables to don't pose or you can put all variables to not constants both", 'tokens': [50364, 829, 439, 5754, 382, 439, 9102, 281, 500, 380, 10774, 420, 291, 393, 829, 439, 9102, 281, 406, 35870, 1293, 50736], 'temperature': 0.0, 'avg_logprob': -0.16278095023576603, 'compression_ratio': 1.8224299065420562, 'no_speech_prob': 0.005551148671656847}, {'id': 444, 'seek': 316118, 'start': 3168.62, 'end': 3172.02, 'text': ' of them are correct solutions but you have to understand what is the implication of that so in', 'tokens': [50736, 295, 552, 366, 3006, 6547, 457, 291, 362, 281, 1223, 437, 307, 264, 37814, 295, 300, 370, 294, 50906], 'temperature': 0.0, 'avg_logprob': -0.16278095023576603, 'compression_ratio': 1.8224299065420562, 'no_speech_prob': 0.005551148671656847}, {'id': 445, 'seek': 316118, 'start': 3172.02, 'end': 3176.62, 'text': ' the mathematical model we are doing this but what does it mean for the program putting all variables', 'tokens': [50906, 264, 18894, 2316, 321, 366, 884, 341, 457, 437, 775, 309, 914, 337, 264, 1461, 3372, 439, 9102, 51136], 'temperature': 0.0, 'avg_logprob': -0.16278095023576603, 'compression_ratio': 1.8224299065420562, 'no_speech_prob': 0.005551148671656847}, {'id': 446, 'seek': 316118, 'start': 3176.62, 'end': 3185.58, 'text': " to don't knows means what no so think about un initialized values right so then what can happen", 'tokens': [51136, 281, 500, 380, 3255, 1355, 437, 572, 370, 519, 466, 517, 5883, 1602, 4190, 558, 370, 550, 437, 393, 1051, 51584], 'temperature': 0.0, 'avg_logprob': -0.16278095023576603, 'compression_ratio': 1.8224299065420562, 'no_speech_prob': 0.005551148671656847}, {'id': 447, 'seek': 318558, 'start': 3185.74, 'end': 3191.18, 'text': " is at the end of your analysis you can leave some values might be left off with don't knows", 'tokens': [50372, 307, 412, 264, 917, 295, 428, 5215, 291, 393, 1856, 512, 4190, 1062, 312, 1411, 766, 365, 500, 380, 3255, 50644], 'temperature': 0.0, 'avg_logprob': -0.16989846759372287, 'compression_ratio': 1.8487804878048781, 'no_speech_prob': 0.056489910930395126}, {'id': 448, 'seek': 318558, 'start': 3191.18, 'end': 3199.94, 'text': ' right assume that there is some variable which has not even been used anywhere right so that', 'tokens': [50644, 558, 6552, 300, 456, 307, 512, 7006, 597, 575, 406, 754, 668, 1143, 4992, 558, 370, 300, 51082], 'temperature': 0.0, 'avg_logprob': -0.16989846759372287, 'compression_ratio': 1.8487804878048781, 'no_speech_prob': 0.056489910930395126}, {'id': 449, 'seek': 318558, 'start': 3199.94, 'end': 3205.74, 'text': " variable will live in all the sets marked as don't knows so don't don't knows at what told", 'tokens': [51082, 7006, 486, 1621, 294, 439, 264, 6352, 12658, 382, 500, 380, 3255, 370, 500, 380, 500, 380, 3255, 412, 437, 1907, 51372], 'temperature': 0.0, 'avg_logprob': -0.16989846759372287, 'compression_ratio': 1.8487804878048781, 'no_speech_prob': 0.056489910930395126}, {'id': 450, 'seek': 318558, 'start': 3205.74, 'end': 3211.66, 'text': " that's okay but if something the analysis terminates and it remains don't know what it means is that it", 'tokens': [51372, 300, 311, 1392, 457, 498, 746, 264, 5215, 10761, 1024, 293, 309, 7023, 500, 380, 458, 437, 309, 1355, 307, 300, 309, 51668], 'temperature': 0.0, 'avg_logprob': -0.16989846759372287, 'compression_ratio': 1.8487804878048781, 'no_speech_prob': 0.056489910930395126}, {'id': 451, 'seek': 321166, 'start': 3212.14, 'end': 3218.22, 'text': " so it's an analysis which can give you garbage value also that's interesting thing right it's", 'tokens': [50388, 370, 309, 311, 364, 5215, 597, 393, 976, 291, 14150, 2158, 611, 300, 311, 1880, 551, 558, 309, 311, 50692], 'temperature': 0.0, 'avg_logprob': -0.27116830245308254, 'compression_ratio': 2.0560344827586206, 'no_speech_prob': 0.017680516466498375}, {'id': 452, 'seek': 321166, 'start': 3218.22, 'end': 3223.94, 'text': " high-def of it right you simply set it to don't knows and at the desktop at the end of it if", 'tokens': [50692, 1090, 12, 20595, 295, 309, 558, 291, 2935, 992, 309, 281, 500, 380, 3255, 293, 412, 264, 14502, 412, 264, 917, 295, 309, 498, 50978], 'temperature': 0.0, 'avg_logprob': -0.27116830245308254, 'compression_ratio': 2.0560344827586206, 'no_speech_prob': 0.017680516466498375}, {'id': 453, 'seek': 321166, 'start': 3223.94, 'end': 3228.54, 'text': " there are variables which are set to don't knows okay these are garbage values so you get it", 'tokens': [50978, 456, 366, 9102, 597, 366, 992, 281, 500, 380, 3255, 1392, 613, 366, 14150, 4190, 370, 291, 483, 309, 51208], 'temperature': 0.0, 'avg_logprob': -0.27116830245308254, 'compression_ratio': 2.0560344827586206, 'no_speech_prob': 0.017680516466498375}, {'id': 454, 'seek': 321166, 'start': 3228.54, 'end': 3236.06, 'text': ' un initialized variables the other option is to set it to not constants right you can be treating', 'tokens': [51208, 517, 5883, 1602, 9102, 264, 661, 3614, 307, 281, 992, 309, 281, 406, 35870, 558, 291, 393, 312, 15083, 51584], 'temperature': 0.0, 'avg_logprob': -0.27116830245308254, 'compression_ratio': 2.0560344827586206, 'no_speech_prob': 0.017680516466498375}, {'id': 455, 'seek': 321166, 'start': 3236.06, 'end': 3239.94, 'text': " garbage values are not constants can garbage value I don't know what value it is so I set it to not", 'tokens': [51584, 14150, 4190, 366, 406, 35870, 393, 14150, 2158, 286, 500, 380, 458, 437, 2158, 309, 307, 370, 286, 992, 309, 281, 406, 51778], 'temperature': 0.0, 'avg_logprob': -0.27116830245308254, 'compression_ratio': 2.0560344827586206, 'no_speech_prob': 0.017680516466498375}, {'id': 456, 'seek': 323994, 'start': 3239.94, 'end': 3244.54, 'text': " constants then your analysis will be clean in the sense that you will not be left with any don't", 'tokens': [50364, 35870, 550, 428, 5215, 486, 312, 2541, 294, 264, 2020, 300, 291, 486, 406, 312, 1411, 365, 604, 500, 380, 50594], 'temperature': 0.0, 'avg_logprob': -0.16312049997263942, 'compression_ratio': 1.755980861244019, 'no_speech_prob': 0.0035376299638301134}, {'id': 457, 'seek': 323994, 'start': 3244.54, 'end': 3255.58, 'text': ' knows at the end of the analysis both of them are right depends on what you want right no it', 'tokens': [50594, 3255, 412, 264, 917, 295, 264, 5215, 1293, 295, 552, 366, 558, 5946, 322, 437, 291, 528, 558, 572, 309, 51146], 'temperature': 0.0, 'avg_logprob': -0.16312049997263942, 'compression_ratio': 1.755980861244019, 'no_speech_prob': 0.0035376299638301134}, {'id': 458, 'seek': 323994, 'start': 3255.58, 'end': 3260.98, 'text': ' will get assigned somewhere anyway now so somewhere X will become equal to 5 right so', 'tokens': [51146, 486, 483, 13279, 4079, 4033, 586, 370, 4079, 1783, 486, 1813, 2681, 281, 1025, 558, 370, 51416], 'temperature': 0.0, 'avg_logprob': -0.16312049997263942, 'compression_ratio': 1.755980861244019, 'no_speech_prob': 0.0035376299638301134}, {'id': 459, 'seek': 323994, 'start': 3260.98, 'end': 3266.78, 'text': ' so the transfer function will make it 5 so okay so I really not tried it now so what is the', 'tokens': [51416, 370, 264, 5003, 2445, 486, 652, 309, 1025, 370, 1392, 370, 286, 534, 406, 3031, 309, 586, 370, 437, 307, 264, 51706], 'temperature': 0.0, 'avg_logprob': -0.16312049997263942, 'compression_ratio': 1.755980861244019, 'no_speech_prob': 0.0035376299638301134}, {'id': 460, 'seek': 326678, 'start': 3266.78, 'end': 3278.0600000000004, 'text': ' transfer function for assignment X equals 5 how it will just make it that constant right we just', 'tokens': [50364, 5003, 2445, 337, 15187, 1783, 6915, 1025, 577, 309, 486, 445, 652, 309, 300, 5754, 558, 321, 445, 50928], 'temperature': 0.0, 'avg_logprob': -0.1953660439753878, 'compression_ratio': 1.6457142857142857, 'no_speech_prob': 0.017916589975357056}, {'id': 461, 'seek': 326678, 'start': 3278.0600000000004, 'end': 3286.7000000000003, 'text': ' do it for operators but similarly it had it been just X equals 5 it will simply set X to 5 yes', 'tokens': [50928, 360, 309, 337, 19077, 457, 14138, 309, 632, 309, 668, 445, 1783, 6915, 1025, 309, 486, 2935, 992, 1783, 281, 1025, 2086, 51360], 'temperature': 0.0, 'avg_logprob': -0.1953660439753878, 'compression_ratio': 1.6457142857142857, 'no_speech_prob': 0.017916589975357056}, {'id': 462, 'seek': 326678, 'start': 3286.7000000000003, 'end': 3294.9, 'text': " the engine to the outset right so that's now for the rest of the analysis so in the beginning it", 'tokens': [51360, 264, 2848, 281, 264, 44618, 558, 370, 300, 311, 586, 337, 264, 1472, 295, 264, 5215, 370, 294, 264, 2863, 309, 51770], 'temperature': 0.0, 'avg_logprob': -0.1953660439753878, 'compression_ratio': 1.6457142857142857, 'no_speech_prob': 0.017916589975357056}, {'id': 463, 'seek': 329490, 'start': 3294.9, 'end': 3308.26, 'text': ' will remain not constant but later it will become some value yes yes and that should surely happen', 'tokens': [50364, 486, 6222, 406, 5754, 457, 1780, 309, 486, 1813, 512, 2158, 2086, 2086, 293, 300, 820, 11468, 1051, 51032], 'temperature': 0.0, 'avg_logprob': -0.18747667165902945, 'compression_ratio': 1.9947089947089947, 'no_speech_prob': 0.01302627008408308}, {'id': 464, 'seek': 329490, 'start': 3308.26, 'end': 3312.6600000000003, 'text': ' because a variable state change changes right a variable becomes variables are meant to be', 'tokens': [51032, 570, 257, 7006, 1785, 1319, 2962, 558, 257, 7006, 3643, 9102, 366, 4140, 281, 312, 51252], 'temperature': 0.0, 'avg_logprob': -0.18747667165902945, 'compression_ratio': 1.9947089947089947, 'no_speech_prob': 0.01302627008408308}, {'id': 465, 'seek': 329490, 'start': 3312.6600000000003, 'end': 3317.34, 'text': ' updated whether because a variable can become one in some part and can become another constant', 'tokens': [51252, 10588, 1968, 570, 257, 7006, 393, 1813, 472, 294, 512, 644, 293, 393, 1813, 1071, 5754, 51486], 'temperature': 0.0, 'avg_logprob': -0.18747667165902945, 'compression_ratio': 1.9947089947089947, 'no_speech_prob': 0.01302627008408308}, {'id': 466, 'seek': 329490, 'start': 3317.34, 'end': 3322.06, 'text': ' two in some other part so when I said that it cannot become another constant it means at the', 'tokens': [51486, 732, 294, 512, 661, 644, 370, 562, 286, 848, 300, 309, 2644, 1813, 1071, 5754, 309, 1355, 412, 264, 51722], 'temperature': 0.0, 'avg_logprob': -0.18747667165902945, 'compression_ratio': 1.9947089947089947, 'no_speech_prob': 0.01302627008408308}, {'id': 467, 'seek': 332206, 'start': 3322.06, 'end': 3327.1, 'text': ' same program point it cannot become another constant leader right please understand this', 'tokens': [50364, 912, 1461, 935, 309, 2644, 1813, 1071, 5754, 5263, 558, 1767, 1223, 341, 50616], 'temperature': 0.0, 'avg_logprob': -0.17750635649028576, 'compression_ratio': 2.062222222222222, 'no_speech_prob': 0.044455330818891525}, {'id': 468, 'seek': 332206, 'start': 3327.1, 'end': 3331.82, 'text': ' difference this is a very important difference all my students get confused with this right so', 'tokens': [50616, 2649, 341, 307, 257, 588, 1021, 2649, 439, 452, 1731, 483, 9019, 365, 341, 558, 370, 50852], 'temperature': 0.0, 'avg_logprob': -0.17750635649028576, 'compression_ratio': 2.062222222222222, 'no_speech_prob': 0.044455330818891525}, {'id': 469, 'seek': 332206, 'start': 3331.82, 'end': 3337.2599999999998, 'text': " whenever I say that a variable cannot become if it's a constant two it cannot become a constant", 'tokens': [50852, 5699, 286, 584, 300, 257, 7006, 2644, 1813, 498, 309, 311, 257, 5754, 732, 309, 2644, 1813, 257, 5754, 51124], 'temperature': 0.0, 'avg_logprob': -0.17750635649028576, 'compression_ratio': 2.062222222222222, 'no_speech_prob': 0.044455330818891525}, {'id': 470, 'seek': 332206, 'start': 3337.2599999999998, 'end': 3342.54, 'text': ' five later what it means is I am saying at the same program point it cannot become a constant', 'tokens': [51124, 1732, 1780, 437, 309, 1355, 307, 286, 669, 1566, 412, 264, 912, 1461, 935, 309, 2644, 1813, 257, 5754, 51388], 'temperature': 0.0, 'avg_logprob': -0.17750635649028576, 'compression_ratio': 2.062222222222222, 'no_speech_prob': 0.044455330818891525}, {'id': 471, 'seek': 332206, 'start': 3342.54, 'end': 3347.02, 'text': ' five leaders but it should surely have two different values a constant two here a constant', 'tokens': [51388, 1732, 3523, 457, 309, 820, 11468, 362, 732, 819, 4190, 257, 5754, 732, 510, 257, 5754, 51612], 'temperature': 0.0, 'avg_logprob': -0.17750635649028576, 'compression_ratio': 2.062222222222222, 'no_speech_prob': 0.044455330818891525}, {'id': 472, 'seek': 334702, 'start': 3347.02, 'end': 3353.14, 'text': ' five here why not right I can set X equal to here and X equals 5 here after executing it the value', 'tokens': [50364, 1732, 510, 983, 406, 558, 286, 393, 992, 1783, 2681, 281, 510, 293, 1783, 6915, 1025, 510, 934, 32368, 309, 264, 2158, 50670], 'temperature': 0.0, 'avg_logprob': -0.2038193150570518, 'compression_ratio': 1.984924623115578, 'no_speech_prob': 0.49112632870674133}, {'id': 473, 'seek': 334702, 'start': 3353.14, 'end': 3359.38, 'text': ' will be 2 after executing the value will be 5 that is not a problem so the stabilization if you look', 'tokens': [50670, 486, 312, 568, 934, 32368, 264, 2158, 486, 312, 1025, 300, 307, 406, 257, 1154, 370, 264, 35476, 498, 291, 574, 50982], 'temperature': 0.0, 'avg_logprob': -0.2038193150570518, 'compression_ratio': 1.984924623115578, 'no_speech_prob': 0.49112632870674133}, {'id': 474, 'seek': 334702, 'start': 3359.38, 'end': 3365.78, 'text': " at it the stabilization check is only here right it is only here where I'm checking the new in at", 'tokens': [50982, 412, 309, 264, 35476, 1520, 307, 787, 510, 558, 309, 307, 787, 510, 689, 286, 478, 8568, 264, 777, 294, 412, 51302], 'temperature': 0.0, 'avg_logprob': -0.2038193150570518, 'compression_ratio': 1.984924623115578, 'no_speech_prob': 0.49112632870674133}, {'id': 475, 'seek': 334702, 'start': 3365.78, 'end': 3371.86, 'text': ' the same location is the same as the what I got in the same location earlier the check is for the', 'tokens': [51302, 264, 912, 4914, 307, 264, 912, 382, 264, 437, 286, 658, 294, 264, 912, 4914, 3071, 264, 1520, 307, 337, 264, 51606], 'temperature': 0.0, 'avg_logprob': -0.2038193150570518, 'compression_ratio': 1.984924623115578, 'no_speech_prob': 0.49112632870674133}, {'id': 476, 'seek': 337186, 'start': 3371.86, 'end': 3376.82, 'text': ' same location it is for the same program point not across program points I do not ever check', 'tokens': [50364, 912, 4914, 309, 307, 337, 264, 912, 1461, 935, 406, 2108, 1461, 2793, 286, 360, 406, 1562, 1520, 50612], 'temperature': 0.0, 'avg_logprob': -0.1292399764060974, 'compression_ratio': 1.9891304347826086, 'no_speech_prob': 0.1984895020723343}, {'id': 477, 'seek': 337186, 'start': 3376.82, 'end': 3384.94, 'text': ' across program points it does not make sense to check across program points right okay so okay', 'tokens': [50612, 2108, 1461, 2793, 309, 775, 406, 652, 2020, 281, 1520, 2108, 1461, 2793, 558, 1392, 370, 1392, 51018], 'temperature': 0.0, 'avg_logprob': -0.1292399764060974, 'compression_ratio': 1.9891304347826086, 'no_speech_prob': 0.1984895020723343}, {'id': 478, 'seek': 337186, 'start': 3384.94, 'end': 3393.1400000000003, 'text': ' good so now right so now what we check so we have run through the initialization after the', 'tokens': [51018, 665, 370, 586, 558, 370, 586, 437, 321, 1520, 370, 321, 362, 1190, 807, 264, 5883, 2144, 934, 264, 51428], 'temperature': 0.0, 'avg_logprob': -0.1292399764060974, 'compression_ratio': 1.9891304347826086, 'no_speech_prob': 0.1984895020723343}, {'id': 479, 'seek': 337186, 'start': 3393.1400000000003, 'end': 3397.94, 'text': ' initialization the flag true flag false all this business remains the same how will you', 'tokens': [51428, 5883, 2144, 264, 7166, 2074, 7166, 7908, 439, 341, 1606, 7023, 264, 912, 577, 486, 291, 51668], 'temperature': 0.0, 'avg_logprob': -0.1292399764060974, 'compression_ratio': 1.9891304347826086, 'no_speech_prob': 0.1984895020723343}, {'id': 480, 'seek': 339794, 'start': 3397.94, 'end': 3401.98, 'text': ' change the transfer function after that is the update of the transfer function so how will you', 'tokens': [50364, 1319, 264, 5003, 2445, 934, 300, 307, 264, 5623, 295, 264, 5003, 2445, 370, 577, 486, 291, 50566], 'temperature': 0.0, 'avg_logprob': -0.16367498174443976, 'compression_ratio': 2.087719298245614, 'no_speech_prob': 0.08258280903100967}, {'id': 481, 'seek': 339794, 'start': 3401.98, 'end': 3406.94, 'text': " update the transfer function we'll have a big switch case no first is the meat so how will you", 'tokens': [50566, 5623, 264, 5003, 2445, 321, 603, 362, 257, 955, 3679, 1389, 572, 700, 307, 264, 4615, 370, 577, 486, 291, 50814], 'temperature': 0.0, 'avg_logprob': -0.16367498174443976, 'compression_ratio': 2.087719298245614, 'no_speech_prob': 0.08258280903100967}, {'id': 482, 'seek': 339794, 'start': 3406.94, 'end': 3412.34, 'text': ' change the meat now you have the table which tells you how to apply the new min create then', 'tokens': [50814, 1319, 264, 4615, 586, 291, 362, 264, 3199, 597, 5112, 291, 577, 281, 3079, 264, 777, 923, 1884, 550, 51084], 'temperature': 0.0, 'avg_logprob': -0.16367498174443976, 'compression_ratio': 2.087719298245614, 'no_speech_prob': 0.08258280903100967}, {'id': 483, 'seek': 339794, 'start': 3412.34, 'end': 3420.7000000000003, 'text': ' the new in using the meat of the predecessors so we have you look up the table apply compute the', 'tokens': [51084, 264, 777, 294, 1228, 264, 4615, 295, 264, 24874, 45700, 370, 321, 362, 291, 574, 493, 264, 3199, 3079, 14722, 264, 51502], 'temperature': 0.0, 'avg_logprob': -0.16367498174443976, 'compression_ratio': 2.087719298245614, 'no_speech_prob': 0.08258280903100967}, {'id': 484, 'seek': 339794, 'start': 3420.7000000000003, 'end': 3427.3, 'text': ' table using a function as a sequence of ifs or a switch or whatever it is and then get this right', 'tokens': [51502, 3199, 1228, 257, 2445, 382, 257, 8310, 295, 498, 82, 420, 257, 3679, 420, 2035, 309, 307, 293, 550, 483, 341, 558, 51832], 'temperature': 0.0, 'avg_logprob': -0.16367498174443976, 'compression_ratio': 2.087719298245614, 'no_speech_prob': 0.08258280903100967}, {'id': 485, 'seek': 342730, 'start': 3427.3, 'end': 3433.86, 'text': ' then the final thing remains is to apply the transfer function so out B equals in B whatever', 'tokens': [50364, 550, 264, 2572, 551, 7023, 307, 281, 3079, 264, 5003, 2445, 370, 484, 363, 6915, 294, 363, 2035, 50692], 'temperature': 0.0, 'avg_logprob': -0.13220075543007154, 'compression_ratio': 1.7212389380530972, 'no_speech_prob': 0.0003350069164298475}, {'id': 486, 'seek': 342730, 'start': 3433.86, 'end': 3442.6200000000003, 'text': ' so out here this will be a large switch case for every operation that you want to handle and again', 'tokens': [50692, 370, 484, 510, 341, 486, 312, 257, 2416, 3679, 1389, 337, 633, 6916, 300, 291, 528, 281, 4813, 293, 797, 51130], 'temperature': 0.0, 'avg_logprob': -0.13220075543007154, 'compression_ratio': 1.7212389380530972, 'no_speech_prob': 0.0003350069164298475}, {'id': 487, 'seek': 342730, 'start': 3442.6200000000003, 'end': 3446.38, 'text': ' say your analysis you can decide okay I can only I want me want to do it with plus and minus with', 'tokens': [51130, 584, 428, 5215, 291, 393, 4536, 1392, 286, 393, 787, 286, 528, 385, 528, 281, 360, 309, 365, 1804, 293, 3175, 365, 51318], 'temperature': 0.0, 'avg_logprob': -0.13220075543007154, 'compression_ratio': 1.7212389380530972, 'no_speech_prob': 0.0003350069164298475}, {'id': 488, 'seek': 342730, 'start': 3446.38, 'end': 3453.34, 'text': ' nothing else your choice right so you have a big switch case which will say for the given operators', 'tokens': [51318, 1825, 1646, 428, 3922, 558, 370, 291, 362, 257, 955, 3679, 1389, 597, 486, 584, 337, 264, 2212, 19077, 51666], 'temperature': 0.0, 'avg_logprob': -0.13220075543007154, 'compression_ratio': 1.7212389380530972, 'no_speech_prob': 0.0003350069164298475}, {'id': 489, 'seek': 345334, 'start': 3453.34, 'end': 3465.02, 'text': ' what are how do I transform my state my analysis right so this is the thing but why did we come', 'tokens': [50364, 437, 366, 577, 360, 286, 4088, 452, 1785, 452, 5215, 558, 370, 341, 307, 264, 551, 457, 983, 630, 321, 808, 50948], 'temperature': 0.0, 'avg_logprob': -0.1387655838676121, 'compression_ratio': 1.7239263803680982, 'no_speech_prob': 0.038294799625873566}, {'id': 490, 'seek': 345334, 'start': 3465.02, 'end': 3471.02, 'text': ' here what did I want to show you what was the question so this all we can remember but there', 'tokens': [50948, 510, 437, 630, 286, 528, 281, 855, 291, 437, 390, 264, 1168, 370, 341, 439, 321, 393, 1604, 457, 456, 51248], 'temperature': 0.0, 'avg_logprob': -0.1387655838676121, 'compression_ratio': 1.7239263803680982, 'no_speech_prob': 0.038294799625873566}, {'id': 491, 'seek': 345334, 'start': 3471.02, 'end': 3479.94, 'text': ' was one thing I wanted to mention which I am yes yes yes yes exactly right so check the case', 'tokens': [51248, 390, 472, 551, 286, 1415, 281, 2152, 597, 286, 669, 2086, 2086, 2086, 2086, 2293, 558, 370, 1520, 264, 1389, 51694], 'temperature': 0.0, 'avg_logprob': -0.1387655838676121, 'compression_ratio': 1.7239263803680982, 'no_speech_prob': 0.038294799625873566}, {'id': 492, 'seek': 347994, 'start': 3479.94, 'end': 3485.5, 'text': ' where the flag is being set look at line number 10 this is the place where the flag is being set', 'tokens': [50364, 689, 264, 7166, 307, 885, 992, 574, 412, 1622, 1230, 1266, 341, 307, 264, 1081, 689, 264, 7166, 307, 885, 992, 50642], 'temperature': 0.0, 'avg_logprob': -0.15900485486869353, 'compression_ratio': 1.9285714285714286, 'no_speech_prob': 0.07703442871570587}, {'id': 493, 'seek': 347994, 'start': 3485.5, 'end': 3493.26, 'text': ' it is set at the whenever the input differs right whenever the input differs I set the', 'tokens': [50642, 309, 307, 992, 412, 264, 5699, 264, 4846, 37761, 558, 5699, 264, 4846, 37761, 286, 992, 264, 51030], 'temperature': 0.0, 'avg_logprob': -0.15900485486869353, 'compression_ratio': 1.9285714285714286, 'no_speech_prob': 0.07703442871570587}, {'id': 494, 'seek': 347994, 'start': 3493.26, 'end': 3499.14, 'text': " flag I don't care about the outs because input differs outputs output can possibly differ and", 'tokens': [51030, 7166, 286, 500, 380, 1127, 466, 264, 14758, 570, 4846, 37761, 23930, 5598, 393, 6264, 743, 293, 51324], 'temperature': 0.0, 'avg_logprob': -0.15900485486869353, 'compression_ratio': 1.9285714285714286, 'no_speech_prob': 0.07703442871570587}, {'id': 495, 'seek': 347994, 'start': 3499.14, 'end': 3505.02, 'text': " I'll go to another iteration anyway right because our out is completely dependent on the input right", 'tokens': [51324, 286, 603, 352, 281, 1071, 24784, 4033, 558, 570, 527, 484, 307, 2584, 12334, 322, 264, 4846, 558, 51618], 'temperature': 0.0, 'avg_logprob': -0.15900485486869353, 'compression_ratio': 1.9285714285714286, 'no_speech_prob': 0.07703442871570587}, {'id': 496, 'seek': 350502, 'start': 3505.02, 'end': 3510.9, 'text': ' completely dictated by the input of the given basic block right so my check is only on the on', 'tokens': [50364, 2584, 12569, 770, 538, 264, 4846, 295, 264, 2212, 3875, 3461, 558, 370, 452, 1520, 307, 787, 322, 264, 322, 50658], 'temperature': 0.0, 'avg_logprob': -0.17054229312472874, 'compression_ratio': 1.7425149700598803, 'no_speech_prob': 0.028430715203285217}, {'id': 497, 'seek': 350502, 'start': 3510.9, 'end': 3524.46, 'text': ' my input now let us go back to our so here we were so now the thing is that so because it is checked', 'tokens': [50658, 452, 4846, 586, 718, 505, 352, 646, 281, 527, 370, 510, 321, 645, 370, 586, 264, 551, 307, 300, 370, 570, 309, 307, 10033, 51336], 'temperature': 0.0, 'avg_logprob': -0.17054229312472874, 'compression_ratio': 1.7425149700598803, 'no_speech_prob': 0.028430715203285217}, {'id': 498, 'seek': 350502, 'start': 3524.46, 'end': 3529.74, 'text': ' at the in the in can change only due to the meet operator right because of the operation of meet', 'tokens': [51336, 412, 264, 294, 264, 294, 393, 1319, 787, 3462, 281, 264, 1677, 12973, 558, 570, 295, 264, 6916, 295, 1677, 51600], 'temperature': 0.0, 'avg_logprob': -0.17054229312472874, 'compression_ratio': 1.7425149700598803, 'no_speech_prob': 0.028430715203285217}, {'id': 499, 'seek': 352974, 'start': 3529.74, 'end': 3536.4199999999996, 'text': ' operator so now the meet operator check what can happen it can never move from one constant to the', 'tokens': [50364, 12973, 370, 586, 264, 1677, 12973, 1520, 437, 393, 1051, 309, 393, 1128, 1286, 490, 472, 5754, 281, 264, 50698], 'temperature': 0.0, 'avg_logprob': -0.10860170167067955, 'compression_ratio': 2.146067415730337, 'no_speech_prob': 0.18667078018188477}, {'id': 500, 'seek': 352974, 'start': 3536.4199999999996, 'end': 3545.66, 'text': ' other because if it is not a constant other things will happen and if it is a constant so this is the', 'tokens': [50698, 661, 570, 498, 309, 307, 406, 257, 5754, 661, 721, 486, 1051, 293, 498, 309, 307, 257, 5754, 370, 341, 307, 264, 51160], 'temperature': 0.0, 'avg_logprob': -0.10860170167067955, 'compression_ratio': 2.146067415730337, 'no_speech_prob': 0.18667078018188477}, {'id': 501, 'seek': 352974, 'start': 3545.66, 'end': 3549.7, 'text': ' case so if there are there the constants are different it will become not constant if the', 'tokens': [51160, 1389, 370, 498, 456, 366, 456, 264, 35870, 366, 819, 309, 486, 1813, 406, 5754, 498, 264, 51362], 'temperature': 0.0, 'avg_logprob': -0.10860170167067955, 'compression_ratio': 2.146067415730337, 'no_speech_prob': 0.18667078018188477}, {'id': 502, 'seek': 352974, 'start': 3549.7, 'end': 3553.8199999999997, 'text': ' constants are the same it will become the same constant so there is no way this at the same', 'tokens': [51362, 35870, 366, 264, 912, 309, 486, 1813, 264, 912, 5754, 370, 456, 307, 572, 636, 341, 412, 264, 912, 51568], 'temperature': 0.0, 'avg_logprob': -0.10860170167067955, 'compression_ratio': 2.146067415730337, 'no_speech_prob': 0.18667078018188477}, {'id': 503, 'seek': 355382, 'start': 3553.82, 'end': 3562.46, 'text': ' program point it can move from 2 to 5 right so the longest path my updates can take is this', 'tokens': [50364, 1461, 935, 309, 393, 1286, 490, 568, 281, 1025, 558, 370, 264, 15438, 3100, 452, 9205, 393, 747, 307, 341, 50796], 'temperature': 0.0, 'avg_logprob': -0.14051035678747928, 'compression_ratio': 1.8152866242038217, 'no_speech_prob': 0.09787016361951828}, {'id': 504, 'seek': 355382, 'start': 3562.46, 'end': 3571.46, 'text': " path don't know to some constant to not constant right so it can at most have two updates if all", 'tokens': [50796, 3100, 500, 380, 458, 281, 512, 5754, 281, 406, 5754, 558, 370, 309, 393, 412, 881, 362, 732, 9205, 498, 439, 51246], 'temperature': 0.0, 'avg_logprob': -0.14051035678747928, 'compression_ratio': 1.8152866242038217, 'no_speech_prob': 0.09787016361951828}, {'id': 505, 'seek': 355382, 'start': 3571.46, 'end': 3581.1800000000003, 'text': ' variables so number of variables are bounded all variables can at most have two updates right so', 'tokens': [51246, 9102, 370, 1230, 295, 9102, 366, 37498, 439, 9102, 393, 412, 881, 362, 732, 9205, 558, 370, 51732], 'temperature': 0.0, 'avg_logprob': -0.14051035678747928, 'compression_ratio': 1.8152866242038217, 'no_speech_prob': 0.09787016361951828}, {'id': 506, 'seek': 358118, 'start': 3581.18, 'end': 3586.8999999999996, 'text': " I must reach stabilizers so I should be able to stabilize it cannot become constant that's what", 'tokens': [50364, 286, 1633, 2524, 11652, 22525, 370, 286, 820, 312, 1075, 281, 31870, 309, 2644, 1813, 5754, 300, 311, 437, 50650], 'temperature': 0.0, 'avg_logprob': -0.18358932144340429, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.01667836867272854}, {'id': 507, 'seek': 358118, 'start': 3586.8999999999996, 'end': 3592.2599999999998, 'text': ' so once I got a get a not constant any of them is not constant it can never become constant see', 'tokens': [50650, 370, 1564, 286, 658, 257, 483, 257, 406, 5754, 604, 295, 552, 307, 406, 5754, 309, 393, 1128, 1813, 5754, 536, 50918], 'temperature': 0.0, 'avg_logprob': -0.18358932144340429, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.01667836867272854}, {'id': 508, 'seek': 358118, 'start': 3592.2599999999998, 'end': 3602.58, 'text': ' the table see the meet table this is the meet table right again again that this is exactly', 'tokens': [50918, 264, 3199, 536, 264, 1677, 3199, 341, 307, 264, 1677, 3199, 558, 797, 797, 300, 341, 307, 2293, 51434], 'temperature': 0.0, 'avg_logprob': -0.18358932144340429, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.01667836867272854}, {'id': 509, 'seek': 358118, 'start': 3602.58, 'end': 3609.8199999999997, 'text': ' what I am saying I only compare values at the same program point but down below is a different', 'tokens': [51434, 437, 286, 669, 1566, 286, 787, 6794, 4190, 412, 264, 912, 1461, 935, 457, 760, 2507, 307, 257, 819, 51796], 'temperature': 0.0, 'avg_logprob': -0.18358932144340429, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.01667836867272854}, {'id': 510, 'seek': 360982, 'start': 3609.82, 'end': 3614.7400000000002, 'text': ' program point right I never it does not make sense to compare things across program points', 'tokens': [50364, 1461, 935, 558, 286, 1128, 309, 775, 406, 652, 2020, 281, 6794, 721, 2108, 1461, 2793, 50610], 'temperature': 0.0, 'avg_logprob': -0.16263030620103472, 'compression_ratio': 1.8055555555555556, 'no_speech_prob': 0.014905366115272045}, {'id': 511, 'seek': 360982, 'start': 3614.7400000000002, 'end': 3626.5800000000004, 'text': ' they are bound to be different actor at where at at so I am saying that where was flag set as true', 'tokens': [50610, 436, 366, 5472, 281, 312, 819, 8747, 412, 689, 412, 412, 370, 286, 669, 1566, 300, 689, 390, 7166, 992, 382, 2074, 51202], 'temperature': 0.0, 'avg_logprob': -0.16263030620103472, 'compression_ratio': 1.8055555555555556, 'no_speech_prob': 0.014905366115272045}, {'id': 512, 'seek': 360982, 'start': 3626.5800000000004, 'end': 3633.46, 'text': ' that is why I showed you that algorithm flag was set as true when the value of the in changed right', 'tokens': [51202, 300, 307, 983, 286, 4712, 291, 300, 9284, 7166, 390, 992, 382, 2074, 562, 264, 2158, 295, 264, 294, 3105, 558, 51546], 'temperature': 0.0, 'avg_logprob': -0.16263030620103472, 'compression_ratio': 1.8055555555555556, 'no_speech_prob': 0.014905366115272045}, {'id': 513, 'seek': 360982, 'start': 3633.46, 'end': 3637.96, 'text': ' at the beginning of the basic block how can the value of in change when you apply the meet operation', 'tokens': [51546, 412, 264, 2863, 295, 264, 3875, 3461, 577, 393, 264, 2158, 295, 294, 1319, 562, 291, 3079, 264, 1677, 6916, 51771], 'temperature': 0.0, 'avg_logprob': -0.16263030620103472, 'compression_ratio': 1.8055555555555556, 'no_speech_prob': 0.014905366115272045}, {'id': 514, 'seek': 363796, 'start': 3637.96, 'end': 3646.44, 'text': ' right so so that was the argument so it means that my data flow fact the set of my data flow', 'tokens': [50364, 558, 370, 370, 300, 390, 264, 6770, 370, 309, 1355, 300, 452, 1412, 3095, 1186, 264, 992, 295, 452, 1412, 3095, 50788], 'temperature': 0.0, 'avg_logprob': -0.12568469896708448, 'compression_ratio': 1.7888198757763976, 'no_speech_prob': 0.0031663738191127777}, {'id': 515, 'seek': 363796, 'start': 3646.44, 'end': 3657.2400000000002, 'text': ' facts need not be finite even if it is not finite but if I can find out that there is the the number', 'tokens': [50788, 9130, 643, 406, 312, 19362, 754, 498, 309, 307, 406, 19362, 457, 498, 286, 393, 915, 484, 300, 456, 307, 264, 264, 1230, 51328], 'temperature': 0.0, 'avg_logprob': -0.12568469896708448, 'compression_ratio': 1.7888198757763976, 'no_speech_prob': 0.0031663738191127777}, {'id': 516, 'seek': 363796, 'start': 3657.2400000000002, 'end': 3665.76, 'text': ' of updates to so there is a ceiling on where I reach finally and if I can take a finite number', 'tokens': [51328, 295, 9205, 281, 370, 456, 307, 257, 13655, 322, 689, 286, 2524, 2721, 293, 498, 286, 393, 747, 257, 19362, 1230, 51754], 'temperature': 0.0, 'avg_logprob': -0.12568469896708448, 'compression_ratio': 1.7888198757763976, 'no_speech_prob': 0.0031663738191127777}, {'id': 517, 'seek': 366576, 'start': 3665.76, 'end': 3672.5200000000004, 'text': ' of steps to that particular final state at most if that thing is bounded number of steps I can', 'tokens': [50364, 295, 4439, 281, 300, 1729, 2572, 1785, 412, 881, 498, 300, 551, 307, 37498, 1230, 295, 4439, 286, 393, 50702], 'temperature': 0.0, 'avg_logprob': -0.12833321245410775, 'compression_ratio': 1.9081632653061225, 'no_speech_prob': 0.02505253069102764}, {'id': 518, 'seek': 366576, 'start': 3672.5200000000004, 'end': 3680.8, 'text': ' take at most is bounded even then my algorithm will stabilize so constant propagation is an', 'tokens': [50702, 747, 412, 881, 307, 37498, 754, 550, 452, 9284, 486, 31870, 370, 5754, 38377, 307, 364, 51116], 'temperature': 0.0, 'avg_logprob': -0.12833321245410775, 'compression_ratio': 1.9081632653061225, 'no_speech_prob': 0.02505253069102764}, {'id': 519, 'seek': 366576, 'start': 3680.8, 'end': 3687.5200000000004, 'text': " example of that does it make sense guys again please don't make this mistake I mean we never", 'tokens': [51116, 1365, 295, 300, 775, 309, 652, 2020, 1074, 797, 1767, 500, 380, 652, 341, 6146, 286, 914, 321, 1128, 51452], 'temperature': 0.0, 'avg_logprob': -0.12833321245410775, 'compression_ratio': 1.9081632653061225, 'no_speech_prob': 0.02505253069102764}, {'id': 520, 'seek': 366576, 'start': 3687.5200000000004, 'end': 3693.4, 'text': ' never never never never never never never never never never compare values across basic across', 'tokens': [51452, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 6794, 4190, 2108, 3875, 2108, 51746], 'temperature': 0.0, 'avg_logprob': -0.12833321245410775, 'compression_ratio': 1.9081632653061225, 'no_speech_prob': 0.02505253069102764}, {'id': 521, 'seek': 369340, 'start': 3693.4, 'end': 3698.6, 'text': ' program points right it does not make sense to talk about what happens here and what happens', 'tokens': [50364, 1461, 2793, 558, 309, 775, 406, 652, 2020, 281, 751, 466, 437, 2314, 510, 293, 437, 2314, 50624], 'temperature': 0.0, 'avg_logprob': -0.14815893734202665, 'compression_ratio': 1.9540816326530612, 'no_speech_prob': 0.05144352465867996}, {'id': 522, 'seek': 369340, 'start': 3698.6, 'end': 3703.28, 'text': ' here this is less than this so what will happen this does not make sense right we only talk about', 'tokens': [50624, 510, 341, 307, 1570, 813, 341, 370, 437, 486, 1051, 341, 775, 406, 652, 2020, 558, 321, 787, 751, 466, 50858], 'temperature': 0.0, 'avg_logprob': -0.14815893734202665, 'compression_ratio': 1.9540816326530612, 'no_speech_prob': 0.05144352465867996}, {'id': 523, 'seek': 369340, 'start': 3703.28, 'end': 3708.04, 'text': ' has the value at the same program point change to something different that is all I care about', 'tokens': [50858, 575, 264, 2158, 412, 264, 912, 1461, 935, 1319, 281, 746, 819, 300, 307, 439, 286, 1127, 466, 51096], 'temperature': 0.0, 'avg_logprob': -0.14815893734202665, 'compression_ratio': 1.9540816326530612, 'no_speech_prob': 0.05144352465867996}, {'id': 524, 'seek': 369340, 'start': 3708.04, 'end': 3716.4, 'text': ' right and every program point we can see the value can at most go through to updates if the total', 'tokens': [51096, 558, 293, 633, 1461, 935, 321, 393, 536, 264, 2158, 393, 412, 881, 352, 807, 281, 9205, 498, 264, 3217, 51514], 'temperature': 0.0, 'avg_logprob': -0.14815893734202665, 'compression_ratio': 1.9540816326530612, 'no_speech_prob': 0.05144352465867996}, {'id': 525, 'seek': 371640, 'start': 3716.4, 'end': 3722.96, 'text': ' number of basic blocks are finite and if every location can at most go through to updates of', 'tokens': [50364, 1230, 295, 3875, 8474, 366, 19362, 293, 498, 633, 4914, 393, 412, 881, 352, 807, 281, 9205, 295, 50692], 'temperature': 0.0, 'avg_logprob': -0.2079952398935954, 'compression_ratio': 1.7358490566037736, 'no_speech_prob': 0.23882195353507996}, {'id': 526, 'seek': 371640, 'start': 3722.96, 'end': 3730.92, 'text': ' every variable then I can this algorithm must stabilize so how many iterations at most two', 'tokens': [50692, 633, 7006, 550, 286, 393, 341, 9284, 1633, 31870, 370, 577, 867, 36540, 412, 881, 732, 51090], 'temperature': 0.0, 'avg_logprob': -0.2079952398935954, 'compression_ratio': 1.7358490566037736, 'no_speech_prob': 0.23882195353507996}, {'id': 527, 'seek': 371640, 'start': 3730.92, 'end': 3741.2400000000002, 'text': ' times the number of basic block or more constant variable right so it is times the number of', 'tokens': [51090, 1413, 264, 1230, 295, 3875, 3461, 420, 544, 5754, 7006, 558, 370, 309, 307, 1413, 264, 1230, 295, 51606], 'temperature': 0.0, 'avg_logprob': -0.2079952398935954, 'compression_ratio': 1.7358490566037736, 'no_speech_prob': 0.23882195353507996}, {'id': 528, 'seek': 374124, 'start': 3741.24, 'end': 3747.3599999999997, 'text': ' variables right because it can happen that only one variable changes state then some other', 'tokens': [50364, 9102, 558, 570, 309, 393, 1051, 300, 787, 472, 7006, 2962, 1785, 550, 512, 661, 50670], 'temperature': 0.0, 'avg_logprob': -0.1570596577208719, 'compression_ratio': 2.0267379679144386, 'no_speech_prob': 0.09414893388748169}, {'id': 529, 'seek': 374124, 'start': 3747.3599999999997, 'end': 3752.6, 'text': ' variable changes state and so on so I was asking that what on what the number of iterations would', 'tokens': [50670, 7006, 2962, 1785, 293, 370, 322, 370, 286, 390, 3365, 300, 437, 322, 437, 264, 1230, 295, 36540, 576, 50932], 'temperature': 0.0, 'avg_logprob': -0.1570596577208719, 'compression_ratio': 2.0267379679144386, 'no_speech_prob': 0.09414893388748169}, {'id': 530, 'seek': 374124, 'start': 3752.6, 'end': 3760.08, 'text': ' depend on so it can at most so every way so there are number of variables and every variable can go', 'tokens': [50932, 5672, 322, 370, 309, 393, 412, 881, 370, 633, 636, 370, 456, 366, 1230, 295, 9102, 293, 633, 7006, 393, 352, 51306], 'temperature': 0.0, 'avg_logprob': -0.1570596577208719, 'compression_ratio': 2.0267379679144386, 'no_speech_prob': 0.09414893388748169}, {'id': 531, 'seek': 374124, 'start': 3760.08, 'end': 3765.3999999999996, 'text': ' through an update and every variable can get updated at most twice right so every location', 'tokens': [51306, 807, 364, 5623, 293, 633, 7006, 393, 483, 10588, 412, 881, 6091, 558, 370, 633, 4914, 51572], 'temperature': 0.0, 'avg_logprob': -0.1570596577208719, 'compression_ratio': 2.0267379679144386, 'no_speech_prob': 0.09414893388748169}, {'id': 532, 'seek': 376540, 'start': 3765.4, 'end': 3775.6, 'text': ' can at most see number of variables times to number of updates and then there are basic blocks', 'tokens': [50364, 393, 412, 881, 536, 1230, 295, 9102, 1413, 281, 1230, 295, 9205, 293, 550, 456, 366, 3875, 8474, 50874], 'temperature': 0.0, 'avg_logprob': -0.20162619077242339, 'compression_ratio': 1.8115942028985508, 'no_speech_prob': 0.044985827058553696}, {'id': 533, 'seek': 376540, 'start': 3775.6, 'end': 3783.4, 'text': ' which can affect it so this is idea you start discovering constants and now this is the quiz', 'tokens': [50874, 597, 393, 3345, 309, 370, 341, 307, 1558, 291, 722, 24773, 35870, 293, 586, 341, 307, 264, 15450, 51264], 'temperature': 0.0, 'avg_logprob': -0.20162619077242339, 'compression_ratio': 1.8115942028985508, 'no_speech_prob': 0.044985827058553696}, {'id': 534, 'seek': 376540, 'start': 3783.4, 'end': 3787.84, 'text': ' question can you think of some difference other than the transfer function and all this business', 'tokens': [51264, 1168, 393, 291, 519, 295, 512, 2649, 661, 813, 264, 5003, 2445, 293, 439, 341, 1606, 51486], 'temperature': 0.0, 'avg_logprob': -0.20162619077242339, 'compression_ratio': 1.8115942028985508, 'no_speech_prob': 0.044985827058553696}, {'id': 535, 'seek': 376540, 'start': 3787.84, 'end': 3794.44, 'text': ' in how the analysis is structured can you think about difference in the interaction of the', 'tokens': [51486, 294, 577, 264, 5215, 307, 18519, 393, 291, 519, 466, 2649, 294, 264, 9285, 295, 264, 51816], 'temperature': 0.0, 'avg_logprob': -0.20162619077242339, 'compression_ratio': 1.8115942028985508, 'no_speech_prob': 0.044985827058553696}, {'id': 536, 'seek': 379444, 'start': 3794.44, 'end': 3803.48, 'text': ' data flow facts between reaching definitions and constant like for instance again let us go to it', 'tokens': [50364, 1412, 3095, 9130, 1296, 9906, 21988, 293, 5754, 411, 337, 5197, 797, 718, 505, 352, 281, 309, 50816], 'temperature': 0.0, 'avg_logprob': -0.1887213527292445, 'compression_ratio': 1.7125748502994012, 'no_speech_prob': 0.024857111275196075}, {'id': 537, 'seek': 379444, 'start': 3803.48, 'end': 3810.32, 'text': ' so our the data flow set you can think of what I can think let me just put them in a similar', 'tokens': [50816, 370, 527, 264, 1412, 3095, 992, 291, 393, 519, 295, 437, 286, 393, 519, 718, 385, 445, 829, 552, 294, 257, 2531, 51158], 'temperature': 0.0, 'avg_logprob': -0.1887213527292445, 'compression_ratio': 1.7125748502994012, 'no_speech_prob': 0.024857111275196075}, {'id': 538, 'seek': 379444, 'start': 3810.32, 'end': 3820.92, 'text': ' manner for reaching definitions I can simply say that I have definitions d1 d2 dn and I can say', 'tokens': [51158, 9060, 337, 9906, 21988, 286, 393, 2935, 584, 300, 286, 362, 21988, 274, 16, 274, 17, 274, 77, 293, 286, 393, 584, 51688], 'temperature': 0.0, 'avg_logprob': -0.1887213527292445, 'compression_ratio': 1.7125748502994012, 'no_speech_prob': 0.024857111275196075}, {'id': 539, 'seek': 382092, 'start': 3820.92, 'end': 3826.88, 'text': ' that this reaches this does not reach this reaches this reaches this does not reach and so on for', 'tokens': [50364, 300, 341, 14235, 341, 775, 406, 2524, 341, 14235, 341, 14235, 341, 775, 406, 2524, 293, 370, 322, 337, 50662], 'temperature': 0.0, 'avg_logprob': -0.14340351567123877, 'compression_ratio': 1.965986394557823, 'no_speech_prob': 0.11780564486980438}, {'id': 540, 'seek': 382092, 'start': 3826.88, 'end': 3834.2000000000003, 'text': ' constant propagation I will have a similar thing for variables and I will say that this can well', 'tokens': [50662, 5754, 38377, 286, 486, 362, 257, 2531, 551, 337, 9102, 293, 286, 486, 584, 300, 341, 393, 731, 51028], 'temperature': 0.0, 'avg_logprob': -0.14340351567123877, 'compression_ratio': 1.965986394557823, 'no_speech_prob': 0.11780564486980438}, {'id': 541, 'seek': 382092, 'start': 3834.2000000000003, 'end': 3839.6800000000003, 'text': " have a value 2 this can have a value 42 this is not constant this is don't know something like", 'tokens': [51028, 362, 257, 2158, 568, 341, 393, 362, 257, 2158, 14034, 341, 307, 406, 5754, 341, 307, 500, 380, 458, 746, 411, 51302], 'temperature': 0.0, 'avg_logprob': -0.14340351567123877, 'compression_ratio': 1.965986394557823, 'no_speech_prob': 0.11780564486980438}, {'id': 542, 'seek': 383968, 'start': 3839.68, 'end': 3852.8399999999997, 'text': " this right that is the difference now I'm sorry I did that is not what I wanted to say", 'tokens': [50364, 341, 558, 300, 307, 264, 2649, 586, 286, 478, 2597, 286, 630, 300, 307, 406, 437, 286, 1415, 281, 584, 51022], 'temperature': 0.0, 'avg_logprob': -0.4135445385444455, 'compression_ratio': 1.4952380952380953, 'no_speech_prob': 0.42891398072242737}, {'id': 543, 'seek': 383968, 'start': 3852.8399999999997, 'end': 3860.7999999999997, 'text': ' so sorry sorry sorry how do I wrap this yeah I can wrap this like this', 'tokens': [51022, 370, 2597, 2597, 2597, 577, 360, 286, 7019, 341, 1338, 286, 393, 7019, 341, 411, 341, 51420], 'temperature': 0.0, 'avg_logprob': -0.4135445385444455, 'compression_ratio': 1.4952380952380953, 'no_speech_prob': 0.42891398072242737}, {'id': 544, 'seek': 386968, 'start': 3869.68, 'end': 3891.24, 'text': ' okay fine so now can you sort of see any difference between the nature of these updates of what', 'tokens': [50364, 1392, 2489, 370, 586, 393, 291, 1333, 295, 536, 604, 2649, 1296, 264, 3687, 295, 613, 9205, 295, 437, 51442], 'temperature': 0.0, 'avg_logprob': -0.2114105469141251, 'compression_ratio': 1.5913043478260869, 'no_speech_prob': 0.03164603188633919}, {'id': 545, 'seek': 386968, 'start': 3891.24, 'end': 3894.3199999999997, 'text': ' happens in case of reaching definition and what happens in case of constant propagation', 'tokens': [51442, 2314, 294, 1389, 295, 9906, 7123, 293, 437, 2314, 294, 1389, 295, 5754, 38377, 51596], 'temperature': 0.0, 'avg_logprob': -0.2114105469141251, 'compression_ratio': 1.5913043478260869, 'no_speech_prob': 0.03164603188633919}, {'id': 546, 'seek': 389432, 'start': 3894.32, 'end': 3912.7200000000003, 'text': ' so there is a big difference yeah agreed so that is sort of the any path all path sort of', 'tokens': [50364, 370, 456, 307, 257, 955, 2649, 1338, 9166, 370, 300, 307, 1333, 295, 264, 604, 3100, 439, 3100, 1333, 295, 51284], 'temperature': 0.0, 'avg_logprob': -0.20964176096814743, 'compression_ratio': 1.4918032786885247, 'no_speech_prob': 0.03614044934511185}, {'id': 547, 'seek': 389432, 'start': 3912.7200000000003, 'end': 3919.2400000000002, 'text': " business but but that is let's say I'm saying factored in into the unified framework but I'm", 'tokens': [51284, 1606, 457, 457, 300, 307, 718, 311, 584, 286, 478, 1566, 1186, 2769, 294, 666, 264, 26787, 8388, 457, 286, 478, 51610], 'temperature': 0.0, 'avg_logprob': -0.20964176096814743, 'compression_ratio': 1.4918032786885247, 'no_speech_prob': 0.03614044934511185}, {'id': 548, 'seek': 391924, 'start': 3919.24, 'end': 3924.9599999999996, 'text': ' saying whatever whatever like this four analysis we had seen from there can you see how constant', 'tokens': [50364, 1566, 2035, 2035, 411, 341, 1451, 5215, 321, 632, 1612, 490, 456, 393, 291, 536, 577, 5754, 50650], 'temperature': 0.0, 'avg_logprob': -0.2459749924509149, 'compression_ratio': 1.5238095238095237, 'no_speech_prob': 0.6059815287590027}, {'id': 549, 'seek': 391924, 'start': 3924.9599999999996, 'end': 3930.56, 'text': " propagation is different it has it's slightly different read altogether there is one difference", 'tokens': [50650, 38377, 307, 819, 309, 575, 309, 311, 4748, 819, 1401, 19051, 456, 307, 472, 2649, 50930], 'temperature': 0.0, 'avg_logprob': -0.2459749924509149, 'compression_ratio': 1.5238095238095237, 'no_speech_prob': 0.6059815287590027}, {'id': 550, 'seek': 393056, 'start': 3930.56, 'end': 3951.7599999999998, 'text': ' which is yeah but this set is finite if you think about this tuple is finite because this', 'tokens': [50364, 597, 307, 1338, 457, 341, 992, 307, 19362, 498, 291, 519, 466, 341, 2604, 781, 307, 19362, 570, 341, 51424], 'temperature': 0.0, 'avg_logprob': -0.2034969131151835, 'compression_ratio': 1.6727272727272726, 'no_speech_prob': 0.03849928453564644}, {'id': 551, 'seek': 393056, 'start': 3951.7599999999998, 'end': 3958.0, 'text': ' is a couple of all variables so this this tuple is finite so it just says key for so this is a', 'tokens': [51424, 307, 257, 1916, 295, 439, 9102, 370, 341, 341, 2604, 781, 307, 19362, 370, 309, 445, 1619, 2141, 337, 370, 341, 307, 257, 51736], 'temperature': 0.0, 'avg_logprob': -0.2034969131151835, 'compression_ratio': 1.6727272727272726, 'no_speech_prob': 0.03849928453564644}, {'id': 552, 'seek': 395800, 'start': 3958.0, 'end': 3962.92, 'text': ' tuple of all variables and it says that what value this variable has currently what this', 'tokens': [50364, 2604, 781, 295, 439, 9102, 293, 309, 1619, 300, 437, 2158, 341, 7006, 575, 4362, 437, 341, 50610], 'temperature': 0.0, 'avg_logprob': -0.13691766144799405, 'compression_ratio': 1.6303030303030304, 'no_speech_prob': 0.3979502320289612}, {'id': 553, 'seek': 395800, 'start': 3962.92, 'end': 3967.0, 'text': " value this variable has okay maybe I'm not leading you the right direction but essentially", 'tokens': [50610, 2158, 341, 7006, 575, 1392, 1310, 286, 478, 406, 5775, 291, 264, 558, 3513, 457, 4476, 50814], 'temperature': 0.0, 'avg_logprob': -0.13691766144799405, 'compression_ratio': 1.6303030303030304, 'no_speech_prob': 0.3979502320289612}, {'id': 554, 'seek': 395800, 'start': 3967.0, 'end': 3977.24, 'text': " what I wanted to say is think about the case here so does like let's say at certain point", 'tokens': [50814, 437, 286, 1415, 281, 584, 307, 519, 466, 264, 1389, 510, 370, 775, 411, 718, 311, 584, 412, 1629, 935, 51326], 'temperature': 0.0, 'avg_logprob': -0.13691766144799405, 'compression_ratio': 1.6303030303030304, 'no_speech_prob': 0.3979502320289612}, {'id': 555, 'seek': 397724, 'start': 3977.24, 'end': 3996.2799999999997, 'text': " in time at a program point this is my yeah okay hold on to that thought I'll come to that later", 'tokens': [50364, 294, 565, 412, 257, 1461, 935, 341, 307, 452, 1338, 1392, 1797, 322, 281, 300, 1194, 286, 603, 808, 281, 300, 1780, 51316], 'temperature': 0.0, 'avg_logprob': -0.18189722015744164, 'compression_ratio': 1.421875, 'no_speech_prob': 0.17891079187393188}, {'id': 556, 'seek': 397724, 'start': 3996.2799999999997, 'end': 4002.3199999999997, 'text': ' yeah but that can even happen here because through different paths the same definition', 'tokens': [51316, 1338, 457, 300, 393, 754, 1051, 510, 570, 807, 819, 14518, 264, 912, 7123, 51618], 'temperature': 0.0, 'avg_logprob': -0.18189722015744164, 'compression_ratio': 1.421875, 'no_speech_prob': 0.17891079187393188}, {'id': 557, 'seek': 400232, 'start': 4002.32, 'end': 4008.7200000000003, 'text': " right but okay there is something there I'll come to it but here one idea is there is that", 'tokens': [50364, 558, 457, 1392, 456, 307, 746, 456, 286, 603, 808, 281, 309, 457, 510, 472, 1558, 307, 456, 307, 300, 50684], 'temperature': 0.0, 'avg_logprob': -0.20056591336689297, 'compression_ratio': 1.5783132530120483, 'no_speech_prob': 0.2588823139667511}, {'id': 558, 'seek': 400232, 'start': 4008.7200000000003, 'end': 4017.7200000000003, 'text': " think about let's say my definition D1 was initially 0 and in the next iteration when", 'tokens': [50684, 519, 466, 718, 311, 584, 452, 7123, 413, 16, 390, 9105, 1958, 293, 294, 264, 958, 24784, 562, 51134], 'temperature': 0.0, 'avg_logprob': -0.20056591336689297, 'compression_ratio': 1.5783132530120483, 'no_speech_prob': 0.2588823139667511}, {'id': 559, 'seek': 400232, 'start': 4017.7200000000003, 'end': 4025.76, 'text': ' I updated this particular basic block this became 1 can this change in D1 effect that', 'tokens': [51134, 286, 10588, 341, 1729, 3875, 3461, 341, 3062, 502, 393, 341, 1319, 294, 413, 16, 1802, 300, 51536], 'temperature': 0.0, 'avg_logprob': -0.20056591336689297, 'compression_ratio': 1.5783132530120483, 'no_speech_prob': 0.2588823139667511}, {'id': 560, 'seek': 402576, 'start': 4025.76, 'end': 4037.6000000000004, 'text': ' some other definition D4 got in or did not get in can it no but that cannot ever have come there', 'tokens': [50364, 512, 661, 7123, 413, 19, 658, 294, 420, 630, 406, 483, 294, 393, 309, 572, 457, 300, 2644, 1562, 362, 808, 456, 50956], 'temperature': 0.0, 'avg_logprob': -0.14686063130696614, 'compression_ratio': 1.7349397590361446, 'no_speech_prob': 0.18489950895309448}, {'id': 561, 'seek': 402576, 'start': 4037.6000000000004, 'end': 4042.48, 'text': " right even in the initial case it could not have arrived at that location so let's say I have a", 'tokens': [50956, 558, 754, 294, 264, 5883, 1389, 309, 727, 406, 362, 6678, 412, 300, 4914, 370, 718, 311, 584, 286, 362, 257, 51200], 'temperature': 0.0, 'avg_logprob': -0.14686063130696614, 'compression_ratio': 1.7349397590361446, 'no_speech_prob': 0.18489950895309448}, {'id': 562, 'seek': 402576, 'start': 4042.48, 'end': 4051.7200000000003, 'text': " location at this location I say that let's say initially it was 1 1 0 1 sorry 1 1 0 0 and later", 'tokens': [51200, 4914, 412, 341, 4914, 286, 584, 300, 718, 311, 584, 9105, 309, 390, 502, 502, 1958, 502, 2597, 502, 502, 1958, 1958, 293, 1780, 51662], 'temperature': 0.0, 'avg_logprob': -0.14686063130696614, 'compression_ratio': 1.7349397590361446, 'no_speech_prob': 0.18489950895309448}, {'id': 563, 'seek': 405172, 'start': 4051.72, 'end': 4062.0, 'text': ' it changed to 1 1 0 1 can this change to 1 effect something here at the same basic at the same', 'tokens': [50364, 309, 3105, 281, 502, 502, 1958, 502, 393, 341, 1319, 281, 502, 1802, 746, 510, 412, 264, 912, 3875, 412, 264, 912, 50878], 'temperature': 0.0, 'avg_logprob': -0.17963487761361258, 'compression_ratio': 1.9113300492610839, 'no_speech_prob': 0.011304623447358608}, {'id': 564, 'seek': 405172, 'start': 4062.0, 'end': 4069.68, 'text': " program point not at somewhere else no maybe the I'm saying the future iteration so this happens", 'tokens': [50878, 1461, 935, 406, 412, 4079, 1646, 572, 1310, 264, 286, 478, 1566, 264, 2027, 24784, 370, 341, 2314, 51262], 'temperature': 0.0, 'avg_logprob': -0.17963487761361258, 'compression_ratio': 1.9113300492610839, 'no_speech_prob': 0.011304623447358608}, {'id': 565, 'seek': 405172, 'start': 4069.68, 'end': 4075.68, 'text': ' in the future so so in the current iteration this is a transition that happened right and I say that', 'tokens': [51262, 294, 264, 2027, 370, 370, 294, 264, 2190, 24784, 341, 307, 257, 6034, 300, 2011, 558, 293, 286, 584, 300, 51562], 'temperature': 0.0, 'avg_logprob': -0.17963487761361258, 'compression_ratio': 1.9113300492610839, 'no_speech_prob': 0.011304623447358608}, {'id': 566, 'seek': 405172, 'start': 4075.68, 'end': 4081.3999999999996, 'text': ' later this particular update affected this other updates other affected something can it happen', 'tokens': [51562, 1780, 341, 1729, 5623, 8028, 341, 661, 9205, 661, 8028, 746, 393, 309, 1051, 51848], 'temperature': 0.0, 'avg_logprob': -0.17963487761361258, 'compression_ratio': 1.9113300492610839, 'no_speech_prob': 0.011304623447358608}, {'id': 567, 'seek': 408140, 'start': 4081.4, 'end': 4091.76, 'text': " doesn't matter out is completely dependent on in so we argue about in or out it's a basically", 'tokens': [50364, 1177, 380, 1871, 484, 307, 2584, 12334, 322, 294, 370, 321, 9695, 466, 294, 420, 484, 309, 311, 257, 1936, 50882], 'temperature': 0.0, 'avg_logprob': -0.16516411822775137, 'compression_ratio': 1.5593220338983051, 'no_speech_prob': 0.0012929405784234405}, {'id': 568, 'seek': 408140, 'start': 4091.76, 'end': 4099.52, 'text': " same thing I'm saying initially the set was 1 1 0 0 and later it moved to 1 1 0 1 so now what", 'tokens': [50882, 912, 551, 286, 478, 1566, 9105, 264, 992, 390, 502, 502, 1958, 1958, 293, 1780, 309, 4259, 281, 502, 502, 1958, 502, 370, 586, 437, 51270], 'temperature': 0.0, 'avg_logprob': -0.16516411822775137, 'compression_ratio': 1.5593220338983051, 'no_speech_prob': 0.0012929405784234405}, {'id': 569, 'seek': 408140, 'start': 4099.52, 'end': 4105.92, 'text': ' happened was this particular data flow fact initially we did not know it reaches but now', 'tokens': [51270, 2011, 390, 341, 1729, 1412, 3095, 1186, 9105, 321, 630, 406, 458, 309, 14235, 457, 586, 51590], 'temperature': 0.0, 'avg_logprob': -0.16516411822775137, 'compression_ratio': 1.5593220338983051, 'no_speech_prob': 0.0012929405784234405}, {'id': 570, 'seek': 410592, 'start': 4105.92, 'end': 4114.16, 'text': ' I see that it got reached right can it affect the reachability of some other definition no', 'tokens': [50364, 286, 536, 300, 309, 658, 6488, 558, 393, 309, 3345, 264, 2524, 2310, 295, 512, 661, 7123, 572, 50776], 'temperature': 0.0, 'avg_logprob': -0.11222994187298943, 'compression_ratio': 1.7417840375586855, 'no_speech_prob': 0.2012292891740799}, {'id': 571, 'seek': 410592, 'start': 4114.16, 'end': 4119.68, 'text': ' right and that is why we were able to use this nice bit vectors because all of them I can just', 'tokens': [50776, 558, 293, 300, 307, 983, 321, 645, 1075, 281, 764, 341, 1481, 857, 18875, 570, 439, 295, 552, 286, 393, 445, 51052], 'temperature': 0.0, 'avg_logprob': -0.11222994187298943, 'compression_ratio': 1.7417840375586855, 'no_speech_prob': 0.2012292891740799}, {'id': 572, 'seek': 410592, 'start': 4119.68, 'end': 4126.08, 'text': ' update in one shot I did not have to really worry about what can happen to the other but', 'tokens': [51052, 5623, 294, 472, 3347, 286, 630, 406, 362, 281, 534, 3292, 466, 437, 393, 1051, 281, 264, 661, 457, 51372], 'temperature': 0.0, 'avg_logprob': -0.11222994187298943, 'compression_ratio': 1.7417840375586855, 'no_speech_prob': 0.2012292891740799}, {'id': 573, 'seek': 410592, 'start': 4126.08, 'end': 4133.08, 'text': ' in case of constant propagation can that happen that because one variable I made it not constant', 'tokens': [51372, 294, 1389, 295, 5754, 38377, 393, 300, 1051, 300, 570, 472, 7006, 286, 1027, 309, 406, 5754, 51722], 'temperature': 0.0, 'avg_logprob': -0.11222994187298943, 'compression_ratio': 1.7417840375586855, 'no_speech_prob': 0.2012292891740799}, {'id': 574, 'seek': 413308, 'start': 4133.08, 'end': 4142.68, 'text': ' some other variable can get affected because of that yes yes because it can go into a loop', 'tokens': [50364, 512, 661, 7006, 393, 483, 8028, 570, 295, 300, 2086, 2086, 570, 309, 393, 352, 666, 257, 6367, 50844], 'temperature': 0.0, 'avg_logprob': -0.13807288578578403, 'compression_ratio': 1.6588235294117648, 'no_speech_prob': 0.0128037603572011}, {'id': 575, 'seek': 413308, 'start': 4142.68, 'end': 4150.5599999999995, 'text': ' and then it can say okay now I see like simple case simple cases think of I plus plus initially', 'tokens': [50844, 293, 550, 309, 393, 584, 1392, 586, 286, 536, 411, 2199, 1389, 2199, 3331, 519, 295, 286, 1804, 1804, 9105, 51238], 'temperature': 0.0, 'avg_logprob': -0.13807288578578403, 'compression_ratio': 1.6588235294117648, 'no_speech_prob': 0.0128037603572011}, {'id': 576, 'seek': 413308, 'start': 4150.5599999999995, 'end': 4158.04, 'text': " you come here it will be say it I 0 and you will let's say this is happening in a loop right so", 'tokens': [51238, 291, 808, 510, 309, 486, 312, 584, 309, 286, 1958, 293, 291, 486, 718, 311, 584, 341, 307, 2737, 294, 257, 6367, 558, 370, 51612], 'temperature': 0.0, 'avg_logprob': -0.13807288578578403, 'compression_ratio': 1.6588235294117648, 'no_speech_prob': 0.0128037603572011}, {'id': 577, 'seek': 415804, 'start': 4158.04, 'end': 4167.12, 'text': " it will say okay I can see a value of I as 0 and this guys don't know so fine then no this", 'tokens': [50364, 309, 486, 584, 1392, 286, 393, 536, 257, 2158, 295, 286, 382, 1958, 293, 341, 1074, 500, 380, 458, 370, 2489, 550, 572, 341, 50818], 'temperature': 0.0, 'avg_logprob': -0.15930876933353047, 'compression_ratio': 1.5965909090909092, 'no_speech_prob': 0.012397879734635353}, {'id': 578, 'seek': 415804, 'start': 4167.12, 'end': 4176.28, 'text': ' is affecting the same variable that is not saying that yeah but I had to say something like maybe', 'tokens': [50818, 307, 17476, 264, 912, 7006, 300, 307, 406, 1566, 300, 1338, 457, 286, 632, 281, 584, 746, 411, 1310, 51276], 'temperature': 0.0, 'avg_logprob': -0.15930876933353047, 'compression_ratio': 1.5965909090909092, 'no_speech_prob': 0.012397879734635353}, {'id': 579, 'seek': 415804, 'start': 4176.28, 'end': 4184.8, 'text': ' I need a couple of statements I need I equals I plus plus so I plus plus become not constant', 'tokens': [51276, 286, 643, 257, 1916, 295, 12363, 286, 643, 286, 6915, 286, 1804, 1804, 370, 286, 1804, 1804, 1813, 406, 5754, 51702], 'temperature': 0.0, 'avg_logprob': -0.15930876933353047, 'compression_ratio': 1.5965909090909092, 'no_speech_prob': 0.012397879734635353}, {'id': 580, 'seek': 418480, 'start': 4184.8, 'end': 4195.4800000000005, 'text': ' and then X is equal to I right so now initially I was 1 and then X became 1 that was good but', 'tokens': [50364, 293, 550, 1783, 307, 2681, 281, 286, 558, 370, 586, 9105, 286, 390, 502, 293, 550, 1783, 3062, 502, 300, 390, 665, 457, 50898], 'temperature': 0.0, 'avg_logprob': -0.14756866240165603, 'compression_ratio': 1.8627450980392157, 'no_speech_prob': 0.052821312099695206}, {'id': 581, 'seek': 418480, 'start': 4195.4800000000005, 'end': 4203.76, 'text': ' later because I became 2 like it became 1 here and then it became plus plus became 2 because', 'tokens': [50898, 1780, 570, 286, 3062, 568, 411, 309, 3062, 502, 510, 293, 550, 309, 3062, 1804, 1804, 3062, 568, 570, 51312], 'temperature': 0.0, 'avg_logprob': -0.14756866240165603, 'compression_ratio': 1.8627450980392157, 'no_speech_prob': 0.052821312099695206}, {'id': 582, 'seek': 418480, 'start': 4203.76, 'end': 4211.6, 'text': ' I became 2 this guy becomes a not constant X has to become a not constant why is that because this', 'tokens': [51312, 286, 3062, 568, 341, 2146, 3643, 257, 406, 5754, 1783, 575, 281, 1813, 257, 406, 5754, 983, 307, 300, 570, 341, 51704], 'temperature': 0.0, 'avg_logprob': -0.14756866240165603, 'compression_ratio': 1.8627450980392157, 'no_speech_prob': 0.052821312099695206}, {'id': 583, 'seek': 421160, 'start': 4211.6, 'end': 4215.200000000001, 'text': ' becomes not constant right this will become not constant and X is equal to I this is not constant', 'tokens': [50364, 3643, 406, 5754, 558, 341, 486, 1813, 406, 5754, 293, 1783, 307, 2681, 281, 286, 341, 307, 406, 5754, 50544], 'temperature': 0.0, 'avg_logprob': -0.28890348850995645, 'compression_ratio': 1.7464788732394365, 'no_speech_prob': 0.04273640736937523}, {'id': 584, 'seek': 421160, 'start': 4215.200000000001, 'end': 4222.64, 'text': " so the LHS also become not constant am I you guys have gone very quiet so I don't like quite", 'tokens': [50544, 370, 264, 441, 12527, 611, 1813, 406, 5754, 669, 286, 291, 1074, 362, 2780, 588, 5677, 370, 286, 500, 380, 411, 1596, 50916], 'temperature': 0.0, 'avg_logprob': -0.28890348850995645, 'compression_ratio': 1.7464788732394365, 'no_speech_prob': 0.04273640736937523}, {'id': 585, 'seek': 421160, 'start': 4222.64, 'end': 4229.92, 'text': ' no no no there are finite number of variables variables mean the same it is still I yeah', 'tokens': [50916, 572, 572, 572, 456, 366, 19362, 1230, 295, 9102, 9102, 914, 264, 912, 309, 307, 920, 286, 1338, 51280], 'temperature': 0.0, 'avg_logprob': -0.28890348850995645, 'compression_ratio': 1.7464788732394365, 'no_speech_prob': 0.04273640736937523}, {'id': 586, 'seek': 421160, 'start': 4229.92, 'end': 4238.72, 'text': ' so initially look at think of this particular set that the beginning of the basic block I is', 'tokens': [51280, 370, 9105, 574, 412, 519, 295, 341, 1729, 992, 300, 264, 2863, 295, 264, 3875, 3461, 286, 307, 51720], 'temperature': 0.0, 'avg_logprob': -0.28890348850995645, 'compression_ratio': 1.7464788732394365, 'no_speech_prob': 0.04273640736937523}, {'id': 587, 'seek': 423872, 'start': 4238.72, 'end': 4249.400000000001, 'text': ' bounded to 0 because after this X I will become 1 right and then this loop will take it and again', 'tokens': [50364, 37498, 281, 1958, 570, 934, 341, 1783, 286, 486, 1813, 502, 558, 293, 550, 341, 6367, 486, 747, 309, 293, 797, 50898], 'temperature': 0.0, 'avg_logprob': -0.22721397483741845, 'compression_ratio': 1.7962962962962963, 'no_speech_prob': 0.1155548244714737}, {'id': 588, 'seek': 423872, 'start': 4249.400000000001, 'end': 4256.76, 'text': ' you take a merge with I is I equal 0 and that becomes NC two different constants one is 0 one', 'tokens': [50898, 291, 747, 257, 22183, 365, 286, 307, 286, 2681, 1958, 293, 300, 3643, 20786, 732, 819, 35870, 472, 307, 1958, 472, 51266], 'temperature': 0.0, 'avg_logprob': -0.22721397483741845, 'compression_ratio': 1.7962962962962963, 'no_speech_prob': 0.1155548244714737}, {'id': 589, 'seek': 423872, 'start': 4256.76, 'end': 4262.6, 'text': ' is 1 it becomes not constant even before that even at the entry to the basic block entry to the basic', 'tokens': [51266, 307, 502, 309, 3643, 406, 5754, 754, 949, 300, 754, 412, 264, 8729, 281, 264, 3875, 3461, 8729, 281, 264, 3875, 51558], 'temperature': 0.0, 'avg_logprob': -0.22721397483741845, 'compression_ratio': 1.7962962962962963, 'no_speech_prob': 0.1155548244714737}, {'id': 590, 'seek': 423872, 'start': 4262.6, 'end': 4267.84, 'text': " block initially everything is don't know then initially the value X equals I seems in and then", 'tokens': [51558, 3461, 9105, 1203, 307, 500, 380, 458, 550, 9105, 264, 2158, 1783, 6915, 286, 2544, 294, 293, 550, 51820], 'temperature': 0.0, 'avg_logprob': -0.22721397483741845, 'compression_ratio': 1.7962962962962963, 'no_speech_prob': 0.1155548244714737}, {'id': 591, 'seek': 426784, 'start': 4267.84, 'end': 4272.96, 'text': ' it becomes I plus plus that is taken out back into that branch so now on one branch it gets', 'tokens': [50364, 309, 3643, 286, 1804, 1804, 300, 307, 2726, 484, 646, 666, 300, 9819, 370, 586, 322, 472, 9819, 309, 2170, 50620], 'temperature': 0.0, 'avg_logprob': -0.165385013156467, 'compression_ratio': 2.1166666666666667, 'no_speech_prob': 0.0020557076204568148}, {'id': 592, 'seek': 426784, 'start': 4272.96, 'end': 4281.6, 'text': ' 0 the other branch it gets 1 and then I 1 is not equal 0 so it becomes not constant right and and', 'tokens': [50620, 1958, 264, 661, 9819, 309, 2170, 502, 293, 550, 286, 502, 307, 406, 2681, 1958, 370, 309, 3643, 406, 5754, 558, 293, 293, 51052], 'temperature': 0.0, 'avg_logprob': -0.165385013156467, 'compression_ratio': 2.1166666666666667, 'no_speech_prob': 0.0020557076204568148}, {'id': 593, 'seek': 426784, 'start': 4281.6, 'end': 4289.400000000001, 'text': ' see why did X become not constant why did X become not constant X did not do anything it did not', 'tokens': [51052, 536, 983, 630, 1783, 1813, 406, 5754, 983, 630, 1783, 1813, 406, 5754, 1783, 630, 406, 360, 1340, 309, 630, 406, 51442], 'temperature': 0.0, 'avg_logprob': -0.165385013156467, 'compression_ratio': 2.1166666666666667, 'no_speech_prob': 0.0020557076204568148}, {'id': 594, 'seek': 426784, 'start': 4289.400000000001, 'end': 4296.4400000000005, 'text': ' change anything poor thing it became not constant because I became not constant this could not', 'tokens': [51442, 1319, 1340, 4716, 551, 309, 3062, 406, 5754, 570, 286, 3062, 406, 5754, 341, 727, 406, 51794], 'temperature': 0.0, 'avg_logprob': -0.165385013156467, 'compression_ratio': 2.1166666666666667, 'no_speech_prob': 0.0020557076204568148}, {'id': 595, 'seek': 429644, 'start': 4296.44, 'end': 4302.36, 'text': ' happened in case of a in case of reaching definitions right so this brings into a very', 'tokens': [50364, 2011, 294, 1389, 295, 257, 294, 1389, 295, 9906, 21988, 558, 370, 341, 5607, 666, 257, 588, 50660], 'temperature': 0.0, 'avg_logprob': -0.17584235579879195, 'compression_ratio': 1.7341772151898733, 'no_speech_prob': 0.00505434675142169}, {'id': 596, 'seek': 429644, 'start': 4302.36, 'end': 4313.44, 'text': ' interesting feature called separability so I we call analysis where one data flow fact cannot', 'tokens': [50660, 1880, 4111, 1219, 3128, 2310, 370, 286, 321, 818, 5215, 689, 472, 1412, 3095, 1186, 2644, 51214], 'temperature': 0.0, 'avg_logprob': -0.17584235579879195, 'compression_ratio': 1.7341772151898733, 'no_speech_prob': 0.00505434675142169}, {'id': 597, 'seek': 429644, 'start': 4313.44, 'end': 4320.879999999999, 'text': ' influence the other as separable data flow analysis frameworks reaching definitions available', 'tokens': [51214, 6503, 264, 661, 382, 3128, 712, 1412, 3095, 5215, 29834, 9906, 21988, 2435, 51586], 'temperature': 0.0, 'avg_logprob': -0.17584235579879195, 'compression_ratio': 1.7341772151898733, 'no_speech_prob': 0.00505434675142169}, {'id': 598, 'seek': 432088, 'start': 4320.88, 'end': 4328.68, 'text': ' expression very busy expressions liveness analysis are all separable however constant', 'tokens': [50364, 6114, 588, 5856, 15277, 375, 553, 442, 5215, 366, 439, 3128, 712, 4461, 5754, 50754], 'temperature': 0.0, 'avg_logprob': -0.12724287886368602, 'compression_ratio': 2.08, 'no_speech_prob': 0.045792147517204285}, {'id': 599, 'seek': 432088, 'start': 4328.68, 'end': 4336.36, 'text': ' propagation is an example of a non separable analysis right in fact there is a very interesting', 'tokens': [50754, 38377, 307, 364, 1365, 295, 257, 2107, 3128, 712, 5215, 558, 294, 1186, 456, 307, 257, 588, 1880, 51138], 'temperature': 0.0, 'avg_logprob': -0.12724287886368602, 'compression_ratio': 2.08, 'no_speech_prob': 0.045792147517204285}, {'id': 600, 'seek': 432088, 'start': 4336.36, 'end': 4343.64, 'text': ' analysis called faint variable analysis faint variable analysis says that so live variable', 'tokens': [51138, 5215, 1219, 21104, 7006, 5215, 21104, 7006, 5215, 1619, 300, 370, 1621, 7006, 51502], 'temperature': 0.0, 'avg_logprob': -0.12724287886368602, 'compression_ratio': 2.08, 'no_speech_prob': 0.045792147517204285}, {'id': 601, 'seek': 432088, 'start': 4343.64, 'end': 4350.72, 'text': ' analysis we say that okay it is live if there is a use of a variable in the future if there', 'tokens': [51502, 5215, 321, 584, 300, 1392, 309, 307, 1621, 498, 456, 307, 257, 764, 295, 257, 7006, 294, 264, 2027, 498, 456, 51856], 'temperature': 0.0, 'avg_logprob': -0.12724287886368602, 'compression_ratio': 2.08, 'no_speech_prob': 0.045792147517204285}, {'id': 602, 'seek': 435072, 'start': 4350.72, 'end': 4356.76, 'text': ' is no use of a variable in the future it is dead faint variable analysis says the variable', 'tokens': [50364, 307, 572, 764, 295, 257, 7006, 294, 264, 2027, 309, 307, 3116, 21104, 7006, 5215, 1619, 264, 7006, 50666], 'temperature': 0.0, 'avg_logprob': -0.13974967068188812, 'compression_ratio': 1.8116883116883118, 'no_speech_prob': 0.0032646923791617155}, {'id': 603, 'seek': 435072, 'start': 4356.76, 'end': 4366.2, 'text': " is faint if either it is dead that's okay or it is used in a used in an expression on a of a", 'tokens': [50666, 307, 21104, 498, 2139, 309, 307, 3116, 300, 311, 1392, 420, 309, 307, 1143, 294, 257, 1143, 294, 364, 6114, 322, 257, 295, 257, 51138], 'temperature': 0.0, 'avg_logprob': -0.13974967068188812, 'compression_ratio': 1.8116883116883118, 'no_speech_prob': 0.0032646923791617155}, {'id': 604, 'seek': 435072, 'start': 4366.2, 'end': 4376.400000000001, 'text': ' variable where the operands are also faint so if you have X equals Y plus Z if Y and Z are also', 'tokens': [51138, 7006, 689, 264, 2208, 2967, 366, 611, 21104, 370, 498, 291, 362, 1783, 6915, 398, 1804, 1176, 498, 398, 293, 1176, 366, 611, 51648], 'temperature': 0.0, 'avg_logprob': -0.13974967068188812, 'compression_ratio': 1.8116883116883118, 'no_speech_prob': 0.0032646923791617155}, {'id': 605, 'seek': 437640, 'start': 4376.4, 'end': 4382.08, 'text': " faint then X becomes also becomes faint so it's used in a computation where others are also faint", 'tokens': [50364, 21104, 550, 1783, 3643, 611, 3643, 21104, 370, 309, 311, 1143, 294, 257, 24903, 689, 2357, 366, 611, 21104, 50648], 'temperature': 0.0, 'avg_logprob': -0.20702163294741982, 'compression_ratio': 1.8009259259259258, 'no_speech_prob': 0.1729383021593094}, {'id': 606, 'seek': 437640, 'start': 4382.08, 'end': 4387.5599999999995, 'text': " so it's like you are fainting they are not dead yet but like if too many people faint then they", 'tokens': [50648, 370, 309, 311, 411, 291, 366, 283, 491, 783, 436, 366, 406, 3116, 1939, 457, 411, 498, 886, 867, 561, 21104, 550, 436, 50922], 'temperature': 0.0, 'avg_logprob': -0.20702163294741982, 'compression_ratio': 1.8009259259259258, 'no_speech_prob': 0.1729383021593094}, {'id': 607, 'seek': 437640, 'start': 4387.5599999999995, 'end': 4394.28, 'text': ' can already moved out so I can do a more like so there are cluster of statements who are not so', 'tokens': [50922, 393, 1217, 4259, 484, 370, 286, 393, 360, 257, 544, 411, 370, 456, 366, 13630, 295, 12363, 567, 366, 406, 370, 51258], 'temperature': 0.0, 'avg_logprob': -0.20702163294741982, 'compression_ratio': 1.8009259259259258, 'no_speech_prob': 0.1729383021593094}, {'id': 608, 'seek': 437640, 'start': 4394.28, 'end': 4401.32, 'text': ' useful but that will very well will not be able to use it because there is a cyclic so that becomes', 'tokens': [51258, 4420, 457, 300, 486, 588, 731, 486, 406, 312, 1075, 281, 764, 309, 570, 456, 307, 257, 38154, 1050, 370, 300, 3643, 51610], 'temperature': 0.0, 'avg_logprob': -0.20702163294741982, 'compression_ratio': 1.8009259259259258, 'no_speech_prob': 0.1729383021593094}, {'id': 609, 'seek': 440132, 'start': 4401.32, 'end': 4406.5599999999995, 'text': ' non separable why because something becoming faint depends on something else becoming faint', 'tokens': [50364, 2107, 3128, 712, 983, 570, 746, 5617, 21104, 5946, 322, 746, 1646, 5617, 21104, 50626], 'temperature': 0.0, 'avg_logprob': -0.16243898241143478, 'compression_ratio': 2.2962962962962963, 'no_speech_prob': 0.1684514433145523}, {'id': 610, 'seek': 440132, 'start': 4406.5599999999995, 'end': 4414.48, 'text': ' right so X becoming faint depends on Y becoming faint similarly like X becoming not constant', 'tokens': [50626, 558, 370, 1783, 5617, 21104, 5946, 322, 398, 5617, 21104, 14138, 411, 1783, 5617, 406, 5754, 51022], 'temperature': 0.0, 'avg_logprob': -0.16243898241143478, 'compression_ratio': 2.2962962962962963, 'no_speech_prob': 0.1684514433145523}, {'id': 611, 'seek': 440132, 'start': 4414.48, 'end': 4419.759999999999, 'text': ' depends on Y becoming not constant like in this case happened right so X became not constant', 'tokens': [51022, 5946, 322, 398, 5617, 406, 5754, 411, 294, 341, 1389, 2011, 558, 370, 1783, 3062, 406, 5754, 51286], 'temperature': 0.0, 'avg_logprob': -0.16243898241143478, 'compression_ratio': 2.2962962962962963, 'no_speech_prob': 0.1684514433145523}, {'id': 612, 'seek': 440132, 'start': 4419.759999999999, 'end': 4425.639999999999, 'text': ' because because I became not constant right so I just finish it another so this is the idea of', 'tokens': [51286, 570, 570, 286, 3062, 406, 5754, 558, 370, 286, 445, 2413, 309, 1071, 370, 341, 307, 264, 1558, 295, 51580], 'temperature': 0.0, 'avg_logprob': -0.16243898241143478, 'compression_ratio': 2.2962962962962963, 'no_speech_prob': 0.1684514433145523}, {'id': 613, 'seek': 442564, 'start': 4425.64, 'end': 4438.04, 'text': ' separability and this is the example that you talked about right multiple expression', 'tokens': [50364, 3128, 2310, 293, 341, 307, 264, 1365, 300, 291, 2825, 466, 558, 3866, 6114, 50984], 'temperature': 0.0, 'avg_logprob': -0.14761408737727574, 'compression_ratio': 1.7919463087248322, 'no_speech_prob': 0.04597025737166405}, {'id': 614, 'seek': 442564, 'start': 4438.04, 'end': 4446.240000000001, 'text': ' and you you pointed out right so multiple expressions can compute the same value right', 'tokens': [50984, 293, 291, 291, 10932, 484, 558, 370, 3866, 15277, 393, 14722, 264, 912, 2158, 558, 51394], 'temperature': 0.0, 'avg_logprob': -0.14761408737727574, 'compression_ratio': 1.7919463087248322, 'no_speech_prob': 0.04597025737166405}, {'id': 615, 'seek': 442564, 'start': 4446.240000000001, 'end': 4453.52, 'text': ' so what can what is happening along this program path in this program path I am getting a value', 'tokens': [51394, 370, 437, 393, 437, 307, 2737, 2051, 341, 1461, 3100, 294, 341, 1461, 3100, 286, 669, 1242, 257, 2158, 51758], 'temperature': 0.0, 'avg_logprob': -0.14761408737727574, 'compression_ratio': 1.7919463087248322, 'no_speech_prob': 0.04597025737166405}, {'id': 616, 'seek': 445352, 'start': 4453.52, 'end': 4464.320000000001, 'text': ' which is X is equal to 2 Y is equal to 3 and Z is equal to 5 what along this program path again', 'tokens': [50364, 597, 307, 1783, 307, 2681, 281, 568, 398, 307, 2681, 281, 805, 293, 1176, 307, 2681, 281, 1025, 437, 2051, 341, 1461, 3100, 797, 50904], 'temperature': 0.0, 'avg_logprob': -0.1127217317882337, 'compression_ratio': 1.888157894736842, 'no_speech_prob': 0.2433367371559143}, {'id': 617, 'seek': 445352, 'start': 4464.320000000001, 'end': 4473.92, 'text': ' I am getting I am getting X equals 3 I am getting Y equals 2 and I am getting Z equals 5 so if I', 'tokens': [50904, 286, 669, 1242, 286, 669, 1242, 1783, 6915, 805, 286, 669, 1242, 398, 6915, 568, 293, 286, 669, 1242, 1176, 6915, 1025, 370, 498, 286, 51384], 'temperature': 0.0, 'avg_logprob': -0.1127217317882337, 'compression_ratio': 1.888157894736842, 'no_speech_prob': 0.2433367371559143}, {'id': 618, 'seek': 445352, 'start': 4473.92, 'end': 4482.0, 'text': ' had got the constant values here I should have got what X is not constant not constant once it', 'tokens': [51384, 632, 658, 264, 5754, 4190, 510, 286, 820, 362, 658, 437, 1783, 307, 406, 5754, 406, 5754, 1564, 309, 51788], 'temperature': 0.0, 'avg_logprob': -0.1127217317882337, 'compression_ratio': 1.888157894736842, 'no_speech_prob': 0.2433367371559143}, {'id': 619, 'seek': 448200, 'start': 4482.48, 'end': 4491.68, 'text': ' is 3 Y is not constant again 1 is 3 once is 2 but Z should be constant value 5 can you quickly', 'tokens': [50388, 307, 805, 398, 307, 406, 5754, 797, 502, 307, 805, 1564, 307, 568, 457, 1176, 820, 312, 5754, 2158, 1025, 393, 291, 2661, 50848], 'temperature': 0.0, 'avg_logprob': -0.1581009951504794, 'compression_ratio': 1.6745562130177514, 'no_speech_prob': 0.023818114772439003}, {'id': 620, 'seek': 448200, 'start': 4491.68, 'end': 4500.8, 'text': ' do the constant propagation algorithm on this and see what happens Z becomes not constant why', 'tokens': [50848, 360, 264, 5754, 38377, 9284, 322, 341, 293, 536, 437, 2314, 1176, 3643, 406, 5754, 983, 51304], 'temperature': 0.0, 'avg_logprob': -0.1581009951504794, 'compression_ratio': 1.6745562130177514, 'no_speech_prob': 0.023818114772439003}, {'id': 621, 'seek': 448200, 'start': 4500.8, 'end': 4506.56, 'text': ' why did poor thing become not constant because what are we doing is we are computing the inset', 'tokens': [51304, 983, 630, 4716, 551, 1813, 406, 5754, 570, 437, 366, 321, 884, 307, 321, 366, 15866, 264, 1028, 302, 51592], 'temperature': 0.0, 'avg_logprob': -0.1581009951504794, 'compression_ratio': 1.6745562130177514, 'no_speech_prob': 0.023818114772439003}, {'id': 622, 'seek': 450656, 'start': 4506.56, 'end': 4515.280000000001, 'text': ' here and we are saying both this X and Y X is not constant Y is not constant so because they are', 'tokens': [50364, 510, 293, 321, 366, 1566, 1293, 341, 1783, 293, 398, 1783, 307, 406, 5754, 398, 307, 406, 5754, 370, 570, 436, 366, 50800], 'temperature': 0.0, 'avg_logprob': -0.11871587146412242, 'compression_ratio': 1.9234693877551021, 'no_speech_prob': 0.17299644649028778}, {'id': 623, 'seek': 450656, 'start': 4515.280000000001, 'end': 4520.400000000001, 'text': ' not constant they are being used here so Z is also not constant so the value we compute is', 'tokens': [50800, 406, 5754, 436, 366, 885, 1143, 510, 370, 1176, 307, 611, 406, 5754, 370, 264, 2158, 321, 14722, 307, 51056], 'temperature': 0.0, 'avg_logprob': -0.11871587146412242, 'compression_ratio': 1.9234693877551021, 'no_speech_prob': 0.17299644649028778}, {'id': 624, 'seek': 450656, 'start': 4520.400000000001, 'end': 4527.280000000001, 'text': ' Z is also not constant and we miss out of an opportunity of optimization here is that could', 'tokens': [51056, 1176, 307, 611, 406, 5754, 293, 321, 1713, 484, 295, 364, 2650, 295, 19618, 510, 307, 300, 727, 51400], 'temperature': 0.0, 'avg_logprob': -0.11871587146412242, 'compression_ratio': 1.9234693877551021, 'no_speech_prob': 0.17299644649028778}, {'id': 625, 'seek': 450656, 'start': 4527.280000000001, 'end': 4536.200000000001, 'text': ' have been a constant 5 and I could have replaced this business here so this is one analysis where', 'tokens': [51400, 362, 668, 257, 5754, 1025, 293, 286, 727, 362, 10772, 341, 1606, 510, 370, 341, 307, 472, 5215, 689, 51846], 'temperature': 0.0, 'avg_logprob': -0.11871587146412242, 'compression_ratio': 1.9234693877551021, 'no_speech_prob': 0.17299644649028778}, {'id': 626, 'seek': 453620, 'start': 4536.2, 'end': 4542.28, 'text': ' my optimal solution so remember initially we talked about this actual solution what we want', 'tokens': [50364, 452, 16252, 3827, 370, 1604, 9105, 321, 2825, 466, 341, 3539, 3827, 437, 321, 528, 50668], 'temperature': 0.0, 'avg_logprob': -0.14839008377819526, 'compression_ratio': 1.9689119170984455, 'no_speech_prob': 0.0017906739376485348}, {'id': 627, 'seek': 453620, 'start': 4542.28, 'end': 4547.84, 'text': ' to compute the solution we want to compute is to the program point I would try to take all paths', 'tokens': [50668, 281, 14722, 264, 3827, 321, 528, 281, 14722, 307, 281, 264, 1461, 935, 286, 576, 853, 281, 747, 439, 14518, 50946], 'temperature': 0.0, 'avg_logprob': -0.14839008377819526, 'compression_ratio': 1.9689119170984455, 'no_speech_prob': 0.0017906739376485348}, {'id': 628, 'seek': 453620, 'start': 4547.84, 'end': 4554.88, 'text': ' that reach that program point and then compute their meets and that was what we defined as the', 'tokens': [50946, 300, 2524, 300, 1461, 935, 293, 550, 14722, 641, 13961, 293, 300, 390, 437, 321, 7642, 382, 264, 51298], 'temperature': 0.0, 'avg_logprob': -0.14839008377819526, 'compression_ratio': 1.9689119170984455, 'no_speech_prob': 0.0017906739376485348}, {'id': 629, 'seek': 453620, 'start': 4554.88, 'end': 4562.44, 'text': ' MOP solution the meet of all path solution that is the best solution we should get right because', 'tokens': [51298, 376, 12059, 3827, 264, 1677, 295, 439, 3100, 3827, 300, 307, 264, 1151, 3827, 321, 820, 483, 558, 570, 51676], 'temperature': 0.0, 'avg_logprob': -0.14839008377819526, 'compression_ratio': 1.9689119170984455, 'no_speech_prob': 0.0017906739376485348}, {'id': 630, 'seek': 456244, 'start': 4562.44, 'end': 4567.44, 'text': ' I am actually looking at every execution possible and then seeing what are the states along every', 'tokens': [50364, 286, 669, 767, 1237, 412, 633, 15058, 1944, 293, 550, 2577, 437, 366, 264, 4368, 2051, 633, 50614], 'temperature': 0.0, 'avg_logprob': -0.1475645240984465, 'compression_ratio': 1.9285714285714286, 'no_speech_prob': 0.09179934114217758}, {'id': 631, 'seek': 456244, 'start': 4567.44, 'end': 4576.48, 'text': ' possible execution however whatever what we ended up computing using the framework the fixed point', 'tokens': [50614, 1944, 15058, 4461, 2035, 437, 321, 4590, 493, 15866, 1228, 264, 8388, 264, 6806, 935, 51066], 'temperature': 0.0, 'avg_logprob': -0.1475645240984465, 'compression_ratio': 1.9285714285714286, 'no_speech_prob': 0.09179934114217758}, {'id': 632, 'seek': 456244, 'start': 4576.48, 'end': 4582.599999999999, 'text': ' framework was what is called the MFP the MFP solution or the maximum fixed point solution', 'tokens': [51066, 8388, 390, 437, 307, 1219, 264, 376, 45882, 264, 376, 45882, 3827, 420, 264, 6674, 6806, 935, 3827, 51372], 'temperature': 0.0, 'avg_logprob': -0.1475645240984465, 'compression_ratio': 1.9285714285714286, 'no_speech_prob': 0.09179934114217758}, {'id': 633, 'seek': 456244, 'start': 4582.599999999999, 'end': 4589.08, 'text': ' maximum or minimum depending on whatever you like right so least fixed point or the maximum', 'tokens': [51372, 6674, 420, 7285, 5413, 322, 2035, 291, 411, 558, 370, 1935, 6806, 935, 420, 264, 6674, 51696], 'temperature': 0.0, 'avg_logprob': -0.1475645240984465, 'compression_ratio': 1.9285714285714286, 'no_speech_prob': 0.09179934114217758}, {'id': 634, 'seek': 458908, 'start': 4589.08, 'end': 4598.6, 'text': ' greatest fixed point whatever you like so it is the so we are computing the MFP solution in this', 'tokens': [50364, 6636, 6806, 935, 2035, 291, 411, 370, 309, 307, 264, 370, 321, 366, 15866, 264, 376, 45882, 3827, 294, 341, 50840], 'temperature': 0.0, 'avg_logprob': -0.16010098656018576, 'compression_ratio': 1.8786407766990292, 'no_speech_prob': 0.04878857731819153}, {'id': 635, 'seek': 458908, 'start': 4598.6, 'end': 4607.04, 'text': ' case as it turns out the MOP solution and the MOP MFP solution do not coincide so if I take in the', 'tokens': [50840, 1389, 382, 309, 4523, 484, 264, 376, 12059, 3827, 293, 264, 376, 12059, 376, 45882, 3827, 360, 406, 13001, 482, 370, 498, 286, 747, 294, 264, 51262], 'temperature': 0.0, 'avg_logprob': -0.16010098656018576, 'compression_ratio': 1.8786407766990292, 'no_speech_prob': 0.04878857731819153}, {'id': 636, 'seek': 458908, 'start': 4607.04, 'end': 4612.04, 'text': ' MOP solution I would have computed everything till this point and I would have seen that this', 'tokens': [51262, 376, 12059, 3827, 286, 576, 362, 40610, 1203, 4288, 341, 935, 293, 286, 576, 362, 1612, 300, 341, 51512], 'temperature': 0.0, 'avg_logprob': -0.16010098656018576, 'compression_ratio': 1.8786407766990292, 'no_speech_prob': 0.04878857731819153}, {'id': 637, 'seek': 458908, 'start': 4612.04, 'end': 4617.5199999999995, 'text': ' value is 5 but if I do the MFP solution because I am first computing the ins and then propagating', 'tokens': [51512, 2158, 307, 1025, 457, 498, 286, 360, 264, 376, 45882, 3827, 570, 286, 669, 700, 15866, 264, 1028, 293, 550, 12425, 990, 51786], 'temperature': 0.0, 'avg_logprob': -0.16010098656018576, 'compression_ratio': 1.8786407766990292, 'no_speech_prob': 0.04878857731819153}, {'id': 638, 'seek': 461752, 'start': 4617.52, 'end': 4622.280000000001, 'text': ' it I lose that information and I end up getting not constant for something which had which would', 'tokens': [50364, 309, 286, 3624, 300, 1589, 293, 286, 917, 493, 1242, 406, 5754, 337, 746, 597, 632, 597, 576, 50602], 'temperature': 0.0, 'avg_logprob': -0.17032276898965068, 'compression_ratio': 1.7235023041474655, 'no_speech_prob': 0.07543523609638214}, {'id': 639, 'seek': 461752, 'start': 4622.280000000001, 'end': 4627.84, 'text': ' have been more precise as 5 that is where the bad news ends so we essentially get a', 'tokens': [50602, 362, 668, 544, 13600, 382, 1025, 300, 307, 689, 264, 1578, 2583, 5314, 370, 321, 4476, 483, 257, 50880], 'temperature': 0.0, 'avg_logprob': -0.17032276898965068, 'compression_ratio': 1.7235023041474655, 'no_speech_prob': 0.07543523609638214}, {'id': 640, 'seek': 461752, 'start': 4627.84, 'end': 4633.6, 'text': ' approximation so the problem is that is it a problem like did we lose soundness because of this', 'tokens': [50880, 28023, 370, 264, 1154, 307, 300, 307, 309, 257, 1154, 411, 630, 321, 3624, 1626, 1287, 570, 295, 341, 51168], 'temperature': 0.0, 'avg_logprob': -0.17032276898965068, 'compression_ratio': 1.7235023041474655, 'no_speech_prob': 0.07543523609638214}, {'id': 641, 'seek': 461752, 'start': 4633.6, 'end': 4641.160000000001, 'text': ' no we could have done an optimization we did not do it fine not a good thing but we can live with', 'tokens': [51168, 572, 321, 727, 362, 1096, 364, 19618, 321, 630, 406, 360, 309, 2489, 406, 257, 665, 551, 457, 321, 393, 1621, 365, 51546], 'temperature': 0.0, 'avg_logprob': -0.17032276898965068, 'compression_ratio': 1.7235023041474655, 'no_speech_prob': 0.07543523609638214}, {'id': 642, 'seek': 464116, 'start': 4641.16, 'end': 4648.24, 'text': ' it right but it does not become unsafe right so essentially it still gives you an over', 'tokens': [50364, 309, 558, 457, 309, 775, 406, 1813, 35948, 558, 370, 4476, 309, 920, 2709, 291, 364, 670, 50718], 'temperature': 0.0, 'avg_logprob': -0.1338317122640489, 'compression_ratio': 1.90625, 'no_speech_prob': 0.15860207378864288}, {'id': 643, 'seek': 464116, 'start': 4648.24, 'end': 4657.24, 'text': ' approximation so I define a new term called over approximation which means that I approximate', 'tokens': [50718, 28023, 370, 286, 6964, 257, 777, 1433, 1219, 670, 28023, 597, 1355, 300, 286, 30874, 51168], 'temperature': 0.0, 'avg_logprob': -0.1338317122640489, 'compression_ratio': 1.90625, 'no_speech_prob': 0.15860207378864288}, {'id': 644, 'seek': 464116, 'start': 4657.24, 'end': 4663.24, 'text': ' but I approximate more so essentially I can inhibit optimizations but I will not lose out', 'tokens': [51168, 457, 286, 30874, 544, 370, 4476, 286, 393, 49858, 5028, 14455, 457, 286, 486, 406, 3624, 484, 51468], 'temperature': 0.0, 'avg_logprob': -0.1338317122640489, 'compression_ratio': 1.90625, 'no_speech_prob': 0.15860207378864288}, {'id': 645, 'seek': 464116, 'start': 4663.24, 'end': 4669.04, 'text': ' on soundness right so that is what is referred to as over approximation so we will end up doing', 'tokens': [51468, 322, 1626, 1287, 558, 370, 300, 307, 437, 307, 10839, 281, 382, 670, 28023, 370, 321, 486, 917, 493, 884, 51758], 'temperature': 0.0, 'avg_logprob': -0.1338317122640489, 'compression_ratio': 1.90625, 'no_speech_prob': 0.15860207378864288}, {'id': 646, 'seek': 466904, 'start': 4669.04, 'end': 4676.8, 'text': ' an over approximation but the algorithm is not precise it is not precise it is not exactly', 'tokens': [50364, 364, 670, 28023, 457, 264, 9284, 307, 406, 13600, 309, 307, 406, 13600, 309, 307, 406, 2293, 50752], 'temperature': 0.0, 'avg_logprob': -0.16679810874069792, 'compression_ratio': 1.6877828054298643, 'no_speech_prob': 0.02582225389778614}, {'id': 647, 'seek': 466904, 'start': 4676.8, 'end': 4684.96, 'text': ' computing what the MOP solution would have computed so our search for a unified framework', 'tokens': [50752, 15866, 437, 264, 376, 12059, 3827, 576, 362, 40610, 370, 527, 3164, 337, 257, 26787, 8388, 51160], 'temperature': 0.0, 'avg_logprob': -0.16679810874069792, 'compression_ratio': 1.6877828054298643, 'no_speech_prob': 0.02582225389778614}, {'id': 648, 'seek': 466904, 'start': 4684.96, 'end': 4691.68, 'text': ' continues and we will see that I thought I will be able to cover more but this was okay there is', 'tokens': [51160, 6515, 293, 321, 486, 536, 300, 286, 1194, 286, 486, 312, 1075, 281, 2060, 544, 457, 341, 390, 1392, 456, 307, 51496], 'temperature': 0.0, 'avg_logprob': -0.16679810874069792, 'compression_ratio': 1.6877828054298643, 'no_speech_prob': 0.02582225389778614}, {'id': 649, 'seek': 466904, 'start': 4691.68, 'end': 4697.0, 'text': ' some bit of theoretical framework foundations which can actually say that why all this business', 'tokens': [51496, 512, 857, 295, 20864, 8388, 22467, 597, 393, 767, 584, 300, 983, 439, 341, 1606, 51762], 'temperature': 0.0, 'avg_logprob': -0.16679810874069792, 'compression_ratio': 1.6877828054298643, 'no_speech_prob': 0.02582225389778614}, {'id': 650, 'seek': 469700, 'start': 4697.16, 'end': 4703.28, 'text': ' works I mean so essentially whatever I said the number of steps required for updates are this and', 'tokens': [50372, 1985, 286, 914, 370, 4476, 2035, 286, 848, 264, 1230, 295, 4439, 4739, 337, 9205, 366, 341, 293, 50678], 'temperature': 0.0, 'avg_logprob': -0.17786192090323802, 'compression_ratio': 1.7710280373831775, 'no_speech_prob': 0.05462219566106796}, {'id': 651, 'seek': 469700, 'start': 4703.28, 'end': 4709.4, 'text': ' all you can actually put it in a very nice framework with a little bit of lattice theory', 'tokens': [50678, 439, 291, 393, 767, 829, 309, 294, 257, 588, 1481, 8388, 365, 257, 707, 857, 295, 34011, 5261, 50984], 'temperature': 0.0, 'avg_logprob': -0.17786192090323802, 'compression_ratio': 1.7710280373831775, 'no_speech_prob': 0.05462219566106796}, {'id': 652, 'seek': 469700, 'start': 4709.4, 'end': 4717.52, 'text': ' and little bit of expand theory but maybe there is already too much of theory so we will see I', 'tokens': [50984, 293, 707, 857, 295, 5268, 5261, 457, 1310, 456, 307, 1217, 886, 709, 295, 5261, 370, 321, 486, 536, 286, 51390], 'temperature': 0.0, 'avg_logprob': -0.17786192090323802, 'compression_ratio': 1.7710280373831775, 'no_speech_prob': 0.05462219566106796}, {'id': 653, 'seek': 469700, 'start': 4717.52, 'end': 4722.56, 'text': " see that I'll see the mood for the class tomorrow if we see that the class is in mood for that we", 'tokens': [51390, 536, 300, 286, 603, 536, 264, 9268, 337, 264, 1508, 4153, 498, 321, 536, 300, 264, 1508, 307, 294, 9268, 337, 300, 321, 51642], 'temperature': 0.0, 'avg_logprob': -0.17786192090323802, 'compression_ratio': 1.7710280373831775, 'no_speech_prob': 0.05462219566106796}, {'id': 654, 'seek': 472256, 'start': 4722.56, 'end': 4729.88, 'text': ' will do that otherwise we will do something else of what so there is something called lattice', 'tokens': [50364, 486, 360, 300, 5911, 321, 486, 360, 746, 1646, 295, 437, 370, 456, 307, 746, 1219, 34011, 50730], 'temperature': 0.0, 'avg_logprob': -0.17656646377738866, 'compression_ratio': 2.0483870967741935, 'no_speech_prob': 0.08943802863359451}, {'id': 655, 'seek': 472256, 'start': 4729.88, 'end': 4737.04, 'text': ' theory so the data the idea is this the idea is there is these data flow facts is a so you know', 'tokens': [50730, 5261, 370, 264, 1412, 264, 1558, 307, 341, 264, 1558, 307, 456, 307, 613, 1412, 3095, 9130, 307, 257, 370, 291, 458, 51088], 'temperature': 0.0, 'avg_logprob': -0.17656646377738866, 'compression_ratio': 2.0483870967741935, 'no_speech_prob': 0.08943802863359451}, {'id': 656, 'seek': 472256, 'start': 4737.04, 'end': 4740.52, 'text': ' what is the lattice how many people know what is the lattice some not many people raised their', 'tokens': [51088, 437, 307, 264, 34011, 577, 867, 561, 458, 437, 307, 264, 34011, 512, 406, 867, 561, 6005, 641, 51262], 'temperature': 0.0, 'avg_logprob': -0.17656646377738866, 'compression_ratio': 2.0483870967741935, 'no_speech_prob': 0.08943802863359451}, {'id': 657, 'seek': 472256, 'start': 4740.52, 'end': 4751.200000000001, 'text': ' hands yesterday so the so lattice is a set with an ordering relation right so you take a set and', 'tokens': [51262, 2377, 5186, 370, 264, 370, 34011, 307, 257, 992, 365, 364, 21739, 9721, 558, 370, 291, 747, 257, 992, 293, 51796], 'temperature': 0.0, 'avg_logprob': -0.17656646377738866, 'compression_ratio': 2.0483870967741935, 'no_speech_prob': 0.08943802863359451}, {'id': 658, 'seek': 475120, 'start': 4751.2, 'end': 4755.32, 'text': ' you define an ordering relation which says that the points in this set can be ordered by something', 'tokens': [50364, 291, 6964, 364, 21739, 9721, 597, 1619, 300, 264, 2793, 294, 341, 992, 393, 312, 8866, 538, 746, 50570], 'temperature': 0.0, 'avg_logprob': -0.14113920788432277, 'compression_ratio': 2.0376344086021505, 'no_speech_prob': 0.004728483967483044}, {'id': 659, 'seek': 475120, 'start': 4755.32, 'end': 4762.84, 'text': ' is less than or greater than something right so this is referred to as any set with an', 'tokens': [50570, 307, 1570, 813, 420, 5044, 813, 746, 558, 370, 341, 307, 10839, 281, 382, 604, 992, 365, 364, 50946], 'temperature': 0.0, 'avg_logprob': -0.14113920788432277, 'compression_ratio': 2.0376344086021505, 'no_speech_prob': 0.004728483967483044}, {'id': 660, 'seek': 475120, 'start': 4762.84, 'end': 4769.88, 'text': ' ordering relation is referred to as a poset or a partial order partially ordered set right so it', 'tokens': [50946, 21739, 9721, 307, 10839, 281, 382, 257, 1366, 302, 420, 257, 14641, 1668, 18886, 8866, 992, 558, 370, 309, 51298], 'temperature': 0.0, 'avg_logprob': -0.14113920788432277, 'compression_ratio': 2.0376344086021505, 'no_speech_prob': 0.004728483967483044}, {'id': 661, 'seek': 475120, 'start': 4769.88, 'end': 4778.88, 'text': ' is a poset if for any two values in this domain so okay so there is also called something called', 'tokens': [51298, 307, 257, 1366, 302, 498, 337, 604, 732, 4190, 294, 341, 9274, 370, 1392, 370, 456, 307, 611, 1219, 746, 1219, 51748], 'temperature': 0.0, 'avg_logprob': -0.14113920788432277, 'compression_ratio': 2.0376344086021505, 'no_speech_prob': 0.004728483967483044}, {'id': 662, 'seek': 477888, 'start': 4778.88, 'end': 4786.0, 'text': ' a total order so I say something is a total order if every two values in this set can be ordered by', 'tokens': [50364, 257, 3217, 1668, 370, 286, 584, 746, 307, 257, 3217, 1668, 498, 633, 732, 4190, 294, 341, 992, 393, 312, 8866, 538, 50720], 'temperature': 0.0, 'avg_logprob': -0.16396131408348513, 'compression_ratio': 1.8349056603773586, 'no_speech_prob': 0.01581423170864582}, {'id': 663, 'seek': 477888, 'start': 4786.0, 'end': 4790.88, 'text': ' that relation like for instance set of integers by the less than equal to operator is it a total', 'tokens': [50720, 300, 9721, 411, 337, 5197, 992, 295, 41674, 538, 264, 1570, 813, 2681, 281, 12973, 307, 309, 257, 3217, 50964], 'temperature': 0.0, 'avg_logprob': -0.16396131408348513, 'compression_ratio': 1.8349056603773586, 'no_speech_prob': 0.01581423170864582}, {'id': 664, 'seek': 477888, 'start': 4790.88, 'end': 4796.64, 'text': ' order yes because I pick any two numbers give me any two national numbers I can tell you what', 'tokens': [50964, 1668, 2086, 570, 286, 1888, 604, 732, 3547, 976, 385, 604, 732, 4048, 3547, 286, 393, 980, 291, 437, 51252], 'temperature': 0.0, 'avg_logprob': -0.16396131408348513, 'compression_ratio': 1.8349056603773586, 'no_speech_prob': 0.01581423170864582}, {'id': 665, 'seek': 477888, 'start': 4796.64, 'end': 4803.6, 'text': ' which one is lesser than which one set of complex numbers under lexicographic ordering is it total', 'tokens': [51252, 597, 472, 307, 22043, 813, 597, 472, 992, 295, 3997, 3547, 833, 476, 47228, 12295, 21739, 307, 309, 3217, 51600], 'temperature': 0.0, 'avg_logprob': -0.16396131408348513, 'compression_ratio': 1.8349056603773586, 'no_speech_prob': 0.01581423170864582}, {'id': 666, 'seek': 480360, 'start': 4803.6, 'end': 4810.0, 'text': ' order under lexicographic ordering you know lexicographic ordering that you first compare', 'tokens': [50364, 1668, 833, 476, 47228, 12295, 21739, 291, 458, 476, 47228, 12295, 21739, 300, 291, 700, 6794, 50684], 'temperature': 0.0, 'avg_logprob': -0.2101996849323141, 'compression_ratio': 1.875, 'no_speech_prob': 0.031072312965989113}, {'id': 667, 'seek': 480360, 'start': 4810.0, 'end': 4817.120000000001, 'text': " the first guy the real real parts if they're equal then compare the so that also forms a", 'tokens': [50684, 264, 700, 2146, 264, 957, 957, 3166, 498, 436, 434, 2681, 550, 6794, 264, 370, 300, 611, 6422, 257, 51040], 'temperature': 0.0, 'avg_logprob': -0.2101996849323141, 'compression_ratio': 1.875, 'no_speech_prob': 0.031072312965989113}, {'id': 668, 'seek': 480360, 'start': 4817.120000000001, 'end': 4825.52, 'text': ' total ordering but the complex numbers under under complex ordering which is says that like', 'tokens': [51040, 3217, 21739, 457, 264, 3997, 3547, 833, 833, 3997, 21739, 597, 307, 1619, 300, 411, 51460], 'temperature': 0.0, 'avg_logprob': -0.2101996849323141, 'compression_ratio': 1.875, 'no_speech_prob': 0.031072312965989113}, {'id': 669, 'seek': 482552, 'start': 4825.52, 'end': 4838.0, 'text': " I'll say that c1 is like i plus a plus ib is less than equal to x plus i i mean j", 'tokens': [50364, 286, 603, 584, 300, 269, 16, 307, 411, 741, 1804, 257, 1804, 39073, 307, 1570, 813, 2681, 281, 2031, 1804, 741, 741, 914, 361, 50988], 'temperature': 0.0, 'avg_logprob': -0.262286366156812, 'compression_ratio': 1.4146341463414633, 'no_speech_prob': 0.47902870178222656}, {'id': 670, 'seek': 482552, 'start': 4838.0, 'end': 4847.92, 'text': " so let's say this is these are the DLM complex parts so now I would say that this holds only", 'tokens': [50988, 370, 718, 311, 584, 341, 307, 613, 366, 264, 413, 43, 44, 3997, 3166, 370, 586, 286, 576, 584, 300, 341, 9190, 787, 51484], 'temperature': 0.0, 'avg_logprob': -0.262286366156812, 'compression_ratio': 1.4146341463414633, 'no_speech_prob': 0.47902870178222656}, {'id': 671, 'seek': 484792, 'start': 4847.92, 'end': 4861.12, 'text': ' if a is less than equal to x and b is b is less than equal to y if this happens only then I will', 'tokens': [50364, 498, 257, 307, 1570, 813, 2681, 281, 2031, 293, 272, 307, 272, 307, 1570, 813, 2681, 281, 288, 498, 341, 2314, 787, 550, 286, 486, 51024], 'temperature': 0.0, 'avg_logprob': -0.15654366233132103, 'compression_ratio': 1.646551724137931, 'no_speech_prob': 0.10261266678571701}, {'id': 672, 'seek': 484792, 'start': 4861.12, 'end': 4869.52, 'text': ' say that this is less than this but think about these numbers i plus a 1 plus 2i and 2 plus 1i', 'tokens': [51024, 584, 300, 341, 307, 1570, 813, 341, 457, 519, 466, 613, 3547, 741, 1804, 257, 502, 1804, 568, 72, 293, 568, 1804, 502, 72, 51444], 'temperature': 0.0, 'avg_logprob': -0.15654366233132103, 'compression_ratio': 1.646551724137931, 'no_speech_prob': 0.10261266678571701}, {'id': 673, 'seek': 486952, 'start': 4869.52, 'end': 4879.68, 'text': " which one is lesser than which one can't say I this ordering does not give me a relation I", 'tokens': [50364, 597, 472, 307, 22043, 813, 597, 472, 393, 380, 584, 286, 341, 21739, 775, 406, 976, 385, 257, 9721, 286, 50872], 'temperature': 0.0, 'avg_logprob': -0.1801209236258891, 'compression_ratio': 1.7329192546583851, 'no_speech_prob': 0.05415314435958862}, {'id': 674, 'seek': 486952, 'start': 4879.68, 'end': 4888.92, 'text': ' cannot put any of them before the so if there are such elements then I call it a partially', 'tokens': [50872, 2644, 829, 604, 295, 552, 949, 264, 370, 498, 456, 366, 1270, 4959, 550, 286, 818, 309, 257, 18886, 51334], 'temperature': 0.0, 'avg_logprob': -0.1801209236258891, 'compression_ratio': 1.7329192546583851, 'no_speech_prob': 0.05415314435958862}, {'id': 675, 'seek': 486952, 'start': 4888.92, 'end': 4894.72, 'text': " ordered set or a poset so there is an ordering but it's partially ordered like there are elements", 'tokens': [51334, 8866, 992, 420, 257, 1366, 302, 370, 456, 307, 364, 21739, 457, 309, 311, 18886, 8866, 411, 456, 366, 4959, 51624], 'temperature': 0.0, 'avg_logprob': -0.1801209236258891, 'compression_ratio': 1.7329192546583851, 'no_speech_prob': 0.05415314435958862}, {'id': 676, 'seek': 489472, 'start': 4894.72, 'end': 4899.2, 'text': ' which do not have an ordering between them so now the cool idea is that these data flow', 'tokens': [50364, 597, 360, 406, 362, 364, 21739, 1296, 552, 370, 586, 264, 1627, 1558, 307, 300, 613, 1412, 3095, 50588], 'temperature': 0.0, 'avg_logprob': -0.11582922006582284, 'compression_ratio': 1.7416267942583732, 'no_speech_prob': 0.09755659848451614}, {'id': 677, 'seek': 489472, 'start': 4899.2, 'end': 4905.360000000001, 'text': ' facts can be put up as lattice elements by some ordering relation and this ordering is', 'tokens': [50588, 9130, 393, 312, 829, 493, 382, 34011, 4959, 538, 512, 21739, 9721, 293, 341, 21739, 307, 50896], 'temperature': 0.0, 'avg_logprob': -0.11582922006582284, 'compression_ratio': 1.7416267942583732, 'no_speech_prob': 0.09755659848451614}, {'id': 678, 'seek': 489472, 'start': 4905.360000000001, 'end': 4911.72, 'text': " basically on this approximation basically so which I don't want to get into that so essentially now", 'tokens': [50896, 1936, 322, 341, 28023, 1936, 370, 597, 286, 500, 380, 528, 281, 483, 666, 300, 370, 4476, 586, 51214], 'temperature': 0.0, 'avg_logprob': -0.11582922006582284, 'compression_ratio': 1.7416267942583732, 'no_speech_prob': 0.09755659848451614}, {'id': 679, 'seek': 489472, 'start': 4911.72, 'end': 4919.64, 'text': ' once you have that lattice you can actually talk about these these termination guarantees', 'tokens': [51214, 1564, 291, 362, 300, 34011, 291, 393, 767, 751, 466, 613, 613, 1433, 2486, 32567, 51610], 'temperature': 0.0, 'avg_logprob': -0.11582922006582284, 'compression_ratio': 1.7416267942583732, 'no_speech_prob': 0.09755659848451614}, {'id': 680, 'seek': 491964, 'start': 4919.64, 'end': 4925.52, 'text': ' and computing the correct things on that lattice structure and the type of the function like for', 'tokens': [50364, 293, 15866, 264, 3006, 721, 322, 300, 34011, 3877, 293, 264, 2010, 295, 264, 2445, 411, 337, 50658], 'temperature': 0.0, 'avg_logprob': -0.13171787261962892, 'compression_ratio': 1.8549618320610688, 'no_speech_prob': 0.32677656412124634}, {'id': 681, 'seek': 491964, 'start': 4925.52, 'end': 4931.88, 'text': ' instance I said that even with infinite lattices sorry infinite sets I can have a terminating', 'tokens': [50658, 5197, 286, 848, 300, 754, 365, 13785, 29025, 1473, 2597, 13785, 6352, 286, 393, 362, 257, 1433, 8205, 50976], 'temperature': 0.0, 'avg_logprob': -0.13171787261962892, 'compression_ratio': 1.8549618320610688, 'no_speech_prob': 0.32677656412124634}, {'id': 682, 'seek': 491964, 'start': 4931.88, 'end': 4936.72, 'text': ' execution of my analysis like constant propagation why because in that case the lattice that you get', 'tokens': [50976, 15058, 295, 452, 5215, 411, 5754, 38377, 983, 570, 294, 300, 1389, 264, 34011, 300, 291, 483, 51218], 'temperature': 0.0, 'avg_logprob': -0.13171787261962892, 'compression_ratio': 1.8549618320610688, 'no_speech_prob': 0.32677656412124634}, {'id': 683, 'seek': 491964, 'start': 4936.72, 'end': 4944.160000000001, 'text': ' has a finite height the height of the lattice is finite the number of elements can be infinite so', 'tokens': [51218, 575, 257, 19362, 6681, 264, 6681, 295, 264, 34011, 307, 19362, 264, 1230, 295, 4959, 393, 312, 13785, 370, 51590], 'temperature': 0.0, 'avg_logprob': -0.13171787261962892, 'compression_ratio': 1.8549618320610688, 'no_speech_prob': 0.32677656412124634}, {'id': 684, 'seek': 491964, 'start': 4944.160000000001, 'end': 4949.160000000001, 'text': " anyway so let's see if we have taste for it tomorrow we can do more but as far as a practitioner", 'tokens': [51590, 4033, 370, 718, 311, 536, 498, 321, 362, 3939, 337, 309, 4153, 321, 393, 360, 544, 457, 382, 1400, 382, 257, 32125, 51840], 'temperature': 0.0, 'avg_logprob': -0.13171787261962892, 'compression_ratio': 1.8549618320610688, 'no_speech_prob': 0.32677656412124634}, {'id': 685, 'seek': 494916, 'start': 4949.16, 'end': 4954.599999999999, 'text': ' is concerned we have sort of figured out how to do the analysis but if you do that you will', 'tokens': [50364, 307, 5922, 321, 362, 1333, 295, 8932, 484, 577, 281, 360, 264, 5215, 457, 498, 291, 360, 300, 291, 486, 50636], 'temperature': 0.0, 'avg_logprob': -0.21475221615026494, 'compression_ratio': 1.928, 'no_speech_prob': 0.006414445582777262}, {'id': 686, 'seek': 494916, 'start': 4954.599999999999, 'end': 4959.639999999999, 'text': ' actually have the mathematical foundation as to why this analysis is framework really works right', 'tokens': [50636, 767, 362, 264, 18894, 7030, 382, 281, 983, 341, 5215, 307, 8388, 534, 1985, 558, 50888], 'temperature': 0.0, 'avg_logprob': -0.21475221615026494, 'compression_ratio': 1.928, 'no_speech_prob': 0.006414445582777262}, {'id': 687, 'seek': 494916, 'start': 4959.639999999999, 'end': 4964.4, 'text': " so from a compiler's perspective maybe that is not so important but really understanding it it is", 'tokens': [50888, 370, 490, 257, 31958, 311, 4585, 1310, 300, 307, 406, 370, 1021, 457, 534, 3701, 309, 309, 307, 51126], 'temperature': 0.0, 'avg_logprob': -0.21475221615026494, 'compression_ratio': 1.928, 'no_speech_prob': 0.006414445582777262}, {'id': 688, 'seek': 494916, 'start': 4964.4, 'end': 4969.08, 'text': ' really important to I mean you really understand insights that why does this is a value mathematically', 'tokens': [51126, 534, 1021, 281, 286, 914, 291, 534, 1223, 14310, 300, 983, 775, 341, 307, 257, 2158, 44003, 51360], 'temperature': 0.0, 'avg_logprob': -0.21475221615026494, 'compression_ratio': 1.928, 'no_speech_prob': 0.006414445582777262}, {'id': 689, 'seek': 494916, 'start': 4969.08, 'end': 4974.84, 'text': ' why does it really work and the good part is once you have put things in that framework the', 'tokens': [51360, 983, 775, 309, 534, 589, 293, 264, 665, 644, 307, 1564, 291, 362, 829, 721, 294, 300, 8388, 264, 51648], 'temperature': 0.0, 'avg_logprob': -0.21475221615026494, 'compression_ratio': 1.928, 'no_speech_prob': 0.006414445582777262}, {'id': 690, 'seek': 497484, 'start': 4974.84, 'end': 4980.76, 'text': " proofs are done in that framework and they're done with after that I would not have to do the proof", 'tokens': [50364, 8177, 82, 366, 1096, 294, 300, 8388, 293, 436, 434, 1096, 365, 934, 300, 286, 576, 406, 362, 281, 360, 264, 8177, 50660], 'temperature': 0.0, 'avg_logprob': -0.1553818637674505, 'compression_ratio': 2.0702702702702704, 'no_speech_prob': 0.1461000144481659}, {'id': 691, 'seek': 497484, 'start': 4980.76, 'end': 4985.6, 'text': ' for every analysis separately so it gives you a checklist that does this happen does this happen', 'tokens': [50660, 337, 633, 5215, 14759, 370, 309, 2709, 291, 257, 30357, 300, 775, 341, 1051, 775, 341, 1051, 50902], 'temperature': 0.0, 'avg_logprob': -0.1553818637674505, 'compression_ratio': 2.0702702702702704, 'no_speech_prob': 0.1461000144481659}, {'id': 692, 'seek': 497484, 'start': 4985.6, 'end': 4991.04, 'text': ' does this happen does this happen yes the analysis is out and it terminate done you do not have to', 'tokens': [50902, 775, 341, 1051, 775, 341, 1051, 2086, 264, 5215, 307, 484, 293, 309, 10761, 473, 1096, 291, 360, 406, 362, 281, 51174], 'temperature': 0.0, 'avg_logprob': -0.1553818637674505, 'compression_ratio': 2.0702702702702704, 'no_speech_prob': 0.1461000144481659}, {'id': 693, 'seek': 497484, 'start': 4991.04, 'end': 4995.360000000001, 'text': ' do a proof for every analysis separately that is a that is what you get back from that.', 'tokens': [51174, 360, 257, 8177, 337, 633, 5215, 14759, 300, 307, 257, 300, 307, 437, 291, 483, 646, 490, 300, 13, 51390], 'temperature': 0.0, 'avg_logprob': -0.1553818637674505, 'compression_ratio': 2.0702702702702704, 'no_speech_prob': 0.1461000144481659}]