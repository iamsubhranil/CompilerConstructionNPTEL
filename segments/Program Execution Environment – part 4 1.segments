[{'id': 0, 'seek': 0, 'start': 0.0, 'end': 10.06, 'text': ' And annotate wherever each variable begins.', 'tokens': [50364, 400, 25339, 473, 8660, 1184, 7006, 7338, 13, 50867], 'temperature': 0.0, 'avg_logprob': -0.14443114785587086, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.2612084448337555}, {'id': 1, 'seek': 0, 'start': 10.06, 'end': 13.76, 'text': ' This is something which you can try in your free time.', 'tokens': [50867, 639, 307, 746, 597, 291, 393, 853, 294, 428, 1737, 565, 13, 51052], 'temperature': 0.0, 'avg_logprob': -0.14443114785587086, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.2612084448337555}, {'id': 2, 'seek': 0, 'start': 13.76, 'end': 15.4, 'text': ' But I think we can begin.', 'tokens': [51052, 583, 286, 519, 321, 393, 1841, 13, 51134], 'temperature': 0.0, 'avg_logprob': -0.14443114785587086, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.2612084448337555}, {'id': 3, 'seek': 0, 'start': 15.4, 'end': 21.56, 'text': ' So the next topic, so the last session for today, this is also going to be bit heavy', 'tokens': [51134, 407, 264, 958, 4829, 11, 370, 264, 1036, 5481, 337, 965, 11, 341, 307, 611, 516, 281, 312, 857, 4676, 51442], 'temperature': 0.0, 'avg_logprob': -0.14443114785587086, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.2612084448337555}, {'id': 4, 'seek': 0, 'start': 21.56, 'end': 23.42, 'text': ' in terms of the information.', 'tokens': [51442, 294, 2115, 295, 264, 1589, 13, 51535], 'temperature': 0.0, 'avg_logprob': -0.14443114785587086, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.2612084448337555}, {'id': 5, 'seek': 0, 'start': 23.42, 'end': 28.04, 'text': " But if you're feeling too sleepy or something, let me know, we'll see.", 'tokens': [51535, 583, 498, 291, 434, 2633, 886, 24908, 420, 746, 11, 718, 385, 458, 11, 321, 603, 536, 13, 51766], 'temperature': 0.0, 'avg_logprob': -0.14443114785587086, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.2612084448337555}, {'id': 6, 'seek': 2804, 'start': 28.04, 'end': 33.16, 'text': ' But essentially the idea now is to, so what we have seen is primarily what all goes into', 'tokens': [50364, 583, 4476, 264, 1558, 586, 307, 281, 11, 370, 437, 321, 362, 1612, 307, 10029, 437, 439, 1709, 666, 50620], 'temperature': 0.0, 'avg_logprob': -0.12997955971575798, 'compression_ratio': 1.759090909090909, 'no_speech_prob': 0.0939389318227768}, {'id': 7, 'seek': 2804, 'start': 33.16, 'end': 35.28, 'text': ' the object file.', 'tokens': [50620, 264, 2657, 3991, 13, 50726], 'temperature': 0.0, 'avg_logprob': -0.12997955971575798, 'compression_ratio': 1.759090909090909, 'no_speech_prob': 0.0939389318227768}, {'id': 8, 'seek': 2804, 'start': 35.28, 'end': 42.82, 'text': " Let's look at assemblers a bit just to figure out how assemblers are producing this information.", 'tokens': [50726, 961, 311, 574, 412, 8438, 11977, 257, 857, 445, 281, 2573, 484, 577, 8438, 11977, 366, 10501, 341, 1589, 13, 51103], 'temperature': 0.0, 'avg_logprob': -0.12997955971575798, 'compression_ratio': 1.759090909090909, 'no_speech_prob': 0.0939389318227768}, {'id': 9, 'seek': 2804, 'start': 42.82, 'end': 44.28, 'text': ' So what do assemblers do?', 'tokens': [51103, 407, 437, 360, 8438, 11977, 360, 30, 51176], 'temperature': 0.0, 'avg_logprob': -0.12997955971575798, 'compression_ratio': 1.759090909090909, 'no_speech_prob': 0.0939389318227768}, {'id': 10, 'seek': 2804, 'start': 44.28, 'end': 51.16, 'text': ' So essentially assemblers translate the textual assembly program into the binary object file.', 'tokens': [51176, 407, 4476, 8438, 11977, 13799, 264, 2487, 901, 12103, 1461, 666, 264, 17434, 2657, 3991, 13, 51520], 'temperature': 0.0, 'avg_logprob': -0.12997955971575798, 'compression_ratio': 1.759090909090909, 'no_speech_prob': 0.0939389318227768}, {'id': 11, 'seek': 2804, 'start': 51.16, 'end': 57.36, 'text': " And it's more of a simple translation, not really a compilation.", 'tokens': [51520, 400, 309, 311, 544, 295, 257, 2199, 12853, 11, 406, 534, 257, 40261, 13, 51830], 'temperature': 0.0, 'avg_logprob': -0.12997955971575798, 'compression_ratio': 1.759090909090909, 'no_speech_prob': 0.0939389318227768}, {'id': 12, 'seek': 5736, 'start': 57.68, 'end': 62.88, 'text': ' Essentially one of the primary tasks is to figure out how to convert the text instructions', 'tokens': [50380, 23596, 472, 295, 264, 6194, 9608, 307, 281, 2573, 484, 577, 281, 7620, 264, 2487, 9415, 50640], 'temperature': 0.0, 'avg_logprob': -0.2159830113892914, 'compression_ratio': 1.7191489361702128, 'no_speech_prob': 0.0267450213432312}, {'id': 13, 'seek': 5736, 'start': 62.88, 'end': 64.88, 'text': ' into the machine code.', 'tokens': [50640, 666, 264, 3479, 3089, 13, 50740], 'temperature': 0.0, 'avg_logprob': -0.2159830113892914, 'compression_ratio': 1.7191489361702128, 'no_speech_prob': 0.0267450213432312}, {'id': 14, 'seek': 5736, 'start': 64.88, 'end': 68.44, 'text': ' And we saw some examples prior where opc...', 'tokens': [50740, 400, 321, 1866, 512, 5110, 4059, 689, 999, 66, 485, 50918], 'temperature': 0.0, 'avg_logprob': -0.2159830113892914, 'compression_ratio': 1.7191489361702128, 'no_speech_prob': 0.0267450213432312}, {'id': 15, 'seek': 5736, 'start': 68.44, 'end': 72.48, 'text': ' 55 meant push EBP and so on.', 'tokens': [50918, 12330, 4140, 2944, 50148, 47, 293, 370, 322, 13, 51120], 'temperature': 0.0, 'avg_logprob': -0.2159830113892914, 'compression_ratio': 1.7191489361702128, 'no_speech_prob': 0.0267450213432312}, {'id': 16, 'seek': 5736, 'start': 72.48, 'end': 78.6, 'text': ' So every architecture publishes its instruction encoding information that this instruction', 'tokens': [51120, 407, 633, 9482, 11374, 279, 1080, 10951, 43430, 1589, 300, 341, 10951, 51426], 'temperature': 0.0, 'avg_logprob': -0.2159830113892914, 'compression_ratio': 1.7191489361702128, 'no_speech_prob': 0.0267450213432312}, {'id': 17, 'seek': 5736, 'start': 78.6, 'end': 81.2, 'text': ' needs to be encoded this way and so on.', 'tokens': [51426, 2203, 281, 312, 2058, 12340, 341, 636, 293, 370, 322, 13, 51556], 'temperature': 0.0, 'avg_logprob': -0.2159830113892914, 'compression_ratio': 1.7191489361702128, 'no_speech_prob': 0.0267450213432312}, {'id': 18, 'seek': 5736, 'start': 81.2, 'end': 86.28, 'text': ' So assemblers will use this information to essentially translate the text program into', 'tokens': [51556, 407, 8438, 11977, 486, 764, 341, 1589, 281, 4476, 13799, 264, 2487, 1461, 666, 51810], 'temperature': 0.0, 'avg_logprob': -0.2159830113892914, 'compression_ratio': 1.7191489361702128, 'no_speech_prob': 0.0267450213432312}, {'id': 19, 'seek': 8628, 'start': 86.28, 'end': 88.56, 'text': ' the machine code.', 'tokens': [50364, 264, 3479, 3089, 13, 50478], 'temperature': 0.0, 'avg_logprob': -0.14332241784958613, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.004330740310251713}, {'id': 20, 'seek': 8628, 'start': 88.56, 'end': 93.92, 'text': ' And it needs to do some resolution of the internal references and it needs to record', 'tokens': [50478, 400, 309, 2203, 281, 360, 512, 8669, 295, 264, 6920, 15400, 293, 309, 2203, 281, 2136, 50746], 'temperature': 0.0, 'avg_logprob': -0.14332241784958613, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.004330740310251713}, {'id': 21, 'seek': 8628, 'start': 93.92, 'end': 98.96000000000001, 'text': ' some metadata for linker, which is what we will see now.', 'tokens': [50746, 512, 26603, 337, 2113, 260, 11, 597, 307, 437, 321, 486, 536, 586, 13, 50998], 'temperature': 0.0, 'avg_logprob': -0.14332241784958613, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.004330740310251713}, {'id': 22, 'seek': 8628, 'start': 98.96000000000001, 'end': 102.48, 'text': " So essentially let's look at this sample code.", 'tokens': [50998, 407, 4476, 718, 311, 574, 412, 341, 6889, 3089, 13, 51174], 'temperature': 0.0, 'avg_logprob': -0.14332241784958613, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.004330740310251713}, {'id': 23, 'seek': 8628, 'start': 102.48, 'end': 108.56, 'text': " So let's say I have some instruction written and then I do jump to done.", 'tokens': [51174, 407, 718, 311, 584, 286, 362, 512, 10951, 3720, 293, 550, 286, 360, 3012, 281, 1096, 13, 51478], 'temperature': 0.0, 'avg_logprob': -0.14332241784958613, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.004330740310251713}, {'id': 24, 'seek': 8628, 'start': 108.56, 'end': 111.08, 'text': ' And done is defined here.', 'tokens': [51478, 400, 1096, 307, 7642, 510, 13, 51604], 'temperature': 0.0, 'avg_logprob': -0.14332241784958613, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.004330740310251713}, {'id': 25, 'seek': 8628, 'start': 111.08, 'end': 114.88, 'text': ' Now in the machine code, there is nothing like done, right?', 'tokens': [51604, 823, 294, 264, 3479, 3089, 11, 456, 307, 1825, 411, 1096, 11, 558, 30, 51794], 'temperature': 0.0, 'avg_logprob': -0.14332241784958613, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.004330740310251713}, {'id': 26, 'seek': 8628, 'start': 114.88, 'end': 116.12, 'text': ' There is no symbol done.', 'tokens': [51794, 821, 307, 572, 5986, 1096, 13, 51856], 'temperature': 0.0, 'avg_logprob': -0.14332241784958613, 'compression_ratio': 1.6666666666666667, 'no_speech_prob': 0.004330740310251713}, {'id': 27, 'seek': 11612, 'start': 116.12, 'end': 118.36, 'text': ' It has to be a binary number.', 'tokens': [50364, 467, 575, 281, 312, 257, 17434, 1230, 13, 50476], 'temperature': 0.0, 'avg_logprob': -0.11967371702194214, 'compression_ratio': 1.7166666666666666, 'no_speech_prob': 0.0003052599495276809}, {'id': 28, 'seek': 11612, 'start': 118.36, 'end': 122.04, 'text': ' So done needs to really be an address, right?', 'tokens': [50476, 407, 1096, 2203, 281, 534, 312, 364, 2985, 11, 558, 30, 50660], 'temperature': 0.0, 'avg_logprob': -0.11967371702194214, 'compression_ratio': 1.7166666666666666, 'no_speech_prob': 0.0003052599495276809}, {'id': 29, 'seek': 11612, 'start': 122.04, 'end': 127.04, 'text': ' So how does assembler know what is address of the done, right?', 'tokens': [50660, 407, 577, 775, 8438, 1918, 458, 437, 307, 2985, 295, 264, 1096, 11, 558, 30, 50910], 'temperature': 0.0, 'avg_logprob': -0.11967371702194214, 'compression_ratio': 1.7166666666666666, 'no_speech_prob': 0.0003052599495276809}, {'id': 30, 'seek': 11612, 'start': 127.04, 'end': 135.44, 'text': ' So essentially what assemblers do is typically they do a two pass algorithm.', 'tokens': [50910, 407, 4476, 437, 8438, 11977, 360, 307, 5850, 436, 360, 257, 732, 1320, 9284, 13, 51330], 'temperature': 0.0, 'avg_logprob': -0.11967371702194214, 'compression_ratio': 1.7166666666666666, 'no_speech_prob': 0.0003052599495276809}, {'id': 31, 'seek': 11612, 'start': 135.44, 'end': 143.08, 'text': ' So what they will first do is they will first read the program, assign address to everything.', 'tokens': [51330, 407, 437, 436, 486, 700, 360, 307, 436, 486, 700, 1401, 264, 1461, 11, 6269, 2985, 281, 1203, 13, 51712], 'temperature': 0.0, 'avg_logprob': -0.11967371702194214, 'compression_ratio': 1.7166666666666666, 'no_speech_prob': 0.0003052599495276809}, {'id': 32, 'seek': 14308, 'start': 143.08, 'end': 147.84, 'text': ' So they know that move instruction takes five bytes, for example, move the instruction', 'tokens': [50364, 407, 436, 458, 300, 1286, 10951, 2516, 1732, 36088, 11, 337, 1365, 11, 1286, 264, 10951, 50602], 'temperature': 0.0, 'avg_logprob': -0.15174982840554757, 'compression_ratio': 1.7826086956521738, 'no_speech_prob': 0.09254986047744751}, {'id': 33, 'seek': 14308, 'start': 147.84, 'end': 151.88000000000002, 'text': ' takes two bytes, JMP instruction takes four bytes.', 'tokens': [50602, 2516, 732, 36088, 11, 508, 12224, 10951, 2516, 1451, 36088, 13, 50804], 'temperature': 0.0, 'avg_logprob': -0.15174982840554757, 'compression_ratio': 1.7826086956521738, 'no_speech_prob': 0.09254986047744751}, {'id': 34, 'seek': 14308, 'start': 151.88000000000002, 'end': 157.28, 'text': ' So done will come at four plus five plus five, 20 offset, something like that, right?', 'tokens': [50804, 407, 1096, 486, 808, 412, 1451, 1804, 1732, 1804, 1732, 11, 945, 18687, 11, 746, 411, 300, 11, 558, 30, 51074], 'temperature': 0.0, 'avg_logprob': -0.15174982840554757, 'compression_ratio': 1.7826086956521738, 'no_speech_prob': 0.09254986047744751}, {'id': 35, 'seek': 14308, 'start': 157.28, 'end': 162.92000000000002, 'text': ' So they will keep assigning address to each of the label, which is defined in the program,', 'tokens': [51074, 407, 436, 486, 1066, 49602, 2985, 281, 1184, 295, 264, 7645, 11, 597, 307, 7642, 294, 264, 1461, 11, 51356], 'temperature': 0.0, 'avg_logprob': -0.15174982840554757, 'compression_ratio': 1.7826086956521738, 'no_speech_prob': 0.09254986047744751}, {'id': 36, 'seek': 14308, 'start': 162.92000000000002, 'end': 165.28, 'text': ' okay, according to size.', 'tokens': [51356, 1392, 11, 4650, 281, 2744, 13, 51474], 'temperature': 0.0, 'avg_logprob': -0.15174982840554757, 'compression_ratio': 1.7826086956521738, 'no_speech_prob': 0.09254986047744751}, {'id': 37, 'seek': 14308, 'start': 165.28, 'end': 170.4, 'text': ' So for example, whenever I declare a data of some size, I know that the next address', 'tokens': [51474, 407, 337, 1365, 11, 5699, 286, 19710, 257, 1412, 295, 512, 2744, 11, 286, 458, 300, 264, 958, 2985, 51730], 'temperature': 0.0, 'avg_logprob': -0.15174982840554757, 'compression_ratio': 1.7826086956521738, 'no_speech_prob': 0.09254986047744751}, {'id': 38, 'seek': 14308, 'start': 170.4, 'end': 172.72000000000003, 'text': ' will be after that, right?', 'tokens': [51730, 486, 312, 934, 300, 11, 558, 30, 51846], 'temperature': 0.0, 'avg_logprob': -0.15174982840554757, 'compression_ratio': 1.7826086956521738, 'no_speech_prob': 0.09254986047744751}, {'id': 39, 'seek': 17272, 'start': 172.72, 'end': 177.35999999999999, 'text': ' And this is what is the value field which we were seeing in the symbol table, right?', 'tokens': [50364, 400, 341, 307, 437, 307, 264, 2158, 2519, 597, 321, 645, 2577, 294, 264, 5986, 3199, 11, 558, 30, 50596], 'temperature': 0.0, 'avg_logprob': -0.16195810359457266, 'compression_ratio': 1.6367924528301887, 'no_speech_prob': 0.0010976373450830579}, {'id': 40, 'seek': 17272, 'start': 177.35999999999999, 'end': 183.4, 'text': ' Whenever we were seeing in it where was at offset four, this is how it kind of calculated', 'tokens': [50596, 14159, 321, 645, 2577, 294, 309, 689, 390, 412, 18687, 1451, 11, 341, 307, 577, 309, 733, 295, 15598, 50898], 'temperature': 0.0, 'avg_logprob': -0.16195810359457266, 'compression_ratio': 1.6367924528301887, 'no_speech_prob': 0.0010976373450830579}, {'id': 41, 'seek': 17272, 'start': 183.4, 'end': 186.52, 'text': ' it, okay?', 'tokens': [50898, 309, 11, 1392, 30, 51054], 'temperature': 0.0, 'avg_logprob': -0.16195810359457266, 'compression_ratio': 1.6367924528301887, 'no_speech_prob': 0.0010976373450830579}, {'id': 42, 'seek': 17272, 'start': 186.52, 'end': 191.68, 'text': ' And in the second pass, what you do is you replace all the references with the actual', 'tokens': [51054, 400, 294, 264, 1150, 1320, 11, 437, 291, 360, 307, 291, 7406, 439, 264, 15400, 365, 264, 3539, 51312], 'temperature': 0.0, 'avg_logprob': -0.16195810359457266, 'compression_ratio': 1.6367924528301887, 'no_speech_prob': 0.0010976373450830579}, {'id': 43, 'seek': 17272, 'start': 191.68, 'end': 192.68, 'text': ' address.', 'tokens': [51312, 2985, 13, 51362], 'temperature': 0.0, 'avg_logprob': -0.16195810359457266, 'compression_ratio': 1.6367924528301887, 'no_speech_prob': 0.0010976373450830579}, {'id': 44, 'seek': 17272, 'start': 192.68, 'end': 196.88, 'text': ' So for example, in the first pass, you assign some address to done.', 'tokens': [51362, 407, 337, 1365, 11, 294, 264, 700, 1320, 11, 291, 6269, 512, 2985, 281, 1096, 13, 51572], 'temperature': 0.0, 'avg_logprob': -0.16195810359457266, 'compression_ratio': 1.6367924528301887, 'no_speech_prob': 0.0010976373450830579}, {'id': 45, 'seek': 19688, 'start': 196.88, 'end': 203.44, 'text': ' And in the second pass, you go and change this instruction from gem done to JMP of address', 'tokens': [50364, 400, 294, 264, 1150, 1320, 11, 291, 352, 293, 1319, 341, 10951, 490, 7173, 1096, 281, 508, 12224, 295, 2985, 50692], 'temperature': 0.0, 'avg_logprob': -0.16193345285231067, 'compression_ratio': 1.727626459143969, 'no_speech_prob': 0.14391861855983734}, {'id': 46, 'seek': 19688, 'start': 203.44, 'end': 206.68, 'text': ' of done, which was assigned, okay?', 'tokens': [50692, 295, 1096, 11, 597, 390, 13279, 11, 1392, 30, 50854], 'temperature': 0.0, 'avg_logprob': -0.16193345285231067, 'compression_ratio': 1.727626459143969, 'no_speech_prob': 0.14391861855983734}, {'id': 47, 'seek': 19688, 'start': 206.68, 'end': 209.92, 'text': ' Now the question is, can you do this in single pass?', 'tokens': [50854, 823, 264, 1168, 307, 11, 393, 291, 360, 341, 294, 2167, 1320, 30, 51016], 'temperature': 0.0, 'avg_logprob': -0.16193345285231067, 'compression_ratio': 1.727626459143969, 'no_speech_prob': 0.14391861855983734}, {'id': 48, 'seek': 19688, 'start': 209.92, 'end': 214.28, 'text': ' Instead of doing two passes, can you do it in single pass?', 'tokens': [51016, 7156, 295, 884, 732, 11335, 11, 393, 291, 360, 309, 294, 2167, 1320, 30, 51234], 'temperature': 0.0, 'avg_logprob': -0.16193345285231067, 'compression_ratio': 1.727626459143969, 'no_speech_prob': 0.14391861855983734}, {'id': 49, 'seek': 19688, 'start': 214.28, 'end': 215.28, 'text': ' And it is possible.', 'tokens': [51234, 400, 309, 307, 1944, 13, 51284], 'temperature': 0.0, 'avg_logprob': -0.16193345285231067, 'compression_ratio': 1.727626459143969, 'no_speech_prob': 0.14391861855983734}, {'id': 50, 'seek': 19688, 'start': 215.28, 'end': 220.48, 'text': ' So there is an algorithm called as backpatching, which will actually do it in single pass.', 'tokens': [51284, 407, 456, 307, 364, 9284, 1219, 382, 646, 79, 29569, 11, 597, 486, 767, 360, 309, 294, 2167, 1320, 13, 51544], 'temperature': 0.0, 'avg_logprob': -0.16193345285231067, 'compression_ratio': 1.727626459143969, 'no_speech_prob': 0.14391861855983734}, {'id': 51, 'seek': 19688, 'start': 220.48, 'end': 221.48, 'text': " But that's a reading exercise.", 'tokens': [51544, 583, 300, 311, 257, 3760, 5380, 13, 51594], 'temperature': 0.0, 'avg_logprob': -0.16193345285231067, 'compression_ratio': 1.727626459143969, 'no_speech_prob': 0.14391861855983734}, {'id': 52, 'seek': 19688, 'start': 221.48, 'end': 223.68, 'text': " I don't want to get into that algorithm.", 'tokens': [51594, 286, 500, 380, 528, 281, 483, 666, 300, 9284, 13, 51704], 'temperature': 0.0, 'avg_logprob': -0.16193345285231067, 'compression_ratio': 1.727626459143969, 'no_speech_prob': 0.14391861855983734}, {'id': 53, 'seek': 19688, 'start': 223.68, 'end': 226.4, 'text': " It's unnecessary, okay?", 'tokens': [51704, 467, 311, 19350, 11, 1392, 30, 51840], 'temperature': 0.0, 'avg_logprob': -0.16193345285231067, 'compression_ratio': 1.727626459143969, 'no_speech_prob': 0.14391861855983734}, {'id': 54, 'seek': 22640, 'start': 226.4, 'end': 233.16, 'text': ' And one of the things you have to realize is most of the branch instructions in the', 'tokens': [50364, 400, 472, 295, 264, 721, 291, 362, 281, 4325, 307, 881, 295, 264, 9819, 9415, 294, 264, 50702], 'temperature': 0.0, 'avg_logprob': -0.10869398678050321, 'compression_ratio': 1.9162303664921465, 'no_speech_prob': 0.06004778668284416}, {'id': 55, 'seek': 22640, 'start': 233.16, 'end': 239.04000000000002, 'text': ' processors by default have PC relative address, okay?', 'tokens': [50702, 27751, 538, 7576, 362, 6465, 4972, 2985, 11, 1392, 30, 50996], 'temperature': 0.0, 'avg_logprob': -0.10869398678050321, 'compression_ratio': 1.9162303664921465, 'no_speech_prob': 0.06004778668284416}, {'id': 56, 'seek': 22640, 'start': 239.04000000000002, 'end': 246.04000000000002, 'text': ' By PC relative, I mean address of done is not really from start of the program.', 'tokens': [50996, 3146, 6465, 4972, 11, 286, 914, 2985, 295, 1096, 307, 406, 534, 490, 722, 295, 264, 1461, 13, 51346], 'temperature': 0.0, 'avg_logprob': -0.10869398678050321, 'compression_ratio': 1.9162303664921465, 'no_speech_prob': 0.06004778668284416}, {'id': 57, 'seek': 22640, 'start': 246.04000000000002, 'end': 250.12, 'text': ' Address of done is relative to the current instruction, okay?', 'tokens': [51346, 5349, 735, 295, 1096, 307, 4972, 281, 264, 2190, 10951, 11, 1392, 30, 51550], 'temperature': 0.0, 'avg_logprob': -0.10869398678050321, 'compression_ratio': 1.9162303664921465, 'no_speech_prob': 0.06004778668284416}, {'id': 58, 'seek': 22640, 'start': 250.12, 'end': 255.12, 'text': ' So PC relative address means the address which is relative to the current instruction.', 'tokens': [51550, 407, 6465, 4972, 2985, 1355, 264, 2985, 597, 307, 4972, 281, 264, 2190, 10951, 13, 51800], 'temperature': 0.0, 'avg_logprob': -0.10869398678050321, 'compression_ratio': 1.9162303664921465, 'no_speech_prob': 0.06004778668284416}, {'id': 59, 'seek': 25512, 'start': 255.12, 'end': 261.44, 'text': ' So if you look at it, done itself has really three addresses, okay?', 'tokens': [50364, 407, 498, 291, 574, 412, 309, 11, 1096, 2564, 575, 534, 1045, 16862, 11, 1392, 30, 50680], 'temperature': 0.0, 'avg_logprob': -0.16868039394946807, 'compression_ratio': 1.7198067632850242, 'no_speech_prob': 0.02158987522125244}, {'id': 60, 'seek': 25512, 'start': 261.44, 'end': 268.12, 'text': ' Done can have an address which is PC relative, which is from the current instruction where', 'tokens': [50680, 18658, 393, 362, 364, 2985, 597, 307, 6465, 4972, 11, 597, 307, 490, 264, 2190, 10951, 689, 51014], 'temperature': 0.0, 'avg_logprob': -0.16868039394946807, 'compression_ratio': 1.7198067632850242, 'no_speech_prob': 0.02158987522125244}, {'id': 61, 'seek': 25512, 'start': 268.12, 'end': 269.84000000000003, 'text': ' we need its address.', 'tokens': [51014, 321, 643, 1080, 2985, 13, 51100], 'temperature': 0.0, 'avg_logprob': -0.16868039394946807, 'compression_ratio': 1.7198067632850242, 'no_speech_prob': 0.02158987522125244}, {'id': 62, 'seek': 25512, 'start': 269.84000000000003, 'end': 272.36, 'text': ' It could be section relative.', 'tokens': [51100, 467, 727, 312, 3541, 4972, 13, 51226], 'temperature': 0.0, 'avg_logprob': -0.16868039394946807, 'compression_ratio': 1.7198067632850242, 'no_speech_prob': 0.02158987522125244}, {'id': 63, 'seek': 25512, 'start': 272.36, 'end': 275.36, 'text': ' That means within the text section, done occurs here.', 'tokens': [51226, 663, 1355, 1951, 264, 2487, 3541, 11, 1096, 11843, 510, 13, 51376], 'temperature': 0.0, 'avg_logprob': -0.16868039394946807, 'compression_ratio': 1.7198067632850242, 'no_speech_prob': 0.02158987522125244}, {'id': 64, 'seek': 25512, 'start': 275.36, 'end': 281.52, 'text': ' Or it could be file relative, where it says from start of the file, where is the done,', 'tokens': [51376, 1610, 309, 727, 312, 3991, 4972, 11, 689, 309, 1619, 490, 722, 295, 264, 3991, 11, 689, 307, 264, 1096, 11, 51684], 'temperature': 0.0, 'avg_logprob': -0.16868039394946807, 'compression_ratio': 1.7198067632850242, 'no_speech_prob': 0.02158987522125244}, {'id': 65, 'seek': 25512, 'start': 281.52, 'end': 282.52, 'text': ' okay?', 'tokens': [51684, 1392, 30, 51734], 'temperature': 0.0, 'avg_logprob': -0.16868039394946807, 'compression_ratio': 1.7198067632850242, 'no_speech_prob': 0.02158987522125244}, {'id': 66, 'seek': 28252, 'start': 282.52, 'end': 285.28, 'text': ' So all three are valid addresses.', 'tokens': [50364, 407, 439, 1045, 366, 7363, 16862, 13, 50502], 'temperature': 0.0, 'avg_logprob': -0.27040815353393555, 'compression_ratio': 1.535294117647059, 'no_speech_prob': 0.30644911527633667}, {'id': 67, 'seek': 28252, 'start': 285.28, 'end': 290.12, 'text': ' It just that depending on context where you need to use it, you need to use the appropriate', 'tokens': [50502, 467, 445, 300, 5413, 322, 4319, 689, 291, 643, 281, 764, 309, 11, 291, 643, 281, 764, 264, 6854, 50744], 'temperature': 0.0, 'avg_logprob': -0.27040815353393555, 'compression_ratio': 1.535294117647059, 'no_speech_prob': 0.30644911527633667}, {'id': 68, 'seek': 28252, 'start': 290.12, 'end': 291.12, 'text': ' address, okay?', 'tokens': [50744, 2985, 11, 1392, 30, 50794], 'temperature': 0.0, 'avg_logprob': -0.27040815353393555, 'compression_ratio': 1.535294117647059, 'no_speech_prob': 0.30644911527633667}, {'id': 69, 'seek': 28252, 'start': 291.12, 'end': 303.47999999999996, 'text': ' Yes, that is to some extent correct.', 'tokens': [50794, 1079, 11, 300, 307, 281, 512, 8396, 3006, 13, 51412], 'temperature': 0.0, 'avg_logprob': -0.27040815353393555, 'compression_ratio': 1.535294117647059, 'no_speech_prob': 0.30644911527633667}, {'id': 70, 'seek': 28252, 'start': 303.47999999999996, 'end': 307.59999999999997, 'text': ' Where will we use that is what was the actual question.', 'tokens': [51412, 2305, 486, 321, 764, 300, 307, 437, 390, 264, 3539, 1168, 13, 51618], 'temperature': 0.0, 'avg_logprob': -0.27040815353393555, 'compression_ratio': 1.535294117647059, 'no_speech_prob': 0.30644911527633667}, {'id': 71, 'seek': 28252, 'start': 307.59999999999997, 'end': 308.82, 'text': ' But that we will see later.', 'tokens': [51618, 583, 300, 321, 486, 536, 1780, 13, 51679], 'temperature': 0.0, 'avg_logprob': -0.27040815353393555, 'compression_ratio': 1.535294117647059, 'no_speech_prob': 0.30644911527633667}, {'id': 72, 'seek': 30882, 'start': 309.82, 'end': 314.21999999999997, 'text': ' What we were trying to find is what is the address of the current instruction and what', 'tokens': [50414, 708, 321, 645, 1382, 281, 915, 307, 437, 307, 264, 2985, 295, 264, 2190, 10951, 293, 437, 50634], 'temperature': 0.0, 'avg_logprob': -0.17172458436754015, 'compression_ratio': 1.7740384615384615, 'no_speech_prob': 0.7269898653030396}, {'id': 73, 'seek': 30882, 'start': 314.21999999999997, 'end': 322.46, 'text': ' is the address of done and then if you subtract it, you get the PC relative offset, okay?', 'tokens': [50634, 307, 264, 2985, 295, 1096, 293, 550, 498, 291, 16390, 309, 11, 291, 483, 264, 6465, 4972, 18687, 11, 1392, 30, 51046], 'temperature': 0.0, 'avg_logprob': -0.17172458436754015, 'compression_ratio': 1.7740384615384615, 'no_speech_prob': 0.7269898653030396}, {'id': 74, 'seek': 30882, 'start': 322.46, 'end': 324.18, 'text': ' Is this clear?', 'tokens': [51046, 1119, 341, 1850, 30, 51132], 'temperature': 0.0, 'avg_logprob': -0.17172458436754015, 'compression_ratio': 1.7740384615384615, 'no_speech_prob': 0.7269898653030396}, {'id': 75, 'seek': 30882, 'start': 324.18, 'end': 331.38, 'text': ' So what link assembler is simply going to do since JMP instruction takes PC relative', 'tokens': [51132, 407, 437, 2113, 8438, 1918, 307, 2935, 516, 281, 360, 1670, 508, 12224, 10951, 2516, 6465, 4972, 51492], 'temperature': 0.0, 'avg_logprob': -0.17172458436754015, 'compression_ratio': 1.7740384615384615, 'no_speech_prob': 0.7269898653030396}, {'id': 76, 'seek': 30882, 'start': 331.38, 'end': 336.53999999999996, 'text': ' address, it is going to change this instruction to JMP with offset of whatever is done which', 'tokens': [51492, 2985, 11, 309, 307, 516, 281, 1319, 341, 10951, 281, 508, 12224, 365, 18687, 295, 2035, 307, 1096, 597, 51750], 'temperature': 0.0, 'avg_logprob': -0.17172458436754015, 'compression_ratio': 1.7740384615384615, 'no_speech_prob': 0.7269898653030396}, {'id': 77, 'seek': 33654, 'start': 336.54, 'end': 339.66, 'text': ' is PC relative, okay?', 'tokens': [50364, 307, 6465, 4972, 11, 1392, 30, 50520], 'temperature': 0.0, 'avg_logprob': -0.19615618387858072, 'compression_ratio': 1.5436241610738255, 'no_speech_prob': 0.0802612379193306}, {'id': 78, 'seek': 33654, 'start': 339.66, 'end': 343.22, 'text': ' Now and what about data variables, right?', 'tokens': [50520, 823, 293, 437, 466, 1412, 9102, 11, 558, 30, 50698], 'temperature': 0.0, 'avg_logprob': -0.19615618387858072, 'compression_ratio': 1.5436241610738255, 'no_speech_prob': 0.0802612379193306}, {'id': 79, 'seek': 33654, 'start': 343.22, 'end': 347.52000000000004, 'text': ' So data variables are also handled in similar way, okay?', 'tokens': [50698, 407, 1412, 9102, 366, 611, 18033, 294, 2531, 636, 11, 1392, 30, 50913], 'temperature': 0.0, 'avg_logprob': -0.19615618387858072, 'compression_ratio': 1.5436241610738255, 'no_speech_prob': 0.0802612379193306}, {'id': 80, 'seek': 33654, 'start': 347.52000000000004, 'end': 354.5, 'text': ' So what assembler will do is it will do a first pass, say that var is at offset 0, section', 'tokens': [50913, 407, 437, 8438, 1918, 486, 360, 307, 309, 486, 360, 257, 700, 1320, 11, 584, 300, 1374, 307, 412, 18687, 1958, 11, 3541, 51262], 'temperature': 0.0, 'avg_logprob': -0.19615618387858072, 'compression_ratio': 1.5436241610738255, 'no_speech_prob': 0.0802612379193306}, {'id': 81, 'seek': 33654, 'start': 354.5, 'end': 357.02000000000004, 'text': ' relative offset 0.', 'tokens': [51262, 4972, 18687, 1958, 13, 51388], 'temperature': 0.0, 'avg_logprob': -0.19615618387858072, 'compression_ratio': 1.5436241610738255, 'no_speech_prob': 0.0802612379193306}, {'id': 82, 'seek': 35702, 'start': 357.02, 'end': 361.82, 'text': ' Then X, this takes a byte, right?', 'tokens': [50364, 1396, 1783, 11, 341, 2516, 257, 40846, 11, 558, 30, 50604], 'temperature': 0.0, 'avg_logprob': -0.15611984069088855, 'compression_ratio': 1.4829545454545454, 'no_speech_prob': 0.08740528672933578}, {'id': 83, 'seek': 35702, 'start': 361.82, 'end': 366.58, 'text': ' And then I see leave a line of 4, we will get to this.', 'tokens': [50604, 400, 550, 286, 536, 1856, 257, 1622, 295, 1017, 11, 321, 486, 483, 281, 341, 13, 50842], 'temperature': 0.0, 'avg_logprob': -0.15611984069088855, 'compression_ratio': 1.4829545454545454, 'no_speech_prob': 0.08740528672933578}, {'id': 84, 'seek': 35702, 'start': 366.58, 'end': 374.65999999999997, 'text': ' But essentially what this is saying is var is taking 1 byte whose value is 15, okay?', 'tokens': [50842, 583, 4476, 437, 341, 307, 1566, 307, 1374, 307, 1940, 502, 40846, 6104, 2158, 307, 2119, 11, 1392, 30, 51246], 'temperature': 0.0, 'avg_logprob': -0.15611984069088855, 'compression_ratio': 1.4829545454545454, 'no_speech_prob': 0.08740528672933578}, {'id': 85, 'seek': 35702, 'start': 374.65999999999997, 'end': 380.02, 'text': ' Then I want to ensure X is aligned to 4 bytes, okay?', 'tokens': [51246, 1396, 286, 528, 281, 5586, 1783, 307, 17962, 281, 1017, 36088, 11, 1392, 30, 51514], 'temperature': 0.0, 'avg_logprob': -0.15611984069088855, 'compression_ratio': 1.4829545454545454, 'no_speech_prob': 0.08740528672933578}, {'id': 86, 'seek': 35702, 'start': 380.02, 'end': 383.5, 'text': ' And then X holds 1, 2 and 3, okay?', 'tokens': [51514, 400, 550, 1783, 9190, 502, 11, 568, 293, 805, 11, 1392, 30, 51688], 'temperature': 0.0, 'avg_logprob': -0.15611984069088855, 'compression_ratio': 1.4829545454545454, 'no_speech_prob': 0.08740528672933578}, {'id': 87, 'seek': 38350, 'start': 383.5, 'end': 392.22, 'text': ' So the section relative offset of var is 0 because it begins at the data section and', 'tokens': [50364, 407, 264, 3541, 4972, 18687, 295, 1374, 307, 1958, 570, 309, 7338, 412, 264, 1412, 3541, 293, 50800], 'temperature': 0.0, 'avg_logprob': -0.1102914301554362, 'compression_ratio': 1.6, 'no_speech_prob': 0.03404892235994339}, {'id': 88, 'seek': 38350, 'start': 392.22, 'end': 399.78, 'text': ' section relative offset of X is 4 because I assigned address 0 to this and then I had', 'tokens': [50800, 3541, 4972, 18687, 295, 1783, 307, 1017, 570, 286, 13279, 2985, 1958, 281, 341, 293, 550, 286, 632, 51178], 'temperature': 0.0, 'avg_logprob': -0.1102914301554362, 'compression_ratio': 1.6, 'no_speech_prob': 0.03404892235994339}, {'id': 89, 'seek': 38350, 'start': 399.78, 'end': 406.34, 'text': ' to choose the next multiple of 4 to assign X, okay?', 'tokens': [51178, 281, 2826, 264, 958, 3866, 295, 1017, 281, 6269, 1783, 11, 1392, 30, 51506], 'temperature': 0.0, 'avg_logprob': -0.1102914301554362, 'compression_ratio': 1.6, 'no_speech_prob': 0.03404892235994339}, {'id': 90, 'seek': 38350, 'start': 406.34, 'end': 411.68, 'text': ' So essentially these are the values which you are seeing in the ELF symbol table.', 'tokens': [51506, 407, 4476, 613, 366, 264, 4190, 597, 291, 366, 2577, 294, 264, 14426, 37, 5986, 3199, 13, 51773], 'temperature': 0.0, 'avg_logprob': -0.1102914301554362, 'compression_ratio': 1.6, 'no_speech_prob': 0.03404892235994339}, {'id': 91, 'seek': 41168, 'start': 411.68, 'end': 417.04, 'text': ' So whenever you are seeing value field in the ELF symbol table, this is how assembler', 'tokens': [50364, 407, 5699, 291, 366, 2577, 2158, 2519, 294, 264, 14426, 37, 5986, 3199, 11, 341, 307, 577, 8438, 1918, 50632], 'temperature': 0.0, 'avg_logprob': -0.2211566724275288, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.014030505903065205}, {'id': 92, 'seek': 41168, 'start': 417.04, 'end': 419.72, 'text': ' had allocated it, okay?', 'tokens': [50632, 632, 29772, 309, 11, 1392, 30, 50766], 'temperature': 0.0, 'avg_logprob': -0.2211566724275288, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.014030505903065205}, {'id': 93, 'seek': 41168, 'start': 419.72, 'end': 424.88, 'text': ' Remember we were seeing in it var then arr was there, then something was there and so', 'tokens': [50766, 5459, 321, 645, 2577, 294, 309, 1374, 550, 5539, 390, 456, 11, 550, 746, 390, 456, 293, 370, 51024], 'temperature': 0.0, 'avg_logprob': -0.2211566724275288, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.014030505903065205}, {'id': 94, 'seek': 41168, 'start': 424.88, 'end': 425.92, 'text': ' on, right?', 'tokens': [51024, 322, 11, 558, 30, 51076], 'temperature': 0.0, 'avg_logprob': -0.2211566724275288, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.014030505903065205}, {'id': 95, 'seek': 41168, 'start': 425.92, 'end': 430.4, 'text': ' So this is how assembler would have allocated offsets to it, okay?', 'tokens': [51076, 407, 341, 307, 577, 8438, 1918, 576, 362, 29772, 39457, 1385, 281, 309, 11, 1392, 30, 51300], 'temperature': 0.0, 'avg_logprob': -0.2211566724275288, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.014030505903065205}, {'id': 96, 'seek': 41168, 'start': 430.4, 'end': 436.18, 'text': ' Now any idea why is alignment needed?', 'tokens': [51300, 823, 604, 1558, 983, 307, 18515, 2978, 30, 51589], 'temperature': 0.0, 'avg_logprob': -0.2211566724275288, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.014030505903065205}, {'id': 97, 'seek': 41168, 'start': 436.18, 'end': 438.68, 'text': ' Why did I need this align for?', 'tokens': [51589, 1545, 630, 286, 643, 341, 7975, 337, 30, 51714], 'temperature': 0.0, 'avg_logprob': -0.2211566724275288, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.014030505903065205}, {'id': 98, 'seek': 43868, 'start': 438.68, 'end': 448.6, 'text': ' Does everyone understand that?', 'tokens': [50364, 4402, 1518, 1223, 300, 30, 50860], 'temperature': 0.0, 'avg_logprob': -0.18882468651080953, 'compression_ratio': 1.4691358024691359, 'no_speech_prob': 0.010639157146215439}, {'id': 99, 'seek': 43868, 'start': 448.6, 'end': 455.02, 'text': ' So essentially what happens is whenever you are accessing some data of some size s, if', 'tokens': [50860, 407, 4476, 437, 2314, 307, 5699, 291, 366, 26440, 512, 1412, 295, 512, 2744, 262, 11, 498, 51181], 'temperature': 0.0, 'avg_logprob': -0.18882468651080953, 'compression_ratio': 1.4691358024691359, 'no_speech_prob': 0.010639157146215439}, {'id': 100, 'seek': 43868, 'start': 455.02, 'end': 460.2, 'text': ' your address is multiple of s, then you can fetch it easily, okay?', 'tokens': [51181, 428, 2985, 307, 3866, 295, 262, 11, 550, 291, 393, 23673, 309, 3612, 11, 1392, 30, 51440], 'temperature': 0.0, 'avg_logprob': -0.18882468651080953, 'compression_ratio': 1.4691358024691359, 'no_speech_prob': 0.010639157146215439}, {'id': 101, 'seek': 43868, 'start': 460.2, 'end': 465.32, 'text': ' Now easily is actually dependent on processors, okay?', 'tokens': [51440, 823, 3612, 307, 767, 12334, 322, 27751, 11, 1392, 30, 51696], 'temperature': 0.0, 'avg_logprob': -0.18882468651080953, 'compression_ratio': 1.4691358024691359, 'no_speech_prob': 0.010639157146215439}, {'id': 102, 'seek': 46532, 'start': 465.76, 'end': 468.68, 'text': ' So S86 allows you to do misaligned access.', 'tokens': [50386, 407, 318, 22193, 4045, 291, 281, 360, 3346, 304, 16690, 2105, 13, 50532], 'temperature': 0.0, 'avg_logprob': -0.17385131321596295, 'compression_ratio': 1.5, 'no_speech_prob': 0.3838757574558258}, {'id': 103, 'seek': 46532, 'start': 468.68, 'end': 478.52, 'text': ' That means I could access 4 bytes at an address which is not multiple of 4 and the only problem', 'tokens': [50532, 663, 1355, 286, 727, 2105, 1017, 36088, 412, 364, 2985, 597, 307, 406, 3866, 295, 1017, 293, 264, 787, 1154, 51024], 'temperature': 0.0, 'avg_logprob': -0.17385131321596295, 'compression_ratio': 1.5, 'no_speech_prob': 0.3838757574558258}, {'id': 104, 'seek': 46532, 'start': 478.52, 'end': 481.76, 'text': ' with that is performance, okay?', 'tokens': [51024, 365, 300, 307, 3389, 11, 1392, 30, 51186], 'temperature': 0.0, 'avg_logprob': -0.17385131321596295, 'compression_ratio': 1.5, 'no_speech_prob': 0.3838757574558258}, {'id': 105, 'seek': 46532, 'start': 481.76, 'end': 483.14, 'text': ' There is no other problem.', 'tokens': [51186, 821, 307, 572, 661, 1154, 13, 51255], 'temperature': 0.0, 'avg_logprob': -0.17385131321596295, 'compression_ratio': 1.5, 'no_speech_prob': 0.3838757574558258}, {'id': 106, 'seek': 46532, 'start': 483.14, 'end': 489.18, 'text': ' But on some other processors like ARM or even NVIDIA GPUs for that matter, you are not even', 'tokens': [51255, 583, 322, 512, 661, 27751, 411, 45209, 420, 754, 426, 3958, 6914, 18407, 82, 337, 300, 1871, 11, 291, 366, 406, 754, 51557], 'temperature': 0.0, 'avg_logprob': -0.17385131321596295, 'compression_ratio': 1.5, 'no_speech_prob': 0.3838757574558258}, {'id': 107, 'seek': 46532, 'start': 489.18, 'end': 491.28, 'text': ' allowed to do unaligned access.', 'tokens': [51557, 4350, 281, 360, 517, 304, 16690, 2105, 13, 51662], 'temperature': 0.0, 'avg_logprob': -0.17385131321596295, 'compression_ratio': 1.5, 'no_speech_prob': 0.3838757574558258}, {'id': 108, 'seek': 49128, 'start': 491.28, 'end': 497.41999999999996, 'text': ' So hardware will give an error if you try to access data which is not aligned to proper', 'tokens': [50364, 407, 8837, 486, 976, 364, 6713, 498, 291, 853, 281, 2105, 1412, 597, 307, 406, 17962, 281, 2296, 50671], 'temperature': 0.0, 'avg_logprob': -0.16489190024298592, 'compression_ratio': 1.5444444444444445, 'no_speech_prob': 0.012048749253153801}, {'id': 109, 'seek': 49128, 'start': 497.41999999999996, 'end': 499.94, 'text': ' address.', 'tokens': [50671, 2985, 13, 50797], 'temperature': 0.0, 'avg_logprob': -0.16489190024298592, 'compression_ratio': 1.5444444444444445, 'no_speech_prob': 0.012048749253153801}, {'id': 110, 'seek': 49128, 'start': 499.94, 'end': 501.0, 'text': ' Is that clear?', 'tokens': [50797, 1119, 300, 1850, 30, 50850], 'temperature': 0.0, 'avg_logprob': -0.16489190024298592, 'compression_ratio': 1.5444444444444445, 'no_speech_prob': 0.012048749253153801}, {'id': 111, 'seek': 49128, 'start': 501.0, 'end': 507.32, 'text': ' So whether unaligned accesses are supported or not is a property of processor.', 'tokens': [50850, 407, 1968, 517, 304, 16690, 2105, 279, 366, 8104, 420, 406, 307, 257, 4707, 295, 15321, 13, 51166], 'temperature': 0.0, 'avg_logprob': -0.16489190024298592, 'compression_ratio': 1.5444444444444445, 'no_speech_prob': 0.012048749253153801}, {'id': 112, 'seek': 49128, 'start': 507.32, 'end': 511.23999999999995, 'text': ' S86 supports it at cost of performance.', 'tokens': [51166, 318, 22193, 9346, 309, 412, 2063, 295, 3389, 13, 51362], 'temperature': 0.0, 'avg_logprob': -0.16489190024298592, 'compression_ratio': 1.5444444444444445, 'no_speech_prob': 0.012048749253153801}, {'id': 113, 'seek': 49128, 'start': 511.23999999999995, 'end': 514.48, 'text': ' Other processors may not even support it, okay?', 'tokens': [51362, 5358, 27751, 815, 406, 754, 1406, 309, 11, 1392, 30, 51524], 'temperature': 0.0, 'avg_logprob': -0.16489190024298592, 'compression_ratio': 1.5444444444444445, 'no_speech_prob': 0.012048749253153801}, {'id': 114, 'seek': 51448, 'start': 514.48, 'end': 522.24, 'text': " So let's say you had these 4 variables, char C, float F, double D, int X.", 'tokens': [50364, 407, 718, 311, 584, 291, 632, 613, 1017, 9102, 11, 1290, 383, 11, 15706, 479, 11, 3834, 413, 11, 560, 1783, 13, 50752], 'temperature': 0.0, 'avg_logprob': -0.24511384963989258, 'compression_ratio': 1.5502645502645502, 'no_speech_prob': 0.2165530025959015}, {'id': 115, 'seek': 51448, 'start': 522.24, 'end': 529.54, 'text': " What's the best order in which you should allocate them to reduce the padding?", 'tokens': [50752, 708, 311, 264, 1151, 1668, 294, 597, 291, 820, 35713, 552, 281, 5407, 264, 39562, 30, 51117], 'temperature': 0.0, 'avg_logprob': -0.24511384963989258, 'compression_ratio': 1.5502645502645502, 'no_speech_prob': 0.2165530025959015}, {'id': 116, 'seek': 51448, 'start': 529.54, 'end': 533.72, 'text': ' What do you mean by ascending or descending?', 'tokens': [51117, 708, 360, 291, 914, 538, 15526, 2029, 420, 40182, 30, 51326], 'temperature': 0.0, 'avg_logprob': -0.24511384963989258, 'compression_ratio': 1.5502645502645502, 'no_speech_prob': 0.2165530025959015}, {'id': 117, 'seek': 51448, 'start': 533.72, 'end': 536.6800000000001, 'text': ' Okay.', 'tokens': [51326, 1033, 13, 51474], 'temperature': 0.0, 'avg_logprob': -0.24511384963989258, 'compression_ratio': 1.5502645502645502, 'no_speech_prob': 0.2165530025959015}, {'id': 118, 'seek': 51448, 'start': 536.6800000000001, 'end': 542.5600000000001, 'text': ' So the answer should be as he said, you should probably try to allocate the variable with', 'tokens': [51474, 407, 264, 1867, 820, 312, 382, 415, 848, 11, 291, 820, 1391, 853, 281, 35713, 264, 7006, 365, 51768], 'temperature': 0.0, 'avg_logprob': -0.24511384963989258, 'compression_ratio': 1.5502645502645502, 'no_speech_prob': 0.2165530025959015}, {'id': 119, 'seek': 54256, 'start': 542.56, 'end': 545.1999999999999, 'text': ' the highest alignment requirement first.', 'tokens': [50364, 264, 6343, 18515, 11695, 700, 13, 50496], 'temperature': 0.0, 'avg_logprob': -0.13931147257486978, 'compression_ratio': 1.7942583732057416, 'no_speech_prob': 0.7423672676086426}, {'id': 120, 'seek': 54256, 'start': 545.1999999999999, 'end': 547.0, 'text': ' So double is 8 bytes.', 'tokens': [50496, 407, 3834, 307, 1649, 36088, 13, 50586], 'temperature': 0.0, 'avg_logprob': -0.13931147257486978, 'compression_ratio': 1.7942583732057416, 'no_speech_prob': 0.7423672676086426}, {'id': 121, 'seek': 54256, 'start': 547.0, 'end': 550.5999999999999, 'text': ' So it is better to say D lives at offset 0.', 'tokens': [50586, 407, 309, 307, 1101, 281, 584, 413, 2909, 412, 18687, 1958, 13, 50766], 'temperature': 0.0, 'avg_logprob': -0.13931147257486978, 'compression_ratio': 1.7942583732057416, 'no_speech_prob': 0.7423672676086426}, {'id': 122, 'seek': 54256, 'start': 550.5999999999999, 'end': 557.4599999999999, 'text': ' See because offset 0 is the best thing because it can be aligned to anything, right?', 'tokens': [50766, 3008, 570, 18687, 1958, 307, 264, 1151, 551, 570, 309, 393, 312, 17962, 281, 1340, 11, 558, 30, 51109], 'temperature': 0.0, 'avg_logprob': -0.13931147257486978, 'compression_ratio': 1.7942583732057416, 'no_speech_prob': 0.7423672676086426}, {'id': 123, 'seek': 54256, 'start': 557.4599999999999, 'end': 559.64, 'text': ' So offset 0 is the best thing.', 'tokens': [51109, 407, 18687, 1958, 307, 264, 1151, 551, 13, 51218], 'temperature': 0.0, 'avg_logprob': -0.13931147257486978, 'compression_ratio': 1.7942583732057416, 'no_speech_prob': 0.7423672676086426}, {'id': 124, 'seek': 54256, 'start': 559.64, 'end': 564.1199999999999, 'text': ' Whatever is your highest thing, you allocate at offset 0.', 'tokens': [51218, 8541, 307, 428, 6343, 551, 11, 291, 35713, 412, 18687, 1958, 13, 51442], 'temperature': 0.0, 'avg_logprob': -0.13931147257486978, 'compression_ratio': 1.7942583732057416, 'no_speech_prob': 0.7423672676086426}, {'id': 125, 'seek': 54256, 'start': 564.1199999999999, 'end': 570.1199999999999, 'text': ' Then you can allocate either F or X because both of them have the same, this thing and', 'tokens': [51442, 1396, 291, 393, 35713, 2139, 479, 420, 1783, 570, 1293, 295, 552, 362, 264, 912, 11, 341, 551, 293, 51742], 'temperature': 0.0, 'avg_logprob': -0.13931147257486978, 'compression_ratio': 1.7942583732057416, 'no_speech_prob': 0.7423672676086426}, {'id': 126, 'seek': 54256, 'start': 570.1199999999999, 'end': 571.1199999999999, 'text': ' then C.', 'tokens': [51742, 550, 383, 13, 51792], 'temperature': 0.0, 'avg_logprob': -0.13931147257486978, 'compression_ratio': 1.7942583732057416, 'no_speech_prob': 0.7423672676086426}, {'id': 127, 'seek': 57112, 'start': 571.28, 'end': 578.4, 'text': ' If you allocated it in other order, what will happen is if you allocate C, then C is at', 'tokens': [50372, 759, 291, 29772, 309, 294, 661, 1668, 11, 437, 486, 1051, 307, 498, 291, 35713, 383, 11, 550, 383, 307, 412, 50728], 'temperature': 0.0, 'avg_logprob': -0.14425953156357513, 'compression_ratio': 1.7573221757322175, 'no_speech_prob': 0.021603887900710106}, {'id': 128, 'seek': 57112, 'start': 578.4, 'end': 579.4, 'text': ' offset 0.', 'tokens': [50728, 18687, 1958, 13, 50778], 'temperature': 0.0, 'avg_logprob': -0.14425953156357513, 'compression_ratio': 1.7573221757322175, 'no_speech_prob': 0.021603887900710106}, {'id': 129, 'seek': 57112, 'start': 579.4, 'end': 583.36, 'text': ' Then no matter what you try to allocate, you have to create padding.', 'tokens': [50778, 1396, 572, 1871, 437, 291, 853, 281, 35713, 11, 291, 362, 281, 1884, 39562, 13, 50976], 'temperature': 0.0, 'avg_logprob': -0.14425953156357513, 'compression_ratio': 1.7573221757322175, 'no_speech_prob': 0.021603887900710106}, {'id': 130, 'seek': 57112, 'start': 583.36, 'end': 590.12, 'text': ' Now if you create double as the next thing, then you have to create padding of 7 elements.', 'tokens': [50976, 823, 498, 291, 1884, 3834, 382, 264, 958, 551, 11, 550, 291, 362, 281, 1884, 39562, 295, 1614, 4959, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.14425953156357513, 'compression_ratio': 1.7573221757322175, 'no_speech_prob': 0.021603887900710106}, {'id': 131, 'seek': 57112, 'start': 590.12, 'end': 595.24, 'text': ' Whereas if you do float F and float X, then you can do some, okay?', 'tokens': [51314, 13813, 498, 291, 360, 15706, 479, 293, 15706, 1783, 11, 550, 291, 393, 360, 512, 11, 1392, 30, 51570], 'temperature': 0.0, 'avg_logprob': -0.14425953156357513, 'compression_ratio': 1.7573221757322175, 'no_speech_prob': 0.021603887900710106}, {'id': 132, 'seek': 57112, 'start': 595.24, 'end': 600.76, 'text': " So it's actually better to do it in descending order where you first always allocate a variable", 'tokens': [51570, 407, 309, 311, 767, 1101, 281, 360, 309, 294, 40182, 1668, 689, 291, 700, 1009, 35713, 257, 7006, 51846], 'temperature': 0.0, 'avg_logprob': -0.14425953156357513, 'compression_ratio': 1.7573221757322175, 'no_speech_prob': 0.021603887900710106}, {'id': 133, 'seek': 60076, 'start': 600.76, 'end': 604.88, 'text': ' with the highest alignment requirement and then so on.', 'tokens': [50364, 365, 264, 6343, 18515, 11695, 293, 550, 370, 322, 13, 50570], 'temperature': 0.0, 'avg_logprob': -0.18011800174055428, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.00036824512062594295}, {'id': 134, 'seek': 60076, 'start': 604.88, 'end': 609.0, 'text': ' And this is something you should remember even when you are declaring your structures,', 'tokens': [50570, 400, 341, 307, 746, 291, 820, 1604, 754, 562, 291, 366, 40374, 428, 9227, 11, 50776], 'temperature': 0.0, 'avg_logprob': -0.18011800174055428, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.00036824512062594295}, {'id': 135, 'seek': 60076, 'start': 609.0, 'end': 610.0, 'text': ' okay?', 'tokens': [50776, 1392, 30, 50826], 'temperature': 0.0, 'avg_logprob': -0.18011800174055428, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.00036824512062594295}, {'id': 136, 'seek': 60076, 'start': 610.0, 'end': 613.2, 'text': ' So this is not just for independent variables.', 'tokens': [50826, 407, 341, 307, 406, 445, 337, 6695, 9102, 13, 50986], 'temperature': 0.0, 'avg_logprob': -0.18011800174055428, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.00036824512062594295}, {'id': 137, 'seek': 60076, 'start': 613.2, 'end': 618.96, 'text': " Even when you are defining a structure of something, it's better to write members in", 'tokens': [50986, 2754, 562, 291, 366, 17827, 257, 3877, 295, 746, 11, 309, 311, 1101, 281, 2464, 2679, 294, 51274], 'temperature': 0.0, 'avg_logprob': -0.18011800174055428, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.00036824512062594295}, {'id': 138, 'seek': 60076, 'start': 618.96, 'end': 621.96, 'text': ' the order of decreasing alignment.', 'tokens': [51274, 264, 1668, 295, 23223, 18515, 13, 51424], 'temperature': 0.0, 'avg_logprob': -0.18011800174055428, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.00036824512062594295}, {'id': 139, 'seek': 60076, 'start': 621.96, 'end': 627.96, 'text': ' That will reduce the total size of your structure, okay?', 'tokens': [51424, 663, 486, 5407, 264, 3217, 2744, 295, 428, 3877, 11, 1392, 30, 51724], 'temperature': 0.0, 'avg_logprob': -0.18011800174055428, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.00036824512062594295}, {'id': 140, 'seek': 62796, 'start': 627.96, 'end': 635.44, 'text': ' Now, coming to the data addresses, right?', 'tokens': [50364, 823, 11, 1348, 281, 264, 1412, 16862, 11, 558, 30, 50738], 'temperature': 0.0, 'avg_logprob': -0.24710790989762646, 'compression_ratio': 1.6062992125984252, 'no_speech_prob': 0.013968845829367638}, {'id': 141, 'seek': 62796, 'start': 635.44, 'end': 641.96, 'text': ' So we assigned address 0 to this and address 4 to this, okay?', 'tokens': [50738, 407, 321, 13279, 2985, 1958, 281, 341, 293, 2985, 1017, 281, 341, 11, 1392, 30, 51064], 'temperature': 0.0, 'avg_logprob': -0.24710790989762646, 'compression_ratio': 1.6062992125984252, 'no_speech_prob': 0.013968845829367638}, {'id': 142, 'seek': 62796, 'start': 641.96, 'end': 646.52, 'text': ' Are these addresses final?', 'tokens': [51064, 2014, 613, 16862, 2572, 30, 51292], 'temperature': 0.0, 'avg_logprob': -0.24710790989762646, 'compression_ratio': 1.6062992125984252, 'no_speech_prob': 0.013968845829367638}, {'id': 143, 'seek': 62796, 'start': 646.52, 'end': 647.84, 'text': ' Are these addresses final?', 'tokens': [51292, 2014, 613, 16862, 2572, 30, 51358], 'temperature': 0.0, 'avg_logprob': -0.24710790989762646, 'compression_ratio': 1.6062992125984252, 'no_speech_prob': 0.013968845829367638}, {'id': 144, 'seek': 62796, 'start': 647.84, 'end': 653.1600000000001, 'text': ' So is var at offset 0 always going to be true?', 'tokens': [51358, 407, 307, 1374, 412, 18687, 1958, 1009, 516, 281, 312, 2074, 30, 51624], 'temperature': 0.0, 'avg_logprob': -0.24710790989762646, 'compression_ratio': 1.6062992125984252, 'no_speech_prob': 0.013968845829367638}, {'id': 145, 'seek': 65316, 'start': 653.16, 'end': 667.04, 'text': ' Okay, so at runtime, they will get picked at some address, but is it just adding offset', 'tokens': [50364, 1033, 11, 370, 412, 34474, 11, 436, 486, 483, 6183, 412, 512, 2985, 11, 457, 307, 309, 445, 5127, 18687, 51058], 'temperature': 0.0, 'avg_logprob': -0.20670869457187938, 'compression_ratio': 1.45, 'no_speech_prob': 0.0073095522820949554}, {'id': 146, 'seek': 65316, 'start': 667.04, 'end': 671.12, 'text': ' of that address or is it something more?', 'tokens': [51058, 295, 300, 2985, 420, 307, 309, 746, 544, 30, 51262], 'temperature': 0.0, 'avg_logprob': -0.20670869457187938, 'compression_ratio': 1.45, 'no_speech_prob': 0.0073095522820949554}, {'id': 147, 'seek': 65316, 'start': 671.12, 'end': 677.64, 'text': ' So for example, loader chooses to put .data section at address 1000, then is var at 1000', 'tokens': [51262, 407, 337, 1365, 11, 3677, 260, 25963, 281, 829, 2411, 67, 3274, 3541, 412, 2985, 9714, 11, 550, 307, 1374, 412, 9714, 51588], 'temperature': 0.0, 'avg_logprob': -0.20670869457187938, 'compression_ratio': 1.45, 'no_speech_prob': 0.0073095522820949554}, {'id': 148, 'seek': 65316, 'start': 677.64, 'end': 682.76, 'text': ' and X at 1004?', 'tokens': [51588, 293, 1783, 412, 2319, 19, 30, 51844], 'temperature': 0.0, 'avg_logprob': -0.20670869457187938, 'compression_ratio': 1.45, 'no_speech_prob': 0.0073095522820949554}, {'id': 149, 'seek': 68276, 'start': 682.76, 'end': 706.68, 'text': ' So is it simply act of adding some base to it or something more?', 'tokens': [50364, 407, 307, 309, 2935, 605, 295, 5127, 512, 3096, 281, 309, 420, 746, 544, 30, 51560], 'temperature': 0.0, 'avg_logprob': -0.23975574493408203, 'compression_ratio': 1.1081081081081081, 'no_speech_prob': 0.6524519920349121}, {'id': 150, 'seek': 68276, 'start': 706.68, 'end': 711.2, 'text': ' Any other things?', 'tokens': [51560, 2639, 661, 721, 30, 51786], 'temperature': 0.0, 'avg_logprob': -0.23975574493408203, 'compression_ratio': 1.1081081081081081, 'no_speech_prob': 0.6524519920349121}, {'id': 151, 'seek': 71120, 'start': 711.2, 'end': 717.8000000000001, 'text': " So actually, one thing you have to just let's try to first go again in step by step order.", 'tokens': [50364, 407, 767, 11, 472, 551, 291, 362, 281, 445, 718, 311, 853, 281, 700, 352, 797, 294, 1823, 538, 1823, 1668, 13, 50694], 'temperature': 0.0, 'avg_logprob': -0.16646853615255916, 'compression_ratio': 1.3988439306358382, 'no_speech_prob': 0.044642724096775055}, {'id': 152, 'seek': 71120, 'start': 717.8000000000001, 'end': 722.8000000000001, 'text': ' So when I am accessing this instruction, what should I do for var?', 'tokens': [50694, 407, 562, 286, 669, 26440, 341, 10951, 11, 437, 820, 286, 360, 337, 1374, 30, 50944], 'temperature': 0.0, 'avg_logprob': -0.16646853615255916, 'compression_ratio': 1.3988439306358382, 'no_speech_prob': 0.044642724096775055}, {'id': 153, 'seek': 71120, 'start': 722.8000000000001, 'end': 728.76, 'text': ' Should I say move value 10 into address 0?', 'tokens': [50944, 6454, 286, 584, 1286, 2158, 1266, 666, 2985, 1958, 30, 51242], 'temperature': 0.0, 'avg_logprob': -0.16646853615255916, 'compression_ratio': 1.3988439306358382, 'no_speech_prob': 0.044642724096775055}, {'id': 154, 'seek': 71120, 'start': 728.76, 'end': 734.5200000000001, 'text': ' Can I encode a PC relative offset of var?', 'tokens': [51242, 1664, 286, 2058, 1429, 257, 6465, 4972, 18687, 295, 1374, 30, 51530], 'temperature': 0.0, 'avg_logprob': -0.16646853615255916, 'compression_ratio': 1.3988439306358382, 'no_speech_prob': 0.044642724096775055}, {'id': 155, 'seek': 73452, 'start': 735.52, 'end': 737.6, 'text': ' offset of var will be?', 'tokens': [50414, 18687, 295, 1374, 486, 312, 30, 50518], 'temperature': 0.0, 'avg_logprob': -0.17679877158923027, 'compression_ratio': 1.5730337078651686, 'no_speech_prob': 0.07573152333498001}, {'id': 156, 'seek': 73452, 'start': 737.6, 'end': 743.16, 'text': ' This is how far is var relative to current instruction?', 'tokens': [50518, 639, 307, 577, 1400, 307, 1374, 4972, 281, 2190, 10951, 30, 50796], 'temperature': 0.0, 'avg_logprob': -0.17679877158923027, 'compression_ratio': 1.5730337078651686, 'no_speech_prob': 0.07573152333498001}, {'id': 157, 'seek': 73452, 'start': 743.16, 'end': 751.96, 'text': ' I mean, one way to refer to var in the text section will be to encode its PC relative', 'tokens': [50796, 286, 914, 11, 472, 636, 281, 2864, 281, 1374, 294, 264, 2487, 3541, 486, 312, 281, 2058, 1429, 1080, 6465, 4972, 51236], 'temperature': 0.0, 'avg_logprob': -0.17679877158923027, 'compression_ratio': 1.5730337078651686, 'no_speech_prob': 0.07573152333498001}, {'id': 158, 'seek': 73452, 'start': 751.96, 'end': 753.4399999999999, 'text': ' offset.', 'tokens': [51236, 18687, 13, 51310], 'temperature': 0.0, 'avg_logprob': -0.17679877158923027, 'compression_ratio': 1.5730337078651686, 'no_speech_prob': 0.07573152333498001}, {'id': 159, 'seek': 73452, 'start': 753.4399999999999, 'end': 759.3, 'text': ' The problem with that is data could be fairly far from where the text is.', 'tokens': [51310, 440, 1154, 365, 300, 307, 1412, 727, 312, 6457, 1400, 490, 689, 264, 2487, 307, 13, 51603], 'temperature': 0.0, 'avg_logprob': -0.17679877158923027, 'compression_ratio': 1.5730337078651686, 'no_speech_prob': 0.07573152333498001}, {'id': 160, 'seek': 73452, 'start': 759.3, 'end': 762.64, 'text': ' So that offset cannot be encoded.', 'tokens': [51603, 407, 300, 18687, 2644, 312, 2058, 12340, 13, 51770], 'temperature': 0.0, 'avg_logprob': -0.17679877158923027, 'compression_ratio': 1.5730337078651686, 'no_speech_prob': 0.07573152333498001}, {'id': 161, 'seek': 76264, 'start': 762.64, 'end': 766.16, 'text': ' Then we encode section relative offset.', 'tokens': [50364, 1396, 321, 2058, 1429, 3541, 4972, 18687, 13, 50540], 'temperature': 0.0, 'avg_logprob': -0.1353669610134391, 'compression_ratio': 1.587962962962963, 'no_speech_prob': 0.022273004055023193}, {'id': 162, 'seek': 76264, 'start': 766.16, 'end': 772.48, 'text': ' So if I encode 0 here, the problem still remains because the data might actually get allocated', 'tokens': [50540, 407, 498, 286, 2058, 1429, 1958, 510, 11, 264, 1154, 920, 7023, 570, 264, 1412, 1062, 767, 483, 29772, 50856], 'temperature': 0.0, 'avg_logprob': -0.1353669610134391, 'compression_ratio': 1.587962962962963, 'no_speech_prob': 0.022273004055023193}, {'id': 163, 'seek': 76264, 'start': 772.48, 'end': 775.96, 'text': ' at some different address than 0.', 'tokens': [50856, 412, 512, 819, 2985, 813, 1958, 13, 51030], 'temperature': 0.0, 'avg_logprob': -0.1353669610134391, 'compression_ratio': 1.587962962962963, 'no_speech_prob': 0.022273004055023193}, {'id': 164, 'seek': 76264, 'start': 775.96, 'end': 782.78, 'text': " So what happens is we don't know really the final address when we are accessing this.", 'tokens': [51030, 407, 437, 2314, 307, 321, 500, 380, 458, 534, 264, 2572, 2985, 562, 321, 366, 26440, 341, 13, 51371], 'temperature': 0.0, 'avg_logprob': -0.1353669610134391, 'compression_ratio': 1.587962962962963, 'no_speech_prob': 0.022273004055023193}, {'id': 165, 'seek': 76264, 'start': 782.78, 'end': 790.36, 'text': ' So what assembler will actually do is it will assume value 0 and 4 for var and X, but it', 'tokens': [51371, 407, 437, 8438, 1918, 486, 767, 360, 307, 309, 486, 6552, 2158, 1958, 293, 1017, 337, 1374, 293, 1783, 11, 457, 309, 51750], 'temperature': 0.0, 'avg_logprob': -0.1353669610134391, 'compression_ratio': 1.587962962962963, 'no_speech_prob': 0.022273004055023193}, {'id': 166, 'seek': 79036, 'start': 790.36, 'end': 795.92, 'text': ' will keep some additional metadata that this needs to change.', 'tokens': [50364, 486, 1066, 512, 4497, 26603, 300, 341, 2203, 281, 1319, 13, 50642], 'temperature': 0.0, 'avg_logprob': -0.13447491519422416, 'compression_ratio': 1.770949720670391, 'no_speech_prob': 0.04331068694591522}, {'id': 167, 'seek': 79036, 'start': 795.92, 'end': 797.92, 'text': ' It is not really 0 and 4.', 'tokens': [50642, 467, 307, 406, 534, 1958, 293, 1017, 13, 50742], 'temperature': 0.0, 'avg_logprob': -0.13447491519422416, 'compression_ratio': 1.770949720670391, 'no_speech_prob': 0.04331068694591522}, {'id': 168, 'seek': 79036, 'start': 797.92, 'end': 799.6, 'text': ' It needs to change.', 'tokens': [50742, 467, 2203, 281, 1319, 13, 50826], 'temperature': 0.0, 'avg_logprob': -0.13447491519422416, 'compression_ratio': 1.770949720670391, 'no_speech_prob': 0.04331068694591522}, {'id': 169, 'seek': 79036, 'start': 799.6, 'end': 805.16, 'text': ' So when assembler is assembling this code, it will actually put 0 here and it will actually', 'tokens': [50826, 407, 562, 8438, 1918, 307, 43867, 341, 3089, 11, 309, 486, 767, 829, 1958, 510, 293, 309, 486, 767, 51104], 'temperature': 0.0, 'avg_logprob': -0.13447491519422416, 'compression_ratio': 1.770949720670391, 'no_speech_prob': 0.04331068694591522}, {'id': 170, 'seek': 79036, 'start': 805.16, 'end': 811.5600000000001, 'text': ' put 4 here, but it will have some additional information to change that later.', 'tokens': [51104, 829, 1017, 510, 11, 457, 309, 486, 362, 512, 4497, 1589, 281, 1319, 300, 1780, 13, 51424], 'temperature': 0.0, 'avg_logprob': -0.13447491519422416, 'compression_ratio': 1.770949720670391, 'no_speech_prob': 0.04331068694591522}, {'id': 171, 'seek': 79036, 'start': 811.5600000000001, 'end': 816.52, 'text': " And we'll see how linker changes that.", 'tokens': [51424, 400, 321, 603, 536, 577, 2113, 260, 2962, 300, 13, 51672], 'temperature': 0.0, 'avg_logprob': -0.13447491519422416, 'compression_ratio': 1.770949720670391, 'no_speech_prob': 0.04331068694591522}, {'id': 172, 'seek': 81652, 'start': 817.28, 'end': 821.72, 'text': ' Same thing happens when you have external variables.', 'tokens': [50402, 10635, 551, 2314, 562, 291, 362, 8320, 9102, 13, 50624], 'temperature': 0.0, 'avg_logprob': -0.12292855126517159, 'compression_ratio': 1.7085201793721974, 'no_speech_prob': 0.42953917384147644}, {'id': 173, 'seek': 81652, 'start': 821.72, 'end': 828.4399999999999, 'text': " So when I do say move 10 into var and let's say var was an external variable, then again", 'tokens': [50624, 407, 562, 286, 360, 584, 1286, 1266, 666, 1374, 293, 718, 311, 584, 1374, 390, 364, 8320, 7006, 11, 550, 797, 50960], 'temperature': 0.0, 'avg_logprob': -0.12292855126517159, 'compression_ratio': 1.7085201793721974, 'no_speech_prob': 0.42953917384147644}, {'id': 174, 'seek': 81652, 'start': 828.4399999999999, 'end': 833.0799999999999, 'text': ' assembler has no idea what is the address of var.', 'tokens': [50960, 8438, 1918, 575, 572, 1558, 437, 307, 264, 2985, 295, 1374, 13, 51192], 'temperature': 0.0, 'avg_logprob': -0.12292855126517159, 'compression_ratio': 1.7085201793721974, 'no_speech_prob': 0.42953917384147644}, {'id': 175, 'seek': 81652, 'start': 833.0799999999999, 'end': 836.36, 'text': ' So how does it produce this instruction in binary?', 'tokens': [51192, 407, 577, 775, 309, 5258, 341, 10951, 294, 17434, 30, 51356], 'temperature': 0.0, 'avg_logprob': -0.12292855126517159, 'compression_ratio': 1.7085201793721974, 'no_speech_prob': 0.42953917384147644}, {'id': 176, 'seek': 81652, 'start': 836.36, 'end': 840.36, 'text': ' So it will simply assume that var is at some location 0.', 'tokens': [51356, 407, 309, 486, 2935, 6552, 300, 1374, 307, 412, 512, 4914, 1958, 13, 51556], 'temperature': 0.0, 'avg_logprob': -0.12292855126517159, 'compression_ratio': 1.7085201793721974, 'no_speech_prob': 0.42953917384147644}, {'id': 177, 'seek': 81652, 'start': 840.36, 'end': 845.72, 'text': " I don't know what is that location, but it is at some location 0 and records some", 'tokens': [51556, 286, 500, 380, 458, 437, 307, 300, 4914, 11, 457, 309, 307, 412, 512, 4914, 1958, 293, 7724, 512, 51824], 'temperature': 0.0, 'avg_logprob': -0.12292855126517159, 'compression_ratio': 1.7085201793721974, 'no_speech_prob': 0.42953917384147644}, {'id': 178, 'seek': 84572, 'start': 845.72, 'end': 849.6800000000001, 'text': ' metadata which says change this.', 'tokens': [50364, 26603, 597, 1619, 1319, 341, 13, 50562], 'temperature': 0.0, 'avg_logprob': -0.14010512364375127, 'compression_ratio': 1.706806282722513, 'no_speech_prob': 0.006690308917313814}, {'id': 179, 'seek': 84572, 'start': 849.6800000000001, 'end': 853.48, 'text': ' And that information is called as relocation.', 'tokens': [50562, 400, 300, 1589, 307, 1219, 382, 26981, 399, 13, 50752], 'temperature': 0.0, 'avg_logprob': -0.14010512364375127, 'compression_ratio': 1.706806282722513, 'no_speech_prob': 0.006690308917313814}, {'id': 180, 'seek': 84572, 'start': 853.48, 'end': 861.64, 'text': ' So relocations is essentially a piece of information generated by assembler which says how to change', 'tokens': [50752, 407, 26981, 763, 307, 4476, 257, 2522, 295, 1589, 10833, 538, 8438, 1918, 597, 1619, 577, 281, 1319, 51160], 'temperature': 0.0, 'avg_logprob': -0.14010512364375127, 'compression_ratio': 1.706806282722513, 'no_speech_prob': 0.006690308917313814}, {'id': 181, 'seek': 84572, 'start': 861.64, 'end': 864.02, 'text': ' whatever assembler has produced.', 'tokens': [51160, 2035, 8438, 1918, 575, 7126, 13, 51279], 'temperature': 0.0, 'avg_logprob': -0.14010512364375127, 'compression_ratio': 1.706806282722513, 'no_speech_prob': 0.006690308917313814}, {'id': 182, 'seek': 84572, 'start': 864.02, 'end': 868.8000000000001, 'text': " So assembler didn't have visibility of addresses of some of the things, but it still had to", 'tokens': [51279, 407, 8438, 1918, 994, 380, 362, 19883, 295, 16862, 295, 512, 295, 264, 721, 11, 457, 309, 920, 632, 281, 51518], 'temperature': 0.0, 'avg_logprob': -0.14010512364375127, 'compression_ratio': 1.706806282722513, 'no_speech_prob': 0.006690308917313814}, {'id': 183, 'seek': 84572, 'start': 868.8000000000001, 'end': 870.6600000000001, 'text': ' generate binary code.', 'tokens': [51518, 8460, 17434, 3089, 13, 51611], 'temperature': 0.0, 'avg_logprob': -0.14010512364375127, 'compression_ratio': 1.706806282722513, 'no_speech_prob': 0.006690308917313814}, {'id': 184, 'seek': 87066, 'start': 870.66, 'end': 875.6999999999999, 'text': ' So it generated binary code, but kept some additional metadata which says these need', 'tokens': [50364, 407, 309, 10833, 17434, 3089, 11, 457, 4305, 512, 4497, 26603, 597, 1619, 613, 643, 50616], 'temperature': 0.0, 'avg_logprob': -0.15269106084650214, 'compression_ratio': 1.5521739130434782, 'no_speech_prob': 0.007004883140325546}, {'id': 185, 'seek': 87066, 'start': 875.6999999999999, 'end': 876.6999999999999, 'text': ' to change.', 'tokens': [50616, 281, 1319, 13, 50666], 'temperature': 0.0, 'avg_logprob': -0.15269106084650214, 'compression_ratio': 1.5521739130434782, 'no_speech_prob': 0.007004883140325546}, {'id': 186, 'seek': 87066, 'start': 876.6999999999999, 'end': 880.02, 'text': ' Does conceptually that sound okay?', 'tokens': [50666, 4402, 3410, 671, 300, 1626, 1392, 30, 50832], 'temperature': 0.0, 'avg_logprob': -0.15269106084650214, 'compression_ratio': 1.5521739130434782, 'no_speech_prob': 0.007004883140325546}, {'id': 187, 'seek': 87066, 'start': 880.02, 'end': 883.42, 'text': " What is exactly in relocation and how it works we'll see later.", 'tokens': [50832, 708, 307, 2293, 294, 26981, 399, 293, 577, 309, 1985, 321, 603, 536, 1780, 13, 51002], 'temperature': 0.0, 'avg_logprob': -0.15269106084650214, 'compression_ratio': 1.5521739130434782, 'no_speech_prob': 0.007004883140325546}, {'id': 188, 'seek': 87066, 'start': 883.42, 'end': 890.5, 'text': " But conceptually, just remember that assembler's generated code is not final.", 'tokens': [51002, 583, 3410, 671, 11, 445, 1604, 300, 8438, 1918, 311, 10833, 3089, 307, 406, 2572, 13, 51356], 'temperature': 0.0, 'avg_logprob': -0.15269106084650214, 'compression_ratio': 1.5521739130434782, 'no_speech_prob': 0.007004883140325546}, {'id': 189, 'seek': 87066, 'start': 890.5, 'end': 897.14, 'text': ' It will be modified in some way by the linker, especially with respect to addresses.', 'tokens': [51356, 467, 486, 312, 15873, 294, 512, 636, 538, 264, 2113, 260, 11, 2318, 365, 3104, 281, 16862, 13, 51688], 'temperature': 0.0, 'avg_logprob': -0.15269106084650214, 'compression_ratio': 1.5521739130434782, 'no_speech_prob': 0.007004883140325546}, {'id': 190, 'seek': 89714, 'start': 897.14, 'end': 905.8199999999999, 'text': ' So whenever data addresses or variables addresses are needed, that portion will change.', 'tokens': [50364, 407, 5699, 1412, 16862, 420, 9102, 16862, 366, 2978, 11, 300, 8044, 486, 1319, 13, 50798], 'temperature': 0.0, 'avg_logprob': -0.16970855849129812, 'compression_ratio': 1.776190476190476, 'no_speech_prob': 0.12565232813358307}, {'id': 191, 'seek': 89714, 'start': 905.8199999999999, 'end': 911.6999999999999, 'text': ' So essentially if you look at it, what assembler will be generating is whatever are the labels', 'tokens': [50798, 407, 4476, 498, 291, 574, 412, 309, 11, 437, 8438, 1918, 486, 312, 17746, 307, 2035, 366, 264, 16949, 51092], 'temperature': 0.0, 'avg_logprob': -0.16970855849129812, 'compression_ratio': 1.776190476190476, 'no_speech_prob': 0.12565232813358307}, {'id': 192, 'seek': 89714, 'start': 911.6999999999999, 'end': 917.76, 'text': ' within the text section, so whenever we had jump to done or jump to label, those things', 'tokens': [51092, 1951, 264, 2487, 3541, 11, 370, 5699, 321, 632, 3012, 281, 1096, 420, 3012, 281, 7645, 11, 729, 721, 51395], 'temperature': 0.0, 'avg_logprob': -0.16970855849129812, 'compression_ratio': 1.776190476190476, 'no_speech_prob': 0.12565232813358307}, {'id': 193, 'seek': 89714, 'start': 917.76, 'end': 924.18, 'text': ' are actually resolved to the fixed thing because they are not going to change within the text', 'tokens': [51395, 366, 767, 20772, 281, 264, 6806, 551, 570, 436, 366, 406, 516, 281, 1319, 1951, 264, 2487, 51716], 'temperature': 0.0, 'avg_logprob': -0.16970855849129812, 'compression_ratio': 1.776190476190476, 'no_speech_prob': 0.12565232813358307}, {'id': 194, 'seek': 89714, 'start': 924.18, 'end': 925.58, 'text': ' section.', 'tokens': [51716, 3541, 13, 51786], 'temperature': 0.0, 'avg_logprob': -0.16970855849129812, 'compression_ratio': 1.776190476190476, 'no_speech_prob': 0.12565232813358307}, {'id': 195, 'seek': 92558, 'start': 925.58, 'end': 932.14, 'text': ' Assembler was defined in the same file that was resolved to be the offset, but there was', 'tokens': [50364, 1018, 15750, 1918, 390, 7642, 294, 264, 912, 3991, 300, 390, 20772, 281, 312, 264, 18687, 11, 457, 456, 390, 50692], 'temperature': 0.0, 'avg_logprob': -0.18898812093232809, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.12240736186504364}, {'id': 196, 'seek': 92558, 'start': 932.14, 'end': 937.98, 'text': ' some additional metadata recorded here.', 'tokens': [50692, 512, 4497, 26603, 8287, 510, 13, 50984], 'temperature': 0.0, 'avg_logprob': -0.18898812093232809, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.12240736186504364}, {'id': 197, 'seek': 92558, 'start': 937.98, 'end': 941.32, 'text': " And we'll see what that metadata is.", 'tokens': [50984, 400, 321, 603, 536, 437, 300, 26603, 307, 13, 51151], 'temperature': 0.0, 'avg_logprob': -0.18898812093232809, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.12240736186504364}, {'id': 198, 'seek': 92558, 'start': 941.32, 'end': 942.32, 'text': ' Is it clear?', 'tokens': [51151, 1119, 309, 1850, 30, 51201], 'temperature': 0.0, 'avg_logprob': -0.18898812093232809, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.12240736186504364}, {'id': 199, 'seek': 92558, 'start': 942.32, 'end': 948.7, 'text': ' So just to summarize on the assembler side, assembler generates machine code and the machine', 'tokens': [51201, 407, 445, 281, 20858, 322, 264, 8438, 1918, 1252, 11, 8438, 1918, 23815, 3479, 3089, 293, 264, 3479, 51520], 'temperature': 0.0, 'avg_logprob': -0.18898812093232809, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.12240736186504364}, {'id': 200, 'seek': 92558, 'start': 948.7, 'end': 950.48, 'text': ' code is not final.', 'tokens': [51520, 3089, 307, 406, 2572, 13, 51609], 'temperature': 0.0, 'avg_logprob': -0.18898812093232809, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.12240736186504364}, {'id': 201, 'seek': 95048, 'start': 950.48, 'end': 955.62, 'text': ' The addresses used in the machine code need to be changed and assembler has produced some', 'tokens': [50364, 440, 16862, 1143, 294, 264, 3479, 3089, 643, 281, 312, 3105, 293, 8438, 1918, 575, 7126, 512, 50621], 'temperature': 0.0, 'avg_logprob': -0.2899396108544391, 'compression_ratio': 1.3529411764705883, 'no_speech_prob': 0.5526885390281677}, {'id': 202, 'seek': 95048, 'start': 955.62, 'end': 962.52, 'text': ' information for linker on how to change it.', 'tokens': [50621, 1589, 337, 2113, 260, 322, 577, 281, 1319, 309, 13, 50966], 'temperature': 0.0, 'avg_logprob': -0.2899396108544391, 'compression_ratio': 1.3529411764705883, 'no_speech_prob': 0.5526885390281677}, {'id': 203, 'seek': 95048, 'start': 962.52, 'end': 964.0, 'text': ' So what do linkers do?', 'tokens': [50966, 407, 437, 360, 2113, 433, 360, 30, 51040], 'temperature': 0.0, 'avg_logprob': -0.2899396108544391, 'compression_ratio': 1.3529411764705883, 'no_speech_prob': 0.5526885390281677}, {'id': 204, 'seek': 95048, 'start': 964.0, 'end': 965.0, 'text': ' Yes.', 'tokens': [51040, 1079, 13, 51090], 'temperature': 0.0, 'avg_logprob': -0.2899396108544391, 'compression_ratio': 1.3529411764705883, 'no_speech_prob': 0.5526885390281677}, {'id': 205, 'seek': 96500, 'start': 965.0, 'end': 986.52, 'text': " I'll come to that.", 'tokens': [50364, 286, 603, 808, 281, 300, 13, 51440], 'temperature': 0.0, 'avg_logprob': -0.3523625135421753, 'compression_ratio': 0.6923076923076923, 'no_speech_prob': 0.272502601146698}, {'id': 206, 'seek': 98652, 'start': 987.52, 'end': 995.96, 'text': " So linker's job is essentially to merge the object files and linker will take multiple", 'tokens': [50414, 407, 2113, 260, 311, 1691, 307, 4476, 281, 22183, 264, 2657, 7098, 293, 2113, 260, 486, 747, 3866, 50836], 'temperature': 0.0, 'avg_logprob': -0.18445216155633692, 'compression_ratio': 1.6305418719211822, 'no_speech_prob': 0.3874427378177643}, {'id': 207, 'seek': 98652, 'start': 995.96, 'end': 1002.88, 'text': ' relocatable object files as the input and produce a single executable file.', 'tokens': [50836, 26981, 31415, 2657, 7098, 382, 264, 4846, 293, 5258, 257, 2167, 7568, 712, 3991, 13, 51182], 'temperature': 0.0, 'avg_logprob': -0.18445216155633692, 'compression_ratio': 1.6305418719211822, 'no_speech_prob': 0.3874427378177643}, {'id': 208, 'seek': 98652, 'start': 1002.88, 'end': 1007.52, 'text': ' And one of the main task of linker is to be able to do symbol resolution, which is what', 'tokens': [51182, 400, 472, 295, 264, 2135, 5633, 295, 2113, 260, 307, 281, 312, 1075, 281, 360, 5986, 8669, 11, 597, 307, 437, 51414], 'temperature': 0.0, 'avg_logprob': -0.18445216155633692, 'compression_ratio': 1.6305418719211822, 'no_speech_prob': 0.3874427378177643}, {'id': 209, 'seek': 98652, 'start': 1007.52, 'end': 1012.5, 'text': ' we were trying to see in the quiz that whether this were and this were are same.', 'tokens': [51414, 321, 645, 1382, 281, 536, 294, 264, 15450, 300, 1968, 341, 645, 293, 341, 645, 366, 912, 13, 51663], 'temperature': 0.0, 'avg_logprob': -0.18445216155633692, 'compression_ratio': 1.6305418719211822, 'no_speech_prob': 0.3874427378177643}, {'id': 210, 'seek': 101250, 'start': 1012.5, 'end': 1017.54, 'text': ' So it somehow needs to associate a symbol with its use.', 'tokens': [50364, 407, 309, 6063, 2203, 281, 14644, 257, 5986, 365, 1080, 764, 13, 50616], 'temperature': 0.0, 'avg_logprob': -0.2564885239852102, 'compression_ratio': 1.5815217391304348, 'no_speech_prob': 0.32016393542289734}, {'id': 211, 'seek': 101250, 'start': 1017.54, 'end': 1021.34, 'text': ' That is called as symbol resolution.', 'tokens': [50616, 663, 307, 1219, 382, 5986, 8669, 13, 50806], 'temperature': 0.0, 'avg_logprob': -0.2564885239852102, 'compression_ratio': 1.5815217391304348, 'no_speech_prob': 0.32016393542289734}, {'id': 212, 'seek': 101250, 'start': 1021.34, 'end': 1026.42, 'text': ' And we just now saw that linker also has to do something called as relocation, which is', 'tokens': [50806, 400, 321, 445, 586, 1866, 300, 2113, 260, 611, 575, 281, 360, 746, 1219, 382, 26981, 399, 11, 597, 307, 51060], 'temperature': 0.0, 'avg_logprob': -0.2564885239852102, 'compression_ratio': 1.5815217391304348, 'no_speech_prob': 0.32016393542289734}, {'id': 213, 'seek': 101250, 'start': 1026.42, 'end': 1032.66, 'text': " essentially changing addresses or filling in the addresses which assembler couldn't", 'tokens': [51060, 4476, 4473, 16862, 420, 10623, 294, 264, 16862, 597, 8438, 1918, 2809, 380, 51372], 'temperature': 0.0, 'avg_logprob': -0.2564885239852102, 'compression_ratio': 1.5815217391304348, 'no_speech_prob': 0.32016393542289734}, {'id': 214, 'seek': 101250, 'start': 1032.66, 'end': 1034.78, 'text': ' fill.', 'tokens': [51372, 2836, 13, 51478], 'temperature': 0.0, 'avg_logprob': -0.2564885239852102, 'compression_ratio': 1.5815217391304348, 'no_speech_prob': 0.32016393542289734}, {'id': 215, 'seek': 101250, 'start': 1034.78, 'end': 1035.78, 'text': ' So the section.', 'tokens': [51478, 407, 264, 3541, 13, 51528], 'temperature': 0.0, 'avg_logprob': -0.2564885239852102, 'compression_ratio': 1.5815217391304348, 'no_speech_prob': 0.32016393542289734}, {'id': 216, 'seek': 101250, 'start': 1035.78, 'end': 1036.78, 'text': ' Yes.', 'tokens': [51528, 1079, 13, 51578], 'temperature': 0.0, 'avg_logprob': -0.2564885239852102, 'compression_ratio': 1.5815217391304348, 'no_speech_prob': 0.32016393542289734}, {'id': 217, 'seek': 103678, 'start': 1036.78, 'end': 1052.84, 'text': ' Yes.', 'tokens': [50364, 1079, 13, 51167], 'temperature': 0.0, 'avg_logprob': -0.22940887104381213, 'compression_ratio': 1.2882882882882882, 'no_speech_prob': 0.05998627096414566}, {'id': 218, 'seek': 103678, 'start': 1052.84, 'end': 1056.58, 'text': " So linker has optimizations also, which we'll see.", 'tokens': [51167, 407, 2113, 260, 575, 5028, 14455, 611, 11, 597, 321, 603, 536, 13, 51354], 'temperature': 0.0, 'avg_logprob': -0.22940887104381213, 'compression_ratio': 1.2882882882882882, 'no_speech_prob': 0.05998627096414566}, {'id': 219, 'seek': 103678, 'start': 1056.58, 'end': 1061.86, 'text': " I mean, I don't have time to cover how link time optimizations work, but I will mention", 'tokens': [51354, 286, 914, 11, 286, 500, 380, 362, 565, 281, 2060, 577, 2113, 565, 5028, 14455, 589, 11, 457, 286, 486, 2152, 51618], 'temperature': 0.0, 'avg_logprob': -0.22940887104381213, 'compression_ratio': 1.2882882882882882, 'no_speech_prob': 0.05998627096414566}, {'id': 220, 'seek': 106186, 'start': 1061.86, 'end': 1067.1399999999999, 'text': ' what kind of things linker do as optimizations.', 'tokens': [50364, 437, 733, 295, 721, 2113, 260, 360, 382, 5028, 14455, 13, 50628], 'temperature': 0.0, 'avg_logprob': -0.16690027337325247, 'compression_ratio': 1.6682926829268292, 'no_speech_prob': 0.13291077315807343}, {'id': 221, 'seek': 106186, 'start': 1067.1399999999999, 'end': 1068.76, 'text': ' So coming to your question.', 'tokens': [50628, 407, 1348, 281, 428, 1168, 13, 50709], 'temperature': 0.0, 'avg_logprob': -0.16690027337325247, 'compression_ratio': 1.6682926829268292, 'no_speech_prob': 0.13291077315807343}, {'id': 222, 'seek': 106186, 'start': 1068.76, 'end': 1073.02, 'text': ' So essentially what if you think of elf linker, this is what it gets.', 'tokens': [50709, 407, 4476, 437, 498, 291, 519, 295, 35565, 2113, 260, 11, 341, 307, 437, 309, 2170, 13, 50922], 'temperature': 0.0, 'avg_logprob': -0.16690027337325247, 'compression_ratio': 1.6682926829268292, 'no_speech_prob': 0.13291077315807343}, {'id': 223, 'seek': 106186, 'start': 1073.02, 'end': 1077.3799999999999, 'text': ' It gets multiple object files as the input.', 'tokens': [50922, 467, 2170, 3866, 2657, 7098, 382, 264, 4846, 13, 51140], 'temperature': 0.0, 'avg_logprob': -0.16690027337325247, 'compression_ratio': 1.6682926829268292, 'no_speech_prob': 0.13291077315807343}, {'id': 224, 'seek': 106186, 'start': 1077.3799999999999, 'end': 1083.62, 'text': ' What it is going to do is it is going to create, take all the text sections from all the elf', 'tokens': [51140, 708, 309, 307, 516, 281, 360, 307, 309, 307, 516, 281, 1884, 11, 747, 439, 264, 2487, 10863, 490, 439, 264, 35565, 51452], 'temperature': 0.0, 'avg_logprob': -0.16690027337325247, 'compression_ratio': 1.6682926829268292, 'no_speech_prob': 0.13291077315807343}, {'id': 225, 'seek': 106186, 'start': 1083.62, 'end': 1087.2199999999998, 'text': ' files, put them together.', 'tokens': [51452, 7098, 11, 829, 552, 1214, 13, 51632], 'temperature': 0.0, 'avg_logprob': -0.16690027337325247, 'compression_ratio': 1.6682926829268292, 'no_speech_prob': 0.13291077315807343}, {'id': 226, 'seek': 106186, 'start': 1087.2199999999998, 'end': 1090.1399999999999, 'text': ' And this is what forms a segment.', 'tokens': [51632, 400, 341, 307, 437, 6422, 257, 9469, 13, 51778], 'temperature': 0.0, 'avg_logprob': -0.16690027337325247, 'compression_ratio': 1.6682926829268292, 'no_speech_prob': 0.13291077315807343}, {'id': 227, 'seek': 109014, 'start': 1090.22, 'end': 1096.26, 'text': ' So you can think of chunks of text sections which were pulled in from multiple files and', 'tokens': [50368, 407, 291, 393, 519, 295, 24004, 295, 2487, 10863, 597, 645, 7373, 294, 490, 3866, 7098, 293, 50670], 'temperature': 0.0, 'avg_logprob': -0.23082563353747856, 'compression_ratio': 1.6354166666666667, 'no_speech_prob': 0.03618768975138664}, {'id': 228, 'seek': 109014, 'start': 1096.26, 'end': 1099.42, 'text': ' put together forms a segment.', 'tokens': [50670, 829, 1214, 6422, 257, 9469, 13, 50828], 'temperature': 0.0, 'avg_logprob': -0.23082563353747856, 'compression_ratio': 1.6354166666666667, 'no_speech_prob': 0.03618768975138664}, {'id': 229, 'seek': 109014, 'start': 1099.42, 'end': 1105.38, 'text': ' Similarly, it will take data section from each of the object file and create a data', 'tokens': [50828, 13157, 11, 309, 486, 747, 1412, 3541, 490, 1184, 295, 264, 2657, 3991, 293, 1884, 257, 1412, 51126], 'temperature': 0.0, 'avg_logprob': -0.23082563353747856, 'compression_ratio': 1.6354166666666667, 'no_speech_prob': 0.03618768975138664}, {'id': 230, 'seek': 109014, 'start': 1105.38, 'end': 1108.18, 'text': ' segment out of it and so on.', 'tokens': [51126, 9469, 484, 295, 309, 293, 370, 322, 13, 51266], 'temperature': 0.0, 'avg_logprob': -0.23082563353747856, 'compression_ratio': 1.6354166666666667, 'no_speech_prob': 0.03618768975138664}, {'id': 231, 'seek': 109014, 'start': 1108.18, 'end': 1112.18, 'text': ' So segment, you can think of it as collects.', 'tokens': [51266, 407, 9469, 11, 291, 393, 519, 295, 309, 382, 39897, 13, 51466], 'temperature': 0.0, 'avg_logprob': -0.23082563353747856, 'compression_ratio': 1.6354166666666667, 'no_speech_prob': 0.03618768975138664}, {'id': 232, 'seek': 109014, 'start': 1112.18, 'end': 1116.8600000000001, 'text': " It's a big text section conceptually.", 'tokens': [51466, 467, 311, 257, 955, 2487, 3541, 3410, 671, 13, 51700], 'temperature': 0.0, 'avg_logprob': -0.23082563353747856, 'compression_ratio': 1.6354166666666667, 'no_speech_prob': 0.03618768975138664}, {'id': 233, 'seek': 111686, 'start': 1116.86, 'end': 1120.4599999999998, 'text': " And what all goes into the segment, we'll see tomorrow when we actually look at the", 'tokens': [50364, 400, 437, 439, 1709, 666, 264, 9469, 11, 321, 603, 536, 4153, 562, 321, 767, 574, 412, 264, 50544], 'temperature': 0.0, 'avg_logprob': -0.11724891457506405, 'compression_ratio': 1.6681614349775784, 'no_speech_prob': 0.015900013968348503}, {'id': 234, 'seek': 111686, 'start': 1120.4599999999998, 'end': 1123.02, 'text': ' execution properties.', 'tokens': [50544, 15058, 7221, 13, 50672], 'temperature': 0.0, 'avg_logprob': -0.11724891457506405, 'compression_ratio': 1.6681614349775784, 'no_speech_prob': 0.015900013968348503}, {'id': 235, 'seek': 111686, 'start': 1123.02, 'end': 1130.1, 'text': ' But for now, you can assume a segment is collection of same sections, which came from different', 'tokens': [50672, 583, 337, 586, 11, 291, 393, 6552, 257, 9469, 307, 5765, 295, 912, 10863, 11, 597, 1361, 490, 819, 51026], 'temperature': 0.0, 'avg_logprob': -0.11724891457506405, 'compression_ratio': 1.6681614349775784, 'no_speech_prob': 0.015900013968348503}, {'id': 236, 'seek': 111686, 'start': 1130.1, 'end': 1134.02, 'text': ' object files.', 'tokens': [51026, 2657, 7098, 13, 51222], 'temperature': 0.0, 'avg_logprob': -0.11724891457506405, 'compression_ratio': 1.6681614349775784, 'no_speech_prob': 0.015900013968348503}, {'id': 237, 'seek': 111686, 'start': 1134.02, 'end': 1139.26, 'text': ' Now as far as you can see here, what is linker going to do is linker is going to produce', 'tokens': [51222, 823, 382, 1400, 382, 291, 393, 536, 510, 11, 437, 307, 2113, 260, 516, 281, 360, 307, 2113, 260, 307, 516, 281, 5258, 51484], 'temperature': 0.0, 'avg_logprob': -0.11724891457506405, 'compression_ratio': 1.6681614349775784, 'no_speech_prob': 0.015900013968348503}, {'id': 238, 'seek': 111686, 'start': 1139.26, 'end': 1143.8999999999999, 'text': ' an object file, which actually pulled in data from multiple things.', 'tokens': [51484, 364, 2657, 3991, 11, 597, 767, 7373, 294, 1412, 490, 3866, 721, 13, 51716], 'temperature': 0.0, 'avg_logprob': -0.11724891457506405, 'compression_ratio': 1.6681614349775784, 'no_speech_prob': 0.015900013968348503}, {'id': 239, 'seek': 114390, 'start': 1143.94, 'end': 1149.14, 'text': ' So what linker ended up doing is it took text section which was present at offset 500 in', 'tokens': [50366, 407, 437, 2113, 260, 4590, 493, 884, 307, 309, 1890, 2487, 3541, 597, 390, 1974, 412, 18687, 5923, 294, 50626], 'temperature': 0.0, 'avg_logprob': -0.16721651554107667, 'compression_ratio': 1.644808743169399, 'no_speech_prob': 0.009120525792241096}, {'id': 240, 'seek': 114390, 'start': 1149.14, 'end': 1158.5400000000002, 'text': ' file 0, offset 300 in file 2 and put it at offset maybe 100 in the output file.', 'tokens': [50626, 3991, 1958, 11, 18687, 6641, 294, 3991, 568, 293, 829, 309, 412, 18687, 1310, 2319, 294, 264, 5598, 3991, 13, 51096], 'temperature': 0.0, 'avg_logprob': -0.16721651554107667, 'compression_ratio': 1.644808743169399, 'no_speech_prob': 0.009120525792241096}, {'id': 241, 'seek': 114390, 'start': 1158.5400000000002, 'end': 1161.5, 'text': ' So it is going to merge all these together.', 'tokens': [51096, 407, 309, 307, 516, 281, 22183, 439, 613, 1214, 13, 51244], 'temperature': 0.0, 'avg_logprob': -0.16721651554107667, 'compression_ratio': 1.644808743169399, 'no_speech_prob': 0.009120525792241096}, {'id': 242, 'seek': 114390, 'start': 1161.5, 'end': 1165.26, 'text': ' Now what all symbols linker care about?', 'tokens': [51244, 823, 437, 439, 16944, 2113, 260, 1127, 466, 30, 51432], 'temperature': 0.0, 'avg_logprob': -0.16721651554107667, 'compression_ratio': 1.644808743169399, 'no_speech_prob': 0.009120525792241096}, {'id': 243, 'seek': 114390, 'start': 1165.26, 'end': 1169.3000000000002, 'text': ' So linker cares about symbols which were global.', 'tokens': [51432, 407, 2113, 260, 12310, 466, 16944, 597, 645, 4338, 13, 51634], 'temperature': 0.0, 'avg_logprob': -0.16721651554107667, 'compression_ratio': 1.644808743169399, 'no_speech_prob': 0.009120525792241096}, {'id': 244, 'seek': 116930, 'start': 1169.3, 'end': 1175.78, 'text': ' Global are the symbols which are defined in the current object file and can be referenced', 'tokens': [50364, 14465, 366, 264, 16944, 597, 366, 7642, 294, 264, 2190, 2657, 3991, 293, 393, 312, 32734, 50688], 'temperature': 0.0, 'avg_logprob': -0.17219881264560194, 'compression_ratio': 2.191358024691358, 'no_speech_prob': 0.009703786112368107}, {'id': 245, 'seek': 116930, 'start': 1175.78, 'end': 1180.3799999999999, 'text': ' in the other object file.', 'tokens': [50688, 294, 264, 661, 2657, 3991, 13, 50918], 'temperature': 0.0, 'avg_logprob': -0.17219881264560194, 'compression_ratio': 2.191358024691358, 'no_speech_prob': 0.009703786112368107}, {'id': 246, 'seek': 116930, 'start': 1180.3799999999999, 'end': 1185.6599999999999, 'text': ' External symbols which are essentially referenced in the object file but not defined in the', 'tokens': [50918, 48277, 16944, 597, 366, 4476, 32734, 294, 264, 2657, 3991, 457, 406, 7642, 294, 264, 51182], 'temperature': 0.0, 'avg_logprob': -0.17219881264560194, 'compression_ratio': 2.191358024691358, 'no_speech_prob': 0.009703786112368107}, {'id': 247, 'seek': 116930, 'start': 1185.6599999999999, 'end': 1187.34, 'text': ' object file.', 'tokens': [51182, 2657, 3991, 13, 51266], 'temperature': 0.0, 'avg_logprob': -0.17219881264560194, 'compression_ratio': 2.191358024691358, 'no_speech_prob': 0.009703786112368107}, {'id': 248, 'seek': 116930, 'start': 1187.34, 'end': 1192.8999999999999, 'text': ' And local which is essentially defined in the object file but cannot be referred by', 'tokens': [51266, 400, 2654, 597, 307, 4476, 7642, 294, 264, 2657, 3991, 457, 2644, 312, 10839, 538, 51544], 'temperature': 0.0, 'avg_logprob': -0.17219881264560194, 'compression_ratio': 2.191358024691358, 'no_speech_prob': 0.009703786112368107}, {'id': 249, 'seek': 116930, 'start': 1192.8999999999999, 'end': 1194.54, 'text': ' the other object file.', 'tokens': [51544, 264, 661, 2657, 3991, 13, 51626], 'temperature': 0.0, 'avg_logprob': -0.17219881264560194, 'compression_ratio': 2.191358024691358, 'no_speech_prob': 0.009703786112368107}, {'id': 250, 'seek': 116930, 'start': 1194.54, 'end': 1196.82, 'text': ' So we saw global and local.', 'tokens': [51626, 407, 321, 1866, 4338, 293, 2654, 13, 51740], 'temperature': 0.0, 'avg_logprob': -0.17219881264560194, 'compression_ratio': 2.191358024691358, 'no_speech_prob': 0.009703786112368107}, {'id': 251, 'seek': 119682, 'start': 1196.82, 'end': 1200.7, 'text': ' We were seeing that when we saw the MyWare example.', 'tokens': [50364, 492, 645, 2577, 300, 562, 321, 1866, 264, 1222, 54, 543, 1365, 13, 50558], 'temperature': 0.0, 'avg_logprob': -0.1879526568997291, 'compression_ratio': 1.8489583333333333, 'no_speech_prob': 0.13645033538341522}, {'id': 252, 'seek': 119682, 'start': 1200.7, 'end': 1206.58, 'text': ' When I declare something as static, it appeared as local and when I declared it as non-static,', 'tokens': [50558, 1133, 286, 19710, 746, 382, 13437, 11, 309, 8516, 382, 2654, 293, 562, 286, 15489, 309, 382, 2107, 12, 34632, 11, 50852], 'temperature': 0.0, 'avg_logprob': -0.1879526568997291, 'compression_ratio': 1.8489583333333333, 'no_speech_prob': 0.13645033538341522}, {'id': 253, 'seek': 119682, 'start': 1206.58, 'end': 1208.1799999999998, 'text': ' it appeared as global.', 'tokens': [50852, 309, 8516, 382, 4338, 13, 50932], 'temperature': 0.0, 'avg_logprob': -0.1879526568997291, 'compression_ratio': 1.8489583333333333, 'no_speech_prob': 0.13645033538341522}, {'id': 254, 'seek': 119682, 'start': 1208.1799999999998, 'end': 1212.9399999999998, 'text': ' And external is the one which had UND section index.', 'tokens': [50932, 400, 8320, 307, 264, 472, 597, 632, 8229, 35, 3541, 8186, 13, 51170], 'temperature': 0.0, 'avg_logprob': -0.1879526568997291, 'compression_ratio': 1.8489583333333333, 'no_speech_prob': 0.13645033538341522}, {'id': 255, 'seek': 119682, 'start': 1212.9399999999998, 'end': 1218.3999999999999, 'text': ' So anything with the UND shn index is external.', 'tokens': [51170, 407, 1340, 365, 264, 8229, 35, 402, 77, 8186, 307, 8320, 13, 51443], 'temperature': 0.0, 'avg_logprob': -0.1879526568997291, 'compression_ratio': 1.8489583333333333, 'no_speech_prob': 0.13645033538341522}, {'id': 256, 'seek': 119682, 'start': 1218.3999999999999, 'end': 1224.58, 'text': ' Anything which has global bind is global and anything which has local bind is local.', 'tokens': [51443, 11998, 597, 575, 4338, 14786, 307, 4338, 293, 1340, 597, 575, 2654, 14786, 307, 2654, 13, 51752], 'temperature': 0.0, 'avg_logprob': -0.1879526568997291, 'compression_ratio': 1.8489583333333333, 'no_speech_prob': 0.13645033538341522}, {'id': 257, 'seek': 122458, 'start': 1224.58, 'end': 1229.74, 'text': ' So these are the only symbols which linker cares about.', 'tokens': [50364, 407, 613, 366, 264, 787, 16944, 597, 2113, 260, 12310, 466, 13, 50622], 'temperature': 0.0, 'avg_logprob': -0.18267860412597656, 'compression_ratio': 1.4895104895104896, 'no_speech_prob': 0.008185689337551594}, {'id': 258, 'seek': 122458, 'start': 1229.74, 'end': 1240.6599999999999, 'text': ' Now symbol resolution is act of associating each symbol with its references.', 'tokens': [50622, 823, 5986, 8669, 307, 605, 295, 4180, 990, 1184, 5986, 365, 1080, 15400, 13, 51168], 'temperature': 0.0, 'avg_logprob': -0.18267860412597656, 'compression_ratio': 1.4895104895104896, 'no_speech_prob': 0.008185689337551594}, {'id': 259, 'seek': 122458, 'start': 1240.6599999999999, 'end': 1248.1, 'text': " So linker's job is to figure out these references correspond to this definition.", 'tokens': [51168, 407, 2113, 260, 311, 1691, 307, 281, 2573, 484, 613, 15400, 6805, 281, 341, 7123, 13, 51540], 'temperature': 0.0, 'avg_logprob': -0.18267860412597656, 'compression_ratio': 1.4895104895104896, 'no_speech_prob': 0.008185689337551594}, {'id': 260, 'seek': 124810, 'start': 1248.1, 'end': 1259.3, 'text': ' Now if you look at this, var is a global variable, foo is an external variable, here var is an', 'tokens': [50364, 823, 498, 291, 574, 412, 341, 11, 1374, 307, 257, 4338, 7006, 11, 726, 78, 307, 364, 8320, 7006, 11, 510, 1374, 307, 364, 50924], 'temperature': 0.0, 'avg_logprob': -0.21943241755167645, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.05659861117601395}, {'id': 261, 'seek': 124810, 'start': 1259.3, 'end': 1266.1, 'text': ' external variable and var2 is a local variable because it was static.', 'tokens': [50924, 8320, 7006, 293, 1374, 17, 307, 257, 2654, 7006, 570, 309, 390, 13437, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.21943241755167645, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.05659861117601395}, {'id': 262, 'seek': 124810, 'start': 1266.1, 'end': 1271.54, 'text': " And linker doesn't see v because it was allocated on stack.", 'tokens': [51264, 400, 2113, 260, 1177, 380, 536, 371, 570, 309, 390, 29772, 322, 8630, 13, 51536], 'temperature': 0.0, 'avg_logprob': -0.21943241755167645, 'compression_ratio': 1.671641791044776, 'no_speech_prob': 0.05659861117601395}, {'id': 263, 'seek': 127154, 'start': 1271.74, 'end': 1278.78, 'text': ' And symbol resolution is simply saying var2 is associated with this var2.', 'tokens': [50374, 400, 5986, 8669, 307, 2935, 1566, 1374, 17, 307, 6615, 365, 341, 1374, 17, 13, 50726], 'temperature': 0.0, 'avg_logprob': -0.1227750563889407, 'compression_ratio': 1.6683417085427135, 'no_speech_prob': 0.09788701683282852}, {'id': 264, 'seek': 127154, 'start': 1278.78, 'end': 1285.94, 'text': ' But linker has no idea what is this foo referring to, what is this printf referring to and what', 'tokens': [50726, 583, 2113, 260, 575, 572, 1558, 437, 307, 341, 726, 78, 13761, 281, 11, 437, 307, 341, 4482, 69, 13761, 281, 293, 437, 51084], 'temperature': 0.0, 'avg_logprob': -0.1227750563889407, 'compression_ratio': 1.6683417085427135, 'no_speech_prob': 0.09788701683282852}, {'id': 265, 'seek': 127154, 'start': 1285.94, 'end': 1290.7, 'text': ' is this var referring to.', 'tokens': [51084, 307, 341, 1374, 13761, 281, 13, 51322], 'temperature': 0.0, 'avg_logprob': -0.1227750563889407, 'compression_ratio': 1.6683417085427135, 'no_speech_prob': 0.09788701683282852}, {'id': 266, 'seek': 127154, 'start': 1290.7, 'end': 1294.5, 'text': ' Now if you look at the object file, this is how it will look.', 'tokens': [51322, 823, 498, 291, 574, 412, 264, 2657, 3991, 11, 341, 307, 577, 309, 486, 574, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.1227750563889407, 'compression_ratio': 1.6683417085427135, 'no_speech_prob': 0.09788701683282852}, {'id': 267, 'seek': 127154, 'start': 1294.5, 'end': 1299.7, 'text': " The text section will have a reference to foo which it doesn't know about.", 'tokens': [51512, 440, 2487, 3541, 486, 362, 257, 6408, 281, 726, 78, 597, 309, 1177, 380, 458, 466, 13, 51772], 'temperature': 0.0, 'avg_logprob': -0.1227750563889407, 'compression_ratio': 1.6683417085427135, 'no_speech_prob': 0.09788701683282852}, {'id': 268, 'seek': 129970, 'start': 1299.7, 'end': 1304.02, 'text': " Text section will have a reference to printf which it doesn't know about.", 'tokens': [50364, 18643, 3541, 486, 362, 257, 6408, 281, 4482, 69, 597, 309, 1177, 380, 458, 466, 13, 50580], 'temperature': 0.0, 'avg_logprob': -0.13395342333563443, 'compression_ratio': 1.8756476683937824, 'no_speech_prob': 0.0017810511635616422}, {'id': 269, 'seek': 129970, 'start': 1304.02, 'end': 1310.02, 'text': " Similarly here text section will have reference to var which it doesn't know about.", 'tokens': [50580, 13157, 510, 2487, 3541, 486, 362, 6408, 281, 1374, 597, 309, 1177, 380, 458, 466, 13, 50880], 'temperature': 0.0, 'avg_logprob': -0.13395342333563443, 'compression_ratio': 1.8756476683937824, 'no_speech_prob': 0.0017810511635616422}, {'id': 270, 'seek': 129970, 'start': 1310.02, 'end': 1318.42, 'text': ' And text section will have a reference to var2 which is say at this location 54.', 'tokens': [50880, 400, 2487, 3541, 486, 362, 257, 6408, 281, 1374, 17, 597, 307, 584, 412, 341, 4914, 20793, 13, 51300], 'temperature': 0.0, 'avg_logprob': -0.13395342333563443, 'compression_ratio': 1.8756476683937824, 'no_speech_prob': 0.0017810511635616422}, {'id': 271, 'seek': 129970, 'start': 1318.42, 'end': 1322.7, 'text': ' Now what linker is conceptually doing is merging two things together.', 'tokens': [51300, 823, 437, 2113, 260, 307, 3410, 671, 884, 307, 44559, 732, 721, 1214, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.13395342333563443, 'compression_ratio': 1.8756476683937824, 'no_speech_prob': 0.0017810511635616422}, {'id': 272, 'seek': 129970, 'start': 1322.7, 'end': 1325.22, 'text': ' So the resultant thing will look something like this.', 'tokens': [51514, 407, 264, 1874, 394, 551, 486, 574, 746, 411, 341, 13, 51640], 'temperature': 0.0, 'avg_logprob': -0.13395342333563443, 'compression_ratio': 1.8756476683937824, 'no_speech_prob': 0.0017810511635616422}, {'id': 273, 'seek': 132522, 'start': 1325.22, 'end': 1330.6200000000001, 'text': ' So it took text section from the first program, it took the text section from the second program', 'tokens': [50364, 407, 309, 1890, 2487, 3541, 490, 264, 700, 1461, 11, 309, 1890, 264, 2487, 3541, 490, 264, 1150, 1461, 50634], 'temperature': 0.0, 'avg_logprob': -0.13261317071460543, 'compression_ratio': 2.049689440993789, 'no_speech_prob': 0.04142126068472862}, {'id': 274, 'seek': 132522, 'start': 1330.6200000000001, 'end': 1332.66, 'text': ' and put them one after the other.', 'tokens': [50634, 293, 829, 552, 472, 934, 264, 661, 13, 50736], 'temperature': 0.0, 'avg_logprob': -0.13261317071460543, 'compression_ratio': 2.049689440993789, 'no_speech_prob': 0.04142126068472862}, {'id': 275, 'seek': 132522, 'start': 1332.66, 'end': 1338.42, 'text': ' So this became 0, 100, 150.', 'tokens': [50736, 407, 341, 3062, 1958, 11, 2319, 11, 8451, 13, 51024], 'temperature': 0.0, 'avg_logprob': -0.13261317071460543, 'compression_ratio': 2.049689440993789, 'no_speech_prob': 0.04142126068472862}, {'id': 276, 'seek': 132522, 'start': 1338.42, 'end': 1342.7, 'text': ' Similarly it took the data section from the first program, data section from the second', 'tokens': [51024, 13157, 309, 1890, 264, 1412, 3541, 490, 264, 700, 1461, 11, 1412, 3541, 490, 264, 1150, 51238], 'temperature': 0.0, 'avg_logprob': -0.13261317071460543, 'compression_ratio': 2.049689440993789, 'no_speech_prob': 0.04142126068472862}, {'id': 277, 'seek': 132522, 'start': 1342.7, 'end': 1347.98, 'text': ' program so this became 150 and 154.', 'tokens': [51238, 1461, 370, 341, 3062, 8451, 293, 2119, 19, 13, 51502], 'temperature': 0.0, 'avg_logprob': -0.13261317071460543, 'compression_ratio': 2.049689440993789, 'no_speech_prob': 0.04142126068472862}, {'id': 278, 'seek': 132522, 'start': 1347.98, 'end': 1350.42, 'text': ' And the resolution is just something like this.', 'tokens': [51502, 400, 264, 8669, 307, 445, 746, 411, 341, 13, 51624], 'temperature': 0.0, 'avg_logprob': -0.13261317071460543, 'compression_ratio': 2.049689440993789, 'no_speech_prob': 0.04142126068472862}, {'id': 279, 'seek': 135042, 'start': 1350.42, 'end': 1356.5800000000002, 'text': ' So now linker notes foo is at address 100 because foo is defined in the text section', 'tokens': [50364, 407, 586, 2113, 260, 5570, 726, 78, 307, 412, 2985, 2319, 570, 726, 78, 307, 7642, 294, 264, 2487, 3541, 50672], 'temperature': 0.0, 'avg_logprob': -0.11422253847122192, 'compression_ratio': 1.694915254237288, 'no_speech_prob': 0.1438514143228531}, {'id': 280, 'seek': 135042, 'start': 1356.5800000000002, 'end': 1359.6200000000001, 'text': ' which starts at 100.', 'tokens': [50672, 597, 3719, 412, 2319, 13, 50824], 'temperature': 0.0, 'avg_logprob': -0.11422253847122192, 'compression_ratio': 1.694915254237288, 'no_speech_prob': 0.1438514143228531}, {'id': 281, 'seek': 135042, 'start': 1359.6200000000001, 'end': 1369.38, 'text': ' Then this text section refers to the variable here which is defined at 150 and this variable', 'tokens': [50824, 1396, 341, 2487, 3541, 14942, 281, 264, 7006, 510, 597, 307, 7642, 412, 8451, 293, 341, 7006, 51312], 'temperature': 0.0, 'avg_logprob': -0.11422253847122192, 'compression_ratio': 1.694915254237288, 'no_speech_prob': 0.1438514143228531}, {'id': 282, 'seek': 135042, 'start': 1369.38, 'end': 1373.26, 'text': ' refers to the second variable which is var2.', 'tokens': [51312, 14942, 281, 264, 1150, 7006, 597, 307, 1374, 17, 13, 51506], 'temperature': 0.0, 'avg_logprob': -0.11422253847122192, 'compression_ratio': 1.694915254237288, 'no_speech_prob': 0.1438514143228531}, {'id': 283, 'seek': 135042, 'start': 1373.26, 'end': 1374.54, 'text': ' Is that clear?', 'tokens': [51506, 1119, 300, 1850, 30, 51570], 'temperature': 0.0, 'avg_logprob': -0.11422253847122192, 'compression_ratio': 1.694915254237288, 'no_speech_prob': 0.1438514143228531}, {'id': 284, 'seek': 135042, 'start': 1374.54, 'end': 1376.8600000000001, 'text': ' What linker is conceptually trying to do?', 'tokens': [51570, 708, 2113, 260, 307, 3410, 671, 1382, 281, 360, 30, 51686], 'temperature': 0.0, 'avg_logprob': -0.11422253847122192, 'compression_ratio': 1.694915254237288, 'no_speech_prob': 0.1438514143228531}, {'id': 285, 'seek': 137686, 'start': 1376.86, 'end': 1383.54, 'text': ' So it has put together all the things one after the other and then assigned addresses', 'tokens': [50364, 407, 309, 575, 829, 1214, 439, 264, 721, 472, 934, 264, 661, 293, 550, 13279, 16862, 50698], 'temperature': 0.0, 'avg_logprob': -0.1589662233988444, 'compression_ratio': 1.8310810810810811, 'no_speech_prob': 0.29987427592277527}, {'id': 286, 'seek': 137686, 'start': 1383.54, 'end': 1386.2199999999998, 'text': ' on what refers to what.', 'tokens': [50698, 322, 437, 14942, 281, 437, 13, 50832], 'temperature': 0.0, 'avg_logprob': -0.1589662233988444, 'compression_ratio': 1.8310810810810811, 'no_speech_prob': 0.29987427592277527}, {'id': 287, 'seek': 137686, 'start': 1386.2199999999998, 'end': 1395.26, 'text': ' So here in foo we refer to var so that reference what changed to address 150 and foo refers', 'tokens': [50832, 407, 510, 294, 726, 78, 321, 2864, 281, 1374, 370, 300, 6408, 437, 3105, 281, 2985, 8451, 293, 726, 78, 14942, 51284], 'temperature': 0.0, 'avg_logprob': -0.1589662233988444, 'compression_ratio': 1.8310810810810811, 'no_speech_prob': 0.29987427592277527}, {'id': 288, 'seek': 137686, 'start': 1395.26, 'end': 1401.12, 'text': ' to var2 so that reference what changed to address 154.', 'tokens': [51284, 281, 1374, 17, 370, 300, 6408, 437, 3105, 281, 2985, 2119, 19, 13, 51577], 'temperature': 0.0, 'avg_logprob': -0.1589662233988444, 'compression_ratio': 1.8310810810810811, 'no_speech_prob': 0.29987427592277527}, {'id': 289, 'seek': 137686, 'start': 1401.12, 'end': 1404.1799999999998, 'text': ' Is that clear?', 'tokens': [51577, 1119, 300, 1850, 30, 51730], 'temperature': 0.0, 'avg_logprob': -0.1589662233988444, 'compression_ratio': 1.8310810810810811, 'no_speech_prob': 0.29987427592277527}, {'id': 290, 'seek': 140418, 'start': 1404.18, 'end': 1413.6200000000001, 'text': ' Now what I said is symbol resolution associates each reference with a single definition.', 'tokens': [50364, 823, 437, 286, 848, 307, 5986, 8669, 36914, 1184, 6408, 365, 257, 2167, 7123, 13, 50836], 'temperature': 0.0, 'avg_logprob': -0.10974616270798904, 'compression_ratio': 1.4609929078014185, 'no_speech_prob': 0.0258954968303442}, {'id': 291, 'seek': 140418, 'start': 1413.6200000000001, 'end': 1417.22, 'text': ' What if there are multiple definitions?', 'tokens': [50836, 708, 498, 456, 366, 3866, 21988, 30, 51016], 'temperature': 0.0, 'avg_logprob': -0.10974616270798904, 'compression_ratio': 1.4609929078014185, 'no_speech_prob': 0.0258954968303442}, {'id': 292, 'seek': 140418, 'start': 1417.22, 'end': 1421.6000000000001, 'text': ' So what if something like this is done?', 'tokens': [51016, 407, 437, 498, 746, 411, 341, 307, 1096, 30, 51235], 'temperature': 0.0, 'avg_logprob': -0.10974616270798904, 'compression_ratio': 1.4609929078014185, 'no_speech_prob': 0.0258954968303442}, {'id': 293, 'seek': 140418, 'start': 1421.6000000000001, 'end': 1426.54, 'text': ' So I have int var and I have int var.', 'tokens': [51235, 407, 286, 362, 560, 1374, 293, 286, 362, 560, 1374, 13, 51482], 'temperature': 0.0, 'avg_logprob': -0.10974616270798904, 'compression_ratio': 1.4609929078014185, 'no_speech_prob': 0.0258954968303442}, {'id': 294, 'seek': 142654, 'start': 1426.54, 'end': 1434.42, 'text': ' I have defined it twice and I assign var here and I assign var and I read var here.', 'tokens': [50364, 286, 362, 7642, 309, 6091, 293, 286, 6269, 1374, 510, 293, 286, 6269, 1374, 293, 286, 1401, 1374, 510, 13, 50758], 'temperature': 0.0, 'avg_logprob': -0.137528839757887, 'compression_ratio': 1.4685314685314685, 'no_speech_prob': 0.06937164813280106}, {'id': 295, 'seek': 142654, 'start': 1434.42, 'end': 1443.58, 'text': ' What will happen?', 'tokens': [50758, 708, 486, 1051, 30, 51216], 'temperature': 0.0, 'avg_logprob': -0.137528839757887, 'compression_ratio': 1.4685314685314685, 'no_speech_prob': 0.06937164813280106}, {'id': 296, 'seek': 142654, 'start': 1443.58, 'end': 1450.62, 'text': ' Remember this is not external so both of them are trying to define it.', 'tokens': [51216, 5459, 341, 307, 406, 8320, 370, 1293, 295, 552, 366, 1382, 281, 6964, 309, 13, 51568], 'temperature': 0.0, 'avg_logprob': -0.137528839757887, 'compression_ratio': 1.4685314685314685, 'no_speech_prob': 0.06937164813280106}, {'id': 297, 'seek': 142654, 'start': 1450.62, 'end': 1454.22, 'text': ' How many of you think it is an error?', 'tokens': [51568, 1012, 867, 295, 291, 519, 309, 307, 364, 6713, 30, 51748], 'temperature': 0.0, 'avg_logprob': -0.137528839757887, 'compression_ratio': 1.4685314685314685, 'no_speech_prob': 0.06937164813280106}, {'id': 298, 'seek': 145422, 'start': 1454.22, 'end': 1456.66, 'text': ' How many of you think it is not an error?', 'tokens': [50364, 1012, 867, 295, 291, 519, 309, 307, 406, 364, 6713, 30, 50486], 'temperature': 0.0, 'avg_logprob': -0.21130923124460074, 'compression_ratio': 1.55, 'no_speech_prob': 0.17224271595478058}, {'id': 299, 'seek': 145422, 'start': 1456.66, 'end': 1471.3, 'text': ' Or you have lost faith on blue linker to give any meaningful error?', 'tokens': [50486, 1610, 291, 362, 2731, 4522, 322, 3344, 2113, 260, 281, 976, 604, 10995, 6713, 30, 51218], 'temperature': 0.0, 'avg_logprob': -0.21130923124460074, 'compression_ratio': 1.55, 'no_speech_prob': 0.17224271595478058}, {'id': 300, 'seek': 145422, 'start': 1471.3, 'end': 1482.8600000000001, 'text': ' So whoever thinks it is not an error can you explain why it is not an error?', 'tokens': [51218, 407, 11387, 7309, 309, 307, 406, 364, 6713, 393, 291, 2903, 983, 309, 307, 406, 364, 6713, 30, 51796], 'temperature': 0.0, 'avg_logprob': -0.21130923124460074, 'compression_ratio': 1.55, 'no_speech_prob': 0.17224271595478058}, {'id': 301, 'seek': 148286, 'start': 1482.86, 'end': 1492.1799999999998, 'text': ' So it is actually not an error.', 'tokens': [50364, 407, 309, 307, 767, 406, 364, 6713, 13, 50830], 'temperature': 0.0, 'avg_logprob': -0.18879869709844174, 'compression_ratio': 1.8611111111111112, 'no_speech_prob': 0.20081885159015656}, {'id': 302, 'seek': 148286, 'start': 1492.1799999999998, 'end': 1494.3799999999999, 'text': ' But it is defined twice.', 'tokens': [50830, 583, 309, 307, 7642, 6091, 13, 50940], 'temperature': 0.0, 'avg_logprob': -0.18879869709844174, 'compression_ratio': 1.8611111111111112, 'no_speech_prob': 0.20081885159015656}, {'id': 303, 'seek': 148286, 'start': 1494.3799999999999, 'end': 1495.6599999999999, 'text': ' So let us look at it this way.', 'tokens': [50940, 407, 718, 505, 574, 412, 309, 341, 636, 13, 51004], 'temperature': 0.0, 'avg_logprob': -0.18879869709844174, 'compression_ratio': 1.8611111111111112, 'no_speech_prob': 0.20081885159015656}, {'id': 304, 'seek': 148286, 'start': 1495.6599999999999, 'end': 1501.5, 'text': ' So let us say they belong to so when I compile object file of this I will see var belongs', 'tokens': [51004, 407, 718, 505, 584, 436, 5784, 281, 370, 562, 286, 31413, 2657, 3991, 295, 341, 286, 486, 536, 1374, 12953, 51296], 'temperature': 0.0, 'avg_logprob': -0.18879869709844174, 'compression_ratio': 1.8611111111111112, 'no_speech_prob': 0.20081885159015656}, {'id': 305, 'seek': 148286, 'start': 1501.5, 'end': 1506.5, 'text': ' in data section and when I compile this file I will see var belongs in data section.', 'tokens': [51296, 294, 1412, 3541, 293, 562, 286, 31413, 341, 3991, 286, 486, 536, 1374, 12953, 294, 1412, 3541, 13, 51546], 'temperature': 0.0, 'avg_logprob': -0.18879869709844174, 'compression_ratio': 1.8611111111111112, 'no_speech_prob': 0.20081885159015656}, {'id': 306, 'seek': 148286, 'start': 1506.5, 'end': 1512.4199999999998, 'text': ' Now does this var refer to this var or so where will this var come from?', 'tokens': [51546, 823, 775, 341, 1374, 2864, 281, 341, 1374, 420, 370, 689, 486, 341, 1374, 808, 490, 30, 51842], 'temperature': 0.0, 'avg_logprob': -0.18879869709844174, 'compression_ratio': 1.8611111111111112, 'no_speech_prob': 0.20081885159015656}, {'id': 307, 'seek': 151242, 'start': 1512.5, 'end': 1522.5800000000002, 'text': ' So are you saying this program is going to print 0?', 'tokens': [50368, 407, 366, 291, 1566, 341, 1461, 307, 516, 281, 4482, 1958, 30, 50872], 'temperature': 0.0, 'avg_logprob': -0.18558496417421283, 'compression_ratio': 1.5408805031446542, 'no_speech_prob': 0.0031171287409961224}, {'id': 308, 'seek': 151242, 'start': 1522.5800000000002, 'end': 1529.74, 'text': ' How many of you think this program will print 0 after linking?', 'tokens': [50872, 1012, 867, 295, 291, 519, 341, 1461, 486, 4482, 1958, 934, 25775, 30, 51230], 'temperature': 0.0, 'avg_logprob': -0.18558496417421283, 'compression_ratio': 1.5408805031446542, 'no_speech_prob': 0.0031171287409961224}, {'id': 309, 'seek': 151242, 'start': 1529.74, 'end': 1532.54, 'text': ' Does everyone think it is 0?', 'tokens': [51230, 4402, 1518, 519, 309, 307, 1958, 30, 51370], 'temperature': 0.0, 'avg_logprob': -0.18558496417421283, 'compression_ratio': 1.5408805031446542, 'no_speech_prob': 0.0031171287409961224}, {'id': 310, 'seek': 151242, 'start': 1532.54, 'end': 1536.94, 'text': ' So it should have been error ideally but that is not the case.', 'tokens': [51370, 407, 309, 820, 362, 668, 6713, 22915, 457, 300, 307, 406, 264, 1389, 13, 51590], 'temperature': 0.0, 'avg_logprob': -0.18558496417421283, 'compression_ratio': 1.5408805031446542, 'no_speech_prob': 0.0031171287409961224}, {'id': 311, 'seek': 151242, 'start': 1536.94, 'end': 1539.98, 'text': ' So what is the next meaningful answer?', 'tokens': [51590, 407, 437, 307, 264, 958, 10995, 1867, 30, 51742], 'temperature': 0.0, 'avg_logprob': -0.18558496417421283, 'compression_ratio': 1.5408805031446542, 'no_speech_prob': 0.0031171287409961224}, {'id': 312, 'seek': 153998, 'start': 1540.82, 'end': 1542.82, 'text': ' 0.', 'tokens': [50406, 1958, 13, 50506], 'temperature': 0.0, 'avg_logprob': -0.293092629005169, 'compression_ratio': 1.3471074380165289, 'no_speech_prob': 0.035087790340185165}, {'id': 313, 'seek': 153998, 'start': 1542.82, 'end': 1548.98, 'text': ' Because we are printing var which belongs in this file and in this file var is 0.', 'tokens': [50506, 1436, 321, 366, 14699, 1374, 597, 12953, 294, 341, 3991, 293, 294, 341, 3991, 1374, 307, 1958, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.293092629005169, 'compression_ratio': 1.3471074380165289, 'no_speech_prob': 0.035087790340185165}, {'id': 314, 'seek': 153998, 'start': 1548.98, 'end': 1554.02, 'text': ' Let us try that.', 'tokens': [50814, 961, 505, 853, 300, 13, 51066], 'temperature': 0.0, 'avg_logprob': -0.293092629005169, 'compression_ratio': 1.3471074380165289, 'no_speech_prob': 0.035087790340185165}, {'id': 315, 'seek': 153998, 'start': 1554.02, 'end': 1563.6200000000001, 'text': ' You guys are up for a surprise.', 'tokens': [51066, 509, 1074, 366, 493, 337, 257, 6365, 13, 51546], 'temperature': 0.0, 'avg_logprob': -0.293092629005169, 'compression_ratio': 1.3471074380165289, 'no_speech_prob': 0.035087790340185165}, {'id': 316, 'seek': 153998, 'start': 1563.6200000000001, 'end': 1565.22, 'text': ' I have this.', 'tokens': [51546, 286, 362, 341, 13, 51626], 'temperature': 0.0, 'avg_logprob': -0.293092629005169, 'compression_ratio': 1.3471074380165289, 'no_speech_prob': 0.035087790340185165}, {'id': 317, 'seek': 153998, 'start': 1565.22, 'end': 1569.02, 'text': ' I have file 2.c.', 'tokens': [51626, 286, 362, 3991, 568, 13, 66, 13, 51816], 'temperature': 0.0, 'avg_logprob': -0.293092629005169, 'compression_ratio': 1.3471074380165289, 'no_speech_prob': 0.035087790340185165}, {'id': 318, 'seek': 156902, 'start': 1569.02, 'end': 1577.34, 'text': ' So I say int var and in foo I do var is equal to 10.', 'tokens': [50364, 407, 286, 584, 560, 1374, 293, 294, 726, 78, 286, 360, 1374, 307, 2681, 281, 1266, 13, 50780], 'temperature': 0.0, 'avg_logprob': -0.3169670433833681, 'compression_ratio': 1.088235294117647, 'no_speech_prob': 0.5577499866485596}, {'id': 319, 'seek': 156902, 'start': 1577.34, 'end': 1582.54, 'text': ' And here I print var.', 'tokens': [50780, 400, 510, 286, 4482, 1374, 13, 51040], 'temperature': 0.0, 'avg_logprob': -0.3169670433833681, 'compression_ratio': 1.088235294117647, 'no_speech_prob': 0.5577499866485596}, {'id': 320, 'seek': 158254, 'start': 1582.54, 'end': 1601.42, 'text': ' Gcc file 1.c file 2.c dash.', 'tokens': [50364, 460, 1914, 3991, 502, 13, 66, 3991, 568, 13, 66, 8240, 13, 51308], 'temperature': 0.0, 'avg_logprob': -0.3852198264178108, 'compression_ratio': 1.0804597701149425, 'no_speech_prob': 0.021159350872039795}, {'id': 321, 'seek': 158254, 'start': 1601.42, 'end': 1604.34, 'text': ' Printed 10.', 'tokens': [51308, 34439, 292, 1266, 13, 51454], 'temperature': 0.0, 'avg_logprob': -0.3852198264178108, 'compression_ratio': 1.0804597701149425, 'no_speech_prob': 0.021159350872039795}, {'id': 322, 'seek': 158254, 'start': 1604.34, 'end': 1608.02, 'text': ' So both the meaningful things which you were thinking.', 'tokens': [51454, 407, 1293, 264, 10995, 721, 597, 291, 645, 1953, 13, 51638], 'temperature': 0.0, 'avg_logprob': -0.3852198264178108, 'compression_ratio': 1.0804597701149425, 'no_speech_prob': 0.021159350872039795}, {'id': 323, 'seek': 160802, 'start': 1608.02, 'end': 1613.1, 'text': ' So first of all it did not issue error that you should have suspected by now that it does', 'tokens': [50364, 407, 700, 295, 439, 309, 630, 406, 2734, 6713, 300, 291, 820, 362, 26439, 538, 586, 300, 309, 775, 50618], 'temperature': 0.0, 'avg_logprob': -0.1799538803100586, 'compression_ratio': 1.4173228346456692, 'no_speech_prob': 0.2788759171962738}, {'id': 324, 'seek': 160802, 'start': 1613.1, 'end': 1615.62, 'text': ' not give any errors.', 'tokens': [50618, 406, 976, 604, 13603, 13, 50744], 'temperature': 0.0, 'avg_logprob': -0.1799538803100586, 'compression_ratio': 1.4173228346456692, 'no_speech_prob': 0.2788759171962738}, {'id': 325, 'seek': 160802, 'start': 1615.62, 'end': 1633.94, 'text': ' But on top of it, it says that this var is actually same as this var.', 'tokens': [50744, 583, 322, 1192, 295, 309, 11, 309, 1619, 300, 341, 1374, 307, 767, 912, 382, 341, 1374, 13, 51660], 'temperature': 0.0, 'avg_logprob': -0.1799538803100586, 'compression_ratio': 1.4173228346456692, 'no_speech_prob': 0.2788759171962738}, {'id': 326, 'seek': 163394, 'start': 1633.94, 'end': 1639.26, 'text': ' So linker somehow said that both are var but both are actually same.', 'tokens': [50364, 407, 2113, 260, 6063, 848, 300, 1293, 366, 1374, 457, 1293, 366, 767, 912, 13, 50630], 'temperature': 0.0, 'avg_logprob': -0.14432413918631418, 'compression_ratio': 1.488235294117647, 'no_speech_prob': 0.08492384105920792}, {'id': 327, 'seek': 163394, 'start': 1639.26, 'end': 1650.74, 'text': ' So linker ended up saying that there is only one var which exists.', 'tokens': [50630, 407, 2113, 260, 4590, 493, 1566, 300, 456, 307, 787, 472, 1374, 597, 8198, 13, 51204], 'temperature': 0.0, 'avg_logprob': -0.14432413918631418, 'compression_ratio': 1.488235294117647, 'no_speech_prob': 0.08492384105920792}, {'id': 328, 'seek': 163394, 'start': 1650.74, 'end': 1653.9, 'text': ' This is one of the quirks in language c.', 'tokens': [51204, 639, 307, 472, 295, 264, 35645, 1694, 294, 2856, 269, 13, 51362], 'temperature': 0.0, 'avg_logprob': -0.14432413918631418, 'compression_ratio': 1.488235294117647, 'no_speech_prob': 0.08492384105920792}, {'id': 329, 'seek': 163394, 'start': 1653.9, 'end': 1656.42, 'text': ' It is called tentative definitions.', 'tokens': [51362, 467, 307, 1219, 7054, 1166, 21988, 13, 51488], 'temperature': 0.0, 'avg_logprob': -0.14432413918631418, 'compression_ratio': 1.488235294117647, 'no_speech_prob': 0.08492384105920792}, {'id': 330, 'seek': 163394, 'start': 1656.42, 'end': 1661.6200000000001, 'text': ' How many of you have heard of this term?', 'tokens': [51488, 1012, 867, 295, 291, 362, 2198, 295, 341, 1433, 30, 51748], 'temperature': 0.0, 'avg_logprob': -0.14432413918631418, 'compression_ratio': 1.488235294117647, 'no_speech_prob': 0.08492384105920792}, {'id': 331, 'seek': 166162, 'start': 1661.62, 'end': 1678.02, 'text': ' So the program which I showed in the morning, this one.', 'tokens': [50364, 407, 264, 1461, 597, 286, 4712, 294, 264, 2446, 11, 341, 472, 13, 51184], 'temperature': 0.0, 'avg_logprob': -0.23704366385936737, 'compression_ratio': 1.1826923076923077, 'no_speech_prob': 0.15595287084579468}, {'id': 332, 'seek': 166162, 'start': 1678.02, 'end': 1683.6599999999999, 'text': ' This also works because of this quirk called tentative definitions.', 'tokens': [51184, 639, 611, 1985, 570, 295, 341, 421, 18610, 1219, 7054, 1166, 21988, 13, 51466], 'temperature': 0.0, 'avg_logprob': -0.23704366385936737, 'compression_ratio': 1.1826923076923077, 'no_speech_prob': 0.15595287084579468}, {'id': 333, 'seek': 168366, 'start': 1684.66, 'end': 1692.94, 'text': ' So c says, anything which you define which is uninitialized, the definition is actually', 'tokens': [50414, 407, 269, 1619, 11, 1340, 597, 291, 6964, 597, 307, 43456, 270, 831, 1602, 11, 264, 7123, 307, 767, 50828], 'temperature': 0.0, 'avg_logprob': -0.25618043493052, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.10649248212575912}, {'id': 334, 'seek': 168366, 'start': 1692.94, 'end': 1693.94, 'text': ' tentative.', 'tokens': [50828, 7054, 1166, 13, 50878], 'temperature': 0.0, 'avg_logprob': -0.25618043493052, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.10649248212575912}, {'id': 335, 'seek': 168366, 'start': 1693.94, 'end': 1697.8600000000001, 'text': ' It is not final definition.', 'tokens': [50878, 467, 307, 406, 2572, 7123, 13, 51074], 'temperature': 0.0, 'avg_logprob': -0.25618043493052, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.10649248212575912}, {'id': 336, 'seek': 168366, 'start': 1697.8600000000001, 'end': 1702.38, 'text': ' It is not.', 'tokens': [51074, 467, 307, 406, 13, 51300], 'temperature': 0.0, 'avg_logprob': -0.25618043493052, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.10649248212575912}, {'id': 337, 'seek': 168366, 'start': 1702.38, 'end': 1708.46, 'text': ' I mean you can think of it logically that way but it is not actually that.', 'tokens': [51300, 286, 914, 291, 393, 519, 295, 309, 38887, 300, 636, 457, 309, 307, 406, 767, 300, 13, 51604], 'temperature': 0.0, 'avg_logprob': -0.25618043493052, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.10649248212575912}, {'id': 338, 'seek': 170846, 'start': 1708.54, 'end': 1715.3, 'text': ' And c then allows everyone to define tentative definitions and so on.', 'tokens': [50368, 400, 269, 550, 4045, 1518, 281, 6964, 7054, 1166, 21988, 293, 370, 322, 13, 50706], 'temperature': 0.0, 'avg_logprob': -0.16431255340576173, 'compression_ratio': 1.64, 'no_speech_prob': 0.09520472586154938}, {'id': 339, 'seek': 170846, 'start': 1715.3, 'end': 1720.92, 'text': ' And finally only one will be chosen.', 'tokens': [50706, 400, 2721, 787, 472, 486, 312, 8614, 13, 50987], 'temperature': 0.0, 'avg_logprob': -0.16431255340576173, 'compression_ratio': 1.64, 'no_speech_prob': 0.09520472586154938}, {'id': 340, 'seek': 170846, 'start': 1720.92, 'end': 1726.78, 'text': ' So these are treated as something called as common block symbols.', 'tokens': [50987, 407, 613, 366, 8668, 382, 746, 1219, 382, 2689, 3461, 16944, 13, 51280], 'temperature': 0.0, 'avg_logprob': -0.16431255340576173, 'compression_ratio': 1.64, 'no_speech_prob': 0.09520472586154938}, {'id': 341, 'seek': 170846, 'start': 1726.78, 'end': 1734.66, 'text': ' So whenever I define this variable var, this is not actually true definition.', 'tokens': [51280, 407, 5699, 286, 6964, 341, 7006, 1374, 11, 341, 307, 406, 767, 2074, 7123, 13, 51674], 'temperature': 0.0, 'avg_logprob': -0.16431255340576173, 'compression_ratio': 1.64, 'no_speech_prob': 0.09520472586154938}, {'id': 342, 'seek': 170846, 'start': 1734.66, 'end': 1737.24, 'text': ' c says it is a tentative definition.', 'tokens': [51674, 269, 1619, 309, 307, 257, 7054, 1166, 7123, 13, 51803], 'temperature': 0.0, 'avg_logprob': -0.16431255340576173, 'compression_ratio': 1.64, 'no_speech_prob': 0.09520472586154938}, {'id': 343, 'seek': 173724, 'start': 1737.24, 'end': 1741.16, 'text': ' When it encounters this, it is a tentative definition.', 'tokens': [50364, 1133, 309, 26310, 341, 11, 309, 307, 257, 7054, 1166, 7123, 13, 50560], 'temperature': 0.0, 'avg_logprob': -0.13554744098497473, 'compression_ratio': 1.7835051546391754, 'no_speech_prob': 0.0032200333662331104}, {'id': 344, 'seek': 173724, 'start': 1741.16, 'end': 1745.6, 'text': ' And if it did not find any other definition, one of the tentative definitions became the', 'tokens': [50560, 400, 498, 309, 630, 406, 915, 604, 661, 7123, 11, 472, 295, 264, 7054, 1166, 21988, 3062, 264, 50782], 'temperature': 0.0, 'avg_logprob': -0.13554744098497473, 'compression_ratio': 1.7835051546391754, 'no_speech_prob': 0.0032200333662331104}, {'id': 345, 'seek': 173724, 'start': 1745.6, 'end': 1748.32, 'text': ' true definition.', 'tokens': [50782, 2074, 7123, 13, 50918], 'temperature': 0.0, 'avg_logprob': -0.13554744098497473, 'compression_ratio': 1.7835051546391754, 'no_speech_prob': 0.0032200333662331104}, {'id': 346, 'seek': 173724, 'start': 1748.32, 'end': 1750.16, 'text': ' And that is why this code worked.', 'tokens': [50918, 400, 300, 307, 983, 341, 3089, 2732, 13, 51010], 'temperature': 0.0, 'avg_logprob': -0.13554744098497473, 'compression_ratio': 1.7835051546391754, 'no_speech_prob': 0.0032200333662331104}, {'id': 347, 'seek': 173724, 'start': 1750.16, 'end': 1754.96, 'text': ' Same thing happened when we had this, when the file 2 defined it.', 'tokens': [51010, 10635, 551, 2011, 562, 321, 632, 341, 11, 562, 264, 3991, 568, 7642, 309, 13, 51250], 'temperature': 0.0, 'avg_logprob': -0.13554744098497473, 'compression_ratio': 1.7835051546391754, 'no_speech_prob': 0.0032200333662331104}, {'id': 348, 'seek': 173724, 'start': 1754.96, 'end': 1762.08, 'text': ' So when linker saw var here and var here, it says one of them is tentative and I will', 'tokens': [51250, 407, 562, 2113, 260, 1866, 1374, 510, 293, 1374, 510, 11, 309, 1619, 472, 295, 552, 307, 7054, 1166, 293, 286, 486, 51606], 'temperature': 0.0, 'avg_logprob': -0.13554744098497473, 'compression_ratio': 1.7835051546391754, 'no_speech_prob': 0.0032200333662331104}, {'id': 349, 'seek': 176208, 'start': 1762.08, 'end': 1768.76, 'text': ' still look for a final definition and it does not find it so it picks one of them.', 'tokens': [50364, 920, 574, 337, 257, 2572, 7123, 293, 309, 775, 406, 915, 309, 370, 309, 16137, 472, 295, 552, 13, 50698], 'temperature': 0.0, 'avg_logprob': -0.23565709590911865, 'compression_ratio': 1.5925925925925926, 'no_speech_prob': 0.020955955609679222}, {'id': 350, 'seek': 176208, 'start': 1768.76, 'end': 1769.76, 'text': ' Arbitrary.', 'tokens': [50698, 1587, 5260, 81, 822, 13, 50748], 'temperature': 0.0, 'avg_logprob': -0.23565709590911865, 'compression_ratio': 1.5925925925925926, 'no_speech_prob': 0.020955955609679222}, {'id': 351, 'seek': 176208, 'start': 1769.76, 'end': 1776.12, 'text': ' We will come to that.', 'tokens': [50748, 492, 486, 808, 281, 300, 13, 51066], 'temperature': 0.0, 'avg_logprob': -0.23565709590911865, 'compression_ratio': 1.5925925925925926, 'no_speech_prob': 0.020955955609679222}, {'id': 352, 'seek': 176208, 'start': 1776.12, 'end': 1780.0, 'text': ' So these are actually called as common block symbols.', 'tokens': [51066, 407, 613, 366, 767, 1219, 382, 2689, 3461, 16944, 13, 51260], 'temperature': 0.0, 'avg_logprob': -0.23565709590911865, 'compression_ratio': 1.5925925925925926, 'no_speech_prob': 0.020955955609679222}, {'id': 353, 'seek': 176208, 'start': 1780.0, 'end': 1785.28, 'text': ' Remember we saw something like com here when we had uninitialized variable.', 'tokens': [51260, 5459, 321, 1866, 746, 411, 395, 510, 562, 321, 632, 43456, 270, 831, 1602, 7006, 13, 51524], 'temperature': 0.0, 'avg_logprob': -0.23565709590911865, 'compression_ratio': 1.5925925925925926, 'no_speech_prob': 0.020955955609679222}, {'id': 354, 'seek': 176208, 'start': 1785.28, 'end': 1789.8799999999999, 'text': ' So this was actually referring to common block symbols.', 'tokens': [51524, 407, 341, 390, 767, 13761, 281, 2689, 3461, 16944, 13, 51754], 'temperature': 0.0, 'avg_logprob': -0.23565709590911865, 'compression_ratio': 1.5925925925925926, 'no_speech_prob': 0.020955955609679222}, {'id': 355, 'seek': 178988, 'start': 1789.88, 'end': 1792.1000000000001, 'text': ' The history is in Fortran.', 'tokens': [50364, 440, 2503, 307, 294, 11002, 4257, 13, 50475], 'temperature': 0.0, 'avg_logprob': -0.1032032739548456, 'compression_ratio': 1.7395833333333333, 'no_speech_prob': 0.010324051603674889}, {'id': 356, 'seek': 178988, 'start': 1792.1000000000001, 'end': 1797.4, 'text': ' So Fortran had this concept called as common block symbols.', 'tokens': [50475, 407, 11002, 4257, 632, 341, 3410, 1219, 382, 2689, 3461, 16944, 13, 50740], 'temperature': 0.0, 'avg_logprob': -0.1032032739548456, 'compression_ratio': 1.7395833333333333, 'no_speech_prob': 0.010324051603674889}, {'id': 357, 'seek': 178988, 'start': 1797.4, 'end': 1800.24, 'text': ' So in Fortran the semantics were slightly different.', 'tokens': [50740, 407, 294, 11002, 4257, 264, 4361, 45298, 645, 4748, 819, 13, 50882], 'temperature': 0.0, 'avg_logprob': -0.1032032739548456, 'compression_ratio': 1.7395833333333333, 'no_speech_prob': 0.010324051603674889}, {'id': 358, 'seek': 178988, 'start': 1800.24, 'end': 1808.74, 'text': ' In Fortran the semantics were every object file can define a variable with the same name', 'tokens': [50882, 682, 11002, 4257, 264, 4361, 45298, 645, 633, 2657, 3991, 393, 6964, 257, 7006, 365, 264, 912, 1315, 51307], 'temperature': 0.0, 'avg_logprob': -0.1032032739548456, 'compression_ratio': 1.7395833333333333, 'no_speech_prob': 0.010324051603674889}, {'id': 359, 'seek': 178988, 'start': 1808.74, 'end': 1812.7800000000002, 'text': ' of different sizes.', 'tokens': [51307, 295, 819, 11602, 13, 51509], 'temperature': 0.0, 'avg_logprob': -0.1032032739548456, 'compression_ratio': 1.7395833333333333, 'no_speech_prob': 0.010324051603674889}, {'id': 360, 'seek': 178988, 'start': 1812.7800000000002, 'end': 1818.96, 'text': ' So every file is not only allowed to define a tentative definition, but the sizes can', 'tokens': [51509, 407, 633, 3991, 307, 406, 787, 4350, 281, 6964, 257, 7054, 1166, 7123, 11, 457, 264, 11602, 393, 51818], 'temperature': 0.0, 'avg_logprob': -0.1032032739548456, 'compression_ratio': 1.7395833333333333, 'no_speech_prob': 0.010324051603674889}, {'id': 361, 'seek': 181896, 'start': 1819.04, 'end': 1826.8400000000001, 'text': ' actually be different across different files and the largest one will be chosen.', 'tokens': [50368, 767, 312, 819, 2108, 819, 7098, 293, 264, 6443, 472, 486, 312, 8614, 13, 50758], 'temperature': 0.0, 'avg_logprob': -0.10233245751796624, 'compression_ratio': 1.6787564766839378, 'no_speech_prob': 0.01743900589644909}, {'id': 362, 'seek': 181896, 'start': 1826.8400000000001, 'end': 1832.96, 'text': ' That was the semantics in Fortran and those were called as common block symbols.', 'tokens': [50758, 663, 390, 264, 4361, 45298, 294, 11002, 4257, 293, 729, 645, 1219, 382, 2689, 3461, 16944, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.10233245751796624, 'compression_ratio': 1.6787564766839378, 'no_speech_prob': 0.01743900589644909}, {'id': 363, 'seek': 181896, 'start': 1832.96, 'end': 1840.52, 'text': ' This is a very crude way of implementing unions in C. So if you did not have unions in C,', 'tokens': [51064, 639, 307, 257, 588, 30796, 636, 295, 18114, 24914, 294, 383, 13, 407, 498, 291, 630, 406, 362, 24914, 294, 383, 11, 51442], 'temperature': 0.0, 'avg_logprob': -0.10233245751796624, 'compression_ratio': 1.6787564766839378, 'no_speech_prob': 0.01743900589644909}, {'id': 364, 'seek': 181896, 'start': 1840.52, 'end': 1848.72, 'text': ' one of the ways to implement union was through common blocks in Fortran.', 'tokens': [51442, 472, 295, 264, 2098, 281, 4445, 11671, 390, 807, 2689, 8474, 294, 11002, 4257, 13, 51852], 'temperature': 0.0, 'avg_logprob': -0.10233245751796624, 'compression_ratio': 1.6787564766839378, 'no_speech_prob': 0.01743900589644909}, {'id': 365, 'seek': 184872, 'start': 1849.48, 'end': 1855.64, 'text': ' So this actually forces C language to still carry forward that semantics because C programs', 'tokens': [50402, 407, 341, 767, 5874, 383, 2856, 281, 920, 3985, 2128, 300, 4361, 45298, 570, 383, 4268, 50710], 'temperature': 0.0, 'avg_logprob': -0.22679841241171195, 'compression_ratio': 1.6818181818181819, 'no_speech_prob': 0.06368578970432281}, {'id': 366, 'seek': 184872, 'start': 1855.64, 'end': 1861.0, 'text': ' have to be compatible with Fortran programs because there were tons of Fortran code written', 'tokens': [50710, 362, 281, 312, 18218, 365, 11002, 4257, 4268, 570, 456, 645, 9131, 295, 11002, 4257, 3089, 3720, 50978], 'temperature': 0.0, 'avg_logprob': -0.22679841241171195, 'compression_ratio': 1.6818181818181819, 'no_speech_prob': 0.06368578970432281}, {'id': 367, 'seek': 184872, 'start': 1861.0, 'end': 1867.84, 'text': ' already and part of that code was ported to C, but things still had to be linked together', 'tokens': [50978, 1217, 293, 644, 295, 300, 3089, 390, 2436, 292, 281, 383, 11, 457, 721, 920, 632, 281, 312, 9408, 1214, 51320], 'temperature': 0.0, 'avg_logprob': -0.22679841241171195, 'compression_ratio': 1.6818181818181819, 'no_speech_prob': 0.06368578970432281}, {'id': 368, 'seek': 184872, 'start': 1867.84, 'end': 1873.84, 'text': ' and that would work only if the language semantics were same.', 'tokens': [51320, 293, 300, 576, 589, 787, 498, 264, 2856, 4361, 45298, 645, 912, 13, 51620], 'temperature': 0.0, 'avg_logprob': -0.22679841241171195, 'compression_ratio': 1.6818181818181819, 'no_speech_prob': 0.06368578970432281}, {'id': 369, 'seek': 184872, 'start': 1873.84, 'end': 1876.34, 'text': " That's where the problem comes in.", 'tokens': [51620, 663, 311, 689, 264, 1154, 1487, 294, 13, 51745], 'temperature': 0.0, 'avg_logprob': -0.22679841241171195, 'compression_ratio': 1.6818181818181819, 'no_speech_prob': 0.06368578970432281}, {'id': 370, 'seek': 187634, 'start': 1876.9599999999998, 'end': 1885.3, 'text': ' So these codes actually work because of Fortran and you can actually avoid this by passing', 'tokens': [50395, 407, 613, 14211, 767, 589, 570, 295, 11002, 4257, 293, 291, 393, 767, 5042, 341, 538, 8437, 50812], 'temperature': 0.0, 'avg_logprob': -0.1801141529548459, 'compression_ratio': 1.2627118644067796, 'no_speech_prob': 0.008575881831347942}, {'id': 371, 'seek': 187634, 'start': 1885.3, 'end': 1888.22, 'text': ' a flag called F no common.', 'tokens': [50812, 257, 7166, 1219, 479, 572, 2689, 13, 50958], 'temperature': 0.0, 'avg_logprob': -0.1801141529548459, 'compression_ratio': 1.2627118644067796, 'no_speech_prob': 0.008575881831347942}, {'id': 372, 'seek': 187634, 'start': 1888.22, 'end': 1891.3799999999999, 'text': " So let's look at magic of that.", 'tokens': [50958, 407, 718, 311, 574, 412, 5585, 295, 300, 13, 51116], 'temperature': 0.0, 'avg_logprob': -0.1801141529548459, 'compression_ratio': 1.2627118644067796, 'no_speech_prob': 0.008575881831347942}, {'id': 373, 'seek': 189138, 'start': 1891.42, 'end': 1908.0200000000002, 'text': ' So if I say here it detects that there are some multiple definitions happening.', 'tokens': [50366, 407, 498, 286, 584, 510, 309, 5531, 82, 300, 456, 366, 512, 3866, 21988, 2737, 13, 51196], 'temperature': 0.0, 'avg_logprob': -0.19844739966922337, 'compression_ratio': 1.1886792452830188, 'no_speech_prob': 0.018258947879076004}, {'id': 374, 'seek': 189138, 'start': 1908.0200000000002, 'end': 1911.3400000000001, 'text': ' Does that make sense?', 'tokens': [51196, 4402, 300, 652, 2020, 30, 51362], 'temperature': 0.0, 'avg_logprob': -0.19844739966922337, 'compression_ratio': 1.1886792452830188, 'no_speech_prob': 0.018258947879076004}, {'id': 375, 'seek': 189138, 'start': 1911.3400000000001, 'end': 1920.9, 'text': ' Now what happens in C++?', 'tokens': [51362, 823, 437, 2314, 294, 383, 25472, 30, 51840], 'temperature': 0.0, 'avg_logprob': -0.19844739966922337, 'compression_ratio': 1.1886792452830188, 'no_speech_prob': 0.018258947879076004}, {'id': 376, 'seek': 192090, 'start': 1921.42, 'end': 1927.22, 'text': ' How many of you have heard of this term called as one definition rule or ODR?', 'tokens': [50390, 1012, 867, 295, 291, 362, 2198, 295, 341, 1433, 1219, 382, 472, 7123, 4978, 420, 422, 9301, 30, 50680], 'temperature': 0.0, 'avg_logprob': -0.13207976477486746, 'compression_ratio': 1.456140350877193, 'no_speech_prob': 0.000677117146551609}, {'id': 377, 'seek': 192090, 'start': 1927.22, 'end': 1930.22, 'text': ' So C++ has a different semantics.', 'tokens': [50680, 407, 383, 25472, 575, 257, 819, 4361, 45298, 13, 50830], 'temperature': 0.0, 'avg_logprob': -0.13207976477486746, 'compression_ratio': 1.456140350877193, 'no_speech_prob': 0.000677117146551609}, {'id': 378, 'seek': 192090, 'start': 1930.22, 'end': 1937.92, 'text': ' C++ says that every variable at link time must have a single definition and no more', 'tokens': [50830, 383, 25472, 1619, 300, 633, 7006, 412, 2113, 565, 1633, 362, 257, 2167, 7123, 293, 572, 544, 51215], 'temperature': 0.0, 'avg_logprob': -0.13207976477486746, 'compression_ratio': 1.456140350877193, 'no_speech_prob': 0.000677117146551609}, {'id': 379, 'seek': 192090, 'start': 1937.92, 'end': 1939.5800000000002, 'text': ' and no less.', 'tokens': [51215, 293, 572, 1570, 13, 51298], 'temperature': 0.0, 'avg_logprob': -0.13207976477486746, 'compression_ratio': 1.456140350877193, 'no_speech_prob': 0.000677117146551609}, {'id': 380, 'seek': 192090, 'start': 1939.5800000000002, 'end': 1943.72, 'text': ' So C++ actually errors out on this code.', 'tokens': [51298, 407, 383, 25472, 767, 13603, 484, 322, 341, 3089, 13, 51505], 'temperature': 0.0, 'avg_logprob': -0.13207976477486746, 'compression_ratio': 1.456140350877193, 'no_speech_prob': 0.000677117146551609}, {'id': 381, 'seek': 194372, 'start': 1943.72, 'end': 1954.76, 'text': ' So if you compile this code as C++ code, it errors out saying there are multiple definitions.', 'tokens': [50364, 407, 498, 291, 31413, 341, 3089, 382, 383, 25472, 3089, 11, 309, 13603, 484, 1566, 456, 366, 3866, 21988, 13, 50916], 'temperature': 0.0, 'avg_logprob': -0.13660775502522787, 'compression_ratio': 1.6166666666666667, 'no_speech_prob': 0.0015486638294532895}, {'id': 382, 'seek': 194372, 'start': 1954.76, 'end': 1961.52, 'text': ' It errors out in this case as well as it errors out at link stage.', 'tokens': [50916, 467, 13603, 484, 294, 341, 1389, 382, 731, 382, 309, 13603, 484, 412, 2113, 3233, 13, 51254], 'temperature': 0.0, 'avg_logprob': -0.13660775502522787, 'compression_ratio': 1.6166666666666667, 'no_speech_prob': 0.0015486638294532895}, {'id': 383, 'seek': 194372, 'start': 1961.52, 'end': 1966.56, 'text': ' So C++ that way is slightly better because it says that every variable must be defined', 'tokens': [51254, 407, 383, 25472, 300, 636, 307, 4748, 1101, 570, 309, 1619, 300, 633, 7006, 1633, 312, 7642, 51506], 'temperature': 0.0, 'avg_logprob': -0.13660775502522787, 'compression_ratio': 1.6166666666666667, 'no_speech_prob': 0.0015486638294532895}, {'id': 384, 'seek': 194372, 'start': 1966.56, 'end': 1968.28, 'text': ' only once.', 'tokens': [51506, 787, 1564, 13, 51592], 'temperature': 0.0, 'avg_logprob': -0.13660775502522787, 'compression_ratio': 1.6166666666666667, 'no_speech_prob': 0.0015486638294532895}, {'id': 385, 'seek': 194372, 'start': 1968.28, 'end': 1971.96, 'text': ' So this will actually error out.', 'tokens': [51592, 407, 341, 486, 767, 6713, 484, 13, 51776], 'temperature': 0.0, 'avg_logprob': -0.13660775502522787, 'compression_ratio': 1.6166666666666667, 'no_speech_prob': 0.0015486638294532895}, {'id': 386, 'seek': 197196, 'start': 1972.2, 'end': 1975.44, 'text': ' But there are some exceptions to one definition rule.', 'tokens': [50376, 583, 456, 366, 512, 22847, 281, 472, 7123, 4978, 13, 50538], 'temperature': 0.0, 'avg_logprob': -0.17322622934977214, 'compression_ratio': 1.527363184079602, 'no_speech_prob': 0.0007912411820143461}, {'id': 387, 'seek': 197196, 'start': 1975.44, 'end': 1982.1200000000001, 'text': ' So nothing comes without caveat and this we will see tomorrow in what case two things', 'tokens': [50538, 407, 1825, 1487, 1553, 43012, 293, 341, 321, 486, 536, 4153, 294, 437, 1389, 732, 721, 50872], 'temperature': 0.0, 'avg_logprob': -0.17322622934977214, 'compression_ratio': 1.527363184079602, 'no_speech_prob': 0.0007912411820143461}, {'id': 388, 'seek': 197196, 'start': 1982.1200000000001, 'end': 1988.54, 'text': ' can have multiple definitions even in C++.', 'tokens': [50872, 393, 362, 3866, 21988, 754, 294, 383, 25472, 13, 51193], 'temperature': 0.0, 'avg_logprob': -0.17322622934977214, 'compression_ratio': 1.527363184079602, 'no_speech_prob': 0.0007912411820143461}, {'id': 389, 'seek': 197196, 'start': 1988.54, 'end': 1991.7, 'text': ' But got what we discussed so far?', 'tokens': [51193, 583, 658, 437, 321, 7152, 370, 1400, 30, 51351], 'temperature': 0.0, 'avg_logprob': -0.17322622934977214, 'compression_ratio': 1.527363184079602, 'no_speech_prob': 0.0007912411820143461}, {'id': 390, 'seek': 197196, 'start': 1991.7, 'end': 2000.14, 'text': " Now one of the things in C to avoid this pitfall, you don't want accidentally to something", 'tokens': [51351, 823, 472, 295, 264, 721, 294, 383, 281, 5042, 341, 10147, 6691, 11, 291, 500, 380, 528, 15715, 281, 746, 51773], 'temperature': 0.0, 'avg_logprob': -0.17322622934977214, 'compression_ratio': 1.527363184079602, 'no_speech_prob': 0.0007912411820143461}, {'id': 391, 'seek': 200014, 'start': 2000.14, 'end': 2007.1000000000001, 'text': ' to link and even multiple definitions become allowed.', 'tokens': [50364, 281, 2113, 293, 754, 3866, 21988, 1813, 4350, 13, 50712], 'temperature': 0.0, 'avg_logprob': -0.14530277252197266, 'compression_ratio': 1.2653061224489797, 'no_speech_prob': 0.5918240547180176}, {'id': 392, 'seek': 200014, 'start': 2007.1000000000001, 'end': 2014.6200000000001, 'text': ' What C says is only uninitialized variables have tentative definition.', 'tokens': [50712, 708, 383, 1619, 307, 787, 43456, 270, 831, 1602, 9102, 362, 7054, 1166, 7123, 13, 51088], 'temperature': 0.0, 'avg_logprob': -0.14530277252197266, 'compression_ratio': 1.2653061224489797, 'no_speech_prob': 0.5918240547180176}, {'id': 393, 'seek': 201462, 'start': 2014.62, 'end': 2036.06, 'text': ' So if I initialize this variable, now C also errors out.', 'tokens': [50364, 407, 498, 286, 5883, 1125, 341, 7006, 11, 586, 383, 611, 13603, 484, 13, 51436], 'temperature': 0.0, 'avg_logprob': -0.20266789860195583, 'compression_ratio': 0.875, 'no_speech_prob': 0.11258193850517273}, {'id': 394, 'seek': 203606, 'start': 2036.06, 'end': 2054.42, 'text': ' So if you look at where it is no longer COM, it belongs in data section.', 'tokens': [50364, 407, 498, 291, 574, 412, 689, 309, 307, 572, 2854, 35074, 11, 309, 12953, 294, 1412, 3541, 13, 51282], 'temperature': 0.0, 'avg_logprob': -0.21615899575723185, 'compression_ratio': 1.174757281553398, 'no_speech_prob': 0.13637666404247284}, {'id': 395, 'seek': 203606, 'start': 2054.42, 'end': 2065.34, 'text': ' If this was uninitialized, this belonged in COM.', 'tokens': [51282, 759, 341, 390, 43456, 270, 831, 1602, 11, 341, 28611, 294, 35074, 13, 51828], 'temperature': 0.0, 'avg_logprob': -0.21615899575723185, 'compression_ratio': 1.174757281553398, 'no_speech_prob': 0.13637666404247284}, {'id': 396, 'seek': 206534, 'start': 2065.34, 'end': 2070.86, 'text': " So any uninitialized variable belongs in COM and that's why these tentative definitions", 'tokens': [50364, 407, 604, 43456, 270, 831, 1602, 7006, 12953, 294, 35074, 293, 300, 311, 983, 613, 7054, 1166, 21988, 50640], 'temperature': 0.0, 'avg_logprob': -0.14815849262279468, 'compression_ratio': 1.6208530805687205, 'no_speech_prob': 0.003816581331193447}, {'id': 397, 'seek': 206534, 'start': 2070.86, 'end': 2073.86, 'text': ' come into picture.', 'tokens': [50640, 808, 666, 3036, 13, 50790], 'temperature': 0.0, 'avg_logprob': -0.14815849262279468, 'compression_ratio': 1.6208530805687205, 'no_speech_prob': 0.003816581331193447}, {'id': 398, 'seek': 206534, 'start': 2073.86, 'end': 2083.46, 'text': ' So every time you write a global variable, initialize it in C to avoid these problems.', 'tokens': [50790, 407, 633, 565, 291, 2464, 257, 4338, 7006, 11, 5883, 1125, 309, 294, 383, 281, 5042, 613, 2740, 13, 51270], 'temperature': 0.0, 'avg_logprob': -0.14815849262279468, 'compression_ratio': 1.6208530805687205, 'no_speech_prob': 0.003816581331193447}, {'id': 399, 'seek': 206534, 'start': 2083.46, 'end': 2088.82, 'text': ' Now how does linker, so we saw what it is in C, but how does linker actually deal with', 'tokens': [51270, 823, 577, 775, 2113, 260, 11, 370, 321, 1866, 437, 309, 307, 294, 383, 11, 457, 577, 775, 2113, 260, 767, 2028, 365, 51538], 'temperature': 0.0, 'avg_logprob': -0.14815849262279468, 'compression_ratio': 1.6208530805687205, 'no_speech_prob': 0.003816581331193447}, {'id': 400, 'seek': 206534, 'start': 2088.82, 'end': 2090.58, 'text': ' it?', 'tokens': [51538, 309, 30, 51626], 'temperature': 0.0, 'avg_logprob': -0.14815849262279468, 'compression_ratio': 1.6208530805687205, 'no_speech_prob': 0.003816581331193447}, {'id': 401, 'seek': 206534, 'start': 2090.58, 'end': 2094.94, 'text': ' So linker actually treats every symbol in two categories.', 'tokens': [51626, 407, 2113, 260, 767, 19566, 633, 5986, 294, 732, 10479, 13, 51844], 'temperature': 0.0, 'avg_logprob': -0.14815849262279468, 'compression_ratio': 1.6208530805687205, 'no_speech_prob': 0.003816581331193447}, {'id': 402, 'seek': 209494, 'start': 2094.94, 'end': 2100.46, 'text': ' Linker says every symbol is either a strong symbol or a weak symbol.', 'tokens': [50364, 8466, 260, 1619, 633, 5986, 307, 2139, 257, 2068, 5986, 420, 257, 5336, 5986, 13, 50640], 'temperature': 0.0, 'avg_logprob': -0.13188262724540603, 'compression_ratio': 1.6097560975609757, 'no_speech_prob': 0.30693092942237854}, {'id': 403, 'seek': 209494, 'start': 2100.46, 'end': 2109.2200000000003, 'text': ' So as far as linker goes, every function or initialized global is a strong symbol.', 'tokens': [50640, 407, 382, 1400, 382, 2113, 260, 1709, 11, 633, 2445, 420, 5883, 1602, 4338, 307, 257, 2068, 5986, 13, 51078], 'temperature': 0.0, 'avg_logprob': -0.13188262724540603, 'compression_ratio': 1.6097560975609757, 'no_speech_prob': 0.30693092942237854}, {'id': 404, 'seek': 209494, 'start': 2109.2200000000003, 'end': 2115.7000000000003, 'text': ' Anything uninitialized global and few other things which we will see later are categorized', 'tokens': [51078, 11998, 43456, 270, 831, 1602, 4338, 293, 1326, 661, 721, 597, 321, 486, 536, 1780, 366, 19250, 1602, 51402], 'temperature': 0.0, 'avg_logprob': -0.13188262724540603, 'compression_ratio': 1.6097560975609757, 'no_speech_prob': 0.30693092942237854}, {'id': 405, 'seek': 209494, 'start': 2115.7000000000003, 'end': 2118.86, 'text': ' as weak.', 'tokens': [51402, 382, 5336, 13, 51560], 'temperature': 0.0, 'avg_logprob': -0.13188262724540603, 'compression_ratio': 1.6097560975609757, 'no_speech_prob': 0.30693092942237854}, {'id': 406, 'seek': 209494, 'start': 2118.86, 'end': 2120.62, 'text': ' Is it clear?', 'tokens': [51560, 1119, 309, 1850, 30, 51648], 'temperature': 0.0, 'avg_logprob': -0.13188262724540603, 'compression_ratio': 1.6097560975609757, 'no_speech_prob': 0.30693092942237854}, {'id': 407, 'seek': 212062, 'start': 2120.62, 'end': 2129.2599999999998, 'text': ' So as far as C goes, uninitialized globals are weak, everything else is strong.', 'tokens': [50364, 407, 382, 1400, 382, 383, 1709, 11, 43456, 270, 831, 1602, 16125, 1124, 366, 5336, 11, 1203, 1646, 307, 2068, 13, 50796], 'temperature': 0.0, 'avg_logprob': -0.09357814596156881, 'compression_ratio': 2.132596685082873, 'no_speech_prob': 0.1643856167793274}, {'id': 408, 'seek': 212062, 'start': 2129.2599999999998, 'end': 2135.62, 'text': ' So this symbol is strong because it is initialized, this symbol is strong because it is a function,', 'tokens': [50796, 407, 341, 5986, 307, 2068, 570, 309, 307, 5883, 1602, 11, 341, 5986, 307, 2068, 570, 309, 307, 257, 2445, 11, 51114], 'temperature': 0.0, 'avg_logprob': -0.09357814596156881, 'compression_ratio': 2.132596685082873, 'no_speech_prob': 0.1643856167793274}, {'id': 409, 'seek': 212062, 'start': 2135.62, 'end': 2142.1, 'text': ' this symbol is strong because it is a function, this symbol is weak because it is uninitialized.', 'tokens': [51114, 341, 5986, 307, 2068, 570, 309, 307, 257, 2445, 11, 341, 5986, 307, 5336, 570, 309, 307, 43456, 270, 831, 1602, 13, 51438], 'temperature': 0.0, 'avg_logprob': -0.09357814596156881, 'compression_ratio': 2.132596685082873, 'no_speech_prob': 0.1643856167793274}, {'id': 410, 'seek': 212062, 'start': 2142.1, 'end': 2145.18, 'text': ' Now there are rules of how to resolve things.', 'tokens': [51438, 823, 456, 366, 4474, 295, 577, 281, 14151, 721, 13, 51592], 'temperature': 0.0, 'avg_logprob': -0.09357814596156881, 'compression_ratio': 2.132596685082873, 'no_speech_prob': 0.1643856167793274}, {'id': 411, 'seek': 212062, 'start': 2145.18, 'end': 2148.74, 'text': ' So what linker says is multiple strong symbols are not allowed.', 'tokens': [51592, 407, 437, 2113, 260, 1619, 307, 3866, 2068, 16944, 366, 406, 4350, 13, 51770], 'temperature': 0.0, 'avg_logprob': -0.09357814596156881, 'compression_ratio': 2.132596685082873, 'no_speech_prob': 0.1643856167793274}, {'id': 412, 'seek': 214874, 'start': 2148.74, 'end': 2156.2999999999997, 'text': ' So if you had two strong symbols, it is not allowed and linker will error out.', 'tokens': [50364, 407, 498, 291, 632, 732, 2068, 16944, 11, 309, 307, 406, 4350, 293, 2113, 260, 486, 6713, 484, 13, 50742], 'temperature': 0.0, 'avg_logprob': -0.1738884822431817, 'compression_ratio': 1.7900552486187846, 'no_speech_prob': 0.10083788633346558}, {'id': 413, 'seek': 214874, 'start': 2156.2999999999997, 'end': 2166.5, 'text': ' Rule two is if you have a strong symbol and a weak symbol, choose the strong symbol.', 'tokens': [50742, 27533, 732, 307, 498, 291, 362, 257, 2068, 5986, 293, 257, 5336, 5986, 11, 2826, 264, 2068, 5986, 13, 51252], 'temperature': 0.0, 'avg_logprob': -0.1738884822431817, 'compression_ratio': 1.7900552486187846, 'no_speech_prob': 0.10083788633346558}, {'id': 414, 'seek': 214874, 'start': 2166.5, 'end': 2170.04, 'text': ' And all the references are changed to point to the strong symbol.', 'tokens': [51252, 400, 439, 264, 15400, 366, 3105, 281, 935, 281, 264, 2068, 5986, 13, 51429], 'temperature': 0.0, 'avg_logprob': -0.1738884822431817, 'compression_ratio': 1.7900552486187846, 'no_speech_prob': 0.10083788633346558}, {'id': 415, 'seek': 214874, 'start': 2170.04, 'end': 2175.74, 'text': ' So finally there will be only one symbol which will be the strong symbol variant.', 'tokens': [51429, 407, 2721, 456, 486, 312, 787, 472, 5986, 597, 486, 312, 264, 2068, 5986, 17501, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.1738884822431817, 'compression_ratio': 1.7900552486187846, 'no_speech_prob': 0.10083788633346558}, {'id': 416, 'seek': 214874, 'start': 2175.74, 'end': 2176.74, 'text': ' Is it clear?', 'tokens': [51714, 1119, 309, 1850, 30, 51764], 'temperature': 0.0, 'avg_logprob': -0.1738884822431817, 'compression_ratio': 1.7900552486187846, 'no_speech_prob': 0.10083788633346558}, {'id': 417, 'seek': 217674, 'start': 2177.74, 'end': 2187.5, 'text': ' Rule three is about if there are multiple weak symbols, then choose any weak symbol.', 'tokens': [50414, 27533, 1045, 307, 466, 498, 456, 366, 3866, 5336, 16944, 11, 550, 2826, 604, 5336, 5986, 13, 50902], 'temperature': 0.0, 'avg_logprob': -0.21796033002328183, 'compression_ratio': 1.494186046511628, 'no_speech_prob': 0.008555378764867783}, {'id': 418, 'seek': 217674, 'start': 2187.5, 'end': 2192.02, 'text': " So if you had strong, you give preference to strong, but if you don't have any strong", 'tokens': [50902, 407, 498, 291, 632, 2068, 11, 291, 976, 17502, 281, 2068, 11, 457, 498, 291, 500, 380, 362, 604, 2068, 51128], 'temperature': 0.0, 'avg_logprob': -0.21796033002328183, 'compression_ratio': 1.494186046511628, 'no_speech_prob': 0.008555378764867783}, {'id': 419, 'seek': 217674, 'start': 2192.02, 'end': 2197.06, 'text': ' symbol, then you pick anyone.', 'tokens': [51128, 5986, 11, 550, 291, 1888, 2878, 13, 51380], 'temperature': 0.0, 'avg_logprob': -0.21796033002328183, 'compression_ratio': 1.494186046511628, 'no_speech_prob': 0.008555378764867783}, {'id': 420, 'seek': 217674, 'start': 2197.06, 'end': 2199.4199999999996, 'text': ' Is it clear?', 'tokens': [51380, 1119, 309, 1850, 30, 51498], 'temperature': 0.0, 'avg_logprob': -0.21796033002328183, 'compression_ratio': 1.494186046511628, 'no_speech_prob': 0.008555378764867783}, {'id': 421, 'seek': 217674, 'start': 2199.4199999999996, 'end': 2203.74, 'text': ' Now quizzes, what will happen in this case?', 'tokens': [51498, 823, 48955, 11, 437, 486, 1051, 294, 341, 1389, 30, 51714], 'temperature': 0.0, 'avg_logprob': -0.21796033002328183, 'compression_ratio': 1.494186046511628, 'no_speech_prob': 0.008555378764867783}, {'id': 422, 'seek': 220674, 'start': 2206.74, 'end': 2209.3599999999997, 'text': ' Error out.', 'tokens': [50364, 3300, 2874, 484, 13, 50495], 'temperature': 0.0, 'avg_logprob': -0.1631379831032675, 'compression_ratio': 1.5714285714285714, 'no_speech_prob': 0.03296751528978348}, {'id': 423, 'seek': 220674, 'start': 2209.3599999999997, 'end': 2212.9599999999996, 'text': ' You have faith in linker that it will error out.', 'tokens': [50495, 509, 362, 4522, 294, 2113, 260, 300, 309, 486, 6713, 484, 13, 50675], 'temperature': 0.0, 'avg_logprob': -0.1631379831032675, 'compression_ratio': 1.5714285714285714, 'no_speech_prob': 0.03296751528978348}, {'id': 424, 'seek': 220674, 'start': 2212.9599999999996, 'end': 2222.74, 'text': ' It will error out because var is strong here and strong here, two strong not allowed error.', 'tokens': [50675, 467, 486, 6713, 484, 570, 1374, 307, 2068, 510, 293, 2068, 510, 11, 732, 2068, 406, 4350, 6713, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.1631379831032675, 'compression_ratio': 1.5714285714285714, 'no_speech_prob': 0.03296751528978348}, {'id': 425, 'seek': 220674, 'start': 2222.74, 'end': 2233.64, 'text': ' In this case, no error and only one copy of var will remain finally.', 'tokens': [51164, 682, 341, 1389, 11, 572, 6713, 293, 787, 472, 5055, 295, 1374, 486, 6222, 2721, 13, 51709], 'temperature': 0.0, 'avg_logprob': -0.1631379831032675, 'compression_ratio': 1.5714285714285714, 'no_speech_prob': 0.03296751528978348}, {'id': 426, 'seek': 223364, 'start': 2233.64, 'end': 2238.4, 'text': " So there are no two var's earlier as you were thinking that there is one var here and", 'tokens': [50364, 407, 456, 366, 572, 732, 1374, 311, 3071, 382, 291, 645, 1953, 300, 456, 307, 472, 1374, 510, 293, 50602], 'temperature': 0.0, 'avg_logprob': -0.20890570420485277, 'compression_ratio': 1.4903225806451612, 'no_speech_prob': 0.00755224097520113}, {'id': 427, 'seek': 223364, 'start': 2238.4, 'end': 2239.4, 'text': ' one var here.', 'tokens': [50602, 472, 1374, 510, 13, 50652], 'temperature': 0.0, 'avg_logprob': -0.20890570420485277, 'compression_ratio': 1.4903225806451612, 'no_speech_prob': 0.00755224097520113}, {'id': 428, 'seek': 223364, 'start': 2239.4, 'end': 2244.4, 'text': ' There is no, there is only single copy of var.', 'tokens': [50652, 821, 307, 572, 11, 456, 307, 787, 2167, 5055, 295, 1374, 13, 50902], 'temperature': 0.0, 'avg_logprob': -0.20890570420485277, 'compression_ratio': 1.4903225806451612, 'no_speech_prob': 0.00755224097520113}, {'id': 429, 'seek': 223364, 'start': 2244.4, 'end': 2248.8399999999997, 'text': ' What happens in this case?', 'tokens': [50902, 708, 2314, 294, 341, 1389, 30, 51124], 'temperature': 0.0, 'avg_logprob': -0.20890570420485277, 'compression_ratio': 1.4903225806451612, 'no_speech_prob': 0.00755224097520113}, {'id': 430, 'seek': 223364, 'start': 2248.8399999999997, 'end': 2253.16, 'text': ' Remember the rule which I told says pick any weak symbol.', 'tokens': [51124, 5459, 264, 4978, 597, 286, 1907, 1619, 1888, 604, 5336, 5986, 13, 51340], 'temperature': 0.0, 'avg_logprob': -0.20890570420485277, 'compression_ratio': 1.4903225806451612, 'no_speech_prob': 0.00755224097520113}, {'id': 431, 'seek': 225316, 'start': 2253.16, 'end': 2281.72, 'text': " It didn't say anything about size or anything.", 'tokens': [50364, 467, 994, 380, 584, 1340, 466, 2744, 420, 1340, 13, 51792], 'temperature': 0.0, 'avg_logprob': -0.2808516877038138, 'compression_ratio': 1.0222222222222221, 'no_speech_prob': 0.8075393438339233}, {'id': 432, 'seek': 228172, 'start': 2281.72, 'end': 2283.9199999999996, 'text': ' No error, but what will actually happen?', 'tokens': [50364, 883, 6713, 11, 457, 437, 486, 767, 1051, 30, 50474], 'temperature': 0.0, 'avg_logprob': -0.2002066203526088, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.5473573803901672}, {'id': 433, 'seek': 228172, 'start': 2283.9199999999996, 'end': 2289.08, 'text': ' Which var will be picked up?', 'tokens': [50474, 3013, 1374, 486, 312, 6183, 493, 30, 50732], 'temperature': 0.0, 'avg_logprob': -0.2002066203526088, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.5473573803901672}, {'id': 434, 'seek': 228172, 'start': 2289.08, 'end': 2290.64, 'text': " You can't say, right?", 'tokens': [50732, 509, 393, 380, 584, 11, 558, 30, 50810], 'temperature': 0.0, 'avg_logprob': -0.2002066203526088, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.5473573803901672}, {'id': 435, 'seek': 228172, 'start': 2290.64, 'end': 2294.56, 'text': ' So does everyone agree that there is no error in this?', 'tokens': [50810, 407, 775, 1518, 3986, 300, 456, 307, 572, 6713, 294, 341, 30, 51006], 'temperature': 0.0, 'avg_logprob': -0.2002066203526088, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.5473573803901672}, {'id': 436, 'seek': 228172, 'start': 2294.56, 'end': 2298.12, 'text': ' Because both var here and here are weak, right?', 'tokens': [51006, 1436, 1293, 1374, 510, 293, 510, 366, 5336, 11, 558, 30, 51184], 'temperature': 0.0, 'avg_logprob': -0.2002066203526088, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.5473573803901672}, {'id': 437, 'seek': 228172, 'start': 2298.12, 'end': 2301.72, 'text': ' So linker is free to choose any one of them.', 'tokens': [51184, 407, 2113, 260, 307, 1737, 281, 2826, 604, 472, 295, 552, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.2002066203526088, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.5473573803901672}, {'id': 438, 'seek': 228172, 'start': 2301.72, 'end': 2309.08, 'text': " Now we don't even know whether linker will choose var which has 12 byte size or 8 byte", 'tokens': [51364, 823, 321, 500, 380, 754, 458, 1968, 2113, 260, 486, 2826, 1374, 597, 575, 2272, 40846, 2744, 420, 1649, 40846, 51732], 'temperature': 0.0, 'avg_logprob': -0.2002066203526088, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.5473573803901672}, {'id': 439, 'seek': 228172, 'start': 2309.08, 'end': 2311.4399999999996, 'text': ' size.', 'tokens': [51732, 2744, 13, 51850], 'temperature': 0.0, 'avg_logprob': -0.2002066203526088, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.5473573803901672}, {'id': 440, 'seek': 231144, 'start': 2311.44, 'end': 2314.48, 'text': ' Linker may choose any one of them.', 'tokens': [50364, 8466, 260, 815, 2826, 604, 472, 295, 552, 13, 50516], 'temperature': 0.0, 'avg_logprob': -0.3079506301879883, 'compression_ratio': 1.2615384615384615, 'no_speech_prob': 0.8182734251022339}, {'id': 441, 'seek': 231144, 'start': 2314.48, 'end': 2321.4, 'text': " And let's hypothetically assume if linker chose the one which has 12 byte size, what", 'tokens': [50516, 400, 718, 311, 24371, 22652, 6552, 498, 2113, 260, 5111, 264, 472, 597, 575, 2272, 40846, 2744, 11, 437, 50862], 'temperature': 0.0, 'avg_logprob': -0.3079506301879883, 'compression_ratio': 1.2615384615384615, 'no_speech_prob': 0.8182734251022339}, {'id': 442, 'seek': 231144, 'start': 2321.4, 'end': 2327.4, 'text': ' will be output of this code?', 'tokens': [50862, 486, 312, 5598, 295, 341, 3089, 30, 51162], 'temperature': 0.0, 'avg_logprob': -0.3079506301879883, 'compression_ratio': 1.2615384615384615, 'no_speech_prob': 0.8182734251022339}, {'id': 443, 'seek': 231144, 'start': 2327.4, 'end': 2338.8, 'text': ' So link, sorry.', 'tokens': [51162, 407, 2113, 11, 2597, 13, 51732], 'temperature': 0.0, 'avg_logprob': -0.3079506301879883, 'compression_ratio': 1.2615384615384615, 'no_speech_prob': 0.8182734251022339}, {'id': 444, 'seek': 233880, 'start': 2338.8, 'end': 2366.6000000000004, 'text': ' What if linker chose this var to resolve?', 'tokens': [50364, 708, 498, 2113, 260, 5111, 341, 1374, 281, 14151, 30, 51754], 'temperature': 0.0, 'avg_logprob': -0.5532720770154681, 'compression_ratio': 0.8367346938775511, 'no_speech_prob': 0.9884563684463501}, {'id': 445, 'seek': 236660, 'start': 2366.6, 'end': 2382.24, 'text': ' So, what will happen?', 'tokens': [50364, 407, 11, 437, 486, 1051, 30, 51146], 'temperature': 0.0, 'avg_logprob': -0.3774636586507161, 'compression_ratio': 1.1285714285714286, 'no_speech_prob': 0.4853292405605316}, {'id': 446, 'seek': 236660, 'start': 2382.24, 'end': 2388.0, 'text': ' So if linker chooses var to be 8 bytes, what will happen?', 'tokens': [51146, 407, 498, 2113, 260, 25963, 1374, 281, 312, 1649, 36088, 11, 437, 486, 1051, 30, 51434], 'temperature': 0.0, 'avg_logprob': -0.3774636586507161, 'compression_ratio': 1.1285714285714286, 'no_speech_prob': 0.4853292405605316}, {'id': 447, 'seek': 238800, 'start': 2388.0, 'end': 2394.24, 'text': ' Correct.', 'tokens': [50364, 12753, 13, 50676], 'temperature': 0.0, 'avg_logprob': -0.21526729769823028, 'compression_ratio': 1.2566371681415929, 'no_speech_prob': 0.3644789755344391}, {'id': 448, 'seek': 238800, 'start': 2394.24, 'end': 2399.6, 'text': ' So if a happens to be following var in terms of the memory addresses, a will actually get', 'tokens': [50676, 407, 498, 257, 2314, 281, 312, 3480, 1374, 294, 2115, 295, 264, 4675, 16862, 11, 257, 486, 767, 483, 50944], 'temperature': 0.0, 'avg_logprob': -0.21526729769823028, 'compression_ratio': 1.2566371681415929, 'no_speech_prob': 0.3644789755344391}, {'id': 449, 'seek': 238800, 'start': 2399.6, 'end': 2403.6, 'text': ' overwritten.', 'tokens': [50944, 670, 26859, 13, 51144], 'temperature': 0.0, 'avg_logprob': -0.21526729769823028, 'compression_ratio': 1.2566371681415929, 'no_speech_prob': 0.3644789755344391}, {'id': 450, 'seek': 238800, 'start': 2403.6, 'end': 2413.32, 'text': ' What will happen in this case?', 'tokens': [51144, 708, 486, 1051, 294, 341, 1389, 30, 51630], 'temperature': 0.0, 'avg_logprob': -0.21526729769823028, 'compression_ratio': 1.2566371681415929, 'no_speech_prob': 0.3644789755344391}, {'id': 451, 'seek': 241332, 'start': 2413.32, 'end': 2419.44, 'text': ' In the prior case, you might get lucky because if linker chooses this to be var, in this', 'tokens': [50364, 682, 264, 4059, 1389, 11, 291, 1062, 483, 6356, 570, 498, 2113, 260, 25963, 341, 281, 312, 1374, 11, 294, 341, 50670], 'temperature': 0.0, 'avg_logprob': -0.34587073744389046, 'compression_ratio': 1.5075757575757576, 'no_speech_prob': 0.6181401014328003}, {'id': 452, 'seek': 241332, 'start': 2419.44, 'end': 2425.52, 'text': ' case your luck runs out because linker has to choose this one because this is a strong', 'tokens': [50670, 1389, 428, 3668, 6676, 484, 570, 2113, 260, 575, 281, 2826, 341, 472, 570, 341, 307, 257, 2068, 50974], 'temperature': 0.0, 'avg_logprob': -0.34587073744389046, 'compression_ratio': 1.5075757575757576, 'no_speech_prob': 0.6181401014328003}, {'id': 453, 'seek': 241332, 'start': 2425.52, 'end': 2428.52, 'text': ' definition.', 'tokens': [50974, 7123, 13, 51124], 'temperature': 0.0, 'avg_logprob': -0.34587073744389046, 'compression_ratio': 1.5075757575757576, 'no_speech_prob': 0.6181401014328003}, {'id': 454, 'seek': 241332, 'start': 2428.52, 'end': 2431.52, 'text': ' Yes.', 'tokens': [51124, 1079, 13, 51274], 'temperature': 0.0, 'avg_logprob': -0.34587073744389046, 'compression_ratio': 1.5075757575757576, 'no_speech_prob': 0.6181401014328003}, {'id': 455, 'seek': 241332, 'start': 2431.52, 'end': 2434.76, 'text': ' Sorry.', 'tokens': [51274, 4919, 13, 51436], 'temperature': 0.0, 'avg_logprob': -0.34587073744389046, 'compression_ratio': 1.5075757575757576, 'no_speech_prob': 0.6181401014328003}, {'id': 456, 'seek': 243476, 'start': 2435.76, 'end': 2445.36, 'text': ' So, if you look at the rules which I told, when linker is resolving it is not looking', 'tokens': [50414, 407, 11, 498, 291, 574, 412, 264, 4474, 597, 286, 1907, 11, 562, 2113, 260, 307, 49940, 309, 307, 406, 1237, 50894], 'temperature': 0.0, 'avg_logprob': -0.18559382512019232, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.15560679137706757}, {'id': 457, 'seek': 243476, 'start': 2445.36, 'end': 2448.6000000000004, 'text': ' at any things like size and other things.', 'tokens': [50894, 412, 604, 721, 411, 2744, 293, 661, 721, 13, 51056], 'temperature': 0.0, 'avg_logprob': -0.18559382512019232, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.15560679137706757}, {'id': 458, 'seek': 243476, 'start': 2448.6000000000004, 'end': 2450.5600000000004, 'text': ' Just saying that, okay.', 'tokens': [51056, 1449, 1566, 300, 11, 1392, 13, 51154], 'temperature': 0.0, 'avg_logprob': -0.18559382512019232, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.15560679137706757}, {'id': 459, 'seek': 243476, 'start': 2450.5600000000004, 'end': 2455.7200000000003, 'text': ' And this is why it said that even variable could be a function and function could be', 'tokens': [51154, 400, 341, 307, 983, 309, 848, 300, 754, 7006, 727, 312, 257, 2445, 293, 2445, 727, 312, 51412], 'temperature': 0.0, 'avg_logprob': -0.18559382512019232, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.15560679137706757}, {'id': 460, 'seek': 243476, 'start': 2455.7200000000003, 'end': 2459.5600000000004, 'text': ' a variable which we saw just before the break.', 'tokens': [51412, 257, 7006, 597, 321, 1866, 445, 949, 264, 1821, 13, 51604], 'temperature': 0.0, 'avg_logprob': -0.18559382512019232, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.15560679137706757}, {'id': 461, 'seek': 243476, 'start': 2459.5600000000004, 'end': 2462.6000000000004, 'text': " So when it's resolving references, it's not looking at anything.", 'tokens': [51604, 407, 562, 309, 311, 49940, 15400, 11, 309, 311, 406, 1237, 412, 1340, 13, 51756], 'temperature': 0.0, 'avg_logprob': -0.18559382512019232, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.15560679137706757}, {'id': 462, 'seek': 246260, 'start': 2462.6, 'end': 2465.2, 'text': " It's just looking at name.", 'tokens': [50364, 467, 311, 445, 1237, 412, 1315, 13, 50494], 'temperature': 0.0, 'avg_logprob': -0.254365944280857, 'compression_ratio': 1.5873015873015872, 'no_speech_prob': 0.01097087748348713}, {'id': 463, 'seek': 246260, 'start': 2465.2, 'end': 2467.04, 'text': ' Yes.', 'tokens': [50494, 1079, 13, 50586], 'temperature': 0.0, 'avg_logprob': -0.254365944280857, 'compression_ratio': 1.5873015873015872, 'no_speech_prob': 0.01097087748348713}, {'id': 464, 'seek': 246260, 'start': 2467.04, 'end': 2476.92, 'text': ' So, this typically actually will fall into undefined behavior because this code is logically', 'tokens': [50586, 407, 11, 341, 5850, 767, 486, 2100, 666, 674, 5666, 2001, 5223, 570, 341, 3089, 307, 38887, 51080], 'temperature': 0.0, 'avg_logprob': -0.254365944280857, 'compression_ratio': 1.5873015873015872, 'no_speech_prob': 0.01097087748348713}, {'id': 465, 'seek': 246260, 'start': 2476.92, 'end': 2477.92, 'text': ' incorrect.', 'tokens': [51080, 18424, 13, 51130], 'temperature': 0.0, 'avg_logprob': -0.254365944280857, 'compression_ratio': 1.5873015873015872, 'no_speech_prob': 0.01097087748348713}, {'id': 466, 'seek': 246260, 'start': 2477.92, 'end': 2482.08, 'text': " There is no sane way to say what will happen in this code and that's why you shouldn't", 'tokens': [51130, 821, 307, 572, 45610, 636, 281, 584, 437, 486, 1051, 294, 341, 3089, 293, 300, 311, 983, 291, 4659, 380, 51338], 'temperature': 0.0, 'avg_logprob': -0.254365944280857, 'compression_ratio': 1.5873015873015872, 'no_speech_prob': 0.01097087748348713}, {'id': 467, 'seek': 246260, 'start': 2482.08, 'end': 2483.88, 'text': ' be writing these kind of codes.', 'tokens': [51338, 312, 3579, 613, 733, 295, 14211, 13, 51428], 'temperature': 0.0, 'avg_logprob': -0.254365944280857, 'compression_ratio': 1.5873015873015872, 'no_speech_prob': 0.01097087748348713}, {'id': 468, 'seek': 246260, 'start': 2483.88, 'end': 2487.2, 'text': ' These are use at your own risk kind of codes.', 'tokens': [51428, 1981, 366, 764, 412, 428, 1065, 3148, 733, 295, 14211, 13, 51594], 'temperature': 0.0, 'avg_logprob': -0.254365944280857, 'compression_ratio': 1.5873015873015872, 'no_speech_prob': 0.01097087748348713}, {'id': 469, 'seek': 248720, 'start': 2487.3999999999996, 'end': 2493.2, 'text': " So, don't say that we learned coding guidelines which said define two variables with the same", 'tokens': [50374, 407, 11, 500, 380, 584, 300, 321, 3264, 17720, 12470, 597, 848, 6964, 732, 9102, 365, 264, 912, 50664], 'temperature': 0.0, 'avg_logprob': -0.21326722039116752, 'compression_ratio': 1.6150627615062763, 'no_speech_prob': 0.014926707372069359}, {'id': 470, 'seek': 248720, 'start': 2493.2, 'end': 2494.7999999999997, 'text': ' name in multiple files.', 'tokens': [50664, 1315, 294, 3866, 7098, 13, 50744], 'temperature': 0.0, 'avg_logprob': -0.21326722039116752, 'compression_ratio': 1.6150627615062763, 'no_speech_prob': 0.014926707372069359}, {'id': 471, 'seek': 248720, 'start': 2494.7999999999997, 'end': 2497.7999999999997, 'text': " Don't do such things.", 'tokens': [50744, 1468, 380, 360, 1270, 721, 13, 50894], 'temperature': 0.0, 'avg_logprob': -0.21326722039116752, 'compression_ratio': 1.6150627615062763, 'no_speech_prob': 0.014926707372069359}, {'id': 472, 'seek': 248720, 'start': 2497.7999999999997, 'end': 2505.16, 'text': ' So, does everyone understand subtle difference between this case and this case?', 'tokens': [50894, 407, 11, 775, 1518, 1223, 13743, 2649, 1296, 341, 1389, 293, 341, 1389, 30, 51262], 'temperature': 0.0, 'avg_logprob': -0.21326722039116752, 'compression_ratio': 1.6150627615062763, 'no_speech_prob': 0.014926707372069359}, {'id': 473, 'seek': 248720, 'start': 2505.16, 'end': 2510.3999999999996, 'text': ' In this case, linker, you are forcing linker to choose this as the definition.', 'tokens': [51262, 682, 341, 1389, 11, 2113, 260, 11, 291, 366, 19030, 2113, 260, 281, 2826, 341, 382, 264, 7123, 13, 51524], 'temperature': 0.0, 'avg_logprob': -0.21326722039116752, 'compression_ratio': 1.6150627615062763, 'no_speech_prob': 0.014926707372069359}, {'id': 474, 'seek': 248720, 'start': 2510.3999999999996, 'end': 2515.2, 'text': ' That means you are guaranteed to override something which falls in this memory location', 'tokens': [51524, 663, 1355, 291, 366, 18031, 281, 42321, 746, 597, 8804, 294, 341, 4675, 4914, 51764], 'temperature': 0.0, 'avg_logprob': -0.21326722039116752, 'compression_ratio': 1.6150627615062763, 'no_speech_prob': 0.014926707372069359}, {'id': 475, 'seek': 251520, 'start': 2515.2, 'end': 2518.0, 'text': ' which in most likely case will be A.', 'tokens': [50364, 597, 294, 881, 3700, 1389, 486, 312, 316, 13, 50504], 'temperature': 0.0, 'avg_logprob': -0.31351856156891467, 'compression_ratio': 1.3515625, 'no_speech_prob': 0.01742101088166237}, {'id': 476, 'seek': 251520, 'start': 2523.2, 'end': 2528.7999999999997, 'text': ' So, are you still up and we can continue for some more time or you are tired?', 'tokens': [50764, 407, 11, 366, 291, 920, 493, 293, 321, 393, 2354, 337, 512, 544, 565, 420, 291, 366, 5868, 30, 51044], 'temperature': 0.0, 'avg_logprob': -0.31351856156891467, 'compression_ratio': 1.3515625, 'no_speech_prob': 0.01742101088166237}, {'id': 477, 'seek': 251520, 'start': 2533.2, 'end': 2537.0, 'text': ' So, the last thing which linker needs to do is relocation.', 'tokens': [51264, 407, 11, 264, 1036, 551, 597, 2113, 260, 2203, 281, 360, 307, 26981, 399, 13, 51454], 'temperature': 0.0, 'avg_logprob': -0.31351856156891467, 'compression_ratio': 1.3515625, 'no_speech_prob': 0.01742101088166237}, {'id': 478, 'seek': 253700, 'start': 2537.0, 'end': 2545.6, 'text': ' So, what will linker essentially do is merge these things.', 'tokens': [50364, 407, 11, 437, 486, 2113, 260, 4476, 360, 307, 22183, 613, 721, 13, 50794], 'temperature': 0.0, 'avg_logprob': -0.14289324933832342, 'compression_ratio': 1.625, 'no_speech_prob': 0.002285167807713151}, {'id': 479, 'seek': 253700, 'start': 2545.6, 'end': 2552.4, 'text': ' As a part of that, it is going to change addresses because data section might be leaving here', 'tokens': [50794, 1018, 257, 644, 295, 300, 11, 309, 307, 516, 281, 1319, 16862, 570, 1412, 3541, 1062, 312, 5012, 510, 51134], 'temperature': 0.0, 'avg_logprob': -0.14289324933832342, 'compression_ratio': 1.625, 'no_speech_prob': 0.002285167807713151}, {'id': 480, 'seek': 253700, 'start': 2552.4, 'end': 2558.4, 'text': ' at address 100, but in this case it might leave at address 10,000 and vice versa.', 'tokens': [51134, 412, 2985, 2319, 11, 457, 294, 341, 1389, 309, 1062, 1856, 412, 2985, 1266, 11, 1360, 293, 11964, 25650, 13, 51434], 'temperature': 0.0, 'avg_logprob': -0.14289324933832342, 'compression_ratio': 1.625, 'no_speech_prob': 0.002285167807713151}, {'id': 481, 'seek': 253700, 'start': 2558.4, 'end': 2563.6, 'text': ' So, what linker is doing is relocating various sections which were present in the object', 'tokens': [51434, 407, 11, 437, 2113, 260, 307, 884, 307, 26981, 990, 3683, 10863, 597, 645, 1974, 294, 264, 2657, 51694], 'temperature': 0.0, 'avg_logprob': -0.14289324933832342, 'compression_ratio': 1.625, 'no_speech_prob': 0.002285167807713151}, {'id': 482, 'seek': 253700, 'start': 2563.6, 'end': 2566.4, 'text': ' file to a different layout.', 'tokens': [51694, 3991, 281, 257, 819, 13333, 13, 51834], 'temperature': 0.0, 'avg_logprob': -0.14289324933832342, 'compression_ratio': 1.625, 'no_speech_prob': 0.002285167807713151}, {'id': 483, 'seek': 256640, 'start': 2566.4, 'end': 2575.2000000000003, 'text': ' Now, after relocating these things and together what you have is you have a executable file', 'tokens': [50364, 823, 11, 934, 26981, 990, 613, 721, 293, 1214, 437, 291, 362, 307, 291, 362, 257, 7568, 712, 3991, 50804], 'temperature': 0.0, 'avg_logprob': -0.23508096563405004, 'compression_ratio': 1.5128205128205128, 'no_speech_prob': 0.000368168402928859}, {'id': 484, 'seek': 256640, 'start': 2575.2000000000003, 'end': 2577.6, 'text': ' which has the final addresses.', 'tokens': [50804, 597, 575, 264, 2572, 16862, 13, 50924], 'temperature': 0.0, 'avg_logprob': -0.23508096563405004, 'compression_ratio': 1.5128205128205128, 'no_speech_prob': 0.000368168402928859}, {'id': 485, 'seek': 256640, 'start': 2577.6, 'end': 2584.0, 'text': ' Remember, assembler did not have this information.', 'tokens': [50924, 5459, 11, 8438, 1918, 630, 406, 362, 341, 1589, 13, 51244], 'temperature': 0.0, 'avg_logprob': -0.23508096563405004, 'compression_ratio': 1.5128205128205128, 'no_speech_prob': 0.000368168402928859}, {'id': 486, 'seek': 256640, 'start': 2584.0, 'end': 2592.1, 'text': ' So, assembler had to somehow say that change these references.', 'tokens': [51244, 407, 11, 8438, 1918, 632, 281, 6063, 584, 300, 1319, 613, 15400, 13, 51649], 'temperature': 0.0, 'avg_logprob': -0.23508096563405004, 'compression_ratio': 1.5128205128205128, 'no_speech_prob': 0.000368168402928859}, {'id': 487, 'seek': 259210, 'start': 2592.1, 'end': 2598.2999999999997, 'text': ' The way assembler does this is by doing something called as a relocation entry.', 'tokens': [50364, 440, 636, 8438, 1918, 775, 341, 307, 538, 884, 746, 1219, 382, 257, 26981, 399, 8729, 13, 50674], 'temperature': 0.0, 'avg_logprob': -0.1347037672996521, 'compression_ratio': 1.528735632183908, 'no_speech_prob': 0.01638026349246502}, {'id': 488, 'seek': 259210, 'start': 2598.2999999999997, 'end': 2602.7, 'text': ' So, there are two kinds of common relocations.', 'tokens': [50674, 407, 11, 456, 366, 732, 3685, 295, 2689, 26981, 763, 13, 50894], 'temperature': 0.0, 'avg_logprob': -0.1347037672996521, 'compression_ratio': 1.528735632183908, 'no_speech_prob': 0.01638026349246502}, {'id': 489, 'seek': 259210, 'start': 2602.7, 'end': 2609.9, 'text': ' One is R386PC32 and one is R38632 which we will see.', 'tokens': [50894, 1485, 307, 497, 12625, 21, 12986, 11440, 293, 472, 307, 497, 12625, 21, 11440, 597, 321, 486, 536, 13, 51254], 'temperature': 0.0, 'avg_logprob': -0.1347037672996521, 'compression_ratio': 1.528735632183908, 'no_speech_prob': 0.01638026349246502}, {'id': 490, 'seek': 259210, 'start': 2609.9, 'end': 2620.2999999999997, 'text': ' So, R386PC32 says change this value with the PC relative offset and R38632 says change', 'tokens': [51254, 407, 11, 497, 12625, 21, 12986, 11440, 1619, 1319, 341, 2158, 365, 264, 6465, 4972, 18687, 293, 497, 12625, 21, 11440, 1619, 1319, 51774], 'temperature': 0.0, 'avg_logprob': -0.1347037672996521, 'compression_ratio': 1.528735632183908, 'no_speech_prob': 0.01638026349246502}, {'id': 491, 'seek': 262030, 'start': 2620.5, 'end': 2622.9, 'text': ' this value with the address of whatever it is.', 'tokens': [50374, 341, 2158, 365, 264, 2985, 295, 2035, 309, 307, 13, 50494], 'temperature': 0.0, 'avg_logprob': -0.22609260644805565, 'compression_ratio': 1.5270935960591132, 'no_speech_prob': 0.0757325291633606}, {'id': 492, 'seek': 262030, 'start': 2622.9, 'end': 2624.3, 'text': ' We will see the details.', 'tokens': [50494, 492, 486, 536, 264, 4365, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.22609260644805565, 'compression_ratio': 1.5270935960591132, 'no_speech_prob': 0.0757325291633606}, {'id': 493, 'seek': 262030, 'start': 2624.3, 'end': 2628.1000000000004, 'text': ' I am just trying to give abstract way of what these do.', 'tokens': [50564, 286, 669, 445, 1382, 281, 976, 12649, 636, 295, 437, 613, 360, 13, 50754], 'temperature': 0.0, 'avg_logprob': -0.22609260644805565, 'compression_ratio': 1.5270935960591132, 'no_speech_prob': 0.0757325291633606}, {'id': 494, 'seek': 262030, 'start': 2628.1000000000004, 'end': 2630.2000000000003, 'text': ' Who defines these relocations?', 'tokens': [50754, 2102, 23122, 613, 26981, 763, 30, 50859], 'temperature': 0.0, 'avg_logprob': -0.22609260644805565, 'compression_ratio': 1.5270935960591132, 'no_speech_prob': 0.0757325291633606}, {'id': 495, 'seek': 262030, 'start': 2630.2000000000003, 'end': 2631.7000000000003, 'text': ' These are again part of the ABI.', 'tokens': [50859, 1981, 366, 797, 644, 295, 264, 316, 11291, 13, 50934], 'temperature': 0.0, 'avg_logprob': -0.22609260644805565, 'compression_ratio': 1.5270935960591132, 'no_speech_prob': 0.0757325291633606}, {'id': 496, 'seek': 262030, 'start': 2631.7000000000003, 'end': 2639.5, 'text': ' So, ABI will say that assembler should generate these relocations for this type of use.', 'tokens': [50934, 407, 11, 316, 11291, 486, 584, 300, 8438, 1918, 820, 8460, 613, 26981, 763, 337, 341, 2010, 295, 764, 13, 51324], 'temperature': 0.0, 'avg_logprob': -0.22609260644805565, 'compression_ratio': 1.5270935960591132, 'no_speech_prob': 0.0757325291633606}, {'id': 497, 'seek': 262030, 'start': 2639.5, 'end': 2644.9, 'text': ' Now, let us look at this code.', 'tokens': [51324, 823, 11, 718, 505, 574, 412, 341, 3089, 13, 51594], 'temperature': 0.0, 'avg_logprob': -0.22609260644805565, 'compression_ratio': 1.5270935960591132, 'no_speech_prob': 0.0757325291633606}, {'id': 498, 'seek': 264490, 'start': 2644.9, 'end': 2656.3, 'text': ' Let us say I have file 1 and I am calling function foo.', 'tokens': [50364, 961, 505, 584, 286, 362, 3991, 502, 293, 286, 669, 5141, 2445, 726, 78, 13, 50934], 'temperature': 0.0, 'avg_logprob': -0.3704780277452971, 'compression_ratio': 0.8870967741935484, 'no_speech_prob': 0.2727174758911133}, {'id': 499, 'seek': 265630, 'start': 2656.3, 'end': 2672.7000000000003, 'text': ' Now, when I do gcc dash c dash m32 foo dot c, sorry, file 1 dot c and let me do objdump', 'tokens': [50364, 823, 11, 562, 286, 360, 290, 1914, 8240, 269, 8240, 275, 11440, 726, 78, 5893, 269, 11, 2597, 11, 3991, 502, 5893, 269, 293, 718, 385, 360, 1111, 37109, 1420, 51184], 'temperature': 0.0, 'avg_logprob': -0.20115927575339734, 'compression_ratio': 1.416058394160584, 'no_speech_prob': 0.025542819872498512}, {'id': 500, 'seek': 265630, 'start': 2672.7000000000003, 'end': 2677.3, 'text': ' dash d file 1 dot o.', 'tokens': [51184, 8240, 274, 3991, 502, 5893, 277, 13, 51414], 'temperature': 0.0, 'avg_logprob': -0.20115927575339734, 'compression_ratio': 1.416058394160584, 'no_speech_prob': 0.025542819872498512}, {'id': 501, 'seek': 265630, 'start': 2677.3, 'end': 2680.94, 'text': ' What you see here is you see a call.', 'tokens': [51414, 708, 291, 536, 510, 307, 291, 536, 257, 818, 13, 51596], 'temperature': 0.0, 'avg_logprob': -0.20115927575339734, 'compression_ratio': 1.416058394160584, 'no_speech_prob': 0.025542819872498512}, {'id': 502, 'seek': 265630, 'start': 2680.94, 'end': 2683.5, 'text': ' This was supposed to be called to foo.', 'tokens': [51596, 639, 390, 3442, 281, 312, 1219, 281, 726, 78, 13, 51724], 'temperature': 0.0, 'avg_logprob': -0.20115927575339734, 'compression_ratio': 1.416058394160584, 'no_speech_prob': 0.025542819872498512}, {'id': 503, 'seek': 265630, 'start': 2683.5, 'end': 2684.5, 'text': ' Remember?', 'tokens': [51724, 5459, 30, 51774], 'temperature': 0.0, 'avg_logprob': -0.20115927575339734, 'compression_ratio': 1.416058394160584, 'no_speech_prob': 0.025542819872498512}, {'id': 504, 'seek': 268450, 'start': 2684.7, 'end': 2687.8, 'text': ' What you see here is some garbage stuff.', 'tokens': [50374, 708, 291, 536, 510, 307, 512, 14150, 1507, 13, 50529], 'temperature': 0.0, 'avg_logprob': -0.22384209230721716, 'compression_ratio': 1.5252525252525253, 'no_speech_prob': 0.0071160499937832355}, {'id': 505, 'seek': 268450, 'start': 2687.8, 'end': 2694.3, 'text': ' This is not even address of foo.', 'tokens': [50529, 639, 307, 406, 754, 2985, 295, 726, 78, 13, 50854], 'temperature': 0.0, 'avg_logprob': -0.22384209230721716, 'compression_ratio': 1.5252525252525253, 'no_speech_prob': 0.0071160499937832355}, {'id': 506, 'seek': 268450, 'start': 2694.3, 'end': 2700.7, 'text': ' So, what is actually happening is link assembler is generating some placeholder number.', 'tokens': [50854, 407, 11, 437, 307, 767, 2737, 307, 2113, 8438, 1918, 307, 17746, 512, 1081, 20480, 1230, 13, 51174], 'temperature': 0.0, 'avg_logprob': -0.22384209230721716, 'compression_ratio': 1.5252525252525253, 'no_speech_prob': 0.0071160499937832355}, {'id': 507, 'seek': 268450, 'start': 2700.7, 'end': 2703.7, 'text': ' We will see why that 7 came there.', 'tokens': [51174, 492, 486, 536, 983, 300, 1614, 1361, 456, 13, 51324], 'temperature': 0.0, 'avg_logprob': -0.22384209230721716, 'compression_ratio': 1.5252525252525253, 'no_speech_prob': 0.0071160499937832355}, {'id': 508, 'seek': 268450, 'start': 2703.7, 'end': 2708.1, 'text': ' But for now, assume whenever call happened, assembler did not know what to generate.', 'tokens': [51324, 583, 337, 586, 11, 6552, 5699, 818, 2011, 11, 8438, 1918, 630, 406, 458, 437, 281, 8460, 13, 51544], 'temperature': 0.0, 'avg_logprob': -0.22384209230721716, 'compression_ratio': 1.5252525252525253, 'no_speech_prob': 0.0071160499937832355}, {'id': 509, 'seek': 268450, 'start': 2708.1, 'end': 2710.5, 'text': ' So, it puts 0 there.', 'tokens': [51544, 407, 11, 309, 8137, 1958, 456, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.22384209230721716, 'compression_ratio': 1.5252525252525253, 'no_speech_prob': 0.0071160499937832355}, {'id': 510, 'seek': 271050, 'start': 2710.5, 'end': 2718.2, 'text': ' It generated additional relocation entry called r386pc32 with foo.', 'tokens': [50364, 467, 10833, 4497, 26981, 399, 8729, 1219, 367, 12625, 21, 79, 66, 11440, 365, 726, 78, 13, 50749], 'temperature': 0.0, 'avg_logprob': -0.15988409015494334, 'compression_ratio': 1.423841059602649, 'no_speech_prob': 0.07579724490642548}, {'id': 511, 'seek': 271050, 'start': 2718.2, 'end': 2719.5, 'text': ' We can see that here.', 'tokens': [50749, 492, 393, 536, 300, 510, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.15988409015494334, 'compression_ratio': 1.423841059602649, 'no_speech_prob': 0.07579724490642548}, {'id': 512, 'seek': 271050, 'start': 2719.5, 'end': 2726.5, 'text': ' So, if I do redelp dash r file 1 dot o, we can actually see that.', 'tokens': [50814, 407, 11, 498, 286, 360, 2182, 28591, 8240, 367, 3991, 502, 5893, 277, 11, 321, 393, 767, 536, 300, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.15988409015494334, 'compression_ratio': 1.423841059602649, 'no_speech_prob': 0.07579724490642548}, {'id': 513, 'seek': 271050, 'start': 2726.5, 'end': 2735.9, 'text': ' So, it is something r386pc32 foo and some other information.', 'tokens': [51164, 407, 11, 309, 307, 746, 367, 12625, 21, 79, 66, 11440, 726, 78, 293, 512, 661, 1589, 13, 51634], 'temperature': 0.0, 'avg_logprob': -0.15988409015494334, 'compression_ratio': 1.423841059602649, 'no_speech_prob': 0.07579724490642548}, {'id': 514, 'seek': 273590, 'start': 2735.9, 'end': 2740.7000000000003, 'text': ' What will happen is when linker is taking these two things together, linker will look', 'tokens': [50364, 708, 486, 1051, 307, 562, 2113, 260, 307, 1940, 613, 732, 721, 1214, 11, 2113, 260, 486, 574, 50604], 'temperature': 0.0, 'avg_logprob': -0.1064053562199958, 'compression_ratio': 1.861904761904762, 'no_speech_prob': 0.10939191281795502}, {'id': 515, 'seek': 273590, 'start': 2740.7000000000003, 'end': 2748.3, 'text': ' at the relocations and after it is done merging things together, linker knows how to change', 'tokens': [50604, 412, 264, 26981, 763, 293, 934, 309, 307, 1096, 44559, 721, 1214, 11, 2113, 260, 3255, 577, 281, 1319, 50984], 'temperature': 0.0, 'avg_logprob': -0.1064053562199958, 'compression_ratio': 1.861904761904762, 'no_speech_prob': 0.10939191281795502}, {'id': 516, 'seek': 273590, 'start': 2748.3, 'end': 2754.9, 'text': ' this 0 to actual address of foo using this relocation entry.', 'tokens': [50984, 341, 1958, 281, 3539, 2985, 295, 726, 78, 1228, 341, 26981, 399, 8729, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.1064053562199958, 'compression_ratio': 1.861904761904762, 'no_speech_prob': 0.10939191281795502}, {'id': 517, 'seek': 273590, 'start': 2754.9, 'end': 2756.3, 'text': ' Is it clear?', 'tokens': [51314, 1119, 309, 1850, 30, 51384], 'temperature': 0.0, 'avg_logprob': -0.1064053562199958, 'compression_ratio': 1.861904761904762, 'no_speech_prob': 0.10939191281795502}, {'id': 518, 'seek': 273590, 'start': 2756.3, 'end': 2758.1, 'text': ' In nutshell, what linker is doing?', 'tokens': [51384, 682, 37711, 11, 437, 2113, 260, 307, 884, 30, 51474], 'temperature': 0.0, 'avg_logprob': -0.1064053562199958, 'compression_ratio': 1.861904761904762, 'no_speech_prob': 0.10939191281795502}, {'id': 519, 'seek': 273590, 'start': 2758.1, 'end': 2761.3, 'text': ' So, linker will concatenate all the text sections together.', 'tokens': [51474, 407, 11, 2113, 260, 486, 1588, 7186, 473, 439, 264, 2487, 10863, 1214, 13, 51634], 'temperature': 0.0, 'avg_logprob': -0.1064053562199958, 'compression_ratio': 1.861904761904762, 'no_speech_prob': 0.10939191281795502}, {'id': 520, 'seek': 273590, 'start': 2761.3, 'end': 2763.9, 'text': ' So, linker will know what is address of foo.', 'tokens': [51634, 407, 11, 2113, 260, 486, 458, 437, 307, 2985, 295, 726, 78, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.1064053562199958, 'compression_ratio': 1.861904761904762, 'no_speech_prob': 0.10939191281795502}, {'id': 521, 'seek': 276390, 'start': 2763.9, 'end': 2770.6, 'text': ' And then it will look at wherever this entry is there and it will go and change this somehow', 'tokens': [50364, 400, 550, 309, 486, 574, 412, 8660, 341, 8729, 307, 456, 293, 309, 486, 352, 293, 1319, 341, 6063, 50699], 'temperature': 0.0, 'avg_logprob': -0.2027007511683873, 'compression_ratio': 1.6256983240223464, 'no_speech_prob': 0.03784998133778572}, {'id': 522, 'seek': 276390, 'start': 2770.6, 'end': 2772.5, 'text': ' to point to address of foo.', 'tokens': [50699, 281, 935, 281, 2985, 295, 726, 78, 13, 50794], 'temperature': 0.0, 'avg_logprob': -0.2027007511683873, 'compression_ratio': 1.6256983240223464, 'no_speech_prob': 0.03784998133778572}, {'id': 523, 'seek': 276390, 'start': 2772.5, 'end': 2776.1, 'text': ' So, linker will essentially end up doing this.', 'tokens': [50794, 407, 11, 2113, 260, 486, 4476, 917, 493, 884, 341, 13, 50974], 'temperature': 0.0, 'avg_logprob': -0.2027007511683873, 'compression_ratio': 1.6256983240223464, 'no_speech_prob': 0.03784998133778572}, {'id': 524, 'seek': 276390, 'start': 2776.1, 'end': 2780.5, 'text': ' Somehow change this code to call foo.', 'tokens': [50974, 28357, 1319, 341, 3089, 281, 818, 726, 78, 13, 51194], 'temperature': 0.0, 'avg_logprob': -0.2027007511683873, 'compression_ratio': 1.6256983240223464, 'no_speech_prob': 0.03784998133778572}, {'id': 525, 'seek': 276390, 'start': 2780.5, 'end': 2783.9, 'text': ' Now how it actually does that is this.', 'tokens': [51194, 823, 577, 309, 767, 775, 300, 307, 341, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.2027007511683873, 'compression_ratio': 1.6256983240223464, 'no_speech_prob': 0.03784998133778572}, {'id': 526, 'seek': 276390, 'start': 2783.9, 'end': 2789.9, 'text': ' So, if you look at this obj dump with dash dr.', 'tokens': [51364, 407, 11, 498, 291, 574, 412, 341, 1111, 73, 11430, 365, 8240, 1224, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.2027007511683873, 'compression_ratio': 1.6256983240223464, 'no_speech_prob': 0.03784998133778572}, {'id': 527, 'seek': 278990, 'start': 2790.9, 'end': 2796.9, 'text': ' So, it is saying this instruction actually has this relocation associated with it.', 'tokens': [50414, 407, 11, 309, 307, 1566, 341, 10951, 767, 575, 341, 26981, 399, 6615, 365, 309, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.17289043426513673, 'compression_ratio': 1.5238095238095237, 'no_speech_prob': 0.048099372535943985}, {'id': 528, 'seek': 278990, 'start': 2796.9, 'end': 2800.5, 'text': ' Now, we will see details of that.', 'tokens': [50714, 823, 11, 321, 486, 536, 4365, 295, 300, 13, 50894], 'temperature': 0.0, 'avg_logprob': -0.17289043426513673, 'compression_ratio': 1.5238095238095237, 'no_speech_prob': 0.048099372535943985}, {'id': 529, 'seek': 278990, 'start': 2800.5, 'end': 2806.9, 'text': ' So, each relocation entry which is generated has offset.', 'tokens': [50894, 407, 11, 1184, 26981, 399, 8729, 597, 307, 10833, 575, 18687, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.17289043426513673, 'compression_ratio': 1.5238095238095237, 'no_speech_prob': 0.048099372535943985}, {'id': 530, 'seek': 278990, 'start': 2806.9, 'end': 2817.9, 'text': ' The offset is 7 and the reason offset is 7 is because this is 1, 2, 3, 4, 5, 6, 7.', 'tokens': [51214, 440, 18687, 307, 1614, 293, 264, 1778, 18687, 307, 1614, 307, 570, 341, 307, 502, 11, 568, 11, 805, 11, 1017, 11, 1025, 11, 1386, 11, 1614, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.17289043426513673, 'compression_ratio': 1.5238095238095237, 'no_speech_prob': 0.048099372535943985}, {'id': 531, 'seek': 281790, 'start': 2818.9, 'end': 2824.3, 'text': ' 4, 5, 6 and these are this is where the 7 points to.', 'tokens': [50414, 1017, 11, 1025, 11, 1386, 293, 613, 366, 341, 307, 689, 264, 1614, 2793, 281, 13, 50684], 'temperature': 0.0, 'avg_logprob': -0.13771997472291353, 'compression_ratio': 1.6331658291457287, 'no_speech_prob': 0.002887197071686387}, {'id': 532, 'seek': 281790, 'start': 2824.3, 'end': 2830.9, 'text': ' So, E8 what you are seeing here is actually the up code for call instruction.', 'tokens': [50684, 407, 11, 462, 23, 437, 291, 366, 2577, 510, 307, 767, 264, 493, 3089, 337, 818, 10951, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.13771997472291353, 'compression_ratio': 1.6331658291457287, 'no_speech_prob': 0.002887197071686387}, {'id': 533, 'seek': 281790, 'start': 2830.9, 'end': 2838.7000000000003, 'text': ' So, call instruction in x86 architecture is encoded as E8 followed by a 32 bit number', 'tokens': [51014, 407, 11, 818, 10951, 294, 2031, 22193, 9482, 307, 2058, 12340, 382, 462, 23, 6263, 538, 257, 8858, 857, 1230, 51404], 'temperature': 0.0, 'avg_logprob': -0.13771997472291353, 'compression_ratio': 1.6331658291457287, 'no_speech_prob': 0.002887197071686387}, {'id': 534, 'seek': 281790, 'start': 2838.7000000000003, 'end': 2841.3, 'text': ' which is supposed to give the address.', 'tokens': [51404, 597, 307, 3442, 281, 976, 264, 2985, 13, 51534], 'temperature': 0.0, 'avg_logprob': -0.13771997472291353, 'compression_ratio': 1.6331658291457287, 'no_speech_prob': 0.002887197071686387}, {'id': 535, 'seek': 281790, 'start': 2841.3, 'end': 2842.5, 'text': ' Is it clear?', 'tokens': [51534, 1119, 309, 1850, 30, 51594], 'temperature': 0.0, 'avg_logprob': -0.13771997472291353, 'compression_ratio': 1.6331658291457287, 'no_speech_prob': 0.002887197071686387}, {'id': 536, 'seek': 281790, 'start': 2842.5, 'end': 2846.9, 'text': ' So, these next 4 bytes are supposed to give the address.', 'tokens': [51594, 407, 11, 613, 958, 1017, 36088, 366, 3442, 281, 976, 264, 2985, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.13771997472291353, 'compression_ratio': 1.6331658291457287, 'no_speech_prob': 0.002887197071686387}, {'id': 537, 'seek': 284690, 'start': 2846.9, 'end': 2855.9, 'text': ' So, what this relocation is saying is at offset 7 within the text section apply this relocation.', 'tokens': [50364, 407, 11, 437, 341, 26981, 399, 307, 1566, 307, 412, 18687, 1614, 1951, 264, 2487, 3541, 3079, 341, 26981, 399, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.15327637123339105, 'compression_ratio': 1.7432432432432432, 'no_speech_prob': 0.0008266816730611026}, {'id': 538, 'seek': 284690, 'start': 2855.9, 'end': 2860.9, 'text': ' Now, the relocation has symbol associated with it.', 'tokens': [50814, 823, 11, 264, 26981, 399, 575, 5986, 6615, 365, 309, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.15327637123339105, 'compression_ratio': 1.7432432432432432, 'no_speech_prob': 0.0008266816730611026}, {'id': 539, 'seek': 284690, 'start': 2860.9, 'end': 2868.9, 'text': ' Now, what is this symbol saying is change address of this whatever is the content of', 'tokens': [51064, 823, 11, 437, 307, 341, 5986, 1566, 307, 1319, 2985, 295, 341, 2035, 307, 264, 2701, 295, 51464], 'temperature': 0.0, 'avg_logprob': -0.15327637123339105, 'compression_ratio': 1.7432432432432432, 'no_speech_prob': 0.0008266816730611026}, {'id': 540, 'seek': 284690, 'start': 2868.9, 'end': 2872.9, 'text': ' this with address of foo.', 'tokens': [51464, 341, 365, 2985, 295, 726, 78, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.15327637123339105, 'compression_ratio': 1.7432432432432432, 'no_speech_prob': 0.0008266816730611026}, {'id': 541, 'seek': 287290, 'start': 2873.9, 'end': 2881.9, 'text': " And what is this fc ffff this is actually minus 4 if you look at the 2's complement.", 'tokens': [50414, 400, 437, 307, 341, 283, 66, 283, 602, 69, 341, 307, 767, 3175, 1017, 498, 291, 574, 412, 264, 568, 311, 17103, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.15381136045351132, 'compression_ratio': 1.7114427860696517, 'no_speech_prob': 0.004068463575094938}, {'id': 542, 'seek': 287290, 'start': 2881.9, 'end': 2887.9, 'text': " I mean this number is actually 2's complement of I mean hex representation of minus 4 in", 'tokens': [50814, 286, 914, 341, 1230, 307, 767, 568, 311, 17103, 295, 286, 914, 23291, 10290, 295, 3175, 1017, 294, 51114], 'temperature': 0.0, 'avg_logprob': -0.15381136045351132, 'compression_ratio': 1.7114427860696517, 'no_speech_prob': 0.004068463575094938}, {'id': 543, 'seek': 287290, 'start': 2887.9, 'end': 2889.9, 'text': " 2's complement format.", 'tokens': [51114, 568, 311, 17103, 7877, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.15381136045351132, 'compression_ratio': 1.7114427860696517, 'no_speech_prob': 0.004068463575094938}, {'id': 544, 'seek': 287290, 'start': 2889.9, 'end': 2897.9, 'text': ' So, what this instruction is saying is this is E8 this address needs to be changed to foo', 'tokens': [51214, 407, 11, 437, 341, 10951, 307, 1566, 307, 341, 307, 462, 23, 341, 2985, 2203, 281, 312, 3105, 281, 726, 78, 51614], 'temperature': 0.0, 'avg_logprob': -0.15381136045351132, 'compression_ratio': 1.7114427860696517, 'no_speech_prob': 0.004068463575094938}, {'id': 545, 'seek': 287290, 'start': 2897.9, 'end': 2901.9, 'text': ' and there is something called as addend which is minus 4.', 'tokens': [51614, 293, 456, 307, 746, 1219, 382, 909, 521, 597, 307, 3175, 1017, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.15381136045351132, 'compression_ratio': 1.7114427860696517, 'no_speech_prob': 0.004068463575094938}, {'id': 546, 'seek': 290290, 'start': 2902.9, 'end': 2911.9, 'text': ' Now, what linker will do is linker will change this content with address of symbol plus addend', 'tokens': [50364, 823, 11, 437, 2113, 260, 486, 360, 307, 2113, 260, 486, 1319, 341, 2701, 365, 2985, 295, 5986, 1804, 909, 521, 50814], 'temperature': 0.0, 'avg_logprob': -0.11494552344083786, 'compression_ratio': 1.5684931506849316, 'no_speech_prob': 0.0013664988800883293}, {'id': 547, 'seek': 290290, 'start': 2911.9, 'end': 2914.9, 'text': ' minus the offset.', 'tokens': [50814, 3175, 264, 18687, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.11494552344083786, 'compression_ratio': 1.5684931506849316, 'no_speech_prob': 0.0013664988800883293}, {'id': 548, 'seek': 290290, 'start': 2914.9, 'end': 2925.9, 'text': ' The offset is 7 addend is minus 4 and symbol is foo.', 'tokens': [50964, 440, 18687, 307, 1614, 909, 521, 307, 3175, 1017, 293, 5986, 307, 726, 78, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.11494552344083786, 'compression_ratio': 1.5684931506849316, 'no_speech_prob': 0.0013664988800883293}, {'id': 549, 'seek': 290290, 'start': 2925.9, 'end': 2930.9, 'text': ' So, this is actually going to change it to something like this.', 'tokens': [51514, 407, 11, 341, 307, 767, 516, 281, 1319, 309, 281, 746, 411, 341, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.11494552344083786, 'compression_ratio': 1.5684931506849316, 'no_speech_prob': 0.0013664988800883293}, {'id': 550, 'seek': 293090, 'start': 2930.9, 'end': 2945.9, 'text': ' Why because address of foo was this 80483 eaf it added minus 4 to it and it subtracted', 'tokens': [50364, 1545, 570, 2985, 295, 726, 78, 390, 341, 4688, 13318, 18, 308, 2792, 309, 3869, 3175, 1017, 281, 309, 293, 309, 16390, 292, 51114], 'temperature': 0.0, 'avg_logprob': -0.1528589579523826, 'compression_ratio': 1.415929203539823, 'no_speech_prob': 0.005465877708047628}, {'id': 551, 'seek': 293090, 'start': 2945.9, 'end': 2948.9, 'text': ' this current address from it.', 'tokens': [51114, 341, 2190, 2985, 490, 309, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.1528589579523826, 'compression_ratio': 1.415929203539823, 'no_speech_prob': 0.005465877708047628}, {'id': 552, 'seek': 293090, 'start': 2948.9, 'end': 2955.9, 'text': ' Current address was 80483 e4 is this clear.', 'tokens': [51264, 15629, 2985, 390, 4688, 13318, 18, 308, 19, 307, 341, 1850, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.1528589579523826, 'compression_ratio': 1.415929203539823, 'no_speech_prob': 0.005465877708047628}, {'id': 553, 'seek': 295590, 'start': 2955.9, 'end': 2964.9, 'text': ' So, what we are seeing is essentially this content was being changed with function which', 'tokens': [50364, 407, 11, 437, 321, 366, 2577, 307, 4476, 341, 2701, 390, 885, 3105, 365, 2445, 597, 50814], 'temperature': 0.0, 'avg_logprob': -0.0728530486424764, 'compression_ratio': 1.4755244755244756, 'no_speech_prob': 0.012407798320055008}, {'id': 554, 'seek': 295590, 'start': 2964.9, 'end': 2975.9, 'text': ' changed which added address of foo subtracted minus 4 from it added offset of the current', 'tokens': [50814, 3105, 597, 3869, 2985, 295, 726, 78, 16390, 292, 3175, 1017, 490, 309, 3869, 18687, 295, 264, 2190, 51364], 'temperature': 0.0, 'avg_logprob': -0.0728530486424764, 'compression_ratio': 1.4755244755244756, 'no_speech_prob': 0.012407798320055008}, {'id': 555, 'seek': 295590, 'start': 2975.9, 'end': 2981.9, 'text': ' instruction itself to form this.', 'tokens': [51364, 10951, 2564, 281, 1254, 341, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.0728530486424764, 'compression_ratio': 1.4755244755244756, 'no_speech_prob': 0.012407798320055008}, {'id': 556, 'seek': 298190, 'start': 2981.9, 'end': 2986.9, 'text': ' And if you look at why this is 7 is if you actually calculate the PC relative address', 'tokens': [50364, 400, 498, 291, 574, 412, 983, 341, 307, 1614, 307, 498, 291, 767, 8873, 264, 6465, 4972, 2985, 50614], 'temperature': 0.0, 'avg_logprob': -0.08680691037859235, 'compression_ratio': 1.5611111111111111, 'no_speech_prob': 0.09242808073759079}, {'id': 557, 'seek': 298190, 'start': 2986.9, 'end': 2990.9, 'text': ' of foo from here it is 7 bytes away.', 'tokens': [50614, 295, 726, 78, 490, 510, 309, 307, 1614, 36088, 1314, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.08680691037859235, 'compression_ratio': 1.5611111111111111, 'no_speech_prob': 0.09242808073759079}, {'id': 558, 'seek': 298190, 'start': 2990.9, 'end': 2994.9, 'text': ' So, 1 2 3 4 5 6 7.', 'tokens': [50814, 407, 11, 502, 568, 805, 1017, 1025, 1386, 1614, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.08680691037859235, 'compression_ratio': 1.5611111111111111, 'no_speech_prob': 0.09242808073759079}, {'id': 559, 'seek': 298190, 'start': 2994.9, 'end': 3003.9, 'text': ' So, this instruction is saying that jump to PC relative address which is 7 bytes away.', 'tokens': [51014, 407, 11, 341, 10951, 307, 1566, 300, 3012, 281, 6465, 4972, 2985, 597, 307, 1614, 36088, 1314, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.08680691037859235, 'compression_ratio': 1.5611111111111111, 'no_speech_prob': 0.09242808073759079}, {'id': 560, 'seek': 298190, 'start': 3003.9, 'end': 3006.9, 'text': ' Does that make sense?', 'tokens': [51464, 4402, 300, 652, 2020, 30, 51614], 'temperature': 0.0, 'avg_logprob': -0.08680691037859235, 'compression_ratio': 1.5611111111111111, 'no_speech_prob': 0.09242808073759079}, {'id': 561, 'seek': 298190, 'start': 3006.9, 'end': 3008.9, 'text': ' Let us look at this in action.', 'tokens': [51614, 961, 505, 574, 412, 341, 294, 3069, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.08680691037859235, 'compression_ratio': 1.5611111111111111, 'no_speech_prob': 0.09242808073759079}, {'id': 562, 'seek': 300890, 'start': 3008.9, 'end': 3021.9, 'text': ' So, I have file 1 dot c and I have file 2 dot c for simplicity I will not do anything', 'tokens': [50364, 407, 11, 286, 362, 3991, 502, 5893, 269, 293, 286, 362, 3991, 568, 5893, 269, 337, 25632, 286, 486, 406, 360, 1340, 51014], 'temperature': 0.0, 'avg_logprob': -0.1555842638015747, 'compression_ratio': 1.1978021978021978, 'no_speech_prob': 0.44387388229370117}, {'id': 563, 'seek': 300890, 'start': 3021.9, 'end': 3023.9, 'text': ' in foo.', 'tokens': [51014, 294, 726, 78, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.1555842638015747, 'compression_ratio': 1.1978021978021978, 'no_speech_prob': 0.44387388229370117}, {'id': 564, 'seek': 300890, 'start': 3023.9, 'end': 3032.9, 'text': ' Now, let us do.', 'tokens': [51114, 823, 11, 718, 505, 360, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.1555842638015747, 'compression_ratio': 1.1978021978021978, 'no_speech_prob': 0.44387388229370117}, {'id': 565, 'seek': 303290, 'start': 3032.9, 'end': 3051.9, 'text': ' So, what this is saying is this is saying call has this relocation.', 'tokens': [50364, 407, 11, 437, 341, 307, 1566, 307, 341, 307, 1566, 818, 575, 341, 26981, 399, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.21422910690307617, 'compression_ratio': 1.2083333333333333, 'no_speech_prob': 0.2939567267894745}, {'id': 566, 'seek': 303290, 'start': 3051.9, 'end': 3060.9, 'text': ' Now, I have file 1.', 'tokens': [51314, 823, 11, 286, 362, 3991, 502, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.21422910690307617, 'compression_ratio': 1.2083333333333333, 'no_speech_prob': 0.2939567267894745}, {'id': 567, 'seek': 306090, 'start': 3061.9, 'end': 3066.9, 'text': ' Now, let us link these things together file 1 dot o file 2 dot o dash m 32.', 'tokens': [50414, 823, 11, 718, 505, 2113, 613, 721, 1214, 3991, 502, 5893, 277, 3991, 568, 5893, 277, 8240, 275, 8858, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.11965065166868012, 'compression_ratio': 1.5, 'no_speech_prob': 0.07143062353134155}, {'id': 568, 'seek': 306090, 'start': 3066.9, 'end': 3074.9, 'text': ' Now, let me dump a dot out dash dr.', 'tokens': [50664, 823, 11, 718, 385, 11430, 257, 5893, 484, 8240, 1224, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.11965065166868012, 'compression_ratio': 1.5, 'no_speech_prob': 0.07143062353134155}, {'id': 569, 'seek': 306090, 'start': 3074.9, 'end': 3088.9, 'text': ' So, if you look at main main is at address this foo is at address this.', 'tokens': [51064, 407, 11, 498, 291, 574, 412, 2135, 2135, 307, 412, 2985, 341, 726, 78, 307, 412, 2985, 341, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.11965065166868012, 'compression_ratio': 1.5, 'no_speech_prob': 0.07143062353134155}, {'id': 570, 'seek': 308890, 'start': 3088.9, 'end': 3100.9, 'text': ' Now, if you look at this instruction this earlier had let me copy paste this part.', 'tokens': [50364, 823, 11, 498, 291, 574, 412, 341, 10951, 341, 3071, 632, 718, 385, 5055, 9163, 341, 644, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.21098002933320545, 'compression_ratio': 1.0933333333333333, 'no_speech_prob': 0.8010119199752808}, {'id': 571, 'seek': 311890, 'start': 3118.9, 'end': 3140.9, 'text': ' So, originally this instruction was looking something like this.', 'tokens': [50364, 407, 11, 7993, 341, 10951, 390, 1237, 746, 411, 341, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.10979784329732259, 'compression_ratio': 0.9696969696969697, 'no_speech_prob': 0.08542589843273163}, {'id': 572, 'seek': 314090, 'start': 3140.9, 'end': 3152.9, 'text': ' The way I changed this instruction is I looked at what is address of foo.', 'tokens': [50364, 440, 636, 286, 3105, 341, 10951, 307, 286, 2956, 412, 437, 307, 2985, 295, 726, 78, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.12106944265819732, 'compression_ratio': 1.3392857142857142, 'no_speech_prob': 0.07542404532432556}, {'id': 573, 'seek': 314090, 'start': 3152.9, 'end': 3163.9, 'text': ' So, this then I added added value to it addend value is this which was here.', 'tokens': [50964, 407, 11, 341, 550, 286, 3869, 3869, 2158, 281, 309, 909, 521, 2158, 307, 341, 597, 390, 510, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.12106944265819732, 'compression_ratio': 1.3392857142857142, 'no_speech_prob': 0.07542404532432556}, {'id': 574, 'seek': 316390, 'start': 3163.9, 'end': 3174.9, 'text': ' So, I did minus 4 and I added address of the current where the relocation needs to be', 'tokens': [50364, 407, 11, 286, 630, 3175, 1017, 293, 286, 3869, 2985, 295, 264, 2190, 689, 264, 26981, 399, 2203, 281, 312, 50914], 'temperature': 0.0, 'avg_logprob': -0.058633058629137404, 'compression_ratio': 1.3666666666666667, 'no_speech_prob': 0.07332813739776611}, {'id': 575, 'seek': 316390, 'start': 3174.9, 'end': 3182.9, 'text': ' applied which happens to be 4 because this is 3.', 'tokens': [50914, 6456, 597, 2314, 281, 312, 1017, 570, 341, 307, 805, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.058633058629137404, 'compression_ratio': 1.3666666666666667, 'no_speech_prob': 0.07332813739776611}, {'id': 576, 'seek': 316390, 'start': 3182.9, 'end': 3185.9, 'text': ' So, this address starts at 4.', 'tokens': [51314, 407, 11, 341, 2985, 3719, 412, 1017, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.058633058629137404, 'compression_ratio': 1.3666666666666667, 'no_speech_prob': 0.07332813739776611}, {'id': 577, 'seek': 318590, 'start': 3185.9, 'end': 3188.9, 'text': ' So, this computation actually results in.', 'tokens': [50364, 407, 11, 341, 24903, 767, 3542, 294, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.17980881170793014, 'compression_ratio': 0.8367346938775511, 'no_speech_prob': 0.8787540197372437}, {'id': 578, 'seek': 321590, 'start': 3215.9, 'end': 3229.9, 'text': ' Something is wrong.', 'tokens': [50364, 6595, 307, 2085, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.4771301746368408, 'compression_ratio': 0.7037037037037037, 'no_speech_prob': 0.9181880950927734}, {'id': 579, 'seek': 322990, 'start': 3229.9, 'end': 3248.9, 'text': ' Something is wrong.', 'tokens': [50364, 6595, 307, 2085, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.44253894686698914, 'compression_ratio': 0.7037037037037037, 'no_speech_prob': 0.3984048068523407}, {'id': 580, 'seek': 324890, 'start': 3248.9, 'end': 3268.9, 'text': ' Sorry, this should have been minus.', 'tokens': [50364, 4919, 11, 341, 820, 362, 668, 3175, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.3221125602722168, 'compression_ratio': 0.813953488372093, 'no_speech_prob': 0.47853830456733704}, {'id': 581, 'seek': 326890, 'start': 3268.9, 'end': 3289.9, 'text': ' So, it results in 2 which is what you see encoded here and why it is 2 is because foo', 'tokens': [50364, 407, 11, 309, 3542, 294, 568, 597, 307, 437, 291, 536, 2058, 12340, 510, 293, 983, 309, 307, 568, 307, 570, 726, 78, 51414], 'temperature': 0.0, 'avg_logprob': -0.08890979354445999, 'compression_ratio': 1.21, 'no_speech_prob': 0.06754694879055023}, {'id': 582, 'seek': 326890, 'start': 3289.9, 'end': 3291.9, 'text': ' is actually 2 bytes away from this.', 'tokens': [51414, 307, 767, 568, 36088, 1314, 490, 341, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.08890979354445999, 'compression_ratio': 1.21, 'no_speech_prob': 0.06754694879055023}, {'id': 583, 'seek': 329190, 'start': 3291.9, 'end': 3298.9, 'text': ' So, what it essentially did is this relocation helped you compute the relative address of', 'tokens': [50364, 407, 11, 437, 309, 4476, 630, 307, 341, 26981, 399, 4254, 291, 14722, 264, 4972, 2985, 295, 50714], 'temperature': 0.0, 'avg_logprob': -0.11010800875150241, 'compression_ratio': 1.2564102564102564, 'no_speech_prob': 0.2681434154510498}, {'id': 584, 'seek': 329190, 'start': 3298.9, 'end': 3300.9, 'text': ' foo from main.', 'tokens': [50714, 726, 78, 490, 2135, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.11010800875150241, 'compression_ratio': 1.2564102564102564, 'no_speech_prob': 0.2681434154510498}, {'id': 585, 'seek': 329190, 'start': 3300.9, 'end': 3303.9, 'text': ' Let us look at a slightly simpler example.', 'tokens': [50814, 961, 505, 574, 412, 257, 4748, 18587, 1365, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.11010800875150241, 'compression_ratio': 1.2564102564102564, 'no_speech_prob': 0.2681434154510498}, {'id': 586, 'seek': 330390, 'start': 3303.9, 'end': 3326.9, 'text': ' Let us say I had in here I was referring to some data in and here I defined.', 'tokens': [50364, 961, 505, 584, 286, 632, 294, 510, 286, 390, 13761, 281, 512, 1412, 294, 293, 510, 286, 7642, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.23203723326973294, 'compression_ratio': 1.0704225352112675, 'no_speech_prob': 0.4439334273338318}, {'id': 587, 'seek': 332690, 'start': 3326.9, 'end': 3338.9, 'text': ' Now, let us look at this.', 'tokens': [50364, 823, 11, 718, 505, 574, 412, 341, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.1953476976465296, 'compression_ratio': 0.9577464788732394, 'no_speech_prob': 0.6230900287628174}, {'id': 588, 'seek': 332690, 'start': 3338.9, 'end': 3350.9, 'text': ' So, what you see is var is undefined here.', 'tokens': [50964, 407, 11, 437, 291, 536, 307, 1374, 307, 674, 5666, 2001, 510, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.1953476976465296, 'compression_ratio': 0.9577464788732394, 'no_speech_prob': 0.6230900287628174}, {'id': 589, 'seek': 335090, 'start': 3350.9, 'end': 3363.9, 'text': ' Now, if I look at objdump dash dr of file 1 dot o, I see that this instruction is trying', 'tokens': [50364, 823, 11, 498, 286, 574, 412, 1111, 37109, 1420, 8240, 1224, 295, 3991, 502, 5893, 277, 11, 286, 536, 300, 341, 10951, 307, 1382, 51014], 'temperature': 0.0, 'avg_logprob': -0.13404781776562072, 'compression_ratio': 1.410071942446043, 'no_speech_prob': 0.3579633831977844}, {'id': 590, 'seek': 335090, 'start': 3363.9, 'end': 3372.9, 'text': ' to move value 10 into an address 0 and address 0 is there because I do not know what is the', 'tokens': [51014, 281, 1286, 2158, 1266, 666, 364, 2985, 1958, 293, 2985, 1958, 307, 456, 570, 286, 360, 406, 458, 437, 307, 264, 51464], 'temperature': 0.0, 'avg_logprob': -0.13404781776562072, 'compression_ratio': 1.410071942446043, 'no_speech_prob': 0.3579633831977844}, {'id': 591, 'seek': 335090, 'start': 3372.9, 'end': 3374.9, 'text': ' address of var.', 'tokens': [51464, 2985, 295, 1374, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.13404781776562072, 'compression_ratio': 1.410071942446043, 'no_speech_prob': 0.3579633831977844}, {'id': 592, 'seek': 337490, 'start': 3375.9, 'end': 3381.9, 'text': ' So, there is a relocation called var with r38632.', 'tokens': [50414, 407, 11, 456, 307, 257, 26981, 399, 1219, 1374, 365, 367, 12625, 21, 11440, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.12777655700157428, 'compression_ratio': 1.2868217054263567, 'no_speech_prob': 0.21696145832538605}, {'id': 593, 'seek': 337490, 'start': 3381.9, 'end': 3386.9, 'text': ' Now, let us look at file 2.', 'tokens': [50714, 823, 11, 718, 505, 574, 412, 3991, 568, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.12777655700157428, 'compression_ratio': 1.2868217054263567, 'no_speech_prob': 0.21696145832538605}, {'id': 594, 'seek': 337490, 'start': 3386.9, 'end': 3389.9, 'text': ' So, I have file 2.', 'tokens': [50964, 407, 11, 286, 362, 3991, 568, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.12777655700157428, 'compression_ratio': 1.2868217054263567, 'no_speech_prob': 0.21696145832538605}, {'id': 595, 'seek': 337490, 'start': 3389.9, 'end': 3398.9, 'text': ' Now, what I will do is file 2 defines this variable at some offset 0.', 'tokens': [51114, 823, 11, 437, 286, 486, 360, 307, 3991, 568, 23122, 341, 7006, 412, 512, 18687, 1958, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.12777655700157428, 'compression_ratio': 1.2868217054263567, 'no_speech_prob': 0.21696145832538605}, {'id': 596, 'seek': 339890, 'start': 3398.9, 'end': 3405.9, 'text': ' Now let us link these together file 2 dot o.', 'tokens': [50364, 823, 718, 505, 2113, 613, 1214, 3991, 568, 5893, 277, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.15593371893230237, 'compression_ratio': 1.238532110091743, 'no_speech_prob': 0.012604352086782455}, {'id': 597, 'seek': 339890, 'start': 3405.9, 'end': 3421.9, 'text': ' Now, when I look at a dot out, you will actually see this instruction it changed to move a', 'tokens': [50714, 823, 11, 562, 286, 574, 412, 257, 5893, 484, 11, 291, 486, 767, 536, 341, 10951, 309, 3105, 281, 1286, 257, 51514], 'temperature': 0.0, 'avg_logprob': -0.15593371893230237, 'compression_ratio': 1.238532110091743, 'no_speech_prob': 0.012604352086782455}, {'id': 598, 'seek': 342190, 'start': 3421.9, 'end': 3437.9, 'text': ' to something like this and if you look at this was the exact address.', 'tokens': [50364, 281, 746, 411, 341, 293, 498, 291, 574, 412, 341, 390, 264, 1900, 2985, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.20976933726557978, 'compression_ratio': 1.1, 'no_speech_prob': 0.42961764335632324}, {'id': 599, 'seek': 342190, 'start': 3437.9, 'end': 3442.9, 'text': ' So, what this did?', 'tokens': [51164, 407, 11, 437, 341, 630, 30, 51414], 'temperature': 0.0, 'avg_logprob': -0.20976933726557978, 'compression_ratio': 1.1, 'no_speech_prob': 0.42961764335632324}, {'id': 600, 'seek': 344290, 'start': 3442.9, 'end': 3443.9, 'text': ' Let us look at it.', 'tokens': [50364, 961, 505, 574, 412, 309, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.311090008965854, 'compression_ratio': 1.0128205128205128, 'no_speech_prob': 0.5292961597442627}, {'id': 601, 'seek': 344290, 'start': 3443.9, 'end': 3448.9, 'text': ' I will copy paste some part.', 'tokens': [50414, 286, 486, 5055, 9163, 512, 644, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.311090008965854, 'compression_ratio': 1.0128205128205128, 'no_speech_prob': 0.5292961597442627}, {'id': 602, 'seek': 344290, 'start': 3448.9, 'end': 3470.9, 'text': ' So, this was the original code.', 'tokens': [50664, 407, 11, 341, 390, 264, 3380, 3089, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.311090008965854, 'compression_ratio': 1.0128205128205128, 'no_speech_prob': 0.5292961597442627}, {'id': 603, 'seek': 347090, 'start': 3470.9, 'end': 3497.9, 'text': ' This is the final var and this is how it looks in the text section.', 'tokens': [50364, 639, 307, 264, 2572, 1374, 293, 341, 307, 577, 309, 1542, 294, 264, 2487, 3541, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.1870492696762085, 'compression_ratio': 1.046875, 'no_speech_prob': 0.9354700446128845}, {'id': 604, 'seek': 349790, 'start': 3497.9, 'end': 3519.9, 'text': ' So, what this did is when assembler generated this reference to var, it did not know what', 'tokens': [50364, 407, 11, 437, 341, 630, 307, 562, 8438, 1918, 10833, 341, 6408, 281, 1374, 11, 309, 630, 406, 458, 437, 51464], 'temperature': 0.0, 'avg_logprob': -0.0660091519355774, 'compression_ratio': 1.25, 'no_speech_prob': 0.07336485385894775}, {'id': 605, 'seek': 349790, 'start': 3519.9, 'end': 3520.9, 'text': ' address to generate.', 'tokens': [51464, 2985, 281, 8460, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.0660091519355774, 'compression_ratio': 1.25, 'no_speech_prob': 0.07336485385894775}, {'id': 606, 'seek': 352090, 'start': 3520.9, 'end': 3529.9, 'text': ' So, it generated address 0 and it says that I need to change the 32 bits here with the', 'tokens': [50364, 407, 11, 309, 10833, 2985, 1958, 293, 309, 1619, 300, 286, 643, 281, 1319, 264, 8858, 9239, 510, 365, 264, 50814], 'temperature': 0.0, 'avg_logprob': -0.04206998605985899, 'compression_ratio': 1.6744186046511629, 'no_speech_prob': 0.2837086319923401}, {'id': 607, 'seek': 352090, 'start': 3529.9, 'end': 3530.9, 'text': ' address of var.', 'tokens': [50814, 2985, 295, 1374, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.04206998605985899, 'compression_ratio': 1.6744186046511629, 'no_speech_prob': 0.2837086319923401}, {'id': 608, 'seek': 352090, 'start': 3530.9, 'end': 3539.9, 'text': ' Now, when linker laid out all the things together, linker chose var to be at this address and', 'tokens': [50864, 823, 11, 562, 2113, 260, 9897, 484, 439, 264, 721, 1214, 11, 2113, 260, 5111, 1374, 281, 312, 412, 341, 2985, 293, 51314], 'temperature': 0.0, 'avg_logprob': -0.04206998605985899, 'compression_ratio': 1.6744186046511629, 'no_speech_prob': 0.2837086319923401}, {'id': 609, 'seek': 352090, 'start': 3539.9, 'end': 3548.9, 'text': ' what relocation told linker is I need to change this instruction to contain its address and', 'tokens': [51314, 437, 26981, 399, 1907, 2113, 260, 307, 286, 643, 281, 1319, 341, 10951, 281, 5304, 1080, 2985, 293, 51764], 'temperature': 0.0, 'avg_logprob': -0.04206998605985899, 'compression_ratio': 1.6744186046511629, 'no_speech_prob': 0.2837086319923401}, {'id': 610, 'seek': 354890, 'start': 3548.9, 'end': 3552.9, 'text': ' linker ended up putting this address.', 'tokens': [50364, 2113, 260, 4590, 493, 3372, 341, 2985, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.11065640656844429, 'compression_ratio': 1.6085106382978724, 'no_speech_prob': 0.17746973037719727}, {'id': 611, 'seek': 354890, 'start': 3552.9, 'end': 3553.9, 'text': ' Is this clear?', 'tokens': [50564, 1119, 341, 1850, 30, 50614], 'temperature': 0.0, 'avg_logprob': -0.11065640656844429, 'compression_ratio': 1.6085106382978724, 'no_speech_prob': 0.17746973037719727}, {'id': 612, 'seek': 354890, 'start': 3553.9, 'end': 3557.9, 'text': ' This is kind of bit tricky because this is and this is the most complicated part of the', 'tokens': [50614, 639, 307, 733, 295, 857, 12414, 570, 341, 307, 293, 341, 307, 264, 881, 6179, 644, 295, 264, 50814], 'temperature': 0.0, 'avg_logprob': -0.11065640656844429, 'compression_ratio': 1.6085106382978724, 'no_speech_prob': 0.17746973037719727}, {'id': 613, 'seek': 354890, 'start': 3557.9, 'end': 3566.26, 'text': ' linker where it needs to do the relocation application.', 'tokens': [50814, 2113, 260, 689, 309, 2203, 281, 360, 264, 26981, 399, 3861, 13, 51232], 'temperature': 0.0, 'avg_logprob': -0.11065640656844429, 'compression_ratio': 1.6085106382978724, 'no_speech_prob': 0.17746973037719727}, {'id': 614, 'seek': 354890, 'start': 3566.26, 'end': 3568.9, 'text': ' Any doubts or questions so far?', 'tokens': [51232, 2639, 22618, 420, 1651, 370, 1400, 30, 51364], 'temperature': 0.0, 'avg_logprob': -0.11065640656844429, 'compression_ratio': 1.6085106382978724, 'no_speech_prob': 0.17746973037719727}, {'id': 615, 'seek': 354890, 'start': 3568.9, 'end': 3573.46, 'text': ' So, fundamental reason why relocations exist is fairly simple.', 'tokens': [51364, 407, 11, 8088, 1778, 983, 26981, 763, 2514, 307, 6457, 2199, 13, 51592], 'temperature': 0.0, 'avg_logprob': -0.11065640656844429, 'compression_ratio': 1.6085106382978724, 'no_speech_prob': 0.17746973037719727}, {'id': 616, 'seek': 354890, 'start': 3573.46, 'end': 3577.6600000000003, 'text': ' When assembler is generating code, assembler does not have information about addresses', 'tokens': [51592, 1133, 8438, 1918, 307, 17746, 3089, 11, 8438, 1918, 775, 406, 362, 1589, 466, 16862, 51802], 'temperature': 0.0, 'avg_logprob': -0.11065640656844429, 'compression_ratio': 1.6085106382978724, 'no_speech_prob': 0.17746973037719727}, {'id': 617, 'seek': 357766, 'start': 3577.66, 'end': 3578.66, 'text': ' of the symbols.', 'tokens': [50364, 295, 264, 16944, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.20029175982755773, 'compression_ratio': 1.5976331360946745, 'no_speech_prob': 0.6981505751609802}, {'id': 618, 'seek': 357766, 'start': 3578.66, 'end': 3585.5, 'text': ' So, it generates some placeholder saying it could be 0 and generates additional metadata', 'tokens': [50414, 407, 11, 309, 23815, 512, 1081, 20480, 1566, 309, 727, 312, 1958, 293, 23815, 4497, 26603, 50756], 'temperature': 0.0, 'avg_logprob': -0.20029175982755773, 'compression_ratio': 1.5976331360946745, 'no_speech_prob': 0.6981505751609802}, {'id': 619, 'seek': 357766, 'start': 3585.5, 'end': 3594.66, 'text': ' for linker to say change these 0s to some values and linker after it has laid out everything', 'tokens': [50756, 337, 2113, 260, 281, 584, 1319, 613, 1958, 82, 281, 512, 4190, 293, 2113, 260, 934, 309, 575, 9897, 484, 1203, 51214], 'temperature': 0.0, 'avg_logprob': -0.20029175982755773, 'compression_ratio': 1.5976331360946745, 'no_speech_prob': 0.6981505751609802}, {'id': 620, 'seek': 357766, 'start': 3594.66, 'end': 3599.66, 'text': ' will actually change them.', 'tokens': [51214, 486, 767, 1319, 552, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.20029175982755773, 'compression_ratio': 1.5976331360946745, 'no_speech_prob': 0.6981505751609802}, {'id': 621, 'seek': 357766, 'start': 3599.66, 'end': 3604.66, 'text': ' So, this is what we actually did essentially.', 'tokens': [51464, 407, 11, 341, 307, 437, 321, 767, 630, 4476, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.20029175982755773, 'compression_ratio': 1.5976331360946745, 'no_speech_prob': 0.6981505751609802}, {'id': 622, 'seek': 360466, 'start': 3604.66, 'end': 3607.66, 'text': ' Now, we still have 5-10 minutes.', 'tokens': [50364, 823, 11, 321, 920, 362, 1025, 12, 3279, 2077, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.125004277084813, 'compression_ratio': 1.6574074074074074, 'no_speech_prob': 0.008312596008181572}, {'id': 623, 'seek': 360466, 'start': 3607.66, 'end': 3613.66, 'text': ' So, what you can do is you can look at this sample code and see what relocations were', 'tokens': [50514, 407, 11, 437, 291, 393, 360, 307, 291, 393, 574, 412, 341, 6889, 3089, 293, 536, 437, 26981, 763, 645, 50814], 'temperature': 0.0, 'avg_logprob': -0.125004277084813, 'compression_ratio': 1.6574074074074074, 'no_speech_prob': 0.008312596008181572}, {'id': 624, 'seek': 360466, 'start': 3613.66, 'end': 3616.66, 'text': ' generated for this code.', 'tokens': [50814, 10833, 337, 341, 3089, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.125004277084813, 'compression_ratio': 1.6574074074074074, 'no_speech_prob': 0.008312596008181572}, {'id': 625, 'seek': 360466, 'start': 3616.66, 'end': 3619.66, 'text': ' You just have to observe what kind of things were generated.', 'tokens': [50964, 509, 445, 362, 281, 11441, 437, 733, 295, 721, 645, 10833, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.125004277084813, 'compression_ratio': 1.6574074074074074, 'no_speech_prob': 0.008312596008181572}, {'id': 626, 'seek': 360466, 'start': 3619.66, 'end': 3626.66, 'text': ' So, I have a external int i and I declare a pointer and take its address.', 'tokens': [51114, 407, 11, 286, 362, 257, 8320, 560, 741, 293, 286, 19710, 257, 23918, 293, 747, 1080, 2985, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.125004277084813, 'compression_ratio': 1.6574074074074074, 'no_speech_prob': 0.008312596008181572}, {'id': 627, 'seek': 360466, 'start': 3626.66, 'end': 3631.66, 'text': ' Now, you can see that there is no way assembler knows what is the address of i.', 'tokens': [51464, 823, 11, 291, 393, 536, 300, 456, 307, 572, 636, 8438, 1918, 3255, 437, 307, 264, 2985, 295, 741, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.125004277084813, 'compression_ratio': 1.6574074074074074, 'no_speech_prob': 0.008312596008181572}, {'id': 628, 'seek': 363166, 'start': 3631.66, 'end': 3634.66, 'text': ' So, it has to generate some relocation.', 'tokens': [50364, 407, 11, 309, 575, 281, 8460, 512, 26981, 399, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.17076065580723648, 'compression_ratio': 1.364963503649635, 'no_speech_prob': 0.03960295766592026}, {'id': 629, 'seek': 363166, 'start': 3634.66, 'end': 3639.66, 'text': ' So, you can look at redelf-r and see what happens.', 'tokens': [50514, 407, 11, 291, 393, 574, 412, 2182, 1967, 12, 81, 293, 536, 437, 2314, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.17076065580723648, 'compression_ratio': 1.364963503649635, 'no_speech_prob': 0.03960295766592026}, {'id': 630, 'seek': 363166, 'start': 3639.66, 'end': 3648.66, 'text': ' Actually, let us try it ourselves here that it might be easier.', 'tokens': [50764, 5135, 11, 718, 505, 853, 309, 4175, 510, 300, 309, 1062, 312, 3571, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.17076065580723648, 'compression_ratio': 1.364963503649635, 'no_speech_prob': 0.03960295766592026}, {'id': 631, 'seek': 363166, 'start': 3648.66, 'end': 3653.66, 'text': ' So, let us say I have this file.', 'tokens': [51214, 407, 11, 718, 505, 584, 286, 362, 341, 3991, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.17076065580723648, 'compression_ratio': 1.364963503649635, 'no_speech_prob': 0.03960295766592026}, {'id': 632, 'seek': 365366, 'start': 3653.66, 'end': 3662.06, 'text': ' Here I declare int star ptr and I have external int i.', 'tokens': [50364, 1692, 286, 19710, 560, 3543, 280, 6903, 293, 286, 362, 8320, 560, 741, 13, 50784], 'temperature': 0.0, 'avg_logprob': -0.22327862066381118, 'compression_ratio': 1.1647058823529413, 'no_speech_prob': 0.7202569246292114}, {'id': 633, 'seek': 365366, 'start': 3662.06, 'end': 3679.66, 'text': ' I do address of i and in file 2, I define i.', 'tokens': [50784, 286, 360, 2985, 295, 741, 293, 294, 3991, 568, 11, 286, 6964, 741, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.22327862066381118, 'compression_ratio': 1.1647058823529413, 'no_speech_prob': 0.7202569246292114}, {'id': 634, 'seek': 367966, 'start': 3679.66, 'end': 3695.66, 'text': ' Now, gcc.', 'tokens': [50364, 823, 11, 290, 1914, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.16633478800455728, 'compression_ratio': 1.1290322580645162, 'no_speech_prob': 0.8823153376579285}, {'id': 635, 'seek': 367966, 'start': 3695.66, 'end': 3708.74, 'text': ' If we look at redelf, so it says i is undefined and pointer is a 4 byte value into data section', 'tokens': [51164, 759, 321, 574, 412, 2182, 1967, 11, 370, 309, 1619, 741, 307, 674, 5666, 2001, 293, 23918, 307, 257, 1017, 40846, 2158, 666, 1412, 3541, 51818], 'temperature': 0.0, 'avg_logprob': -0.16633478800455728, 'compression_ratio': 1.1290322580645162, 'no_speech_prob': 0.8823153376579285}, {'id': 636, 'seek': 370874, 'start': 3708.74, 'end': 3717.06, 'text': ' into data section.', 'tokens': [50364, 666, 1412, 3541, 13, 50780], 'temperature': 0.0, 'avg_logprob': -0.20148400907163266, 'compression_ratio': 1.2530120481927711, 'no_speech_prob': 0.21645590662956238}, {'id': 637, 'seek': 370874, 'start': 3717.06, 'end': 3724.14, 'text': ' If we observe the contents of data section, they should ideally contain address of i.', 'tokens': [50780, 759, 321, 11441, 264, 15768, 295, 1412, 3541, 11, 436, 820, 22915, 5304, 2985, 295, 741, 13, 51134], 'temperature': 0.0, 'avg_logprob': -0.20148400907163266, 'compression_ratio': 1.2530120481927711, 'no_speech_prob': 0.21645590662956238}, {'id': 638, 'seek': 372414, 'start': 3724.14, 'end': 3742.18, 'text': ' So, if you look at it, the content is actually 0 0 because it has no idea what content to', 'tokens': [50364, 407, 11, 498, 291, 574, 412, 309, 11, 264, 2701, 307, 767, 1958, 1958, 570, 309, 575, 572, 1558, 437, 2701, 281, 51266], 'temperature': 0.0, 'avg_logprob': -0.19278671741485595, 'compression_ratio': 1.349056603773585, 'no_speech_prob': 0.01242553349584341}, {'id': 639, 'seek': 372414, 'start': 3742.18, 'end': 3744.62, 'text': ' put there because it was supposed to be address of i.', 'tokens': [51266, 829, 456, 570, 309, 390, 3442, 281, 312, 2985, 295, 741, 13, 51388], 'temperature': 0.0, 'avg_logprob': -0.19278671741485595, 'compression_ratio': 1.349056603773585, 'no_speech_prob': 0.01242553349584341}, {'id': 640, 'seek': 374462, 'start': 3744.62, 'end': 3762.94, 'text': ' Now, if we look at redelf, what it is saying is at offset 0 in the data section, apply', 'tokens': [50364, 823, 11, 498, 321, 574, 412, 2182, 1967, 11, 437, 309, 307, 1566, 307, 412, 18687, 1958, 294, 264, 1412, 3541, 11, 3079, 51280], 'temperature': 0.0, 'avg_logprob': -0.22774571312798395, 'compression_ratio': 1.2307692307692308, 'no_speech_prob': 0.09518052637577057}, {'id': 641, 'seek': 374462, 'start': 3762.94, 'end': 3768.3399999999997, 'text': ' this relocation and put address of i.', 'tokens': [51280, 341, 26981, 399, 293, 829, 2985, 295, 741, 13, 51550], 'temperature': 0.0, 'avg_logprob': -0.22774571312798395, 'compression_ratio': 1.2307692307692308, 'no_speech_prob': 0.09518052637577057}, {'id': 642, 'seek': 374462, 'start': 3768.3399999999997, 'end': 3769.8199999999997, 'text': ' Does it make sense?', 'tokens': [51550, 4402, 309, 652, 2020, 30, 51624], 'temperature': 0.0, 'avg_logprob': -0.22774571312798395, 'compression_ratio': 1.2307692307692308, 'no_speech_prob': 0.09518052637577057}, {'id': 643, 'seek': 376982, 'start': 3770.7000000000003, 'end': 3778.1800000000003, 'text': ' So, in the data section at offset 0, offset 0 holds content of ptr.', 'tokens': [50408, 407, 11, 294, 264, 1412, 3541, 412, 18687, 1958, 11, 18687, 1958, 9190, 2701, 295, 280, 6903, 13, 50782], 'temperature': 0.0, 'avg_logprob': -0.29804185379383175, 'compression_ratio': 1.2321428571428572, 'no_speech_prob': 0.5917425155639648}, {'id': 644, 'seek': 376982, 'start': 3778.1800000000003, 'end': 3782.6600000000003, 'text': ' Put the address of i.', 'tokens': [50782, 4935, 264, 2985, 295, 741, 13, 51006], 'temperature': 0.0, 'avg_logprob': -0.29804185379383175, 'compression_ratio': 1.2321428571428572, 'no_speech_prob': 0.5917425155639648}, {'id': 645, 'seek': 376982, 'start': 3782.6600000000003, 'end': 3785.26, 'text': ' Let us look at slightly more convoluted example.', 'tokens': [51006, 961, 505, 574, 412, 4748, 544, 3754, 2308, 292, 1365, 13, 51136], 'temperature': 0.0, 'avg_logprob': -0.29804185379383175, 'compression_ratio': 1.2321428571428572, 'no_speech_prob': 0.5917425155639648}, {'id': 646, 'seek': 378526, 'start': 3785.26, 'end': 3805.9, 'text': ' So, let us say I had int i and int j and I had two pointers, let us say.', 'tokens': [50364, 407, 11, 718, 505, 584, 286, 632, 560, 741, 293, 560, 361, 293, 286, 632, 732, 44548, 11, 718, 505, 584, 13, 51396], 'temperature': 0.0, 'avg_logprob': -0.4091207797710712, 'compression_ratio': 1.263157894736842, 'no_speech_prob': 0.2476658672094345}, {'id': 647, 'seek': 380590, 'start': 3805.9, 'end': 3813.1800000000003, 'text': ' So, I see two relocations.', 'tokens': [50364, 407, 11, 286, 536, 732, 26981, 763, 13, 50728], 'temperature': 0.0, 'avg_logprob': -0.17552224913639808, 'compression_ratio': 1.591549295774648, 'no_speech_prob': 0.09926975518465042}, {'id': 648, 'seek': 380590, 'start': 3813.1800000000003, 'end': 3820.28, 'text': ' One is at address 0 which says patch the address of i and other is at offset 4 which says patch', 'tokens': [50728, 1485, 307, 412, 2985, 1958, 597, 1619, 9972, 264, 2985, 295, 741, 293, 661, 307, 412, 18687, 1017, 597, 1619, 9972, 51083], 'temperature': 0.0, 'avg_logprob': -0.17552224913639808, 'compression_ratio': 1.591549295774648, 'no_speech_prob': 0.09926975518465042}, {'id': 649, 'seek': 380590, 'start': 3820.28, 'end': 3823.02, 'text': ' the address of j.', 'tokens': [51083, 264, 2985, 295, 361, 13, 51220], 'temperature': 0.0, 'avg_logprob': -0.17552224913639808, 'compression_ratio': 1.591549295774648, 'no_speech_prob': 0.09926975518465042}, {'id': 650, 'seek': 380590, 'start': 3823.02, 'end': 3834.46, 'text': ' If you look at symbol table, i is at offset 0 in the data section and j, sorry ptr is', 'tokens': [51220, 759, 291, 574, 412, 5986, 3199, 11, 741, 307, 412, 18687, 1958, 294, 264, 1412, 3541, 293, 361, 11, 2597, 280, 6903, 307, 51792], 'temperature': 0.0, 'avg_logprob': -0.17552224913639808, 'compression_ratio': 1.591549295774648, 'no_speech_prob': 0.09926975518465042}, {'id': 651, 'seek': 383446, 'start': 3834.54, 'end': 3839.18, 'text': ' at offset 0 in the data section and ptr 2 is at offset 4.', 'tokens': [50368, 412, 18687, 1958, 294, 264, 1412, 3541, 293, 280, 6903, 568, 307, 412, 18687, 1017, 13, 50600], 'temperature': 0.0, 'avg_logprob': -0.2581386365388569, 'compression_ratio': 1.67, 'no_speech_prob': 0.13636133074760437}, {'id': 652, 'seek': 383446, 'start': 3839.18, 'end': 3843.9, 'text': ' So, are you getting how the relocation information is generated?', 'tokens': [50600, 407, 11, 366, 291, 1242, 577, 264, 26981, 399, 1589, 307, 10833, 30, 50836], 'temperature': 0.0, 'avg_logprob': -0.2581386365388569, 'compression_ratio': 1.67, 'no_speech_prob': 0.13636133074760437}, {'id': 653, 'seek': 383446, 'start': 3843.9, 'end': 3849.86, 'text': ' So, relocation information in nutshell is saying go to this section, add this offset,', 'tokens': [50836, 407, 11, 26981, 399, 1589, 294, 37711, 307, 1566, 352, 281, 341, 3541, 11, 909, 341, 18687, 11, 51134], 'temperature': 0.0, 'avg_logprob': -0.2581386365388569, 'compression_ratio': 1.67, 'no_speech_prob': 0.13636133074760437}, {'id': 654, 'seek': 383446, 'start': 3849.86, 'end': 3852.78, 'text': ' change these values by address of this.', 'tokens': [51134, 1319, 613, 4190, 538, 2985, 295, 341, 13, 51280], 'temperature': 0.0, 'avg_logprob': -0.2581386365388569, 'compression_ratio': 1.67, 'no_speech_prob': 0.13636133074760437}, {'id': 655, 'seek': 383446, 'start': 3852.78, 'end': 3857.06, 'text': ' Now, let us look at what happens in file 2.c.', 'tokens': [51280, 823, 11, 718, 505, 574, 412, 437, 2314, 294, 3991, 568, 13, 66, 13, 51494], 'temperature': 0.0, 'avg_logprob': -0.2581386365388569, 'compression_ratio': 1.67, 'no_speech_prob': 0.13636133074760437}, {'id': 656, 'seek': 383446, 'start': 3857.06, 'end': 3861.66, 'text': ' So, I have file 2.c which defined this.', 'tokens': [51494, 407, 11, 286, 362, 3991, 568, 13, 66, 597, 7642, 341, 13, 51724], 'temperature': 0.0, 'avg_logprob': -0.2581386365388569, 'compression_ratio': 1.67, 'no_speech_prob': 0.13636133074760437}, {'id': 657, 'seek': 386166, 'start': 3862.2999999999997, 'end': 3874.3799999999997, 'text': ' So, if I look at dot data section, I could see this.', 'tokens': [50396, 407, 11, 498, 286, 574, 412, 5893, 1412, 3541, 11, 286, 727, 536, 341, 13, 51000], 'temperature': 0.0, 'avg_logprob': -0.17227443526772893, 'compression_ratio': 1.5033557046979866, 'no_speech_prob': 0.04265986382961273}, {'id': 658, 'seek': 386166, 'start': 3874.3799999999997, 'end': 3882.22, 'text': ' So, it says that the content of ptr is 0000, but it has a relocation which is going to', 'tokens': [51000, 407, 11, 309, 1619, 300, 264, 2701, 295, 280, 6903, 307, 7143, 628, 11, 457, 309, 575, 257, 26981, 399, 597, 307, 516, 281, 51392], 'temperature': 0.0, 'avg_logprob': -0.17227443526772893, 'compression_ratio': 1.5033557046979866, 'no_speech_prob': 0.04265986382961273}, {'id': 659, 'seek': 386166, 'start': 3882.22, 'end': 3889.3399999999997, 'text': ' change it with address of i and then ptr 2 is again 0000 and its content is going to', 'tokens': [51392, 1319, 309, 365, 2985, 295, 741, 293, 550, 280, 6903, 568, 307, 797, 7143, 628, 293, 1080, 2701, 307, 516, 281, 51748], 'temperature': 0.0, 'avg_logprob': -0.17227443526772893, 'compression_ratio': 1.5033557046979866, 'no_speech_prob': 0.04265986382961273}, {'id': 660, 'seek': 388934, 'start': 3889.34, 'end': 3891.1000000000004, 'text': ' change with address of j.', 'tokens': [50364, 1319, 365, 2985, 295, 361, 13, 50452], 'temperature': 0.0, 'avg_logprob': -0.4816961924235026, 'compression_ratio': 1.075, 'no_speech_prob': 0.14710572361946106}, {'id': 661, 'seek': 388934, 'start': 3891.1000000000004, 'end': 3893.7400000000002, 'text': ' Now, let us link these two things.', 'tokens': [50452, 823, 11, 718, 505, 2113, 613, 732, 721, 13, 50584], 'temperature': 0.0, 'avg_logprob': -0.4816961924235026, 'compression_ratio': 1.075, 'no_speech_prob': 0.14710572361946106}, {'id': 662, 'seek': 388934, 'start': 3893.7400000000002, 'end': 3907.1000000000004, 'text': ' So, these are now linked.', 'tokens': [50584, 407, 11, 613, 366, 586, 9408, 13, 51252], 'temperature': 0.0, 'avg_logprob': -0.4816961924235026, 'compression_ratio': 1.075, 'no_speech_prob': 0.14710572361946106}, {'id': 663, 'seek': 390710, 'start': 3907.1, 'end': 3928.74, 'text': ' Now let us look at, so we can see the content of data section is something like this 1cA408', 'tokens': [50364, 823, 718, 505, 574, 412, 11, 370, 321, 393, 536, 264, 2701, 295, 1412, 3541, 307, 746, 411, 341, 502, 66, 32, 5254, 23, 51446], 'temperature': 0.0, 'avg_logprob': -0.28656251089913504, 'compression_ratio': 1.2747252747252746, 'no_speech_prob': 0.03593803197145462}, {'id': 664, 'seek': 390710, 'start': 3928.74, 'end': 3930.38, 'text': ' and something like this.', 'tokens': [51446, 293, 746, 411, 341, 13, 51528], 'temperature': 0.0, 'avg_logprob': -0.28656251089913504, 'compression_ratio': 1.2747252747252746, 'no_speech_prob': 0.03593803197145462}, {'id': 665, 'seek': 393038, 'start': 3930.38, 'end': 3947.82, 'text': ' And if we look at i, this is actually at address this 1c0A408.', 'tokens': [50364, 400, 498, 321, 574, 412, 741, 11, 341, 307, 767, 412, 2985, 341, 502, 66, 15, 32, 5254, 23, 13, 51236], 'temperature': 0.0, 'avg_logprob': -0.2501850657992893, 'compression_ratio': 1.3383458646616542, 'no_speech_prob': 0.022576089948415756}, {'id': 666, 'seek': 393038, 'start': 3947.82, 'end': 3950.42, 'text': ' So, you could see that.', 'tokens': [51236, 407, 11, 291, 727, 536, 300, 13, 51366], 'temperature': 0.0, 'avg_logprob': -0.2501850657992893, 'compression_ratio': 1.3383458646616542, 'no_speech_prob': 0.022576089948415756}, {'id': 667, 'seek': 393038, 'start': 3950.42, 'end': 3956.7000000000003, 'text': ' So, essentially what linker ended up doing is after it allocated i, it changed that content', 'tokens': [51366, 407, 11, 4476, 437, 2113, 260, 4590, 493, 884, 307, 934, 309, 29772, 741, 11, 309, 3105, 300, 2701, 51680], 'temperature': 0.0, 'avg_logprob': -0.2501850657992893, 'compression_ratio': 1.3383458646616542, 'no_speech_prob': 0.022576089948415756}, {'id': 668, 'seek': 395670, 'start': 3957.18, 'end': 3962.22, 'text': ' to whatever was address of i.', 'tokens': [50388, 281, 2035, 390, 2985, 295, 741, 13, 50640], 'temperature': 0.0, 'avg_logprob': -0.1700173146796949, 'compression_ratio': 1.488235294117647, 'no_speech_prob': 0.07151953130960464}, {'id': 669, 'seek': 395670, 'start': 3962.22, 'end': 3964.8599999999997, 'text': ' Is this clear on what happened so far?', 'tokens': [50640, 1119, 341, 1850, 322, 437, 2011, 370, 1400, 30, 50772], 'temperature': 0.0, 'avg_logprob': -0.1700173146796949, 'compression_ratio': 1.488235294117647, 'no_speech_prob': 0.07151953130960464}, {'id': 670, 'seek': 395670, 'start': 3964.8599999999997, 'end': 3971.7799999999997, 'text': ' So, just to summarize, relocation is going to change content of a section with address', 'tokens': [50772, 407, 11, 445, 281, 20858, 11, 26981, 399, 307, 516, 281, 1319, 2701, 295, 257, 3541, 365, 2985, 51118], 'temperature': 0.0, 'avg_logprob': -0.1700173146796949, 'compression_ratio': 1.488235294117647, 'no_speech_prob': 0.07151953130960464}, {'id': 671, 'seek': 395670, 'start': 3971.7799999999997, 'end': 3974.8999999999996, 'text': ' of some variables.', 'tokens': [51118, 295, 512, 9102, 13, 51274], 'temperature': 0.0, 'avg_logprob': -0.1700173146796949, 'compression_ratio': 1.488235294117647, 'no_speech_prob': 0.07151953130960464}, {'id': 672, 'seek': 395670, 'start': 3974.8999999999996, 'end': 3979.98, 'text': ' And it is going to do that after linker has allocated addresses to everything.', 'tokens': [51274, 400, 309, 307, 516, 281, 360, 300, 934, 2113, 260, 575, 29772, 16862, 281, 1203, 13, 51528], 'temperature': 0.0, 'avg_logprob': -0.1700173146796949, 'compression_ratio': 1.488235294117647, 'no_speech_prob': 0.07151953130960464}, {'id': 673, 'seek': 397998, 'start': 3980.34, 'end': 3986.22, 'text': ' So when linker merged the input files, it assigned addresses to everything and after', 'tokens': [50382, 407, 562, 2113, 260, 36427, 264, 4846, 7098, 11, 309, 13279, 16862, 281, 1203, 293, 934, 50676], 'temperature': 0.0, 'avg_logprob': -0.16673165995900224, 'compression_ratio': 1.6697247706422018, 'no_speech_prob': 0.05496954545378685}, {'id': 674, 'seek': 397998, 'start': 3986.22, 'end': 3991.98, 'text': ' that it went over each relocation and changed the content to hold that address, whichever', 'tokens': [50676, 300, 309, 1437, 670, 1184, 26981, 399, 293, 3105, 264, 2701, 281, 1797, 300, 2985, 11, 24123, 50964], 'temperature': 0.0, 'avg_logprob': -0.16673165995900224, 'compression_ratio': 1.6697247706422018, 'no_speech_prob': 0.05496954545378685}, {'id': 675, 'seek': 397998, 'start': 3991.98, 'end': 3993.54, 'text': ' it was assigned.', 'tokens': [50964, 309, 390, 13279, 13, 51042], 'temperature': 0.0, 'avg_logprob': -0.16673165995900224, 'compression_ratio': 1.6697247706422018, 'no_speech_prob': 0.05496954545378685}, {'id': 676, 'seek': 397998, 'start': 3993.54, 'end': 3999.7, 'text': ' And by this mechanism, the executable file which you have does not have any unresolved', 'tokens': [51042, 400, 538, 341, 7513, 11, 264, 7568, 712, 3991, 597, 291, 362, 775, 406, 362, 604, 517, 495, 29110, 51350], 'temperature': 0.0, 'avg_logprob': -0.16673165995900224, 'compression_ratio': 1.6697247706422018, 'no_speech_prob': 0.05496954545378685}, {'id': 677, 'seek': 397998, 'start': 3999.7, 'end': 4006.1, 'text': ' references because all the move instructions were changed to point to actual address.', 'tokens': [51350, 15400, 570, 439, 264, 1286, 9415, 645, 3105, 281, 935, 281, 3539, 2985, 13, 51670], 'temperature': 0.0, 'avg_logprob': -0.16673165995900224, 'compression_ratio': 1.6697247706422018, 'no_speech_prob': 0.05496954545378685}, {'id': 678, 'seek': 400610, 'start': 4006.1, 'end': 4010.7, 'text': ' Content of PTR was changed to point to the actual address of i.', 'tokens': [50364, 30078, 295, 430, 25936, 390, 3105, 281, 935, 281, 264, 3539, 2985, 295, 741, 13, 50594], 'temperature': 0.0, 'avg_logprob': -0.18661743460349667, 'compression_ratio': 1.5849802371541502, 'no_speech_prob': 0.012802639044821262}, {'id': 679, 'seek': 400610, 'start': 4010.7, 'end': 4014.86, 'text': ' That is why executable files are self-sufficient.', 'tokens': [50594, 663, 307, 983, 7568, 712, 7098, 366, 2698, 12, 82, 30664, 13, 50802], 'temperature': 0.0, 'avg_logprob': -0.18661743460349667, 'compression_ratio': 1.5849802371541502, 'no_speech_prob': 0.012802639044821262}, {'id': 680, 'seek': 400610, 'start': 4014.86, 'end': 4019.54, 'text': ' They do not have any other dependencies and they can actually be run directly.', 'tokens': [50802, 814, 360, 406, 362, 604, 661, 36606, 293, 436, 393, 767, 312, 1190, 3838, 13, 51036], 'temperature': 0.0, 'avg_logprob': -0.18661743460349667, 'compression_ratio': 1.5849802371541502, 'no_speech_prob': 0.012802639044821262}, {'id': 681, 'seek': 400610, 'start': 4019.54, 'end': 4024.2999999999997, 'text': ' So, I think we will stop here for today.', 'tokens': [51036, 407, 11, 286, 519, 321, 486, 1590, 510, 337, 965, 13, 51274], 'temperature': 0.0, 'avg_logprob': -0.18661743460349667, 'compression_ratio': 1.5849802371541502, 'no_speech_prob': 0.012802639044821262}, {'id': 682, 'seek': 400610, 'start': 4024.2999999999997, 'end': 4028.5, 'text': ' I am still here for some more time, so if you have questions, I can answer that.', 'tokens': [51274, 286, 669, 920, 510, 337, 512, 544, 565, 11, 370, 498, 291, 362, 1651, 11, 286, 393, 1867, 300, 13, 51484], 'temperature': 0.0, 'avg_logprob': -0.18661743460349667, 'compression_ratio': 1.5849802371541502, 'no_speech_prob': 0.012802639044821262}, {'id': 683, 'seek': 400610, 'start': 4028.5, 'end': 4034.5, 'text': ' And tomorrow we will start with how static libraries are implemented in the linker and', 'tokens': [51484, 400, 4153, 321, 486, 722, 365, 577, 13437, 15148, 366, 12270, 294, 264, 2113, 260, 293, 51784], 'temperature': 0.0, 'avg_logprob': -0.18661743460349667, 'compression_ratio': 1.5849802371541502, 'no_speech_prob': 0.012802639044821262}, {'id': 684, 'seek': 403450, 'start': 4034.58, 'end': 4041.3, 'text': ' various other things with respect to how program will actually start executing in the system.', 'tokens': [50368, 3683, 661, 721, 365, 3104, 281, 577, 1461, 486, 767, 722, 32368, 294, 264, 1185, 13, 50704], 'temperature': 0.0, 'avg_logprob': -0.1571804682413737, 'compression_ratio': 1.5947136563876652, 'no_speech_prob': 0.013611090369522572}, {'id': 685, 'seek': 403450, 'start': 4041.3, 'end': 4047.9, 'text': " Just to summarize today's discussion, so we kind of started off with what happens during", 'tokens': [50704, 1449, 281, 20858, 965, 311, 5017, 11, 370, 321, 733, 295, 1409, 766, 365, 437, 2314, 1830, 51034], 'temperature': 0.0, 'avg_logprob': -0.1571804682413737, 'compression_ratio': 1.5947136563876652, 'no_speech_prob': 0.013611090369522572}, {'id': 686, 'seek': 403450, 'start': 4047.9, 'end': 4055.02, 'text': ' the overall compilation flow, preprocessor, compiler, linker, assembler and so on.', 'tokens': [51034, 264, 4787, 40261, 3095, 11, 2666, 340, 25432, 11, 31958, 11, 2113, 260, 11, 8438, 1918, 293, 370, 322, 13, 51390], 'temperature': 0.0, 'avg_logprob': -0.1571804682413737, 'compression_ratio': 1.5947136563876652, 'no_speech_prob': 0.013611090369522572}, {'id': 687, 'seek': 403450, 'start': 4055.02, 'end': 4061.1, 'text': ' Then we looked into details of what all happens during a function call, how the return addresses', 'tokens': [51390, 1396, 321, 2956, 666, 4365, 295, 437, 439, 2314, 1830, 257, 2445, 818, 11, 577, 264, 2736, 16862, 51694], 'temperature': 0.0, 'avg_logprob': -0.1571804682413737, 'compression_ratio': 1.5947136563876652, 'no_speech_prob': 0.013611090369522572}, {'id': 688, 'seek': 406110, 'start': 4061.1, 'end': 4067.58, 'text': ' are saved, how parameters are passed, how stack is used to allocate local variables.', 'tokens': [50364, 366, 6624, 11, 577, 9834, 366, 4678, 11, 577, 8630, 307, 1143, 281, 35713, 2654, 9102, 13, 50688], 'temperature': 0.0, 'avg_logprob': -0.1297156673738326, 'compression_ratio': 1.7476635514018692, 'no_speech_prob': 0.01794702373445034}, {'id': 689, 'seek': 406110, 'start': 4067.58, 'end': 4072.98, 'text': ' Then we looked into the linker and linker kind of tried to have details of how the object', 'tokens': [50688, 1396, 321, 2956, 666, 264, 2113, 260, 293, 2113, 260, 733, 295, 3031, 281, 362, 4365, 295, 577, 264, 2657, 50958], 'temperature': 0.0, 'avg_logprob': -0.1297156673738326, 'compression_ratio': 1.7476635514018692, 'no_speech_prob': 0.01794702373445034}, {'id': 690, 'seek': 406110, 'start': 4072.98, 'end': 4079.6, 'text': ' files are merged together, how the references are resolved and what are the rules about', 'tokens': [50958, 7098, 366, 36427, 1214, 11, 577, 264, 15400, 366, 20772, 293, 437, 366, 264, 4474, 466, 51289], 'temperature': 0.0, 'avg_logprob': -0.1297156673738326, 'compression_ratio': 1.7476635514018692, 'no_speech_prob': 0.01794702373445034}, {'id': 691, 'seek': 406110, 'start': 4079.6, 'end': 4082.22, 'text': ' strong and weak symbols.', 'tokens': [51289, 2068, 293, 5336, 16944, 13, 51420], 'temperature': 0.0, 'avg_logprob': -0.1297156673738326, 'compression_ratio': 1.7476635514018692, 'no_speech_prob': 0.01794702373445034}, {'id': 692, 'seek': 406110, 'start': 4082.22, 'end': 4087.86, 'text': ' And we also looked at content of the object file itself that it has sections which are', 'tokens': [51420, 400, 321, 611, 2956, 412, 2701, 295, 264, 2657, 3991, 2564, 300, 309, 575, 10863, 597, 366, 51702], 'temperature': 0.0, 'avg_logprob': -0.1297156673738326, 'compression_ratio': 1.7476635514018692, 'no_speech_prob': 0.01794702373445034}, {'id': 693, 'seek': 408786, 'start': 4087.86, 'end': 4094.58, 'text': ' organized and section itself are described using section header.', 'tokens': [50364, 9983, 293, 3541, 2564, 366, 7619, 1228, 3541, 23117, 13, 50700], 'temperature': 0.0, 'avg_logprob': -0.22199346308122603, 'compression_ratio': 1.655844155844156, 'no_speech_prob': 0.2937333583831787}, {'id': 694, 'seek': 408786, 'start': 4094.58, 'end': 4100.26, 'text': ' Section headers are derived from the elf header which has a pointer to it.', 'tokens': [50700, 21804, 45101, 366, 18949, 490, 264, 35565, 23117, 597, 575, 257, 23918, 281, 309, 13, 50984], 'temperature': 0.0, 'avg_logprob': -0.22199346308122603, 'compression_ratio': 1.655844155844156, 'no_speech_prob': 0.2937333583831787}, {'id': 695, 'seek': 408786, 'start': 4100.26, 'end': 4106.06, 'text': ' And each of the section may have relocations which dictate how to change content of the', 'tokens': [50984, 400, 1184, 295, 264, 3541, 815, 362, 26981, 763, 597, 36071, 577, 281, 1319, 2701, 295, 264, 51274], 'temperature': 0.0, 'avg_logprob': -0.22199346308122603, 'compression_ratio': 1.655844155844156, 'no_speech_prob': 0.2937333583831787}, {'id': 696, 'seek': 408786, 'start': 4106.06, 'end': 4109.58, 'text': ' section to hold final date.', 'tokens': [51274, 3541, 281, 1797, 2572, 4002, 13, 51450], 'temperature': 0.0, 'avg_logprob': -0.22199346308122603, 'compression_ratio': 1.655844155844156, 'no_speech_prob': 0.2937333583831787}]