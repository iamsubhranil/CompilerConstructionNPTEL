[{'id': 0, 'seek': 0, 'start': 0.0, 'end': 12.16, 'text': ' Yesterday we started with data flow analysis. So, today we will go ahead with that. So,', 'tokens': [50364, 19765, 321, 1409, 365, 1412, 3095, 5215, 13, 407, 11, 965, 321, 486, 352, 2286, 365, 300, 13, 407, 11, 50972], 'temperature': 0.0, 'avg_logprob': -0.23620996977153577, 'compression_ratio': 1.6993865030674846, 'no_speech_prob': 0.03394114971160889}, {'id': 1, 'seek': 0, 'start': 12.16, 'end': 16.44, 'text': ' essentially the idea was that we essentially looked at 4 classic problems in data flow', 'tokens': [50972, 4476, 264, 1558, 390, 300, 321, 4476, 2956, 412, 1017, 7230, 2740, 294, 1412, 3095, 51186], 'temperature': 0.0, 'avg_logprob': -0.23620996977153577, 'compression_ratio': 1.6993865030674846, 'no_speech_prob': 0.03394114971160889}, {'id': 2, 'seek': 0, 'start': 16.44, 'end': 22.8, 'text': ' analysis reaching definitions, available expressions, live variable analysis and very busy expressions', 'tokens': [51186, 5215, 9906, 21988, 11, 2435, 15277, 11, 1621, 7006, 5215, 293, 588, 5856, 15277, 51504], 'temperature': 0.0, 'avg_logprob': -0.23620996977153577, 'compression_ratio': 1.6993865030674846, 'no_speech_prob': 0.03394114971160889}, {'id': 3, 'seek': 2280, 'start': 22.8, 'end': 32.36, 'text': ' right. So, just very quickly recap what was reaching definition? What is the what do we', 'tokens': [50364, 558, 13, 407, 11, 445, 588, 2661, 20928, 437, 390, 9906, 7123, 30, 708, 307, 264, 437, 360, 321, 50842], 'temperature': 0.0, 'avg_logprob': -0.24789957566694779, 'compression_ratio': 1.9414893617021276, 'no_speech_prob': 0.3314919173717499}, {'id': 4, 'seek': 2280, 'start': 32.36, 'end': 37.52, 'text': ' try to compute reaching definitions? Yeah, so for from the set of all definitions. So,', 'tokens': [50842, 853, 281, 14722, 9906, 21988, 30, 865, 11, 370, 337, 490, 264, 992, 295, 439, 21988, 13, 407, 11, 51100], 'temperature': 0.0, 'avg_logprob': -0.24789957566694779, 'compression_ratio': 1.9414893617021276, 'no_speech_prob': 0.3314919173717499}, {'id': 5, 'seek': 2280, 'start': 37.52, 'end': 45.040000000000006, 'text': ' what are definitions? Assignments to variables are definitions. So, for every, so now we from', 'tokens': [51100, 437, 366, 21988, 30, 6281, 788, 1117, 281, 9102, 366, 21988, 13, 407, 11, 337, 633, 11, 370, 586, 321, 490, 51476], 'temperature': 0.0, 'avg_logprob': -0.24789957566694779, 'compression_ratio': 1.9414893617021276, 'no_speech_prob': 0.3314919173717499}, {'id': 6, 'seek': 2280, 'start': 45.040000000000006, 'end': 51.24, 'text': ' the program we have the set of all definitions and we are asking what are the set of definitions', 'tokens': [51476, 264, 1461, 321, 362, 264, 992, 295, 439, 21988, 293, 321, 366, 3365, 437, 366, 264, 992, 295, 21988, 51786], 'temperature': 0.0, 'avg_logprob': -0.24789957566694779, 'compression_ratio': 1.9414893617021276, 'no_speech_prob': 0.3314919173717499}, {'id': 7, 'seek': 5124, 'start': 51.24, 'end': 56.160000000000004, 'text': ' which can reach a given location. So, what does it mean for a definition to reach a given location?', 'tokens': [50364, 597, 393, 2524, 257, 2212, 4914, 13, 407, 11, 437, 775, 309, 914, 337, 257, 7123, 281, 2524, 257, 2212, 4914, 30, 50610], 'temperature': 0.0, 'avg_logprob': -0.16044280642554873, 'compression_ratio': 1.7830188679245282, 'no_speech_prob': 0.07352133095264435}, {'id': 8, 'seek': 5124, 'start': 56.160000000000004, 'end': 62.040000000000006, 'text': ' That there is a path that exists from that particular definition to this program point', 'tokens': [50610, 663, 456, 307, 257, 3100, 300, 8198, 490, 300, 1729, 7123, 281, 341, 1461, 935, 50904], 'temperature': 0.0, 'avg_logprob': -0.16044280642554873, 'compression_ratio': 1.7830188679245282, 'no_speech_prob': 0.07352133095264435}, {'id': 9, 'seek': 5124, 'start': 62.040000000000006, 'end': 70.36, 'text': ' and the definition is not killed during in that actually in at least one of these paths right.', 'tokens': [50904, 293, 264, 7123, 307, 406, 4652, 1830, 294, 300, 767, 294, 412, 1935, 472, 295, 613, 14518, 558, 13, 51320], 'temperature': 0.0, 'avg_logprob': -0.16044280642554873, 'compression_ratio': 1.7830188679245282, 'no_speech_prob': 0.07352133095264435}, {'id': 10, 'seek': 5124, 'start': 70.36, 'end': 78.56, 'text': ' So, the second problem was available expressions. What was available expressions? Right, so what', 'tokens': [51320, 407, 11, 264, 1150, 1154, 390, 2435, 15277, 13, 708, 390, 2435, 15277, 30, 1779, 11, 370, 437, 51730], 'temperature': 0.0, 'avg_logprob': -0.16044280642554873, 'compression_ratio': 1.7830188679245282, 'no_speech_prob': 0.07352133095264435}, {'id': 11, 'seek': 7856, 'start': 78.56, 'end': 85.8, 'text': ' does it mean for an expression? It is computed along all paths reaching that particular program', 'tokens': [50364, 775, 309, 914, 337, 364, 6114, 30, 467, 307, 40610, 2051, 439, 14518, 9906, 300, 1729, 1461, 50726], 'temperature': 0.0, 'avg_logprob': -0.16782526223056288, 'compression_ratio': 1.7075471698113207, 'no_speech_prob': 0.007848997600376606}, {'id': 12, 'seek': 7856, 'start': 85.8, 'end': 92.24000000000001, 'text': ' point. Then we have live variable analysis right. So, what are the set of variables that are used', 'tokens': [50726, 935, 13, 1396, 321, 362, 1621, 7006, 5215, 558, 13, 407, 11, 437, 366, 264, 992, 295, 9102, 300, 366, 1143, 51048], 'temperature': 0.0, 'avg_logprob': -0.16782526223056288, 'compression_ratio': 1.7075471698113207, 'no_speech_prob': 0.007848997600376606}, {'id': 13, 'seek': 7856, 'start': 92.24000000000001, 'end': 100.16, 'text': ' on at least one of the paths from the given program point to program exit right and finally,', 'tokens': [51048, 322, 412, 1935, 472, 295, 264, 14518, 490, 264, 2212, 1461, 935, 281, 1461, 11043, 558, 293, 2721, 11, 51444], 'temperature': 0.0, 'avg_logprob': -0.16782526223056288, 'compression_ratio': 1.7075471698113207, 'no_speech_prob': 0.007848997600376606}, {'id': 14, 'seek': 7856, 'start': 100.16, 'end': 108.08, 'text': ' we have very busy expressions which say what are the expressions? Yes, yes.', 'tokens': [51444, 321, 362, 588, 5856, 15277, 597, 584, 437, 366, 264, 15277, 30, 1079, 11, 2086, 13, 51840], 'temperature': 0.0, 'avg_logprob': -0.16782526223056288, 'compression_ratio': 1.7075471698113207, 'no_speech_prob': 0.007848997600376606}, {'id': 15, 'seek': 10808, 'start': 108.08, 'end': 112.24, 'text': ' Next question which will be computed in every possible path from the given location to the', 'tokens': [50364, 3087, 1168, 597, 486, 312, 40610, 294, 633, 1944, 3100, 490, 264, 2212, 4914, 281, 264, 50572], 'temperature': 0.0, 'avg_logprob': -0.20555437022242054, 'compression_ratio': 1.6069868995633187, 'no_speech_prob': 0.01951862871646881}, {'id': 16, 'seek': 10808, 'start': 112.24, 'end': 122.88, 'text': ' program exit. Excellent, so now, so we will keep on revising whatever we did yesterday and let us', 'tokens': [50572, 1461, 11043, 13, 16723, 11, 370, 586, 11, 370, 321, 486, 1066, 322, 3698, 3436, 2035, 321, 630, 5186, 293, 718, 505, 51104], 'temperature': 0.0, 'avg_logprob': -0.20555437022242054, 'compression_ratio': 1.6069868995633187, 'no_speech_prob': 0.01951862871646881}, {'id': 17, 'seek': 10808, 'start': 122.88, 'end': 129.8, 'text': ' hope that we do not have an issue. We have looked at the definition of region definitions. So,', 'tokens': [51104, 1454, 300, 321, 360, 406, 362, 364, 2734, 13, 492, 362, 2956, 412, 264, 7123, 295, 4458, 21988, 13, 407, 11, 51450], 'temperature': 0.0, 'avg_logprob': -0.20555437022242054, 'compression_ratio': 1.6069868995633187, 'no_speech_prob': 0.01951862871646881}, {'id': 18, 'seek': 10808, 'start': 129.8, 'end': 135.32, 'text': ' essentially we had this idea of this idea of tokens flowing in the system right. So,', 'tokens': [51450, 4476, 321, 632, 341, 1558, 295, 341, 1558, 295, 22667, 13974, 294, 264, 1185, 558, 13, 407, 11, 51726], 'temperature': 0.0, 'avg_logprob': -0.20555437022242054, 'compression_ratio': 1.6069868995633187, 'no_speech_prob': 0.01951862871646881}, {'id': 19, 'seek': 13532, 'start': 135.32, 'end': 140.4, 'text': ' essentially we are thinking that every point there is a definition, there is a token that gets', 'tokens': [50364, 4476, 321, 366, 1953, 300, 633, 935, 456, 307, 257, 7123, 11, 456, 307, 257, 14862, 300, 2170, 50618], 'temperature': 0.0, 'avg_logprob': -0.1552726058072822, 'compression_ratio': 1.8333333333333333, 'no_speech_prob': 0.26615893840789795}, {'id': 20, 'seek': 13532, 'start': 140.4, 'end': 147.76, 'text': ' generated and if every time I have multiple paths reaching a program point, I will collect the', 'tokens': [50618, 10833, 293, 498, 633, 565, 286, 362, 3866, 14518, 9906, 257, 1461, 935, 11, 286, 486, 2500, 264, 50986], 'temperature': 0.0, 'avg_logprob': -0.1552726058072822, 'compression_ratio': 1.8333333333333333, 'no_speech_prob': 0.26615893840789795}, {'id': 21, 'seek': 13532, 'start': 147.76, 'end': 155.68, 'text': ' tokens along all paths. If a program point bifurcates into two paths into there are two', 'tokens': [50986, 22667, 2051, 439, 14518, 13, 759, 257, 1461, 935, 272, 351, 374, 66, 1024, 666, 732, 14518, 666, 456, 366, 732, 51382], 'temperature': 0.0, 'avg_logprob': -0.1552726058072822, 'compression_ratio': 1.8333333333333333, 'no_speech_prob': 0.26615893840789795}, {'id': 22, 'seek': 13532, 'start': 155.68, 'end': 161.88, 'text': ' edges outgoing edges, then I will copy the token and duplicate along both the paths and if there', 'tokens': [51382, 8819, 41565, 8819, 11, 550, 286, 486, 5055, 264, 14862, 293, 23976, 2051, 1293, 264, 14518, 293, 498, 456, 51692], 'temperature': 0.0, 'avg_logprob': -0.1552726058072822, 'compression_ratio': 1.8333333333333333, 'no_speech_prob': 0.26615893840789795}, {'id': 23, 'seek': 16188, 'start': 161.88, 'end': 169.2, 'text': ' is any definition which can kill a given token which is by redefining onto the same variable,', 'tokens': [50364, 307, 604, 7123, 597, 393, 1961, 257, 2212, 14862, 597, 307, 538, 38818, 1760, 3911, 264, 912, 7006, 11, 50730], 'temperature': 0.0, 'avg_logprob': -0.14220163226127625, 'compression_ratio': 1.7421383647798743, 'no_speech_prob': 0.01317373663187027}, {'id': 24, 'seek': 16188, 'start': 169.2, 'end': 175.24, 'text': ' then the token will vanish right. So, now, the set of definitions reaching a program point', 'tokens': [50730, 550, 264, 14862, 486, 43584, 558, 13, 407, 11, 586, 11, 264, 992, 295, 21988, 9906, 257, 1461, 935, 51032], 'temperature': 0.0, 'avg_logprob': -0.14220163226127625, 'compression_ratio': 1.7421383647798743, 'no_speech_prob': 0.01317373663187027}, {'id': 25, 'seek': 16188, 'start': 175.24, 'end': 184.0, 'text': ' are basically the tokens flowing through that program point right. So, now, the question was', 'tokens': [51032, 366, 1936, 264, 22667, 13974, 807, 300, 1461, 935, 558, 13, 407, 11, 586, 11, 264, 1168, 390, 51470], 'temperature': 0.0, 'avg_logprob': -0.14220163226127625, 'compression_ratio': 1.7421383647798743, 'no_speech_prob': 0.01317373663187027}, {'id': 26, 'seek': 18400, 'start': 184.0, 'end': 194.48, 'text': ' that which direction we flow the tokens. So, where do we start from? So, we flow them in the', 'tokens': [50364, 300, 597, 3513, 321, 3095, 264, 22667, 13, 407, 11, 689, 360, 321, 722, 490, 30, 407, 11, 321, 3095, 552, 294, 264, 50888], 'temperature': 0.0, 'avg_logprob': -0.19348434607187906, 'compression_ratio': 1.7083333333333333, 'no_speech_prob': 0.050147391855716705}, {'id': 27, 'seek': 18400, 'start': 194.48, 'end': 206.36, 'text': ' forward direction right. So, this was forward. Then when do we say a definition reaches a use?', 'tokens': [50888, 2128, 3513, 558, 13, 407, 11, 341, 390, 2128, 13, 1396, 562, 360, 321, 584, 257, 7123, 14235, 257, 764, 30, 51482], 'temperature': 0.0, 'avg_logprob': -0.19348434607187906, 'compression_ratio': 1.7083333333333333, 'no_speech_prob': 0.050147391855716705}, {'id': 28, 'seek': 18400, 'start': 206.36, 'end': 210.68, 'text': ' So, when the token reaches here for the respective thing, what happens if the variable is resigned,', 'tokens': [51482, 407, 11, 562, 264, 14862, 14235, 510, 337, 264, 23649, 551, 11, 437, 2314, 498, 264, 7006, 307, 41180, 11, 51698], 'temperature': 0.0, 'avg_logprob': -0.19348434607187906, 'compression_ratio': 1.7083333333333333, 'no_speech_prob': 0.050147391855716705}, {'id': 29, 'seek': 21068, 'start': 210.68, 'end': 219.88, 'text': ' we kill the variable. So, we discussed this and we will refer to RD of n as the set of reaching', 'tokens': [50364, 321, 1961, 264, 7006, 13, 407, 11, 321, 7152, 341, 293, 321, 486, 2864, 281, 49488, 295, 297, 382, 264, 992, 295, 9906, 50824], 'temperature': 0.0, 'avg_logprob': -0.17510635956473972, 'compression_ratio': 1.6863636363636363, 'no_speech_prob': 0.03204895183444023}, {'id': 30, 'seek': 21068, 'start': 219.88, 'end': 226.68, 'text': ' definitions at the basic block n. So, now, let us start designing this analysis. So,', 'tokens': [50824, 21988, 412, 264, 3875, 3461, 297, 13, 407, 11, 586, 11, 718, 505, 722, 14685, 341, 5215, 13, 407, 11, 51164], 'temperature': 0.0, 'avg_logprob': -0.17510635956473972, 'compression_ratio': 1.6863636363636363, 'no_speech_prob': 0.03204895183444023}, {'id': 31, 'seek': 21068, 'start': 226.68, 'end': 232.52, 'text': ' let us to begin with assume single statement basic blocks. So, now, remember from yesterday', 'tokens': [51164, 718, 505, 281, 1841, 365, 6552, 2167, 5629, 3875, 8474, 13, 407, 11, 586, 11, 1604, 490, 5186, 51456], 'temperature': 0.0, 'avg_logprob': -0.17510635956473972, 'compression_ratio': 1.6863636363636363, 'no_speech_prob': 0.03204895183444023}, {'id': 32, 'seek': 21068, 'start': 232.52, 'end': 239.20000000000002, 'text': ' what how did we say we will design this algorithm. We will essentially come up with two things. We', 'tokens': [51456, 437, 577, 630, 321, 584, 321, 486, 1715, 341, 9284, 13, 492, 486, 4476, 808, 493, 365, 732, 721, 13, 492, 51790], 'temperature': 0.0, 'avg_logprob': -0.17510635956473972, 'compression_ratio': 1.6863636363636363, 'no_speech_prob': 0.03204895183444023}, {'id': 33, 'seek': 23920, 'start': 239.2, 'end': 254.04, 'text': ' will define a set of what we call local sets. Local sets are set of definitions which are which', 'tokens': [50364, 486, 6964, 257, 992, 295, 437, 321, 818, 2654, 6352, 13, 22755, 6352, 366, 992, 295, 21988, 597, 366, 597, 51106], 'temperature': 0.0, 'avg_logprob': -0.11576995849609376, 'compression_ratio': 1.6071428571428572, 'no_speech_prob': 0.03050166182219982}, {'id': 34, 'seek': 23920, 'start': 254.04, 'end': 259.96, 'text': ' can be computed by looking only at a given basic block right. So, essentially to compute', 'tokens': [51106, 393, 312, 40610, 538, 1237, 787, 412, 257, 2212, 3875, 3461, 558, 13, 407, 11, 4476, 281, 14722, 51402], 'temperature': 0.0, 'avg_logprob': -0.11576995849609376, 'compression_ratio': 1.6071428571428572, 'no_speech_prob': 0.03050166182219982}, {'id': 35, 'seek': 23920, 'start': 259.96, 'end': 268.56, 'text': ' gen of n or kill of n, I will not need to look at anything else, but only at n right.', 'tokens': [51402, 1049, 295, 297, 420, 1961, 295, 297, 11, 286, 486, 406, 643, 281, 574, 412, 1340, 1646, 11, 457, 787, 412, 297, 558, 13, 51832], 'temperature': 0.0, 'avg_logprob': -0.11576995849609376, 'compression_ratio': 1.6071428571428572, 'no_speech_prob': 0.03050166182219982}, {'id': 36, 'seek': 26856, 'start': 268.56, 'end': 276.32, 'text': ' So, what is gen of n? What are the new definitions which are generated at the basic block? Are you', 'tokens': [50364, 407, 11, 437, 307, 1049, 295, 297, 30, 708, 366, 264, 777, 21988, 597, 366, 10833, 412, 264, 3875, 3461, 30, 2014, 291, 50752], 'temperature': 0.0, 'avg_logprob': -0.12153113122079887, 'compression_ratio': 1.775229357798165, 'no_speech_prob': 0.0037498227320611477}, {'id': 37, 'seek': 26856, 'start': 276.32, 'end': 281.84000000000003, 'text': ' convinced that I do not really need to look at any other basic block to compute gen of n right.', 'tokens': [50752, 12561, 300, 286, 360, 406, 534, 643, 281, 574, 412, 604, 661, 3875, 3461, 281, 14722, 1049, 295, 297, 558, 13, 51028], 'temperature': 0.0, 'avg_logprob': -0.12153113122079887, 'compression_ratio': 1.775229357798165, 'no_speech_prob': 0.0037498227320611477}, {'id': 38, 'seek': 26856, 'start': 281.84000000000003, 'end': 286.16, 'text': ' When I am looking at n, I just look at what are the definitions in that basic block and just', 'tokens': [51028, 1133, 286, 669, 1237, 412, 297, 11, 286, 445, 574, 412, 437, 366, 264, 21988, 294, 300, 3875, 3461, 293, 445, 51244], 'temperature': 0.0, 'avg_logprob': -0.12153113122079887, 'compression_ratio': 1.775229357798165, 'no_speech_prob': 0.0037498227320611477}, {'id': 39, 'seek': 26856, 'start': 286.16, 'end': 294.84000000000003, 'text': ' collect them. That is my set of that is gen. What is kill of n? All that gets reassigned right. So,', 'tokens': [51244, 2500, 552, 13, 663, 307, 452, 992, 295, 300, 307, 1049, 13, 708, 307, 1961, 295, 297, 30, 1057, 300, 2170, 19486, 16690, 558, 13, 407, 11, 51678], 'temperature': 0.0, 'avg_logprob': -0.12153113122079887, 'compression_ratio': 1.775229357798165, 'no_speech_prob': 0.0037498227320611477}, {'id': 40, 'seek': 29484, 'start': 294.84, 'end': 300.96, 'text': ' assume that I have already collected the set of the universal set of all the universal set of', 'tokens': [50364, 6552, 300, 286, 362, 1217, 11087, 264, 992, 295, 264, 11455, 992, 295, 439, 264, 11455, 992, 295, 50670], 'temperature': 0.0, 'avg_logprob': -0.24330698886764385, 'compression_ratio': 1.9193548387096775, 'no_speech_prob': 0.018497737124562263}, {'id': 41, 'seek': 29484, 'start': 300.96, 'end': 306.52, 'text': ' definitions the set of all definitions in the program. After that to figure out which of these', 'tokens': [50670, 21988, 264, 992, 295, 439, 21988, 294, 264, 1461, 13, 2381, 300, 281, 2573, 484, 597, 295, 613, 50948], 'temperature': 0.0, 'avg_logprob': -0.24330698886764385, 'compression_ratio': 1.9193548387096775, 'no_speech_prob': 0.018497737124562263}, {'id': 42, 'seek': 29484, 'start': 306.52, 'end': 310.56, 'text': ' definition gets killed by this basic block again does not require me to look at any other basic', 'tokens': [50948, 7123, 2170, 4652, 538, 341, 3875, 3461, 797, 775, 406, 3651, 385, 281, 574, 412, 604, 661, 3875, 51150], 'temperature': 0.0, 'avg_logprob': -0.24330698886764385, 'compression_ratio': 1.9193548387096775, 'no_speech_prob': 0.018497737124562263}, {'id': 43, 'seek': 29484, 'start': 310.56, 'end': 317.67999999999995, 'text': ' right. Assuming understand the as you were pre-pass where I collect the set of all definitions right.', 'tokens': [51150, 558, 13, 6281, 24919, 1223, 264, 382, 291, 645, 659, 12, 9216, 689, 286, 2500, 264, 992, 295, 439, 21988, 558, 13, 51506], 'temperature': 0.0, 'avg_logprob': -0.24330698886764385, 'compression_ratio': 1.9193548387096775, 'no_speech_prob': 0.018497737124562263}, {'id': 44, 'seek': 29484, 'start': 317.67999999999995, 'end': 323.44, 'text': ' From that set whatever definitions get reassigned, I can simply put them in the kill set.', 'tokens': [51506, 3358, 300, 992, 2035, 21988, 483, 19486, 16690, 11, 286, 393, 2935, 829, 552, 294, 264, 1961, 992, 13, 51794], 'temperature': 0.0, 'avg_logprob': -0.24330698886764385, 'compression_ratio': 1.9193548387096775, 'no_speech_prob': 0.018497737124562263}, {'id': 45, 'seek': 32344, 'start': 323.44, 'end': 331.76, 'text': ' Right. So, these two sets I really do not need to look at anything else to compute the gen and', 'tokens': [50364, 1779, 13, 407, 11, 613, 732, 6352, 286, 534, 360, 406, 643, 281, 574, 412, 1340, 1646, 281, 14722, 264, 1049, 293, 50780], 'temperature': 0.0, 'avg_logprob': -0.16816676003592354, 'compression_ratio': 1.6823529411764706, 'no_speech_prob': 0.002004563109949231}, {'id': 46, 'seek': 32344, 'start': 331.76, 'end': 339.16, 'text': ' kill sets. So, this is what why they are called local sets and then using them we will compute', 'tokens': [50780, 1961, 6352, 13, 407, 11, 341, 307, 437, 983, 436, 366, 1219, 2654, 6352, 293, 550, 1228, 552, 321, 486, 14722, 51150], 'temperature': 0.0, 'avg_logprob': -0.16816676003592354, 'compression_ratio': 1.6823529411764706, 'no_speech_prob': 0.002004563109949231}, {'id': 47, 'seek': 32344, 'start': 339.16, 'end': 346.76, 'text': ' a set of global solution sets sets which will which will tell me what are the set of definitions', 'tokens': [51150, 257, 992, 295, 4338, 3827, 6352, 6352, 597, 486, 597, 486, 980, 385, 437, 366, 264, 992, 295, 21988, 51530], 'temperature': 0.0, 'avg_logprob': -0.16816676003592354, 'compression_ratio': 1.6823529411764706, 'no_speech_prob': 0.002004563109949231}, {'id': 48, 'seek': 34676, 'start': 346.76, 'end': 353.68, 'text': ' which are which appear which are reaching at the beginning of a basic block and at the end of a', 'tokens': [50364, 597, 366, 597, 4204, 597, 366, 9906, 412, 264, 2863, 295, 257, 3875, 3461, 293, 412, 264, 917, 295, 257, 50710], 'temperature': 0.0, 'avg_logprob': -0.19714503018361218, 'compression_ratio': 1.6218487394957983, 'no_speech_prob': 0.06337916105985641}, {'id': 49, 'seek': 34676, 'start': 353.68, 'end': 365.96, 'text': ' basic block right. So, given a basic block I will compute two sets. So, one is in of B or in of n', 'tokens': [50710, 3875, 3461, 558, 13, 407, 11, 2212, 257, 3875, 3461, 286, 486, 14722, 732, 6352, 13, 407, 11, 472, 307, 294, 295, 363, 420, 294, 295, 297, 51324], 'temperature': 0.0, 'avg_logprob': -0.19714503018361218, 'compression_ratio': 1.6218487394957983, 'no_speech_prob': 0.06337916105985641}, {'id': 50, 'seek': 36596, 'start': 365.96, 'end': 378.79999999999995, 'text': ' right for the basic block n and out of n. So, in of n will tell me what are the set of definitions', 'tokens': [50364, 558, 337, 264, 3875, 3461, 297, 293, 484, 295, 297, 13, 407, 11, 294, 295, 297, 486, 980, 385, 437, 366, 264, 992, 295, 21988, 51006], 'temperature': 0.0, 'avg_logprob': -0.12839550902878027, 'compression_ratio': 1.8717948717948718, 'no_speech_prob': 0.04558213800191879}, {'id': 51, 'seek': 36596, 'start': 378.79999999999995, 'end': 386.24, 'text': ' which reach this basic block at this program point just before executing any instruction in', 'tokens': [51006, 597, 2524, 341, 3875, 3461, 412, 341, 1461, 935, 445, 949, 32368, 604, 10951, 294, 51378], 'temperature': 0.0, 'avg_logprob': -0.12839550902878027, 'compression_ratio': 1.8717948717948718, 'no_speech_prob': 0.04558213800191879}, {'id': 52, 'seek': 36596, 'start': 386.24, 'end': 392.56, 'text': ' the basic block right. Out of n will tell me what are the set of reaching definitions at this program', 'tokens': [51378, 264, 3875, 3461, 558, 13, 5925, 295, 297, 486, 980, 385, 437, 366, 264, 992, 295, 9906, 21988, 412, 341, 1461, 51694], 'temperature': 0.0, 'avg_logprob': -0.12839550902878027, 'compression_ratio': 1.8717948717948718, 'no_speech_prob': 0.04558213800191879}, {'id': 53, 'seek': 39256, 'start': 392.56, 'end': 399.04, 'text': ' point which is after executing all the instructions in this basic right. Now in this in this particular', 'tokens': [50364, 935, 597, 307, 934, 32368, 439, 264, 9415, 294, 341, 3875, 558, 13, 823, 294, 341, 294, 341, 1729, 50688], 'temperature': 0.0, 'avg_logprob': -0.1757200140702097, 'compression_ratio': 1.871212121212121, 'no_speech_prob': 0.15164899826049805}, {'id': 54, 'seek': 39256, 'start': 399.04, 'end': 403.84, 'text': ' case I have only if I assume only one basic one statement in the basic block then it is a matter', 'tokens': [50688, 1389, 286, 362, 787, 498, 286, 6552, 787, 472, 3875, 472, 5629, 294, 264, 3875, 3461, 550, 309, 307, 257, 1871, 50928], 'temperature': 0.0, 'avg_logprob': -0.1757200140702097, 'compression_ratio': 1.871212121212121, 'no_speech_prob': 0.15164899826049805}, {'id': 55, 'seek': 39256, 'start': 403.84, 'end': 408.4, 'text': ' of just saying what happens after the before the statement and what happens after that statement.', 'tokens': [50928, 295, 445, 1566, 437, 2314, 934, 264, 949, 264, 5629, 293, 437, 2314, 934, 300, 5629, 13, 51156], 'temperature': 0.0, 'avg_logprob': -0.1757200140702097, 'compression_ratio': 1.871212121212121, 'no_speech_prob': 0.15164899826049805}, {'id': 56, 'seek': 39256, 'start': 408.4, 'end': 417.52, 'text': ' And then I will then we will look at the initialization how to really initialize the sets to get it. So,', 'tokens': [51156, 400, 550, 286, 486, 550, 321, 486, 574, 412, 264, 5883, 2144, 577, 281, 534, 5883, 1125, 264, 6352, 281, 483, 309, 13, 407, 11, 51612], 'temperature': 0.0, 'avg_logprob': -0.1757200140702097, 'compression_ratio': 1.871212121212121, 'no_speech_prob': 0.15164899826049805}, {'id': 57, 'seek': 39256, 'start': 417.52, 'end': 422.04, 'text': ' what is what is my global solution yesterday that is what we looked at right. The end of a', 'tokens': [51612, 437, 307, 437, 307, 452, 4338, 3827, 5186, 300, 307, 437, 321, 2956, 412, 558, 13, 440, 917, 295, 257, 51838], 'temperature': 0.0, 'avg_logprob': -0.1757200140702097, 'compression_ratio': 1.871212121212121, 'no_speech_prob': 0.15164899826049805}, {'id': 58, 'seek': 42204, 'start': 422.04, 'end': 426.92, 'text': ' basic block for reaching definitions essentially will take the union over all the predecessors', 'tokens': [50364, 3875, 3461, 337, 9906, 21988, 4476, 486, 747, 264, 11671, 670, 439, 264, 24874, 45700, 50608], 'temperature': 0.0, 'avg_logprob': -0.10996954615523176, 'compression_ratio': 2.0662983425414363, 'no_speech_prob': 0.03607144579291344}, {'id': 59, 'seek': 42204, 'start': 426.92, 'end': 435.6, 'text': ' and take a union over their outsets right. So, if you have a basic block I can compute the in at n', 'tokens': [50608, 293, 747, 257, 11671, 670, 641, 14758, 1385, 558, 13, 407, 11, 498, 291, 362, 257, 3875, 3461, 286, 393, 14722, 264, 294, 412, 297, 51042], 'temperature': 0.0, 'avg_logprob': -0.10996954615523176, 'compression_ratio': 2.0662983425414363, 'no_speech_prob': 0.03607144579291344}, {'id': 60, 'seek': 42204, 'start': 435.6, 'end': 441.08000000000004, 'text': ' by figuring out which are the basic blocks which are reaching which are the reaching', 'tokens': [51042, 538, 15213, 484, 597, 366, 264, 3875, 8474, 597, 366, 9906, 597, 366, 264, 9906, 51316], 'temperature': 0.0, 'avg_logprob': -0.10996954615523176, 'compression_ratio': 2.0662983425414363, 'no_speech_prob': 0.03607144579291344}, {'id': 61, 'seek': 42204, 'start': 441.08000000000004, 'end': 452.0, 'text': ' definitions reaching here from the predecessor blocks and I take a union over their outs right.', 'tokens': [51316, 21988, 9906, 510, 490, 264, 34991, 8474, 293, 286, 747, 257, 11671, 670, 641, 14758, 558, 13, 51862], 'temperature': 0.0, 'avg_logprob': -0.10996954615523176, 'compression_ratio': 2.0662983425414363, 'no_speech_prob': 0.03607144579291344}, {'id': 62, 'seek': 45200, 'start': 452.0, 'end': 459.24, 'text': ' And the out will tell me what happens after I execute this statement in this basic block. So,', 'tokens': [50364, 400, 264, 484, 486, 980, 385, 437, 2314, 934, 286, 14483, 341, 5629, 294, 341, 3875, 3461, 13, 407, 11, 50726], 'temperature': 0.0, 'avg_logprob': -0.19344757878503135, 'compression_ratio': 1.6728971962616823, 'no_speech_prob': 0.0013650861801579595}, {'id': 63, 'seek': 45200, 'start': 459.24, 'end': 466.68, 'text': ' I get this by subtracting my kill set whatever gets killed by the basic block and then adding', 'tokens': [50726, 286, 483, 341, 538, 16390, 278, 452, 1961, 992, 2035, 2170, 4652, 538, 264, 3875, 3461, 293, 550, 5127, 51098], 'temperature': 0.0, 'avg_logprob': -0.19344757878503135, 'compression_ratio': 1.6728971962616823, 'no_speech_prob': 0.0013650861801579595}, {'id': 64, 'seek': 45200, 'start': 466.68, 'end': 471.68, 'text': ' the gen. So, you guys should immediately stop me if something is not clear. So,', 'tokens': [51098, 264, 1049, 13, 407, 11, 291, 1074, 820, 4258, 1590, 385, 498, 746, 307, 406, 1850, 13, 407, 11, 51348], 'temperature': 0.0, 'avg_logprob': -0.19344757878503135, 'compression_ratio': 1.6728971962616823, 'no_speech_prob': 0.0013650861801579595}, {'id': 65, 'seek': 45200, 'start': 471.68, 'end': 475.2, 'text': ' we are going to implement this so we should really be completely clear about what that is.', 'tokens': [51348, 321, 366, 516, 281, 4445, 341, 370, 321, 820, 534, 312, 2584, 1850, 466, 437, 300, 307, 13, 51524], 'temperature': 0.0, 'avg_logprob': -0.19344757878503135, 'compression_ratio': 1.6728971962616823, 'no_speech_prob': 0.0013650861801579595}, {'id': 66, 'seek': 47520, 'start': 475.2, 'end': 485.12, 'text': ' Right ok. So, let us do a small example. So, let us say I have this particular program I have', 'tokens': [50364, 1779, 3133, 13, 407, 11, 718, 505, 360, 257, 1359, 1365, 13, 407, 11, 718, 505, 584, 286, 362, 341, 1729, 1461, 286, 362, 50860], 'temperature': 0.0, 'avg_logprob': -0.18546647389729817, 'compression_ratio': 1.75, 'no_speech_prob': 0.07781121134757996}, {'id': 67, 'seek': 47520, 'start': 485.12, 'end': 497.08, 'text': ' a equals b plus 2 I have a equals 5 I have b equals 9 and for this particular thing let us', 'tokens': [50860, 257, 6915, 272, 1804, 568, 286, 362, 257, 6915, 1025, 286, 362, 272, 6915, 1722, 293, 337, 341, 1729, 551, 718, 505, 51458], 'temperature': 0.0, 'avg_logprob': -0.18546647389729817, 'compression_ratio': 1.75, 'no_speech_prob': 0.07781121134757996}, {'id': 68, 'seek': 47520, 'start': 497.08, 'end': 503.2, 'text': ' say I want to compute my solution right. So, the first thing we will do is we will first', 'tokens': [51458, 584, 286, 528, 281, 14722, 452, 3827, 558, 13, 407, 11, 264, 700, 551, 321, 486, 360, 307, 321, 486, 700, 51764], 'temperature': 0.0, 'avg_logprob': -0.18546647389729817, 'compression_ratio': 1.75, 'no_speech_prob': 0.07781121134757996}, {'id': 69, 'seek': 50320, 'start': 503.2, 'end': 508.32, 'text': ' construct the universal set right. So, the universal set in this case of definitions is', 'tokens': [50364, 7690, 264, 11455, 992, 558, 13, 407, 11, 264, 11455, 992, 294, 341, 1389, 295, 21988, 307, 50620], 'temperature': 0.0, 'avg_logprob': -0.1877882419488369, 'compression_ratio': 1.8344370860927153, 'no_speech_prob': 0.15150879323482513}, {'id': 70, 'seek': 50320, 'start': 508.32, 'end': 514.64, 'text': ' I just give arbitrary names to them I call this one d 1 I call this 2 d 2 and I call this 3 d 3.', 'tokens': [50620, 286, 445, 976, 23211, 5288, 281, 552, 286, 818, 341, 472, 274, 502, 286, 818, 341, 568, 274, 568, 293, 286, 818, 341, 805, 274, 805, 13, 50936], 'temperature': 0.0, 'avg_logprob': -0.1877882419488369, 'compression_ratio': 1.8344370860927153, 'no_speech_prob': 0.15150879323482513}, {'id': 71, 'seek': 50320, 'start': 514.64, 'end': 526.2, 'text': ' Right. So, my universal set of definitions is d 1 d 2 d 3. Right. So, now let us compute the', 'tokens': [50936, 1779, 13, 407, 11, 452, 11455, 992, 295, 21988, 307, 274, 502, 274, 568, 274, 805, 13, 1779, 13, 407, 11, 586, 718, 505, 14722, 264, 51514], 'temperature': 0.0, 'avg_logprob': -0.1877882419488369, 'compression_ratio': 1.8344370860927153, 'no_speech_prob': 0.15150879323482513}, {'id': 72, 'seek': 52620, 'start': 526.2, 'end': 534.2800000000001, 'text': ' gen at this particular block. So, what is going to be my gen? My gen is going to be d 1. Right.', 'tokens': [50364, 1049, 412, 341, 1729, 3461, 13, 407, 11, 437, 307, 516, 281, 312, 452, 1049, 30, 1222, 1049, 307, 516, 281, 312, 274, 502, 13, 1779, 13, 50768], 'temperature': 0.0, 'avg_logprob': -0.14661047056123808, 'compression_ratio': 1.8506493506493507, 'no_speech_prob': 0.2327948361635208}, {'id': 73, 'seek': 52620, 'start': 534.2800000000001, 'end': 541.6800000000001, 'text': ' And my kill is going to be so from these definitions which is the definition does it kill? So,', 'tokens': [50768, 400, 452, 1961, 307, 516, 281, 312, 370, 490, 613, 21988, 597, 307, 264, 7123, 775, 309, 1961, 30, 407, 11, 51138], 'temperature': 0.0, 'avg_logprob': -0.14661047056123808, 'compression_ratio': 1.8506493506493507, 'no_speech_prob': 0.2327948361635208}, {'id': 74, 'seek': 52620, 'start': 541.6800000000001, 'end': 549.88, 'text': ' this is an assignment to a this is an assignment to a and this is an assignment to b which one', 'tokens': [51138, 341, 307, 364, 15187, 281, 257, 341, 307, 364, 15187, 281, 257, 293, 341, 307, 364, 15187, 281, 272, 597, 472, 51548], 'temperature': 0.0, 'avg_logprob': -0.14661047056123808, 'compression_ratio': 1.8506493506493507, 'no_speech_prob': 0.2327948361635208}, {'id': 75, 'seek': 54988, 'start': 549.88, 'end': 557.2, 'text': ' does it kill? So, we can simply say d 1 and d 2 right both of them it kills. So, let us not even', 'tokens': [50364, 775, 309, 1961, 30, 407, 11, 321, 393, 2935, 584, 274, 502, 293, 274, 568, 558, 1293, 295, 552, 309, 14563, 13, 407, 11, 718, 505, 406, 754, 50730], 'temperature': 0.0, 'avg_logprob': -0.11533417630551467, 'compression_ratio': 1.9047619047619047, 'no_speech_prob': 0.1933198869228363}, {'id': 76, 'seek': 54988, 'start': 557.2, 'end': 564.68, 'text': ' bother about see the how the equation is kept. So, first I subtract kill and then I add gen. So,', 'tokens': [50730, 8677, 466, 536, 264, 577, 264, 5367, 307, 4305, 13, 407, 11, 700, 286, 16390, 1961, 293, 550, 286, 909, 1049, 13, 407, 11, 51104], 'temperature': 0.0, 'avg_logprob': -0.11533417630551467, 'compression_ratio': 1.9047619047619047, 'no_speech_prob': 0.1933198869228363}, {'id': 77, 'seek': 54988, 'start': 564.68, 'end': 570.2, 'text': ' even if d 1 gets removed I am going to add it back. So, does not matter right. So, I really do', 'tokens': [51104, 754, 498, 274, 502, 2170, 7261, 286, 669, 516, 281, 909, 309, 646, 13, 407, 11, 775, 406, 1871, 558, 13, 407, 11, 286, 534, 360, 51380], 'temperature': 0.0, 'avg_logprob': -0.11533417630551467, 'compression_ratio': 1.9047619047619047, 'no_speech_prob': 0.1933198869228363}, {'id': 78, 'seek': 54988, 'start': 570.2, 'end': 575.32, 'text': ' not have to worry about that I should not kill my gen. So, I do not have to worry about that right', 'tokens': [51380, 406, 362, 281, 3292, 466, 300, 286, 820, 406, 1961, 452, 1049, 13, 407, 11, 286, 360, 406, 362, 281, 3292, 466, 300, 558, 51636], 'temperature': 0.0, 'avg_logprob': -0.11533417630551467, 'compression_ratio': 1.9047619047619047, 'no_speech_prob': 0.1933198869228363}, {'id': 79, 'seek': 54988, 'start': 575.32, 'end': 579.24, 'text': ' or you can write the equation differently and then you can also take care of that right. So,', 'tokens': [51636, 420, 291, 393, 2464, 264, 5367, 7614, 293, 550, 291, 393, 611, 747, 1127, 295, 300, 558, 13, 407, 11, 51832], 'temperature': 0.0, 'avg_logprob': -0.11533417630551467, 'compression_ratio': 1.9047619047619047, 'no_speech_prob': 0.1933198869228363}, {'id': 80, 'seek': 57924, 'start': 579.24, 'end': 587.12, 'text': ' it is up to you. So, now my kill set in this case becomes what it becomes d 1 and d 2 that is my', 'tokens': [50364, 309, 307, 493, 281, 291, 13, 407, 11, 586, 452, 1961, 992, 294, 341, 1389, 3643, 437, 309, 3643, 274, 502, 293, 274, 568, 300, 307, 452, 50758], 'temperature': 0.0, 'avg_logprob': -0.0885549545288086, 'compression_ratio': 1.9396984924623115, 'no_speech_prob': 0.0011995913228020072}, {'id': 81, 'seek': 57924, 'start': 587.12, 'end': 594.12, 'text': ' kill set. Right. So, similarly you can do the gen for this the gen for this is d 2 and the kill', 'tokens': [50758, 1961, 992, 13, 1779, 13, 407, 11, 14138, 291, 393, 360, 264, 1049, 337, 341, 264, 1049, 337, 341, 307, 274, 568, 293, 264, 1961, 51108], 'temperature': 0.0, 'avg_logprob': -0.0885549545288086, 'compression_ratio': 1.9396984924623115, 'no_speech_prob': 0.0011995913228020072}, {'id': 82, 'seek': 57924, 'start': 594.12, 'end': 602.48, 'text': ' for this is again d 1 d 2. See I do not even care when I am computing the gen and kill of this I', 'tokens': [51108, 337, 341, 307, 797, 274, 502, 274, 568, 13, 3008, 286, 360, 406, 754, 1127, 562, 286, 669, 15866, 264, 1049, 293, 1961, 295, 341, 286, 51526], 'temperature': 0.0, 'avg_logprob': -0.0885549545288086, 'compression_ratio': 1.9396984924623115, 'no_speech_prob': 0.0011995913228020072}, {'id': 83, 'seek': 57924, 'start': 602.48, 'end': 607.64, 'text': ' do not even care that d 2 cannot even reach here there is no path all these things I do not even', 'tokens': [51526, 360, 406, 754, 1127, 300, 274, 568, 2644, 754, 2524, 510, 456, 307, 572, 3100, 439, 613, 721, 286, 360, 406, 754, 51784], 'temperature': 0.0, 'avg_logprob': -0.0885549545288086, 'compression_ratio': 1.9396984924623115, 'no_speech_prob': 0.0011995913228020072}, {'id': 84, 'seek': 60764, 'start': 607.64, 'end': 611.56, 'text': ' bother about I just say look at this basic block look at the definitions in this basic block and', 'tokens': [50364, 8677, 466, 286, 445, 584, 574, 412, 341, 3875, 3461, 574, 412, 264, 21988, 294, 341, 3875, 3461, 293, 50560], 'temperature': 0.0, 'avg_logprob': -0.14953155710239602, 'compression_ratio': 1.969387755102041, 'no_speech_prob': 0.004366791807115078}, {'id': 85, 'seek': 60764, 'start': 611.56, 'end': 616.16, 'text': ' tell me out of this set of all definitions which of them get generated which of them get killed I', 'tokens': [50560, 980, 385, 484, 295, 341, 992, 295, 439, 21988, 597, 295, 552, 483, 10833, 597, 295, 552, 483, 4652, 286, 50790], 'temperature': 0.0, 'avg_logprob': -0.14953155710239602, 'compression_ratio': 1.969387755102041, 'no_speech_prob': 0.004366791807115078}, {'id': 86, 'seek': 60764, 'start': 616.16, 'end': 624.4, 'text': ' do not even bother right. Similarly let us say gen of this gen of this is going to be d 3 and', 'tokens': [50790, 360, 406, 754, 8677, 558, 13, 13157, 718, 505, 584, 1049, 295, 341, 1049, 295, 341, 307, 516, 281, 312, 274, 805, 293, 51202], 'temperature': 0.0, 'avg_logprob': -0.14953155710239602, 'compression_ratio': 1.969387755102041, 'no_speech_prob': 0.004366791807115078}, {'id': 87, 'seek': 60764, 'start': 624.4, 'end': 636.88, 'text': ' kill of this is going to be d 3 those are my gen and kill sets. So, as you can see I did not even', 'tokens': [51202, 1961, 295, 341, 307, 516, 281, 312, 274, 805, 729, 366, 452, 1049, 293, 1961, 6352, 13, 407, 11, 382, 291, 393, 536, 286, 630, 406, 754, 51826], 'temperature': 0.0, 'avg_logprob': -0.14953155710239602, 'compression_ratio': 1.969387755102041, 'no_speech_prob': 0.004366791807115078}, {'id': 88, 'seek': 63688, 'start': 636.88, 'end': 640.4399999999999, 'text': ' bother looking at other basic blocks when I am computing the gen and kill at any basic block.', 'tokens': [50364, 8677, 1237, 412, 661, 3875, 8474, 562, 286, 669, 15866, 264, 1049, 293, 1961, 412, 604, 3875, 3461, 13, 50542], 'temperature': 0.0, 'avg_logprob': -0.13666595629791714, 'compression_ratio': 1.6374269005847952, 'no_speech_prob': 0.0024681093636900187}, {'id': 89, 'seek': 63688, 'start': 640.4399999999999, 'end': 657.16, 'text': ' Make sense? Okay. So, now comes the question that now essentially the idea is very simple', 'tokens': [50542, 4387, 2020, 30, 1033, 13, 407, 11, 586, 1487, 264, 1168, 300, 586, 4476, 264, 1558, 307, 588, 2199, 51378], 'temperature': 0.0, 'avg_logprob': -0.13666595629791714, 'compression_ratio': 1.6374269005847952, 'no_speech_prob': 0.0024681093636900187}, {'id': 90, 'seek': 63688, 'start': 657.16, 'end': 664.16, 'text': ' that I have got these gen and kill sets at all these basic blocks now I will simply go and write', 'tokens': [51378, 300, 286, 362, 658, 613, 1049, 293, 1961, 6352, 412, 439, 613, 3875, 8474, 586, 286, 486, 2935, 352, 293, 2464, 51728], 'temperature': 0.0, 'avg_logprob': -0.13666595629791714, 'compression_ratio': 1.6374269005847952, 'no_speech_prob': 0.0024681093636900187}, {'id': 91, 'seek': 66416, 'start': 664.16, 'end': 669.1999999999999, 'text': ' my set of equations I can simply now set write my set of equations I will write a set of equation', 'tokens': [50364, 452, 992, 295, 11787, 286, 393, 2935, 586, 992, 2464, 452, 992, 295, 11787, 286, 486, 2464, 257, 992, 295, 5367, 50616], 'temperature': 0.0, 'avg_logprob': -0.1126298215015825, 'compression_ratio': 2.048611111111111, 'no_speech_prob': 0.03476310893893242}, {'id': 92, 'seek': 66416, 'start': 669.1999999999999, 'end': 677.8399999999999, 'text': ' like in of b 1 b 1 let us say this basic block is b 1 this basic block is b 2 and this basic block', 'tokens': [50616, 411, 294, 295, 272, 502, 272, 502, 718, 505, 584, 341, 3875, 3461, 307, 272, 502, 341, 3875, 3461, 307, 272, 568, 293, 341, 3875, 3461, 51048], 'temperature': 0.0, 'avg_logprob': -0.1126298215015825, 'compression_ratio': 2.048611111111111, 'no_speech_prob': 0.03476310893893242}, {'id': 93, 'seek': 66416, 'start': 677.8399999999999, 'end': 685.92, 'text': ' is b 3 and this is b 4. So, I will write that b 1 is equal to this is the entry basic block so the', 'tokens': [51048, 307, 272, 805, 293, 341, 307, 272, 1017, 13, 407, 11, 286, 486, 2464, 300, 272, 502, 307, 2681, 281, 341, 307, 264, 8729, 3875, 3461, 370, 264, 51452], 'temperature': 0.0, 'avg_logprob': -0.1126298215015825, 'compression_ratio': 2.048611111111111, 'no_speech_prob': 0.03476310893893242}, {'id': 94, 'seek': 68592, 'start': 686.4, 'end': 696.52, 'text': ' definitions are the entry is going to be empty and out of b 1 is going to be what is going to be', 'tokens': [50388, 21988, 366, 264, 8729, 307, 516, 281, 312, 6707, 293, 484, 295, 272, 502, 307, 516, 281, 312, 437, 307, 516, 281, 312, 50894], 'temperature': 0.0, 'avg_logprob': -0.2458157362761321, 'compression_ratio': 1.391304347826087, 'no_speech_prob': 0.15286077558994293}, {'id': 95, 'seek': 69652, 'start': 696.52, 'end': 714.28, 'text': ' gen of b 1 union in of b 1 minus kill of b 1 right. So, similarly I will write in of b 2', 'tokens': [50364, 1049, 295, 272, 502, 11671, 294, 295, 272, 502, 3175, 1961, 295, 272, 502, 558, 13, 407, 11, 14138, 286, 486, 2464, 294, 295, 272, 568, 51252], 'temperature': 0.0, 'avg_logprob': -0.10929526223076715, 'compression_ratio': 1.4838709677419355, 'no_speech_prob': 0.05478019639849663}, {'id': 96, 'seek': 69652, 'start': 714.28, 'end': 725.0799999999999, 'text': ' is something which is nothing but the b 2 union of all the predecessors. So, in this case there', 'tokens': [51252, 307, 746, 597, 307, 1825, 457, 264, 272, 568, 11671, 295, 439, 264, 24874, 45700, 13, 407, 11, 294, 341, 1389, 456, 51792], 'temperature': 0.0, 'avg_logprob': -0.10929526223076715, 'compression_ratio': 1.4838709677419355, 'no_speech_prob': 0.05478019639849663}, {'id': 97, 'seek': 72508, 'start': 725.08, 'end': 736.4000000000001, 'text': ' is only one predecessor so this is nothing but out of b 1 right and out of b 2 is going to be', 'tokens': [50364, 307, 787, 472, 34991, 370, 341, 307, 1825, 457, 484, 295, 272, 502, 558, 293, 484, 295, 272, 568, 307, 516, 281, 312, 50930], 'temperature': 0.0, 'avg_logprob': -0.10727027546275746, 'compression_ratio': 1.4883720930232558, 'no_speech_prob': 0.01481945812702179}, {'id': 98, 'seek': 72508, 'start': 736.4000000000001, 'end': 749.6400000000001, 'text': ' the same thing for b 2 similarly if I had to do it for b 4 sorry in of b 4 then it would have been', 'tokens': [50930, 264, 912, 551, 337, 272, 568, 14138, 498, 286, 632, 281, 360, 309, 337, 272, 1017, 2597, 294, 295, 272, 1017, 550, 309, 576, 362, 668, 51592], 'temperature': 0.0, 'avg_logprob': -0.10727027546275746, 'compression_ratio': 1.4883720930232558, 'no_speech_prob': 0.01481945812702179}, {'id': 99, 'seek': 74964, 'start': 749.64, 'end': 767.24, 'text': ' out of out of b 2 union out of b 3 right agreed. So, I will have this huge set of equations and', 'tokens': [50364, 484, 295, 484, 295, 272, 568, 11671, 484, 295, 272, 805, 558, 9166, 13, 407, 11, 286, 486, 362, 341, 2603, 992, 295, 11787, 293, 51244], 'temperature': 0.0, 'avg_logprob': -0.19274254502921268, 'compression_ratio': 1.130952380952381, 'no_speech_prob': 0.05399734899401665}, {'id': 100, 'seek': 76724, 'start': 768.08, 'end': 780.6, 'text': ' and we are hoping that these equations would eventually give me the. So, now if I solve this', 'tokens': [50406, 293, 321, 366, 7159, 300, 613, 11787, 576, 4728, 976, 385, 264, 13, 407, 11, 586, 498, 286, 5039, 341, 51032], 'temperature': 0.0, 'avg_logprob': -0.1952213600500306, 'compression_ratio': 1.55, 'no_speech_prob': 0.013381180353462696}, {'id': 101, 'seek': 76724, 'start': 780.6, 'end': 790.04, 'text': ' set of equations I will end up getting my in and outsets right there can be complications things', 'tokens': [51032, 992, 295, 11787, 286, 486, 917, 493, 1242, 452, 294, 293, 14758, 1385, 558, 456, 393, 312, 26566, 721, 51504], 'temperature': 0.0, 'avg_logprob': -0.1952213600500306, 'compression_ratio': 1.55, 'no_speech_prob': 0.013381180353462696}, {'id': 102, 'seek': 76724, 'start': 790.04, 'end': 795.88, 'text': ' are not so simple in life like for instance what if I have a loop going from here to here', 'tokens': [51504, 366, 406, 370, 2199, 294, 993, 411, 337, 5197, 437, 498, 286, 362, 257, 6367, 516, 490, 510, 281, 510, 51796], 'temperature': 0.0, 'avg_logprob': -0.1952213600500306, 'compression_ratio': 1.55, 'no_speech_prob': 0.013381180353462696}, {'id': 103, 'seek': 79588, 'start': 795.88, 'end': 804.96, 'text': ' right. So, there will there may be a cyclic thing so in that case my in of b 1 may not be so let us', 'tokens': [50364, 558, 13, 407, 11, 456, 486, 456, 815, 312, 257, 38154, 1050, 551, 370, 294, 300, 1389, 452, 294, 295, 272, 502, 815, 406, 312, 370, 718, 505, 50818], 'temperature': 0.0, 'avg_logprob': -0.16145214167508212, 'compression_ratio': 1.75, 'no_speech_prob': 0.005416676867753267}, {'id': 104, 'seek': 79588, 'start': 804.96, 'end': 816.4399999999999, 'text': ' say I have some other entry let us not bother. So, in in of b 1 can become out of b 4 right. So,', 'tokens': [50818, 584, 286, 362, 512, 661, 8729, 718, 505, 406, 8677, 13, 407, 11, 294, 294, 295, 272, 502, 393, 1813, 484, 295, 272, 1017, 558, 13, 407, 11, 51392], 'temperature': 0.0, 'avg_logprob': -0.16145214167508212, 'compression_ratio': 1.75, 'no_speech_prob': 0.005416676867753267}, {'id': 105, 'seek': 79588, 'start': 816.4399999999999, 'end': 825.36, 'text': ' then what is going on is that you can see that b 4 out of b 4 is dependent somehow on b 1 because', 'tokens': [51392, 550, 437, 307, 516, 322, 307, 300, 291, 393, 536, 300, 272, 1017, 484, 295, 272, 1017, 307, 12334, 6063, 322, 272, 502, 570, 51838], 'temperature': 0.0, 'avg_logprob': -0.16145214167508212, 'compression_ratio': 1.75, 'no_speech_prob': 0.005416676867753267}, {'id': 106, 'seek': 82536, 'start': 825.36, 'end': 833.28, 'text': ' b 2 is dependent on b 1 and b 3 is dependent on b 1 and b 4 is dependent on b 3 b 2 and b 3 and', 'tokens': [50364, 272, 568, 307, 12334, 322, 272, 502, 293, 272, 805, 307, 12334, 322, 272, 502, 293, 272, 1017, 307, 12334, 322, 272, 805, 272, 568, 293, 272, 805, 293, 50760], 'temperature': 0.0, 'avg_logprob': -0.14084939123357385, 'compression_ratio': 2.1818181818181817, 'no_speech_prob': 0.002794697880744934}, {'id': 107, 'seek': 82536, 'start': 833.28, 'end': 840.84, 'text': ' now the problem is b 1 is again dependent on b 4. So, b 4 is dependent on b 1 and b 1 is dependent', 'tokens': [50760, 586, 264, 1154, 307, 272, 502, 307, 797, 12334, 322, 272, 1017, 13, 407, 11, 272, 1017, 307, 12334, 322, 272, 502, 293, 272, 502, 307, 12334, 51138], 'temperature': 0.0, 'avg_logprob': -0.14084939123357385, 'compression_ratio': 2.1818181818181817, 'no_speech_prob': 0.002794697880744934}, {'id': 108, 'seek': 82536, 'start': 840.84, 'end': 845.32, 'text': ' on b 4 so there is a cyclic dependence. So, now these are set of equations you cannot simply', 'tokens': [51138, 322, 272, 1017, 370, 456, 307, 257, 38154, 1050, 31704, 13, 407, 11, 586, 613, 366, 992, 295, 11787, 291, 2644, 2935, 51362], 'temperature': 0.0, 'avg_logprob': -0.14084939123357385, 'compression_ratio': 2.1818181818181817, 'no_speech_prob': 0.002794697880744934}, {'id': 109, 'seek': 82536, 'start': 845.32, 'end': 850.76, 'text': ' substitute you cannot solve by simple substitution otherwise how do you solve equations you just', 'tokens': [51362, 15802, 291, 2644, 5039, 538, 2199, 35827, 5911, 577, 360, 291, 5039, 11787, 291, 445, 51634], 'temperature': 0.0, 'avg_logprob': -0.14084939123357385, 'compression_ratio': 2.1818181818181817, 'no_speech_prob': 0.002794697880744934}, {'id': 110, 'seek': 85076, 'start': 850.76, 'end': 855.64, 'text': ' substitute whatever you can substitute from later equations you put them up get a large', 'tokens': [50364, 15802, 2035, 291, 393, 15802, 490, 1780, 11787, 291, 829, 552, 493, 483, 257, 2416, 50608], 'temperature': 0.0, 'avg_logprob': -0.15266564997231089, 'compression_ratio': 1.6681818181818182, 'no_speech_prob': 0.06549500674009323}, {'id': 111, 'seek': 85076, 'start': 855.64, 'end': 860.72, 'text': ' equation try to solve it that is one generic strategy right. But now these set of equations', 'tokens': [50608, 5367, 853, 281, 5039, 309, 300, 307, 472, 19577, 5206, 558, 13, 583, 586, 613, 992, 295, 11787, 50862], 'temperature': 0.0, 'avg_logprob': -0.15266564997231089, 'compression_ratio': 1.6681818181818182, 'no_speech_prob': 0.06549500674009323}, {'id': 112, 'seek': 85076, 'start': 860.72, 'end': 868.84, 'text': ' you cannot do that because there is this cyclic dependence agreed. So, these are called what I', 'tokens': [50862, 291, 2644, 360, 300, 570, 456, 307, 341, 38154, 1050, 31704, 9166, 13, 407, 11, 613, 366, 1219, 437, 286, 51268], 'temperature': 0.0, 'avg_logprob': -0.15266564997231089, 'compression_ratio': 1.6681818181818182, 'no_speech_prob': 0.06549500674009323}, {'id': 113, 'seek': 85076, 'start': 868.84, 'end': 876.0, 'text': ' said 6 point equations and we will spend a lot of time today understanding and to see how to', 'tokens': [51268, 848, 1386, 935, 11787, 293, 321, 486, 3496, 257, 688, 295, 565, 965, 3701, 293, 281, 536, 577, 281, 51626], 'temperature': 0.0, 'avg_logprob': -0.15266564997231089, 'compression_ratio': 1.6681818181818182, 'no_speech_prob': 0.06549500674009323}, {'id': 114, 'seek': 87600, 'start': 876.0, 'end': 889.2, 'text': ' really solve 6 point equations. So, right so now the question is that so we need some other strategy', 'tokens': [50364, 534, 5039, 1386, 935, 11787, 13, 407, 11, 558, 370, 586, 264, 1168, 307, 300, 370, 321, 643, 512, 661, 5206, 51024], 'temperature': 0.0, 'avg_logprob': -0.19014961774959122, 'compression_ratio': 1.441860465116279, 'no_speech_prob': 0.056514620780944824}, {'id': 115, 'seek': 87600, 'start': 889.2, 'end': 896.88, 'text': ' to solve these equations but let us try to understand the solution space first right.', 'tokens': [51024, 281, 5039, 613, 11787, 457, 718, 505, 853, 281, 1223, 264, 3827, 1901, 700, 558, 13, 51408], 'temperature': 0.0, 'avg_logprob': -0.19014961774959122, 'compression_ratio': 1.441860465116279, 'no_speech_prob': 0.056514620780944824}, {'id': 116, 'seek': 89688, 'start': 896.88, 'end': 908.28, 'text': ' So, first of all the question is that for does these set of equations will this set of equations', 'tokens': [50364, 407, 11, 700, 295, 439, 264, 1168, 307, 300, 337, 775, 613, 992, 295, 11787, 486, 341, 992, 295, 11787, 50934], 'temperature': 0.0, 'avg_logprob': -0.13958202920308926, 'compression_ratio': 1.9946236559139785, 'no_speech_prob': 0.022908112034201622}, {'id': 117, 'seek': 89688, 'start': 908.28, 'end': 914.72, 'text': ' have the have only one solution or can it have multiple solutions. So, we have to whenever we', 'tokens': [50934, 362, 264, 362, 787, 472, 3827, 420, 393, 309, 362, 3866, 6547, 13, 407, 11, 321, 362, 281, 5699, 321, 51256], 'temperature': 0.0, 'avg_logprob': -0.13958202920308926, 'compression_ratio': 1.9946236559139785, 'no_speech_prob': 0.022908112034201622}, {'id': 118, 'seek': 89688, 'start': 914.72, 'end': 918.4399999999999, 'text': ' have several equations we have to start asking these questions right and then if it allows', 'tokens': [51256, 362, 2940, 11787, 321, 362, 281, 722, 3365, 613, 1651, 558, 293, 550, 498, 309, 4045, 51442], 'temperature': 0.0, 'avg_logprob': -0.13958202920308926, 'compression_ratio': 1.9946236559139785, 'no_speech_prob': 0.022908112034201622}, {'id': 119, 'seek': 89688, 'start': 918.4399999999999, 'end': 924.48, 'text': ' multiple solutions are all the solutions okay or which solution is the solution that I am', 'tokens': [51442, 3866, 6547, 366, 439, 264, 6547, 1392, 420, 597, 3827, 307, 264, 3827, 300, 286, 669, 51744], 'temperature': 0.0, 'avg_logprob': -0.13958202920308926, 'compression_ratio': 1.9946236559139785, 'no_speech_prob': 0.022908112034201622}, {'id': 120, 'seek': 92448, 'start': 924.48, 'end': 930.88, 'text': ' more interested right which solution would work for us. So, that is my next question the next', 'tokens': [50364, 544, 3102, 558, 597, 3827, 576, 589, 337, 505, 13, 407, 11, 300, 307, 452, 958, 1168, 264, 958, 50684], 'temperature': 0.0, 'avg_logprob': -0.1433652570877952, 'compression_ratio': 1.9581151832460733, 'no_speech_prob': 0.04573187232017517}, {'id': 121, 'seek': 92448, 'start': 930.88, 'end': 936.6800000000001, 'text': ' question is that is the solution unique or can there be multiple solutions what is your guess.', 'tokens': [50684, 1168, 307, 300, 307, 264, 3827, 3845, 420, 393, 456, 312, 3866, 6547, 437, 307, 428, 2041, 13, 50974], 'temperature': 0.0, 'avg_logprob': -0.1433652570877952, 'compression_ratio': 1.9581151832460733, 'no_speech_prob': 0.04573187232017517}, {'id': 122, 'seek': 92448, 'start': 936.6800000000001, 'end': 944.8000000000001, 'text': ' So, let us stare at these equations and try to think can there be just one solution or', 'tokens': [50974, 407, 11, 718, 505, 22432, 412, 613, 11787, 293, 853, 281, 519, 393, 456, 312, 445, 472, 3827, 420, 51380], 'temperature': 0.0, 'avg_logprob': -0.1433652570877952, 'compression_ratio': 1.9581151832460733, 'no_speech_prob': 0.04573187232017517}, {'id': 123, 'seek': 92448, 'start': 944.8000000000001, 'end': 951.9200000000001, 'text': ' can there be multiple solutions no no the outcome so sorry maybe I should have so the outcome. So,', 'tokens': [51380, 393, 456, 312, 3866, 6547, 572, 572, 264, 9700, 370, 2597, 1310, 286, 820, 362, 370, 264, 9700, 13, 407, 11, 51736], 'temperature': 0.0, 'avg_logprob': -0.1433652570877952, 'compression_ratio': 1.9581151832460733, 'no_speech_prob': 0.04573187232017517}, {'id': 124, 'seek': 95192, 'start': 952.76, 'end': 957.8, 'text': ' how do you verify your solution on this okay we do not know how to compute a solution but can we', 'tokens': [50406, 577, 360, 291, 16888, 428, 3827, 322, 341, 1392, 321, 360, 406, 458, 577, 281, 14722, 257, 3827, 457, 393, 321, 50658], 'temperature': 0.0, 'avg_logprob': -0.17958004833900765, 'compression_ratio': 1.9025974025974026, 'no_speech_prob': 0.1355968713760376}, {'id': 125, 'seek': 95192, 'start': 957.8, 'end': 963.8399999999999, 'text': ' know do you know how to verify a solution how will we verify a solution. So, what is going to be a', 'tokens': [50658, 458, 360, 291, 458, 577, 281, 16888, 257, 3827, 577, 486, 321, 16888, 257, 3827, 13, 407, 11, 437, 307, 516, 281, 312, 257, 50960], 'temperature': 0.0, 'avg_logprob': -0.17958004833900765, 'compression_ratio': 1.9025974025974026, 'no_speech_prob': 0.1355968713760376}, {'id': 126, 'seek': 95192, 'start': 963.8399999999999, 'end': 971.16, 'text': ' solution for this let us ask that first what is my solution what we mean by this solution yes the', 'tokens': [50960, 3827, 337, 341, 718, 505, 1029, 300, 700, 437, 307, 452, 3827, 437, 321, 914, 538, 341, 3827, 2086, 264, 51326], 'temperature': 0.0, 'avg_logprob': -0.17958004833900765, 'compression_ratio': 1.9025974025974026, 'no_speech_prob': 0.1355968713760376}, {'id': 127, 'seek': 97116, 'start': 971.16, 'end': 984.64, 'text': ' in out sets of all basic blocks right. So, in of b 1 out of b 1 in of b 2 out of b 2 right this', 'tokens': [50364, 294, 484, 6352, 295, 439, 3875, 8474, 558, 13, 407, 11, 294, 295, 272, 502, 484, 295, 272, 502, 294, 295, 272, 568, 484, 295, 272, 568, 558, 341, 51038], 'temperature': 0.0, 'avg_logprob': -0.19270310401916504, 'compression_ratio': 1.5116279069767442, 'no_speech_prob': 0.13728627562522888}, {'id': 128, 'seek': 97116, 'start': 984.64, 'end': 997.36, 'text': ' whole tuple is going to be my solution right how yeah. So, now the question is that how do I so now', 'tokens': [51038, 1379, 2604, 781, 307, 516, 281, 312, 452, 3827, 558, 577, 1338, 13, 407, 11, 586, 264, 1168, 307, 300, 577, 360, 286, 370, 586, 51674], 'temperature': 0.0, 'avg_logprob': -0.19270310401916504, 'compression_ratio': 1.5116279069767442, 'no_speech_prob': 0.13728627562522888}, {'id': 129, 'seek': 99736, 'start': 997.36, 'end': 1004.2, 'text': ' will I have only one such solution or can I have multiple solutions. So, let us try to stare at', 'tokens': [50364, 486, 286, 362, 787, 472, 1270, 3827, 420, 393, 286, 362, 3866, 6547, 13, 407, 11, 718, 505, 853, 281, 22432, 412, 50706], 'temperature': 0.0, 'avg_logprob': -0.15773507468720788, 'compression_ratio': 1.9308943089430894, 'no_speech_prob': 0.028302062302827835}, {'id': 130, 'seek': 99736, 'start': 1004.2, 'end': 1009.96, 'text': ' this equation and try to think okay. So, let us sorry it was about the question of verifying', 'tokens': [50706, 341, 5367, 293, 853, 281, 519, 1392, 13, 407, 11, 718, 505, 2597, 309, 390, 466, 264, 1168, 295, 1306, 5489, 50994], 'temperature': 0.0, 'avg_logprob': -0.15773507468720788, 'compression_ratio': 1.9308943089430894, 'no_speech_prob': 0.028302062302827835}, {'id': 131, 'seek': 99736, 'start': 1009.96, 'end': 1014.96, 'text': ' the solution. So, can I verify the solution how will I verify a solution. So, let us say somebody', 'tokens': [50994, 264, 3827, 13, 407, 11, 393, 286, 16888, 264, 3827, 577, 486, 286, 16888, 257, 3827, 13, 407, 11, 718, 505, 584, 2618, 51244], 'temperature': 0.0, 'avg_logprob': -0.15773507468720788, 'compression_ratio': 1.9308943089430894, 'no_speech_prob': 0.028302062302827835}, {'id': 132, 'seek': 99736, 'start': 1014.96, 'end': 1019.08, 'text': ' comes and tells you I think this is a solution for this how would you check he is lying or not.', 'tokens': [51244, 1487, 293, 5112, 291, 286, 519, 341, 307, 257, 3827, 337, 341, 577, 576, 291, 1520, 415, 307, 8493, 420, 406, 13, 51450], 'temperature': 0.0, 'avg_logprob': -0.15773507468720788, 'compression_ratio': 1.9308943089430894, 'no_speech_prob': 0.028302062302827835}, {'id': 133, 'seek': 99736, 'start': 1019.08, 'end': 1024.16, 'text': ' We have see we have abstracted everything out now everything is a pure nice mathematical set', 'tokens': [51450, 492, 362, 536, 321, 362, 12649, 292, 1203, 484, 586, 1203, 307, 257, 6075, 1481, 18894, 992, 51704], 'temperature': 0.0, 'avg_logprob': -0.15773507468720788, 'compression_ratio': 1.9308943089430894, 'no_speech_prob': 0.028302062302827835}, {'id': 134, 'seek': 102416, 'start': 1024.16, 'end': 1028.72, 'text': ' equations I really do not have to go back to my control flow graph anymore whatever I could have', 'tokens': [50364, 11787, 286, 534, 360, 406, 362, 281, 352, 646, 281, 452, 1969, 3095, 4295, 3602, 2035, 286, 727, 362, 50592], 'temperature': 0.0, 'avg_logprob': -0.2039056747190414, 'compression_ratio': 2.0071942446043165, 'no_speech_prob': 0.44207122921943665}, {'id': 135, 'seek': 102416, 'start': 1028.72, 'end': 1032.6000000000001, 'text': ' done with my control flow graph I have already done now all you have to do is live with these', 'tokens': [50592, 1096, 365, 452, 1969, 3095, 4295, 286, 362, 1217, 1096, 586, 439, 291, 362, 281, 360, 307, 1621, 365, 613, 50786], 'temperature': 0.0, 'avg_logprob': -0.2039056747190414, 'compression_ratio': 2.0071942446043165, 'no_speech_prob': 0.44207122921943665}, {'id': 136, 'seek': 102416, 'start': 1032.6000000000001, 'end': 1037.0, 'text': ' equations you have already extracted out the equations now the question is now you have a', 'tokens': [50786, 11787, 291, 362, 1217, 34086, 484, 264, 11787, 586, 264, 1168, 307, 586, 291, 362, 257, 51006], 'temperature': 0.0, 'avg_logprob': -0.2039056747190414, 'compression_ratio': 2.0071942446043165, 'no_speech_prob': 0.44207122921943665}, {'id': 137, 'seek': 102416, 'start': 1037.0, 'end': 1040.6000000000001, 'text': ' set of equations now you are talking about the solutions for this equation which will give me', 'tokens': [51006, 992, 295, 11787, 586, 291, 366, 1417, 466, 264, 6547, 337, 341, 5367, 597, 486, 976, 385, 51186], 'temperature': 0.0, 'avg_logprob': -0.2039056747190414, 'compression_ratio': 2.0071942446043165, 'no_speech_prob': 0.44207122921943665}, {'id': 138, 'seek': 102416, 'start': 1040.6000000000001, 'end': 1045.76, 'text': ' a solution to the control flow graph somehow yeah, but we have done this nice abstraction only.', 'tokens': [51186, 257, 3827, 281, 264, 1969, 3095, 4295, 6063, 1338, 11, 457, 321, 362, 1096, 341, 1481, 37765, 787, 13, 51444], 'temperature': 0.0, 'avg_logprob': -0.2039056747190414, 'compression_ratio': 2.0071942446043165, 'no_speech_prob': 0.44207122921943665}, {'id': 139, 'seek': 102416, 'start': 1045.76, 'end': 1054.0400000000002, 'text': ' Excellent so we have the general set so now yes I will just go and plug in those values', 'tokens': [51444, 16723, 370, 321, 362, 264, 2674, 992, 370, 586, 2086, 286, 486, 445, 352, 293, 5452, 294, 729, 4190, 51858], 'temperature': 0.0, 'avg_logprob': -0.2039056747190414, 'compression_ratio': 2.0071942446043165, 'no_speech_prob': 0.44207122921943665}, {'id': 140, 'seek': 105404, 'start': 1054.04, 'end': 1058.8, 'text': ' here if all the equations match up I will say that is the solution if they do not match up it', 'tokens': [50364, 510, 498, 439, 264, 11787, 2995, 493, 286, 486, 584, 300, 307, 264, 3827, 498, 436, 360, 406, 2995, 493, 309, 50602], 'temperature': 0.0, 'avg_logprob': -0.1817132462846472, 'compression_ratio': 1.8970588235294117, 'no_speech_prob': 0.0023359572514891624}, {'id': 141, 'seek': 105404, 'start': 1058.8, 'end': 1064.1599999999999, 'text': ' is not a solution as simple as that agreed right. So, we know how to verify a solution now the', 'tokens': [50602, 307, 406, 257, 3827, 382, 2199, 382, 300, 9166, 558, 13, 407, 11, 321, 458, 577, 281, 16888, 257, 3827, 586, 264, 50870], 'temperature': 0.0, 'avg_logprob': -0.1817132462846472, 'compression_ratio': 1.8970588235294117, 'no_speech_prob': 0.0023359572514891624}, {'id': 142, 'seek': 105404, 'start': 1064.1599999999999, 'end': 1070.32, 'text': ' question is how do you compute the solution right looks weird right. So, now so let us try to first', 'tokens': [50870, 1168, 307, 577, 360, 291, 14722, 264, 3827, 558, 1542, 3657, 558, 13, 407, 11, 586, 370, 718, 505, 853, 281, 700, 51178], 'temperature': 0.0, 'avg_logprob': -0.1817132462846472, 'compression_ratio': 1.8970588235294117, 'no_speech_prob': 0.0023359572514891624}, {'id': 143, 'seek': 105404, 'start': 1070.32, 'end': 1077.8, 'text': ' answer that what would this so will this solution be will there be only one solution or will there', 'tokens': [51178, 1867, 300, 437, 576, 341, 370, 486, 341, 3827, 312, 486, 456, 312, 787, 472, 3827, 420, 486, 456, 51552], 'temperature': 0.0, 'avg_logprob': -0.1817132462846472, 'compression_ratio': 1.8970588235294117, 'no_speech_prob': 0.0023359572514891624}, {'id': 144, 'seek': 107780, 'start': 1077.8, 'end': 1086.68, 'text': ' be multiple solutions okay. So, I will give you a hint look at this particular graph and try to', 'tokens': [50364, 312, 3866, 6547, 1392, 13, 407, 11, 286, 486, 976, 291, 257, 12075, 574, 412, 341, 1729, 4295, 293, 853, 281, 50808], 'temperature': 0.0, 'avg_logprob': -0.24757901509602864, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.18158166110515594}, {'id': 145, 'seek': 107780, 'start': 1086.68, 'end': 1098.28, 'text': ' answer that question. So, now what I am asking you to do is to play the debits and locate try to', 'tokens': [50808, 1867, 300, 1168, 13, 407, 11, 586, 437, 286, 669, 3365, 291, 281, 360, 307, 281, 862, 264, 3001, 1208, 293, 22370, 853, 281, 51388], 'temperature': 0.0, 'avg_logprob': -0.24757901509602864, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.18158166110515594}, {'id': 146, 'seek': 107780, 'start': 1098.28, 'end': 1103.6399999999999, 'text': ' try to break this thing try to say that okay this is not what I would have wanted but I can still', 'tokens': [51388, 853, 281, 1821, 341, 551, 853, 281, 584, 300, 1392, 341, 307, 406, 437, 286, 576, 362, 1415, 457, 286, 393, 920, 51656], 'temperature': 0.0, 'avg_logprob': -0.24757901509602864, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.18158166110515594}, {'id': 147, 'seek': 110364, 'start': 1103.64, 'end': 1109.64, 'text': ' get the solution. So, you are trying to compute reaching definitions and there is a self loop', 'tokens': [50364, 483, 264, 3827, 13, 407, 11, 291, 366, 1382, 281, 14722, 9906, 21988, 293, 456, 307, 257, 2698, 6367, 50664], 'temperature': 0.0, 'avg_logprob': -0.19564981663480718, 'compression_ratio': 1.3777777777777778, 'no_speech_prob': 0.12911444902420044}, {'id': 148, 'seek': 110364, 'start': 1109.64, 'end': 1124.44, 'text': ' on this basic very simple case. So, okay so I will still make it easier let us say I already', 'tokens': [50664, 322, 341, 3875, 588, 2199, 1389, 13, 407, 11, 1392, 370, 286, 486, 920, 652, 309, 3571, 718, 505, 584, 286, 1217, 51404], 'temperature': 0.0, 'avg_logprob': -0.19564981663480718, 'compression_ratio': 1.3777777777777778, 'no_speech_prob': 0.12911444902420044}, {'id': 149, 'seek': 112444, 'start': 1124.44, 'end': 1140.64, 'text': ' have a known solution right which is let us say let us say call it n 1 0 okay. So, let us say this', 'tokens': [50364, 362, 257, 2570, 3827, 558, 597, 307, 718, 505, 584, 718, 505, 584, 818, 309, 297, 502, 1958, 1392, 13, 407, 11, 718, 505, 584, 341, 51174], 'temperature': 0.0, 'avg_logprob': -0.17309606486353382, 'compression_ratio': 1.5590551181102361, 'no_speech_prob': 0.11164894700050354}, {'id': 150, 'seek': 112444, 'start': 1140.64, 'end': 1151.8, 'text': ' is a set in 1 0 out 1 0 and into 0 these are the two things and this into 0 is okay does not matter', 'tokens': [51174, 307, 257, 992, 294, 502, 1958, 484, 502, 1958, 293, 666, 1958, 613, 366, 264, 732, 721, 293, 341, 666, 1958, 307, 1392, 775, 406, 1871, 51732], 'temperature': 0.0, 'avg_logprob': -0.17309606486353382, 'compression_ratio': 1.5590551181102361, 'no_speech_prob': 0.11164894700050354}, {'id': 151, 'seek': 115180, 'start': 1151.8, 'end': 1158.9199999999998, 'text': ' but now the question is that I want to figure out so this in is going to be this so let us have', 'tokens': [50364, 457, 586, 264, 1168, 307, 300, 286, 528, 281, 2573, 484, 370, 341, 294, 307, 516, 281, 312, 341, 370, 718, 505, 362, 50720], 'temperature': 0.0, 'avg_logprob': -0.16429809729258218, 'compression_ratio': 1.7195121951219512, 'no_speech_prob': 0.0039491732604801655}, {'id': 152, 'seek': 115180, 'start': 1158.9199999999998, 'end': 1167.8799999999999, 'text': ' a in 0 also something like that and I want to construct another solution which is in 1 in 1 1', 'tokens': [50720, 257, 294, 1958, 611, 746, 411, 300, 293, 286, 528, 281, 7690, 1071, 3827, 597, 307, 294, 502, 294, 502, 502, 51168], 'temperature': 0.0, 'avg_logprob': -0.16429809729258218, 'compression_ratio': 1.7195121951219512, 'no_speech_prob': 0.0039491732604801655}, {'id': 153, 'seek': 115180, 'start': 1167.8799999999999, 'end': 1174.12, 'text': ' in 1 into 1 and so on. Take this solution and somehow try to extend it into another solution', 'tokens': [51168, 294, 502, 666, 502, 293, 370, 322, 13, 3664, 341, 3827, 293, 6063, 853, 281, 10101, 309, 666, 1071, 3827, 51480], 'temperature': 0.0, 'avg_logprob': -0.16429809729258218, 'compression_ratio': 1.7195121951219512, 'no_speech_prob': 0.0039491732604801655}, {'id': 154, 'seek': 117412, 'start': 1174.12, 'end': 1182.04, 'text': ' if you can. So, let us assume that I already know that these guys already form a solution.', 'tokens': [50364, 498, 291, 393, 13, 407, 11, 718, 505, 6552, 300, 286, 1217, 458, 300, 613, 1074, 1217, 1254, 257, 3827, 13, 50760], 'temperature': 0.0, 'avg_logprob': -0.23286141289605033, 'compression_ratio': 1.4830508474576272, 'no_speech_prob': 0.06919500976800919}, {'id': 155, 'seek': 117412, 'start': 1182.04, 'end': 1195.8, 'text': ' This notation I do not like this notation okay let me just change this notation. So,', 'tokens': [50760, 639, 24657, 286, 360, 406, 411, 341, 24657, 1392, 718, 385, 445, 1319, 341, 24657, 13, 407, 11, 51448], 'temperature': 0.0, 'avg_logprob': -0.23286141289605033, 'compression_ratio': 1.4830508474576272, 'no_speech_prob': 0.06919500976800919}, {'id': 156, 'seek': 119580, 'start': 1195.8, 'end': 1213.0, 'text': ' let us just put a solution let me say that in 1 in it is not 1 this is some set S 1 and out of', 'tokens': [50364, 718, 505, 445, 829, 257, 3827, 718, 385, 584, 300, 294, 502, 294, 309, 307, 406, 502, 341, 307, 512, 992, 318, 502, 293, 484, 295, 51224], 'temperature': 0.0, 'avg_logprob': -0.18675533362797328, 'compression_ratio': 1.6355932203389831, 'no_speech_prob': 0.04823571443557739}, {'id': 157, 'seek': 119580, 'start': 1213.0, 'end': 1221.32, 'text': ' n is some set S 2 let us say this is my solution I know S 1 is solution to this it satisfies those', 'tokens': [51224, 297, 307, 512, 992, 318, 568, 718, 505, 584, 341, 307, 452, 3827, 286, 458, 318, 502, 307, 3827, 281, 341, 309, 44271, 729, 51640], 'temperature': 0.0, 'avg_logprob': -0.18675533362797328, 'compression_ratio': 1.6355932203389831, 'no_speech_prob': 0.04823571443557739}, {'id': 158, 'seek': 122132, 'start': 1221.32, 'end': 1230.52, 'text': ' equations. Now I want to say can I can you somehow use S 1 and S 2 and extend it to another solution', 'tokens': [50364, 11787, 13, 823, 286, 528, 281, 584, 393, 286, 393, 291, 6063, 764, 318, 502, 293, 318, 568, 293, 10101, 309, 281, 1071, 3827, 50824], 'temperature': 0.0, 'avg_logprob': -0.20025206323879868, 'compression_ratio': 1.6055555555555556, 'no_speech_prob': 0.13099436461925507}, {'id': 159, 'seek': 122132, 'start': 1230.52, 'end': 1235.04, 'text': ' which still works on this basic law do not think of the controller graph now just think about this', 'tokens': [50824, 597, 920, 1985, 322, 341, 3875, 2101, 360, 406, 519, 295, 264, 10561, 4295, 586, 445, 519, 466, 341, 51050], 'temperature': 0.0, 'avg_logprob': -0.20025206323879868, 'compression_ratio': 1.6055555555555556, 'no_speech_prob': 0.13099436461925507}, {'id': 160, 'seek': 122132, 'start': 1235.04, 'end': 1249.76, 'text': ' set of equations and remember the equations you have the equations here. No understand my', 'tokens': [51050, 992, 295, 11787, 293, 1604, 264, 11787, 291, 362, 264, 11787, 510, 13, 883, 1223, 452, 51786], 'temperature': 0.0, 'avg_logprob': -0.20025206323879868, 'compression_ratio': 1.6055555555555556, 'no_speech_prob': 0.13099436461925507}, {'id': 161, 'seek': 124976, 'start': 1250.16, 'end': 1256.16, 'text': ' question is that you are already given a solution which is in of n is S 1 and out of n is S 2.', 'tokens': [50384, 1168, 307, 300, 291, 366, 1217, 2212, 257, 3827, 597, 307, 294, 295, 297, 307, 318, 502, 293, 484, 295, 297, 307, 318, 568, 13, 50684], 'temperature': 0.0, 'avg_logprob': -0.21060049533843994, 'compression_ratio': 1.5934959349593496, 'no_speech_prob': 0.3480961322784424}, {'id': 162, 'seek': 124976, 'start': 1256.16, 'end': 1264.96, 'text': ' This solution is given to you already in 1 and out S 1 and S 2 may not be the same that you can agree', 'tokens': [50684, 639, 3827, 307, 2212, 281, 291, 1217, 294, 502, 293, 484, 318, 502, 293, 318, 568, 815, 406, 312, 264, 912, 300, 291, 393, 3986, 51124], 'temperature': 0.0, 'avg_logprob': -0.21060049533843994, 'compression_ratio': 1.5934959349593496, 'no_speech_prob': 0.3480961322784424}, {'id': 163, 'seek': 126496, 'start': 1264.96, 'end': 1291.0, 'text': ' or they are the same. Excellent excellent very nice. So, what I can simply do is I can really', 'tokens': [50364, 420, 436, 366, 264, 912, 13, 16723, 7103, 588, 1481, 13, 407, 11, 437, 286, 393, 2935, 360, 307, 286, 393, 534, 51666], 'temperature': 0.0, 'avg_logprob': -0.34070576154268706, 'compression_ratio': 1.1341463414634145, 'no_speech_prob': 0.1337609440088272}, {'id': 164, 'seek': 129100, 'start': 1291.0, 'end': 1300.92, 'text': ' play this game I take S 1 this guy is S 1 and to this I add some definition d i which is let us', 'tokens': [50364, 862, 341, 1216, 286, 747, 318, 502, 341, 2146, 307, 318, 502, 293, 281, 341, 286, 909, 512, 7123, 274, 741, 597, 307, 718, 505, 50860], 'temperature': 0.0, 'avg_logprob': -0.1362963318824768, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.4369524121284485}, {'id': 165, 'seek': 129100, 'start': 1300.92, 'end': 1308.6, 'text': ' say not in this set right. So, what will happen to this this guy let us say is not does not get', 'tokens': [50860, 584, 406, 294, 341, 992, 558, 13, 407, 11, 437, 486, 1051, 281, 341, 341, 2146, 718, 505, 584, 307, 406, 775, 406, 483, 51244], 'temperature': 0.0, 'avg_logprob': -0.1362963318824768, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.4369524121284485}, {'id': 166, 'seek': 129100, 'start': 1308.6, 'end': 1318.28, 'text': ' killed by this right. So, this will also have d i because this guy has d i this will come and', 'tokens': [51244, 4652, 538, 341, 558, 13, 407, 11, 341, 486, 611, 362, 274, 741, 570, 341, 2146, 575, 274, 741, 341, 486, 808, 293, 51728], 'temperature': 0.0, 'avg_logprob': -0.1362963318824768, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.4369524121284485}, {'id': 167, 'seek': 131828, 'start': 1318.28, 'end': 1322.92, 'text': ' merge with this. So, everything will stabilize. So, I got a new solution from this which is nothing', 'tokens': [50364, 22183, 365, 341, 13, 407, 11, 1203, 486, 31870, 13, 407, 11, 286, 658, 257, 777, 3827, 490, 341, 597, 307, 1825, 50596], 'temperature': 0.0, 'avg_logprob': -0.13105047376532303, 'compression_ratio': 1.6685393258426966, 'no_speech_prob': 0.09733347594738007}, {'id': 168, 'seek': 131828, 'start': 1322.92, 'end': 1335.68, 'text': ' but S 1 plus d i and S 2 plus d i do you see this I can just put a new thing and because there is a', 'tokens': [50596, 457, 318, 502, 1804, 274, 741, 293, 318, 568, 1804, 274, 741, 360, 291, 536, 341, 286, 393, 445, 829, 257, 777, 551, 293, 570, 456, 307, 257, 51234], 'temperature': 0.0, 'avg_logprob': -0.13105047376532303, 'compression_ratio': 1.6685393258426966, 'no_speech_prob': 0.09733347594738007}, {'id': 169, 'seek': 131828, 'start': 1335.68, 'end': 1340.6, 'text': ' loop this guy will feed back and the whole thing will still stabilize they all the equations will', 'tokens': [51234, 6367, 341, 2146, 486, 3154, 646, 293, 264, 1379, 551, 486, 920, 31870, 436, 439, 264, 11787, 486, 51480], 'temperature': 0.0, 'avg_logprob': -0.13105047376532303, 'compression_ratio': 1.6685393258426966, 'no_speech_prob': 0.09733347594738007}, {'id': 170, 'seek': 134060, 'start': 1340.6, 'end': 1352.1599999999999, 'text': ' still match up. Once I can put another definition I can put the whole set here right the whole', 'tokens': [50364, 920, 2995, 493, 13, 3443, 286, 393, 829, 1071, 7123, 286, 393, 829, 264, 1379, 992, 510, 558, 264, 1379, 50942], 'temperature': 0.0, 'avg_logprob': -0.21445157130559286, 'compression_ratio': 1.5483870967741935, 'no_speech_prob': 0.25998297333717346}, {'id': 171, 'seek': 134060, 'start': 1352.1599999999999, 'end': 1359.6, 'text': ' universal set I can put here right. So, essentially there may not be just one or two there can be', 'tokens': [50942, 11455, 992, 286, 393, 829, 510, 558, 13, 407, 11, 4476, 456, 815, 406, 312, 445, 472, 420, 732, 456, 393, 312, 51314], 'temperature': 0.0, 'avg_logprob': -0.21445157130559286, 'compression_ratio': 1.5483870967741935, 'no_speech_prob': 0.25998297333717346}, {'id': 172, 'seek': 135960, 'start': 1359.6, 'end': 1372.7199999999998, 'text': ' multiple fixed point solutions to this set of equations anybody who does not see this right.', 'tokens': [50364, 3866, 6806, 935, 6547, 281, 341, 992, 295, 11787, 4472, 567, 775, 406, 536, 341, 558, 13, 51020], 'temperature': 0.0, 'avg_logprob': -0.14407937791612413, 'compression_ratio': 1.800995024875622, 'no_speech_prob': 0.15440866351127625}, {'id': 173, 'seek': 135960, 'start': 1372.7199999999998, 'end': 1378.8, 'text': ' So, the question is that which of these solutions. So, now I can so these set of solutions if I try', 'tokens': [51020, 407, 11, 264, 1168, 307, 300, 597, 295, 613, 6547, 13, 407, 11, 586, 286, 393, 370, 613, 992, 295, 6547, 498, 286, 853, 51324], 'temperature': 0.0, 'avg_logprob': -0.14407937791612413, 'compression_ratio': 1.800995024875622, 'no_speech_prob': 0.15440866351127625}, {'id': 174, 'seek': 135960, 'start': 1378.8, 'end': 1383.04, 'text': ' to give it us to us some sort of solver it will give me a whole lot of solutions. So,', 'tokens': [51324, 281, 976, 309, 505, 281, 505, 512, 1333, 295, 1404, 331, 309, 486, 976, 385, 257, 1379, 688, 295, 6547, 13, 407, 11, 51536], 'temperature': 0.0, 'avg_logprob': -0.14407937791612413, 'compression_ratio': 1.800995024875622, 'no_speech_prob': 0.15440866351127625}, {'id': 175, 'seek': 135960, 'start': 1383.04, 'end': 1388.6799999999998, 'text': ' which solution is the solution I am really interested see how we are going from the', 'tokens': [51536, 597, 3827, 307, 264, 3827, 286, 669, 534, 3102, 536, 577, 321, 366, 516, 490, 264, 51818], 'temperature': 0.0, 'avg_logprob': -0.14407937791612413, 'compression_ratio': 1.800995024875622, 'no_speech_prob': 0.15440866351127625}, {'id': 176, 'seek': 138868, 'start': 1388.68, 'end': 1396.1200000000001, 'text': ' programming language problem to a mathematical formulation and then back to the language problem', 'tokens': [50364, 9410, 2856, 1154, 281, 257, 18894, 37642, 293, 550, 646, 281, 264, 2856, 1154, 50736], 'temperature': 0.0, 'avg_logprob': -0.18834372127757354, 'compression_ratio': 2.044642857142857, 'no_speech_prob': 0.07129976153373718}, {'id': 177, 'seek': 138868, 'start': 1396.1200000000001, 'end': 1399.4, 'text': ' right. So, we have abstracted into a set of equations now we see there can be multiple', 'tokens': [50736, 558, 13, 407, 11, 321, 362, 12649, 292, 666, 257, 992, 295, 11787, 586, 321, 536, 456, 393, 312, 3866, 50900], 'temperature': 0.0, 'avg_logprob': -0.18834372127757354, 'compression_ratio': 2.044642857142857, 'no_speech_prob': 0.07129976153373718}, {'id': 178, 'seek': 138868, 'start': 1399.4, 'end': 1405.48, 'text': ' solutions to the set of equations now we are asking which solution is the solution I was', 'tokens': [50900, 6547, 281, 264, 992, 295, 11787, 586, 321, 366, 3365, 597, 3827, 307, 264, 3827, 286, 390, 51204], 'temperature': 0.0, 'avg_logprob': -0.18834372127757354, 'compression_ratio': 2.044642857142857, 'no_speech_prob': 0.07129976153373718}, {'id': 179, 'seek': 138868, 'start': 1405.48, 'end': 1410.4, 'text': ' looking to get when I was trying to solve the problem the original problem. So, which of these', 'tokens': [51204, 1237, 281, 483, 562, 286, 390, 1382, 281, 5039, 264, 1154, 264, 3380, 1154, 13, 407, 11, 597, 295, 613, 51450], 'temperature': 0.0, 'avg_logprob': -0.18834372127757354, 'compression_ratio': 2.044642857142857, 'no_speech_prob': 0.07129976153373718}, {'id': 180, 'seek': 138868, 'start': 1410.4, 'end': 1414.76, 'text': ' sets would work for us which of these solutions would work for us which one we should get.', 'tokens': [51450, 6352, 576, 589, 337, 505, 597, 295, 613, 6547, 576, 589, 337, 505, 597, 472, 321, 820, 483, 13, 51668], 'temperature': 0.0, 'avg_logprob': -0.18834372127757354, 'compression_ratio': 2.044642857142857, 'no_speech_prob': 0.07129976153373718}, {'id': 181, 'seek': 141476, 'start': 1414.76, 'end': 1427.32, 'text': ' Exactly. So, I want this the solution which is the smallest set right. So, now we are like', 'tokens': [50364, 7587, 13, 407, 11, 286, 528, 341, 264, 3827, 597, 307, 264, 16998, 992, 558, 13, 407, 11, 586, 321, 366, 411, 50992], 'temperature': 0.0, 'avg_logprob': -0.15751663656795725, 'compression_ratio': 1.7135922330097086, 'no_speech_prob': 0.019696515053510666}, {'id': 182, 'seek': 141476, 'start': 1427.32, 'end': 1431.8, 'text': ' piling problem on problem because first we do not even know how to get a solution second', 'tokens': [50992, 280, 4883, 1154, 322, 1154, 570, 700, 321, 360, 406, 754, 458, 577, 281, 483, 257, 3827, 1150, 51216], 'temperature': 0.0, 'avg_logprob': -0.15751663656795725, 'compression_ratio': 1.7135922330097086, 'no_speech_prob': 0.019696515053510666}, {'id': 183, 'seek': 141476, 'start': 1431.8, 'end': 1436.08, 'text': ' problem is even if you get a solution any solution will not do we will actually need', 'tokens': [51216, 1154, 307, 754, 498, 291, 483, 257, 3827, 604, 3827, 486, 406, 360, 321, 486, 767, 643, 51430], 'temperature': 0.0, 'avg_logprob': -0.15751663656795725, 'compression_ratio': 1.7135922330097086, 'no_speech_prob': 0.019696515053510666}, {'id': 184, 'seek': 141476, 'start': 1436.08, 'end': 1441.8799999999999, 'text': ' a solution which gives you the minimum size of these sets right what we can let us refer', 'tokens': [51430, 257, 3827, 597, 2709, 291, 264, 7285, 2744, 295, 613, 6352, 558, 437, 321, 393, 718, 505, 2864, 51720], 'temperature': 0.0, 'avg_logprob': -0.15751663656795725, 'compression_ratio': 1.7135922330097086, 'no_speech_prob': 0.019696515053510666}, {'id': 185, 'seek': 144188, 'start': 1442.1200000000001, 'end': 1450.1200000000001, 'text': ' to that as the least fixed point solution right. So, I will call it the least fixed', 'tokens': [50376, 281, 300, 382, 264, 1935, 6806, 935, 3827, 558, 13, 407, 11, 286, 486, 818, 309, 264, 1935, 6806, 50776], 'temperature': 0.0, 'avg_logprob': -0.2464525266127153, 'compression_ratio': 1.4782608695652173, 'no_speech_prob': 0.23810693621635437}, {'id': 186, 'seek': 144188, 'start': 1450.1200000000001, 'end': 1465.8400000000001, 'text': ' point solution or LFP right. So, multiple problems first we do not even know the third', 'tokens': [50776, 935, 3827, 420, 441, 45882, 558, 13, 407, 11, 3866, 2740, 700, 321, 360, 406, 754, 458, 264, 2636, 51562], 'temperature': 0.0, 'avg_logprob': -0.2464525266127153, 'compression_ratio': 1.4782608695652173, 'no_speech_prob': 0.23810693621635437}, {'id': 187, 'seek': 146584, 'start': 1465.84, 'end': 1475.32, 'text': ' question is how do we even know a solution exists a set of equations may not have a solution right.', 'tokens': [50364, 1168, 307, 577, 360, 321, 754, 458, 257, 3827, 8198, 257, 992, 295, 11787, 815, 406, 362, 257, 3827, 558, 13, 50838], 'temperature': 0.0, 'avg_logprob': -0.11900940494260927, 'compression_ratio': 1.6627906976744187, 'no_speech_prob': 0.011799954809248447}, {'id': 188, 'seek': 146584, 'start': 1475.32, 'end': 1481.12, 'text': ' So, that is another problem. So, we have multiple problems to answer first is does a solution even', 'tokens': [50838, 407, 11, 300, 307, 1071, 1154, 13, 407, 11, 321, 362, 3866, 2740, 281, 1867, 700, 307, 775, 257, 3827, 754, 51128], 'temperature': 0.0, 'avg_logprob': -0.11900940494260927, 'compression_ratio': 1.6627906976744187, 'no_speech_prob': 0.011799954809248447}, {'id': 189, 'seek': 146584, 'start': 1481.12, 'end': 1494.52, 'text': ' exist the second is even if it exists is it computable which means that can I take find', 'tokens': [51128, 2514, 264, 1150, 307, 754, 498, 309, 8198, 307, 309, 2807, 712, 597, 1355, 300, 393, 286, 747, 915, 51798], 'temperature': 0.0, 'avg_logprob': -0.11900940494260927, 'compression_ratio': 1.6627906976744187, 'no_speech_prob': 0.011799954809248447}, {'id': 190, 'seek': 149452, 'start': 1494.56, 'end': 1500.6399999999999, 'text': ' the algorithm to compute that solution and the third is even if it exists and I get a', 'tokens': [50366, 264, 9284, 281, 14722, 300, 3827, 293, 264, 2636, 307, 754, 498, 309, 8198, 293, 286, 483, 257, 50670], 'temperature': 0.0, 'avg_logprob': -0.16520673036575317, 'compression_ratio': 1.4230769230769231, 'no_speech_prob': 0.021712368354201317}, {'id': 191, 'seek': 149452, 'start': 1500.6399999999999, 'end': 1511.8799999999999, 'text': ' algorithm to compute it can it give me the LFP or right. So, we have to answer all these questions.', 'tokens': [50670, 9284, 281, 14722, 309, 393, 309, 976, 385, 264, 441, 45882, 420, 558, 13, 407, 11, 321, 362, 281, 1867, 439, 613, 1651, 13, 51232], 'temperature': 0.0, 'avg_logprob': -0.16520673036575317, 'compression_ratio': 1.4230769230769231, 'no_speech_prob': 0.021712368354201317}, {'id': 192, 'seek': 151188, 'start': 1511.88, 'end': 1524.7600000000002, 'text': " So, today's class we will actually try to see how to get an answer to these problems this is", 'tokens': [50364, 407, 11, 965, 311, 1508, 321, 486, 767, 853, 281, 536, 577, 281, 483, 364, 1867, 281, 613, 2740, 341, 307, 51008], 'temperature': 0.0, 'avg_logprob': -0.13777845755390739, 'compression_ratio': 1.662280701754386, 'no_speech_prob': 0.007827329449355602}, {'id': 193, 'seek': 151188, 'start': 1524.7600000000002, 'end': 1528.68, 'text': ' a point to ask questions anybody who has not understood what we are trying to do please ask', 'tokens': [51008, 257, 935, 281, 1029, 1651, 4472, 567, 575, 406, 7320, 437, 321, 366, 1382, 281, 360, 1767, 1029, 51204], 'temperature': 0.0, 'avg_logprob': -0.13777845755390739, 'compression_ratio': 1.662280701754386, 'no_speech_prob': 0.007827329449355602}, {'id': 194, 'seek': 151188, 'start': 1528.68, 'end': 1533.68, 'text': ' it now because otherwise the whole day will become very boring will not even have the motivation to', 'tokens': [51204, 309, 586, 570, 5911, 264, 1379, 786, 486, 1813, 588, 9989, 486, 406, 754, 362, 264, 12335, 281, 51454], 'temperature': 0.0, 'avg_logprob': -0.13777845755390739, 'compression_ratio': 1.662280701754386, 'no_speech_prob': 0.007827329449355602}, {'id': 195, 'seek': 151188, 'start': 1533.68, 'end': 1540.0, 'text': ' do it yeah in generally also there can be a whenever there is a loop which has this transitive', 'tokens': [51454, 360, 309, 1338, 294, 5101, 611, 456, 393, 312, 257, 5699, 456, 307, 257, 6367, 597, 575, 341, 1145, 2187, 51770], 'temperature': 0.0, 'avg_logprob': -0.13777845755390739, 'compression_ratio': 1.662280701754386, 'no_speech_prob': 0.007827329449355602}, {'id': 196, 'seek': 154000, 'start': 1540.24, 'end': 1545.0, 'text': ' I mean which will create a cyclic dependency we can always do that. So, instead of this one', 'tokens': [50376, 286, 914, 597, 486, 1884, 257, 38154, 1050, 33621, 321, 393, 1009, 360, 300, 13, 407, 11, 2602, 295, 341, 472, 50614], 'temperature': 0.0, 'avg_logprob': -0.16719206029718572, 'compression_ratio': 1.7538461538461538, 'no_speech_prob': 0.05457676574587822}, {'id': 197, 'seek': 154000, 'start': 1545.0, 'end': 1548.92, 'text': ' basic block had it being a sequence of basic blocks that also would have the same problem', 'tokens': [50614, 3875, 3461, 632, 309, 885, 257, 8310, 295, 3875, 8474, 300, 611, 576, 362, 264, 912, 1154, 50810], 'temperature': 0.0, 'avg_logprob': -0.16719206029718572, 'compression_ratio': 1.7538461538461538, 'no_speech_prob': 0.05457676574587822}, {'id': 198, 'seek': 154000, 'start': 1548.92, 'end': 1554.72, 'text': ' right I can just simply extend that idea right even last set of basic blocks from the last guy', 'tokens': [50810, 558, 286, 393, 445, 2935, 10101, 300, 1558, 558, 754, 1036, 992, 295, 3875, 8474, 490, 264, 1036, 2146, 51100], 'temperature': 0.0, 'avg_logprob': -0.16719206029718572, 'compression_ratio': 1.7538461538461538, 'no_speech_prob': 0.05457676574587822}, {'id': 199, 'seek': 154000, 'start': 1554.72, 'end': 1559.8, 'text': ' from where I have the back edge I add a new definition and that will go and like pause', 'tokens': [51100, 490, 689, 286, 362, 264, 646, 4691, 286, 909, 257, 777, 7123, 293, 300, 486, 352, 293, 411, 10465, 51354], 'temperature': 0.0, 'avg_logprob': -0.16719206029718572, 'compression_ratio': 1.7538461538461538, 'no_speech_prob': 0.05457676574587822}, {'id': 200, 'seek': 154000, 'start': 1559.8, 'end': 1567.2, 'text': ' everything within the loop. So, if you do not have a loop then we are good because we do not', 'tokens': [51354, 1203, 1951, 264, 6367, 13, 407, 11, 498, 291, 360, 406, 362, 257, 6367, 550, 321, 366, 665, 570, 321, 360, 406, 51724], 'temperature': 0.0, 'avg_logprob': -0.16719206029718572, 'compression_ratio': 1.7538461538461538, 'no_speech_prob': 0.05457676574587822}, {'id': 201, 'seek': 156720, 'start': 1567.2, 'end': 1572.1200000000001, 'text': ' have a cyclic dependency as soon as you have a loop you have a problem and programs will have', 'tokens': [50364, 362, 257, 38154, 1050, 33621, 382, 2321, 382, 291, 362, 257, 6367, 291, 362, 257, 1154, 293, 4268, 486, 362, 50610], 'temperature': 0.0, 'avg_logprob': -0.15904164537091123, 'compression_ratio': 1.9623430962343096, 'no_speech_prob': 0.10905274003744125}, {'id': 202, 'seek': 156720, 'start': 1572.1200000000001, 'end': 1576.92, 'text': ' loops yes we are increasing the size of the set that is true but think about this innocent', 'tokens': [50610, 16121, 2086, 321, 366, 5662, 264, 2744, 295, 264, 992, 300, 307, 2074, 457, 519, 466, 341, 13171, 50850], 'temperature': 0.0, 'avg_logprob': -0.15904164537091123, 'compression_ratio': 1.9623430962343096, 'no_speech_prob': 0.10905274003744125}, {'id': 203, 'seek': 156720, 'start': 1576.92, 'end': 1582.16, 'text': ' question right you take this set of equations and give it to a solver right which will solve', 'tokens': [50850, 1168, 558, 291, 747, 341, 992, 295, 11787, 293, 976, 309, 281, 257, 1404, 331, 558, 597, 486, 5039, 51112], 'temperature': 0.0, 'avg_logprob': -0.15904164537091123, 'compression_ratio': 1.9623430962343096, 'no_speech_prob': 0.10905274003744125}, {'id': 204, 'seek': 156720, 'start': 1582.16, 'end': 1588.4, 'text': ' this six point equations and give you give it a solution to you that particular guy does not', 'tokens': [51112, 341, 2309, 935, 11787, 293, 976, 291, 976, 309, 257, 3827, 281, 291, 300, 1729, 2146, 775, 406, 51424], 'temperature': 0.0, 'avg_logprob': -0.15904164537091123, 'compression_ratio': 1.9623430962343096, 'no_speech_prob': 0.10905274003744125}, {'id': 205, 'seek': 156720, 'start': 1588.4, 'end': 1594.0800000000002, 'text': ' know what solution is the one you want right for it does not know the original problem it does not', 'tokens': [51424, 458, 437, 3827, 307, 264, 472, 291, 528, 558, 337, 309, 775, 406, 458, 264, 3380, 1154, 309, 775, 406, 51708], 'temperature': 0.0, 'avg_logprob': -0.15904164537091123, 'compression_ratio': 1.9623430962343096, 'no_speech_prob': 0.10905274003744125}, {'id': 206, 'seek': 159408, 'start': 1594.08, 'end': 1597.9199999999998, 'text': ' know we are trying to compute which definitions it just looks at this set of equations and then', 'tokens': [50364, 458, 321, 366, 1382, 281, 14722, 597, 21988, 309, 445, 1542, 412, 341, 992, 295, 11787, 293, 550, 50556], 'temperature': 0.0, 'avg_logprob': -0.21395465547004633, 'compression_ratio': 1.768060836501901, 'no_speech_prob': 0.017832741141319275}, {'id': 207, 'seek': 159408, 'start': 1597.9199999999998, 'end': 1602.84, 'text': ' say there is some equations over set. So, can I solve it and give you a solution but not all', 'tokens': [50556, 584, 456, 307, 512, 11787, 670, 992, 13, 407, 11, 393, 286, 5039, 309, 293, 976, 291, 257, 3827, 457, 406, 439, 50802], 'temperature': 0.0, 'avg_logprob': -0.21395465547004633, 'compression_ratio': 1.768060836501901, 'no_speech_prob': 0.017832741141319275}, {'id': 208, 'seek': 159408, 'start': 1602.84, 'end': 1606.96, 'text': ' solutions from that guy are admissible I cannot just take any solution and that will not be the', 'tokens': [50802, 6547, 490, 300, 2146, 366, 5910, 41073, 286, 2644, 445, 747, 604, 3827, 293, 300, 486, 406, 312, 264, 51008], 'temperature': 0.0, 'avg_logprob': -0.21395465547004633, 'compression_ratio': 1.768060836501901, 'no_speech_prob': 0.017832741141319275}, {'id': 209, 'seek': 159408, 'start': 1606.96, 'end': 1612.3999999999999, 'text': ' answer that I am looking to get ok should we summarize it one more time or is it ok.', 'tokens': [51008, 1867, 300, 286, 669, 1237, 281, 483, 3133, 820, 321, 20858, 309, 472, 544, 565, 420, 307, 309, 3133, 13, 51280], 'temperature': 0.0, 'avg_logprob': -0.21395465547004633, 'compression_ratio': 1.768060836501901, 'no_speech_prob': 0.017832741141319275}, {'id': 210, 'seek': 159408, 'start': 1612.3999999999999, 'end': 1619.84, 'text': ' So, so ok so the problem is again what would we do we did essentially we start oh this all goes', 'tokens': [51280, 407, 11, 370, 3133, 370, 264, 1154, 307, 797, 437, 576, 321, 360, 321, 630, 4476, 321, 722, 1954, 341, 439, 1709, 51652], 'temperature': 0.0, 'avg_logprob': -0.21395465547004633, 'compression_ratio': 1.768060836501901, 'no_speech_prob': 0.017832741141319275}, {'id': 211, 'seek': 161984, 'start': 1619.84, 'end': 1632.0, 'text': ' oh thank god it stays ok. So, the idea was this idea was that we took our control flow graph from', 'tokens': [50364, 1954, 1309, 3044, 309, 10834, 3133, 13, 407, 11, 264, 1558, 390, 341, 1558, 390, 300, 321, 1890, 527, 1969, 3095, 4295, 490, 50972], 'temperature': 0.0, 'avg_logprob': -0.18048825471297555, 'compression_ratio': 1.8037974683544304, 'no_speech_prob': 0.07061531394720078}, {'id': 212, 'seek': 161984, 'start': 1632.0, 'end': 1637.4399999999998, 'text': ' our control flow graph we figured out that we decided that analysis that we will do we will', 'tokens': [50972, 527, 1969, 3095, 4295, 321, 8932, 484, 300, 321, 3047, 300, 5215, 300, 321, 486, 360, 321, 486, 51244], 'temperature': 0.0, 'avg_logprob': -0.18048825471297555, 'compression_ratio': 1.8037974683544304, 'no_speech_prob': 0.07061531394720078}, {'id': 213, 'seek': 161984, 'start': 1637.4399999999998, 'end': 1644.8, 'text': ' break it up into two phases we will do a local analysis to figure out some summaries about each', 'tokens': [51244, 1821, 309, 493, 666, 732, 18764, 321, 486, 360, 257, 2654, 5215, 281, 2573, 484, 512, 8367, 4889, 466, 1184, 51612], 'temperature': 0.0, 'avg_logprob': -0.18048825471297555, 'compression_ratio': 1.8037974683544304, 'no_speech_prob': 0.07061531394720078}, {'id': 214, 'seek': 164480, 'start': 1644.8, 'end': 1649.6, 'text': ' basic block something which will tell me what happens at each basic block and these are will', 'tokens': [50364, 3875, 3461, 746, 597, 486, 980, 385, 437, 2314, 412, 1184, 3875, 3461, 293, 613, 366, 486, 50604], 'temperature': 0.0, 'avg_logprob': -0.17401430628321193, 'compression_ratio': 2.1333333333333333, 'no_speech_prob': 0.1313123255968094}, {'id': 215, 'seek': 164480, 'start': 1649.6, 'end': 1655.24, 'text': ' be do using this gen and kill sets. So, we will compute the set of gen sets we will compute the', 'tokens': [50604, 312, 360, 1228, 341, 1049, 293, 1961, 6352, 13, 407, 11, 321, 486, 14722, 264, 992, 295, 1049, 6352, 321, 486, 14722, 264, 50886], 'temperature': 0.0, 'avg_logprob': -0.17401430628321193, 'compression_ratio': 2.1333333333333333, 'no_speech_prob': 0.1313123255968094}, {'id': 216, 'seek': 164480, 'start': 1655.24, 'end': 1660.36, 'text': ' gen set which will tell me what happens at node n what are what are generated at node n and the', 'tokens': [50886, 1049, 992, 597, 486, 980, 385, 437, 2314, 412, 9984, 297, 437, 366, 437, 366, 10833, 412, 9984, 297, 293, 264, 51142], 'temperature': 0.0, 'avg_logprob': -0.17401430628321193, 'compression_ratio': 2.1333333333333333, 'no_speech_prob': 0.1313123255968094}, {'id': 217, 'seek': 164480, 'start': 1660.36, 'end': 1666.44, 'text': ' kill set will tell me what gets killed at node n using this local sets I can start writing equations', 'tokens': [51142, 1961, 992, 486, 980, 385, 437, 2170, 4652, 412, 9984, 297, 1228, 341, 2654, 6352, 286, 393, 722, 3579, 11787, 51446], 'temperature': 0.0, 'avg_logprob': -0.17401430628321193, 'compression_ratio': 2.1333333333333333, 'no_speech_prob': 0.1313123255968094}, {'id': 218, 'seek': 164480, 'start': 1666.44, 'end': 1673.84, 'text': ' which will summarize the computation over the whole graph right. So, first we started doing it', 'tokens': [51446, 597, 486, 20858, 264, 24903, 670, 264, 1379, 4295, 558, 13, 407, 11, 700, 321, 1409, 884, 309, 51816], 'temperature': 0.0, 'avg_logprob': -0.17401430628321193, 'compression_ratio': 2.1333333333333333, 'no_speech_prob': 0.1313123255968094}, {'id': 219, 'seek': 167384, 'start': 1673.84, 'end': 1678.24, 'text': ' at one basic block and then we want to extend create equations which will work for the whole', 'tokens': [50364, 412, 472, 3875, 3461, 293, 550, 321, 528, 281, 10101, 1884, 11787, 597, 486, 589, 337, 264, 1379, 50584], 'temperature': 0.0, 'avg_logprob': -0.12833498759442066, 'compression_ratio': 1.8860103626943006, 'no_speech_prob': 0.009089109487831593}, {'id': 220, 'seek': 167384, 'start': 1678.24, 'end': 1683.56, 'text': ' graph the whole control flow graph. So, to construct the global solutions we use these', 'tokens': [50584, 4295, 264, 1379, 1969, 3095, 4295, 13, 407, 11, 281, 7690, 264, 4338, 6547, 321, 764, 613, 50850], 'temperature': 0.0, 'avg_logprob': -0.12833498759442066, 'compression_ratio': 1.8860103626943006, 'no_speech_prob': 0.009089109487831593}, {'id': 221, 'seek': 167384, 'start': 1683.56, 'end': 1688.9599999999998, 'text': ' equations we use the transfer function which says that given what happens what is the set at the', 'tokens': [50850, 11787, 321, 764, 264, 5003, 2445, 597, 1619, 300, 2212, 437, 2314, 437, 307, 264, 992, 412, 264, 51120], 'temperature': 0.0, 'avg_logprob': -0.12833498759442066, 'compression_ratio': 1.8860103626943006, 'no_speech_prob': 0.009089109487831593}, {'id': 222, 'seek': 167384, 'start': 1688.9599999999998, 'end': 1693.28, 'text': ' beginning of the basic block what is going to be the set at the end of the basic block.', 'tokens': [51120, 2863, 295, 264, 3875, 3461, 437, 307, 516, 281, 312, 264, 992, 412, 264, 917, 295, 264, 3875, 3461, 13, 51336], 'temperature': 0.0, 'avg_logprob': -0.12833498759442066, 'compression_ratio': 1.8860103626943006, 'no_speech_prob': 0.009089109487831593}, {'id': 223, 'seek': 169328, 'start': 1693.28, 'end': 1708.52, 'text': ' So, this is referred to as the transfer function agreed and second thing we will do we will use', 'tokens': [50364, 407, 11, 341, 307, 10839, 281, 382, 264, 5003, 2445, 9166, 293, 1150, 551, 321, 486, 360, 321, 486, 764, 51126], 'temperature': 0.0, 'avg_logprob': -0.1498442636409276, 'compression_ratio': 1.7005988023952097, 'no_speech_prob': 0.05811857059597969}, {'id': 224, 'seek': 169328, 'start': 1708.52, 'end': 1716.2, 'text': ' this inset sorry we will use this meet operator. So, we basically say that how do I know what', 'tokens': [51126, 341, 1028, 302, 2597, 321, 486, 764, 341, 1677, 12973, 13, 407, 11, 321, 1936, 584, 300, 577, 360, 286, 458, 437, 51510], 'temperature': 0.0, 'avg_logprob': -0.1498442636409276, 'compression_ratio': 1.7005988023952097, 'no_speech_prob': 0.05811857059597969}, {'id': 225, 'seek': 169328, 'start': 1716.2, 'end': 1720.2, 'text': ' happens at the beginning of a basic block right. So, we need to figure out what happens at the', 'tokens': [51510, 2314, 412, 264, 2863, 295, 257, 3875, 3461, 558, 13, 407, 11, 321, 643, 281, 2573, 484, 437, 2314, 412, 264, 51710], 'temperature': 0.0, 'avg_logprob': -0.1498442636409276, 'compression_ratio': 1.7005988023952097, 'no_speech_prob': 0.05811857059597969}, {'id': 226, 'seek': 172020, 'start': 1720.2, 'end': 1723.16, 'text': ' beginning of the basic block what happens at the end of the basic block what happens at the beginning', 'tokens': [50364, 2863, 295, 264, 3875, 3461, 437, 2314, 412, 264, 917, 295, 264, 3875, 3461, 437, 2314, 412, 264, 2863, 50512], 'temperature': 0.0, 'avg_logprob': -0.17935503853691948, 'compression_ratio': 2.1082251082251084, 'no_speech_prob': 0.2151421755552292}, {'id': 227, 'seek': 172020, 'start': 1723.16, 'end': 1729.04, 'text': ' of the basic block things get accumulated all the sets outsets from the predecessors get', 'tokens': [50512, 295, 264, 3875, 3461, 721, 483, 31346, 439, 264, 6352, 14758, 1385, 490, 264, 24874, 45700, 483, 50806], 'temperature': 0.0, 'avg_logprob': -0.17935503853691948, 'compression_ratio': 2.1082251082251084, 'no_speech_prob': 0.2151421755552292}, {'id': 228, 'seek': 172020, 'start': 1729.04, 'end': 1733.1200000000001, 'text': ' accumulated what happens at the end of the basic block I apply my transfer function to figure out', 'tokens': [50806, 31346, 437, 2314, 412, 264, 917, 295, 264, 3875, 3461, 286, 3079, 452, 5003, 2445, 281, 2573, 484, 51010], 'temperature': 0.0, 'avg_logprob': -0.17935503853691948, 'compression_ratio': 2.1082251082251084, 'no_speech_prob': 0.2151421755552292}, {'id': 229, 'seek': 172020, 'start': 1733.1200000000001, 'end': 1740.56, 'text': ' how does my inset change into my outset all that is clear. Now one once we have this set of equations', 'tokens': [51010, 577, 775, 452, 1028, 302, 1319, 666, 452, 44618, 439, 300, 307, 1850, 13, 823, 472, 1564, 321, 362, 341, 992, 295, 11787, 51382], 'temperature': 0.0, 'avg_logprob': -0.17935503853691948, 'compression_ratio': 2.1082251082251084, 'no_speech_prob': 0.2151421755552292}, {'id': 230, 'seek': 172020, 'start': 1740.56, 'end': 1748.56, 'text': ' the rest of the work is very mechanical I just go and apply this equations to every single basic', 'tokens': [51382, 264, 1472, 295, 264, 589, 307, 588, 12070, 286, 445, 352, 293, 3079, 341, 11787, 281, 633, 2167, 3875, 51782], 'temperature': 0.0, 'avg_logprob': -0.17935503853691948, 'compression_ratio': 2.1082251082251084, 'no_speech_prob': 0.2151421755552292}, {'id': 231, 'seek': 174856, 'start': 1748.56, 'end': 1755.6399999999999, 'text': ' block in the system. So, then I get this large set of equations that I which tell what happens', 'tokens': [50364, 3461, 294, 264, 1185, 13, 407, 11, 550, 286, 483, 341, 2416, 992, 295, 11787, 300, 286, 597, 980, 437, 2314, 50718], 'temperature': 0.0, 'avg_logprob': -0.13538258870442707, 'compression_ratio': 1.782258064516129, 'no_speech_prob': 0.034745533019304276}, {'id': 232, 'seek': 174856, 'start': 1755.6399999999999, 'end': 1760.6799999999998, 'text': ' at every particular basic block I can simply expand it out nothing very serious going on I', 'tokens': [50718, 412, 633, 1729, 3875, 3461, 286, 393, 2935, 5268, 309, 484, 1825, 588, 3156, 516, 322, 286, 50970], 'temperature': 0.0, 'avg_logprob': -0.13538258870442707, 'compression_ratio': 1.782258064516129, 'no_speech_prob': 0.034745533019304276}, {'id': 233, 'seek': 174856, 'start': 1760.6799999999998, 'end': 1766.12, 'text': ' just plug in the right gen and kill sets for each of each of these cases right.', 'tokens': [50970, 445, 5452, 294, 264, 558, 1049, 293, 1961, 6352, 337, 1184, 295, 1184, 295, 613, 3331, 558, 13, 51242], 'temperature': 0.0, 'avg_logprob': -0.13538258870442707, 'compression_ratio': 1.782258064516129, 'no_speech_prob': 0.034745533019304276}, {'id': 234, 'seek': 174856, 'start': 1766.12, 'end': 1773.28, 'text': ' Now I have what we have been able to do is we have been able to forget our control flow', 'tokens': [51242, 823, 286, 362, 437, 321, 362, 668, 1075, 281, 360, 307, 321, 362, 668, 1075, 281, 2870, 527, 1969, 3095, 51600], 'temperature': 0.0, 'avg_logprob': -0.13538258870442707, 'compression_ratio': 1.782258064516129, 'no_speech_prob': 0.034745533019304276}, {'id': 235, 'seek': 174856, 'start': 1773.28, 'end': 1778.36, 'text': ' graph we forget what we forget what was the problem we were solving we were solving some', 'tokens': [51600, 4295, 321, 2870, 437, 321, 2870, 437, 390, 264, 1154, 321, 645, 12606, 321, 645, 12606, 512, 51854], 'temperature': 0.0, 'avg_logprob': -0.13538258870442707, 'compression_ratio': 1.782258064516129, 'no_speech_prob': 0.034745533019304276}, {'id': 236, 'seek': 177836, 'start': 1778.36, 'end': 1782.4399999999998, 'text': ' reaching definition problem I do not care anymore we were solving something on a graph I do not', 'tokens': [50364, 9906, 7123, 1154, 286, 360, 406, 1127, 3602, 321, 645, 12606, 746, 322, 257, 4295, 286, 360, 406, 50568], 'temperature': 0.0, 'avg_logprob': -0.16477385720053872, 'compression_ratio': 1.8317307692307692, 'no_speech_prob': 0.006972103379666805}, {'id': 237, 'seek': 177836, 'start': 1782.4399999999998, 'end': 1790.1999999999998, 'text': ' care anymore I now I can just live with this set of equations if I can design a solver which can', 'tokens': [50568, 1127, 3602, 286, 586, 286, 393, 445, 1621, 365, 341, 992, 295, 11787, 498, 286, 393, 1715, 257, 1404, 331, 597, 393, 50956], 'temperature': 0.0, 'avg_logprob': -0.16477385720053872, 'compression_ratio': 1.8317307692307692, 'no_speech_prob': 0.006972103379666805}, {'id': 238, 'seek': 177836, 'start': 1790.1999999999998, 'end': 1795.9599999999998, 'text': ' take these equations and give me a solution to these equations I am done I will get in and', 'tokens': [50956, 747, 613, 11787, 293, 976, 385, 257, 3827, 281, 613, 11787, 286, 669, 1096, 286, 486, 483, 294, 293, 51244], 'temperature': 0.0, 'avg_logprob': -0.16477385720053872, 'compression_ratio': 1.8317307692307692, 'no_speech_prob': 0.006972103379666805}, {'id': 239, 'seek': 177836, 'start': 1795.9599999999998, 'end': 1799.9199999999998, 'text': ' outsets which I can simply go and see oh that is what happens in the beginning of this oh this is', 'tokens': [51244, 14758, 1385, 597, 286, 393, 2935, 352, 293, 536, 1954, 300, 307, 437, 2314, 294, 264, 2863, 295, 341, 1954, 341, 307, 51442], 'temperature': 0.0, 'avg_logprob': -0.16477385720053872, 'compression_ratio': 1.8317307692307692, 'no_speech_prob': 0.006972103379666805}, {'id': 240, 'seek': 179992, 'start': 1799.92, 'end': 1805.3200000000002, 'text': ' what happens at the end of this that is it are we good till now agreed ok.', 'tokens': [50364, 437, 2314, 412, 264, 917, 295, 341, 300, 307, 309, 366, 321, 665, 4288, 586, 9166, 3133, 13, 50634], 'temperature': 0.0, 'avg_logprob': -0.21281858769858755, 'compression_ratio': 1.6930232558139535, 'no_speech_prob': 0.06328205019235611}, {'id': 241, 'seek': 179992, 'start': 1805.3200000000002, 'end': 1813.24, 'text': ' Now let us forget the actual problem the reaching definition problem and just stare at this system', 'tokens': [50634, 823, 718, 505, 2870, 264, 3539, 1154, 264, 9906, 7123, 1154, 293, 445, 22432, 412, 341, 1185, 51030], 'temperature': 0.0, 'avg_logprob': -0.21281858769858755, 'compression_ratio': 1.6930232558139535, 'no_speech_prob': 0.06328205019235611}, {'id': 242, 'seek': 179992, 'start': 1813.24, 'end': 1820.28, 'text': ' equations first thing I notice is that this system of equations is cannot be solved easily', 'tokens': [51030, 11787, 700, 551, 286, 3449, 307, 300, 341, 1185, 295, 11787, 307, 2644, 312, 13041, 3612, 51382], 'temperature': 0.0, 'avg_logprob': -0.21281858769858755, 'compression_ratio': 1.6930232558139535, 'no_speech_prob': 0.06328205019235611}, {'id': 243, 'seek': 179992, 'start': 1820.28, 'end': 1829.68, 'text': ' by substitutions why because I can see dependence is going on here right I can see that BB1 depends', 'tokens': [51382, 538, 26441, 3666, 983, 570, 286, 393, 536, 31704, 307, 516, 322, 510, 558, 286, 393, 536, 300, 19168, 16, 5946, 51852], 'temperature': 0.0, 'avg_logprob': -0.21281858769858755, 'compression_ratio': 1.6930232558139535, 'no_speech_prob': 0.06328205019235611}, {'id': 244, 'seek': 182968, 'start': 1829.68, 'end': 1843.44, 'text': ' on B4 and I see B4 depends on B2 B3 which in turn depend on B1 right so any change I make to any', 'tokens': [50364, 322, 363, 19, 293, 286, 536, 363, 19, 5946, 322, 363, 17, 363, 18, 597, 294, 1261, 5672, 322, 363, 16, 558, 370, 604, 1319, 286, 652, 281, 604, 51052], 'temperature': 0.0, 'avg_logprob': -0.139491622512405, 'compression_ratio': 1.6079545454545454, 'no_speech_prob': 0.0025936730671674013}, {'id': 245, 'seek': 182968, 'start': 1843.44, 'end': 1847.92, 'text': ' of these sets will get propagated to the other one which will create a problem and again which', 'tokens': [51052, 295, 613, 6352, 486, 483, 12425, 770, 281, 264, 661, 472, 597, 486, 1884, 257, 1154, 293, 797, 597, 51276], 'temperature': 0.0, 'avg_logprob': -0.139491622512405, 'compression_ratio': 1.6079545454545454, 'no_speech_prob': 0.0025936730671674013}, {'id': 246, 'seek': 182968, 'start': 1847.92, 'end': 1856.3200000000002, 'text': ' will propagate the change to the whole thing again. So I need a different strategy to solve', 'tokens': [51276, 486, 48256, 264, 1319, 281, 264, 1379, 551, 797, 13, 407, 286, 643, 257, 819, 5206, 281, 5039, 51696], 'temperature': 0.0, 'avg_logprob': -0.139491622512405, 'compression_ratio': 1.6079545454545454, 'no_speech_prob': 0.0025936730671674013}, {'id': 247, 'seek': 185632, 'start': 1856.48, 'end': 1862.28, 'text': ' these equations I cannot solve these equations simply by substitution that we should be convinced', 'tokens': [50372, 613, 11787, 286, 2644, 5039, 613, 11787, 2935, 538, 35827, 300, 321, 820, 312, 12561, 50662], 'temperature': 0.0, 'avg_logprob': -0.18997479607077206, 'compression_ratio': 2.0260416666666665, 'no_speech_prob': 0.13640663027763367}, {'id': 248, 'seek': 185632, 'start': 1862.28, 'end': 1870.2, 'text': ' on right before that we have to so now that is one problem second is that first we have to looking', 'tokens': [50662, 322, 558, 949, 300, 321, 362, 281, 370, 586, 300, 307, 472, 1154, 1150, 307, 300, 700, 321, 362, 281, 1237, 51058], 'temperature': 0.0, 'avg_logprob': -0.18997479607077206, 'compression_ratio': 2.0260416666666665, 'no_speech_prob': 0.13640663027763367}, {'id': 249, 'seek': 185632, 'start': 1870.2, 'end': 1874.6, 'text': ' at these equations first we have to figure out that do this is a set of equations even have a', 'tokens': [51058, 412, 613, 11787, 700, 321, 362, 281, 2573, 484, 300, 360, 341, 307, 257, 992, 295, 11787, 754, 362, 257, 51278], 'temperature': 0.0, 'avg_logprob': -0.18997479607077206, 'compression_ratio': 2.0260416666666665, 'no_speech_prob': 0.13640663027763367}, {'id': 250, 'seek': 185632, 'start': 1874.6, 'end': 1880.48, 'text': ' solution does a solution even exist in this case right if its solution does not exist there is not', 'tokens': [51278, 3827, 775, 257, 3827, 754, 2514, 294, 341, 1389, 558, 498, 1080, 3827, 775, 406, 2514, 456, 307, 406, 51572], 'temperature': 0.0, 'avg_logprob': -0.18997479607077206, 'compression_ratio': 2.0260416666666665, 'no_speech_prob': 0.13640663027763367}, {'id': 251, 'seek': 188048, 'start': 1880.48, 'end': 1888.6, 'text': ' no point even thinking about an algorithm right. So first question is does a solution exist second', 'tokens': [50364, 572, 935, 754, 1953, 466, 364, 9284, 558, 13, 407, 700, 1168, 307, 775, 257, 3827, 2514, 1150, 50770], 'temperature': 0.0, 'avg_logprob': -0.21167724515184944, 'compression_ratio': 1.865, 'no_speech_prob': 0.14258639514446259}, {'id': 252, 'seek': 188048, 'start': 1888.6, 'end': 1893.76, 'text': ' problem is that if there exists a solution do we have can we come up with an efficient', 'tokens': [50770, 1154, 307, 300, 498, 456, 8198, 257, 3827, 360, 321, 362, 393, 321, 808, 493, 365, 364, 7148, 51028], 'temperature': 0.0, 'avg_logprob': -0.21167724515184944, 'compression_ratio': 1.865, 'no_speech_prob': 0.14258639514446259}, {'id': 253, 'seek': 188048, 'start': 1893.76, 'end': 1898.64, 'text': ' algorithm to solve these equations that is an important question in computer science if you', 'tokens': [51028, 9284, 281, 5039, 613, 11787, 300, 307, 364, 1021, 1168, 294, 3820, 3497, 498, 291, 51272], 'temperature': 0.0, 'avg_logprob': -0.21167724515184944, 'compression_ratio': 1.865, 'no_speech_prob': 0.14258639514446259}, {'id': 254, 'seek': 188048, 'start': 1898.64, 'end': 1907.28, 'text': ' can do something can you do it right so that is the second problem the third problem is that do', 'tokens': [51272, 393, 360, 746, 393, 291, 360, 309, 558, 370, 300, 307, 264, 1150, 1154, 264, 2636, 1154, 307, 300, 360, 51704], 'temperature': 0.0, 'avg_logprob': -0.21167724515184944, 'compression_ratio': 1.865, 'no_speech_prob': 0.14258639514446259}, {'id': 255, 'seek': 190728, 'start': 1907.28, 'end': 1912.48, 'text': ' the system equations have multiple solutions so first we are talking about no solutions and now', 'tokens': [50364, 264, 1185, 11787, 362, 3866, 6547, 370, 700, 321, 366, 1417, 466, 572, 6547, 293, 586, 50624], 'temperature': 0.0, 'avg_logprob': -0.13961635401219497, 'compression_ratio': 2.3841463414634148, 'no_speech_prob': 0.007314758375287056}, {'id': 256, 'seek': 190728, 'start': 1912.48, 'end': 1918.8, 'text': ' we are talking about multiple solutions right so now the question is that do the system equations', 'tokens': [50624, 321, 366, 1417, 466, 3866, 6547, 558, 370, 586, 264, 1168, 307, 300, 360, 264, 1185, 11787, 50940], 'temperature': 0.0, 'avg_logprob': -0.13961635401219497, 'compression_ratio': 2.3841463414634148, 'no_speech_prob': 0.007314758375287056}, {'id': 257, 'seek': 190728, 'start': 1918.8, 'end': 1925.6, 'text': ' have multiple solutions if the system of equations have a multiple solution then which is the solution', 'tokens': [50940, 362, 3866, 6547, 498, 264, 1185, 295, 11787, 362, 257, 3866, 3827, 550, 597, 307, 264, 3827, 51280], 'temperature': 0.0, 'avg_logprob': -0.13961635401219497, 'compression_ratio': 2.3841463414634148, 'no_speech_prob': 0.007314758375287056}, {'id': 258, 'seek': 190728, 'start': 1925.6, 'end': 1932.92, 'text': ' we are looking to get right so we saw that if I pick one solution to this equations I can very', 'tokens': [51280, 321, 366, 1237, 281, 483, 558, 370, 321, 1866, 300, 498, 286, 1888, 472, 3827, 281, 341, 11787, 286, 393, 588, 51646], 'temperature': 0.0, 'avg_logprob': -0.13961635401219497, 'compression_ratio': 2.3841463414634148, 'no_speech_prob': 0.007314758375287056}, {'id': 259, 'seek': 193292, 'start': 1932.92, 'end': 1939.72, 'text': ' simply keep on adding definitions to get larger sets which are still solutions which are also', 'tokens': [50364, 2935, 1066, 322, 5127, 21988, 281, 483, 4833, 6352, 597, 366, 920, 6547, 597, 366, 611, 50704], 'temperature': 0.0, 'avg_logprob': -0.09310042393672002, 'compression_ratio': 2.3012048192771086, 'no_speech_prob': 0.017404921352863312}, {'id': 260, 'seek': 193292, 'start': 1939.72, 'end': 1946.44, 'text': ' solutions so this set of equations do have multiple solutions if they have multiple solutions then', 'tokens': [50704, 6547, 370, 341, 992, 295, 11787, 360, 362, 3866, 6547, 498, 436, 362, 3866, 6547, 550, 51040], 'temperature': 0.0, 'avg_logprob': -0.09310042393672002, 'compression_ratio': 2.3012048192771086, 'no_speech_prob': 0.017404921352863312}, {'id': 261, 'seek': 193292, 'start': 1946.44, 'end': 1951.72, 'text': ' the question is that which is the solution that works for us not every solution works for us right', 'tokens': [51040, 264, 1168, 307, 300, 597, 307, 264, 3827, 300, 1985, 337, 505, 406, 633, 3827, 1985, 337, 505, 558, 51304], 'temperature': 0.0, 'avg_logprob': -0.09310042393672002, 'compression_ratio': 2.3012048192771086, 'no_speech_prob': 0.017404921352863312}, {'id': 262, 'seek': 193292, 'start': 1951.72, 'end': 1956.52, 'text': ' so which solution works for us the smallest solution works for us right the solution which', 'tokens': [51304, 370, 597, 3827, 1985, 337, 505, 264, 16998, 3827, 1985, 337, 505, 558, 264, 3827, 597, 51544], 'temperature': 0.0, 'avg_logprob': -0.09310042393672002, 'compression_ratio': 2.3012048192771086, 'no_speech_prob': 0.017404921352863312}, {'id': 263, 'seek': 195652, 'start': 1957.0, 'end': 1965.04, 'text': ' the sizes of the sets are the smallest okay think about it so what do we want to do with reaching', 'tokens': [50388, 264, 11602, 295, 264, 6352, 366, 264, 16998, 1392, 519, 466, 309, 370, 437, 360, 321, 528, 281, 360, 365, 9906, 50790], 'temperature': 0.0, 'avg_logprob': -0.16448315806772518, 'compression_ratio': 1.9393939393939394, 'no_speech_prob': 0.13581503927707672}, {'id': 264, 'seek': 195652, 'start': 1965.04, 'end': 1970.76, 'text': ' definitions what can we do with reaching definitions okay that is a very good question so let us let', 'tokens': [50790, 21988, 437, 393, 321, 360, 365, 9906, 21988, 1392, 300, 307, 257, 588, 665, 1168, 370, 718, 505, 718, 51076], 'temperature': 0.0, 'avg_logprob': -0.16448315806772518, 'compression_ratio': 1.9393939393939394, 'no_speech_prob': 0.13581503927707672}, {'id': 265, 'seek': 195652, 'start': 1970.76, 'end': 1978.28, 'text': ' us think about it so why would be interested in the smallest set so whenever you are faced', 'tokens': [51076, 505, 519, 466, 309, 370, 983, 576, 312, 3102, 294, 264, 16998, 992, 370, 5699, 291, 366, 11446, 51452], 'temperature': 0.0, 'avg_logprob': -0.16448315806772518, 'compression_ratio': 1.9393939393939394, 'no_speech_prob': 0.13581503927707672}, {'id': 266, 'seek': 195652, 'start': 1978.28, 'end': 1983.44, 'text': ' with this problem that what are I mean why this solution is good for me why not something else', 'tokens': [51452, 365, 341, 1154, 300, 437, 366, 286, 914, 983, 341, 3827, 307, 665, 337, 385, 983, 406, 746, 1646, 51710], 'temperature': 0.0, 'avg_logprob': -0.16448315806772518, 'compression_ratio': 1.9393939393939394, 'no_speech_prob': 0.13581503927707672}, {'id': 267, 'seek': 198344, 'start': 1983.44, 'end': 1987.8, 'text': ' you should think about the application of this particular analysis so where can I use reaching', 'tokens': [50364, 291, 820, 519, 466, 264, 3861, 295, 341, 1729, 5215, 370, 689, 393, 286, 764, 9906, 50582], 'temperature': 0.0, 'avg_logprob': -0.1400468803587414, 'compression_ratio': 1.8038277511961722, 'no_speech_prob': 0.016035670414566994}, {'id': 268, 'seek': 198344, 'start': 1987.8, 'end': 1992.48, 'text': ' definitions can you think can you give me some idea of some very simple idea of what can be', 'tokens': [50582, 21988, 393, 291, 519, 393, 291, 976, 385, 512, 1558, 295, 512, 588, 2199, 1558, 295, 437, 393, 312, 50816], 'temperature': 0.0, 'avg_logprob': -0.1400468803587414, 'compression_ratio': 1.8038277511961722, 'no_speech_prob': 0.016035670414566994}, {'id': 269, 'seek': 198344, 'start': 1992.48, 'end': 1997.44, 'text': ' some optimization some transformation I can do with reaching definitions so if I know that a', 'tokens': [50816, 512, 19618, 512, 9887, 286, 393, 360, 365, 9906, 21988, 370, 498, 286, 458, 300, 257, 51064], 'temperature': 0.0, 'avg_logprob': -0.1400468803587414, 'compression_ratio': 1.8038277511961722, 'no_speech_prob': 0.016035670414566994}, {'id': 270, 'seek': 198344, 'start': 1997.44, 'end': 2009.3200000000002, 'text': ' particular set like I have like x equals y plus z right and let us say I know that y has only one', 'tokens': [51064, 1729, 992, 411, 286, 362, 411, 2031, 6915, 288, 1804, 710, 558, 293, 718, 505, 584, 286, 458, 300, 288, 575, 787, 472, 51658], 'temperature': 0.0, 'avg_logprob': -0.1400468803587414, 'compression_ratio': 1.8038277511961722, 'no_speech_prob': 0.016035670414566994}, {'id': 271, 'seek': 200932, 'start': 2009.32, 'end': 2022.56, 'text': ' reaching definition right so it means that there is some y equals something something this guy is', 'tokens': [50364, 9906, 7123, 558, 370, 309, 1355, 300, 456, 307, 512, 288, 6915, 746, 746, 341, 2146, 307, 51026], 'temperature': 0.0, 'avg_logprob': -0.1269373561060706, 'compression_ratio': 1.5901639344262295, 'no_speech_prob': 0.0053155384957790375}, {'id': 272, 'seek': 200932, 'start': 2022.56, 'end': 2028.96, 'text': ' coming from can I do an optimization can I not let us say this guy reads from some function call', 'tokens': [51026, 1348, 490, 393, 286, 360, 364, 19618, 393, 286, 406, 718, 505, 584, 341, 2146, 15700, 490, 512, 2445, 818, 51346], 'temperature': 0.0, 'avg_logprob': -0.1269373561060706, 'compression_ratio': 1.5901639344262295, 'no_speech_prob': 0.0053155384957790375}, {'id': 273, 'seek': 202896, 'start': 2028.96, 'end': 2039.52, 'text': ' can I not simply put the function call here could I have done it if there were multiple', 'tokens': [50364, 393, 286, 406, 2935, 829, 264, 2445, 818, 510, 727, 286, 362, 1096, 309, 498, 456, 645, 3866, 50892], 'temperature': 0.0, 'avg_logprob': -0.11026312884162454, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.016133371740579605}, {'id': 274, 'seek': 202896, 'start': 2039.52, 'end': 2046.3600000000001, 'text': ' reaching definitions right so if there was a y equals foo and y equals bar then which one do', 'tokens': [50892, 9906, 21988, 558, 370, 498, 456, 390, 257, 288, 6915, 726, 78, 293, 288, 6915, 2159, 550, 597, 472, 360, 51234], 'temperature': 0.0, 'avg_logprob': -0.11026312884162454, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.016133371740579605}, {'id': 275, 'seek': 202896, 'start': 2046.3600000000001, 'end': 2051.8, 'text': ' we substitute I do not know which one I can substitute then I cannot do anything but I can', 'tokens': [51234, 321, 15802, 286, 360, 406, 458, 597, 472, 286, 393, 15802, 550, 286, 2644, 360, 1340, 457, 286, 393, 51506], 'temperature': 0.0, 'avg_logprob': -0.11026312884162454, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.016133371740579605}, {'id': 276, 'seek': 202896, 'start': 2051.8, 'end': 2058.52, 'text': ' do this optimization if I know that y is equal y has only one reaching definition better still', 'tokens': [51506, 360, 341, 19618, 498, 286, 458, 300, 288, 307, 2681, 288, 575, 787, 472, 9906, 7123, 1101, 920, 51842], 'temperature': 0.0, 'avg_logprob': -0.11026312884162454, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.016133371740579605}, {'id': 277, 'seek': 205852, 'start': 2058.52, 'end': 2066.72, 'text': ' for instance think about the case where instead of y equals foo I had just y equals 2 right if', 'tokens': [50364, 337, 5197, 519, 466, 264, 1389, 689, 2602, 295, 288, 6915, 726, 78, 286, 632, 445, 288, 6915, 568, 558, 498, 50774], 'temperature': 0.0, 'avg_logprob': -0.13842033332502338, 'compression_ratio': 1.6608187134502923, 'no_speech_prob': 0.00432343827560544}, {'id': 278, 'seek': 205852, 'start': 2066.72, 'end': 2076.04, 'text': ' y is just equals 2 I can simply substitute 2 here and this other thing is already 2 so 2 plus 2', 'tokens': [50774, 288, 307, 445, 6915, 568, 286, 393, 2935, 15802, 568, 510, 293, 341, 661, 551, 307, 1217, 568, 370, 568, 1804, 568, 51240], 'temperature': 0.0, 'avg_logprob': -0.13842033332502338, 'compression_ratio': 1.6608187134502923, 'no_speech_prob': 0.00432343827560544}, {'id': 279, 'seek': 205852, 'start': 2076.04, 'end': 2083.68, 'text': ' becomes 4 I can do it at compile time compile time I can just forget there was a y completely', 'tokens': [51240, 3643, 1017, 286, 393, 360, 309, 412, 31413, 565, 31413, 565, 286, 393, 445, 2870, 456, 390, 257, 288, 2584, 51622], 'temperature': 0.0, 'avg_logprob': -0.13842033332502338, 'compression_ratio': 1.6608187134502923, 'no_speech_prob': 0.00432343827560544}, {'id': 280, 'seek': 208368, 'start': 2083.68, 'end': 2090.2799999999997, 'text': ' forget there was a y I can simply substitute 2 I can compute 4 at compile time not at runtime', 'tokens': [50364, 2870, 456, 390, 257, 288, 286, 393, 2935, 15802, 568, 286, 393, 14722, 1017, 412, 31413, 565, 406, 412, 34474, 50694], 'temperature': 0.0, 'avg_logprob': -0.20252064039122383, 'compression_ratio': 2.0129310344827585, 'no_speech_prob': 0.0947946086525917}, {'id': 281, 'seek': 208368, 'start': 2090.2799999999997, 'end': 2094.56, 'text': ' right something I would have done when running the program I can do at time and compiling the', 'tokens': [50694, 558, 746, 286, 576, 362, 1096, 562, 2614, 264, 1461, 286, 393, 360, 412, 565, 293, 715, 4883, 264, 50908], 'temperature': 0.0, 'avg_logprob': -0.20252064039122383, 'compression_ratio': 2.0129310344827585, 'no_speech_prob': 0.0947946086525917}, {'id': 282, 'seek': 208368, 'start': 2094.56, 'end': 2100.7999999999997, 'text': ' program so I get 4 better still it can create a transitive effect let us say y was the reaching', 'tokens': [50908, 1461, 370, 286, 483, 1017, 1101, 920, 309, 393, 1884, 257, 1145, 2187, 1802, 718, 505, 584, 288, 390, 264, 9906, 51220], 'temperature': 0.0, 'avg_logprob': -0.20252064039122383, 'compression_ratio': 2.0129310344827585, 'no_speech_prob': 0.0947946086525917}, {'id': 283, 'seek': 208368, 'start': 2100.7999999999997, 'end': 2106.16, 'text': ' definition of somebody else the single reaching definition of somebody else for that guy I can', 'tokens': [51220, 7123, 295, 2618, 1646, 264, 2167, 9906, 7123, 295, 2618, 1646, 337, 300, 2146, 286, 393, 51488], 'temperature': 0.0, 'avg_logprob': -0.20252064039122383, 'compression_ratio': 2.0129310344827585, 'no_speech_prob': 0.0947946086525917}, {'id': 284, 'seek': 208368, 'start': 2106.16, 'end': 2111.68, 'text': ' again substitute instead of x sorry x was the reason I can substitute instead of x I can', 'tokens': [51488, 797, 15802, 2602, 295, 2031, 2597, 2031, 390, 264, 1778, 286, 393, 15802, 2602, 295, 2031, 286, 393, 51764], 'temperature': 0.0, 'avg_logprob': -0.20252064039122383, 'compression_ratio': 2.0129310344827585, 'no_speech_prob': 0.0947946086525917}, {'id': 285, 'seek': 211168, 'start': 2111.68, 'end': 2118.6, 'text': ' substitute 4 that guy maybe we are added with something else right so you can keep on doing', 'tokens': [50364, 15802, 1017, 300, 2146, 1310, 321, 366, 3869, 365, 746, 1646, 558, 370, 291, 393, 1066, 322, 884, 50710], 'temperature': 0.0, 'avg_logprob': -0.21836017839836352, 'compression_ratio': 1.553072625698324, 'no_speech_prob': 0.1063326746225357}, {'id': 286, 'seek': 211168, 'start': 2118.6, 'end': 2126.56, 'text': ' this and lot of code that would have otherwise got computed at runtime will now get computed', 'tokens': [50710, 341, 293, 688, 295, 3089, 300, 576, 362, 5911, 658, 40610, 412, 34474, 486, 586, 483, 40610, 51108], 'temperature': 0.0, 'avg_logprob': -0.21836017839836352, 'compression_ratio': 1.553072625698324, 'no_speech_prob': 0.1063326746225357}, {'id': 287, 'seek': 211168, 'start': 2126.56, 'end': 2132.14, 'text': ' at compile time so let us talk about the case where y is equal to 2 so I am saying let us say', 'tokens': [51108, 412, 31413, 565, 370, 718, 505, 751, 466, 264, 1389, 689, 288, 307, 2681, 281, 568, 370, 286, 669, 1566, 718, 505, 584, 51387], 'temperature': 0.0, 'avg_logprob': -0.21836017839836352, 'compression_ratio': 1.553072625698324, 'no_speech_prob': 0.1063326746225357}, {'id': 288, 'seek': 213214, 'start': 2132.14, 'end': 2144.22, 'text': ' I know so I have x equals y plus 2 right now if I know that this guy is not there this is the', 'tokens': [50364, 286, 458, 370, 286, 362, 2031, 6915, 288, 1804, 568, 558, 586, 498, 286, 458, 300, 341, 2146, 307, 406, 456, 341, 307, 264, 50968], 'temperature': 0.0, 'avg_logprob': -0.11770311991373698, 'compression_ratio': 1.9210526315789473, 'no_speech_prob': 0.3241537809371948}, {'id': 289, 'seek': 213214, 'start': 2144.22, 'end': 2153.18, 'text': ' only reaching definition of y that is the only reaching definition of y there is no other reaching', 'tokens': [50968, 787, 9906, 7123, 295, 288, 300, 307, 264, 787, 9906, 7123, 295, 288, 456, 307, 572, 661, 9906, 51416], 'temperature': 0.0, 'avg_logprob': -0.11770311991373698, 'compression_ratio': 1.9210526315789473, 'no_speech_prob': 0.3241537809371948}, {'id': 290, 'seek': 213214, 'start': 2153.18, 'end': 2160.3799999999997, 'text': ' definition of y at this program point then I can simply I know that it is going to read y from here', 'tokens': [51416, 7123, 295, 288, 412, 341, 1461, 935, 550, 286, 393, 2935, 286, 458, 300, 309, 307, 516, 281, 1401, 288, 490, 510, 51776], 'temperature': 0.0, 'avg_logprob': -0.11770311991373698, 'compression_ratio': 1.9210526315789473, 'no_speech_prob': 0.3241537809371948}, {'id': 291, 'seek': 216038, 'start': 2160.38, 'end': 2167.1800000000003, 'text': ' from nowhere else right so I can I not simply take this 2 and replace instead of y put a 2 here', 'tokens': [50364, 490, 11159, 1646, 558, 370, 286, 393, 286, 406, 2935, 747, 341, 568, 293, 7406, 2602, 295, 288, 829, 257, 568, 510, 50704], 'temperature': 0.0, 'avg_logprob': -0.18367723577162798, 'compression_ratio': 1.8439024390243903, 'no_speech_prob': 0.007682167459279299}, {'id': 292, 'seek': 216038, 'start': 2167.1800000000003, 'end': 2177.98, 'text': ' right so what have you saved do you think we have saved a lot yeah we have stored saved the', 'tokens': [50704, 558, 370, 437, 362, 291, 6624, 360, 291, 519, 321, 362, 6624, 257, 688, 1338, 321, 362, 12187, 6624, 264, 51244], 'temperature': 0.0, 'avg_logprob': -0.18367723577162798, 'compression_ratio': 1.8439024390243903, 'no_speech_prob': 0.007682167459279299}, {'id': 293, 'seek': 216038, 'start': 2177.98, 'end': 2184.6600000000003, 'text': ' memory load a memory load is a very expensive operation half of the compiler optimization half', 'tokens': [51244, 4675, 3677, 257, 4675, 3677, 307, 257, 588, 5124, 6916, 1922, 295, 264, 31958, 19618, 1922, 51578], 'temperature': 0.0, 'avg_logprob': -0.18367723577162798, 'compression_ratio': 1.8439024390243903, 'no_speech_prob': 0.007682167459279299}, {'id': 294, 'seek': 216038, 'start': 2184.6600000000003, 'end': 2189.7400000000002, 'text': ' of the architecture optimizations are actually there to reduce loads caches are there to reduce', 'tokens': [51578, 295, 264, 9482, 5028, 14455, 366, 767, 456, 281, 5407, 12668, 269, 13272, 366, 456, 281, 5407, 51832], 'temperature': 0.0, 'avg_logprob': -0.18367723577162798, 'compression_ratio': 1.8439024390243903, 'no_speech_prob': 0.007682167459279299}, {'id': 295, 'seek': 218974, 'start': 2189.74, 'end': 2199.5, 'text': ' loads now at least reduce the effect of loads the run the latency of loads no no we are just', 'tokens': [50364, 12668, 586, 412, 1935, 5407, 264, 1802, 295, 12668, 264, 1190, 264, 27043, 295, 12668, 572, 572, 321, 366, 445, 50852], 'temperature': 0.0, 'avg_logprob': -0.1983418729570177, 'compression_ratio': 1.680473372781065, 'no_speech_prob': 0.008045426569879055}, {'id': 296, 'seek': 218974, 'start': 2199.5, 'end': 2205.58, 'text': ' substituting the value itself we are not even do we do we not even have y here we will just say', 'tokens': [50852, 26441, 10861, 264, 2158, 2564, 321, 366, 406, 754, 360, 321, 360, 321, 406, 754, 362, 288, 510, 321, 486, 445, 584, 51156], 'temperature': 0.0, 'avg_logprob': -0.1983418729570177, 'compression_ratio': 1.680473372781065, 'no_speech_prob': 0.008045426569879055}, {'id': 297, 'seek': 218974, 'start': 2205.58, 'end': 2213.2999999999997, 'text': ' it is 2 this this this y is always going to be 2 no matter what right so we forget y completely', 'tokens': [51156, 309, 307, 568, 341, 341, 341, 288, 307, 1009, 516, 281, 312, 568, 572, 1871, 437, 558, 370, 321, 2870, 288, 2584, 51542], 'temperature': 0.0, 'avg_logprob': -0.1983418729570177, 'compression_ratio': 1.680473372781065, 'no_speech_prob': 0.008045426569879055}, {'id': 298, 'seek': 221330, 'start': 2213.3, 'end': 2220.1400000000003, 'text': ' and then I say 2 plus 2 is nothing but 4 I write the whole thing as 4 I just say this is nothing', 'tokens': [50364, 293, 550, 286, 584, 568, 1804, 568, 307, 1825, 457, 1017, 286, 2464, 264, 1379, 551, 382, 1017, 286, 445, 584, 341, 307, 1825, 50706], 'temperature': 0.0, 'avg_logprob': -0.13314691271100726, 'compression_ratio': 1.771604938271605, 'no_speech_prob': 0.011662744916975498}, {'id': 299, 'seek': 221330, 'start': 2220.1400000000003, 'end': 2234.3, 'text': ' but x equals 4 right and this can create other effects I can later down the line if x equals 4', 'tokens': [50706, 457, 2031, 6915, 1017, 558, 293, 341, 393, 1884, 661, 5065, 286, 393, 1780, 760, 264, 1622, 498, 2031, 6915, 1017, 51414], 'temperature': 0.0, 'avg_logprob': -0.13314691271100726, 'compression_ratio': 1.771604938271605, 'no_speech_prob': 0.011662744916975498}, {'id': 300, 'seek': 221330, 'start': 2234.3, 'end': 2238.3, 'text': ' is the reaching definition of the only reaching definition of somebody else I can do it further', 'tokens': [51414, 307, 264, 9906, 7123, 295, 264, 787, 9906, 7123, 295, 2618, 1646, 286, 393, 360, 309, 3052, 51614], 'temperature': 0.0, 'avg_logprob': -0.13314691271100726, 'compression_ratio': 1.771604938271605, 'no_speech_prob': 0.011662744916975498}, {'id': 301, 'seek': 223830, 'start': 2238.3, 'end': 2245.1400000000003, 'text': ' right so yesterday you were asking me that what why are these optimizations useful this is one', 'tokens': [50364, 558, 370, 5186, 291, 645, 3365, 385, 300, 437, 983, 366, 613, 5028, 14455, 4420, 341, 307, 472, 50706], 'temperature': 0.0, 'avg_logprob': -0.14051211447942824, 'compression_ratio': 1.9310344827586208, 'no_speech_prob': 0.017880896106362343}, {'id': 302, 'seek': 223830, 'start': 2245.1400000000003, 'end': 2249.98, 'text': ' place where optimizations are useful right see how many loads we can remove like this and load', 'tokens': [50706, 1081, 689, 5028, 14455, 366, 4420, 558, 536, 577, 867, 12668, 321, 393, 4159, 411, 341, 293, 3677, 50948], 'temperature': 0.0, 'avg_logprob': -0.14051211447942824, 'compression_ratio': 1.9310344827586208, 'no_speech_prob': 0.017880896106362343}, {'id': 303, 'seek': 223830, 'start': 2249.98, 'end': 2256.02, 'text': ' removing loads is a very very important optimization because memory access memory is very very slow your', 'tokens': [50948, 12720, 12668, 307, 257, 588, 588, 1021, 19618, 570, 4675, 2105, 4675, 307, 588, 588, 2964, 428, 51250], 'temperature': 0.0, 'avg_logprob': -0.14051211447942824, 'compression_ratio': 1.9310344827586208, 'no_speech_prob': 0.017880896106362343}, {'id': 304, 'seek': 223830, 'start': 2256.02, 'end': 2263.6200000000003, 'text': ' processor is very very fast so if you can save accesses trips to memory you will save a lot right', 'tokens': [51250, 15321, 307, 588, 588, 2370, 370, 498, 291, 393, 3155, 2105, 279, 16051, 281, 4675, 291, 486, 3155, 257, 688, 558, 51630], 'temperature': 0.0, 'avg_logprob': -0.14051211447942824, 'compression_ratio': 1.9310344827586208, 'no_speech_prob': 0.017880896106362343}, {'id': 305, 'seek': 226362, 'start': 2263.62, 'end': 2267.14, 'text': ' so this is a very relevant optimization this is known as constant propagation', 'tokens': [50364, 370, 341, 307, 257, 588, 7340, 19618, 341, 307, 2570, 382, 5754, 38377, 50540], 'temperature': 0.0, 'avg_logprob': -0.21340169662084335, 'compression_ratio': 2.010989010989011, 'no_speech_prob': 0.02803112380206585}, {'id': 306, 'seek': 226362, 'start': 2273.8599999999997, 'end': 2279.2599999999998, 'text': ' so we just figure out constants and we propagate them also the program so this is a very weak', 'tokens': [50876, 370, 321, 445, 2573, 484, 35870, 293, 321, 48256, 552, 611, 264, 1461, 370, 341, 307, 257, 588, 5336, 51146], 'temperature': 0.0, 'avg_logprob': -0.21340169662084335, 'compression_ratio': 2.010989010989011, 'no_speech_prob': 0.02803112380206585}, {'id': 307, 'seek': 226362, 'start': 2279.2599999999998, 'end': 2284.8599999999997, 'text': ' algorithm for constant propagation we will see a better algorithm but but this is also a form', 'tokens': [51146, 9284, 337, 5754, 38377, 321, 486, 536, 257, 1101, 9284, 457, 457, 341, 307, 611, 257, 1254, 51426], 'temperature': 0.0, 'avg_logprob': -0.21340169662084335, 'compression_ratio': 2.010989010989011, 'no_speech_prob': 0.02803112380206585}, {'id': 308, 'seek': 226362, 'start': 2284.8599999999997, 'end': 2290.8199999999997, 'text': ' of constant propagation this is not that powerful but still it is good this thing yeah sure this one', 'tokens': [51426, 295, 5754, 38377, 341, 307, 406, 300, 4005, 457, 920, 309, 307, 665, 341, 551, 1338, 988, 341, 472, 51724], 'temperature': 0.0, 'avg_logprob': -0.21340169662084335, 'compression_ratio': 2.010989010989011, 'no_speech_prob': 0.02803112380206585}, {'id': 309, 'seek': 229082, 'start': 2290.82, 'end': 2299.02, 'text': " right now just assume this is what it is yeah but it's a union over this guy also right union over", 'tokens': [50364, 558, 586, 445, 6552, 341, 307, 437, 309, 307, 1338, 457, 309, 311, 257, 11671, 670, 341, 2146, 611, 558, 11671, 670, 50774], 'temperature': 0.0, 'avg_logprob': -0.14614712564568771, 'compression_ratio': 2.0304347826086957, 'no_speech_prob': 0.020836396142840385}, {'id': 310, 'seek': 229082, 'start': 2299.02, 'end': 2303.42, 'text': ' this edge also no matter what comes from the other guys this guy is already there this guy', 'tokens': [50774, 341, 4691, 611, 572, 1871, 437, 1487, 490, 264, 661, 1074, 341, 2146, 307, 1217, 456, 341, 2146, 50994], 'temperature': 0.0, 'avg_logprob': -0.14614712564568771, 'compression_ratio': 2.0304347826086957, 'no_speech_prob': 0.020836396142840385}, {'id': 311, 'seek': 229082, 'start': 2303.42, 'end': 2309.42, 'text': ' is going to get union with so if I add a new DI to this particular edge it is always going', 'tokens': [50994, 307, 516, 281, 483, 11671, 365, 370, 498, 286, 909, 257, 777, 11953, 281, 341, 1729, 4691, 309, 307, 1009, 516, 51294], 'temperature': 0.0, 'avg_logprob': -0.14614712564568771, 'compression_ratio': 2.0304347826086957, 'no_speech_prob': 0.020836396142840385}, {'id': 312, 'seek': 229082, 'start': 2309.42, 'end': 2314.3, 'text': ' to be satisfied things so it does not really matter what comes from the other side other guys', 'tokens': [51294, 281, 312, 11239, 721, 370, 309, 775, 406, 534, 1871, 437, 1487, 490, 264, 661, 1252, 661, 1074, 51538], 'temperature': 0.0, 'avg_logprob': -0.14614712564568771, 'compression_ratio': 2.0304347826086957, 'no_speech_prob': 0.020836396142840385}, {'id': 313, 'seek': 229082, 'start': 2314.3, 'end': 2319.78, 'text': ' no we will see that we will see how to compute it we are not even there yet no we will see a', 'tokens': [51538, 572, 321, 486, 536, 300, 321, 486, 536, 577, 281, 14722, 309, 321, 366, 406, 754, 456, 1939, 572, 321, 486, 536, 257, 51812], 'temperature': 0.0, 'avg_logprob': -0.14614712564568771, 'compression_ratio': 2.0304347826086957, 'no_speech_prob': 0.020836396142840385}, {'id': 314, 'seek': 231978, 'start': 2319.78, 'end': 2324.78, 'text': ' proper discipline we are coming up with a solution to fit for equations right we now will we will', 'tokens': [50364, 2296, 13635, 321, 366, 1348, 493, 365, 257, 3827, 281, 3318, 337, 11787, 558, 321, 586, 486, 321, 486, 50614], 'temperature': 0.0, 'avg_logprob': -0.1961947415782287, 'compression_ratio': 1.952, 'no_speech_prob': 0.023600205779075623}, {'id': 315, 'seek': 231978, 'start': 2324.78, 'end': 2328.9, 'text': ' actually spend a lot of time looking at theory to say how can these equations be really be solved', 'tokens': [50614, 767, 3496, 257, 688, 295, 565, 1237, 412, 5261, 281, 584, 577, 393, 613, 11787, 312, 534, 312, 13041, 50820], 'temperature': 0.0, 'avg_logprob': -0.1961947415782287, 'compression_ratio': 1.952, 'no_speech_prob': 0.023600205779075623}, {'id': 316, 'seek': 231978, 'start': 2328.9, 'end': 2335.42, 'text': " so let's not have like we will actually mathematically see they can be solved or not right so there is", 'tokens': [50820, 370, 718, 311, 406, 362, 411, 321, 486, 767, 44003, 536, 436, 393, 312, 13041, 420, 406, 558, 370, 456, 307, 51146], 'temperature': 0.0, 'avg_logprob': -0.1961947415782287, 'compression_ratio': 1.952, 'no_speech_prob': 0.023600205779075623}, {'id': 317, 'seek': 231978, 'start': 2335.42, 'end': 2339.82, 'text': " quite a bit of purity this so let's take the other questions yeah so think about the case", 'tokens': [51146, 1596, 257, 857, 295, 34382, 341, 370, 718, 311, 747, 264, 661, 1651, 1338, 370, 519, 466, 264, 1389, 51366], 'temperature': 0.0, 'avg_logprob': -0.1961947415782287, 'compression_ratio': 1.952, 'no_speech_prob': 0.023600205779075623}, {'id': 318, 'seek': 231978, 'start': 2339.82, 'end': 2346.46, 'text': ' think about somebody think about the solver as a black box right so you give it a you give it a set', 'tokens': [51366, 519, 466, 2618, 519, 466, 264, 1404, 331, 382, 257, 2211, 2424, 558, 370, 291, 976, 309, 257, 291, 976, 309, 257, 992, 51698], 'temperature': 0.0, 'avg_logprob': -0.1961947415782287, 'compression_ratio': 1.952, 'no_speech_prob': 0.023600205779075623}, {'id': 319, 'seek': 234646, 'start': 2346.46, 'end': 2352.62, 'text': ' of equations it gives you a solution back how do you know what solution it has given you it is not', 'tokens': [50364, 295, 11787, 309, 2709, 291, 257, 3827, 646, 577, 360, 291, 458, 437, 3827, 309, 575, 2212, 291, 309, 307, 406, 50672], 'temperature': 0.0, 'avg_logprob': -0.1593760694010874, 'compression_ratio': 1.955223880597015, 'no_speech_prob': 0.2859622538089752}, {'id': 320, 'seek': 234646, 'start': 2352.62, 'end': 2356.14, 'text': ' it is going to get you the best solution and then I did something and give you that it is not that', 'tokens': [50672, 309, 307, 516, 281, 483, 291, 264, 1151, 3827, 293, 550, 286, 630, 746, 293, 976, 291, 300, 309, 307, 406, 300, 50848], 'temperature': 0.0, 'avg_logprob': -0.1593760694010874, 'compression_ratio': 1.955223880597015, 'no_speech_prob': 0.2859622538089752}, {'id': 321, 'seek': 234646, 'start': 2356.14, 'end': 2361.14, 'text': ' right it will simply search the just think about one really stupid way of getting the solution I', 'tokens': [50848, 558, 309, 486, 2935, 3164, 264, 445, 519, 466, 472, 534, 6631, 636, 295, 1242, 264, 3827, 286, 51098], 'temperature': 0.0, 'avg_logprob': -0.1593760694010874, 'compression_ratio': 1.955223880597015, 'no_speech_prob': 0.2859622538089752}, {'id': 322, 'seek': 234646, 'start': 2361.14, 'end': 2370.78, 'text': ' simply guess solutions and verify it guess and verify it guess and check right I can just randomly', 'tokens': [51098, 2935, 2041, 6547, 293, 16888, 309, 2041, 293, 16888, 309, 2041, 293, 1520, 558, 286, 393, 445, 16979, 51580], 'temperature': 0.0, 'avg_logprob': -0.1593760694010874, 'compression_ratio': 1.955223880597015, 'no_speech_prob': 0.2859622538089752}, {'id': 323, 'seek': 237078, 'start': 2370.78, 'end': 2376.38, 'text': ' select sets put them in and verify it is the right the solution or not that particular algorithm', 'tokens': [50364, 3048, 6352, 829, 552, 294, 293, 16888, 309, 307, 264, 558, 264, 3827, 420, 406, 300, 1729, 9284, 50644], 'temperature': 0.0, 'avg_logprob': -0.17907557376595432, 'compression_ratio': 1.8599033816425121, 'no_speech_prob': 0.10465854406356812}, {'id': 324, 'seek': 237078, 'start': 2376.38, 'end': 2385.1000000000004, 'text': ' can actually give me any solution right so I do not know what the solver is doing right we just', 'tokens': [50644, 393, 767, 976, 385, 604, 3827, 558, 370, 286, 360, 406, 458, 437, 264, 1404, 331, 307, 884, 558, 321, 445, 51080], 'temperature': 0.0, 'avg_logprob': -0.17907557376595432, 'compression_ratio': 1.8599033816425121, 'no_speech_prob': 0.10465854406356812}, {'id': 325, 'seek': 237078, 'start': 2385.1000000000004, 'end': 2391.1800000000003, 'text': ' it you give it a problem it gives you a solution which solution gives you you do not know so we', 'tokens': [51080, 309, 291, 976, 309, 257, 1154, 309, 2709, 291, 257, 3827, 597, 3827, 2709, 291, 291, 360, 406, 458, 370, 321, 51384], 'temperature': 0.0, 'avg_logprob': -0.17907557376595432, 'compression_ratio': 1.8599033816425121, 'no_speech_prob': 0.10465854406356812}, {'id': 326, 'seek': 237078, 'start': 2391.1800000000003, 'end': 2397.7400000000002, 'text': ' will actually actually like yesterday we replace the label by a string label exactly the similar', 'tokens': [51384, 486, 767, 767, 411, 5186, 321, 7406, 264, 7645, 538, 257, 6798, 7645, 2293, 264, 2531, 51712], 'temperature': 0.0, 'avg_logprob': -0.17907557376595432, 'compression_ratio': 1.8599033816425121, 'no_speech_prob': 0.10465854406356812}, {'id': 327, 'seek': 239774, 'start': 2397.74, 'end': 2405.54, 'text': ' way in the the program text using LLVM APIs we will replace that instance of y by actually', 'tokens': [50364, 636, 294, 264, 264, 1461, 2487, 1228, 441, 43, 53, 44, 21445, 321, 486, 7406, 300, 5197, 295, 288, 538, 767, 50754], 'temperature': 0.0, 'avg_logprob': -0.14653730392456055, 'compression_ratio': 1.6933333333333334, 'no_speech_prob': 0.13855214416980743}, {'id': 328, 'seek': 239774, 'start': 2405.54, 'end': 2412.06, 'text': ' two we will calculate it at compile time replace it by the new constant and then again get new', 'tokens': [50754, 732, 321, 486, 8873, 309, 412, 31413, 565, 7406, 309, 538, 264, 777, 5754, 293, 550, 797, 483, 777, 51080], 'temperature': 0.0, 'avg_logprob': -0.14653730392456055, 'compression_ratio': 1.6933333333333334, 'no_speech_prob': 0.13855214416980743}, {'id': 329, 'seek': 239774, 'start': 2412.06, 'end': 2418.02, 'text': ' solutions yes that is optimization that is exactly the optimized code you will get yeah I come to it', 'tokens': [51080, 6547, 2086, 300, 307, 19618, 300, 307, 2293, 264, 26941, 3089, 291, 486, 483, 1338, 286, 808, 281, 309, 51378], 'temperature': 0.0, 'avg_logprob': -0.14653730392456055, 'compression_ratio': 1.6933333333333334, 'no_speech_prob': 0.13855214416980743}, {'id': 330, 'seek': 239774, 'start': 2418.02, 'end': 2422.8199999999997, 'text': ' so right now we are assuming single statement basic blocks we will consider multiple statement', 'tokens': [51378, 370, 558, 586, 321, 366, 11926, 2167, 5629, 3875, 8474, 321, 486, 1949, 3866, 5629, 51618], 'temperature': 0.0, 'avg_logprob': -0.14653730392456055, 'compression_ratio': 1.6933333333333334, 'no_speech_prob': 0.13855214416980743}, {'id': 331, 'seek': 242282, 'start': 2422.82, 'end': 2427.98, 'text': ' basic block just after this now let us come back to this particular application right on this', 'tokens': [50364, 3875, 3461, 445, 934, 341, 586, 718, 505, 808, 646, 281, 341, 1729, 3861, 558, 322, 341, 50622], 'temperature': 0.0, 'avg_logprob': -0.1785293542421781, 'compression_ratio': 1.9835390946502058, 'no_speech_prob': 0.319947749376297}, {'id': 332, 'seek': 242282, 'start': 2427.98, 'end': 2433.42, 'text': ' application can you now tell me that what solution would work you guys said the smallest solution', 'tokens': [50622, 3861, 393, 291, 586, 980, 385, 300, 437, 3827, 576, 589, 291, 1074, 848, 264, 16998, 3827, 50894], 'temperature': 0.0, 'avg_logprob': -0.1785293542421781, 'compression_ratio': 1.9835390946502058, 'no_speech_prob': 0.319947749376297}, {'id': 333, 'seek': 242282, 'start': 2433.42, 'end': 2438.06, 'text': ' can you now think about why will a larger solution not work no that is the other way around here the', 'tokens': [50894, 393, 291, 586, 519, 466, 983, 486, 257, 4833, 3827, 406, 589, 572, 300, 307, 264, 661, 636, 926, 510, 264, 51126], 'temperature': 0.0, 'avg_logprob': -0.1785293542421781, 'compression_ratio': 1.9835390946502058, 'no_speech_prob': 0.319947749376297}, {'id': 334, 'seek': 242282, 'start': 2438.06, 'end': 2442.6200000000003, 'text': ' I am missing order definition but I am saying here you are computing a definition which is a', 'tokens': [51126, 286, 669, 5361, 1668, 7123, 457, 286, 669, 1566, 510, 291, 366, 15866, 257, 7123, 597, 307, 257, 51354], 'temperature': 0.0, 'avg_logprob': -0.1785293542421781, 'compression_ratio': 1.9835390946502058, 'no_speech_prob': 0.319947749376297}, {'id': 335, 'seek': 242282, 'start': 2442.6200000000003, 'end': 2446.94, 'text': ' set of definitions which is larger than that that is what you do here right you took the initial', 'tokens': [51354, 992, 295, 21988, 597, 307, 4833, 813, 300, 300, 307, 437, 291, 360, 510, 558, 291, 1890, 264, 5883, 51570], 'temperature': 0.0, 'avg_logprob': -0.1785293542421781, 'compression_ratio': 1.9835390946502058, 'no_speech_prob': 0.319947749376297}, {'id': 336, 'seek': 244694, 'start': 2446.94, 'end': 2455.38, 'text': ' S1 and you extend it by a new arbitrary definition di so your solutions become larger so generally', 'tokens': [50364, 318, 16, 293, 291, 10101, 309, 538, 257, 777, 23211, 7123, 1026, 370, 428, 6547, 1813, 4833, 370, 5101, 50786], 'temperature': 0.0, 'avg_logprob': -0.1585648036239171, 'compression_ratio': 1.8987854251012146, 'no_speech_prob': 0.3898739218711853}, {'id': 337, 'seek': 244694, 'start': 2455.38, 'end': 2460.9, 'text': ' that will not happen the reason is that every use will surely have at least one definition', 'tokens': [50786, 300, 486, 406, 1051, 264, 1778, 307, 300, 633, 764, 486, 11468, 362, 412, 1935, 472, 7123, 51062], 'temperature': 0.0, 'avg_logprob': -0.1585648036239171, 'compression_ratio': 1.8987854251012146, 'no_speech_prob': 0.3898739218711853}, {'id': 338, 'seek': 244694, 'start': 2460.9, 'end': 2466.7400000000002, 'text': ' right otherwise it is garbage value right otherwise nobody nobody has assigned anything', 'tokens': [51062, 558, 5911, 309, 307, 14150, 2158, 558, 5911, 5079, 5079, 575, 13279, 1340, 51354], 'temperature': 0.0, 'avg_logprob': -0.1585648036239171, 'compression_ratio': 1.8987854251012146, 'no_speech_prob': 0.3898739218711853}, {'id': 339, 'seek': 244694, 'start': 2466.7400000000002, 'end': 2471.18, 'text': ' to it and we are using that value so that is garbage and if I put substitute one garbage value', 'tokens': [51354, 281, 309, 293, 321, 366, 1228, 300, 2158, 370, 300, 307, 14150, 293, 498, 286, 829, 15802, 472, 14150, 2158, 51576], 'temperature': 0.0, 'avg_logprob': -0.1585648036239171, 'compression_ratio': 1.8987854251012146, 'no_speech_prob': 0.3898739218711853}, {'id': 340, 'seek': 244694, 'start': 2471.18, 'end': 2476.78, 'text': ' by another garbage value really does not matter right so that is not so much of an issue but the', 'tokens': [51576, 538, 1071, 14150, 2158, 534, 775, 406, 1871, 558, 370, 300, 307, 406, 370, 709, 295, 364, 2734, 457, 264, 51856], 'temperature': 0.0, 'avg_logprob': -0.1585648036239171, 'compression_ratio': 1.8987854251012146, 'no_speech_prob': 0.3898739218711853}, {'id': 341, 'seek': 247678, 'start': 2476.78, 'end': 2484.3, 'text': ' bigger issue is I think you are on the right track but think about the case yeah nine nine', 'tokens': [50364, 3801, 2734, 307, 286, 519, 291, 366, 322, 264, 558, 2837, 457, 519, 466, 264, 1389, 1338, 4949, 4949, 50740], 'temperature': 0.0, 'avg_logprob': -0.1098658561706543, 'compression_ratio': 2.09375, 'no_speech_prob': 0.0027033674996346235}, {'id': 342, 'seek': 247678, 'start': 2484.3, 'end': 2490.6600000000003, 'text': ' much simpler than that no but universal set is bounded the universal set is a set of all', 'tokens': [50740, 709, 18587, 813, 300, 572, 457, 11455, 992, 307, 37498, 264, 11455, 992, 307, 257, 992, 295, 439, 51058], 'temperature': 0.0, 'avg_logprob': -0.1098658561706543, 'compression_ratio': 2.09375, 'no_speech_prob': 0.0027033674996346235}, {'id': 343, 'seek': 247678, 'start': 2490.6600000000003, 'end': 2494.6600000000003, 'text': ' definitions the program the program is bounded size right you know this is all the program is', 'tokens': [51058, 21988, 264, 1461, 264, 1461, 307, 37498, 2744, 558, 291, 458, 341, 307, 439, 264, 1461, 307, 51258], 'temperature': 0.0, 'avg_logprob': -0.1098658561706543, 'compression_ratio': 2.09375, 'no_speech_prob': 0.0027033674996346235}, {'id': 344, 'seek': 247678, 'start': 2494.6600000000003, 'end': 2500.6600000000003, 'text': ' I cannot invent new definitions there so we could do this definition only if the size of the set was', 'tokens': [51258, 286, 2644, 7962, 777, 21988, 456, 370, 321, 727, 360, 341, 7123, 787, 498, 264, 2744, 295, 264, 992, 390, 51558], 'temperature': 0.0, 'avg_logprob': -0.1098658561706543, 'compression_ratio': 2.09375, 'no_speech_prob': 0.0027033674996346235}, {'id': 345, 'seek': 247678, 'start': 2500.6600000000003, 'end': 2506.2200000000003, 'text': ' one if it was singleton set I cannot do it if the size of the set was two now the size of this', 'tokens': [51558, 472, 498, 309, 390, 1522, 14806, 992, 286, 2644, 360, 309, 498, 264, 2744, 295, 264, 992, 390, 732, 586, 264, 2744, 295, 341, 51836], 'temperature': 0.0, 'avg_logprob': -0.1098658561706543, 'compression_ratio': 2.09375, 'no_speech_prob': 0.0027033674996346235}, {'id': 346, 'seek': 250622, 'start': 2506.22, 'end': 2512.7799999999997, 'text': ' guy reports the size of the set is two I cannot do that optimization and that new guy di is probably', 'tokens': [50364, 2146, 7122, 264, 2744, 295, 264, 992, 307, 732, 286, 2644, 360, 300, 19618, 293, 300, 777, 2146, 1026, 307, 1391, 50692], 'temperature': 0.0, 'avg_logprob': -0.17470281849736752, 'compression_ratio': 1.9272030651340997, 'no_speech_prob': 0.0023217767011374235}, {'id': 347, 'seek': 250622, 'start': 2512.7799999999997, 'end': 2518.9399999999996, 'text': ' a pseudo definition it was not a definition which is actually reaching it right so I am missing out', 'tokens': [50692, 257, 35899, 7123, 309, 390, 406, 257, 7123, 597, 307, 767, 9906, 309, 558, 370, 286, 669, 5361, 484, 51000], 'temperature': 0.0, 'avg_logprob': -0.17470281849736752, 'compression_ratio': 1.9272030651340997, 'no_speech_prob': 0.0023217767011374235}, {'id': 348, 'seek': 250622, 'start': 2518.9399999999996, 'end': 2524.62, 'text': ' on the opportunity of doing an optimization agree make sense so that is why I would like the smallest', 'tokens': [51000, 322, 264, 2650, 295, 884, 364, 19618, 3986, 652, 2020, 370, 300, 307, 983, 286, 576, 411, 264, 16998, 51284], 'temperature': 0.0, 'avg_logprob': -0.17470281849736752, 'compression_ratio': 1.9272030651340997, 'no_speech_prob': 0.0023217767011374235}, {'id': 349, 'seek': 250622, 'start': 2524.62, 'end': 2530.1, 'text': ' set so that I can do these optimizations I do not miss out on optimizations okay think about the same', 'tokens': [51284, 992, 370, 300, 286, 393, 360, 613, 5028, 14455, 286, 360, 406, 1713, 484, 322, 5028, 14455, 1392, 519, 466, 264, 912, 51558], 'temperature': 0.0, 'avg_logprob': -0.17470281849736752, 'compression_ratio': 1.9272030651340997, 'no_speech_prob': 0.0023217767011374235}, {'id': 350, 'seek': 250622, 'start': 2530.1, 'end': 2534.74, 'text': ' case let us say I had y equal to 2 here and y equals 5 here these are the two reaching definitions', 'tokens': [51558, 1389, 718, 505, 584, 286, 632, 288, 2681, 281, 568, 510, 293, 288, 6915, 1025, 510, 613, 366, 264, 732, 9906, 21988, 51790], 'temperature': 0.0, 'avg_logprob': -0.17470281849736752, 'compression_ratio': 1.9272030651340997, 'no_speech_prob': 0.0023217767011374235}, {'id': 351, 'seek': 253474, 'start': 2534.74, 'end': 2542.2999999999997, 'text': ' coming here then which one do you pick I cannot decide so we cannot do an optimization right make', 'tokens': [50364, 1348, 510, 550, 597, 472, 360, 291, 1888, 286, 2644, 4536, 370, 321, 2644, 360, 364, 19618, 558, 652, 50742], 'temperature': 0.0, 'avg_logprob': -0.2187362772173586, 'compression_ratio': 2.0238095238095237, 'no_speech_prob': 0.03285100683569908}, {'id': 352, 'seek': 253474, 'start': 2542.2999999999997, 'end': 2548.2, 'text': ' sense so we now understand why we would like the smallest set to be there so I do not extend my', 'tokens': [50742, 2020, 370, 321, 586, 1223, 983, 321, 576, 411, 264, 16998, 992, 281, 312, 456, 370, 286, 360, 406, 10101, 452, 51037], 'temperature': 0.0, 'avg_logprob': -0.2187362772173586, 'compression_ratio': 2.0238095238095237, 'no_speech_prob': 0.03285100683569908}, {'id': 353, 'seek': 253474, 'start': 2548.2, 'end': 2552.8199999999997, 'text': ' universal set a universal set is the same because there is no point in it that is garbage right', 'tokens': [51037, 11455, 992, 257, 11455, 992, 307, 264, 912, 570, 456, 307, 572, 935, 294, 309, 300, 307, 14150, 558, 51268], 'temperature': 0.0, 'avg_logprob': -0.2187362772173586, 'compression_ratio': 2.0238095238095237, 'no_speech_prob': 0.03285100683569908}, {'id': 354, 'seek': 253474, 'start': 2552.8199999999997, 'end': 2558.7999999999997, 'text': ' anything out of the universal it is garbage to the existing set the existing set of definition so in and out are sets are', 'tokens': [51268, 1340, 484, 295, 264, 11455, 309, 307, 14150, 281, 264, 6741, 992, 264, 6741, 992, 295, 7123, 370, 294, 293, 484, 366, 6352, 366, 51567], 'temperature': 0.0, 'avg_logprob': -0.2187362772173586, 'compression_ratio': 2.0238095238095237, 'no_speech_prob': 0.03285100683569908}, {'id': 355, 'seek': 253474, 'start': 2558.7999999999997, 'end': 2564.62, 'text': ' definitions right so to this set of definition to the outset I just added a new definition because', 'tokens': [51567, 21988, 558, 370, 281, 341, 992, 295, 7123, 281, 264, 44618, 286, 445, 3869, 257, 777, 7123, 570, 51858], 'temperature': 0.0, 'avg_logprob': -0.2187362772173586, 'compression_ratio': 2.0238095238095237, 'no_speech_prob': 0.03285100683569908}, {'id': 356, 'seek': 256462, 'start': 2564.62, 'end': 2568.02, 'text': ' of which the insert will also have the definition because it is a union over the predecessors and', 'tokens': [50364, 295, 597, 264, 8969, 486, 611, 362, 264, 7123, 570, 309, 307, 257, 11671, 670, 264, 24874, 45700, 293, 50534], 'temperature': 0.0, 'avg_logprob': -0.20616596149948407, 'compression_ratio': 1.9873949579831933, 'no_speech_prob': 0.001067542820237577}, {'id': 357, 'seek': 256462, 'start': 2568.02, 'end': 2575.66, 'text': ' one of the pieces itself out of itself right so so that definition would just stick around any', 'tokens': [50534, 472, 295, 264, 3755, 2564, 484, 295, 2564, 558, 370, 370, 300, 7123, 576, 445, 2897, 926, 604, 50916], 'temperature': 0.0, 'avg_logprob': -0.20616596149948407, 'compression_ratio': 1.9873949579831933, 'no_speech_prob': 0.001067542820237577}, {'id': 358, 'seek': 256462, 'start': 2575.66, 'end': 2580.94, 'text': ' definition I plug it in it will stick around and that will be a valid solution so I picked the', 'tokens': [50916, 7123, 286, 5452, 309, 294, 309, 486, 2897, 926, 293, 300, 486, 312, 257, 7363, 3827, 370, 286, 6183, 264, 51180], 'temperature': 0.0, 'avg_logprob': -0.20616596149948407, 'compression_ratio': 1.9873949579831933, 'no_speech_prob': 0.001067542820237577}, {'id': 359, 'seek': 256462, 'start': 2580.94, 'end': 2587.22, 'text': ' definition carefully I picked the one which does not get yes so I am saying there are such', 'tokens': [51180, 7123, 7500, 286, 6183, 264, 472, 597, 775, 406, 483, 2086, 370, 286, 669, 1566, 456, 366, 1270, 51494], 'temperature': 0.0, 'avg_logprob': -0.20616596149948407, 'compression_ratio': 1.9873949579831933, 'no_speech_prob': 0.001067542820237577}, {'id': 360, 'seek': 256462, 'start': 2587.22, 'end': 2592.06, 'text': ' solutions possible I am not saying all definition can be added and all of them will give you a', 'tokens': [51494, 6547, 1944, 286, 669, 406, 1566, 439, 7123, 393, 312, 3869, 293, 439, 295, 552, 486, 976, 291, 257, 51736], 'temperature': 0.0, 'avg_logprob': -0.20616596149948407, 'compression_ratio': 1.9873949579831933, 'no_speech_prob': 0.001067542820237577}, {'id': 361, 'seek': 259206, 'start': 2592.06, 'end': 2596.06, 'text': ' solution all I am saying is there are multiple solutions possible there need not be a single', 'tokens': [50364, 3827, 439, 286, 669, 1566, 307, 456, 366, 3866, 6547, 1944, 456, 643, 406, 312, 257, 2167, 50564], 'temperature': 0.0, 'avg_logprob': -0.11298227791834359, 'compression_ratio': 2.039647577092511, 'no_speech_prob': 0.5067660808563232}, {'id': 362, 'seek': 259206, 'start': 2596.06, 'end': 2602.2999999999997, 'text': ' solution not all solutions are like not all possible vectors are possible solutions but', 'tokens': [50564, 3827, 406, 439, 6547, 366, 411, 406, 439, 1944, 18875, 366, 1944, 6547, 457, 50876], 'temperature': 0.0, 'avg_logprob': -0.11298227791834359, 'compression_ratio': 2.039647577092511, 'no_speech_prob': 0.5067660808563232}, {'id': 363, 'seek': 259206, 'start': 2602.2999999999997, 'end': 2608.38, 'text': ' the set of possible solutions is not single term it may not be unique so it is a very common game', 'tokens': [50876, 264, 992, 295, 1944, 6547, 307, 406, 2167, 1433, 309, 815, 406, 312, 3845, 370, 309, 307, 257, 588, 2689, 1216, 51180], 'temperature': 0.0, 'avg_logprob': -0.11298227791834359, 'compression_ratio': 2.039647577092511, 'no_speech_prob': 0.5067660808563232}, {'id': 364, 'seek': 259206, 'start': 2608.38, 'end': 2613.2999999999997, 'text': ' in like mathematics right so you want to show a multiple solution you would actually take one', 'tokens': [51180, 294, 411, 18666, 558, 370, 291, 528, 281, 855, 257, 3866, 3827, 291, 576, 767, 747, 472, 51426], 'temperature': 0.0, 'avg_logprob': -0.11298227791834359, 'compression_ratio': 2.039647577092511, 'no_speech_prob': 0.5067660808563232}, {'id': 365, 'seek': 259206, 'start': 2613.2999999999997, 'end': 2618.06, 'text': ' solution and say can I do something and get another solution from this right so I give you', 'tokens': [51426, 3827, 293, 584, 393, 286, 360, 746, 293, 483, 1071, 3827, 490, 341, 558, 370, 286, 976, 291, 51664], 'temperature': 0.0, 'avg_logprob': -0.11298227791834359, 'compression_ratio': 2.039647577092511, 'no_speech_prob': 0.5067660808563232}, {'id': 366, 'seek': 261806, 'start': 2618.06, 'end': 2623.06, 'text': ' a way of doing that right so the next question is I think it is your whatever you started with is', 'tokens': [50364, 257, 636, 295, 884, 300, 558, 370, 264, 958, 1168, 307, 286, 519, 309, 307, 428, 2035, 291, 1409, 365, 307, 50614], 'temperature': 0.0, 'avg_logprob': -0.13799401691981725, 'compression_ratio': 1.7894736842105263, 'no_speech_prob': 0.0924573764204979}, {'id': 367, 'seek': 261806, 'start': 2623.06, 'end': 2632.14, 'text': ' the question of safety now think about the case what if what would have happened if one of the', 'tokens': [50614, 264, 1168, 295, 4514, 586, 519, 466, 264, 1389, 437, 498, 437, 576, 362, 2011, 498, 472, 295, 264, 51068], 'temperature': 0.0, 'avg_logprob': -0.13799401691981725, 'compression_ratio': 1.7894736842105263, 'no_speech_prob': 0.0924573764204979}, {'id': 368, 'seek': 261806, 'start': 2632.14, 'end': 2640.46, 'text': ' solutions in this set was smaller than what it what it should have been if I miss out on a', 'tokens': [51068, 6547, 294, 341, 992, 390, 4356, 813, 437, 309, 437, 309, 820, 362, 668, 498, 286, 1713, 484, 322, 257, 51484], 'temperature': 0.0, 'avg_logprob': -0.13799401691981725, 'compression_ratio': 1.7894736842105263, 'no_speech_prob': 0.0924573764204979}, {'id': 369, 'seek': 261806, 'start': 2640.46, 'end': 2646.1, 'text': ' definition a definition is actually reaching definition but that does not get captured not', 'tokens': [51484, 7123, 257, 7123, 307, 767, 9906, 7123, 457, 300, 775, 406, 483, 11828, 406, 51766], 'temperature': 0.0, 'avg_logprob': -0.13799401691981725, 'compression_ratio': 1.7894736842105263, 'no_speech_prob': 0.0924573764204979}, {'id': 370, 'seek': 264610, 'start': 2646.1, 'end': 2650.22, 'text': ' it will not happen with these set of equations it will not even stabilize there so that will', 'tokens': [50364, 309, 486, 406, 1051, 365, 613, 992, 295, 11787, 309, 486, 406, 754, 31870, 456, 370, 300, 486, 50570], 'temperature': 0.0, 'avg_logprob': -0.14998474328414255, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.013186846859753132}, {'id': 371, 'seek': 264610, 'start': 2650.22, 'end': 2654.42, 'text': ' not be a valid solution but I am saying let us say somebody I do not use this thing I just guess', 'tokens': [50570, 406, 312, 257, 7363, 3827, 457, 286, 669, 1566, 718, 505, 584, 2618, 286, 360, 406, 764, 341, 551, 286, 445, 2041, 50780], 'temperature': 0.0, 'avg_logprob': -0.14998474328414255, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.013186846859753132}, {'id': 372, 'seek': 264610, 'start': 2654.42, 'end': 2661.22, 'text': ' something and I say oh work with this right so what what so I should not call it a definition', 'tokens': [50780, 746, 293, 286, 584, 1954, 589, 365, 341, 558, 370, 437, 437, 370, 286, 820, 406, 818, 309, 257, 7123, 51120], 'temperature': 0.0, 'avg_logprob': -0.14998474328414255, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.013186846859753132}, {'id': 373, 'seek': 264610, 'start': 2661.22, 'end': 2667.7, 'text': ' but but let us see I say an assignment to these sets this in and outsets right to this in and', 'tokens': [51120, 457, 457, 718, 505, 536, 286, 584, 364, 15187, 281, 613, 6352, 341, 294, 293, 14758, 1385, 558, 281, 341, 294, 293, 51444], 'temperature': 0.0, 'avg_logprob': -0.14998474328414255, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.013186846859753132}, {'id': 374, 'seek': 266770, 'start': 2667.7, 'end': 2676.4199999999996, 'text': ' outsets if I put an arbitrary set of sets assign an arbitrary set of set of definitions such that', 'tokens': [50364, 14758, 1385, 498, 286, 829, 364, 23211, 992, 295, 6352, 6269, 364, 23211, 992, 295, 992, 295, 21988, 1270, 300, 50800], 'temperature': 0.0, 'avg_logprob': -0.19771182827833222, 'compression_ratio': 1.8564593301435406, 'no_speech_prob': 0.5351975560188293}, {'id': 375, 'seek': 266770, 'start': 2676.4199999999996, 'end': 2683.2999999999997, 'text': ' there is some definitions meeting me missing from the actual set of definition that be there what', 'tokens': [50800, 456, 307, 512, 21988, 3440, 385, 5361, 490, 264, 3539, 992, 295, 7123, 300, 312, 456, 437, 51144], 'temperature': 0.0, 'avg_logprob': -0.19771182827833222, 'compression_ratio': 1.8564593301435406, 'no_speech_prob': 0.5351975560188293}, {'id': 376, 'seek': 266770, 'start': 2683.2999999999997, 'end': 2690.14, 'text': ' would have happened wrong transformations that is dangerous that is sure dangerous right it is okay', 'tokens': [51144, 576, 362, 2011, 2085, 34852, 300, 307, 5795, 300, 307, 988, 5795, 558, 309, 307, 1392, 51486], 'temperature': 0.0, 'avg_logprob': -0.19771182827833222, 'compression_ratio': 1.8564593301435406, 'no_speech_prob': 0.5351975560188293}, {'id': 377, 'seek': 266770, 'start': 2690.14, 'end': 2695.2999999999997, 'text': ' I can wait for another hour for my program to complete execution I live with it but I cannot', 'tokens': [51486, 286, 393, 1699, 337, 1071, 1773, 337, 452, 1461, 281, 3566, 15058, 286, 1621, 365, 309, 457, 286, 2644, 51744], 'temperature': 0.0, 'avg_logprob': -0.19771182827833222, 'compression_ratio': 1.8564593301435406, 'no_speech_prob': 0.5351975560188293}, {'id': 378, 'seek': 269530, 'start': 2695.3, 'end': 2701.46, 'text': ' say that okay I will give your execution in five minutes 50% answer wrong answer I cannot', 'tokens': [50364, 584, 300, 1392, 286, 486, 976, 428, 15058, 294, 1732, 2077, 2625, 4, 1867, 2085, 1867, 286, 2644, 50672], 'temperature': 0.0, 'avg_logprob': -0.24554003020863474, 'compression_ratio': 1.87, 'no_speech_prob': 0.059421949088573456}, {'id': 379, 'seek': 269530, 'start': 2701.46, 'end': 2708.54, 'text': ' live with that right so so your compiler cannot give you wrong answers and they do give you wrong', 'tokens': [50672, 1621, 365, 300, 558, 370, 370, 428, 31958, 2644, 976, 291, 2085, 6338, 293, 436, 360, 976, 291, 2085, 51026], 'temperature': 0.0, 'avg_logprob': -0.24554003020863474, 'compression_ratio': 1.87, 'no_speech_prob': 0.059421949088573456}, {'id': 380, 'seek': 269530, 'start': 2708.54, 'end': 2713.42, 'text': ' answers that is different matter altogether but and we saw it yesterday right we saw it yesterday', 'tokens': [51026, 6338, 300, 307, 819, 1871, 19051, 457, 293, 321, 1866, 309, 5186, 558, 321, 1866, 309, 5186, 51270], 'temperature': 0.0, 'avg_logprob': -0.24554003020863474, 'compression_ratio': 1.87, 'no_speech_prob': 0.059421949088573456}, {'id': 381, 'seek': 269530, 'start': 2713.42, 'end': 2718.02, 'text': ' there were different behavior of different compilers on the same program right so all at', 'tokens': [51270, 456, 645, 819, 5223, 295, 819, 715, 388, 433, 322, 264, 912, 1461, 558, 370, 439, 412, 51500], 'temperature': 0.0, 'avg_logprob': -0.24554003020863474, 'compression_ratio': 1.87, 'no_speech_prob': 0.059421949088573456}, {'id': 382, 'seek': 271802, 'start': 2718.02, 'end': 2728.74, 'text': ' least one of them is surely wrong so but whatever so now the question is that okay so now the', 'tokens': [50364, 1935, 472, 295, 552, 307, 11468, 2085, 370, 457, 2035, 370, 586, 264, 1168, 307, 300, 1392, 370, 586, 264, 50900], 'temperature': 0.0, 'avg_logprob': -0.1930937665574094, 'compression_ratio': 1.646551724137931, 'no_speech_prob': 0.12112006545066833}, {'id': 383, 'seek': 271802, 'start': 2728.74, 'end': 2737.94, 'text': ' question is that so this this is what is referred to as safety right so I would say a solution is', 'tokens': [50900, 1168, 307, 300, 370, 341, 341, 307, 437, 307, 10839, 281, 382, 4514, 558, 370, 286, 576, 584, 257, 3827, 307, 51360], 'temperature': 0.0, 'avg_logprob': -0.1930937665574094, 'compression_ratio': 1.646551724137931, 'no_speech_prob': 0.12112006545066833}, {'id': 384, 'seek': 273794, 'start': 2737.94, 'end': 2749.94, 'text': ' safe if it at least contains all the definitions it needs to have otherwise the solution is not', 'tokens': [50364, 3273, 498, 309, 412, 1935, 8306, 439, 264, 21988, 309, 2203, 281, 362, 5911, 264, 3827, 307, 406, 50964], 'temperature': 0.0, 'avg_logprob': -0.09416152536869049, 'compression_ratio': 1.8636363636363635, 'no_speech_prob': 0.18183334171772003}, {'id': 385, 'seek': 273794, 'start': 2749.94, 'end': 2758.7400000000002, 'text': ' a safe solution so you will see that these set of equations no matter what solution they give you', 'tokens': [50964, 257, 3273, 3827, 370, 291, 486, 536, 300, 613, 992, 295, 11787, 572, 1871, 437, 3827, 436, 976, 291, 51404], 'temperature': 0.0, 'avg_logprob': -0.09416152536869049, 'compression_ratio': 1.8636363636363635, 'no_speech_prob': 0.18183334171772003}, {'id': 386, 'seek': 273794, 'start': 2758.7400000000002, 'end': 2765.38, 'text': ' that surely give you a safe solution they will not miss out on a definition right that is not', 'tokens': [51404, 300, 11468, 976, 291, 257, 3273, 3827, 436, 486, 406, 1713, 484, 322, 257, 7123, 558, 300, 307, 406, 51736], 'temperature': 0.0, 'avg_logprob': -0.09416152536869049, 'compression_ratio': 1.8636363636363635, 'no_speech_prob': 0.18183334171772003}, {'id': 387, 'seek': 276538, 'start': 2765.38, 'end': 2770.7000000000003, 'text': ' going to happen right so it may be that we may not get the best solution but it will not do a', 'tokens': [50364, 516, 281, 1051, 558, 370, 309, 815, 312, 300, 321, 815, 406, 483, 264, 1151, 3827, 457, 309, 486, 406, 360, 257, 50630], 'temperature': 0.0, 'avg_logprob': -0.13192587993184074, 'compression_ratio': 1.6524390243902438, 'no_speech_prob': 0.001129806973040104}, {'id': 388, 'seek': 276538, 'start': 2770.7000000000003, 'end': 2776.7000000000003, 'text': ' wrong optimization so there are in program analysis people talk about these two important', 'tokens': [50630, 2085, 19618, 370, 456, 366, 294, 1461, 5215, 561, 751, 466, 613, 732, 1021, 50930], 'temperature': 0.0, 'avg_logprob': -0.13192587993184074, 'compression_ratio': 1.6524390243902438, 'no_speech_prob': 0.001129806973040104}, {'id': 389, 'seek': 276538, 'start': 2776.7000000000003, 'end': 2787.34, 'text': ' things one is safety people also refer to as soundness and it also talk about something', 'tokens': [50930, 721, 472, 307, 4514, 561, 611, 2864, 281, 382, 1626, 1287, 293, 309, 611, 751, 466, 746, 51462], 'temperature': 0.0, 'avg_logprob': -0.13192587993184074, 'compression_ratio': 1.6524390243902438, 'no_speech_prob': 0.001129806973040104}, {'id': 390, 'seek': 278734, 'start': 2787.34, 'end': 2799.46, 'text': ' called precision and they also refer to as completeness so safety or soundness means', 'tokens': [50364, 1219, 18356, 293, 436, 611, 2864, 281, 382, 1557, 15264, 370, 4514, 420, 1626, 1287, 1355, 50970], 'temperature': 0.0, 'avg_logprob': -0.10086870193481445, 'compression_ratio': 1.6035502958579881, 'no_speech_prob': 0.033053770661354065}, {'id': 391, 'seek': 278734, 'start': 2799.46, 'end': 2806.54, 'text': ' that I should not compute a solution which can lead to a wrong result for my client whoever is', 'tokens': [50970, 300, 286, 820, 406, 14722, 257, 3827, 597, 393, 1477, 281, 257, 2085, 1874, 337, 452, 6423, 11387, 307, 51324], 'temperature': 0.0, 'avg_logprob': -0.10086870193481445, 'compression_ratio': 1.6035502958579881, 'no_speech_prob': 0.033053770661354065}, {'id': 392, 'seek': 278734, 'start': 2806.54, 'end': 2815.1800000000003, 'text': ' using this analysis right and precision tells me or accuracy tells me how close am I to the', 'tokens': [51324, 1228, 341, 5215, 558, 293, 18356, 5112, 385, 420, 14170, 5112, 385, 577, 1998, 669, 286, 281, 264, 51756], 'temperature': 0.0, 'avg_logprob': -0.10086870193481445, 'compression_ratio': 1.6035502958579881, 'no_speech_prob': 0.033053770661354065}, {'id': 393, 'seek': 281518, 'start': 2815.18, 'end': 2820.5, 'text': ' actual solution so I have the optimal right solution sitting somewhere how close am I to', 'tokens': [50364, 3539, 3827, 370, 286, 362, 264, 16252, 558, 3827, 3798, 4079, 577, 1998, 669, 286, 281, 50630], 'temperature': 0.0, 'avg_logprob': -0.0980646393515847, 'compression_ratio': 1.8620689655172413, 'no_speech_prob': 0.02057354897260666}, {'id': 394, 'seek': 281518, 'start': 2820.5, 'end': 2829.2599999999998, 'text': ' the right solution am I there or am I off that right so if I really have a precise solution I', 'tokens': [50630, 264, 558, 3827, 669, 286, 456, 420, 669, 286, 766, 300, 558, 370, 498, 286, 534, 362, 257, 13600, 3827, 286, 51068], 'temperature': 0.0, 'avg_logprob': -0.0980646393515847, 'compression_ratio': 1.8620689655172413, 'no_speech_prob': 0.02057354897260666}, {'id': 395, 'seek': 281518, 'start': 2829.2599999999998, 'end': 2835.18, 'text': ' will be able to do all the optimizations I would have liked to do if I have a safe solution I will', 'tokens': [51068, 486, 312, 1075, 281, 360, 439, 264, 5028, 14455, 286, 576, 362, 4501, 281, 360, 498, 286, 362, 257, 3273, 3827, 286, 486, 51364], 'temperature': 0.0, 'avg_logprob': -0.0980646393515847, 'compression_ratio': 1.8620689655172413, 'no_speech_prob': 0.02057354897260666}, {'id': 396, 'seek': 281518, 'start': 2835.18, 'end': 2841.7, 'text': ' never transform my code in a wrong manner right so these are extremely important just keep it in', 'tokens': [51364, 1128, 4088, 452, 3089, 294, 257, 2085, 9060, 558, 370, 613, 366, 4664, 1021, 445, 1066, 309, 294, 51690], 'temperature': 0.0, 'avg_logprob': -0.0980646393515847, 'compression_ratio': 1.8620689655172413, 'no_speech_prob': 0.02057354897260666}, {'id': 397, 'seek': 284170, 'start': 2841.7, 'end': 2862.9399999999996, 'text': ' your mind whenever you are doing anything with program analysis all good okay so right so it', 'tokens': [50364, 428, 1575, 5699, 291, 366, 884, 1340, 365, 1461, 5215, 439, 665, 1392, 370, 558, 370, 309, 51426], 'temperature': 0.0, 'avg_logprob': -0.22652591977800643, 'compression_ratio': 1.1948051948051948, 'no_speech_prob': 0.21595953404903412}, {'id': 398, 'seek': 286294, 'start': 2862.94, 'end': 2871.66, 'text': ' was in the slide itself so you have precision we have safety and the next thing as like which', 'tokens': [50364, 390, 294, 264, 4137, 2564, 370, 291, 362, 18356, 321, 362, 4514, 293, 264, 958, 551, 382, 411, 597, 50800], 'temperature': 0.0, 'avg_logprob': -0.16514163925534203, 'compression_ratio': 1.759433962264151, 'no_speech_prob': 0.21124649047851562}, {'id': 399, 'seek': 286294, 'start': 2871.66, 'end': 2878.02, 'text': ' is important for engineers is scalability that how much can you scale it what is the efficiency', 'tokens': [50800, 307, 1021, 337, 11955, 307, 15664, 2310, 300, 577, 709, 393, 291, 4373, 309, 437, 307, 264, 10493, 51118], 'temperature': 0.0, 'avg_logprob': -0.16514163925534203, 'compression_ratio': 1.759433962264151, 'no_speech_prob': 0.21124649047851562}, {'id': 400, 'seek': 286294, 'start': 2878.02, 'end': 2886.5, 'text': ' of this algorithm what are the largest like how large is the piece of code I can handle right so', 'tokens': [51118, 295, 341, 9284, 437, 366, 264, 6443, 411, 577, 2416, 307, 264, 2522, 295, 3089, 286, 393, 4813, 558, 370, 51542], 'temperature': 0.0, 'avg_logprob': -0.16514163925534203, 'compression_ratio': 1.759433962264151, 'no_speech_prob': 0.21124649047851562}, {'id': 401, 'seek': 286294, 'start': 2886.5, 'end': 2891.1, 'text': ' this is from it so these are important from the of course from the application and the', 'tokens': [51542, 341, 307, 490, 309, 370, 613, 366, 1021, 490, 264, 295, 1164, 490, 264, 3861, 293, 264, 51772], 'temperature': 0.0, 'avg_logprob': -0.16514163925534203, 'compression_ratio': 1.759433962264151, 'no_speech_prob': 0.21124649047851562}, {'id': 402, 'seek': 289110, 'start': 2891.1, 'end': 2897.7, 'text': ' theoretical perspective this is again important from the system building perspective so we have', 'tokens': [50364, 20864, 4585, 341, 307, 797, 1021, 490, 264, 1185, 2390, 4585, 370, 321, 362, 50694], 'temperature': 0.0, 'avg_logprob': -0.15058716974760356, 'compression_ratio': 1.8390243902439025, 'no_speech_prob': 0.04459879919886589}, {'id': 403, 'seek': 289110, 'start': 2897.7, 'end': 2901.62, 'text': ' talked about it so which set will work for us best the smallest or the largest the second', 'tokens': [50694, 2825, 466, 309, 370, 597, 992, 486, 589, 337, 505, 1151, 264, 16998, 420, 264, 6443, 264, 1150, 50890], 'temperature': 0.0, 'avg_logprob': -0.15058716974760356, 'compression_ratio': 1.8390243902439025, 'no_speech_prob': 0.04459879919886589}, {'id': 404, 'seek': 289110, 'start': 2901.62, 'end': 2909.18, 'text': ' question is does such the smallest solution exist or rather even solution exists and right', 'tokens': [50890, 1168, 307, 775, 1270, 264, 16998, 3827, 2514, 420, 2831, 754, 3827, 8198, 293, 558, 51268], 'temperature': 0.0, 'avg_logprob': -0.15058716974760356, 'compression_ratio': 1.8390243902439025, 'no_speech_prob': 0.04459879919886589}, {'id': 405, 'seek': 289110, 'start': 2909.18, 'end': 2916.02, 'text': ' so one intuition you can carry forward is that the best solution so now if you just somehow somebody', 'tokens': [51268, 370, 472, 24002, 291, 393, 3985, 2128, 307, 300, 264, 1151, 3827, 370, 586, 498, 291, 445, 6063, 2618, 51610], 'temperature': 0.0, 'avg_logprob': -0.15058716974760356, 'compression_ratio': 1.8390243902439025, 'no_speech_prob': 0.04459879919886589}, {'id': 406, 'seek': 291602, 'start': 2916.02, 'end': 2922.3, 'text': ' gives you all possible solutions magically right the way to get the best solution would', 'tokens': [50364, 2709, 291, 439, 1944, 6547, 39763, 558, 264, 636, 281, 483, 264, 1151, 3827, 576, 50678], 'temperature': 0.0, 'avg_logprob': -0.16789259229387557, 'compression_ratio': 1.913265306122449, 'no_speech_prob': 0.17750047147274017}, {'id': 407, 'seek': 291602, 'start': 2922.3, 'end': 2928.7, 'text': ' be to take the intersection of all this that is surely going to be the best solution right so', 'tokens': [50678, 312, 281, 747, 264, 15236, 295, 439, 341, 300, 307, 11468, 516, 281, 312, 264, 1151, 3827, 558, 370, 50998], 'temperature': 0.0, 'avg_logprob': -0.16789259229387557, 'compression_ratio': 1.913265306122449, 'no_speech_prob': 0.17750047147274017}, {'id': 408, 'seek': 291602, 'start': 2928.7, 'end': 2936.9, 'text': ' just keep that intuition in mind but let us not try to devise a strategy to do this business so', 'tokens': [50998, 445, 1066, 300, 24002, 294, 1575, 457, 718, 505, 406, 853, 281, 1905, 908, 257, 5206, 281, 360, 341, 1606, 370, 51408], 'temperature': 0.0, 'avg_logprob': -0.16789259229387557, 'compression_ratio': 1.913265306122449, 'no_speech_prob': 0.17750047147274017}, {'id': 409, 'seek': 291602, 'start': 2936.9, 'end': 2942.94, 'text': ' this is algorithm that you were trying to propose right so this is algorithm is that you see your', 'tokens': [51408, 341, 307, 9284, 300, 291, 645, 1382, 281, 17421, 558, 370, 341, 307, 9284, 307, 300, 291, 536, 428, 51710], 'temperature': 0.0, 'avg_logprob': -0.16789259229387557, 'compression_ratio': 1.913265306122449, 'no_speech_prob': 0.17750047147274017}, {'id': 410, 'seek': 294294, 'start': 2942.94, 'end': 2952.98, 'text': ' solution sets by sure sure solutions like solutions which are surely correct surely safe right no not', 'tokens': [50364, 3827, 6352, 538, 988, 988, 6547, 411, 6547, 597, 366, 11468, 3006, 11468, 3273, 558, 572, 406, 50866], 'temperature': 0.0, 'avg_logprob': -0.14885955633119094, 'compression_ratio': 1.9639175257731958, 'no_speech_prob': 0.04042232781648636}, {'id': 411, 'seek': 294294, 'start': 2952.98, 'end': 2960.3, 'text': ' really so sure set I meant here was the what the set that you know is correct from the onset like', 'tokens': [50866, 534, 370, 988, 992, 286, 4140, 510, 390, 264, 437, 264, 992, 300, 291, 458, 307, 3006, 490, 264, 34948, 411, 51232], 'temperature': 0.0, 'avg_logprob': -0.14885955633119094, 'compression_ratio': 1.9639175257731958, 'no_speech_prob': 0.04042232781648636}, {'id': 412, 'seek': 294294, 'start': 2960.3, 'end': 2965.42, 'text': ' for instance for reaching definitions I know that at the beginning of the program my inset', 'tokens': [51232, 337, 5197, 337, 9906, 21988, 286, 458, 300, 412, 264, 2863, 295, 264, 1461, 452, 1028, 302, 51488], 'temperature': 0.0, 'avg_logprob': -0.14885955633119094, 'compression_ratio': 1.9639175257731958, 'no_speech_prob': 0.04042232781648636}, {'id': 413, 'seek': 294294, 'start': 2965.42, 'end': 2971.38, 'text': ' at the entry point of the program is going to be large that I know right I know that for a', 'tokens': [51488, 412, 264, 8729, 935, 295, 264, 1461, 307, 516, 281, 312, 2416, 300, 286, 458, 558, 286, 458, 300, 337, 257, 51786], 'temperature': 0.0, 'avg_logprob': -0.14885955633119094, 'compression_ratio': 1.9639175257731958, 'no_speech_prob': 0.04042232781648636}, {'id': 414, 'seek': 297138, 'start': 2971.38, 'end': 2977.2200000000003, 'text': ' liveness analysis at the end of the after the program terminates my live sets are going to', 'tokens': [50364, 375, 553, 442, 5215, 412, 264, 917, 295, 264, 934, 264, 1461, 10761, 1024, 452, 1621, 6352, 366, 516, 281, 50656], 'temperature': 0.0, 'avg_logprob': -0.12685200337613567, 'compression_ratio': 1.668141592920354, 'no_speech_prob': 0.022144796326756477}, {'id': 415, 'seek': 297138, 'start': 2977.2200000000003, 'end': 2984.9, 'text': ' be empty that I know right so these are things I already know so I can just simply plug in those', 'tokens': [50656, 312, 6707, 300, 286, 458, 558, 370, 613, 366, 721, 286, 1217, 458, 370, 286, 393, 445, 2935, 5452, 294, 729, 51040], 'temperature': 0.0, 'avg_logprob': -0.12685200337613567, 'compression_ratio': 1.668141592920354, 'no_speech_prob': 0.022144796326756477}, {'id': 416, 'seek': 297138, 'start': 2984.9, 'end': 2994.86, 'text': " values second is I initialize my sets by some values now that is a next question okay so let's", 'tokens': [51040, 4190, 1150, 307, 286, 5883, 1125, 452, 6352, 538, 512, 4190, 586, 300, 307, 257, 958, 1168, 1392, 370, 718, 311, 51538], 'temperature': 0.0, 'avg_logprob': -0.12685200337613567, 'compression_ratio': 1.668141592920354, 'no_speech_prob': 0.022144796326756477}, {'id': 417, 'seek': 297138, 'start': 2994.86, 'end': 3000.42, 'text': ' answer that also so we have reaching definition sets so okay let me just complete algorithm so', 'tokens': [51538, 1867, 300, 611, 370, 321, 362, 9906, 7123, 6352, 370, 1392, 718, 385, 445, 3566, 9284, 370, 51816], 'temperature': 0.0, 'avg_logprob': -0.12685200337613567, 'compression_ratio': 1.668141592920354, 'no_speech_prob': 0.022144796326756477}, {'id': 418, 'seek': 300042, 'start': 3000.42, 'end': 3006.06, 'text': " then what we do is we we initialize these sets all of the in and out so let's go back to the", 'tokens': [50364, 550, 437, 321, 360, 307, 321, 321, 5883, 1125, 613, 6352, 439, 295, 264, 294, 293, 484, 370, 718, 311, 352, 646, 281, 264, 50646], 'temperature': 0.0, 'avg_logprob': -0.11540897943640269, 'compression_ratio': 1.9037433155080214, 'no_speech_prob': 0.002390580717474222}, {'id': 419, 'seek': 300042, 'start': 3006.06, 'end': 3017.66, 'text': ' equation sets yeah so these are the set of equations right so what we simply do is we', 'tokens': [50646, 5367, 6352, 1338, 370, 613, 366, 264, 992, 295, 11787, 558, 370, 437, 321, 2935, 360, 307, 321, 51226], 'temperature': 0.0, 'avg_logprob': -0.11540897943640269, 'compression_ratio': 1.9037433155080214, 'no_speech_prob': 0.002390580717474222}, {'id': 420, 'seek': 300042, 'start': 3017.66, 'end': 3022.1800000000003, 'text': " we know the gen and kill sets anyway so the in and out sets I don't know but I know the", 'tokens': [51226, 321, 458, 264, 1049, 293, 1961, 6352, 4033, 370, 264, 294, 293, 484, 6352, 286, 500, 380, 458, 457, 286, 458, 264, 51452], 'temperature': 0.0, 'avg_logprob': -0.11540897943640269, 'compression_ratio': 1.9037433155080214, 'no_speech_prob': 0.002390580717474222}, {'id': 421, 'seek': 300042, 'start': 3022.1800000000003, 'end': 3028.7000000000003, 'text': ' inset at the beginning of the entry block for every other block what we simply do what we', 'tokens': [51452, 1028, 302, 412, 264, 2863, 295, 264, 8729, 3461, 337, 633, 661, 3461, 437, 321, 2935, 360, 437, 321, 51778], 'temperature': 0.0, 'avg_logprob': -0.11540897943640269, 'compression_ratio': 1.9037433155080214, 'no_speech_prob': 0.002390580717474222}, {'id': 422, 'seek': 302870, 'start': 3029.1, 'end': 3035.8199999999997, 'text': ' do is we plug in the we initialize it with some set either the empty set or the universal set it', 'tokens': [50384, 360, 307, 321, 5452, 294, 264, 321, 5883, 1125, 309, 365, 512, 992, 2139, 264, 6707, 992, 420, 264, 11455, 992, 309, 50720], 'temperature': 0.0, 'avg_logprob': -0.15328815065581222, 'compression_ratio': 1.9154228855721394, 'no_speech_prob': 0.005630570463836193}, {'id': 423, 'seek': 302870, 'start': 3035.8199999999997, 'end': 3044.9399999999996, 'text': ' will be one of those two things right and then you will run this fixed point iteration right so', 'tokens': [50720, 486, 312, 472, 295, 729, 732, 721, 558, 293, 550, 291, 486, 1190, 341, 6806, 935, 24784, 558, 370, 51176], 'temperature': 0.0, 'avg_logprob': -0.15328815065581222, 'compression_ratio': 1.9154228855721394, 'no_speech_prob': 0.005630570463836193}, {'id': 424, 'seek': 302870, 'start': 3044.9399999999996, 'end': 3048.8999999999996, 'text': ' every time you run the fixed point iteration the solutions would change because the for instance', 'tokens': [51176, 633, 565, 291, 1190, 264, 6806, 935, 24784, 264, 6547, 576, 1319, 570, 264, 337, 5197, 51374], 'temperature': 0.0, 'avg_logprob': -0.15328815065581222, 'compression_ratio': 1.9154228855721394, 'no_speech_prob': 0.005630570463836193}, {'id': 425, 'seek': 302870, 'start': 3048.8999999999996, 'end': 3053.9399999999996, 'text': ' the in is empty if we force the out to become empty not empty sorry the out to become something', 'tokens': [51374, 264, 294, 307, 6707, 498, 321, 3464, 264, 484, 281, 1813, 6707, 406, 6707, 2597, 264, 484, 281, 1813, 746, 51626], 'temperature': 0.0, 'avg_logprob': -0.15328815065581222, 'compression_ratio': 1.9154228855721394, 'no_speech_prob': 0.005630570463836193}, {'id': 426, 'seek': 305394, 'start': 3053.94, 'end': 3059.86, 'text': ' right whatever the out becomes that will force its children to become something right so that', 'tokens': [50364, 558, 2035, 264, 484, 3643, 300, 486, 3464, 1080, 2227, 281, 1813, 746, 558, 370, 300, 50660], 'temperature': 0.0, 'avg_logprob': -0.13355885673971737, 'compression_ratio': 1.8592233009708738, 'no_speech_prob': 0.01688305288553238}, {'id': 427, 'seek': 305394, 'start': 3059.86, 'end': 3067.02, 'text': ' will change something in the in the structure of these sets you feed that again keep on doing it', 'tokens': [50660, 486, 1319, 746, 294, 264, 294, 264, 3877, 295, 613, 6352, 291, 3154, 300, 797, 1066, 322, 884, 309, 51018], 'temperature': 0.0, 'avg_logprob': -0.13355885673971737, 'compression_ratio': 1.8592233009708738, 'no_speech_prob': 0.01688305288553238}, {'id': 428, 'seek': 305394, 'start': 3067.02, 'end': 3073.78, 'text': ' till at a point there is no change to the set of solutions and that is exactly my test that all my', 'tokens': [51018, 4288, 412, 257, 935, 456, 307, 572, 1319, 281, 264, 992, 295, 6547, 293, 300, 307, 2293, 452, 1500, 300, 439, 452, 51356], 'temperature': 0.0, 'avg_logprob': -0.13355885673971737, 'compression_ratio': 1.8592233009708738, 'no_speech_prob': 0.01688305288553238}, {'id': 429, 'seek': 305394, 'start': 3073.78, 'end': 3079.3, 'text': " solutions will be satisfied then I've got my solution that is this strategy we will follow so", 'tokens': [51356, 6547, 486, 312, 11239, 550, 286, 600, 658, 452, 3827, 300, 307, 341, 5206, 321, 486, 1524, 370, 51632], 'temperature': 0.0, 'avg_logprob': -0.13355885673971737, 'compression_ratio': 1.8592233009708738, 'no_speech_prob': 0.01688305288553238}, {'id': 430, 'seek': 307930, 'start': 3079.3, 'end': 3083.94, 'text': ' the last question we have to answer is that what should we initialize our sets with should', 'tokens': [50364, 264, 1036, 1168, 321, 362, 281, 1867, 307, 300, 437, 820, 321, 5883, 1125, 527, 6352, 365, 820, 50596], 'temperature': 0.0, 'avg_logprob': -0.19963648102500223, 'compression_ratio': 1.528, 'no_speech_prob': 0.01702284626662731}, {'id': 431, 'seek': 307930, 'start': 3083.94, 'end': 3089.5, 'text': ' it be an empty set or should it be a universal set for each definitions just think about it and tell', 'tokens': [50596, 309, 312, 364, 6707, 992, 420, 820, 309, 312, 257, 11455, 992, 337, 1184, 21988, 445, 519, 466, 309, 293, 980, 50874], 'temperature': 0.0, 'avg_logprob': -0.19963648102500223, 'compression_ratio': 1.528, 'no_speech_prob': 0.01702284626662731}, {'id': 432, 'seek': 310930, 'start': 3109.3, 'end': 3130.7000000000003, 'text': ' me okay I got one vote for empty set two votes for empty nobody says universal this is the game', 'tokens': [50364, 385, 1392, 286, 658, 472, 4740, 337, 6707, 992, 732, 12068, 337, 6707, 5079, 1619, 11455, 341, 307, 264, 1216, 51434], 'temperature': 0.0, 'avg_logprob': -0.32147012154261273, 'compression_ratio': 1.2179487179487178, 'no_speech_prob': 0.09968627244234085}, {'id': 433, 'seek': 313070, 'start': 3130.7, 'end': 3158.14, 'text': " man it's okay why is it empty set why not universal set excellent I think all of you", 'tokens': [50364, 587, 309, 311, 1392, 983, 307, 309, 6707, 992, 983, 406, 11455, 992, 7103, 286, 519, 439, 295, 291, 51736], 'temperature': 0.0, 'avg_logprob': -0.2743617762690005, 'compression_ratio': 1.12, 'no_speech_prob': 0.7561061978340149}, {'id': 434, 'seek': 315814, 'start': 3158.14, 'end': 3163.62, 'text': ' got answers right so essentially if I substitute it with the universal set what will happen is', 'tokens': [50364, 658, 6338, 558, 370, 4476, 498, 286, 15802, 309, 365, 264, 11455, 992, 437, 486, 1051, 307, 50638], 'temperature': 0.0, 'avg_logprob': -0.14943258717374983, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.2736586928367615}, {'id': 435, 'seek': 315814, 'start': 3163.62, 'end': 3170.46, 'text': " that all these d i's that I did not want they'll just stick around I'll never be able to remove", 'tokens': [50638, 300, 439, 613, 274, 741, 311, 300, 286, 630, 406, 528, 436, 603, 445, 2897, 926, 286, 603, 1128, 312, 1075, 281, 4159, 50980], 'temperature': 0.0, 'avg_logprob': -0.14943258717374983, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.2736586928367615}, {'id': 436, 'seek': 315814, 'start': 3170.46, 'end': 3176.2999999999997, 'text': ' them so one thing is sure that this set of equations no matter what always gives me a', 'tokens': [50980, 552, 370, 472, 551, 307, 988, 300, 341, 992, 295, 11787, 572, 1871, 437, 1009, 2709, 385, 257, 51272], 'temperature': 0.0, 'avg_logprob': -0.14943258717374983, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.2736586928367615}, {'id': 437, 'seek': 315814, 'start': 3176.2999999999997, 'end': 3182.62, 'text': ' solution which is the correct solution right but I would like the best solution right so if I', 'tokens': [51272, 3827, 597, 307, 264, 3006, 3827, 558, 457, 286, 576, 411, 264, 1151, 3827, 558, 370, 498, 286, 51588], 'temperature': 0.0, 'avg_logprob': -0.14943258717374983, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.2736586928367615}, {'id': 438, 'seek': 315814, 'start': 3182.62, 'end': 3188.1, 'text': ' already give it a solution which is a bad solution the system would be stabilized the system will', 'tokens': [51588, 1217, 976, 309, 257, 3827, 597, 307, 257, 1578, 3827, 264, 1185, 576, 312, 48384, 264, 1185, 486, 51862], 'temperature': 0.0, 'avg_logprob': -0.14943258717374983, 'compression_ratio': 1.8571428571428572, 'no_speech_prob': 0.2736586928367615}, {'id': 439, 'seek': 318810, 'start': 3188.1, 'end': 3193.58, 'text': ' not even move so I should put it in an uncomfortable position where it does system solution is not', 'tokens': [50364, 406, 754, 1286, 370, 286, 820, 829, 309, 294, 364, 10532, 2535, 689, 309, 775, 1185, 3827, 307, 406, 50638], 'temperature': 0.0, 'avg_logprob': -0.13257668813069662, 'compression_ratio': 1.8715953307392996, 'no_speech_prob': 0.0008077652892097831}, {'id': 440, 'seek': 318810, 'start': 3193.58, 'end': 3198.38, 'text': " correct it's not even a correct solution so then it will do something and build up a set and", 'tokens': [50638, 3006, 309, 311, 406, 754, 257, 3006, 3827, 370, 550, 309, 486, 360, 746, 293, 1322, 493, 257, 992, 293, 50878], 'temperature': 0.0, 'avg_logprob': -0.13257668813069662, 'compression_ratio': 1.8715953307392996, 'no_speech_prob': 0.0008077652892097831}, {'id': 441, 'seek': 318810, 'start': 3198.38, 'end': 3204.58, 'text': ' eventually the solution is going to be a solution which is going to be a safe solution right so', 'tokens': [50878, 4728, 264, 3827, 307, 516, 281, 312, 257, 3827, 597, 307, 516, 281, 312, 257, 3273, 3827, 558, 370, 51188], 'temperature': 0.0, 'avg_logprob': -0.13257668813069662, 'compression_ratio': 1.8715953307392996, 'no_speech_prob': 0.0008077652892097831}, {'id': 442, 'seek': 318810, 'start': 3204.58, 'end': 3210.2999999999997, 'text': ' that is why I do not want to initialize with the universal set because as you said like in the', 'tokens': [51188, 300, 307, 983, 286, 360, 406, 528, 281, 5883, 1125, 365, 264, 11455, 992, 570, 382, 291, 848, 411, 294, 264, 51474], 'temperature': 0.0, 'avg_logprob': -0.13257668813069662, 'compression_ratio': 1.8715953307392996, 'no_speech_prob': 0.0008077652892097831}, {'id': 443, 'seek': 318810, 'start': 3210.2999999999997, 'end': 3216.3399999999997, 'text': ' universal set whichever definitions would satisfy such condition they will simply stick around and', 'tokens': [51474, 11455, 992, 24123, 21988, 576, 19319, 1270, 4188, 436, 486, 2935, 2897, 926, 293, 51776], 'temperature': 0.0, 'avg_logprob': -0.13257668813069662, 'compression_ratio': 1.8715953307392996, 'no_speech_prob': 0.0008077652892097831}, {'id': 444, 'seek': 321634, 'start': 3216.82, 'end': 3222.2200000000003, 'text': " I'll still get a solution but I'll get a bad solution I'll not get the smallest in that", 'tokens': [50388, 286, 603, 920, 483, 257, 3827, 457, 286, 603, 483, 257, 1578, 3827, 286, 603, 406, 483, 264, 16998, 294, 300, 50658], 'temperature': 0.0, 'avg_logprob': -0.2517600953578949, 'compression_ratio': 1.767741935483871, 'no_speech_prob': 0.00804105494171381}, {'id': 445, 'seek': 321634, 'start': 3222.2200000000003, 'end': 3234.2200000000003, 'text': ' environment right yeah because see that that is the guide idea right so when we apply these', 'tokens': [50658, 2823, 558, 1338, 570, 536, 300, 300, 307, 264, 5934, 1558, 558, 370, 562, 321, 3079, 613, 51258], 'temperature': 0.0, 'avg_logprob': -0.2517600953578949, 'compression_ratio': 1.767741935483871, 'no_speech_prob': 0.00804105494171381}, {'id': 446, 'seek': 321634, 'start': 3234.2200000000003, 'end': 3241.42, 'text': ' equations when we apply these equations actually if you think about it I do not because I have', 'tokens': [51258, 11787, 562, 321, 3079, 613, 11787, 767, 498, 291, 519, 466, 309, 286, 360, 406, 570, 286, 362, 51618], 'temperature': 0.0, 'avg_logprob': -0.2517600953578949, 'compression_ratio': 1.767741935483871, 'no_speech_prob': 0.00804105494171381}, {'id': 447, 'seek': 324142, 'start': 3241.42, 'end': 3247.58, 'text': ' got rid of the control flow graph now these are just set of equations for me the there is no', 'tokens': [50364, 658, 3973, 295, 264, 1969, 3095, 4295, 586, 613, 366, 445, 992, 295, 11787, 337, 385, 264, 456, 307, 572, 50672], 'temperature': 0.0, 'avg_logprob': -0.10810079467430543, 'compression_ratio': 1.8300970873786409, 'no_speech_prob': 0.07311256229877472}, {'id': 448, 'seek': 324142, 'start': 3247.58, 'end': 3252.7400000000002, 'text': " ordering there there are just a set of equations it's a set of equation not a sequence of equations", 'tokens': [50672, 21739, 456, 456, 366, 445, 257, 992, 295, 11787, 309, 311, 257, 992, 295, 5367, 406, 257, 8310, 295, 11787, 50930], 'temperature': 0.0, 'avg_logprob': -0.10810079467430543, 'compression_ratio': 1.8300970873786409, 'no_speech_prob': 0.07311256229877472}, {'id': 449, 'seek': 324142, 'start': 3252.7400000000002, 'end': 3260.14, 'text': ' so now the way I do my updates that does not matter I can do this updates in any way and to', 'tokens': [50930, 370, 586, 264, 636, 286, 360, 452, 9205, 300, 775, 406, 1871, 286, 393, 360, 341, 9205, 294, 604, 636, 293, 281, 51300], 'temperature': 0.0, 'avg_logprob': -0.10810079467430543, 'compression_ratio': 1.8300970873786409, 'no_speech_prob': 0.07311256229877472}, {'id': 450, 'seek': 324142, 'start': 3260.14, 'end': 3265.06, 'text': ' do that my right hand side should also already have some assignments otherwise I will not be', 'tokens': [51300, 360, 300, 452, 558, 1011, 1252, 820, 611, 1217, 362, 512, 22546, 5911, 286, 486, 406, 312, 51546], 'temperature': 0.0, 'avg_logprob': -0.10810079467430543, 'compression_ratio': 1.8300970873786409, 'no_speech_prob': 0.07311256229877472}, {'id': 451, 'seek': 326506, 'start': 3265.06, 'end': 3272.58, 'text': " able to compute the left hand side so I'll just fix my short set which is my beginning of my basic", 'tokens': [50364, 1075, 281, 14722, 264, 1411, 1011, 1252, 370, 286, 603, 445, 3191, 452, 2099, 992, 597, 307, 452, 2863, 295, 452, 3875, 50740], 'temperature': 0.0, 'avg_logprob': -0.155486738178092, 'compression_ratio': 1.586021505376344, 'no_speech_prob': 0.16806548833847046}, {'id': 452, 'seek': 326506, 'start': 3272.58, 'end': 3282.7799999999997, 'text': ' block to the correct solution and everything else while I initialize to empty right so now I am free', 'tokens': [50740, 3461, 281, 264, 3006, 3827, 293, 1203, 1646, 1339, 286, 5883, 1125, 281, 6707, 558, 370, 586, 286, 669, 1737, 51250], 'temperature': 0.0, 'avg_logprob': -0.155486738178092, 'compression_ratio': 1.586021505376344, 'no_speech_prob': 0.16806548833847046}, {'id': 453, 'seek': 326506, 'start': 3282.7799999999997, 'end': 3288.38, 'text': " to choose any equation I will just update it and I'll let go of that I'll pick anything updated", 'tokens': [51250, 281, 2826, 604, 5367, 286, 486, 445, 5623, 309, 293, 286, 603, 718, 352, 295, 300, 286, 603, 1888, 1340, 10588, 51530], 'temperature': 0.0, 'avg_logprob': -0.155486738178092, 'compression_ratio': 1.586021505376344, 'no_speech_prob': 0.16806548833847046}, {'id': 454, 'seek': 328838, 'start': 3288.38, 'end': 3296.82, 'text': ' because I have already have things initialized I do not have to bother outsets depend on insets', 'tokens': [50364, 570, 286, 362, 1217, 362, 721, 5883, 1602, 286, 360, 406, 362, 281, 8677, 14758, 1385, 5672, 322, 1028, 1385, 50786], 'temperature': 0.0, 'avg_logprob': -0.24991172902724323, 'compression_ratio': 1.8333333333333333, 'no_speech_prob': 0.030977249145507812}, {'id': 455, 'seek': 328838, 'start': 3296.82, 'end': 3305.78, 'text': ' and insets also depend on outsets because of this guy right so the beginning the in depends on the', 'tokens': [50786, 293, 1028, 1385, 611, 5672, 322, 14758, 1385, 570, 295, 341, 2146, 558, 370, 264, 2863, 264, 294, 5946, 322, 264, 51234], 'temperature': 0.0, 'avg_logprob': -0.24991172902724323, 'compression_ratio': 1.8333333333333333, 'no_speech_prob': 0.030977249145507812}, {'id': 456, 'seek': 328838, 'start': 3305.78, 'end': 3315.7400000000002, 'text': ' outs of the free dc sets and at the end out depends on the in of the current how', 'tokens': [51234, 14758, 295, 264, 1737, 274, 66, 6352, 293, 412, 264, 917, 484, 5946, 322, 264, 294, 295, 264, 2190, 577, 51732], 'temperature': 0.0, 'avg_logprob': -0.24991172902724323, 'compression_ratio': 1.8333333333333333, 'no_speech_prob': 0.030977249145507812}, {'id': 457, 'seek': 331838, 'start': 3319.34, 'end': 3327.98, 'text': " no it is you're just putting it as empty for the time yeah yeah huh so in this case when you put", 'tokens': [50412, 572, 309, 307, 291, 434, 445, 3372, 309, 382, 6707, 337, 264, 565, 1338, 1338, 7020, 370, 294, 341, 1389, 562, 291, 829, 50844], 'temperature': 0.0, 'avg_logprob': -0.18658919767899948, 'compression_ratio': 1.9572192513368984, 'no_speech_prob': 0.007337893359363079}, {'id': 458, 'seek': 331838, 'start': 3327.98, 'end': 3331.82, 'text': ' the in the left hand side will be a different it will be empty and the right hand side will', 'tokens': [50844, 264, 294, 264, 1411, 1011, 1252, 486, 312, 257, 819, 309, 486, 312, 6707, 293, 264, 558, 1011, 1252, 486, 51036], 'temperature': 0.0, 'avg_logprob': -0.18658919767899948, 'compression_ratio': 1.9572192513368984, 'no_speech_prob': 0.007337893359363079}, {'id': 459, 'seek': 331838, 'start': 3331.82, 'end': 3340.46, 'text': ' be get computed and that is what is doing this this thing right this chaotic thing right so', 'tokens': [51036, 312, 483, 40610, 293, 300, 307, 437, 307, 884, 341, 341, 551, 558, 341, 27013, 551, 558, 370, 51468], 'temperature': 0.0, 'avg_logprob': -0.18658919767899948, 'compression_ratio': 1.9572192513368984, 'no_speech_prob': 0.007337893359363079}, {'id': 460, 'seek': 331838, 'start': 3340.46, 'end': 3345.5, 'text': ' so whenever like here you will say you are whenever you are computing this in guy you', 'tokens': [51468, 370, 5699, 411, 510, 291, 486, 584, 291, 366, 5699, 291, 366, 15866, 341, 294, 2146, 291, 51720], 'temperature': 0.0, 'avg_logprob': -0.18658919767899948, 'compression_ratio': 1.9572192513368984, 'no_speech_prob': 0.007337893359363079}, {'id': 461, 'seek': 334550, 'start': 3345.54, 'end': 3350.94, 'text': ' will assume your out which is nothing but into to be empty but you will get a new value for in', 'tokens': [50366, 486, 6552, 428, 484, 597, 307, 1825, 457, 666, 281, 312, 6707, 457, 291, 486, 483, 257, 777, 2158, 337, 294, 50636], 'temperature': 0.0, 'avg_logprob': -0.2059018828652122, 'compression_ratio': 1.626086956521739, 'no_speech_prob': 0.006232844199985266}, {'id': 462, 'seek': 334550, 'start': 3350.94, 'end': 3359.58, 'text': " very good question let's see why should it stabilize okay so so this is referred to a", 'tokens': [50636, 588, 665, 1168, 718, 311, 536, 983, 820, 309, 31870, 1392, 370, 370, 341, 307, 10839, 281, 257, 51068], 'temperature': 0.0, 'avg_logprob': -0.2059018828652122, 'compression_ratio': 1.626086956521739, 'no_speech_prob': 0.006232844199985266}, {'id': 463, 'seek': 334550, 'start': 3359.58, 'end': 3364.94, 'text': " six point computation I mean just again don't bother now let's try to sketch the whole algorithm", 'tokens': [51068, 2309, 935, 24903, 286, 914, 445, 797, 500, 380, 8677, 586, 718, 311, 853, 281, 12325, 264, 1379, 9284, 51336], 'temperature': 0.0, 'avg_logprob': -0.2059018828652122, 'compression_ratio': 1.626086956521739, 'no_speech_prob': 0.006232844199985266}, {'id': 464, 'seek': 334550, 'start': 3364.94, 'end': 3373.06, 'text': ' exactly what are we trying to do so to begin with we start with doing initialization I forget to', 'tokens': [51336, 2293, 437, 366, 321, 1382, 281, 360, 370, 281, 1841, 365, 321, 722, 365, 884, 5883, 2144, 286, 2870, 281, 51742], 'temperature': 0.0, 'avg_logprob': -0.2059018828652122, 'compression_ratio': 1.626086956521739, 'no_speech_prob': 0.006232844199985266}, {'id': 465, 'seek': 337306, 'start': 3373.06, 'end': 3385.66, 'text': ' and that works because it is empty so yeah so so this is my initialization so I initialize all', 'tokens': [50364, 293, 300, 1985, 570, 309, 307, 6707, 370, 1338, 370, 370, 341, 307, 452, 5883, 2144, 370, 286, 5883, 1125, 439, 50994], 'temperature': 0.0, 'avg_logprob': -0.3325448989868164, 'compression_ratio': 1.7117647058823529, 'no_speech_prob': 0.00501661840826273}, {'id': 466, 'seek': 337306, 'start': 3385.66, 'end': 3393.98, 'text': " my insets to empty outsets I put them to gen I mean I'll see I hoping to save an iteration", 'tokens': [50994, 452, 1028, 1385, 281, 6707, 14758, 1385, 286, 829, 552, 281, 1049, 286, 914, 286, 603, 536, 286, 7159, 281, 3155, 364, 24784, 51410], 'temperature': 0.0, 'avg_logprob': -0.3325448989868164, 'compression_ratio': 1.7117647058823529, 'no_speech_prob': 0.00501661840826273}, {'id': 467, 'seek': 337306, 'start': 3393.98, 'end': 3399.2999999999997, 'text': " that's all like maybe one more iteration it would have stabilized one iteration earlier it will stabilize", 'tokens': [51410, 300, 311, 439, 411, 1310, 472, 544, 24784, 309, 576, 362, 48384, 472, 24784, 3071, 309, 486, 31870, 51676], 'temperature': 0.0, 'avg_logprob': -0.3325448989868164, 'compression_ratio': 1.7117647058823529, 'no_speech_prob': 0.00501661840826273}, {'id': 468, 'seek': 339930, 'start': 3399.3, 'end': 3404.0600000000004, 'text': " again so that's not the marriage don't work I could have just done it empty also would not", 'tokens': [50364, 797, 370, 300, 311, 406, 264, 7194, 500, 380, 589, 286, 727, 362, 445, 1096, 309, 6707, 611, 576, 406, 50602], 'temperature': 0.0, 'avg_logprob': -0.267888349645278, 'compression_ratio': 1.82, 'no_speech_prob': 0.006422417238354683}, {'id': 469, 'seek': 339930, 'start': 3404.0600000000004, 'end': 3410.1400000000003, 'text': ' have changed anything okay so next what should I do how should I set it up so this is my', 'tokens': [50602, 362, 3105, 1340, 1392, 370, 958, 437, 820, 286, 360, 577, 820, 286, 992, 309, 493, 370, 341, 307, 452, 50906], 'temperature': 0.0, 'avg_logprob': -0.267888349645278, 'compression_ratio': 1.82, 'no_speech_prob': 0.006422417238354683}, {'id': 470, 'seek': 339930, 'start': 3410.1400000000003, 'end': 3419.54, 'text': ' initialization after this how should I set it up for the entry block is not the universal set', 'tokens': [50906, 5883, 2144, 934, 341, 577, 820, 286, 992, 309, 493, 337, 264, 8729, 3461, 307, 406, 264, 11455, 992, 51376], 'temperature': 0.0, 'avg_logprob': -0.267888349645278, 'compression_ratio': 1.82, 'no_speech_prob': 0.006422417238354683}, {'id': 471, 'seek': 339930, 'start': 3419.54, 'end': 3423.7000000000003, 'text': ' the entry block is also the empty set right reaching definitions is empty at the beginning', 'tokens': [51376, 264, 8729, 3461, 307, 611, 264, 6707, 992, 558, 9906, 21988, 307, 6707, 412, 264, 2863, 51584], 'temperature': 0.0, 'avg_logprob': -0.267888349645278, 'compression_ratio': 1.82, 'no_speech_prob': 0.006422417238354683}, {'id': 472, 'seek': 342370, 'start': 3423.7, 'end': 3430.7, 'text': ' so this takes care of this but you are right when I should have us in other cases in any other', 'tokens': [50364, 370, 341, 2516, 1127, 295, 341, 457, 291, 366, 558, 562, 286, 820, 362, 505, 294, 661, 3331, 294, 604, 661, 50714], 'temperature': 0.0, 'avg_logprob': -0.15690029028690222, 'compression_ratio': 1.7798165137614679, 'no_speech_prob': 0.054324813187122345}, {'id': 473, 'seek': 342370, 'start': 3430.7, 'end': 3434.5, 'text': ' cases it could be the initialization set and the actual value may be different so then I will have', 'tokens': [50714, 3331, 309, 727, 312, 264, 5883, 2144, 992, 293, 264, 3539, 2158, 815, 312, 819, 370, 550, 286, 486, 362, 50904], 'temperature': 0.0, 'avg_logprob': -0.15690029028690222, 'compression_ratio': 1.7798165137614679, 'no_speech_prob': 0.054324813187122345}, {'id': 474, 'seek': 342370, 'start': 3434.5, 'end': 3443.14, 'text': " to set it agree separately but in this case it works so I don't have to bother so then what do", 'tokens': [50904, 281, 992, 309, 3986, 14759, 457, 294, 341, 1389, 309, 1985, 370, 286, 500, 380, 362, 281, 8677, 370, 550, 437, 360, 51336], 'temperature': 0.0, 'avg_logprob': -0.15690029028690222, 'compression_ratio': 1.7798165137614679, 'no_speech_prob': 0.054324813187122345}, {'id': 475, 'seek': 342370, 'start': 3443.14, 'end': 3451.2599999999998, 'text': " I need to do so I need to so let's say now I'll use this flag to say that have I reached a solution", 'tokens': [51336, 286, 643, 281, 360, 370, 286, 643, 281, 370, 718, 311, 584, 586, 286, 603, 764, 341, 7166, 281, 584, 300, 362, 286, 6488, 257, 3827, 51742], 'temperature': 0.0, 'avg_logprob': -0.15690029028690222, 'compression_ratio': 1.7798165137614679, 'no_speech_prob': 0.054324813187122345}, {'id': 476, 'seek': 345126, 'start': 3451.5800000000004, 'end': 3458.82, 'text': ' so I will simply set this flag to whenever I have reached a solution what is a solution a solution', 'tokens': [50380, 370, 286, 486, 2935, 992, 341, 7166, 281, 5699, 286, 362, 6488, 257, 3827, 437, 307, 257, 3827, 257, 3827, 50742], 'temperature': 0.0, 'avg_logprob': -0.16976608447174527, 'compression_ratio': 1.8280254777070064, 'no_speech_prob': 0.021788986399769783}, {'id': 477, 'seek': 345126, 'start': 3458.82, 'end': 3464.6200000000003, 'text': ' is basically remember what is the solution the solution is the in and out of all basic blocks', 'tokens': [50742, 307, 1936, 1604, 437, 307, 264, 3827, 264, 3827, 307, 264, 294, 293, 484, 295, 439, 3875, 8474, 51032], 'temperature': 0.0, 'avg_logprob': -0.16976608447174527, 'compression_ratio': 1.8280254777070064, 'no_speech_prob': 0.021788986399769783}, {'id': 478, 'seek': 345126, 'start': 3464.6200000000003, 'end': 3474.78, 'text': ' not one basic block right so I have to check if none of these guys change then I will say that', 'tokens': [51032, 406, 472, 3875, 3461, 558, 370, 286, 362, 281, 1520, 498, 6022, 295, 613, 1074, 1319, 550, 286, 486, 584, 300, 51540], 'temperature': 0.0, 'avg_logprob': -0.16976608447174527, 'compression_ratio': 1.8280254777070064, 'no_speech_prob': 0.021788986399769783}, {'id': 479, 'seek': 347478, 'start': 3475.02, 'end': 3483.5400000000004, 'text': ' okay I have got a solution you understand that right so the solution is not the in or out of', 'tokens': [50376, 1392, 286, 362, 658, 257, 3827, 291, 1223, 300, 558, 370, 264, 3827, 307, 406, 264, 294, 420, 484, 295, 50802], 'temperature': 0.0, 'avg_logprob': -0.16196593417916247, 'compression_ratio': 2.0594594594594593, 'no_speech_prob': 0.026514537632465363}, {'id': 480, 'seek': 347478, 'start': 3483.5400000000004, 'end': 3488.38, 'text': " one basic block it's the in and out of the all the basic blocks right so you have to run through", 'tokens': [50802, 472, 3875, 3461, 309, 311, 264, 294, 293, 484, 295, 264, 439, 264, 3875, 8474, 558, 370, 291, 362, 281, 1190, 807, 51044], 'temperature': 0.0, 'avg_logprob': -0.16196593417916247, 'compression_ratio': 2.0594594594594593, 'no_speech_prob': 0.026514537632465363}, {'id': 481, 'seek': 347478, 'start': 3488.38, 'end': 3492.5, 'text': ' the whole basic all the basic blocks so your check for termination is what run through all', 'tokens': [51044, 264, 1379, 3875, 439, 264, 3875, 8474, 370, 428, 1520, 337, 1433, 2486, 307, 437, 1190, 807, 439, 51250], 'temperature': 0.0, 'avg_logprob': -0.16196593417916247, 'compression_ratio': 2.0594594594594593, 'no_speech_prob': 0.026514537632465363}, {'id': 482, 'seek': 347478, 'start': 3492.5, 'end': 3499.5800000000004, 'text': ' the basic blocks ensure there is no change in any of them right so that is my flag then what do I do', 'tokens': [51250, 264, 3875, 8474, 5586, 456, 307, 572, 1319, 294, 604, 295, 552, 558, 370, 300, 307, 452, 7166, 550, 437, 360, 286, 360, 51604], 'temperature': 0.0, 'avg_logprob': -0.16196593417916247, 'compression_ratio': 2.0594594594594593, 'no_speech_prob': 0.026514537632465363}, {'id': 483, 'seek': 349958, 'start': 3499.58, 'end': 3509.46, 'text': " yes we'll apply the equations so basically we'll keep on doing it till the flag stabilizes we'll", 'tokens': [50364, 2086, 321, 603, 3079, 264, 11787, 370, 1936, 321, 603, 1066, 322, 884, 309, 4288, 264, 7166, 11652, 5660, 321, 603, 50858], 'temperature': 0.0, 'avg_logprob': -0.17641929785410562, 'compression_ratio': 1.5944444444444446, 'no_speech_prob': 0.010178635828197002}, {'id': 484, 'seek': 349958, 'start': 3509.46, 'end': 3515.06, 'text': " start with taking flag as false I don't know why I did that but you get no no I wanted to enter", 'tokens': [50858, 722, 365, 1940, 7166, 382, 7908, 286, 500, 380, 458, 983, 286, 630, 300, 457, 291, 483, 572, 572, 286, 1415, 281, 3242, 51138], 'temperature': 0.0, 'avg_logprob': -0.17641929785410562, 'compression_ratio': 1.5944444444444446, 'no_speech_prob': 0.010178635828197002}, {'id': 485, 'seek': 349958, 'start': 3515.06, 'end': 3526.46, 'text': ' the value so okay so now so this is where the actual business is happening so for all my basic', 'tokens': [51138, 264, 2158, 370, 1392, 370, 586, 370, 341, 307, 689, 264, 3539, 1606, 307, 2737, 370, 337, 439, 452, 3875, 51708], 'temperature': 0.0, 'avg_logprob': -0.17641929785410562, 'compression_ratio': 1.5944444444444446, 'no_speech_prob': 0.010178635828197002}, {'id': 486, 'seek': 352646, 'start': 3526.46, 'end': 3535.14, 'text': ' blocks in my set of basic blocks n I simply compute a new value of in depending on the', 'tokens': [50364, 8474, 294, 452, 992, 295, 3875, 8474, 297, 286, 2935, 14722, 257, 777, 2158, 295, 294, 5413, 322, 264, 50798], 'temperature': 0.0, 'avg_logprob': -0.12907417085435655, 'compression_ratio': 1.7980295566502462, 'no_speech_prob': 0.07347908616065979}, {'id': 487, 'seek': 352646, 'start': 3535.14, 'end': 3541.58, 'text': " outs that I get see here the I've not used the older in right that is was one conclusion", 'tokens': [50798, 14758, 300, 286, 483, 536, 510, 264, 286, 600, 406, 1143, 264, 4906, 294, 558, 300, 307, 390, 472, 10063, 51120], 'temperature': 0.0, 'avg_logprob': -0.12907417085435655, 'compression_ratio': 1.7980295566502462, 'no_speech_prob': 0.07347908616065979}, {'id': 488, 'seek': 352646, 'start': 3541.58, 'end': 3548.34, 'text': ' somebody had and then I then I check if this new in that I got is it different than the earlier', 'tokens': [51120, 2618, 632, 293, 550, 286, 550, 286, 1520, 498, 341, 777, 294, 300, 286, 658, 307, 309, 819, 813, 264, 3071, 51458], 'temperature': 0.0, 'avg_logprob': -0.12907417085435655, 'compression_ratio': 1.7980295566502462, 'no_speech_prob': 0.07347908616065979}, {'id': 489, 'seek': 352646, 'start': 3548.34, 'end': 3555.06, 'text': ' in or not right if it is different than the earlier in then I have to continue my flag cannot', 'tokens': [51458, 294, 420, 406, 558, 498, 309, 307, 819, 813, 264, 3071, 294, 550, 286, 362, 281, 2354, 452, 7166, 2644, 51794], 'temperature': 0.0, 'avg_logprob': -0.12907417085435655, 'compression_ratio': 1.7980295566502462, 'no_speech_prob': 0.07347908616065979}, {'id': 490, 'seek': 355506, 'start': 3555.06, 'end': 3563.42, 'text': ' become true sorry the flag flag will remain false I mean it will not which which side did I see yeah', 'tokens': [50364, 1813, 2074, 2597, 264, 7166, 7166, 486, 6222, 7908, 286, 914, 309, 486, 406, 597, 597, 1252, 630, 286, 536, 1338, 50782], 'temperature': 0.0, 'avg_logprob': -0.1602204132080078, 'compression_ratio': 1.6820809248554913, 'no_speech_prob': 0.020235426723957062}, {'id': 491, 'seek': 355506, 'start': 3563.42, 'end': 3574.14, 'text': ' okay you got it right so okay so then so if new in is not equal to in then I set my flag to true', 'tokens': [50782, 1392, 291, 658, 309, 558, 370, 1392, 370, 550, 370, 498, 777, 294, 307, 406, 2681, 281, 294, 550, 286, 992, 452, 7166, 281, 2074, 51318], 'temperature': 0.0, 'avg_logprob': -0.1602204132080078, 'compression_ratio': 1.6820809248554913, 'no_speech_prob': 0.020235426723957062}, {'id': 492, 'seek': 355506, 'start': 3574.14, 'end': 3579.98, 'text': ' that means I I have still not done yet I again need to recompute my solutions and I update my', 'tokens': [51318, 300, 1355, 286, 286, 362, 920, 406, 1096, 1939, 286, 797, 643, 281, 48000, 1169, 452, 6547, 293, 286, 5623, 452, 51610], 'temperature': 0.0, 'avg_logprob': -0.1602204132080078, 'compression_ratio': 1.6820809248554913, 'no_speech_prob': 0.020235426723957062}, {'id': 493, 'seek': 357998, 'start': 3579.98, 'end': 3587.64, 'text': ' equations right I update my in B to be the new in and correspondingly update my out to the new', 'tokens': [50364, 11787, 558, 286, 5623, 452, 294, 363, 281, 312, 264, 777, 294, 293, 11760, 356, 5623, 452, 484, 281, 264, 777, 50747], 'temperature': 0.0, 'avg_logprob': -0.15909084360650244, 'compression_ratio': 1.5284552845528456, 'no_speech_prob': 0.06350822746753693}, {'id': 494, 'seek': 357998, 'start': 3587.64, 'end': 3600.26, 'text': ' value that is all that there is very simple very clean very neat right so stare at this for a', 'tokens': [50747, 2158, 300, 307, 439, 300, 456, 307, 588, 2199, 588, 2541, 588, 10654, 558, 370, 22432, 412, 341, 337, 257, 51378], 'temperature': 0.0, 'avg_logprob': -0.15909084360650244, 'compression_ratio': 1.5284552845528456, 'no_speech_prob': 0.06350822746753693}, {'id': 495, 'seek': 360026, 'start': 3600.26, 'end': 3609.86, 'text': ' moment make sure you understand it so notice that this is the part which is actually talking', 'tokens': [50364, 1623, 652, 988, 291, 1223, 309, 370, 3449, 300, 341, 307, 264, 644, 597, 307, 767, 1417, 50844], 'temperature': 0.0, 'avg_logprob': -0.09890498644039955, 'compression_ratio': 2.160919540229885, 'no_speech_prob': 0.5989366769790649}, {'id': 496, 'seek': 360026, 'start': 3609.86, 'end': 3618.6200000000003, 'text': ' about one solution right this is the part because solution is remember the solution was all the', 'tokens': [50844, 466, 472, 3827, 558, 341, 307, 264, 644, 570, 3827, 307, 1604, 264, 3827, 390, 439, 264, 51282], 'temperature': 0.0, 'avg_logprob': -0.09890498644039955, 'compression_ratio': 2.160919540229885, 'no_speech_prob': 0.5989366769790649}, {'id': 497, 'seek': 360026, 'start': 3618.6200000000003, 'end': 3624.6200000000003, 'text': ' ins and outs right so this is the part which is actually talking about one solution and if', 'tokens': [51282, 1028, 293, 14758, 558, 370, 341, 307, 264, 644, 597, 307, 767, 1417, 466, 472, 3827, 293, 498, 51582], 'temperature': 0.0, 'avg_logprob': -0.09890498644039955, 'compression_ratio': 2.160919540229885, 'no_speech_prob': 0.5989366769790649}, {'id': 498, 'seek': 360026, 'start': 3624.6200000000003, 'end': 3629.0600000000004, 'text': ' the solution changes we go back in the loop so this loop is only just checking one solution this', 'tokens': [51582, 264, 3827, 2962, 321, 352, 646, 294, 264, 6367, 370, 341, 6367, 307, 787, 445, 8568, 472, 3827, 341, 51804], 'temperature': 0.0, 'avg_logprob': -0.09890498644039955, 'compression_ratio': 2.160919540229885, 'no_speech_prob': 0.5989366769790649}, {'id': 499, 'seek': 362906, 'start': 3629.06, 'end': 3644.94, 'text': ' is check solution okay so so equations of the form like okay we will come to fixed point theory', 'tokens': [50364, 307, 1520, 3827, 1392, 370, 370, 11787, 295, 264, 1254, 411, 1392, 321, 486, 808, 281, 6806, 935, 5261, 51158], 'temperature': 0.0, 'avg_logprob': -0.1945430694087859, 'compression_ratio': 1.912751677852349, 'no_speech_prob': 0.00780770368874073}, {'id': 500, 'seek': 362906, 'start': 3644.94, 'end': 3649.34, 'text': ' we will talk so these are these equation these sort of equations where things can depend on', 'tokens': [51158, 321, 486, 751, 370, 613, 366, 613, 5367, 613, 1333, 295, 11787, 689, 721, 393, 5672, 322, 51378], 'temperature': 0.0, 'avg_logprob': -0.1945430694087859, 'compression_ratio': 1.912751677852349, 'no_speech_prob': 0.00780770368874073}, {'id': 501, 'seek': 362906, 'start': 3649.34, 'end': 3655.18, 'text': ' itself so these equations are called fixed point equations and a solution such that f of x equals', 'tokens': [51378, 2564, 370, 613, 11787, 366, 1219, 6806, 935, 11787, 293, 257, 3827, 1270, 300, 283, 295, 2031, 6915, 51670], 'temperature': 0.0, 'avg_logprob': -0.1945430694087859, 'compression_ratio': 1.912751677852349, 'no_speech_prob': 0.00780770368874073}, {'id': 502, 'seek': 365518, 'start': 3655.18, 'end': 3661.14, 'text': " x is referred to as a solution to these equations which is essentially what it means is so it's", 'tokens': [50364, 2031, 307, 10839, 281, 382, 257, 3827, 281, 613, 11787, 597, 307, 4476, 437, 309, 1355, 307, 370, 309, 311, 50662], 'temperature': 0.0, 'avg_logprob': -0.16231904131300906, 'compression_ratio': 1.9108910891089108, 'no_speech_prob': 0.3840535581111908}, {'id': 503, 'seek': 365518, 'start': 3661.14, 'end': 3667.2599999999998, 'text': " sort of it has reached a saddle point it does not change from there that's what it's called a fixed", 'tokens': [50662, 1333, 295, 309, 575, 6488, 257, 30459, 935, 309, 775, 406, 1319, 490, 456, 300, 311, 437, 309, 311, 1219, 257, 6806, 50968], 'temperature': 0.0, 'avg_logprob': -0.16231904131300906, 'compression_ratio': 1.9108910891089108, 'no_speech_prob': 0.3840535581111908}, {'id': 504, 'seek': 365518, 'start': 3667.2599999999998, 'end': 3673.4199999999996, 'text': " point it just gets fixed there not unique it's just that the solution doesn't move from there so", 'tokens': [50968, 935, 309, 445, 2170, 6806, 456, 406, 3845, 309, 311, 445, 300, 264, 3827, 1177, 380, 1286, 490, 456, 370, 51276], 'temperature': 0.0, 'avg_logprob': -0.16231904131300906, 'compression_ratio': 1.9108910891089108, 'no_speech_prob': 0.3840535581111908}, {'id': 505, 'seek': 365518, 'start': 3673.4199999999996, 'end': 3678.8999999999996, 'text': ' essentially what it means means is that see fx equals x it means that if I take x and I apply', 'tokens': [51276, 4476, 437, 309, 1355, 1355, 307, 300, 536, 283, 87, 6915, 2031, 309, 1355, 300, 498, 286, 747, 2031, 293, 286, 3079, 51550], 'temperature': 0.0, 'avg_logprob': -0.16231904131300906, 'compression_ratio': 1.9108910891089108, 'no_speech_prob': 0.3840535581111908}, {'id': 506, 'seek': 367890, 'start': 3679.38, 'end': 3685.9, 'text': ' again I get the same x back so if a solution x0 satisfies this particular condition then I would', 'tokens': [50388, 797, 286, 483, 264, 912, 2031, 646, 370, 498, 257, 3827, 2031, 15, 44271, 341, 1729, 4188, 550, 286, 576, 50714], 'temperature': 0.0, 'avg_logprob': -0.2319613297780355, 'compression_ratio': 1.6914285714285715, 'no_speech_prob': 0.14334718883037567}, {'id': 507, 'seek': 367890, 'start': 3685.9, 'end': 3694.3, 'text': ' say that x0 is a fixed point solution of x of the function f so fixed point theory is a is a theory', 'tokens': [50714, 584, 300, 2031, 15, 307, 257, 6806, 935, 3827, 295, 2031, 295, 264, 2445, 283, 370, 6806, 935, 5261, 307, 257, 307, 257, 5261, 51134], 'temperature': 0.0, 'avg_logprob': -0.2319613297780355, 'compression_ratio': 1.6914285714285715, 'no_speech_prob': 0.14334718883037567}, {'id': 508, 'seek': 367890, 'start': 3694.3, 'end': 3708.38, 'text': " itself it's a lot so it's essentially studies such functions well no it says that the definition is", 'tokens': [51134, 2564, 309, 311, 257, 688, 370, 309, 311, 4476, 5313, 1270, 6828, 731, 572, 309, 1619, 300, 264, 7123, 307, 51838], 'temperature': 0.0, 'avg_logprob': -0.2319613297780355, 'compression_ratio': 1.6914285714285715, 'no_speech_prob': 0.14334718883037567}, {'id': 509, 'seek': 370838, 'start': 3708.38, 'end': 3716.98, 'text': ' that of a solution x0 is referred to as the fixed point solution of a function f if applying', 'tokens': [50364, 300, 295, 257, 3827, 2031, 15, 307, 10839, 281, 382, 264, 6806, 935, 3827, 295, 257, 2445, 283, 498, 9275, 50794], 'temperature': 0.0, 'avg_logprob': -0.16500350407191686, 'compression_ratio': 1.7643312101910829, 'no_speech_prob': 0.0005189208895899355}, {'id': 510, 'seek': 370838, 'start': 3716.98, 'end': 3723.9, 'text': " x0 to f gives you x0 back that's that's a definition and we are interested in this case", 'tokens': [50794, 2031, 15, 281, 283, 2709, 291, 2031, 15, 646, 300, 311, 300, 311, 257, 7123, 293, 321, 366, 3102, 294, 341, 1389, 51140], 'temperature': 0.0, 'avg_logprob': -0.16500350407191686, 'compression_ratio': 1.7643312101910829, 'no_speech_prob': 0.0005189208895899355}, {'id': 511, 'seek': 370838, 'start': 3723.9, 'end': 3733.1, 'text': ' we are interested fine fine solutions and this f in this case is the vector of all all your meet', 'tokens': [51140, 321, 366, 3102, 2489, 2489, 6547, 293, 341, 283, 294, 341, 1389, 307, 264, 8062, 295, 439, 439, 428, 1677, 51600], 'temperature': 0.0, 'avg_logprob': -0.16500350407191686, 'compression_ratio': 1.7643312101910829, 'no_speech_prob': 0.0005189208895899355}, {'id': 512, 'seek': 373310, 'start': 3733.1, 'end': 3739.66, 'text': " and join equations so it's not one equation it's the the whole vector is one question", 'tokens': [50364, 293, 3917, 11787, 370, 309, 311, 406, 472, 5367, 309, 311, 264, 264, 1379, 8062, 307, 472, 1168, 50692], 'temperature': 0.0, 'avg_logprob': -0.3779100458672706, 'compression_ratio': 1.4915254237288136, 'no_speech_prob': 0.0433521568775177}, {'id': 513, 'seek': 373310, 'start': 3739.66, 'end': 3761.02, 'text': ' I am not bothered to ask it okay are we are we good so yeah so I think we are doing a very', 'tokens': [50692, 286, 669, 406, 22996, 281, 1029, 309, 1392, 366, 321, 366, 321, 665, 370, 1338, 370, 286, 519, 321, 366, 884, 257, 588, 51760], 'temperature': 0.0, 'avg_logprob': -0.3779100458672706, 'compression_ratio': 1.4915254237288136, 'no_speech_prob': 0.0433521568775177}, {'id': 514, 'seek': 376102, 'start': 3761.02, 'end': 3766.1, 'text': ' good job of like discussing and so you guys should also do that maybe just make sure that', 'tokens': [50364, 665, 1691, 295, 411, 10850, 293, 370, 291, 1074, 820, 611, 360, 300, 1310, 445, 652, 988, 300, 50618], 'temperature': 0.0, 'avg_logprob': -0.1869459821466814, 'compression_ratio': 1.6341463414634145, 'no_speech_prob': 0.01480231061577797}, {'id': 515, 'seek': 376102, 'start': 3766.1, 'end': 3776.2599999999998, 'text': ' everybody understands and then we will get to the class so do we understand this algorithm', 'tokens': [50618, 2201, 15146, 293, 550, 321, 486, 483, 281, 264, 1508, 370, 360, 321, 1223, 341, 9284, 51126], 'temperature': 0.0, 'avg_logprob': -0.1869459821466814, 'compression_ratio': 1.6341463414634145, 'no_speech_prob': 0.01480231061577797}, {'id': 516, 'seek': 376102, 'start': 3776.2599999999998, 'end': 3781.46, 'text': ' completely any doubt anywhere even a little doubt because we will go back and implement', 'tokens': [51126, 2584, 604, 6385, 4992, 754, 257, 707, 6385, 570, 321, 486, 352, 646, 293, 4445, 51386], 'temperature': 0.0, 'avg_logprob': -0.1869459821466814, 'compression_ratio': 1.6341463414634145, 'no_speech_prob': 0.01480231061577797}, {'id': 517, 'seek': 378146, 'start': 3781.46, 'end': 3791.9, 'text': ' this is an LLVM and we will see something happening we are assuming yeah for time being', 'tokens': [50364, 341, 307, 364, 441, 43, 53, 44, 293, 321, 486, 536, 746, 2737, 321, 366, 11926, 1338, 337, 565, 885, 50886], 'temperature': 0.0, 'avg_logprob': -0.228181240170501, 'compression_ratio': 1.8186274509803921, 'no_speech_prob': 0.16756948828697205}, {'id': 518, 'seek': 378146, 'start': 3791.9, 'end': 3795.5, 'text': ' we are assuming only one instruction so only thing I have not told you is I have not told', 'tokens': [50886, 321, 366, 11926, 787, 472, 10951, 370, 787, 551, 286, 362, 406, 1907, 291, 307, 286, 362, 406, 1907, 51066], 'temperature': 0.0, 'avg_logprob': -0.228181240170501, 'compression_ratio': 1.8186274509803921, 'no_speech_prob': 0.16756948828697205}, {'id': 519, 'seek': 378146, 'start': 3795.5, 'end': 3799.9, 'text': ' you how to compute the gen and kill sets for multiple statement that is the only thing remaining', 'tokens': [51066, 291, 577, 281, 14722, 264, 1049, 293, 1961, 6352, 337, 3866, 5629, 300, 307, 264, 787, 551, 8877, 51286], 'temperature': 0.0, 'avg_logprob': -0.228181240170501, 'compression_ratio': 1.8186274509803921, 'no_speech_prob': 0.16756948828697205}, {'id': 520, 'seek': 378146, 'start': 3799.9, 'end': 3807.02, 'text': ' to be told if that is told everything else works okay if you just assume that somebody gives you', 'tokens': [51286, 281, 312, 1907, 498, 300, 307, 1907, 1203, 1646, 1985, 1392, 498, 291, 445, 6552, 300, 2618, 2709, 291, 51642], 'temperature': 0.0, 'avg_logprob': -0.228181240170501, 'compression_ratio': 1.8186274509803921, 'no_speech_prob': 0.16756948828697205}, {'id': 521, 'seek': 380702, 'start': 3807.02, 'end': 3812.38, 'text': ' a general tool set even for a multi statement basic block everything else works right we do', 'tokens': [50364, 257, 2674, 2290, 992, 754, 337, 257, 4825, 5629, 3875, 3461, 1203, 1646, 1985, 558, 321, 360, 50632], 'temperature': 0.0, 'avg_logprob': -0.4034297757032441, 'compression_ratio': 1.7064220183486238, 'no_speech_prob': 0.11948094516992569}, {'id': 522, 'seek': 380702, 'start': 3812.38, 'end': 3818.78, 'text': ' not know how to compute the general tool sets for a multi statement basic block right now this', 'tokens': [50632, 406, 458, 577, 281, 14722, 264, 2674, 2290, 6352, 337, 257, 4825, 5629, 3875, 3461, 558, 586, 341, 50952], 'temperature': 0.0, 'avg_logprob': -0.4034297757032441, 'compression_ratio': 1.7064220183486238, 'no_speech_prob': 0.11948094516992569}, {'id': 523, 'seek': 381878, 'start': 3818.78, 'end': 3835.3, 'text': ' works for you all good okay can I move okay now is the big question very good', 'tokens': [50364, 1985, 337, 291, 439, 665, 1392, 393, 286, 1286, 1392, 586, 307, 264, 955, 1168, 588, 665, 51190], 'temperature': 0.0, 'avg_logprob': -0.1908767336890811, 'compression_ratio': 1.0845070422535212, 'no_speech_prob': 0.2515898048877716}, {'id': 524, 'seek': 383530, 'start': 3835.3, 'end': 3849.26, 'text': ' okay so okay I hope others have not heard it so okay look at this data at the solution', 'tokens': [50364, 1392, 370, 1392, 286, 1454, 2357, 362, 406, 2198, 309, 370, 1392, 574, 412, 341, 1412, 412, 264, 3827, 51062], 'temperature': 0.0, 'avg_logprob': -0.25269581099688, 'compression_ratio': 1.7687074829931972, 'no_speech_prob': 0.13154783844947815}, {'id': 525, 'seek': 383530, 'start': 3849.26, 'end': 3857.6200000000003, 'text': ' and look at this algorithm and tell me that why should this halt why should I ever like', 'tokens': [51062, 293, 574, 412, 341, 9284, 293, 980, 385, 300, 983, 820, 341, 12479, 983, 820, 286, 1562, 411, 51480], 'temperature': 0.0, 'avg_logprob': -0.25269581099688, 'compression_ratio': 1.7687074829931972, 'no_speech_prob': 0.13154783844947815}, {'id': 526, 'seek': 383530, 'start': 3857.6200000000003, 'end': 3863.46, 'text': ' there was this question right this system equations why should it ever converge right', 'tokens': [51480, 456, 390, 341, 1168, 558, 341, 1185, 11787, 983, 820, 309, 1562, 41881, 558, 51772], 'temperature': 0.0, 'avg_logprob': -0.25269581099688, 'compression_ratio': 1.7687074829931972, 'no_speech_prob': 0.13154783844947815}, {'id': 527, 'seek': 386346, 'start': 3863.66, 'end': 3887.02, 'text': ' so stare at this and tell me why should it', 'tokens': [50374, 370, 22432, 412, 341, 293, 980, 385, 983, 820, 309, 51542], 'temperature': 0.0, 'avg_logprob': -0.1676679104566574, 'compression_ratio': 1.4719101123595506, 'no_speech_prob': 0.2632790505886078}, {'id': 528, 'seek': 386346, 'start': 3887.02, 'end': 3892.82, 'text': ' so you should tell me that what happens in every iteration what happens to this solution', 'tokens': [51542, 370, 291, 820, 980, 385, 300, 437, 2314, 294, 633, 24784, 437, 2314, 281, 341, 3827, 51832], 'temperature': 0.0, 'avg_logprob': -0.1676679104566574, 'compression_ratio': 1.4719101123595506, 'no_speech_prob': 0.2632790505886078}, {'id': 529, 'seek': 389282, 'start': 3893.34, 'end': 3903.3, 'text': ' that I get what happens to that solution in every iteration excellent excellent either the set', 'tokens': [50390, 300, 286, 483, 437, 2314, 281, 300, 3827, 294, 633, 24784, 7103, 7103, 2139, 264, 992, 50888], 'temperature': 0.0, 'avg_logprob': -0.1816584460706596, 'compression_ratio': 1.917948717948718, 'no_speech_prob': 0.006351176183670759}, {'id': 530, 'seek': 389282, 'start': 3903.3, 'end': 3910.38, 'text': ' sets remain the same or they increase in size they can never ever decrease in size that you', 'tokens': [50888, 6352, 6222, 264, 912, 420, 436, 3488, 294, 2744, 436, 393, 1128, 1562, 11514, 294, 2744, 300, 291, 51242], 'temperature': 0.0, 'avg_logprob': -0.1816584460706596, 'compression_ratio': 1.917948717948718, 'no_speech_prob': 0.006351176183670759}, {'id': 531, 'seek': 389282, 'start': 3910.38, 'end': 3916.46, 'text': ' are sure why is that because I am taking union of for ins I am taking the union of outs you', 'tokens': [51242, 366, 988, 983, 307, 300, 570, 286, 669, 1940, 11671, 295, 337, 1028, 286, 669, 1940, 264, 11671, 295, 14758, 291, 51546], 'temperature': 0.0, 'avg_logprob': -0.1816584460706596, 'compression_ratio': 1.917948717948718, 'no_speech_prob': 0.006351176183670759}, {'id': 532, 'seek': 389282, 'start': 3916.46, 'end': 3922.46, 'text': ' can only increase things cannot decrease things right and the gen sets are the same the gen and', 'tokens': [51546, 393, 787, 3488, 721, 2644, 11514, 721, 558, 293, 264, 1049, 6352, 366, 264, 912, 264, 1049, 293, 51846], 'temperature': 0.0, 'avg_logprob': -0.1816584460706596, 'compression_ratio': 1.917948717948718, 'no_speech_prob': 0.006351176183670759}, {'id': 533, 'seek': 392246, 'start': 3922.46, 'end': 3927.18, 'text': ' kill are the same when I computing the outs right so in the previous iteration if that will not', 'tokens': [50364, 1961, 366, 264, 912, 562, 286, 15866, 264, 14758, 558, 370, 294, 264, 3894, 24784, 498, 300, 486, 406, 50600], 'temperature': 0.0, 'avg_logprob': -0.19220562889462425, 'compression_ratio': 2.1486486486486487, 'no_speech_prob': 0.011666093952953815}, {'id': 534, 'seek': 392246, 'start': 3927.18, 'end': 3931.9, 'text': ' remove something in the next iteration also they cannot remove the sink the same thing right it', 'tokens': [50600, 4159, 746, 294, 264, 958, 24784, 611, 436, 2644, 4159, 264, 9500, 264, 912, 551, 558, 309, 50836], 'temperature': 0.0, 'avg_logprob': -0.19220562889462425, 'compression_ratio': 2.1486486486486487, 'no_speech_prob': 0.011666093952953815}, {'id': 535, 'seek': 392246, 'start': 3931.9, 'end': 3935.42, 'text': ' cannot happen that even does not remove the first iteration but even got in the second iteration', 'tokens': [50836, 2644, 1051, 300, 754, 775, 406, 4159, 264, 700, 24784, 457, 754, 658, 294, 264, 1150, 24784, 51012], 'temperature': 0.0, 'avg_logprob': -0.19220562889462425, 'compression_ratio': 2.1486486486486487, 'no_speech_prob': 0.011666093952953815}, {'id': 536, 'seek': 392246, 'start': 3935.42, 'end': 3940.5, 'text': ' that cannot happen right it is the same function the gen and the kill is the same are the same', 'tokens': [51012, 300, 2644, 1051, 558, 309, 307, 264, 912, 2445, 264, 1049, 293, 264, 1961, 307, 264, 912, 366, 264, 912, 51266], 'temperature': 0.0, 'avg_logprob': -0.19220562889462425, 'compression_ratio': 2.1486486486486487, 'no_speech_prob': 0.011666093952953815}, {'id': 537, 'seek': 392246, 'start': 3940.5, 'end': 3947.86, 'text': ' for every basic block right so can you are you convinced that the in and the outsets can only', 'tokens': [51266, 337, 633, 3875, 3461, 558, 370, 393, 291, 366, 291, 12561, 300, 264, 294, 293, 264, 14758, 1385, 393, 787, 51634], 'temperature': 0.0, 'avg_logprob': -0.19220562889462425, 'compression_ratio': 2.1486486486486487, 'no_speech_prob': 0.011666093952953815}, {'id': 538, 'seek': 394786, 'start': 3947.86, 'end': 3954.46, 'text': ' increase in size they cannot decrease in size okay good so they can only increase in size what', 'tokens': [50364, 3488, 294, 2744, 436, 2644, 11514, 294, 2744, 1392, 665, 370, 436, 393, 787, 3488, 294, 2744, 437, 50694], 'temperature': 0.0, 'avg_logprob': -0.18772472034801135, 'compression_ratio': 2.1263736263736264, 'no_speech_prob': 0.2971199154853821}, {'id': 539, 'seek': 394786, 'start': 3954.46, 'end': 3960.54, 'text': ' is the largest size that they can grow to the number of definitions the universal set so there', 'tokens': [50694, 307, 264, 6443, 2744, 300, 436, 393, 1852, 281, 264, 1230, 295, 21988, 264, 11455, 992, 370, 456, 50998], 'temperature': 0.0, 'avg_logprob': -0.18772472034801135, 'compression_ratio': 2.1263736263736264, 'no_speech_prob': 0.2971199154853821}, {'id': 540, 'seek': 394786, 'start': 3960.54, 'end': 3968.34, 'text': ' is a there is there is upper bound and there is upper one to this also so so so it is bounded by', 'tokens': [50998, 307, 257, 456, 307, 456, 307, 6597, 5472, 293, 456, 307, 6597, 472, 281, 341, 611, 370, 370, 370, 309, 307, 37498, 538, 51388], 'temperature': 0.0, 'avg_logprob': -0.18772472034801135, 'compression_ratio': 2.1263736263736264, 'no_speech_prob': 0.2971199154853821}, {'id': 541, 'seek': 394786, 'start': 3968.34, 'end': 3975.98, 'text': ' the totals the universal set of definitions right so eventually if it keeps on increasing at most in', 'tokens': [51388, 264, 1993, 1124, 264, 11455, 992, 295, 21988, 558, 370, 4728, 498, 309, 5965, 322, 5662, 412, 881, 294, 51770], 'temperature': 0.0, 'avg_logprob': -0.18772472034801135, 'compression_ratio': 2.1263736263736264, 'no_speech_prob': 0.2971199154853821}, {'id': 542, 'seek': 397598, 'start': 3975.98, 'end': 3980.62, 'text': ' the worst case it can go and hit the ceiling if there is a ceiling right the ceiling is a set of', 'tokens': [50364, 264, 5855, 1389, 309, 393, 352, 293, 2045, 264, 13655, 498, 456, 307, 257, 13655, 558, 264, 13655, 307, 257, 992, 295, 50596], 'temperature': 0.0, 'avg_logprob': -0.13506518588976912, 'compression_ratio': 1.8357487922705313, 'no_speech_prob': 0.012792619876563549}, {'id': 543, 'seek': 397598, 'start': 3980.62, 'end': 3985.22, 'text': ' all definitions right so it cannot grow beyond that so this guy someday or the other has to halt', 'tokens': [50596, 439, 21988, 558, 370, 309, 2644, 1852, 4399, 300, 370, 341, 2146, 19412, 420, 264, 661, 575, 281, 12479, 50826], 'temperature': 0.0, 'avg_logprob': -0.13506518588976912, 'compression_ratio': 1.8357487922705313, 'no_speech_prob': 0.012792619876563549}, {'id': 544, 'seek': 397598, 'start': 3985.22, 'end': 3998.66, 'text': ' right so this algorithm will surely terminate are we good with the proof do you understand', 'tokens': [50826, 558, 370, 341, 9284, 486, 11468, 10761, 473, 366, 321, 665, 365, 264, 8177, 360, 291, 1223, 51498], 'temperature': 0.0, 'avg_logprob': -0.13506518588976912, 'compression_ratio': 1.8357487922705313, 'no_speech_prob': 0.012792619876563549}, {'id': 545, 'seek': 397598, 'start': 3998.66, 'end': 4004.22, 'text': ' the proof okay now can you isolate the things in the proof what are the two things I used to do', 'tokens': [51498, 264, 8177, 1392, 586, 393, 291, 25660, 264, 721, 294, 264, 8177, 437, 366, 264, 732, 721, 286, 1143, 281, 360, 51776], 'temperature': 0.0, 'avg_logprob': -0.13506518588976912, 'compression_ratio': 1.8357487922705313, 'no_speech_prob': 0.012792619876563549}, {'id': 546, 'seek': 400422, 'start': 4004.22, 'end': 4009.3399999999997, 'text': ' the proof what are the two properties of these functions or this type of analysis that I used', 'tokens': [50364, 264, 8177, 437, 366, 264, 732, 7221, 295, 613, 6828, 420, 341, 2010, 295, 5215, 300, 286, 1143, 50620], 'temperature': 0.0, 'avg_logprob': -0.17585081713540213, 'compression_ratio': 1.939516129032258, 'no_speech_prob': 0.014465989544987679}, {'id': 547, 'seek': 400422, 'start': 4009.3399999999997, 'end': 4017.54, 'text': ' in the proof there are two very important things I used and we will see that in when we really', 'tokens': [50620, 294, 264, 8177, 456, 366, 732, 588, 1021, 721, 286, 1143, 293, 321, 486, 536, 300, 294, 562, 321, 534, 51030], 'temperature': 0.0, 'avg_logprob': -0.17585081713540213, 'compression_ratio': 1.939516129032258, 'no_speech_prob': 0.014465989544987679}, {'id': 548, 'seek': 400422, 'start': 4017.54, 'end': 4022.7799999999997, 'text': ' formalize it properly what are the two important things I we discussed you used the can you isolate', 'tokens': [51030, 9860, 1125, 309, 6108, 437, 366, 264, 732, 1021, 721, 286, 321, 7152, 291, 1143, 264, 393, 291, 25660, 51292], 'temperature': 0.0, 'avg_logprob': -0.17585081713540213, 'compression_ratio': 1.939516129032258, 'no_speech_prob': 0.014465989544987679}, {'id': 549, 'seek': 400422, 'start': 4022.7799999999997, 'end': 4027.8199999999997, 'text': ' those I am saying two so you cannot tell me so first is we looked at the nature of the function', 'tokens': [51292, 729, 286, 669, 1566, 732, 370, 291, 2644, 980, 385, 370, 700, 307, 321, 2956, 412, 264, 3687, 295, 264, 2445, 51544], 'temperature': 0.0, 'avg_logprob': -0.17585081713540213, 'compression_ratio': 1.939516129032258, 'no_speech_prob': 0.014465989544987679}, {'id': 550, 'seek': 400422, 'start': 4027.8199999999997, 'end': 4033.3799999999997, 'text': ' right these are the in and out functions I did not want to tell it but I think I should tell the', 'tokens': [51544, 558, 613, 366, 264, 294, 293, 484, 6828, 286, 630, 406, 528, 281, 980, 309, 457, 286, 519, 286, 820, 980, 264, 51822], 'temperature': 0.0, 'avg_logprob': -0.17585081713540213, 'compression_ratio': 1.939516129032258, 'no_speech_prob': 0.014465989544987679}, {'id': 551, 'seek': 403338, 'start': 4033.82, 'end': 4043.5, 'text': ' what is the function here so essentially so we are talking about the fixed point computation', 'tokens': [50386, 437, 307, 264, 2445, 510, 370, 4476, 370, 321, 366, 1417, 466, 264, 6806, 935, 24903, 50870], 'temperature': 0.0, 'avg_logprob': -0.18457481472991233, 'compression_ratio': 1.5203252032520325, 'no_speech_prob': 0.06549002975225449}, {'id': 552, 'seek': 403338, 'start': 4043.5, 'end': 4054.9, 'text': ' right so let us let me just define what we mean by a fixed point solution so if for a function', 'tokens': [50870, 558, 370, 718, 505, 718, 385, 445, 6964, 437, 321, 914, 538, 257, 6806, 935, 3827, 370, 498, 337, 257, 2445, 51440], 'temperature': 0.0, 'avg_logprob': -0.18457481472991233, 'compression_ratio': 1.5203252032520325, 'no_speech_prob': 0.06549002975225449}, {'id': 553, 'seek': 405490, 'start': 4055.14, 'end': 4072.7400000000002, 'text': ' I say that is a fixed point solution if f of gives me back right just take it as a definition', 'tokens': [50376, 286, 584, 300, 307, 257, 6806, 935, 3827, 498, 283, 295, 2709, 385, 646, 558, 445, 747, 309, 382, 257, 7123, 51256], 'temperature': 0.0, 'avg_logprob': -0.28691675265630084, 'compression_ratio': 1.6756756756756757, 'no_speech_prob': 0.22454585134983063}, {'id': 554, 'seek': 405490, 'start': 4072.7400000000002, 'end': 4082.26, 'text': ' this is a definition so I say that is a fixed point solution of if I apply again and give me', 'tokens': [51256, 341, 307, 257, 7123, 370, 286, 584, 300, 307, 257, 6806, 935, 3827, 295, 498, 286, 3079, 797, 293, 976, 385, 51732], 'temperature': 0.0, 'avg_logprob': -0.28691675265630084, 'compression_ratio': 1.6756756756756757, 'no_speech_prob': 0.22454585134983063}, {'id': 555, 'seek': 408226, 'start': 4082.26, 'end': 4091.26, 'text': ' on applying f to x0 again gives me x0 again gives me x0 back then I say that x0 is a fixed', 'tokens': [50364, 322, 9275, 283, 281, 2031, 15, 797, 2709, 385, 2031, 15, 797, 2709, 385, 2031, 15, 646, 550, 286, 584, 300, 2031, 15, 307, 257, 6806, 50814], 'temperature': 0.0, 'avg_logprob': -0.18410958329292193, 'compression_ratio': 1.73125, 'no_speech_prob': 0.001019113464280963}, {'id': 556, 'seek': 408226, 'start': 4091.26, 'end': 4096.820000000001, 'text': ' point solution does it does it make sense so here if you think about it I we are actually', 'tokens': [50814, 935, 3827, 775, 309, 775, 309, 652, 2020, 370, 510, 498, 291, 519, 466, 309, 286, 321, 366, 767, 51092], 'temperature': 0.0, 'avg_logprob': -0.18410958329292193, 'compression_ratio': 1.73125, 'no_speech_prob': 0.001019113464280963}, {'id': 557, 'seek': 408226, 'start': 4096.820000000001, 'end': 4105.9800000000005, 'text': ' computing a fixed point solution the solution it looks like this there is a in one in b1 sitting', 'tokens': [51092, 15866, 257, 6806, 935, 3827, 264, 3827, 309, 1542, 411, 341, 456, 307, 257, 294, 472, 294, 272, 16, 3798, 51550], 'temperature': 0.0, 'avg_logprob': -0.18410958329292193, 'compression_ratio': 1.73125, 'no_speech_prob': 0.001019113464280963}, {'id': 558, 'seek': 410598, 'start': 4105.98, 'end': 4116.82, 'text': ' here out b1 sitting here in b2 sitting here out b2 sitting here so this is my these are my', 'tokens': [50364, 510, 484, 272, 16, 3798, 510, 294, 272, 17, 3798, 510, 484, 272, 17, 3798, 510, 370, 341, 307, 452, 613, 366, 452, 50906], 'temperature': 0.0, 'avg_logprob': -0.1181177113154163, 'compression_ratio': 1.9310344827586208, 'no_speech_prob': 0.2003067582845688}, {'id': 559, 'seek': 410598, 'start': 4116.82, 'end': 4126.259999999999, 'text': ' solutions right what is my function what is my function f no no no mathematically what is my', 'tokens': [50906, 6547, 558, 437, 307, 452, 2445, 437, 307, 452, 2445, 283, 572, 572, 572, 44003, 437, 307, 452, 51378], 'temperature': 0.0, 'avg_logprob': -0.1181177113154163, 'compression_ratio': 1.9310344827586208, 'no_speech_prob': 0.2003067582845688}, {'id': 560, 'seek': 410598, 'start': 4126.259999999999, 'end': 4134.339999999999, 'text': ' function now so again look at it so this is what my x0 looks like so my f should be able to take', 'tokens': [51378, 2445, 586, 370, 797, 574, 412, 309, 370, 341, 307, 437, 452, 2031, 15, 1542, 411, 370, 452, 283, 820, 312, 1075, 281, 747, 51782], 'temperature': 0.0, 'avg_logprob': -0.1181177113154163, 'compression_ratio': 1.9310344827586208, 'no_speech_prob': 0.2003067582845688}, {'id': 561, 'seek': 413434, 'start': 4134.34, 'end': 4140.7, 'text': ' this x0 and give me an updated value so what does my f look like what is my f what is my function f', 'tokens': [50364, 341, 2031, 15, 293, 976, 385, 364, 10588, 2158, 370, 437, 775, 452, 283, 574, 411, 437, 307, 452, 283, 437, 307, 452, 2445, 283, 50682], 'temperature': 0.0, 'avg_logprob': -0.1264709185247552, 'compression_ratio': 1.7314285714285715, 'no_speech_prob': 0.008255484513938427}, {'id': 562, 'seek': 413434, 'start': 4140.7, 'end': 4152.38, 'text': ' so if you think about this algorithm what is this algorithm it says that while so I initialize x0', 'tokens': [50682, 370, 498, 291, 519, 466, 341, 9284, 437, 307, 341, 9284, 309, 1619, 300, 1339, 370, 286, 5883, 1125, 2031, 15, 51266], 'temperature': 0.0, 'avg_logprob': -0.1264709185247552, 'compression_ratio': 1.7314285714285715, 'no_speech_prob': 0.008255484513938427}, {'id': 563, 'seek': 413434, 'start': 4152.38, 'end': 4159.58, 'text': ' to some in some initialization we will theoretically say what that is one moment and while not stabilized', 'tokens': [51266, 281, 512, 294, 512, 5883, 2144, 321, 486, 29400, 584, 437, 300, 307, 472, 1623, 293, 1339, 406, 48384, 51626], 'temperature': 0.0, 'avg_logprob': -0.1264709185247552, 'compression_ratio': 1.7314285714285715, 'no_speech_prob': 0.008255484513938427}, {'id': 564, 'seek': 415958, 'start': 4159.58, 'end': 4175.46, 'text': ' I say x is equal to f of x0 f of x sorry so I they put x to some initialization I do some', 'tokens': [50364, 286, 584, 2031, 307, 2681, 281, 283, 295, 2031, 15, 283, 295, 2031, 2597, 370, 286, 436, 829, 2031, 281, 512, 5883, 2144, 286, 360, 512, 51158], 'temperature': 0.0, 'avg_logprob': -0.15821106617267316, 'compression_ratio': 1.5847457627118644, 'no_speech_prob': 0.05177018418908119}, {'id': 565, 'seek': 415958, 'start': 4175.46, 'end': 4185.66, 'text': ' initialization of x and then y while this does not hold not stabilized means while x is not equal', 'tokens': [51158, 5883, 2144, 295, 2031, 293, 550, 288, 1339, 341, 775, 406, 1797, 406, 48384, 1355, 1339, 2031, 307, 406, 2681, 51668], 'temperature': 0.0, 'avg_logprob': -0.15821106617267316, 'compression_ratio': 1.5847457627118644, 'no_speech_prob': 0.05177018418908119}, {'id': 566, 'seek': 418566, 'start': 4185.66, 'end': 4196.66, 'text': ' to f of x I say I apply f to it again and do and put it back in x essentially this is what we are', 'tokens': [50364, 281, 283, 295, 2031, 286, 584, 286, 3079, 283, 281, 309, 797, 293, 360, 293, 829, 309, 646, 294, 2031, 4476, 341, 307, 437, 321, 366, 50914], 'temperature': 0.0, 'avg_logprob': -0.1460724894205729, 'compression_ratio': 1.7975460122699387, 'no_speech_prob': 0.1286740005016327}, {'id': 567, 'seek': 418566, 'start': 4196.66, 'end': 4207.34, 'text': ' doing nothing more than this you should be able to see this that is all we are doing nothing nothing', 'tokens': [50914, 884, 1825, 544, 813, 341, 291, 820, 312, 1075, 281, 536, 341, 300, 307, 439, 321, 366, 884, 1825, 1825, 51448], 'temperature': 0.0, 'avg_logprob': -0.1460724894205729, 'compression_ratio': 1.7975460122699387, 'no_speech_prob': 0.1286740005016327}, {'id': 568, 'seek': 418566, 'start': 4207.34, 'end': 4215.54, 'text': ' more serious to them now tell me what is my so this is the computation of f this is the update', 'tokens': [51448, 544, 3156, 281, 552, 586, 980, 385, 437, 307, 452, 370, 341, 307, 264, 24903, 295, 283, 341, 307, 264, 5623, 51858], 'temperature': 0.0, 'avg_logprob': -0.1460724894205729, 'compression_ratio': 1.7975460122699387, 'no_speech_prob': 0.1286740005016327}, {'id': 569, 'seek': 421554, 'start': 4215.54, 'end': 4233.74, 'text': ' of f so can you tell me what is this f no no no so you understand my x0 is a vector of these', 'tokens': [50364, 295, 283, 370, 393, 291, 980, 385, 437, 307, 341, 283, 572, 572, 572, 370, 291, 1223, 452, 2031, 15, 307, 257, 8062, 295, 613, 51274], 'temperature': 0.0, 'avg_logprob': -0.12622356414794922, 'compression_ratio': 1.6846846846846846, 'no_speech_prob': 0.04178550839424133}, {'id': 570, 'seek': 421554, 'start': 4233.74, 'end': 4238.94, 'text': ' guys right so my f should also take a vector of these guys and give out a vector of these guys', 'tokens': [51274, 1074, 558, 370, 452, 283, 820, 611, 747, 257, 8062, 295, 613, 1074, 293, 976, 484, 257, 8062, 295, 613, 1074, 51534], 'temperature': 0.0, 'avg_logprob': -0.12622356414794922, 'compression_ratio': 1.6846846846846846, 'no_speech_prob': 0.04178550839424133}, {'id': 571, 'seek': 424554, 'start': 4245.54, 'end': 4255.46, 'text': ' so what does my f look like I will keep on repeating it so why what is my f', 'tokens': [50364, 370, 437, 775, 452, 283, 574, 411, 286, 486, 1066, 322, 18617, 309, 370, 983, 437, 307, 452, 283, 50860], 'temperature': 0.0, 'avg_logprob': -0.27877584416815576, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.055448267608881}, {'id': 572, 'seek': 424554, 'start': 4255.46, 'end': 4267.34, 'text': ' so what should I what if my x0 looks like this my f should be able to take this vector and', 'tokens': [50860, 370, 437, 820, 286, 437, 498, 452, 2031, 15, 1542, 411, 341, 452, 283, 820, 312, 1075, 281, 747, 341, 8062, 293, 51454], 'temperature': 0.0, 'avg_logprob': -0.27877584416815576, 'compression_ratio': 1.5660377358490567, 'no_speech_prob': 0.055448267608881}, {'id': 573, 'seek': 426734, 'start': 4267.34, 'end': 4276.3, 'text': ' spit out a similar vector the updated vector for each value of the vector', 'tokens': [50364, 22127, 484, 257, 2531, 8062, 264, 10588, 8062, 337, 1184, 2158, 295, 264, 8062, 50812], 'temperature': 0.0, 'avg_logprob': -0.2247768201326069, 'compression_ratio': 1.4107142857142858, 'no_speech_prob': 0.46797212958335876}, {'id': 574, 'seek': 426734, 'start': 4276.3, 'end': 4289.5, 'text': ' mathematically tell me what is f you guys are trying to sneak out I will not let you', 'tokens': [50812, 44003, 980, 385, 437, 307, 283, 291, 1074, 366, 1382, 281, 13164, 484, 286, 486, 406, 718, 291, 51472], 'temperature': 0.0, 'avg_logprob': -0.2247768201326069, 'compression_ratio': 1.4107142857142858, 'no_speech_prob': 0.46797212958335876}, {'id': 575, 'seek': 428950, 'start': 4289.5, 'end': 4309.38, 'text': ' no no f is a function now so to say what is that ah somebody said something set of all', 'tokens': [50364, 572, 572, 283, 307, 257, 2445, 586, 370, 281, 584, 437, 307, 300, 3716, 2618, 848, 746, 992, 295, 439, 51358], 'temperature': 0.0, 'avg_logprob': -0.3243755102157593, 'compression_ratio': 1.1944444444444444, 'no_speech_prob': 0.20936372876167297}, {'id': 576, 'seek': 430938, 'start': 4309.38, 'end': 4319.9800000000005, 'text': ' outs no but f is a function f is a function look at this look at this thing I wrote compare with', 'tokens': [50364, 14758, 572, 457, 283, 307, 257, 2445, 283, 307, 257, 2445, 574, 412, 341, 574, 412, 341, 551, 286, 4114, 6794, 365, 50894], 'temperature': 0.0, 'avg_logprob': -0.20237078931596544, 'compression_ratio': 1.830188679245283, 'no_speech_prob': 0.29898542165756226}, {'id': 577, 'seek': 430938, 'start': 4319.9800000000005, 'end': 4332.38, 'text': ' whatever you see on the screen on left hand side this this is this is all that we are doing this', 'tokens': [50894, 2035, 291, 536, 322, 264, 2568, 322, 1411, 1011, 1252, 341, 341, 307, 341, 307, 439, 300, 321, 366, 884, 341, 51514], 'temperature': 0.0, 'avg_logprob': -0.20237078931596544, 'compression_ratio': 1.830188679245283, 'no_speech_prob': 0.29898542165756226}, {'id': 578, 'seek': 430938, 'start': 4332.38, 'end': 4335.9800000000005, 'text': ' three lines of code is all we are doing we wrote ten lines that is a different matter so you have', 'tokens': [51514, 1045, 3876, 295, 3089, 307, 439, 321, 366, 884, 321, 4114, 2064, 3876, 300, 307, 257, 819, 1871, 370, 291, 362, 51694], 'temperature': 0.0, 'avg_logprob': -0.20237078931596544, 'compression_ratio': 1.830188679245283, 'no_speech_prob': 0.29898542165756226}, {'id': 579, 'seek': 433598, 'start': 4335.98, 'end': 4337.58, 'text': ' to somehow summarize those ten lines into this', 'tokens': [50364, 281, 6063, 20858, 729, 2064, 3876, 666, 341, 50444], 'temperature': 0.0, 'avg_logprob': -0.4691397746404012, 'compression_ratio': 0.9019607843137255, 'no_speech_prob': 0.9671543836593628}, {'id': 580, 'seek': 433758, 'start': 4337.58, 'end': 4366.54, 'text': ' okay so f is basically that like if I want to compute enough b', 'tokens': [50364, 1392, 370, 283, 307, 1936, 300, 411, 498, 286, 528, 281, 14722, 1547, 272, 51812], 'temperature': 0.0, 'avg_logprob': -0.2843942907121446, 'compression_ratio': 1.0, 'no_speech_prob': 0.9083014726638794}, {'id': 581, 'seek': 436654, 'start': 4366.54, 'end': 4375.5, 'text': ' enough b1 what is enough b1 it is empty set what is out of b1 out of b1 is enough', 'tokens': [50364, 1547, 272, 16, 437, 307, 1547, 272, 16, 309, 307, 6707, 992, 437, 307, 484, 295, 272, 16, 484, 295, 272, 16, 307, 1547, 50812], 'temperature': 0.0, 'avg_logprob': -0.30415197781154085, 'compression_ratio': 1.528301886792453, 'no_speech_prob': 0.2969542443752289}, {'id': 582, 'seek': 437550, 'start': 4375.5, 'end': 4395.1, 'text': ' ha jen of b1 jen of b1 then union enough b1 enough b1 minus kill of b1 comma so my function', 'tokens': [50364, 324, 361, 268, 295, 272, 16, 361, 268, 295, 272, 16, 550, 11671, 1547, 272, 16, 1547, 272, 16, 3175, 1961, 295, 272, 16, 22117, 370, 452, 2445, 51344], 'temperature': 0.0, 'avg_logprob': -0.2946839141845703, 'compression_ratio': 1.5126050420168067, 'no_speech_prob': 0.02206290140748024}, {'id': 583, 'seek': 437550, 'start': 4395.1, 'end': 4403.1, 'text': ' is basically a vector over all these mutant update functions and I apply this function f', 'tokens': [51344, 307, 1936, 257, 8062, 670, 439, 613, 47198, 5623, 6828, 293, 286, 3079, 341, 2445, 283, 51744], 'temperature': 0.0, 'avg_logprob': -0.2946839141845703, 'compression_ratio': 1.5126050420168067, 'no_speech_prob': 0.02206290140748024}, {'id': 584, 'seek': 440310, 'start': 4403.1, 'end': 4409.700000000001, 'text': ' by doing a component by component application of these functions do you see what is happening', 'tokens': [50364, 538, 884, 257, 6542, 538, 6542, 3861, 295, 613, 6828, 360, 291, 536, 437, 307, 2737, 50694], 'temperature': 0.0, 'avg_logprob': -0.15793459990928913, 'compression_ratio': 1.793548387096774, 'no_speech_prob': 0.055775225162506104}, {'id': 585, 'seek': 440310, 'start': 4409.700000000001, 'end': 4417.58, 'text': ' this is the simplest form I could think of so essentially think of this function f itself being', 'tokens': [50694, 341, 307, 264, 22811, 1254, 286, 727, 519, 295, 370, 4476, 519, 295, 341, 2445, 283, 2564, 885, 51088], 'temperature': 0.0, 'avg_logprob': -0.15793459990928913, 'compression_ratio': 1.793548387096774, 'no_speech_prob': 0.055775225162506104}, {'id': 586, 'seek': 440310, 'start': 4417.58, 'end': 4424.58, 'text': ' a vector of functions right every element of that vector of functions every element is a', 'tokens': [51088, 257, 8062, 295, 6828, 558, 633, 4478, 295, 300, 8062, 295, 6828, 633, 4478, 307, 257, 51438], 'temperature': 0.0, 'avg_logprob': -0.15793459990928913, 'compression_ratio': 1.793548387096774, 'no_speech_prob': 0.055775225162506104}, {'id': 587, 'seek': 442458, 'start': 4424.58, 'end': 4433.22, 'text': ' function and that function applies updates the respective element in the solution right can you', 'tokens': [50364, 2445, 293, 300, 2445, 13165, 9205, 264, 23649, 4478, 294, 264, 3827, 558, 393, 291, 50796], 'temperature': 0.0, 'avg_logprob': -0.11410248279571533, 'compression_ratio': 2.292682926829268, 'no_speech_prob': 0.6409145593643188}, {'id': 588, 'seek': 442458, 'start': 4433.22, 'end': 4438.22, 'text': ' see this so this empty is a constant function this is also a function which takes anything', 'tokens': [50796, 536, 341, 370, 341, 6707, 307, 257, 5754, 2445, 341, 307, 611, 257, 2445, 597, 2516, 1340, 51046], 'temperature': 0.0, 'avg_logprob': -0.11410248279571533, 'compression_ratio': 2.292682926829268, 'no_speech_prob': 0.6409145593643188}, {'id': 589, 'seek': 442458, 'start': 4438.22, 'end': 4444.86, 'text': ' and gives you an empty function right so it will take this and give you an empty function again', 'tokens': [51046, 293, 2709, 291, 364, 6707, 2445, 558, 370, 309, 486, 747, 341, 293, 976, 291, 364, 6707, 2445, 797, 51378], 'temperature': 0.0, 'avg_logprob': -0.11410248279571533, 'compression_ratio': 2.292682926829268, 'no_speech_prob': 0.6409145593643188}, {'id': 590, 'seek': 442458, 'start': 4444.86, 'end': 4451.0599999999995, 'text': ' this guy will take this and give you an updated solution for this this guy will take this and', 'tokens': [51378, 341, 2146, 486, 747, 341, 293, 976, 291, 364, 10588, 3827, 337, 341, 341, 2146, 486, 747, 341, 293, 51688], 'temperature': 0.0, 'avg_logprob': -0.11410248279571533, 'compression_ratio': 2.292682926829268, 'no_speech_prob': 0.6409145593643188}, {'id': 591, 'seek': 445106, 'start': 4451.06, 'end': 4456.1, 'text': ' give you updated solution for this so it is a function of vector it is a vector of functions', 'tokens': [50364, 976, 291, 10588, 3827, 337, 341, 370, 309, 307, 257, 2445, 295, 8062, 309, 307, 257, 8062, 295, 6828, 50616], 'temperature': 0.0, 'avg_logprob': -0.1549206009830337, 'compression_ratio': 1.9430051813471503, 'no_speech_prob': 0.047335412353277206}, {'id': 592, 'seek': 445106, 'start': 4456.1, 'end': 4462.34, 'text': ' which is applied on the vector of solutions or the solution vector gives you an output', 'tokens': [50616, 597, 307, 6456, 322, 264, 8062, 295, 6547, 420, 264, 3827, 8062, 2709, 291, 364, 5598, 50928], 'temperature': 0.0, 'avg_logprob': -0.1549206009830337, 'compression_ratio': 1.9430051813471503, 'no_speech_prob': 0.047335412353277206}, {'id': 593, 'seek': 445106, 'start': 4462.34, 'end': 4474.1, 'text': ' solution vector does it make sense to communicate it now it is not obligated right make sense look', 'tokens': [50928, 3827, 8062, 775, 309, 652, 2020, 281, 7890, 309, 586, 309, 307, 406, 9270, 770, 558, 652, 2020, 574, 51516], 'temperature': 0.0, 'avg_logprob': -0.1549206009830337, 'compression_ratio': 1.9430051813471503, 'no_speech_prob': 0.047335412353277206}, {'id': 594, 'seek': 445106, 'start': 4474.1, 'end': 4478.9800000000005, 'text': ' at this particular loop that is exactly what this guy is doing it is just running over my vector', 'tokens': [51516, 412, 341, 1729, 6367, 300, 307, 2293, 437, 341, 2146, 307, 884, 309, 307, 445, 2614, 670, 452, 8062, 51760], 'temperature': 0.0, 'avg_logprob': -0.1549206009830337, 'compression_ratio': 1.9430051813471503, 'no_speech_prob': 0.047335412353277206}, {'id': 595, 'seek': 447898, 'start': 4478.98, 'end': 4484.339999999999, 'text': ' of functions and updating each respective element in the solution and giving you this', 'tokens': [50364, 295, 6828, 293, 25113, 1184, 23649, 4478, 294, 264, 3827, 293, 2902, 291, 341, 50632], 'temperature': 0.0, 'avg_logprob': -0.32743288488949046, 'compression_ratio': 1.5495495495495495, 'no_speech_prob': 0.05804042890667915}, {'id': 596, 'seek': 447898, 'start': 4484.339999999999, 'end': 4489.419999999999, 'text': " particular update exactly this particular update is what this guy's doing nothing more", 'tokens': [50632, 1729, 5623, 2293, 341, 1729, 5623, 307, 437, 341, 2146, 311, 884, 1825, 544, 50886], 'temperature': 0.0, 'avg_logprob': -0.32743288488949046, 'compression_ratio': 1.5495495495495495, 'no_speech_prob': 0.05804042890667915}, {'id': 597, 'seek': 448942, 'start': 4489.42, 'end': 4516.34, 'text': ' right yeah 9 light wheel is wrong you are right so this I did in my taxi so the shaking', 'tokens': [50364, 558, 1338, 1722, 1442, 5589, 307, 2085, 291, 366, 558, 370, 341, 286, 630, 294, 452, 18984, 370, 264, 15415, 51710], 'temperature': 0.0, 'avg_logprob': -0.34674819310506183, 'compression_ratio': 1.16, 'no_speech_prob': 0.5311084985733032}, {'id': 598, 'seek': 451634, 'start': 4516.34, 'end': 4529.5, 'text': ' too much yeah so this should be this should be in B minus kill of B union j.', 'tokens': [50364, 886, 709, 1338, 370, 341, 820, 312, 341, 820, 312, 294, 363, 3175, 1961, 295, 363, 11671, 361, 13, 51022], 'temperature': 0.0, 'avg_logprob': -0.44644293577774713, 'compression_ratio': 1.1515151515151516, 'no_speech_prob': 0.8776795268058777}, {'id': 599, 'seek': 452950, 'start': 4529.5, 'end': 4548.98, 'text': ' Thank you done got it so essentially we have figured out we are doing a so essentially we', 'tokens': [50364, 1044, 291, 1096, 658, 309, 370, 4476, 321, 362, 8932, 484, 321, 366, 884, 257, 370, 4476, 321, 51338], 'temperature': 0.0, 'avg_logprob': -0.17587560320657397, 'compression_ratio': 1.7973856209150327, 'no_speech_prob': 0.03405515477061272}, {'id': 600, 'seek': 452950, 'start': 4548.98, 'end': 4552.86, 'text': ' are not doing something very serious we are doing something very simple it just the function is', 'tokens': [51338, 366, 406, 884, 746, 588, 3156, 321, 366, 884, 746, 588, 2199, 309, 445, 264, 2445, 307, 51532], 'temperature': 0.0, 'avg_logprob': -0.17587560320657397, 'compression_ratio': 1.7973856209150327, 'no_speech_prob': 0.03405515477061272}, {'id': 601, 'seek': 452950, 'start': 4552.86, 'end': 4558.9, 'text': ' complicated that is all it is right so now we are we know that we are able to compute the', 'tokens': [51532, 6179, 300, 307, 439, 309, 307, 558, 370, 586, 321, 366, 321, 458, 300, 321, 366, 1075, 281, 14722, 264, 51834], 'temperature': 0.0, 'avg_logprob': -0.17587560320657397, 'compression_ratio': 1.7973856209150327, 'no_speech_prob': 0.03405515477061272}, {'id': 602, 'seek': 455890, 'start': 4558.9, 'end': 4566.9, 'text': ' fixed point solution and we know that the solution halts do we know that we get the', 'tokens': [50364, 6806, 935, 3827, 293, 321, 458, 300, 264, 3827, 7523, 1373, 360, 321, 458, 300, 321, 483, 264, 50764], 'temperature': 0.0, 'avg_logprob': -0.1916718049482866, 'compression_ratio': 1.2769230769230768, 'no_speech_prob': 0.7721216678619385}, {'id': 603, 'seek': 456690, 'start': 4566.9, 'end': 4591.219999999999, 'text': ' smallest solution can you argue that yeah but half you get them what is the argument why can', 'tokens': [50364, 16998, 3827, 393, 291, 9695, 300, 1338, 457, 1922, 291, 483, 552, 437, 307, 264, 6770, 983, 393, 51580], 'temperature': 0.0, 'avg_logprob': -0.3534913713281805, 'compression_ratio': 1.2266666666666666, 'no_speech_prob': 0.22901040315628052}, {'id': 604, 'seek': 459122, 'start': 4591.22, 'end': 4605.22, 'text': ' not a arbitrary definition speak in okay so one way to do these proofs how can you do actually', 'tokens': [50364, 406, 257, 23211, 7123, 1710, 294, 1392, 370, 472, 636, 281, 360, 613, 8177, 82, 577, 393, 291, 360, 767, 51064], 'temperature': 0.0, 'avg_logprob': -0.19732063466852362, 'compression_ratio': 1.588235294117647, 'no_speech_prob': 0.567263126373291}, {'id': 605, 'seek': 459122, 'start': 4605.22, 'end': 4616.66, 'text': ' mathematically do this proof how can you really write a proper nice proof okay how will you do', 'tokens': [51064, 44003, 360, 341, 8177, 577, 393, 291, 534, 2464, 257, 2296, 1481, 8177, 1392, 577, 486, 291, 360, 51636], 'temperature': 0.0, 'avg_logprob': -0.19732063466852362, 'compression_ratio': 1.588235294117647, 'no_speech_prob': 0.567263126373291}, {'id': 606, 'seek': 464666, 'start': 4646.66, 'end': 4654.86, 'text': ' maybe what you are saying is right but you have to formalize it better so what is the type of', 'tokens': [50364, 1310, 437, 291, 366, 1566, 307, 558, 457, 291, 362, 281, 9860, 1125, 309, 1101, 370, 437, 307, 264, 2010, 295, 50774], 'temperature': 0.0, 'avg_logprob': -0.20210313063401442, 'compression_ratio': 1.7345679012345678, 'no_speech_prob': 0.03043786808848381}, {'id': 607, 'seek': 464666, 'start': 4654.86, 'end': 4664.34, 'text': ' what is the proof strategy that you use no you cannot do so there is no direct this thing so', 'tokens': [50774, 437, 307, 264, 8177, 5206, 300, 291, 764, 572, 291, 2644, 360, 370, 456, 307, 572, 2047, 341, 551, 370, 51248], 'temperature': 0.0, 'avg_logprob': -0.20210313063401442, 'compression_ratio': 1.7345679012345678, 'no_speech_prob': 0.03043786808848381}, {'id': 608, 'seek': 464666, 'start': 4664.34, 'end': 4670.62, 'text': ' what sort of reasoning to use what are the proof techniques to know of induction contradiction', 'tokens': [51248, 437, 1333, 295, 21577, 281, 764, 437, 366, 264, 8177, 7512, 281, 458, 295, 33371, 34937, 51562], 'temperature': 0.0, 'avg_logprob': -0.20210313063401442, 'compression_ratio': 1.7345679012345678, 'no_speech_prob': 0.03043786808848381}, {'id': 609, 'seek': 467062, 'start': 4670.62, 'end': 4683.18, 'text': ' and so what is the sort of proof will work here so there is a loop here so whenever you', 'tokens': [50364, 293, 370, 437, 307, 264, 1333, 295, 8177, 486, 589, 510, 370, 456, 307, 257, 6367, 510, 370, 5699, 291, 50992], 'temperature': 0.0, 'avg_logprob': -0.22381802210732113, 'compression_ratio': 1.7960526315789473, 'no_speech_prob': 0.02575450949370861}, {'id': 610, 'seek': 467062, 'start': 4683.18, 'end': 4691.66, 'text': ' have a loop then what is works well induction works well right so what you know at the beginning', 'tokens': [50992, 362, 257, 6367, 550, 437, 307, 1985, 731, 33371, 1985, 731, 558, 370, 437, 291, 458, 412, 264, 2863, 51416], 'temperature': 0.0, 'avg_logprob': -0.22381802210732113, 'compression_ratio': 1.7960526315789473, 'no_speech_prob': 0.02575450949370861}, {'id': 611, 'seek': 467062, 'start': 4691.66, 'end': 4699.38, 'text': ' of before you enter the while loop is that is smaller solution smaller than the original', 'tokens': [51416, 295, 949, 291, 3242, 264, 1339, 6367, 307, 300, 307, 4356, 3827, 4356, 813, 264, 3380, 51802], 'temperature': 0.0, 'avg_logprob': -0.22381802210732113, 'compression_ratio': 1.7960526315789473, 'no_speech_prob': 0.02575450949370861}, {'id': 612, 'seek': 469938, 'start': 4699.38, 'end': 4705.1, 'text': ' solution right we it does not contain an extra definition it does not contain an extra definition', 'tokens': [50364, 3827, 558, 321, 309, 775, 406, 5304, 364, 2857, 7123, 309, 775, 406, 5304, 364, 2857, 7123, 50650], 'temperature': 0.0, 'avg_logprob': -0.2019649771756904, 'compression_ratio': 2.0320855614973263, 'no_speech_prob': 0.02835984341800213}, {'id': 613, 'seek': 469938, 'start': 4705.1, 'end': 4711.78, 'text': ' that we know why because we have initially empty and generally there right that we know so my', 'tokens': [50650, 300, 321, 458, 983, 570, 321, 362, 9105, 6707, 293, 5101, 456, 558, 300, 321, 458, 370, 452, 50984], 'temperature': 0.0, 'avg_logprob': -0.2019649771756904, 'compression_ratio': 2.0320855614973263, 'no_speech_prob': 0.02835984341800213}, {'id': 614, 'seek': 469938, 'start': 4711.78, 'end': 4720.02, 'text': ' base case holds right so my theorem that in trying to prove is that I do not have an extra', 'tokens': [50984, 3096, 1389, 9190, 558, 370, 452, 20904, 300, 294, 1382, 281, 7081, 307, 300, 286, 360, 406, 362, 364, 2857, 51396], 'temperature': 0.0, 'avg_logprob': -0.2019649771756904, 'compression_ratio': 2.0320855614973263, 'no_speech_prob': 0.02835984341800213}, {'id': 615, 'seek': 469938, 'start': 4720.02, 'end': 4725.86, 'text': ' definition in any of my sets in the beginning the base case is that I have not entered the loop I', 'tokens': [51396, 7123, 294, 604, 295, 452, 6352, 294, 264, 2863, 264, 3096, 1389, 307, 300, 286, 362, 406, 9065, 264, 6367, 286, 51688], 'temperature': 0.0, 'avg_logprob': -0.2019649771756904, 'compression_ratio': 2.0320855614973263, 'no_speech_prob': 0.02835984341800213}, {'id': 616, 'seek': 472586, 'start': 4725.9, 'end': 4733.179999999999, 'text': ' have taken zero iterations and my solution is solution holds yeah the lemma holds the theorem', 'tokens': [50366, 362, 2726, 4018, 36540, 293, 452, 3827, 307, 3827, 9190, 1338, 264, 7495, 1696, 9190, 264, 20904, 50730], 'temperature': 0.0, 'avg_logprob': -0.2044500708580017, 'compression_ratio': 1.7289156626506024, 'no_speech_prob': 0.10656915605068207}, {'id': 617, 'seek': 472586, 'start': 4733.179999999999, 'end': 4738.82, 'text': " holds once good that holds because I have not everything is empty so I don't care now you have", 'tokens': [50730, 9190, 1564, 665, 300, 9190, 570, 286, 362, 406, 1203, 307, 6707, 370, 286, 500, 380, 1127, 586, 291, 362, 51012], 'temperature': 0.0, 'avg_logprob': -0.2044500708580017, 'compression_ratio': 1.7289156626506024, 'no_speech_prob': 0.10656915605068207}, {'id': 618, 'seek': 472586, 'start': 4738.82, 'end': 4746.299999999999, 'text': ' to say that how do you apply induction so you use an induction hypothesis so what is the induction', 'tokens': [51012, 281, 584, 300, 577, 360, 291, 3079, 33371, 370, 291, 764, 364, 33371, 17291, 370, 437, 307, 264, 33371, 51386], 'temperature': 0.0, 'avg_logprob': -0.2044500708580017, 'compression_ratio': 1.7289156626506024, 'no_speech_prob': 0.10656915605068207}, {'id': 619, 'seek': 474630, 'start': 4746.3, 'end': 4760.66, 'text': ' hypothesis right so you use an induction hypothesis which says that for any iterations for any', 'tokens': [50364, 17291, 558, 370, 291, 764, 364, 33371, 17291, 597, 1619, 300, 337, 604, 36540, 337, 604, 51082], 'temperature': 0.0, 'avg_logprob': -0.12788397168356275, 'compression_ratio': 1.945578231292517, 'no_speech_prob': 0.03005238249897957}, {'id': 620, 'seek': 474630, 'start': 4760.66, 'end': 4766.66, 'text': ' any iterations of the loop I do not have an extra definition yet that is the assumption and then', 'tokens': [51082, 604, 36540, 295, 264, 6367, 286, 360, 406, 362, 364, 2857, 7123, 1939, 300, 307, 264, 15302, 293, 550, 51382], 'temperature': 0.0, 'avg_logprob': -0.12788397168356275, 'compression_ratio': 1.945578231292517, 'no_speech_prob': 0.03005238249897957}, {'id': 621, 'seek': 474630, 'start': 4766.66, 'end': 4772.42, 'text': ' I do the inductive step the inductive step says that given that after any iterations I did not', 'tokens': [51382, 286, 360, 264, 31612, 488, 1823, 264, 31612, 488, 1823, 1619, 300, 2212, 300, 934, 604, 36540, 286, 630, 406, 51670], 'temperature': 0.0, 'avg_logprob': -0.12788397168356275, 'compression_ratio': 1.945578231292517, 'no_speech_prob': 0.03005238249897957}, {'id': 622, 'seek': 477242, 'start': 4772.42, 'end': 4778.18, 'text': ' have not introduced a new definition after an additional step I will still not introduce a new', 'tokens': [50364, 362, 406, 7268, 257, 777, 7123, 934, 364, 4497, 1823, 286, 486, 920, 406, 5366, 257, 777, 50652], 'temperature': 0.0, 'avg_logprob': -0.1710234125819775, 'compression_ratio': 2.1048034934497815, 'no_speech_prob': 0.1518772393465042}, {'id': 623, 'seek': 477242, 'start': 4778.18, 'end': 4786.66, 'text': " definition right so can you try that on this very interesting area it's it's a theoretical area and", 'tokens': [50652, 7123, 558, 370, 393, 291, 853, 300, 322, 341, 588, 1880, 1859, 309, 311, 309, 311, 257, 20864, 1859, 293, 51076], 'temperature': 0.0, 'avg_logprob': -0.1710234125819775, 'compression_ratio': 2.1048034934497815, 'no_speech_prob': 0.1518772393465042}, {'id': 624, 'seek': 477242, 'start': 4786.66, 'end': 4793.02, 'text': " it's a like practical area right if you just do theory it's not interesting if you just do like", 'tokens': [51076, 309, 311, 257, 411, 8496, 1859, 558, 498, 291, 445, 360, 5261, 309, 311, 406, 1880, 498, 291, 445, 360, 411, 51394], 'temperature': 0.0, 'avg_logprob': -0.1710234125819775, 'compression_ratio': 2.1048034934497815, 'no_speech_prob': 0.1518772393465042}, {'id': 625, 'seek': 477242, 'start': 4793.02, 'end': 4797.02, 'text': " applications or build implementations it's not interesting you have to do both you have to do", 'tokens': [51394, 5821, 420, 1322, 4445, 763, 309, 311, 406, 1880, 291, 362, 281, 360, 1293, 291, 362, 281, 360, 51594], 'temperature': 0.0, 'avg_logprob': -0.1710234125819775, 'compression_ratio': 2.1048034934497815, 'no_speech_prob': 0.1518772393465042}, {'id': 626, 'seek': 477242, 'start': 4797.02, 'end': 4801.78, 'text': ' proofs and you have to also build things right so we will be to improve now and afternoon we will', 'tokens': [51594, 8177, 82, 293, 291, 362, 281, 611, 1322, 721, 558, 370, 321, 486, 312, 281, 3470, 586, 293, 6499, 321, 486, 51832], 'temperature': 0.0, 'avg_logprob': -0.1710234125819775, 'compression_ratio': 2.1048034934497815, 'no_speech_prob': 0.1518772393465042}, {'id': 627, 'seek': 480178, 'start': 4801.78, 'end': 4806.98, 'text': ' build things yeah so the proof you will do at home you try to but you have to understand', 'tokens': [50364, 1322, 721, 1338, 370, 264, 8177, 291, 486, 360, 412, 1280, 291, 853, 281, 457, 291, 362, 281, 1223, 50624], 'temperature': 0.0, 'avg_logprob': -0.16651721992114982, 'compression_ratio': 1.9912663755458515, 'no_speech_prob': 0.003942025359719992}, {'id': 628, 'seek': 480178, 'start': 4806.98, 'end': 4813.179999999999, 'text': ' the structure of the proof right this is exactly what you have to do okay so we know that the last', 'tokens': [50624, 264, 3877, 295, 264, 8177, 558, 341, 307, 2293, 437, 291, 362, 281, 360, 1392, 370, 321, 458, 300, 264, 1036, 50934], 'temperature': 0.0, 'avg_logprob': -0.16651721992114982, 'compression_ratio': 1.9912663755458515, 'no_speech_prob': 0.003942025359719992}, {'id': 629, 'seek': 480178, 'start': 4813.179999999999, 'end': 4817.0199999999995, 'text': ' thing is that what is the complexity of this algorithm maybe maybe maybe what we should do', 'tokens': [50934, 551, 307, 300, 437, 307, 264, 14024, 295, 341, 9284, 1310, 1310, 1310, 437, 321, 820, 360, 51126], 'temperature': 0.0, 'avg_logprob': -0.16651721992114982, 'compression_ratio': 1.9912663755458515, 'no_speech_prob': 0.003942025359719992}, {'id': 630, 'seek': 480178, 'start': 4817.0199999999995, 'end': 4823.66, 'text': " is that let's try to think about the complexity of this particular step rather this particular", 'tokens': [51126, 307, 300, 718, 311, 853, 281, 519, 466, 264, 14024, 295, 341, 1729, 1823, 2831, 341, 1729, 51458], 'temperature': 0.0, 'avg_logprob': -0.16651721992114982, 'compression_ratio': 1.9912663755458515, 'no_speech_prob': 0.003942025359719992}, {'id': 631, 'seek': 480178, 'start': 4823.66, 'end': 4830.98, 'text': ' step right so these are two important steps that are happening in between right so', 'tokens': [51458, 1823, 558, 370, 613, 366, 732, 1021, 4439, 300, 366, 2737, 294, 1296, 558, 370, 51824], 'temperature': 0.0, 'avg_logprob': -0.16651721992114982, 'compression_ratio': 1.9912663755458515, 'no_speech_prob': 0.003942025359719992}, {'id': 632, 'seek': 483098, 'start': 4831.419999999999, 'end': 4839.219999999999, 'text': ' so this particular step is actually for all basic blocks it is doing some unions and some', 'tokens': [50386, 370, 341, 1729, 1823, 307, 767, 337, 439, 3875, 8474, 309, 307, 884, 512, 24914, 293, 512, 50776], 'temperature': 0.0, 'avg_logprob': -0.11526791642351848, 'compression_ratio': 1.8391959798994975, 'no_speech_prob': 0.0006347655435092747}, {'id': 633, 'seek': 483098, 'start': 4839.219999999999, 'end': 4846.82, 'text': " in some updates and so on so before coming to this let's think about the data structures", 'tokens': [50776, 294, 512, 9205, 293, 370, 322, 370, 949, 1348, 281, 341, 718, 311, 519, 466, 264, 1412, 9227, 51156], 'temperature': 0.0, 'avg_logprob': -0.11526791642351848, 'compression_ratio': 1.8391959798994975, 'no_speech_prob': 0.0006347655435092747}, {'id': 634, 'seek': 483098, 'start': 4846.82, 'end': 4851.9, 'text': ' because then the analysis becomes maybe we can do something more tighter so what what do you can', 'tokens': [51156, 570, 550, 264, 5215, 3643, 1310, 321, 393, 360, 746, 544, 30443, 370, 437, 437, 360, 291, 393, 51410], 'temperature': 0.0, 'avg_logprob': -0.11526791642351848, 'compression_ratio': 1.8391959798994975, 'no_speech_prob': 0.0006347655435092747}, {'id': 635, 'seek': 483098, 'start': 4851.9, 'end': 4856.32, 'text': ' you think how can we represent these guys how can we represent these sets so that I can do', 'tokens': [51410, 291, 519, 577, 393, 321, 2906, 613, 1074, 577, 393, 321, 2906, 613, 6352, 370, 300, 286, 393, 360, 51631], 'temperature': 0.0, 'avg_logprob': -0.11526791642351848, 'compression_ratio': 1.8391959798994975, 'no_speech_prob': 0.0006347655435092747}, {'id': 636, 'seek': 485632, 'start': 4856.32, 'end': 4862.0, 'text': ' this updates fast right I have this union sitting here and we have a differencing operator sitting', 'tokens': [50364, 341, 9205, 2370, 558, 286, 362, 341, 11671, 3798, 510, 293, 321, 362, 257, 743, 13644, 12973, 3798, 50648], 'temperature': 0.0, 'avg_logprob': -0.17455310009895486, 'compression_ratio': 1.7612612612612613, 'no_speech_prob': 0.3132449686527252}, {'id': 637, 'seek': 485632, 'start': 4862.0, 'end': 4867.96, 'text': ' remember what you need to do these are just set manipulations in and outs are sets okay I see what', 'tokens': [50648, 1604, 437, 291, 643, 281, 360, 613, 366, 445, 992, 9258, 4136, 294, 293, 14758, 366, 6352, 1392, 286, 536, 437, 50946], 'temperature': 0.0, 'avg_logprob': -0.17455310009895486, 'compression_ratio': 1.7612612612612613, 'no_speech_prob': 0.3132449686527252}, {'id': 638, 'seek': 485632, 'start': 4867.96, 'end': 4874.48, 'text': " you're saying so you're saying B out of B is a hash map yeah okay agreed but I'm saying what is", 'tokens': [50946, 291, 434, 1566, 370, 291, 434, 1566, 363, 484, 295, 363, 307, 257, 22019, 4471, 1338, 1392, 9166, 457, 286, 478, 1566, 437, 307, 51272], 'temperature': 0.0, 'avg_logprob': -0.17455310009895486, 'compression_ratio': 1.7612612612612613, 'no_speech_prob': 0.3132449686527252}, {'id': 639, 'seek': 485632, 'start': 4874.48, 'end': 4881.5199999999995, 'text': ' going to be my what is the how will represent a set itself every of these all these guys are sets', 'tokens': [51272, 516, 281, 312, 452, 437, 307, 264, 577, 486, 2906, 257, 992, 2564, 633, 295, 613, 439, 613, 1074, 366, 6352, 51624], 'temperature': 0.0, 'avg_logprob': -0.17455310009895486, 'compression_ratio': 1.7612612612612613, 'no_speech_prob': 0.3132449686527252}, {'id': 640, 'seek': 488152, 'start': 4881.52, 'end': 4887.400000000001, 'text': " right so enough be okay I see what you're saying you're saying in is nothing but a set from basic", 'tokens': [50364, 558, 370, 1547, 312, 1392, 286, 536, 437, 291, 434, 1566, 291, 434, 1566, 294, 307, 1825, 457, 257, 992, 490, 3875, 50658], 'temperature': 0.0, 'avg_logprob': -0.18104075003361356, 'compression_ratio': 1.7575757575757576, 'no_speech_prob': 0.023554904386401176}, {'id': 641, 'seek': 488152, 'start': 4887.400000000001, 'end': 4894.6, 'text': ' blocks to something to a set given the basic block I would like the set the set of definition', 'tokens': [50658, 8474, 281, 746, 281, 257, 992, 2212, 264, 3875, 3461, 286, 576, 411, 264, 992, 264, 992, 295, 7123, 51018], 'temperature': 0.0, 'avg_logprob': -0.18104075003361356, 'compression_ratio': 1.7575757575757576, 'no_speech_prob': 0.023554904386401176}, {'id': 642, 'seek': 488152, 'start': 4894.6, 'end': 4904.72, 'text': " that it has right so I'm asking what how will you represent this set of definitions list of things", 'tokens': [51018, 300, 309, 575, 558, 370, 286, 478, 3365, 437, 577, 486, 291, 2906, 341, 992, 295, 21988, 1329, 295, 721, 51524], 'temperature': 0.0, 'avg_logprob': -0.18104075003361356, 'compression_ratio': 1.7575757575757576, 'no_speech_prob': 0.023554904386401176}, {'id': 643, 'seek': 490472, 'start': 4905.2, 'end': 4911.4400000000005, 'text': ' list is not a like linked list and a what what can you use what should you use so this is what', 'tokens': [50388, 1329, 307, 406, 257, 411, 9408, 1329, 293, 257, 437, 437, 393, 291, 764, 437, 820, 291, 764, 370, 341, 307, 437, 50700], 'temperature': 0.0, 'avg_logprob': -0.136863770023469, 'compression_ratio': 1.7464788732394365, 'no_speech_prob': 0.06338882446289062}, {'id': 644, 'seek': 490472, 'start': 4911.4400000000005, 'end': 4919.52, 'text': " is called a bit set it's a very common data structure in almost all compiler frameworks", 'tokens': [50700, 307, 1219, 257, 857, 992, 309, 311, 257, 588, 2689, 1412, 3877, 294, 1920, 439, 31958, 29834, 51104], 'temperature': 0.0, 'avg_logprob': -0.136863770023469, 'compression_ratio': 1.7464788732394365, 'no_speech_prob': 0.06338882446289062}, {'id': 645, 'seek': 490472, 'start': 4919.52, 'end': 4923.92, 'text': ' right so essentially for a set I need to just say that it is a member of that set or is it', 'tokens': [51104, 558, 370, 4476, 337, 257, 992, 286, 643, 281, 445, 584, 300, 309, 307, 257, 4006, 295, 300, 992, 420, 307, 309, 51324], 'temperature': 0.0, 'avg_logprob': -0.136863770023469, 'compression_ratio': 1.7464788732394365, 'no_speech_prob': 0.06338882446289062}, {'id': 646, 'seek': 490472, 'start': 4923.92, 'end': 4931.56, 'text': ' not a member of that set right so I will allocate a vector of bits of the size of my universal set', 'tokens': [51324, 406, 257, 4006, 295, 300, 992, 558, 370, 286, 486, 35713, 257, 8062, 295, 9239, 295, 264, 2744, 295, 452, 11455, 992, 51706], 'temperature': 0.0, 'avg_logprob': -0.136863770023469, 'compression_ratio': 1.7464788732394365, 'no_speech_prob': 0.06338882446289062}, {'id': 647, 'seek': 493156, 'start': 4931.56, 'end': 4938.8, 'text': ' right for every element for every set I will put the respective bit bit on if it is a member', 'tokens': [50364, 558, 337, 633, 4478, 337, 633, 992, 286, 486, 829, 264, 23649, 857, 857, 322, 498, 309, 307, 257, 4006, 50726], 'temperature': 0.0, 'avg_logprob': -0.17763750893729074, 'compression_ratio': 1.7725118483412323, 'no_speech_prob': 0.0078049288131296635}, {'id': 648, 'seek': 493156, 'start': 4938.8, 'end': 4944.400000000001, 'text': ' otherwise off it is not a member right so you understand what you think right so the d1 d2', 'tokens': [50726, 5911, 766, 309, 307, 406, 257, 4006, 558, 370, 291, 1223, 437, 291, 519, 558, 370, 264, 274, 16, 274, 17, 51006], 'temperature': 0.0, 'avg_logprob': -0.17763750893729074, 'compression_ratio': 1.7725118483412323, 'no_speech_prob': 0.0078049288131296635}, {'id': 649, 'seek': 493156, 'start': 4944.400000000001, 'end': 4955.240000000001, 'text': " d3 d4 I will just order them in some way and I'll create a vector of bits b1 b2 b3 b4 and I will", 'tokens': [51006, 274, 18, 274, 19, 286, 486, 445, 1668, 552, 294, 512, 636, 293, 286, 603, 1884, 257, 8062, 295, 9239, 272, 16, 272, 17, 272, 18, 272, 19, 293, 286, 486, 51548], 'temperature': 0.0, 'avg_logprob': -0.17763750893729074, 'compression_ratio': 1.7725118483412323, 'no_speech_prob': 0.0078049288131296635}, {'id': 650, 'seek': 493156, 'start': 4955.240000000001, 'end': 4960.76, 'text': " set it to 1 if I want d2 to be in the set and set it to 0 if I don't want it to be in the set", 'tokens': [51548, 992, 309, 281, 502, 498, 286, 528, 274, 17, 281, 312, 294, 264, 992, 293, 992, 309, 281, 1958, 498, 286, 500, 380, 528, 309, 281, 312, 294, 264, 992, 51824], 'temperature': 0.0, 'avg_logprob': -0.17763750893729074, 'compression_ratio': 1.7725118483412323, 'no_speech_prob': 0.0078049288131296635}, {'id': 651, 'seek': 496076, 'start': 4960.76, 'end': 4966.360000000001, 'text': ' so now I can have these bit strings or bit vectors which will tell me what are the elements', 'tokens': [50364, 370, 586, 286, 393, 362, 613, 857, 13985, 420, 857, 18875, 597, 486, 980, 385, 437, 366, 264, 4959, 50644], 'temperature': 0.0, 'avg_logprob': -0.16324039258454975, 'compression_ratio': 1.8730964467005076, 'no_speech_prob': 0.00106246885843575}, {'id': 652, 'seek': 496076, 'start': 4966.360000000001, 'end': 4970.96, 'text': ' in that set of course I can only do it for a bounded side size set I cannot do it for an', 'tokens': [50644, 294, 300, 992, 295, 1164, 286, 393, 787, 360, 309, 337, 257, 37498, 1252, 2744, 992, 286, 2644, 360, 309, 337, 364, 50874], 'temperature': 0.0, 'avg_logprob': -0.16324039258454975, 'compression_ratio': 1.8730964467005076, 'no_speech_prob': 0.00106246885843575}, {'id': 653, 'seek': 496076, 'start': 4970.96, 'end': 4978.4400000000005, 'text': ' unbounded sense if the universal set is bounded right so now assuming that I use bit sets how do', 'tokens': [50874, 517, 18767, 292, 2020, 498, 264, 11455, 992, 307, 37498, 558, 370, 586, 11926, 300, 286, 764, 857, 6352, 577, 360, 51248], 'temperature': 0.0, 'avg_logprob': -0.16324039258454975, 'compression_ratio': 1.8730964467005076, 'no_speech_prob': 0.00106246885843575}, {'id': 654, 'seek': 496076, 'start': 4978.4400000000005, 'end': 4988.52, 'text': ' I get how do I do union over bit sets will be a or an or operation is a union over bit sets', 'tokens': [51248, 286, 483, 577, 360, 286, 360, 11671, 670, 857, 6352, 486, 312, 257, 420, 364, 420, 6916, 307, 257, 11671, 670, 857, 6352, 51752], 'temperature': 0.0, 'avg_logprob': -0.16324039258454975, 'compression_ratio': 1.8730964467005076, 'no_speech_prob': 0.00106246885843575}, {'id': 655, 'seek': 498852, 'start': 4988.52, 'end': 4997.72, 'text': ' extremely fast bit operations are really fast right and what will be intersection and differencing', 'tokens': [50364, 4664, 2370, 857, 7705, 366, 534, 2370, 558, 293, 437, 486, 312, 15236, 293, 743, 13644, 50824], 'temperature': 0.0, 'avg_logprob': -0.1263408660888672, 'compression_ratio': 1.8387096774193548, 'no_speech_prob': 0.03612285479903221}, {'id': 656, 'seek': 498852, 'start': 4997.72, 'end': 5004.92, 'text': ' you can figure out you can write that also as intersection and negation and things like that', 'tokens': [50824, 291, 393, 2573, 484, 291, 393, 2464, 300, 611, 382, 15236, 293, 2485, 399, 293, 721, 411, 300, 51184], 'temperature': 0.0, 'avg_logprob': -0.1263408660888672, 'compression_ratio': 1.8387096774193548, 'no_speech_prob': 0.03612285479903221}, {'id': 657, 'seek': 498852, 'start': 5004.92, 'end': 5013.76, 'text': ' right so you can actually do these operations really fast using when you have bit sets so now', 'tokens': [51184, 558, 370, 291, 393, 767, 360, 613, 7705, 534, 2370, 1228, 562, 291, 362, 857, 6352, 370, 586, 51626], 'temperature': 0.0, 'avg_logprob': -0.1263408660888672, 'compression_ratio': 1.8387096774193548, 'no_speech_prob': 0.03612285479903221}, {'id': 658, 'seek': 501376, 'start': 5013.76, 'end': 5018.68, 'text': " let's assume that my sets are represented as represented as bit sets now can you look at the", 'tokens': [50364, 718, 311, 6552, 300, 452, 6352, 366, 10379, 382, 10379, 382, 857, 6352, 586, 393, 291, 574, 412, 264, 50610], 'temperature': 0.0, 'avg_logprob': -0.16205743094471015, 'compression_ratio': 1.9008264462809918, 'no_speech_prob': 0.0066675227135419846}, {'id': 659, 'seek': 501376, 'start': 5018.68, 'end': 5022.88, 'text': ' algorithm and tell me the total cost of this so you can assume that I can do this bit set', 'tokens': [50610, 9284, 293, 980, 385, 264, 3217, 2063, 295, 341, 370, 291, 393, 6552, 300, 286, 393, 360, 341, 857, 992, 50820], 'temperature': 0.0, 'avg_logprob': -0.16205743094471015, 'compression_ratio': 1.9008264462809918, 'no_speech_prob': 0.0066675227135419846}, {'id': 660, 'seek': 501376, 'start': 5022.88, 'end': 5031.2, 'text': ' of operations in constant time so I am NOT so essentially what I have thrown away is the size', 'tokens': [50820, 295, 7705, 294, 5754, 565, 370, 286, 669, 12854, 370, 4476, 437, 286, 362, 11732, 1314, 307, 264, 2744, 51236], 'temperature': 0.0, 'avg_logprob': -0.16205743094471015, 'compression_ratio': 1.9008264462809918, 'no_speech_prob': 0.0066675227135419846}, {'id': 661, 'seek': 501376, 'start': 5031.2, 'end': 5037.2, 'text': " of my universal set I don't care how many definitions were there right they are represented", 'tokens': [51236, 295, 452, 11455, 992, 286, 500, 380, 1127, 577, 867, 21988, 645, 456, 558, 436, 366, 10379, 51536], 'temperature': 0.0, 'avg_logprob': -0.16205743094471015, 'compression_ratio': 1.9008264462809918, 'no_speech_prob': 0.0066675227135419846}, {'id': 662, 'seek': 501376, 'start': 5037.2, 'end': 5042.64, 'text': ' by bit set and I can do bit set operations in a in constant time now what is the complexity', 'tokens': [51536, 538, 857, 992, 293, 286, 393, 360, 857, 992, 7705, 294, 257, 294, 5754, 565, 586, 437, 307, 264, 14024, 51808], 'temperature': 0.0, 'avg_logprob': -0.16205743094471015, 'compression_ratio': 1.9008264462809918, 'no_speech_prob': 0.0066675227135419846}, {'id': 663, 'seek': 504264, 'start': 5042.64, 'end': 5047.68, 'text': " of this so the definition loop you don't have to bother about so the set of definition would", 'tokens': [50364, 295, 341, 370, 264, 7123, 6367, 291, 500, 380, 362, 281, 8677, 466, 370, 264, 992, 295, 7123, 576, 50616], 'temperature': 0.0, 'avg_logprob': -0.12290040562661846, 'compression_ratio': 1.8078817733990147, 'no_speech_prob': 0.022940360009670258}, {'id': 664, 'seek': 504264, 'start': 5047.68, 'end': 5051.4800000000005, 'text': ' come in when you want to do these business right when you have to do a union or minus', 'tokens': [50616, 808, 294, 562, 291, 528, 281, 360, 613, 1606, 558, 562, 291, 362, 281, 360, 257, 11671, 420, 3175, 50806], 'temperature': 0.0, 'avg_logprob': -0.12290040562661846, 'compression_ratio': 1.8078817733990147, 'no_speech_prob': 0.022940360009670258}, {'id': 665, 'seek': 504264, 'start': 5051.4800000000005, 'end': 5057.280000000001, 'text': ' that is where the size of the the size of the set matters but I am saying because we are presenting', 'tokens': [50806, 300, 307, 689, 264, 2744, 295, 264, 264, 2744, 295, 264, 992, 7001, 457, 286, 669, 1566, 570, 321, 366, 15578, 51096], 'temperature': 0.0, 'avg_logprob': -0.12290040562661846, 'compression_ratio': 1.8078817733990147, 'no_speech_prob': 0.022940360009670258}, {'id': 666, 'seek': 504264, 'start': 5057.280000000001, 'end': 5061.360000000001, 'text': " them as bit sets we can do that in constant time so you don't really need to worry about", 'tokens': [51096, 552, 382, 857, 6352, 321, 393, 360, 300, 294, 5754, 565, 370, 291, 500, 380, 534, 643, 281, 3292, 466, 51300], 'temperature': 0.0, 'avg_logprob': -0.12290040562661846, 'compression_ratio': 1.8078817733990147, 'no_speech_prob': 0.022940360009670258}, {'id': 667, 'seek': 506136, 'start': 5061.36, 'end': 5077.759999999999, 'text': ' the number of definitions you got what I am saying number of blocks yes so this iteration', 'tokens': [50364, 264, 1230, 295, 21988, 291, 658, 437, 286, 669, 1566, 1230, 295, 8474, 2086, 370, 341, 24784, 51184], 'temperature': 0.0, 'avg_logprob': -0.26898692903064547, 'compression_ratio': 1.1710526315789473, 'no_speech_prob': 0.2299177646636963}, {'id': 668, 'seek': 507776, 'start': 5077.76, 'end': 5093.16, 'text': ' move this is this inner thing happens for for the number of blocks and the outer thing so that', 'tokens': [50364, 1286, 341, 307, 341, 7284, 551, 2314, 337, 337, 264, 1230, 295, 8474, 293, 264, 10847, 551, 370, 300, 51134], 'temperature': 0.0, 'avg_logprob': -0.1472915013631185, 'compression_ratio': 1.7023809523809523, 'no_speech_prob': 0.1415191888809204}, {'id': 669, 'seek': 507776, 'start': 5093.16, 'end': 5099.0, 'text': " is one estimate at most the number of definitions because I can okay that's why you were saying", 'tokens': [51134, 307, 472, 12539, 412, 881, 264, 1230, 295, 21988, 570, 286, 393, 1392, 300, 311, 983, 291, 645, 1566, 51426], 'temperature': 0.0, 'avg_logprob': -0.1472915013631185, 'compression_ratio': 1.7023809523809523, 'no_speech_prob': 0.1415191888809204}, {'id': 670, 'seek': 507776, 'start': 5099.0, 'end': 5105.280000000001, 'text': ' definition I see so because every time assuming that I climb by only putting one definition and', 'tokens': [51426, 7123, 286, 536, 370, 570, 633, 565, 11926, 300, 286, 10724, 538, 787, 3372, 472, 7123, 293, 51740], 'temperature': 0.0, 'avg_logprob': -0.1472915013631185, 'compression_ratio': 1.7023809523809523, 'no_speech_prob': 0.1415191888809204}, {'id': 671, 'seek': 510528, 'start': 5106.0, 'end': 5111.5599999999995, 'text': " then it is number of basic blocks into number of definitions but that's a bad estimate can we do", 'tokens': [50400, 550, 309, 307, 1230, 295, 3875, 8474, 666, 1230, 295, 21988, 457, 300, 311, 257, 1578, 12539, 393, 321, 360, 50678], 'temperature': 0.0, 'avg_logprob': -0.19244009653727215, 'compression_ratio': 1.532258064516129, 'no_speech_prob': 0.05934913083910942}, {'id': 672, 'seek': 510528, 'start': 5111.5599999999995, 'end': 5127.88, 'text': ' better number of edges inside the value so but but but that can create a long chain right you', 'tokens': [50678, 1101, 1230, 295, 8819, 1854, 264, 2158, 370, 457, 457, 457, 300, 393, 1884, 257, 938, 5021, 558, 291, 51494], 'temperature': 0.0, 'avg_logprob': -0.19244009653727215, 'compression_ratio': 1.532258064516129, 'no_speech_prob': 0.05934913083910942}, {'id': 673, 'seek': 512788, 'start': 5127.88, 'end': 5138.32, 'text': ' can have a long chain of dependencies which again goes back to a loop yes that is simple', 'tokens': [50364, 393, 362, 257, 938, 5021, 295, 36606, 597, 797, 1709, 646, 281, 257, 6367, 2086, 300, 307, 2199, 50886], 'temperature': 0.0, 'avg_logprob': -0.18606568574905397, 'compression_ratio': 1.7864077669902914, 'no_speech_prob': 0.24441726505756378}, {'id': 674, 'seek': 512788, 'start': 5138.32, 'end': 5142.8, 'text': ' right computation inside is the number of basic blocks because all these are constant', 'tokens': [50886, 558, 24903, 1854, 307, 264, 1230, 295, 3875, 8474, 570, 439, 613, 366, 5754, 51110], 'temperature': 0.0, 'avg_logprob': -0.18606568574905397, 'compression_ratio': 1.7864077669902914, 'no_speech_prob': 0.24441726505756378}, {'id': 675, 'seek': 512788, 'start': 5142.8, 'end': 5151.4400000000005, 'text': ' so these are so okay one thing we assume is that my graphs are like control flow graphs are generally', 'tokens': [51110, 370, 613, 366, 370, 1392, 472, 551, 321, 6552, 307, 300, 452, 24877, 366, 411, 1969, 3095, 24877, 366, 5101, 51542], 'temperature': 0.0, 'avg_logprob': -0.18606568574905397, 'compression_ratio': 1.7864077669902914, 'no_speech_prob': 0.24441726505756378}, {'id': 676, 'seek': 512788, 'start': 5151.4400000000005, 'end': 5157.16, 'text': ' small graphs right so the in degree and out degrees are not high right so because like what', 'tokens': [51542, 1359, 24877, 558, 370, 264, 294, 4314, 293, 484, 5310, 366, 406, 1090, 558, 370, 570, 411, 437, 51828], 'temperature': 0.0, 'avg_logprob': -0.18606568574905397, 'compression_ratio': 1.7864077669902914, 'no_speech_prob': 0.24441726505756378}, {'id': 677, 'seek': 515716, 'start': 5157.16, 'end': 5162.84, 'text': ' do we say if condition branches into two switch cases are not so much but even we do not have', 'tokens': [50364, 360, 321, 584, 498, 4188, 14770, 666, 732, 3679, 3331, 366, 406, 370, 709, 457, 754, 321, 360, 406, 362, 50648], 'temperature': 0.0, 'avg_logprob': -0.13209439183140662, 'compression_ratio': 2.3465346534653464, 'no_speech_prob': 0.005715072154998779}, {'id': 678, 'seek': 515716, 'start': 5162.84, 'end': 5168.599999999999, 'text': ' large switch cases a lot of times so we can assume that we can assume these relax these things and', 'tokens': [50648, 2416, 3679, 3331, 257, 688, 295, 1413, 370, 321, 393, 6552, 300, 321, 393, 6552, 613, 5789, 613, 721, 293, 50936], 'temperature': 0.0, 'avg_logprob': -0.13209439183140662, 'compression_ratio': 2.3465346534653464, 'no_speech_prob': 0.005715072154998779}, {'id': 679, 'seek': 515716, 'start': 5168.599999999999, 'end': 5173.639999999999, 'text': " we can assume that these are constant time so even I'll assume this can be done in constant", 'tokens': [50936, 321, 393, 6552, 300, 613, 366, 5754, 565, 370, 754, 286, 603, 6552, 341, 393, 312, 1096, 294, 5754, 51188], 'temperature': 0.0, 'avg_logprob': -0.13209439183140662, 'compression_ratio': 2.3465346534653464, 'no_speech_prob': 0.005715072154998779}, {'id': 680, 'seek': 515716, 'start': 5173.639999999999, 'end': 5177.76, 'text': ' time let us assume this can be done in constant so this can be done in constant time this can', 'tokens': [51188, 565, 718, 505, 6552, 341, 393, 312, 1096, 294, 5754, 370, 341, 393, 312, 1096, 294, 5754, 565, 341, 393, 51394], 'temperature': 0.0, 'avg_logprob': -0.13209439183140662, 'compression_ratio': 2.3465346534653464, 'no_speech_prob': 0.005715072154998779}, {'id': 681, 'seek': 515716, 'start': 5177.76, 'end': 5183.44, 'text': " be done in constant let's not even bother about those things so this now goes for the number of", 'tokens': [51394, 312, 1096, 294, 5754, 718, 311, 406, 754, 8677, 466, 729, 721, 370, 341, 586, 1709, 337, 264, 1230, 295, 51678], 'temperature': 0.0, 'avg_logprob': -0.13209439183140662, 'compression_ratio': 2.3465346534653464, 'no_speech_prob': 0.005715072154998779}, {'id': 682, 'seek': 518344, 'start': 5183.44, 'end': 5188.799999999999, 'text': ' iterations right so now the question is how many times outer loop goes that is my main question', 'tokens': [50364, 36540, 558, 370, 586, 264, 1168, 307, 577, 867, 1413, 10847, 6367, 1709, 300, 307, 452, 2135, 1168, 50632], 'temperature': 0.0, 'avg_logprob': -0.14177801417208266, 'compression_ratio': 1.8894230769230769, 'no_speech_prob': 0.2059636116027832}, {'id': 683, 'seek': 518344, 'start': 5188.799999999999, 'end': 5194.719999999999, 'text': ' actually so one estimate for the outer loop was that number of definitions because I can say every', 'tokens': [50632, 767, 370, 472, 12539, 337, 264, 10847, 6367, 390, 300, 1230, 295, 21988, 570, 286, 393, 584, 633, 50928], 'temperature': 0.0, 'avg_logprob': -0.14177801417208266, 'compression_ratio': 1.8894230769230769, 'no_speech_prob': 0.2059636116027832}, {'id': 684, 'seek': 518344, 'start': 5194.719999999999, 'end': 5201.639999999999, 'text': " time I like maybe I'm really bad and I had I have to at most add one definition rather at least add", 'tokens': [50928, 565, 286, 411, 1310, 286, 478, 534, 1578, 293, 286, 632, 286, 362, 281, 412, 881, 909, 472, 7123, 2831, 412, 1935, 909, 51274], 'temperature': 0.0, 'avg_logprob': -0.14177801417208266, 'compression_ratio': 1.8894230769230769, 'no_speech_prob': 0.2059636116027832}, {'id': 685, 'seek': 518344, 'start': 5201.639999999999, 'end': 5207.599999999999, 'text': ' one definition right but then think about it you have to add at least one definition your solution', 'tokens': [51274, 472, 7123, 558, 457, 550, 519, 466, 309, 291, 362, 281, 909, 412, 1935, 472, 7123, 428, 3827, 51572], 'temperature': 0.0, 'avg_logprob': -0.14177801417208266, 'compression_ratio': 1.8894230769230769, 'no_speech_prob': 0.2059636116027832}, {'id': 686, 'seek': 520760, 'start': 5207.6, 'end': 5214.4400000000005, 'text': " set is not one set it's a set of sets or a vector of sets it may happen that you add a definition to", 'tokens': [50364, 992, 307, 406, 472, 992, 309, 311, 257, 992, 295, 6352, 420, 257, 8062, 295, 6352, 309, 815, 1051, 300, 291, 909, 257, 7123, 281, 50706], 'temperature': 0.0, 'avg_logprob': -0.0866102157755101, 'compression_ratio': 1.8215962441314555, 'no_speech_prob': 0.31857240200042725}, {'id': 687, 'seek': 520760, 'start': 5214.4400000000005, 'end': 5219.4400000000005, 'text': ' one of these sets which gets propagated to each of these sets and then this guy puts another', 'tokens': [50706, 472, 295, 613, 6352, 597, 2170, 12425, 770, 281, 1184, 295, 613, 6352, 293, 550, 341, 2146, 8137, 1071, 50956], 'temperature': 0.0, 'avg_logprob': -0.0866102157755101, 'compression_ratio': 1.8215962441314555, 'no_speech_prob': 0.31857240200042725}, {'id': 688, 'seek': 520760, 'start': 5219.4400000000005, 'end': 5224.56, 'text': ' definition to the first set again it propagates so the question is how many times my basic blocks', 'tokens': [50956, 7123, 281, 264, 700, 992, 797, 309, 12425, 1024, 370, 264, 1168, 307, 577, 867, 1413, 452, 3875, 8474, 51212], 'temperature': 0.0, 'avg_logprob': -0.0866102157755101, 'compression_ratio': 1.8215962441314555, 'no_speech_prob': 0.31857240200042725}, {'id': 689, 'seek': 520760, 'start': 5224.56, 'end': 5234.8, 'text': ' have to get updated that is what I am asking so that is like you will tell me tomorrow what what', 'tokens': [51212, 362, 281, 483, 10588, 300, 307, 437, 286, 669, 3365, 370, 300, 307, 411, 291, 486, 980, 385, 4153, 437, 437, 51724], 'temperature': 0.0, 'avg_logprob': -0.0866102157755101, 'compression_ratio': 1.8215962441314555, 'no_speech_prob': 0.31857240200042725}, {'id': 690, 'seek': 523480, 'start': 5234.8, 'end': 5242.96, 'text': ' goes on with this okay third question is like if you have to implement this algorithm so here I', 'tokens': [50364, 1709, 322, 365, 341, 1392, 2636, 1168, 307, 411, 498, 291, 362, 281, 4445, 341, 9284, 370, 510, 286, 50772], 'temperature': 0.0, 'avg_logprob': -0.12794090410984985, 'compression_ratio': 1.9665271966527196, 'no_speech_prob': 0.08228390663862228}, {'id': 691, 'seek': 523480, 'start': 5242.96, 'end': 5247.96, 'text': " do not mention order on these basic blocks I'm not saying I just say pick one basic block and", 'tokens': [50772, 360, 406, 2152, 1668, 322, 613, 3875, 8474, 286, 478, 406, 1566, 286, 445, 584, 1888, 472, 3875, 3461, 293, 51022], 'temperature': 0.0, 'avg_logprob': -0.12794090410984985, 'compression_ratio': 1.9665271966527196, 'no_speech_prob': 0.08228390663862228}, {'id': 692, 'seek': 523480, 'start': 5247.96, 'end': 5252.08, 'text': " update it pick one basic block and update that's all I worry about right I'm just worried about", 'tokens': [51022, 5623, 309, 1888, 472, 3875, 3461, 293, 5623, 300, 311, 439, 286, 3292, 466, 558, 286, 478, 445, 5804, 466, 51228], 'temperature': 0.0, 'avg_logprob': -0.12794090410984985, 'compression_ratio': 1.9665271966527196, 'no_speech_prob': 0.08228390663862228}, {'id': 693, 'seek': 523480, 'start': 5252.08, 'end': 5256.72, 'text': ' that every iteration of the while loop I update all my basic blocks that is all I care about I', 'tokens': [51228, 300, 633, 24784, 295, 264, 1339, 6367, 286, 5623, 439, 452, 3875, 8474, 300, 307, 439, 286, 1127, 466, 286, 51460], 'temperature': 0.0, 'avg_logprob': -0.12794090410984985, 'compression_ratio': 1.9665271966527196, 'no_speech_prob': 0.08228390663862228}, {'id': 694, 'seek': 523480, 'start': 5256.72, 'end': 5261.2, 'text': ' have not given an iteration order on the basic blocks what do you think will be the right', 'tokens': [51460, 362, 406, 2212, 364, 24784, 1668, 322, 264, 3875, 8474, 437, 360, 291, 519, 486, 312, 264, 558, 51684], 'temperature': 0.0, 'avg_logprob': -0.12794090410984985, 'compression_ratio': 1.9665271966527196, 'no_speech_prob': 0.08228390663862228}, {'id': 695, 'seek': 526120, 'start': 5261.2, 'end': 5265.84, 'text': ' iteration order what will be what do you think will be a good iteration order period before', 'tokens': [50364, 24784, 1668, 437, 486, 312, 437, 360, 291, 519, 486, 312, 257, 665, 24784, 1668, 2896, 949, 50596], 'temperature': 0.0, 'avg_logprob': -0.21179803212483725, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.11579234153032303}, {'id': 696, 'seek': 526120, 'start': 5265.84, 'end': 5274.5599999999995, 'text': ' child is not a graph traversal you have to tell me bfs bfs so essentially maybe but that is what', 'tokens': [50596, 1440, 307, 406, 257, 4295, 23149, 304, 291, 362, 281, 980, 385, 272, 16883, 272, 16883, 370, 4476, 1310, 457, 300, 307, 437, 51032], 'temperature': 0.0, 'avg_logprob': -0.21179803212483725, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.11579234153032303}, {'id': 697, 'seek': 526120, 'start': 5274.5599999999995, 'end': 5283.16, 'text': ' you wanted to say so say essentially what you do so what is the idea essentially you would like', 'tokens': [51032, 291, 1415, 281, 584, 370, 584, 4476, 437, 291, 360, 370, 437, 307, 264, 1558, 4476, 291, 576, 411, 51462], 'temperature': 0.0, 'avg_logprob': -0.21179803212483725, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.11579234153032303}, {'id': 698, 'seek': 526120, 'start': 5283.16, 'end': 5288.72, 'text': ' to do some sort of a so there is a cycle so you cannot essentially get a topological order but', 'tokens': [51462, 281, 360, 512, 1333, 295, 257, 370, 456, 307, 257, 6586, 370, 291, 2644, 4476, 483, 257, 1192, 4383, 1668, 457, 51740], 'temperature': 0.0, 'avg_logprob': -0.21179803212483725, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.11579234153032303}, {'id': 699, 'seek': 528872, 'start': 5288.72, 'end': 5296.84, 'text': ' if I use my dominator information can I do something or what if I look at the cycle free', 'tokens': [50364, 498, 286, 764, 452, 8859, 1639, 1589, 393, 286, 360, 746, 420, 437, 498, 286, 574, 412, 264, 6586, 1737, 50770], 'temperature': 0.0, 'avg_logprob': -0.13535239778715988, 'compression_ratio': 1.7990196078431373, 'no_speech_prob': 0.0033627250231802464}, {'id': 700, 'seek': 528872, 'start': 5296.84, 'end': 5305.56, 'text': ' graph if I just remove the cycles and topological sort on the on the cycle free graph that looks', 'tokens': [50770, 4295, 498, 286, 445, 4159, 264, 17796, 293, 1192, 4383, 1333, 322, 264, 322, 264, 6586, 1737, 4295, 300, 1542, 51206], 'temperature': 0.0, 'avg_logprob': -0.13535239778715988, 'compression_ratio': 1.7990196078431373, 'no_speech_prob': 0.0033627250231802464}, {'id': 701, 'seek': 528872, 'start': 5305.56, 'end': 5311.12, 'text': ' to be a good order because exactly what you are saying that I would have computed the the', 'tokens': [51206, 281, 312, 257, 665, 1668, 570, 2293, 437, 291, 366, 1566, 300, 286, 576, 362, 40610, 264, 264, 51484], 'temperature': 0.0, 'avg_logprob': -0.13535239778715988, 'compression_ratio': 1.7990196078431373, 'no_speech_prob': 0.0033627250231802464}, {'id': 702, 'seek': 528872, 'start': 5311.12, 'end': 5316.6, 'text': ' predecessors before I look at their children so I would have not so the and what would have', 'tokens': [51484, 24874, 45700, 949, 286, 574, 412, 641, 2227, 370, 286, 576, 362, 406, 370, 264, 293, 437, 576, 362, 51758], 'temperature': 0.0, 'avg_logprob': -0.13535239778715988, 'compression_ratio': 1.7990196078431373, 'no_speech_prob': 0.0033627250231802464}, {'id': 703, 'seek': 531660, 'start': 5316.6, 'end': 5324.64, 'text': ' the worst order the reverse of this right I keep on I have the like the states have not get updated', 'tokens': [50364, 264, 5855, 1668, 264, 9943, 295, 341, 558, 286, 1066, 322, 286, 362, 264, 411, 264, 4368, 362, 406, 483, 10588, 50766], 'temperature': 0.0, 'avg_logprob': -0.2351336424378143, 'compression_ratio': 1.8507462686567164, 'no_speech_prob': 0.2004808783531189}, {'id': 704, 'seek': 531660, 'start': 5324.64, 'end': 5329.84, 'text': ' and I am computing it already and at the end I go and update the guy and this guy is the start', 'tokens': [50766, 293, 286, 669, 15866, 309, 1217, 293, 412, 264, 917, 286, 352, 293, 5623, 264, 2146, 293, 341, 2146, 307, 264, 722, 51026], 'temperature': 0.0, 'avg_logprob': -0.2351336424378143, 'compression_ratio': 1.8507462686567164, 'no_speech_prob': 0.2004808783531189}, {'id': 705, 'seek': 531660, 'start': 5329.84, 'end': 5335.240000000001, 'text': " the whole cycle right so that's the worst the worst case that is for a forward analysis for", 'tokens': [51026, 264, 1379, 6586, 558, 370, 300, 311, 264, 5855, 264, 5855, 1389, 300, 307, 337, 257, 2128, 5215, 337, 51296], 'temperature': 0.0, 'avg_logprob': -0.2351336424378143, 'compression_ratio': 1.8507462686567164, 'no_speech_prob': 0.2004808783531189}, {'id': 706, 'seek': 531660, 'start': 5335.240000000001, 'end': 5339.88, 'text': ' reaching definitions had it been a backward analysis then I would have done the other', 'tokens': [51296, 9906, 21988, 632, 309, 668, 257, 23897, 5215, 550, 286, 576, 362, 1096, 264, 661, 51528], 'temperature': 0.0, 'avg_logprob': -0.2351336424378143, 'compression_ratio': 1.8507462686567164, 'no_speech_prob': 0.2004808783531189}, {'id': 707, 'seek': 533988, 'start': 5339.88, 'end': 5348.76, 'text': ' other direction right so these are interesting ways of like these are the so it does not change', 'tokens': [50364, 661, 3513, 558, 370, 613, 366, 1880, 2098, 295, 411, 613, 366, 264, 370, 309, 775, 406, 1319, 50808], 'temperature': 0.0, 'avg_logprob': -0.20049336590344394, 'compression_ratio': 1.933673469387755, 'no_speech_prob': 0.061778776347637177}, {'id': 708, 'seek': 533988, 'start': 5348.76, 'end': 5354.4800000000005, 'text': ' your worst case complexity but it will change your runtime when you are implementing so I think we', 'tokens': [50808, 428, 5855, 1389, 14024, 457, 309, 486, 1319, 428, 34474, 562, 291, 366, 18114, 370, 286, 519, 321, 51094], 'temperature': 0.0, 'avg_logprob': -0.20049336590344394, 'compression_ratio': 1.933673469387755, 'no_speech_prob': 0.061778776347637177}, {'id': 709, 'seek': 533988, 'start': 5354.4800000000005, 'end': 5360.36, 'text': ' have answered it so this is how you set the definitions and bit sets no what will change', 'tokens': [51094, 362, 10103, 309, 370, 341, 307, 577, 291, 992, 264, 21988, 293, 857, 6352, 572, 437, 486, 1319, 51388], 'temperature': 0.0, 'avg_logprob': -0.20049336590344394, 'compression_ratio': 1.933673469387755, 'no_speech_prob': 0.061778776347637177}, {'id': 710, 'seek': 533988, 'start': 5360.36, 'end': 5367.88, 'text': ' the worst case complexity will remain the same the runtime will change your implementation will', 'tokens': [51388, 264, 5855, 1389, 14024, 486, 6222, 264, 912, 264, 34474, 486, 1319, 428, 11420, 486, 51764], 'temperature': 0.0, 'avg_logprob': -0.20049336590344394, 'compression_ratio': 1.933673469387755, 'no_speech_prob': 0.061778776347637177}, {'id': 711, 'seek': 536788, 'start': 5367.88, 'end': 5373.24, 'text': ' be a better implementation so if you do forward analysis you should do topological order why', 'tokens': [50364, 312, 257, 1101, 11420, 370, 498, 291, 360, 2128, 5215, 291, 820, 360, 1192, 4383, 1668, 983, 50632], 'temperature': 0.0, 'avg_logprob': -0.21885528564453124, 'compression_ratio': 2.017167381974249, 'no_speech_prob': 0.0674164891242981}, {'id': 712, 'seek': 536788, 'start': 5373.24, 'end': 5378.2, 'text': ' because you should have computed whatever you are dependent on so in the forward iteration', 'tokens': [50632, 570, 291, 820, 362, 40610, 2035, 291, 366, 12334, 322, 370, 294, 264, 2128, 24784, 50880], 'temperature': 0.0, 'avg_logprob': -0.21885528564453124, 'compression_ratio': 2.017167381974249, 'no_speech_prob': 0.0674164891242981}, {'id': 713, 'seek': 536788, 'start': 5378.2, 'end': 5383.6, 'text': ' your in is dependent on the union of the outs of the predecessors so first compute the predecessors', 'tokens': [50880, 428, 294, 307, 12334, 322, 264, 11671, 295, 264, 14758, 295, 264, 24874, 45700, 370, 700, 14722, 264, 24874, 45700, 51150], 'temperature': 0.0, 'avg_logprob': -0.21885528564453124, 'compression_ratio': 2.017167381974249, 'no_speech_prob': 0.0674164891242981}, {'id': 714, 'seek': 536788, 'start': 5383.6, 'end': 5389.72, 'text': " and then only compute your the correct node if it's a backward analysis then you have to do the", 'tokens': [51150, 293, 550, 787, 14722, 428, 264, 3006, 9984, 498, 309, 311, 257, 23897, 5215, 550, 291, 362, 281, 360, 264, 51456], 'temperature': 0.0, 'avg_logprob': -0.21885528564453124, 'compression_ratio': 2.017167381974249, 'no_speech_prob': 0.0674164891242981}, {'id': 715, 'seek': 536788, 'start': 5389.72, 'end': 5396.6, 'text': ' other way your successor should get computed before you compute the present so now what if', 'tokens': [51456, 661, 636, 428, 31864, 820, 483, 40610, 949, 291, 14722, 264, 1974, 370, 586, 437, 498, 51800], 'temperature': 0.0, 'avg_logprob': -0.21885528564453124, 'compression_ratio': 2.017167381974249, 'no_speech_prob': 0.0674164891242981}, {'id': 716, 'seek': 539660, 'start': 5396.6, 'end': 5402.200000000001, 'text': " we have multiple statement basic blocks right so that's the only thing remaining to be covered", 'tokens': [50364, 321, 362, 3866, 5629, 3875, 8474, 558, 370, 300, 311, 264, 787, 551, 8877, 281, 312, 5343, 50644], 'temperature': 0.0, 'avg_logprob': -0.18933326721191407, 'compression_ratio': 2.0042194092827006, 'no_speech_prob': 0.022911716252565384}, {'id': 717, 'seek': 539660, 'start': 5402.200000000001, 'end': 5408.280000000001, 'text': ' so I did not tell you how to compute the gen and kill sets if I had multiple statement basic blocks', 'tokens': [50644, 370, 286, 630, 406, 980, 291, 577, 281, 14722, 264, 1049, 293, 1961, 6352, 498, 286, 632, 3866, 5629, 3875, 8474, 50948], 'temperature': 0.0, 'avg_logprob': -0.18933326721191407, 'compression_ratio': 2.0042194092827006, 'no_speech_prob': 0.022911716252565384}, {'id': 718, 'seek': 539660, 'start': 5408.280000000001, 'end': 5413.4400000000005, 'text': ' first question is why would I have a multiple statement basic blocks why why should I even', 'tokens': [50948, 700, 1168, 307, 983, 576, 286, 362, 257, 3866, 5629, 3875, 8474, 983, 983, 820, 286, 754, 51206], 'temperature': 0.0, 'avg_logprob': -0.18933326721191407, 'compression_ratio': 2.0042194092827006, 'no_speech_prob': 0.022911716252565384}, {'id': 719, 'seek': 539660, 'start': 5413.4400000000005, 'end': 5418.02, 'text': " bother having multiple statements why can't I live with single statement basic blocks nothing", 'tokens': [51206, 8677, 1419, 3866, 12363, 983, 393, 380, 286, 1621, 365, 2167, 5629, 3875, 8474, 1825, 51435], 'temperature': 0.0, 'avg_logprob': -0.18933326721191407, 'compression_ratio': 2.0042194092827006, 'no_speech_prob': 0.022911716252565384}, {'id': 720, 'seek': 539660, 'start': 5418.02, 'end': 5424.08, 'text': " nothing I mean I don't lose anything right still do fixed point iteration all these business so", 'tokens': [51435, 1825, 286, 914, 286, 500, 380, 3624, 1340, 558, 920, 360, 6806, 935, 24784, 439, 613, 1606, 370, 51738], 'temperature': 0.0, 'avg_logprob': -0.18933326721191407, 'compression_ratio': 2.0042194092827006, 'no_speech_prob': 0.022911716252565384}, {'id': 721, 'seek': 542408, 'start': 5424.08, 'end': 5433.6, 'text': ' no but why do I have to have basic blocks which have multiple statements I can have basic block', 'tokens': [50364, 572, 457, 983, 360, 286, 362, 281, 362, 3875, 8474, 597, 362, 3866, 12363, 286, 393, 362, 3875, 3461, 50840], 'temperature': 0.0, 'avg_logprob': -0.23952190174775964, 'compression_ratio': 1.89, 'no_speech_prob': 0.020921191200613976}, {'id': 722, 'seek': 542408, 'start': 5433.6, 'end': 5437.04, 'text': ' which have single statements what is the requirement of something being a basic block it has a single', 'tokens': [50840, 597, 362, 2167, 12363, 437, 307, 264, 11695, 295, 746, 885, 257, 3875, 3461, 309, 575, 257, 2167, 51012], 'temperature': 0.0, 'avg_logprob': -0.23952190174775964, 'compression_ratio': 1.89, 'no_speech_prob': 0.020921191200613976}, {'id': 723, 'seek': 542408, 'start': 5437.04, 'end': 5445.6, 'text': " entry and a single exit that's all so every statement by itself is a basic block what", 'tokens': [51012, 8729, 293, 257, 2167, 11043, 300, 311, 439, 370, 633, 5629, 538, 2564, 307, 257, 3875, 3461, 437, 51440], 'temperature': 0.0, 'avg_logprob': -0.23952190174775964, 'compression_ratio': 1.89, 'no_speech_prob': 0.020921191200613976}, {'id': 724, 'seek': 542408, 'start': 5445.6, 'end': 5451.44, 'text': " what complexity reduces how I have to do updates on all of them anyway I'm doing a fixed point", 'tokens': [51440, 437, 14024, 18081, 577, 286, 362, 281, 360, 9205, 322, 439, 295, 552, 4033, 286, 478, 884, 257, 6806, 935, 51732], 'temperature': 0.0, 'avg_logprob': -0.23952190174775964, 'compression_ratio': 1.89, 'no_speech_prob': 0.020921191200613976}, {'id': 725, 'seek': 545144, 'start': 5451.44, 'end': 5457.44, 'text': ' computation what does it impact size of the solution it impacts the size of the solution', 'tokens': [50364, 24903, 437, 775, 309, 2712, 2744, 295, 264, 3827, 309, 11606, 264, 2744, 295, 264, 3827, 50664], 'temperature': 0.0, 'avg_logprob': -0.1384801175220903, 'compression_ratio': 1.904040404040404, 'no_speech_prob': 0.10652977228164673}, {'id': 726, 'seek': 545144, 'start': 5457.44, 'end': 5464.919999999999, 'text': " right so I'll have to do my function vector will be larger so my inner loop in the while loop will", 'tokens': [50664, 558, 370, 286, 603, 362, 281, 360, 452, 2445, 8062, 486, 312, 4833, 370, 452, 7284, 6367, 294, 264, 1339, 6367, 486, 51038], 'temperature': 0.0, 'avg_logprob': -0.1384801175220903, 'compression_ratio': 1.904040404040404, 'no_speech_prob': 0.10652977228164673}, {'id': 727, 'seek': 545144, 'start': 5464.919999999999, 'end': 5472.5599999999995, 'text': " be larger because I'll have to run through a larger set of larger vector function vector right", 'tokens': [51038, 312, 4833, 570, 286, 603, 362, 281, 1190, 807, 257, 4833, 992, 295, 4833, 8062, 2445, 8062, 558, 51420], 'temperature': 0.0, 'avg_logprob': -0.1384801175220903, 'compression_ratio': 1.904040404040404, 'no_speech_prob': 0.10652977228164673}, {'id': 728, 'seek': 545144, 'start': 5472.5599999999995, 'end': 5477.879999999999, 'text': ' instead what we do is we try to summarize the information for every basic block separately and', 'tokens': [51420, 2602, 437, 321, 360, 307, 321, 853, 281, 20858, 264, 1589, 337, 633, 3875, 3461, 14759, 293, 51686], 'temperature': 0.0, 'avg_logprob': -0.1384801175220903, 'compression_ratio': 1.904040404040404, 'no_speech_prob': 0.10652977228164673}, {'id': 729, 'seek': 547788, 'start': 5477.88, 'end': 5483.2, 'text': ' try to do this so my number of equations increase so I do not have to so I can live', 'tokens': [50364, 853, 281, 360, 341, 370, 452, 1230, 295, 11787, 3488, 370, 286, 360, 406, 362, 281, 370, 286, 393, 1621, 50630], 'temperature': 0.0, 'avg_logprob': -0.13150446442351943, 'compression_ratio': 1.8826530612244898, 'no_speech_prob': 0.10888929665088654}, {'id': 730, 'seek': 547788, 'start': 5483.2, 'end': 5488.08, 'text': ' with a smaller set of equations if I combine multiple statements together into a basic block', 'tokens': [50630, 365, 257, 4356, 992, 295, 11787, 498, 286, 10432, 3866, 12363, 1214, 666, 257, 3875, 3461, 50874], 'temperature': 0.0, 'avg_logprob': -0.13150446442351943, 'compression_ratio': 1.8826530612244898, 'no_speech_prob': 0.10888929665088654}, {'id': 731, 'seek': 547788, 'start': 5488.08, 'end': 5496.32, 'text': ' so there looks to be a interesting reason to do this now the question is that if I have multiple', 'tokens': [50874, 370, 456, 1542, 281, 312, 257, 1880, 1778, 281, 360, 341, 586, 264, 1168, 307, 300, 498, 286, 362, 3866, 51286], 'temperature': 0.0, 'avg_logprob': -0.13150446442351943, 'compression_ratio': 1.8826530612244898, 'no_speech_prob': 0.10888929665088654}, {'id': 732, 'seek': 547788, 'start': 5496.32, 'end': 5503.88, 'text': ' statement basic blocks the only question is how do I what is going to be my gen set and what is', 'tokens': [51286, 5629, 3875, 8474, 264, 787, 1168, 307, 577, 360, 286, 437, 307, 516, 281, 312, 452, 1049, 992, 293, 437, 307, 51664], 'temperature': 0.0, 'avg_logprob': -0.13150446442351943, 'compression_ratio': 1.8826530612244898, 'no_speech_prob': 0.10888929665088654}, {'id': 733, 'seek': 550388, 'start': 5503.88, 'end': 5512.32, 'text': ' going to be my kill set let me give you a problem let me give you a example like a basic block on', 'tokens': [50364, 516, 281, 312, 452, 1961, 992, 718, 385, 976, 291, 257, 1154, 718, 385, 976, 291, 257, 1365, 411, 257, 3875, 3461, 322, 50786], 'temperature': 0.0, 'avg_logprob': -0.17270058984155054, 'compression_ratio': 2.0300429184549356, 'no_speech_prob': 0.09242548793554306}, {'id': 734, 'seek': 550388, 'start': 5512.32, 'end': 5522.6, 'text': " which you can think about a equals 5 b equals 29 a equals 26 let's say this basic yeah that is", 'tokens': [50786, 597, 291, 393, 519, 466, 257, 6915, 1025, 272, 6915, 9413, 257, 6915, 7551, 718, 311, 584, 341, 3875, 1338, 300, 307, 51300], 'temperature': 0.0, 'avg_logprob': -0.17270058984155054, 'compression_ratio': 2.0300429184549356, 'no_speech_prob': 0.09242548793554306}, {'id': 735, 'seek': 550388, 'start': 5522.6, 'end': 5525.84, 'text': ' all you need everything else you already have the equations you already have just apply them', 'tokens': [51300, 439, 291, 643, 1203, 1646, 291, 1217, 362, 264, 11787, 291, 1217, 362, 445, 3079, 552, 51462], 'temperature': 0.0, 'avg_logprob': -0.17270058984155054, 'compression_ratio': 2.0300429184549356, 'no_speech_prob': 0.09242548793554306}, {'id': 736, 'seek': 550388, 'start': 5525.84, 'end': 5529.52, 'text': " everything else just works only thing we don't know is for multiple statement basic block what", 'tokens': [51462, 1203, 1646, 445, 1985, 787, 551, 321, 500, 380, 458, 307, 337, 3866, 5629, 3875, 3461, 437, 51646], 'temperature': 0.0, 'avg_logprob': -0.17270058984155054, 'compression_ratio': 2.0300429184549356, 'no_speech_prob': 0.09242548793554306}, {'id': 737, 'seek': 550388, 'start': 5529.52, 'end': 5533.12, 'text': ' is going to be my gen what is going to be my kill for a single statement basic block we know', 'tokens': [51646, 307, 516, 281, 312, 452, 1049, 437, 307, 516, 281, 312, 452, 1961, 337, 257, 2167, 5629, 3875, 3461, 321, 458, 51826], 'temperature': 0.0, 'avg_logprob': -0.17270058984155054, 'compression_ratio': 2.0300429184549356, 'no_speech_prob': 0.09242548793554306}, {'id': 738, 'seek': 553312, 'start': 5533.12, 'end': 5541.0, 'text': ' it I hope gen is the guy which is sitting there right and kill is all the definitions', 'tokens': [50364, 309, 286, 1454, 1049, 307, 264, 2146, 597, 307, 3798, 456, 558, 293, 1961, 307, 439, 264, 21988, 50758], 'temperature': 0.0, 'avg_logprob': -0.18040372386123193, 'compression_ratio': 1.592814371257485, 'no_speech_prob': 0.1093575656414032}, {'id': 739, 'seek': 553312, 'start': 5541.0, 'end': 5551.88, 'text': ' that particular assignment is killing right now how do I get the what do I do for the', 'tokens': [50758, 300, 1729, 15187, 307, 8011, 558, 586, 577, 360, 286, 483, 264, 437, 360, 286, 360, 337, 264, 51302], 'temperature': 0.0, 'avg_logprob': -0.18040372386123193, 'compression_ratio': 1.592814371257485, 'no_speech_prob': 0.1093575656414032}, {'id': 740, 'seek': 553312, 'start': 5551.88, 'end': 5555.44, 'text': " multiple statement basic block so for instance for this basic block let's say this is d1 d2 d3", 'tokens': [51302, 3866, 5629, 3875, 3461, 370, 337, 5197, 337, 341, 3875, 3461, 718, 311, 584, 341, 307, 274, 16, 274, 17, 274, 18, 51480], 'temperature': 0.0, 'avg_logprob': -0.18040372386123193, 'compression_ratio': 1.592814371257485, 'no_speech_prob': 0.1093575656414032}, {'id': 741, 'seek': 555544, 'start': 5555.44, 'end': 5568.799999999999, 'text': ' what are going to be my gen and kill sets are you sure is gen going to be d1 and d3', 'tokens': [50364, 437, 366, 516, 281, 312, 452, 1049, 293, 1961, 6352, 366, 291, 988, 307, 1049, 516, 281, 312, 274, 16, 293, 274, 18, 51032], 'temperature': 0.0, 'avg_logprob': -0.2240842603287607, 'compression_ratio': 1.7156862745098038, 'no_speech_prob': 0.3804056644439697}, {'id': 742, 'seek': 555544, 'start': 5568.799999999999, 'end': 5577.44, 'text': ' sorry sorry sorry sorry d2 and d3 why not d1 right right right and my so this is my gen and', 'tokens': [51032, 2597, 2597, 2597, 2597, 274, 17, 293, 274, 18, 983, 406, 274, 16, 558, 558, 558, 293, 452, 370, 341, 307, 452, 1049, 293, 51464], 'temperature': 0.0, 'avg_logprob': -0.2240842603287607, 'compression_ratio': 1.7156862745098038, 'no_speech_prob': 0.3804056644439697}, {'id': 743, 'seek': 557744, 'start': 5578.32, 'end': 5588.599999999999, 'text': ' what is my kill kill is going to be well I have to really consider other universal these things', 'tokens': [50408, 437, 307, 452, 1961, 1961, 307, 516, 281, 312, 731, 286, 362, 281, 534, 1949, 661, 11455, 613, 721, 50922], 'temperature': 0.0, 'avg_logprob': -0.2929800831994345, 'compression_ratio': 1.4566929133858268, 'no_speech_prob': 0.4476858675479889}, {'id': 744, 'seek': 557744, 'start': 5588.599999999999, 'end': 5605.599999999999, 'text': ' corresponding to what why do so how do you initialize it whatever your list is both empty', 'tokens': [50922, 11760, 281, 437, 983, 360, 370, 577, 360, 291, 5883, 1125, 309, 2035, 428, 1329, 307, 1293, 6707, 51772], 'temperature': 0.0, 'avg_logprob': -0.2929800831994345, 'compression_ratio': 1.4566929133858268, 'no_speech_prob': 0.4476858675479889}, {'id': 745, 'seek': 560560, 'start': 5605.6, 'end': 5609.88, 'text': " so one for gen one for kill let's talk the general worth of us these are separate anyway", 'tokens': [50364, 370, 472, 337, 1049, 472, 337, 1961, 718, 311, 751, 264, 2674, 3163, 295, 505, 613, 366, 4994, 4033, 50578], 'temperature': 0.0, 'avg_logprob': -0.19524059295654297, 'compression_ratio': 1.8578680203045685, 'no_speech_prob': 0.18033748865127563}, {'id': 746, 'seek': 560560, 'start': 5609.88, 'end': 5619.64, 'text': ' d1 have you got it so I we simply do a scan through the through the linear the this thing', 'tokens': [50578, 274, 16, 362, 291, 658, 309, 370, 286, 321, 2935, 360, 257, 11049, 807, 264, 807, 264, 8213, 264, 341, 551, 51066], 'temperature': 0.0, 'avg_logprob': -0.19524059295654297, 'compression_ratio': 1.8578680203045685, 'no_speech_prob': 0.18033748865127563}, {'id': 747, 'seek': 560560, 'start': 5619.64, 'end': 5625.56, 'text': ' the basic block we start with for gen I start with an empty set start with an empty set I just', 'tokens': [51066, 264, 3875, 3461, 321, 722, 365, 337, 1049, 286, 722, 365, 364, 6707, 992, 722, 365, 364, 6707, 992, 286, 445, 51362], 'temperature': 0.0, 'avg_logprob': -0.19524059295654297, 'compression_ratio': 1.8578680203045685, 'no_speech_prob': 0.18033748865127563}, {'id': 748, 'seek': 560560, 'start': 5625.56, 'end': 5632.4800000000005, 'text': ' say that I get the first statement I put that definition in the set I get the next statement', 'tokens': [51362, 584, 300, 286, 483, 264, 700, 5629, 286, 829, 300, 7123, 294, 264, 992, 286, 483, 264, 958, 5629, 51708], 'temperature': 0.0, 'avg_logprob': -0.19524059295654297, 'compression_ratio': 1.8578680203045685, 'no_speech_prob': 0.18033748865127563}, {'id': 749, 'seek': 563248, 'start': 5632.48, 'end': 5639.08, 'text': ' I put that definition in the set and I may remove things if it kills anything already present in', 'tokens': [50364, 286, 829, 300, 7123, 294, 264, 992, 293, 286, 815, 4159, 721, 498, 309, 14563, 1340, 1217, 1974, 294, 50694], 'temperature': 0.0, 'avg_logprob': -0.1442835411328948, 'compression_ratio': 1.6710526315789473, 'no_speech_prob': 0.18120279908180237}, {'id': 750, 'seek': 563248, 'start': 5639.08, 'end': 5644.599999999999, 'text': ' gen because by the by the time I reach the end of the basic block the new definition will not', 'tokens': [50694, 1049, 570, 538, 264, 538, 264, 565, 286, 2524, 264, 917, 295, 264, 3875, 3461, 264, 777, 7123, 486, 406, 50970], 'temperature': 0.0, 'avg_logprob': -0.1442835411328948, 'compression_ratio': 1.6710526315789473, 'no_speech_prob': 0.18120279908180237}, {'id': 751, 'seek': 563248, 'start': 5644.599999999999, 'end': 5650.599999999999, 'text': " be exposed like for instance a right whenever I'm hitting this last a equals 26 I need to push out", 'tokens': [50970, 312, 9495, 411, 337, 5197, 257, 558, 5699, 286, 478, 8850, 341, 1036, 257, 6915, 7551, 286, 643, 281, 2944, 484, 51270], 'temperature': 0.0, 'avg_logprob': -0.1442835411328948, 'compression_ratio': 1.6710526315789473, 'no_speech_prob': 0.18120279908180237}, {'id': 752, 'seek': 563248, 'start': 5650.599999999999, 'end': 5655.959999999999, 'text': ' the earlier definition d1 right so the gen set here it will become start with empty at this', 'tokens': [51270, 264, 3071, 7123, 274, 16, 558, 370, 264, 1049, 992, 510, 309, 486, 1813, 722, 365, 6707, 412, 341, 51538], 'temperature': 0.0, 'avg_logprob': -0.1442835411328948, 'compression_ratio': 1.6710526315789473, 'no_speech_prob': 0.18120279908180237}, {'id': 753, 'seek': 565596, 'start': 5655.96, 'end': 5664.56, 'text': ' location it will have d1 at this location it will have d1 and d2 at this location it will push it', 'tokens': [50364, 4914, 309, 486, 362, 274, 16, 412, 341, 4914, 309, 486, 362, 274, 16, 293, 274, 17, 412, 341, 4914, 309, 486, 2944, 309, 50794], 'temperature': 0.0, 'avg_logprob': -0.13896887642996653, 'compression_ratio': 1.9605263157894737, 'no_speech_prob': 0.3121122717857361}, {'id': 754, 'seek': 565596, 'start': 5664.56, 'end': 5674.04, 'text': ' will have d1 d2 d3 and it will push out d1 right because now d1 cannot be generated because somebody', 'tokens': [50794, 486, 362, 274, 16, 274, 17, 274, 18, 293, 309, 486, 2944, 484, 274, 16, 558, 570, 586, 274, 16, 2644, 312, 10833, 570, 2618, 51268], 'temperature': 0.0, 'avg_logprob': -0.13896887642996653, 'compression_ratio': 1.9605263157894737, 'no_speech_prob': 0.3121122717857361}, {'id': 755, 'seek': 565596, 'start': 5674.04, 'end': 5681.72, 'text': ' in the basic block itself has killed it right so this is my gen algorithm what is my kill algorithm', 'tokens': [51268, 294, 264, 3875, 3461, 2564, 575, 4652, 309, 558, 370, 341, 307, 452, 1049, 9284, 437, 307, 452, 1961, 9284, 51652], 'temperature': 0.0, 'avg_logprob': -0.13896887642996653, 'compression_ratio': 1.9605263157894737, 'no_speech_prob': 0.3121122717857361}, {'id': 756, 'seek': 568172, 'start': 5681.72, 'end': 5688.64, 'text': ' kill I can just take a union of everything and whichever these variable skills because I kill', 'tokens': [50364, 1961, 286, 393, 445, 747, 257, 11671, 295, 1203, 293, 24123, 613, 7006, 3942, 570, 286, 1961, 50710], 'temperature': 0.0, 'avg_logprob': -0.2427050153785777, 'compression_ratio': 1.8943089430894309, 'no_speech_prob': 0.13935455679893494}, {'id': 757, 'seek': 568172, 'start': 5688.64, 'end': 5693.360000000001, 'text': " and anyway I generate later after that so I don't have to watch no so there are no no so", 'tokens': [50710, 293, 4033, 286, 8460, 1780, 934, 300, 370, 286, 500, 380, 362, 281, 1159, 572, 370, 456, 366, 572, 572, 370, 50946], 'temperature': 0.0, 'avg_logprob': -0.2427050153785777, 'compression_ratio': 1.8943089430894309, 'no_speech_prob': 0.13935455679893494}, {'id': 758, 'seek': 568172, 'start': 5693.360000000001, 'end': 5697.88, 'text': ' you are you for the kill set you will start with you have to talk about what are definition', 'tokens': [50946, 291, 366, 291, 337, 264, 1961, 992, 291, 486, 722, 365, 291, 362, 281, 751, 466, 437, 366, 7123, 51172], 'temperature': 0.0, 'avg_logprob': -0.2427050153785777, 'compression_ratio': 1.8943089430894309, 'no_speech_prob': 0.13935455679893494}, {'id': 759, 'seek': 568172, 'start': 5697.88, 'end': 5702.12, 'text': ' in the universal set get killed kill is much simpler right you know that there are updates', 'tokens': [51172, 294, 264, 11455, 992, 483, 4652, 1961, 307, 709, 18587, 558, 291, 458, 300, 456, 366, 9205, 51384], 'temperature': 0.0, 'avg_logprob': -0.2427050153785777, 'compression_ratio': 1.8943089430894309, 'no_speech_prob': 0.13935455679893494}, {'id': 760, 'seek': 568172, 'start': 5702.12, 'end': 5709.52, 'text': ' to a and b in this basic block so in the universal set whichever definitions are defining a or b all', 'tokens': [51384, 281, 257, 293, 272, 294, 341, 3875, 3461, 370, 294, 264, 11455, 992, 24123, 21988, 366, 17827, 257, 420, 272, 439, 51754], 'temperature': 0.0, 'avg_logprob': -0.2427050153785777, 'compression_ratio': 1.8943089430894309, 'no_speech_prob': 0.13935455679893494}, {'id': 761, 'seek': 570952, 'start': 5709.52, 'end': 5715.120000000001, 'text': ' of them get killed so now we all know data flow analysis of at least reaching definitions very well', 'tokens': [50366, 295, 552, 483, 4652, 370, 586, 321, 439, 458, 1412, 3095, 5215, 295, 412, 1935, 9906, 21988, 588, 731, 50644], 'temperature': 0.0, 'avg_logprob': -0.2430154193531383, 'compression_ratio': 1.2222222222222223, 'no_speech_prob': 0.4798091650009155}]