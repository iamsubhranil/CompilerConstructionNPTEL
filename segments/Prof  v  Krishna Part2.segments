[{'id': 0, 'seek': 0, 'start': 0.0, 'end': 14.94, 'text': ' Is this, can I, if I am going to the next P2, can I go to the next code or you guys,', 'tokens': [50364, 1119, 341, 11, 393, 286, 11, 498, 286, 669, 516, 281, 264, 958, 430, 17, 11, 393, 286, 352, 281, 264, 958, 3089, 420, 291, 1074, 11, 51111], 'temperature': 0.0, 'avg_logprob': -0.38537367652444277, 'compression_ratio': 1.5266666666666666, 'no_speech_prob': 0.03405677154660225}, {'id': 1, 'seek': 0, 'start': 14.94, 'end': 21.68, 'text': ' you have copied the basic piece of code right? Okay, so you can clearly see the difference', 'tokens': [51111, 291, 362, 25365, 264, 3875, 2522, 295, 3089, 558, 30, 1033, 11, 370, 291, 393, 4448, 536, 264, 2649, 51448], 'temperature': 0.0, 'avg_logprob': -0.38537367652444277, 'compression_ratio': 1.5266666666666666, 'no_speech_prob': 0.03405677154660225}, {'id': 2, 'seek': 0, 'start': 21.68, 'end': 28.44, 'text': ' right? So, anyone who is not able to see that, anyone', 'tokens': [51448, 558, 30, 407, 11, 2878, 567, 307, 406, 1075, 281, 536, 300, 11, 2878, 51786], 'temperature': 0.0, 'avg_logprob': -0.38537367652444277, 'compression_ratio': 1.5266666666666666, 'no_speech_prob': 0.03405677154660225}, {'id': 3, 'seek': 2844, 'start': 28.44, 'end': 35.84, 'text': ' who is not able to run the first version of P1 yet and need help, the reason why I said', 'tokens': [50364, 567, 307, 406, 1075, 281, 1190, 264, 700, 3037, 295, 430, 16, 1939, 293, 643, 854, 11, 264, 1778, 983, 286, 848, 50734], 'temperature': 0.0, 'avg_logprob': -0.4280557198957963, 'compression_ratio': 1.2857142857142858, 'no_speech_prob': 0.3463172912597656}, {'id': 4, 'seek': 2844, 'start': 35.84, 'end': 48.84, 'text': ' if you say no I do not want to do then that is hard but.', 'tokens': [50734, 498, 291, 584, 572, 286, 360, 406, 528, 281, 360, 550, 300, 307, 1152, 457, 13, 51384], 'temperature': 0.0, 'avg_logprob': -0.4280557198957963, 'compression_ratio': 1.2857142857142858, 'no_speech_prob': 0.3463172912597656}, {'id': 5, 'seek': 4884, 'start': 48.84, 'end': 53.2, 'text': ' 100 to 500 elements. 100 to 500 elements.', 'tokens': [50364, 2319, 281, 5923, 4959, 13, 2319, 281, 5923, 4959, 13, 50582], 'temperature': 0.0, 'avg_logprob': -0.5225830078125, 'compression_ratio': 1.5520361990950227, 'no_speech_prob': 0.4368082284927368}, {'id': 6, 'seek': 4884, 'start': 53.2, 'end': 61.64, 'text': ' Having trouble with it? Fine, then allocate two dimensional, I mean on heap if you can.', 'tokens': [50582, 10222, 5253, 365, 309, 30, 12024, 11, 550, 35713, 732, 18795, 11, 286, 914, 322, 33591, 498, 291, 393, 13, 51004], 'temperature': 0.0, 'avg_logprob': -0.5225830078125, 'compression_ratio': 1.5520361990950227, 'no_speech_prob': 0.4368082284927368}, {'id': 7, 'seek': 4884, 'start': 61.64, 'end': 67.64, 'text': ' Put it global. Put it global, sure, that is simpler. For', 'tokens': [51004, 4935, 309, 4338, 13, 4935, 309, 4338, 11, 988, 11, 300, 307, 18587, 13, 1171, 51304], 'temperature': 0.0, 'avg_logprob': -0.5225830078125, 'compression_ratio': 1.5520361990950227, 'no_speech_prob': 0.4368082284927368}, {'id': 8, 'seek': 4884, 'start': 67.64, 'end': 70.80000000000001, 'text': ' the time being, I mean in general you should follow all the program practices, our goal', 'tokens': [51304, 264, 565, 885, 11, 286, 914, 294, 2674, 291, 820, 1524, 439, 264, 1461, 7525, 11, 527, 3387, 51462], 'temperature': 0.0, 'avg_logprob': -0.5225830078125, 'compression_ratio': 1.5520361990950227, 'no_speech_prob': 0.4368082284927368}, {'id': 9, 'seek': 4884, 'start': 70.80000000000001, 'end': 77.0, 'text': ' currently is to test this thing right? So, are you VINIT student or?', 'tokens': [51462, 4362, 307, 281, 1500, 341, 551, 558, 30, 407, 11, 366, 291, 691, 1464, 3927, 3107, 420, 30, 51772], 'temperature': 0.0, 'avg_logprob': -0.5225830078125, 'compression_ratio': 1.5520361990950227, 'no_speech_prob': 0.4368082284927368}, {'id': 10, 'seek': 7700, 'start': 78.0, 'end': 93.0, 'text': ' Oh, okay, cool. Say my hello to him. We go back a long way. He is a very good person.', 'tokens': [50414, 876, 11, 1392, 11, 1627, 13, 6463, 452, 7751, 281, 796, 13, 492, 352, 646, 257, 938, 636, 13, 634, 307, 257, 588, 665, 954, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.39085325598716736, 'compression_ratio': 1.39568345323741, 'no_speech_prob': 0.8063828945159912}, {'id': 11, 'seek': 7700, 'start': 93.0, 'end': 99.0, 'text': ' I came there to one and a half, one year back, no, one and a half years back also.', 'tokens': [51164, 286, 1361, 456, 281, 472, 293, 257, 1922, 11, 472, 1064, 646, 11, 572, 11, 472, 293, 257, 1922, 924, 646, 611, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.39085325598716736, 'compression_ratio': 1.39568345323741, 'no_speech_prob': 0.8063828945159912}, {'id': 12, 'seek': 7700, 'start': 99.0, 'end': 101.0, 'text': ' You joined this year? No.', 'tokens': [51464, 509, 6869, 341, 1064, 30, 883, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.39085325598716736, 'compression_ratio': 1.39568345323741, 'no_speech_prob': 0.8063828945159912}, {'id': 13, 'seek': 10100, 'start': 101.0, 'end': 110.0, 'text': ' Okay, I came there one and a half, I have come there couple of times but we know each', 'tokens': [50364, 1033, 11, 286, 1361, 456, 472, 293, 257, 1922, 11, 286, 362, 808, 456, 1916, 295, 1413, 457, 321, 458, 1184, 50814], 'temperature': 0.0, 'avg_logprob': -0.3177056312561035, 'compression_ratio': 1.3977900552486189, 'no_speech_prob': 0.25275248289108276}, {'id': 14, 'seek': 10100, 'start': 110.0, 'end': 121.0, 'text': ' other now. He was doing PhD in IAS when I was doing my Masters. In general I think VINIT', 'tokens': [50814, 661, 586, 13, 634, 390, 884, 14476, 294, 286, 3160, 562, 286, 390, 884, 452, 27014, 13, 682, 2674, 286, 519, 691, 1464, 3927, 51364], 'temperature': 0.0, 'avg_logprob': -0.3177056312561035, 'compression_ratio': 1.3977900552486189, 'no_speech_prob': 0.25275248289108276}, {'id': 15, 'seek': 10100, 'start': 121.0, 'end': 127.0, 'text': ' is a very good person, once you meet you do not forget anything. Are you fine?', 'tokens': [51364, 307, 257, 588, 665, 954, 11, 1564, 291, 1677, 291, 360, 406, 2870, 1340, 13, 2014, 291, 2489, 30, 51664], 'temperature': 0.0, 'avg_logprob': -0.3177056312561035, 'compression_ratio': 1.3977900552486189, 'no_speech_prob': 0.25275248289108276}, {'id': 16, 'seek': 12700, 'start': 127.0, 'end': 133.0, 'text': ' Do not worry about initialization, Rama. Do not worry about initialization. Okay, the', 'tokens': [50364, 1144, 406, 3292, 466, 5883, 2144, 11, 39828, 13, 1144, 406, 3292, 466, 5883, 2144, 13, 1033, 11, 264, 50664], 'temperature': 0.0, 'avg_logprob': -0.21788624058599057, 'compression_ratio': 1.5809523809523809, 'no_speech_prob': 0.047539789229631424}, {'id': 17, 'seek': 12700, 'start': 133.0, 'end': 140.0, 'text': ' P1 is done, what about P2? No problem, we will go there. How much did', 'tokens': [50664, 430, 16, 307, 1096, 11, 437, 466, 430, 17, 30, 883, 1154, 11, 321, 486, 352, 456, 13, 1012, 709, 630, 51014], 'temperature': 0.0, 'avg_logprob': -0.21788624058599057, 'compression_ratio': 1.5809523809523809, 'no_speech_prob': 0.047539789229631424}, {'id': 18, 'seek': 12700, 'start': 140.0, 'end': 148.0, 'text': ' you increase it to? Make it 1000, maybe. All we want to see is, I mean all we want to see,', 'tokens': [51014, 291, 3488, 309, 281, 30, 4387, 309, 9714, 11, 1310, 13, 1057, 321, 528, 281, 536, 307, 11, 286, 914, 439, 321, 528, 281, 536, 11, 51414], 'temperature': 0.0, 'avg_logprob': -0.21788624058599057, 'compression_ratio': 1.5809523809523809, 'no_speech_prob': 0.047539789229631424}, {'id': 19, 'seek': 12700, 'start': 148.0, 'end': 154.0, 'text': ' make you guys kind of appreciate is that a simple technique like loop and rolling can', 'tokens': [51414, 652, 291, 1074, 733, 295, 4449, 307, 300, 257, 2199, 6532, 411, 6367, 293, 9439, 393, 51714], 'temperature': 0.0, 'avg_logprob': -0.21788624058599057, 'compression_ratio': 1.5809523809523809, 'no_speech_prob': 0.047539789229631424}, {'id': 20, 'seek': 15400, 'start': 154.0, 'end': 164.0, 'text': ' lead to visible gains and those of you who have finished this step. Okay.', 'tokens': [50364, 1477, 281, 8974, 16823, 293, 729, 295, 291, 567, 362, 4335, 341, 1823, 13, 1033, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.30902810096740724, 'compression_ratio': 1.028169014084507, 'no_speech_prob': 0.9128738045692444}, {'id': 21, 'seek': 16400, 'start': 164.0, 'end': 192.0, 'text': ' Hi, yes. No, no, no. Okay, there are, if you look at', 'tokens': [50364, 2421, 11, 2086, 13, 883, 11, 572, 11, 572, 13, 1033, 11, 456, 366, 11, 498, 291, 574, 412, 51764], 'temperature': 0.0, 'avg_logprob': -0.2683379339135211, 'compression_ratio': 0.9285714285714286, 'no_speech_prob': 0.5416997671127319}, {'id': 22, 'seek': 19200, 'start': 192.0, 'end': 197.0, 'text': ' the time command, what is the output of the time command? You see that it gives you a', 'tokens': [50364, 264, 565, 5622, 11, 437, 307, 264, 5598, 295, 264, 565, 5622, 30, 509, 536, 300, 309, 2709, 291, 257, 50614], 'temperature': 0.0, 'avg_logprob': -0.11978382865587871, 'compression_ratio': 1.763819095477387, 'no_speech_prob': 0.5744500756263733}, {'id': 23, 'seek': 19200, 'start': 197.0, 'end': 209.0, 'text': ' few things, user time, system time and elapsed time. So, which one should you look at? So,', 'tokens': [50614, 1326, 721, 11, 4195, 565, 11, 1185, 565, 293, 806, 2382, 292, 565, 13, 407, 11, 597, 472, 820, 291, 574, 412, 30, 407, 11, 51214], 'temperature': 0.0, 'avg_logprob': -0.11978382865587871, 'compression_ratio': 1.763819095477387, 'no_speech_prob': 0.5744500756263733}, {'id': 24, 'seek': 19200, 'start': 209.0, 'end': 214.0, 'text': ' the elapsed time is probably the end to end time, user time is the time that you have', 'tokens': [51214, 264, 806, 2382, 292, 565, 307, 1391, 264, 917, 281, 917, 565, 11, 4195, 565, 307, 264, 565, 300, 291, 362, 51464], 'temperature': 0.0, 'avg_logprob': -0.11978382865587871, 'compression_ratio': 1.763819095477387, 'no_speech_prob': 0.5744500756263733}, {'id': 25, 'seek': 19200, 'start': 214.0, 'end': 220.0, 'text': ' spent by you. So, you probably do not care if there was an interrupt in the system doing', 'tokens': [51464, 4418, 538, 291, 13, 407, 11, 291, 1391, 360, 406, 1127, 498, 456, 390, 364, 12729, 294, 264, 1185, 884, 51764], 'temperature': 0.0, 'avg_logprob': -0.11978382865587871, 'compression_ratio': 1.763819095477387, 'no_speech_prob': 0.5744500756263733}, {'id': 26, 'seek': 22000, 'start': 220.0, 'end': 229.0, 'text': ' something else and all that. So, look at only the user time. Okay. So, in your case,', 'tokens': [50364, 746, 1646, 293, 439, 300, 13, 407, 11, 574, 412, 787, 264, 4195, 565, 13, 1033, 13, 407, 11, 294, 428, 1389, 11, 50814], 'temperature': 0.0, 'avg_logprob': -0.16402758084810698, 'compression_ratio': 1.463276836158192, 'no_speech_prob': 0.7037978768348694}, {'id': 27, 'seek': 22000, 'start': 229.0, 'end': 235.0, 'text': ' what is showing in user time? No, because it says command terminated by signal 11. So,', 'tokens': [50814, 437, 307, 4099, 294, 4195, 565, 30, 883, 11, 570, 309, 1619, 5622, 1433, 5410, 538, 6358, 2975, 13, 407, 11, 51114], 'temperature': 0.0, 'avg_logprob': -0.16402758084810698, 'compression_ratio': 1.463276836158192, 'no_speech_prob': 0.7037978768348694}, {'id': 28, 'seek': 22000, 'start': 235.0, 'end': 244.0, 'text': ' I think 10,000 it will not let me take, reduce it. Do not mind, but I think it is a bad', 'tokens': [51114, 286, 519, 1266, 11, 1360, 309, 486, 406, 718, 385, 747, 11, 5407, 309, 13, 1144, 406, 1575, 11, 457, 286, 519, 309, 307, 257, 1578, 51564], 'temperature': 0.0, 'avg_logprob': -0.16402758084810698, 'compression_ratio': 1.463276836158192, 'no_speech_prob': 0.7037978768348694}, {'id': 29, 'seek': 24400, 'start': 244.0, 'end': 263.0, 'text': ' programming practice. Replace all this by n. Do you see something else? Command terminated', 'tokens': [50364, 9410, 3124, 13, 1300, 6742, 439, 341, 538, 297, 13, 1144, 291, 536, 746, 1646, 30, 17901, 1433, 5410, 51314], 'temperature': 0.0, 'avg_logprob': -0.24188201323799466, 'compression_ratio': 1.4015151515151516, 'no_speech_prob': 0.6284199357032776}, {'id': 30, 'seek': 24400, 'start': 263.0, 'end': 270.0, 'text': ' by signal 11. So, if you are getting an error, so that shows something like command terminated', 'tokens': [51314, 538, 6358, 2975, 13, 407, 11, 498, 291, 366, 1242, 364, 6713, 11, 370, 300, 3110, 746, 411, 5622, 1433, 5410, 51664], 'temperature': 0.0, 'avg_logprob': -0.24188201323799466, 'compression_ratio': 1.4015151515151516, 'no_speech_prob': 0.6284199357032776}, {'id': 31, 'seek': 27000, 'start': 270.0, 'end': 275.0, 'text': ' by signal 11. That means the command is terminated for some, may be out of memory or something', 'tokens': [50364, 538, 6358, 2975, 13, 663, 1355, 264, 5622, 307, 1433, 5410, 337, 512, 11, 815, 312, 484, 295, 4675, 420, 746, 50614], 'temperature': 0.0, 'avg_logprob': -0.18362635374069214, 'compression_ratio': 1.643835616438356, 'no_speech_prob': 0.4760419726371765}, {'id': 32, 'seek': 27000, 'start': 275.0, 'end': 280.0, 'text': ' like that, of that sort. So, may be movie, do not, you are allocating all of it on the', 'tokens': [50614, 411, 300, 11, 295, 300, 1333, 13, 407, 11, 815, 312, 3169, 11, 360, 406, 11, 291, 366, 12660, 990, 439, 295, 309, 322, 264, 50864], 'temperature': 0.0, 'avg_logprob': -0.18362635374069214, 'compression_ratio': 1.643835616438356, 'no_speech_prob': 0.4760419726371765}, {'id': 33, 'seek': 27000, 'start': 280.0, 'end': 285.0, 'text': ' stack, it is running out of stack or the windows is not giving you more information, that is', 'tokens': [50864, 8630, 11, 309, 307, 2614, 484, 295, 8630, 420, 264, 9309, 307, 406, 2902, 291, 544, 1589, 11, 300, 307, 51114], 'temperature': 0.0, 'avg_logprob': -0.18362635374069214, 'compression_ratio': 1.643835616438356, 'no_speech_prob': 0.4760419726371765}, {'id': 34, 'seek': 27000, 'start': 285.0, 'end': 292.0, 'text': ' fine. But may be what you could do is move these declarations to global and see if it', 'tokens': [51114, 2489, 13, 583, 815, 312, 437, 291, 727, 360, 307, 1286, 613, 16694, 763, 281, 4338, 293, 536, 498, 309, 51464], 'temperature': 0.0, 'avg_logprob': -0.18362635374069214, 'compression_ratio': 1.643835616438356, 'no_speech_prob': 0.4760419726371765}, {'id': 35, 'seek': 29200, 'start': 292.0, 'end': 299.0, 'text': ' is correct. So, you can, if that error goes out.', 'tokens': [50364, 307, 3006, 13, 407, 11, 291, 393, 11, 498, 300, 6713, 1709, 484, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.5403768099271334, 'compression_ratio': 1.4135802469135803, 'no_speech_prob': 0.9627748131752014}, {'id': 36, 'seek': 29200, 'start': 299.0, 'end': 304.0, 'text': ' Sir, so for the k-test one, the word. The original one.', 'tokens': [50714, 6144, 11, 370, 337, 264, 350, 12, 31636, 472, 11, 264, 1349, 13, 440, 3380, 472, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.5403768099271334, 'compression_ratio': 1.4135802469135803, 'no_speech_prob': 0.9627748131752014}, {'id': 37, 'seek': 29200, 'start': 304.0, 'end': 307.0, 'text': ' Yeah, original one. So, it is giving 0.0.', 'tokens': [50964, 865, 11, 3380, 472, 13, 407, 11, 309, 307, 2902, 1958, 13, 15, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.5403768099271334, 'compression_ratio': 1.4135802469135803, 'no_speech_prob': 0.9627748131752014}, {'id': 38, 'seek': 29200, 'start': 307.0, 'end': 310.0, 'text': ' No, it still says command terminated by signal 11.', 'tokens': [51114, 883, 11, 309, 920, 1619, 5622, 1433, 5410, 538, 6358, 2975, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.5403768099271334, 'compression_ratio': 1.4135802469135803, 'no_speech_prob': 0.9627748131752014}, {'id': 39, 'seek': 29200, 'start': 310.0, 'end': 315.0, 'text': ' Oh yeah. Can you open the code?', 'tokens': [51264, 876, 1338, 13, 1664, 291, 1269, 264, 3089, 30, 51514], 'temperature': 0.0, 'avg_logprob': -0.5403768099271334, 'compression_ratio': 1.4135802469135803, 'no_speech_prob': 0.9627748131752014}, {'id': 40, 'seek': 31500, 'start': 315.0, 'end': 330.0, 'text': ' Yeah, move these two up. By the way, Malay is also here. He is, so feel free to keep,', 'tokens': [50364, 865, 11, 1286, 613, 732, 493, 13, 3146, 264, 636, 11, 5746, 320, 307, 611, 510, 13, 634, 307, 11, 370, 841, 1737, 281, 1066, 11, 51114], 'temperature': 0.0, 'avg_logprob': -0.4447143628047063, 'compression_ratio': 1.2520325203252032, 'no_speech_prob': 0.8020818829536438}, {'id': 41, 'seek': 31500, 'start': 330.0, 'end': 333.0, 'text': ' if you have stuck anywhere, just ask.', 'tokens': [51114, 498, 291, 362, 5541, 4992, 11, 445, 1029, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.4447143628047063, 'compression_ratio': 1.2520325203252032, 'no_speech_prob': 0.8020818829536438}, {'id': 42, 'seek': 31500, 'start': 333.0, 'end': 338.0, 'text': ' Sir, I am just using the term.', 'tokens': [51264, 6144, 11, 286, 669, 445, 1228, 264, 1433, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.4447143628047063, 'compression_ratio': 1.2520325203252032, 'no_speech_prob': 0.8020818829536438}, {'id': 43, 'seek': 33800, 'start': 338.0, 'end': 345.0, 'text': ' So, what is the value of n? No, but you are getting this error. Do you see this command', 'tokens': [50364, 407, 11, 437, 307, 264, 2158, 295, 297, 30, 883, 11, 457, 291, 366, 1242, 341, 6713, 13, 1144, 291, 536, 341, 5622, 50714], 'temperature': 0.0, 'avg_logprob': -0.2953823816208612, 'compression_ratio': 1.5733333333333333, 'no_speech_prob': 0.7736901044845581}, {'id': 44, 'seek': 33800, 'start': 345.0, 'end': 354.0, 'text': ' terminated by signal 11? So, that means the program is crashing. Because it is crashing,', 'tokens': [50714, 1433, 5410, 538, 6358, 2975, 30, 407, 11, 300, 1355, 264, 1461, 307, 26900, 13, 1436, 309, 307, 26900, 11, 51164], 'temperature': 0.0, 'avg_logprob': -0.2953823816208612, 'compression_ratio': 1.5733333333333333, 'no_speech_prob': 0.7736901044845581}, {'id': 45, 'seek': 33800, 'start': 354.0, 'end': 361.0, 'text': ' it is not taking any time. So, what you could do, just open the files, let us say, of 2.c.', 'tokens': [51164, 309, 307, 406, 1940, 604, 565, 13, 407, 11, 437, 291, 727, 360, 11, 445, 1269, 264, 7098, 11, 718, 505, 584, 11, 295, 568, 13, 66, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.2953823816208612, 'compression_ratio': 1.5733333333333333, 'no_speech_prob': 0.7736901044845581}, {'id': 46, 'seek': 33800, 'start': 361.0, 'end': 366.0, 'text': ' This is VI? What I will do, I will just move them up. I will make them global. This is', 'tokens': [51514, 639, 307, 27619, 30, 708, 286, 486, 360, 11, 286, 486, 445, 1286, 552, 493, 13, 286, 486, 652, 552, 4338, 13, 639, 307, 51764], 'temperature': 0.0, 'avg_logprob': -0.2953823816208612, 'compression_ratio': 1.5733333333333333, 'no_speech_prob': 0.7736901044845581}, {'id': 47, 'seek': 36600, 'start': 366.0, 'end': 373.0, 'text': ' not the best way to do it. But for the time being, I just moved them to global. And now', 'tokens': [50364, 406, 264, 1151, 636, 281, 360, 309, 13, 583, 337, 264, 565, 885, 11, 286, 445, 4259, 552, 281, 4338, 13, 400, 586, 50714], 'temperature': 0.0, 'avg_logprob': -0.30517398609834556, 'compression_ratio': 1.3873239436619718, 'no_speech_prob': 0.49815911054611206}, {'id': 48, 'seek': 36600, 'start': 373.0, 'end': 382.0, 'text': ' do the same thing. Why opt 1 to P2? Copy opt 2 to P2.', 'tokens': [50714, 360, 264, 912, 551, 13, 1545, 2427, 502, 281, 430, 17, 30, 25653, 2427, 568, 281, 430, 17, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.30517398609834556, 'compression_ratio': 1.3873239436619718, 'no_speech_prob': 0.49815911054611206}, {'id': 49, 'seek': 36600, 'start': 382.0, 'end': 389.0, 'text': ' No, I am not able to do that. No, that is what we have.', 'tokens': [51164, 883, 11, 286, 669, 406, 1075, 281, 360, 300, 13, 883, 11, 300, 307, 437, 321, 362, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.30517398609834556, 'compression_ratio': 1.3873239436619718, 'no_speech_prob': 0.49815911054611206}, {'id': 50, 'seek': 38900, 'start': 389.0, 'end': 402.0, 'text': ' So, now this did not direct. Now let me do time. This is doing something. Try both of', 'tokens': [50364, 407, 11, 586, 341, 630, 406, 2047, 13, 823, 718, 385, 360, 565, 13, 639, 307, 884, 746, 13, 6526, 1293, 295, 51014], 'temperature': 0.0, 'avg_logprob': -0.3285758407027633, 'compression_ratio': 1.5, 'no_speech_prob': 0.6629346013069153}, {'id': 51, 'seek': 38900, 'start': 402.0, 'end': 403.0, 'text': ' them. So, move.', 'tokens': [51014, 552, 13, 407, 11, 1286, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.3285758407027633, 'compression_ratio': 1.5, 'no_speech_prob': 0.6629346013069153}, {'id': 52, 'seek': 38900, 'start': 403.0, 'end': 410.0, 'text': ' Sir, how is it, if you move the variables to make it global, then how is it?', 'tokens': [51064, 6144, 11, 577, 307, 309, 11, 498, 291, 1286, 264, 9102, 281, 652, 309, 4338, 11, 550, 577, 307, 309, 30, 51414], 'temperature': 0.0, 'avg_logprob': -0.3285758407027633, 'compression_ratio': 1.5, 'no_speech_prob': 0.6629346013069153}, {'id': 53, 'seek': 38900, 'start': 410.0, 'end': 414.0, 'text': ' How is it making a difference? We will come to that. Remind me there. This is a question', 'tokens': [51414, 1012, 307, 309, 1455, 257, 2649, 30, 492, 486, 808, 281, 300, 13, 4080, 471, 385, 456, 13, 639, 307, 257, 1168, 51614], 'temperature': 0.0, 'avg_logprob': -0.3285758407027633, 'compression_ratio': 1.5, 'no_speech_prob': 0.6629346013069153}, {'id': 54, 'seek': 41400, 'start': 414.0, 'end': 421.0, 'text': ' that should. Good. Yes, how about things? Sir, I kept like 1 lakh. Then it is saying,', 'tokens': [50364, 300, 820, 13, 2205, 13, 1079, 11, 577, 466, 721, 30, 6144, 11, 286, 4305, 411, 502, 33314, 13, 1396, 309, 307, 1566, 11, 50714], 'temperature': 0.0, 'avg_logprob': -0.40024152168860805, 'compression_ratio': 1.2681159420289856, 'no_speech_prob': 0.592736542224884}, {'id': 55, 'seek': 41400, 'start': 421.0, 'end': 438.0, 'text': ' but also saying user time is 0. Because command terminated by signal 11. So, it is dying.', 'tokens': [50714, 457, 611, 1566, 4195, 565, 307, 1958, 13, 1436, 5622, 1433, 5410, 538, 6358, 2975, 13, 407, 11, 309, 307, 8639, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.40024152168860805, 'compression_ratio': 1.2681159420289856, 'no_speech_prob': 0.592736542224884}, {'id': 56, 'seek': 43800, 'start': 439.0, 'end': 446.0, 'text': ' 1 lakh is too big. Just make it 1000 or 10000. That is enough.', 'tokens': [50414, 502, 33314, 307, 886, 955, 13, 1449, 652, 309, 9714, 420, 2319, 628, 13, 663, 307, 1547, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.22050557191344514, 'compression_ratio': 1.5120772946859904, 'no_speech_prob': 0.7657323479652405}, {'id': 57, 'seek': 43800, 'start': 446.0, 'end': 453.0, 'text': ' When I said 10000 also. Signal 11. That means the program is crashing.', 'tokens': [50764, 1133, 286, 848, 2319, 628, 611, 13, 43414, 2975, 13, 663, 1355, 264, 1461, 307, 26900, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.22050557191344514, 'compression_ratio': 1.5120772946859904, 'no_speech_prob': 0.7657323479652405}, {'id': 58, 'seek': 43800, 'start': 453.0, 'end': 460.0, 'text': ' So, please check if you are getting an error terminated by signal 11 or if you see the', 'tokens': [51114, 407, 11, 1767, 1520, 498, 291, 366, 1242, 364, 6713, 1433, 5410, 538, 6358, 2975, 420, 498, 291, 536, 264, 51464], 'temperature': 0.0, 'avg_logprob': -0.22050557191344514, 'compression_ratio': 1.5120772946859904, 'no_speech_prob': 0.7657323479652405}, {'id': 59, 'seek': 43800, 'start': 460.0, 'end': 467.0, 'text': ' time is 0 for large inputs, be very suspicious. Do not think that it is not taking any time.', 'tokens': [51464, 565, 307, 1958, 337, 2416, 15743, 11, 312, 588, 17931, 13, 1144, 406, 519, 300, 309, 307, 406, 1940, 604, 565, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.22050557191344514, 'compression_ratio': 1.5120772946859904, 'no_speech_prob': 0.7657323479652405}, {'id': 60, 'seek': 46700, 'start': 467.0, 'end': 475.0, 'text': ' It is not taking time because the program is dying or rather getting killed. Use a', 'tokens': [50364, 467, 307, 406, 1940, 565, 570, 264, 1461, 307, 8639, 420, 2831, 1242, 4652, 13, 8278, 257, 50764], 'temperature': 0.0, 'avg_logprob': -0.31151118422999524, 'compression_ratio': 1.1473684210526316, 'no_speech_prob': 0.20656059682369232}, {'id': 61, 'seek': 46700, 'start': 475.0, 'end': 480.0, 'text': ' macro here. No, may I? No.', 'tokens': [50764, 18887, 510, 13, 883, 11, 815, 286, 30, 883, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.31151118422999524, 'compression_ratio': 1.1473684210526316, 'no_speech_prob': 0.20656059682369232}, {'id': 62, 'seek': 48000, 'start': 480.0, 'end': 502.0, 'text': ' Whatever. Now, you do not have to change it 1000 places. You are also getting the same', 'tokens': [50364, 8541, 13, 823, 11, 291, 360, 406, 362, 281, 1319, 309, 9714, 3190, 13, 509, 366, 611, 1242, 264, 912, 51464], 'temperature': 0.0, 'avg_logprob': -0.17364253997802734, 'compression_ratio': 1.372093023255814, 'no_speech_prob': 0.21856807172298431}, {'id': 63, 'seek': 48000, 'start': 502.0, 'end': 509.0, 'text': ' signal 11. If you are getting signal 11, that mostly means that you are trying to allocate', 'tokens': [51464, 6358, 2975, 13, 759, 291, 366, 1242, 6358, 2975, 11, 300, 5240, 1355, 300, 291, 366, 1382, 281, 35713, 51814], 'temperature': 0.0, 'avg_logprob': -0.17364253997802734, 'compression_ratio': 1.372093023255814, 'no_speech_prob': 0.21856807172298431}, {'id': 64, 'seek': 50900, 'start': 509.0, 'end': 516.0, 'text': ' memory on the stack and you do not have enough so much stack. Lift those declarations to', 'tokens': [50364, 4675, 322, 264, 8630, 293, 291, 360, 406, 362, 1547, 370, 709, 8630, 13, 26148, 729, 16694, 763, 281, 50714], 'temperature': 0.0, 'avg_logprob': -0.2723471323649089, 'compression_ratio': 1.1523809523809523, 'no_speech_prob': 0.8816522359848022}, {'id': 65, 'seek': 50900, 'start': 516.0, 'end': 521.0, 'text': ' global. Who? Redshift. Yes, sir.', 'tokens': [50714, 4338, 13, 2102, 30, 4477, 47445, 13, 1079, 11, 4735, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.2723471323649089, 'compression_ratio': 1.1523809523809523, 'no_speech_prob': 0.8816522359848022}, {'id': 66, 'seek': 52100, 'start': 521.0, 'end': 530.0, 'text': ' I actually ran the third code with i++ instead of i++ equal to 4.', 'tokens': [50364, 286, 767, 5872, 264, 2636, 3089, 365, 741, 25472, 2602, 295, 741, 25472, 2681, 281, 1017, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.3188384422889123, 'compression_ratio': 1.4497041420118344, 'no_speech_prob': 0.5469292402267456}, {'id': 67, 'seek': 52100, 'start': 530.0, 'end': 542.0, 'text': ' It should have had a much worse run time. But I am actually getting a very significant', 'tokens': [50814, 467, 820, 362, 632, 257, 709, 5324, 1190, 565, 13, 583, 286, 669, 767, 1242, 257, 588, 4776, 51414], 'temperature': 0.0, 'avg_logprob': -0.3188384422889123, 'compression_ratio': 1.4497041420118344, 'no_speech_prob': 0.5469292402267456}, {'id': 68, 'seek': 52100, 'start': 542.0, 'end': 548.0, 'text': ' improvement. It has gone from 4 seconds to close to 0.1 seconds. I am not able to understand', 'tokens': [51414, 10444, 13, 467, 575, 2780, 490, 1017, 3949, 281, 1998, 281, 1958, 13, 16, 3949, 13, 286, 669, 406, 1075, 281, 1223, 51714], 'temperature': 0.0, 'avg_logprob': -0.3188384422889123, 'compression_ratio': 1.4497041420118344, 'no_speech_prob': 0.5469292402267456}, {'id': 69, 'seek': 54800, 'start': 548.0, 'end': 552.0, 'text': ' why. Let us do with plus 4 first and show me the', 'tokens': [50364, 983, 13, 961, 505, 360, 365, 1804, 1017, 700, 293, 855, 385, 264, 50564], 'temperature': 0.0, 'avg_logprob': -0.5028412158672626, 'compression_ratio': 0.9571428571428572, 'no_speech_prob': 0.9839670062065125}, {'id': 70, 'seek': 54800, 'start': 552.0, 'end': 553.0, 'text': ' time. 0.3 seconds.', 'tokens': [50564, 565, 13, 1958, 13, 18, 3949, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.5028412158672626, 'compression_ratio': 0.9571428571428572, 'no_speech_prob': 0.9839670062065125}, {'id': 71, 'seek': 55300, 'start': 553.0, 'end': 576.0, 'text': ' Very good. Now, just show me the code. Scroll down.', 'tokens': [50364, 4372, 665, 13, 823, 11, 445, 855, 385, 264, 3089, 13, 35395, 760, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.3898117807176378, 'compression_ratio': 0.864406779661017, 'no_speech_prob': 0.7379790544509888}, {'id': 72, 'seek': 57600, 'start': 576.0, 'end': 599.0, 'text': ' I am going from 0 to n. Good. I like this. Now, you tell me what is the problem?', 'tokens': [50364, 286, 669, 516, 490, 1958, 281, 297, 13, 2205, 13, 286, 411, 341, 13, 823, 11, 291, 980, 385, 437, 307, 264, 1154, 30, 51514], 'temperature': 0.0, 'avg_logprob': -0.2987270014626639, 'compression_ratio': 1.0, 'no_speech_prob': 0.5344814658164978}, {'id': 73, 'seek': 59900, 'start': 599.0, 'end': 606.0, 'text': ' I accidentally reduced this. Yes, I know. Now, you tell me what is the issue?', 'tokens': [50364, 286, 15715, 9212, 341, 13, 1079, 11, 286, 458, 13, 823, 11, 291, 980, 385, 437, 307, 264, 2734, 30, 50714], 'temperature': 0.0, 'avg_logprob': -0.23758930049530447, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.8239673972129822}, {'id': 74, 'seek': 59900, 'start': 606.0, 'end': 613.0, 'text': ' The issue is that this runs much faster. The issue is that this code is buggy. You tell', 'tokens': [50714, 440, 2734, 307, 300, 341, 6676, 709, 4663, 13, 440, 2734, 307, 300, 341, 3089, 307, 7426, 1480, 13, 509, 980, 51064], 'temperature': 0.0, 'avg_logprob': -0.23758930049530447, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.8239673972129822}, {'id': 75, 'seek': 59900, 'start': 613.0, 'end': 616.0, 'text': ' me what is the bug? First you run it. I will tell you what is the bug. You may be able', 'tokens': [51064, 385, 437, 307, 264, 7426, 30, 2386, 291, 1190, 309, 13, 286, 486, 980, 291, 437, 307, 264, 7426, 13, 509, 815, 312, 1075, 51214], 'temperature': 0.0, 'avg_logprob': -0.23758930049530447, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.8239673972129822}, {'id': 76, 'seek': 61600, 'start': 616.0, 'end': 632.0, 'text': ' to see the bug yourself. You just run it once. But the code is buggy. Do you see this?', 'tokens': [50364, 281, 536, 264, 7426, 1803, 13, 509, 445, 1190, 309, 1564, 13, 583, 264, 3089, 307, 7426, 1480, 13, 1144, 291, 536, 341, 30, 51164], 'temperature': 0.0, 'avg_logprob': -0.13340389565245747, 'compression_ratio': 1.6149068322981366, 'no_speech_prob': 0.24986456334590912}, {'id': 77, 'seek': 61600, 'start': 632.0, 'end': 639.0, 'text': ' There is a segmentation fault. But now you have to tell me why the segmentation fault', 'tokens': [51164, 821, 307, 257, 9469, 399, 7441, 13, 583, 586, 291, 362, 281, 980, 385, 983, 264, 9469, 399, 7441, 51514], 'temperature': 0.0, 'avg_logprob': -0.13340389565245747, 'compression_ratio': 1.6149068322981366, 'no_speech_prob': 0.24986456334590912}, {'id': 78, 'seek': 61600, 'start': 639.0, 'end': 644.0, 'text': ' has come. Without running, I told you that there is a bug in the code. You tell me what', 'tokens': [51514, 575, 808, 13, 9129, 2614, 11, 286, 1907, 291, 300, 456, 307, 257, 7426, 294, 264, 3089, 13, 509, 980, 385, 437, 51764], 'temperature': 0.0, 'avg_logprob': -0.13340389565245747, 'compression_ratio': 1.6149068322981366, 'no_speech_prob': 0.24986456334590912}, {'id': 79, 'seek': 64400, 'start': 644.0, 'end': 649.0, 'text': ' is the problem? I will come back to you.', 'tokens': [50364, 307, 264, 1154, 30, 286, 486, 808, 646, 281, 291, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.39606939043317524, 'compression_ratio': 1.0, 'no_speech_prob': 0.9891258478164673}, {'id': 80, 'seek': 64400, 'start': 649.0, 'end': 658.0, 'text': ' Perfect. So, this is array out of bounds.', 'tokens': [50614, 10246, 13, 407, 11, 341, 307, 10225, 484, 295, 29905, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.39606939043317524, 'compression_ratio': 1.0, 'no_speech_prob': 0.9891258478164673}, {'id': 81, 'seek': 68800, 'start': 688.0, 'end': 716.0, 'text': ' I am going to run it. I am going to run it. I am going to run it. I am going to run it.', 'tokens': [50364, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.799121081829071, 'compression_ratio': 2.6363636363636362, 'no_speech_prob': 0.873637855052948}, {'id': 82, 'seek': 71600, 'start': 716.0, 'end': 743.0, 'text': ' I am going to run it. I am going to run it. I am going to run it. I am going to run it.', 'tokens': [50364, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.3599511981010437, 'compression_ratio': 2.6363636363636362, 'no_speech_prob': 0.9863882660865784}, {'id': 83, 'seek': 74300, 'start': 743.0, 'end': 771.0, 'text': ' I am going to run it. I am going to run it. I am going to run it. I am going to run it.', 'tokens': [50364, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.24674038589000702, 'compression_ratio': 2.6363636363636362, 'no_speech_prob': 0.9758774042129517}, {'id': 84, 'seek': 77100, 'start': 771.0, 'end': 799.0, 'text': ' I am going to run it. I am going to run it. I am going to run it. I am going to run it.', 'tokens': [50364, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 286, 669, 516, 281, 1190, 309, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.2379092574119568, 'compression_ratio': 2.6363636363636362, 'no_speech_prob': 0.9452822804450989}, {'id': 85, 'seek': 79900, 'start': 799.0, 'end': 818.0, 'text': ' Okay. Guys, I think for the positive of time, we will... Can I continue it? Yeah. Should', 'tokens': [50364, 1033, 13, 7855, 11, 286, 519, 337, 264, 3353, 295, 565, 11, 321, 486, 485, 1664, 286, 2354, 309, 30, 865, 13, 6454, 51314], 'temperature': 0.0, 'avg_logprob': -0.26721865790230886, 'compression_ratio': 1.2587412587412588, 'no_speech_prob': 0.8758280873298645}, {'id': 86, 'seek': 79900, 'start': 818.0, 'end': 828.0, 'text': ' we do one thing? How many of you have at least tried P1 and P2? Most of you? Okay. How many', 'tokens': [51314, 321, 360, 472, 551, 30, 1012, 867, 295, 291, 362, 412, 1935, 3031, 430, 16, 293, 430, 17, 30, 4534, 295, 291, 30, 1033, 13, 1012, 867, 51814], 'temperature': 0.0, 'avg_logprob': -0.26721865790230886, 'compression_ratio': 1.2587412587412588, 'no_speech_prob': 0.8758280873298645}, {'id': 87, 'seek': 82800, 'start': 828.0, 'end': 835.0, 'text': ' of you still do not see any difference between P1 and P2? One hand? Okay. Let us make sure', 'tokens': [50364, 295, 291, 920, 360, 406, 536, 604, 2649, 1296, 430, 16, 293, 430, 17, 30, 1485, 1011, 30, 1033, 13, 961, 505, 652, 988, 50714], 'temperature': 0.0, 'avg_logprob': -0.23233484338831017, 'compression_ratio': 1.3134328358208955, 'no_speech_prob': 0.7589352130889893}, {'id': 88, 'seek': 82800, 'start': 835.0, 'end': 842.0, 'text': ' that is taken care. P2 and P3 you can keep trying, but I will mostly ask you to do it', 'tokens': [50714, 300, 307, 2726, 1127, 13, 430, 17, 293, 430, 18, 291, 393, 1066, 1382, 11, 457, 286, 486, 5240, 1029, 291, 281, 360, 309, 51064], 'temperature': 0.0, 'avg_logprob': -0.23233484338831017, 'compression_ratio': 1.3134328358208955, 'no_speech_prob': 0.7589352130889893}, {'id': 89, 'seek': 84200, 'start': 842.0, 'end': 861.0, 'text': ' in the next class. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 294, 264, 958, 1508, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.6670902621361517, 'compression_ratio': 2.5454545454545454, 'no_speech_prob': 0.8789990544319153}, {'id': 90, 'seek': 86100, 'start': 861.0, 'end': 889.0, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.28079530596733093, 'compression_ratio': 4.882352941176471, 'no_speech_prob': 0.8969963192939758}, {'id': 91, 'seek': 88900, 'start': 889.0, 'end': 908.0, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.27217280864715576, 'compression_ratio': 4.882352941176471, 'no_speech_prob': 0.9450829029083252}, {'id': 92, 'seek': 90800, 'start': 908.0, 'end': 934.24, 'text': ' Last two minutes. A question. Last two minutes on this problem. We will have more, something', 'tokens': [50364, 5264, 732, 2077, 13, 316, 1168, 13, 5264, 732, 2077, 322, 341, 1154, 13, 492, 486, 362, 544, 11, 746, 51676], 'temperature': 0.0, 'avg_logprob': -0.2670344312985738, 'compression_ratio': 1.1645569620253164, 'no_speech_prob': 0.2503494918346405}, {'id': 93, 'seek': 93424, 'start': 935.24, 'end': 941.24, 'text': ' more dramatically interesting problem is coming up.', 'tokens': [50414, 544, 17548, 1880, 1154, 307, 1348, 493, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.7160118420918783, 'compression_ratio': 0.8947368421052632, 'no_speech_prob': 0.9821659922599792}, {'id': 94, 'seek': 94124, 'start': 941.24, 'end': 962.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51414], 'temperature': 0.0, 'avg_logprob': -0.3082912862300873, 'compression_ratio': 4.882352941176471, 'no_speech_prob': 0.7483404874801636}, {'id': 95, 'seek': 96224, 'start': 962.24, 'end': 983.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51414], 'temperature': 0.0, 'avg_logprob': -0.22030195593833923, 'compression_ratio': 4.882352941176471, 'no_speech_prob': 0.9407437443733215}, {'id': 96, 'seek': 98324, 'start': 983.24, 'end': 1004.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51414], 'temperature': 0.0, 'avg_logprob': -0.23932071030139923, 'compression_ratio': 4.882352941176471, 'no_speech_prob': 0.9414373636245728}, {'id': 97, 'seek': 100424, 'start': 1004.24, 'end': 1031.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.17812922596931458, 'compression_ratio': 4.882352941176471, 'no_speech_prob': 0.9675490856170654}, {'id': 98, 'seek': 103124, 'start': 1031.24, 'end': 1038.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.20428482178718813, 'compression_ratio': 4.882352941176471, 'no_speech_prob': 0.9822635054588318}, {'id': 99, 'seek': 106124, 'start': 1061.24, 'end': 1076.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.16252431002530185, 'compression_ratio': 10.529411764705882, 'no_speech_prob': 0.8402912020683289}, {'id': 100, 'seek': 106124, 'start': 1076.24, 'end': 1080.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [51114, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.16252431002530185, 'compression_ratio': 10.529411764705882, 'no_speech_prob': 0.8402912020683289}, {'id': 101, 'seek': 108024, 'start': 1080.24, 'end': 1102.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.19270366780898152, 'compression_ratio': 5.235294117647059, 'no_speech_prob': 0.8084007501602173}, {'id': 102, 'seek': 110224, 'start': 1102.24, 'end': 1117.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.15295471683625253, 'compression_ratio': 9.823529411764707, 'no_speech_prob': 0.7703678607940674}, {'id': 103, 'seek': 110224, 'start': 1117.24, 'end': 1125.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [51114, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.15295471683625253, 'compression_ratio': 9.823529411764707, 'no_speech_prob': 0.7703678607940674}, {'id': 104, 'seek': 112524, 'start': 1125.24, 'end': 1132.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.0789271404868678, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.7462226748466492}, {'id': 105, 'seek': 112524, 'start': 1132.24, 'end': 1137.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50714, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.0789271404868678, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.7462226748466492}, {'id': 106, 'seek': 112524, 'start': 1137.24, 'end': 1142.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50964, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.0789271404868678, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.7462226748466492}, {'id': 107, 'seek': 112524, 'start': 1142.24, 'end': 1147.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [51214, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.0789271404868678, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.7462226748466492}, {'id': 108, 'seek': 112524, 'start': 1147.24, 'end': 1152.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [51464, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.0789271404868678, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.7462226748466492}, {'id': 109, 'seek': 115224, 'start': 1152.24, 'end': 1159.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.06158659960094251, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.7968419790267944}, {'id': 110, 'seek': 115224, 'start': 1159.24, 'end': 1164.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50714, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.06158659960094251, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.7968419790267944}, {'id': 111, 'seek': 115224, 'start': 1164.24, 'end': 1169.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50964, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.06158659960094251, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.7968419790267944}, {'id': 112, 'seek': 115224, 'start': 1169.24, 'end': 1174.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [51214, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.06158659960094251, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.7968419790267944}, {'id': 113, 'seek': 115224, 'start': 1174.24, 'end': 1179.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [51464, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.06158659960094251, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.7968419790267944}, {'id': 114, 'seek': 117924, 'start': 1179.24, 'end': 1184.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.0534718350360268, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.6777855753898621}, {'id': 115, 'seek': 117924, 'start': 1184.24, 'end': 1189.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50614, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.0534718350360268, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.6777855753898621}, {'id': 116, 'seek': 117924, 'start': 1189.24, 'end': 1194.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [50864, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.0534718350360268, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.6777855753898621}, {'id': 117, 'seek': 117924, 'start': 1194.24, 'end': 1199.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [51114, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.0534718350360268, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.6777855753898621}, {'id': 118, 'seek': 117924, 'start': 1199.24, 'end': 1204.24, 'text': ' Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.', 'tokens': [51364, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 1033, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.0534718350360268, 'compression_ratio': 22.05263157894737, 'no_speech_prob': 0.6777855753898621}, {'id': 119, 'seek': 120424, 'start': 1205.24, 'end': 1211.24, 'text': ' It is not a constant, but it is computed. But its value does not change across loop', 'tokens': [50414, 467, 307, 406, 257, 5754, 11, 457, 309, 307, 40610, 13, 583, 1080, 2158, 775, 406, 1319, 2108, 6367, 50714], 'temperature': 0.0, 'avg_logprob': -0.20209686791718895, 'compression_ratio': 1.6258064516129032, 'no_speech_prob': 0.4143613278865814}, {'id': 120, 'seek': 120424, 'start': 1211.24, 'end': 1216.24, 'text': ' iterations. We call it as loop invariant. We want to factor it out and move it out.', 'tokens': [50714, 36540, 13, 492, 818, 309, 382, 6367, 33270, 394, 13, 492, 528, 281, 5952, 309, 484, 293, 1286, 309, 484, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.20209686791718895, 'compression_ratio': 1.6258064516129032, 'no_speech_prob': 0.4143613278865814}, {'id': 121, 'seek': 120424, 'start': 1220.24, 'end': 1227.24, 'text': ' Right? Because its value does not change. Great. So that way the loop invariant code', 'tokens': [51164, 1779, 30, 1436, 1080, 2158, 775, 406, 1319, 13, 3769, 13, 407, 300, 636, 264, 6367, 33270, 394, 3089, 51514], 'temperature': 0.0, 'avg_logprob': -0.20209686791718895, 'compression_ratio': 1.6258064516129032, 'no_speech_prob': 0.4143613278865814}, {'id': 122, 'seek': 122724, 'start': 1227.24, 'end': 1234.24, 'text': ' works once instead of n number of times. Okay. Here is another piece of code. i equal', 'tokens': [50364, 1985, 1564, 2602, 295, 297, 1230, 295, 1413, 13, 1033, 13, 1692, 307, 1071, 2522, 295, 3089, 13, 741, 2681, 50714], 'temperature': 0.0, 'avg_logprob': -0.21897416644626194, 'compression_ratio': 1.5827814569536425, 'no_speech_prob': 0.1729036122560501}, {'id': 123, 'seek': 122724, 'start': 1237.24, 'end': 1244.24, 'text': ' to 1 to 100, j equal to 1 to 100, k equal to 1 to 100, a sub ijk equal to i times j', 'tokens': [50864, 281, 502, 281, 2319, 11, 361, 2681, 281, 502, 281, 2319, 11, 350, 2681, 281, 502, 281, 2319, 11, 257, 1422, 741, 73, 74, 2681, 281, 741, 1413, 361, 51214], 'temperature': 0.0, 'avg_logprob': -0.21897416644626194, 'compression_ratio': 1.5827814569536425, 'no_speech_prob': 0.1729036122560501}, {'id': 124, 'seek': 122724, 'start': 1244.24, 'end': 1251.24, 'text': ' times k. Pretty simple code. How many multiplications are there? 200.', 'tokens': [51214, 1413, 350, 13, 10693, 2199, 3089, 13, 1012, 867, 17596, 763, 366, 456, 30, 2331, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.21897416644626194, 'compression_ratio': 1.5827814569536425, 'no_speech_prob': 0.1729036122560501}, {'id': 125, 'seek': 125724, 'start': 1257.24, 'end': 1260.24, 'text': ' 200? 10,000.', 'tokens': [50364, 2331, 30, 1266, 11, 1360, 13, 50514], 'temperature': 0.6, 'avg_logprob': -0.34734429984257137, 'compression_ratio': 1.6324786324786325, 'no_speech_prob': 0.015878917649388313}, {'id': 126, 'seek': 125724, 'start': 1260.24, 'end': 1267.24, 'text': ' 10,000. 1 million. 2 million multiplications. How many index operations? So, array index', 'tokens': [50514, 1266, 11, 1360, 13, 502, 2459, 13, 568, 2459, 17596, 763, 13, 1012, 867, 8186, 7705, 30, 407, 11, 10225, 8186, 50864], 'temperature': 0.6, 'avg_logprob': -0.34734429984257137, 'compression_ratio': 1.6324786324786325, 'no_speech_prob': 0.015878917649388313}, {'id': 127, 'seek': 125724, 'start': 1275.24, 'end': 1282.24, 'text': ' operations. So, I am doing a sub i something, something, something, right? So, I am doing', 'tokens': [51264, 7705, 13, 407, 11, 286, 669, 884, 257, 1422, 741, 746, 11, 746, 11, 746, 11, 558, 30, 407, 11, 286, 669, 884, 51614], 'temperature': 0.6, 'avg_logprob': -0.34734429984257137, 'compression_ratio': 1.6324786324786325, 'no_speech_prob': 0.015878917649388313}, {'id': 128, 'seek': 128224, 'start': 1282.24, 'end': 1293.06, 'text': ' So, I am doing A sub i how many times? Million times, then sub j another million, then sub', 'tokens': [50364, 407, 11, 286, 669, 884, 316, 1422, 741, 577, 867, 1413, 30, 33959, 1413, 11, 550, 1422, 361, 1071, 2459, 11, 550, 1422, 50905], 'temperature': 0.0, 'avg_logprob': -0.26800568463051155, 'compression_ratio': 1.5977011494252873, 'no_speech_prob': 0.01362812053412199}, {'id': 129, 'seek': 128224, 'start': 1293.06, 'end': 1302.34, 'text': ' k, 3 million array index operations and then you have the standard loop jumps, loop increments', 'tokens': [50905, 350, 11, 805, 2459, 10225, 8186, 7705, 293, 550, 291, 362, 264, 3832, 6367, 16704, 11, 6367, 1946, 1117, 51369], 'temperature': 0.0, 'avg_logprob': -0.26800568463051155, 'compression_ratio': 1.5977011494252873, 'no_speech_prob': 0.01362812053412199}, {'id': 130, 'seek': 128224, 'start': 1302.34, 'end': 1308.6200000000001, 'text': ' and all that. I am not touching that. Is there a part of the code that you see which is loop', 'tokens': [51369, 293, 439, 300, 13, 286, 669, 406, 11175, 300, 13, 1119, 456, 257, 644, 295, 264, 3089, 300, 291, 536, 597, 307, 6367, 51683], 'temperature': 0.0, 'avg_logprob': -0.26800568463051155, 'compression_ratio': 1.5977011494252873, 'no_speech_prob': 0.01362812053412199}, {'id': 131, 'seek': 130862, 'start': 1308.62, 'end': 1325.7399999999998, 'text': ' invariant here? Which one? j into k, this j into k is loop invariant is it? i into j,', 'tokens': [50364, 33270, 394, 510, 30, 3013, 472, 30, 361, 666, 350, 11, 341, 361, 666, 350, 307, 6367, 33270, 394, 307, 309, 30, 741, 666, 361, 11, 51220], 'temperature': 0.0, 'avg_logprob': -0.2758763984397606, 'compression_ratio': 1.6168224299065421, 'no_speech_prob': 0.5825336575508118}, {'id': 132, 'seek': 130862, 'start': 1325.7399999999998, 'end': 1331.4599999999998, 'text': ' so the i into j is clearly loop invariant for which loop? For the k loop, for the inner', 'tokens': [51220, 370, 264, 741, 666, 361, 307, 4448, 6367, 33270, 394, 337, 597, 6367, 30, 1171, 264, 350, 6367, 11, 337, 264, 7284, 51506], 'temperature': 0.0, 'avg_logprob': -0.2758763984397606, 'compression_ratio': 1.6168224299065421, 'no_speech_prob': 0.5825336575508118}, {'id': 133, 'seek': 133146, 'start': 1332.46, 'end': 1343.78, 'text': ' most loop i into j is invariant. All of us are in the same page. So, i into j is a loop', 'tokens': [50414, 881, 6367, 741, 666, 361, 307, 33270, 394, 13, 1057, 295, 505, 366, 294, 264, 912, 3028, 13, 407, 11, 741, 666, 361, 307, 257, 6367, 50980], 'temperature': 0.0, 'avg_logprob': -0.3366821021364446, 'compression_ratio': 1.5350877192982457, 'no_speech_prob': 0.7481675744056702}, {'id': 134, 'seek': 133146, 'start': 1343.78, 'end': 1357.18, 'text': ' invariant. Is there any other loop invariant part here? A of ij, anything else? A of i.', 'tokens': [50980, 33270, 394, 13, 1119, 456, 604, 661, 6367, 33270, 394, 644, 510, 30, 316, 295, 741, 73, 11, 1340, 1646, 30, 316, 295, 741, 13, 51650], 'temperature': 0.0, 'avg_logprob': -0.3366821021364446, 'compression_ratio': 1.5350877192982457, 'no_speech_prob': 0.7481675744056702}, {'id': 135, 'seek': 135718, 'start': 1357.18, 'end': 1364.54, 'text': ' So, A of ij is loop invariant for the k loop, A of i is the loop invariant for the j loop.', 'tokens': [50364, 407, 11, 316, 295, 741, 73, 307, 6367, 33270, 394, 337, 264, 350, 6367, 11, 316, 295, 741, 307, 264, 6367, 33270, 394, 337, 264, 361, 6367, 13, 50732], 'temperature': 0.0, 'avg_logprob': -0.16574342250823976, 'compression_ratio': 1.7388535031847134, 'no_speech_prob': 0.16439606249332428}, {'id': 136, 'seek': 135718, 'start': 1364.54, 'end': 1372.1000000000001, 'text': ' Why do you say A of i is a computation? Why do you say it is a computation? Because you', 'tokens': [50732, 1545, 360, 291, 584, 316, 295, 741, 307, 257, 24903, 30, 1545, 360, 291, 584, 309, 307, 257, 24903, 30, 1436, 291, 51110], 'temperature': 0.0, 'avg_logprob': -0.16574342250823976, 'compression_ratio': 1.7388535031847134, 'no_speech_prob': 0.16439606249332428}, {'id': 137, 'seek': 135718, 'start': 1372.1000000000001, 'end': 1384.78, 'text': ' are doing A adding the offset may be multiplying by the size and all that. So, to do such loop', 'tokens': [51110, 366, 884, 316, 5127, 264, 18687, 815, 312, 30955, 538, 264, 2744, 293, 439, 300, 13, 407, 11, 281, 360, 1270, 6367, 51744], 'temperature': 0.0, 'avg_logprob': -0.16574342250823976, 'compression_ratio': 1.7388535031847134, 'no_speech_prob': 0.16439606249332428}, {'id': 138, 'seek': 138478, 'start': 1384.78, 'end': 1395.3, 'text': ' invariant code motion, we need to see when is it safe. What is the opportunity? When', 'tokens': [50364, 33270, 394, 3089, 5394, 11, 321, 643, 281, 536, 562, 307, 309, 3273, 13, 708, 307, 264, 2650, 30, 1133, 50890], 'temperature': 0.0, 'avg_logprob': -0.2550627800726121, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.23914983868598938}, {'id': 139, 'seek': 138478, 'start': 1395.3, 'end': 1401.66, 'text': ' is it safe? We know that it is not modified in that. Where is the opportunity if you have', 'tokens': [50890, 307, 309, 3273, 30, 492, 458, 300, 309, 307, 406, 15873, 294, 300, 13, 2305, 307, 264, 2650, 498, 291, 362, 51208], 'temperature': 0.0, 'avg_logprob': -0.2550627800726121, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.23914983868598938}, {'id': 140, 'seek': 138478, 'start': 1401.66, 'end': 1406.26, 'text': ' a loop where you have lot of memory operations? There is an opportunity. So, you want to look', 'tokens': [51208, 257, 6367, 689, 291, 362, 688, 295, 4675, 7705, 30, 821, 307, 364, 2650, 13, 407, 11, 291, 528, 281, 574, 51438], 'temperature': 0.0, 'avg_logprob': -0.2550627800726121, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.23914983868598938}, {'id': 141, 'seek': 138478, 'start': 1406.26, 'end': 1411.82, 'text': ' at the loop. Easy to find. Profitability, it is machine dependent. Most of the time', 'tokens': [51438, 412, 264, 6367, 13, 16002, 281, 915, 13, 6039, 270, 2310, 11, 309, 307, 3479, 12334, 13, 4534, 295, 264, 565, 51716], 'temperature': 0.0, 'avg_logprob': -0.2550627800726121, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.23914983868598938}, {'id': 142, 'seek': 141182, 'start': 1411.86, 'end': 1424.3799999999999, 'text': ' it looks profitable. I mean it depends whether I mean how much you are when you move it out.', 'tokens': [50366, 309, 1542, 21608, 13, 286, 914, 309, 5946, 1968, 286, 914, 577, 709, 291, 366, 562, 291, 1286, 309, 484, 13, 50992], 'temperature': 0.0, 'avg_logprob': -0.2833249270915985, 'compression_ratio': 1.6335403726708075, 'no_speech_prob': 0.5525692701339722}, {'id': 143, 'seek': 141182, 'start': 1424.3799999999999, 'end': 1431.02, 'text': ' In this case, for loop in general for loop transformations, it is machine dependent.', 'tokens': [50992, 682, 341, 1389, 11, 337, 6367, 294, 2674, 337, 6367, 34852, 11, 309, 307, 3479, 12334, 13, 51324], 'temperature': 0.0, 'avg_logprob': -0.2833249270915985, 'compression_ratio': 1.6335403726708075, 'no_speech_prob': 0.5525692701339722}, {'id': 144, 'seek': 141182, 'start': 1431.02, 'end': 1441.1799999999998, 'text': ' For loop invariant code motion, can it be machine dependent? Mostly it is profitable,', 'tokens': [51324, 1171, 6367, 33270, 394, 3089, 5394, 11, 393, 309, 312, 3479, 12334, 30, 29035, 309, 307, 21608, 11, 51832], 'temperature': 0.0, 'avg_logprob': -0.2833249270915985, 'compression_ratio': 1.6335403726708075, 'no_speech_prob': 0.5525692701339722}, {'id': 145, 'seek': 144118, 'start': 1441.54, 'end': 1450.78, 'text': ' but there may be some odd case. I cannot figure out where because you moved it out, some cache', 'tokens': [50382, 457, 456, 815, 312, 512, 7401, 1389, 13, 286, 2644, 2573, 484, 689, 570, 291, 4259, 309, 484, 11, 512, 19459, 50844], 'temperature': 0.0, 'avg_logprob': -0.26800665214880187, 'compression_ratio': 1.5574712643678161, 'no_speech_prob': 0.004328632261604071}, {'id': 146, 'seek': 144118, 'start': 1450.78, 'end': 1455.46, 'text': ' behavior has changed. Because of it, there may be some impact. I do not know, but most', 'tokens': [50844, 5223, 575, 3105, 13, 1436, 295, 309, 11, 456, 815, 312, 512, 2712, 13, 286, 360, 406, 458, 11, 457, 881, 51078], 'temperature': 0.0, 'avg_logprob': -0.26800665214880187, 'compression_ratio': 1.5574712643678161, 'no_speech_prob': 0.004328632261604071}, {'id': 147, 'seek': 144118, 'start': 1455.46, 'end': 1467.7, 'text': ' of the time it is profitable and modulo some rare combination. Register pressure can move', 'tokens': [51078, 295, 264, 565, 309, 307, 21608, 293, 1072, 13455, 512, 5892, 6562, 13, 43167, 3321, 393, 1286, 51690], 'temperature': 0.0, 'avg_logprob': -0.26800665214880187, 'compression_ratio': 1.5574712643678161, 'no_speech_prob': 0.004328632261604071}, {'id': 148, 'seek': 146770, 'start': 1467.7, 'end': 1473.5, 'text': ' from one place to other. See when we do register allocation, when we do cache fetching and', 'tokens': [50364, 490, 472, 1081, 281, 661, 13, 3008, 562, 321, 360, 7280, 27599, 11, 562, 321, 360, 19459, 23673, 278, 293, 50654], 'temperature': 0.0, 'avg_logprob': -0.19279792696930642, 'compression_ratio': 1.7128712871287128, 'no_speech_prob': 0.00668063061311841}, {'id': 149, 'seek': 146770, 'start': 1473.5, 'end': 1481.82, 'text': ' all that, we are not doing any optimal algorithms. They are all heuristics. Some rare occurrence', 'tokens': [50654, 439, 300, 11, 321, 366, 406, 884, 604, 16252, 14642, 13, 814, 366, 439, 415, 374, 6006, 13, 2188, 5892, 36122, 51070], 'temperature': 0.0, 'avg_logprob': -0.19279792696930642, 'compression_ratio': 1.7128712871287128, 'no_speech_prob': 0.00668063061311841}, {'id': 150, 'seek': 146770, 'start': 1481.82, 'end': 1487.14, 'text': ' may impact the register pressure in some way, may impact the cache behavior in some way.', 'tokens': [51070, 815, 2712, 264, 7280, 3321, 294, 512, 636, 11, 815, 2712, 264, 19459, 5223, 294, 512, 636, 13, 51336], 'temperature': 0.0, 'avg_logprob': -0.19279792696930642, 'compression_ratio': 1.7128712871287128, 'no_speech_prob': 0.00668063061311841}, {'id': 151, 'seek': 146770, 'start': 1487.14, 'end': 1492.3, 'text': ' That is why we say I mean we do not say it will always be profitable.', 'tokens': [51336, 663, 307, 983, 321, 584, 286, 914, 321, 360, 406, 584, 309, 486, 1009, 312, 21608, 13, 51594], 'temperature': 0.0, 'avg_logprob': -0.19279792696930642, 'compression_ratio': 1.7128712871287128, 'no_speech_prob': 0.00668063061311841}, {'id': 152, 'seek': 149230, 'start': 1492.8999999999999, 'end': 1498.58, 'text': ' So, we are talking about loop invariant code motion. So, for loop invariant code motion,', 'tokens': [50394, 407, 11, 321, 366, 1417, 466, 6367, 33270, 394, 3089, 5394, 13, 407, 11, 337, 6367, 33270, 394, 3089, 5394, 11, 50678], 'temperature': 0.0, 'avg_logprob': -0.26759272984095983, 'compression_ratio': 1.6538461538461537, 'no_speech_prob': 0.050298016518354416}, {'id': 153, 'seek': 149230, 'start': 1498.58, 'end': 1504.86, 'text': ' we want to find out how did you say in that case i times j is loop invariant.', 'tokens': [50678, 321, 528, 281, 915, 484, 577, 630, 291, 584, 294, 300, 1389, 741, 1413, 361, 307, 6367, 33270, 394, 13, 50992], 'temperature': 0.0, 'avg_logprob': -0.26759272984095983, 'compression_ratio': 1.6538461538461537, 'no_speech_prob': 0.050298016518354416}, {'id': 154, 'seek': 149230, 'start': 1504.86, 'end': 1520.74, 'text': ' Correct. So, basically what we are saying, there is part of the code which is not changing.', 'tokens': [50992, 12753, 13, 407, 11, 1936, 437, 321, 366, 1566, 11, 456, 307, 644, 295, 264, 3089, 597, 307, 406, 4473, 13, 51786], 'temperature': 0.0, 'avg_logprob': -0.26759272984095983, 'compression_ratio': 1.6538461538461537, 'no_speech_prob': 0.050298016518354416}, {'id': 155, 'seek': 152074, 'start': 1521.18, 'end': 1529.22, 'text': ' How do we identify that? So, what we can do? We can look at the variables which are defined', 'tokens': [50386, 1012, 360, 321, 5876, 300, 30, 407, 11, 437, 321, 393, 360, 30, 492, 393, 574, 412, 264, 9102, 597, 366, 7642, 50788], 'temperature': 0.0, 'avg_logprob': -0.1645649518722143, 'compression_ratio': 1.7236842105263157, 'no_speech_prob': 0.03835177794098854}, {'id': 156, 'seek': 152074, 'start': 1529.22, 'end': 1537.3, 'text': ' in the loop. So, if you look at this code, what is defined in this loop? In this loop,', 'tokens': [50788, 294, 264, 6367, 13, 407, 11, 498, 291, 574, 412, 341, 3089, 11, 437, 307, 7642, 294, 341, 6367, 30, 682, 341, 6367, 11, 51192], 'temperature': 0.0, 'avg_logprob': -0.1645649518722143, 'compression_ratio': 1.7236842105263157, 'no_speech_prob': 0.03835177794098854}, {'id': 157, 'seek': 152074, 'start': 1537.3, 'end': 1545.06, 'text': ' i is defined, j is defined, k is defined. And you are also writing to A. So, I just', 'tokens': [51192, 741, 307, 7642, 11, 361, 307, 7642, 11, 350, 307, 7642, 13, 400, 291, 366, 611, 3579, 281, 316, 13, 407, 11, 286, 445, 51580], 'temperature': 0.0, 'avg_logprob': -0.1645649518722143, 'compression_ratio': 1.7236842105263157, 'no_speech_prob': 0.03835177794098854}, {'id': 158, 'seek': 154506, 'start': 1545.3799999999999, 'end': 1554.3799999999999, 'text': ' put ijk. In this loop, what are all defined? j, k and A. In this loop, it is k and A. So,', 'tokens': [50380, 829, 741, 73, 74, 13, 682, 341, 6367, 11, 437, 366, 439, 7642, 30, 361, 11, 350, 293, 316, 13, 682, 341, 6367, 11, 309, 307, 350, 293, 316, 13, 407, 11, 50830], 'temperature': 0.0, 'avg_logprob': -0.19578604925246465, 'compression_ratio': 1.8181818181818181, 'no_speech_prob': 0.06171217933297157}, {'id': 159, 'seek': 154506, 'start': 1554.3799999999999, 'end': 1560.3799999999999, 'text': ' now if you look at this, is there a part of the code, is there a part of the code which', 'tokens': [50830, 586, 498, 291, 574, 412, 341, 11, 307, 456, 257, 644, 295, 264, 3089, 11, 307, 456, 257, 644, 295, 264, 3089, 597, 51130], 'temperature': 0.0, 'avg_logprob': -0.19578604925246465, 'compression_ratio': 1.8181818181818181, 'no_speech_prob': 0.06171217933297157}, {'id': 160, 'seek': 154506, 'start': 1560.3799999999999, 'end': 1568.02, 'text': ' depends upon variables not in this loop def? See if you look at this code, this looks like', 'tokens': [51130, 5946, 3564, 9102, 406, 294, 341, 6367, 1060, 30, 3008, 498, 291, 574, 412, 341, 3089, 11, 341, 1542, 411, 51512], 'temperature': 0.0, 'avg_logprob': -0.19578604925246465, 'compression_ratio': 1.8181818181818181, 'no_speech_prob': 0.06171217933297157}, {'id': 161, 'seek': 154506, 'start': 1568.02, 'end': 1574.4199999999998, 'text': ' a single statement. But if you have done three address code or IR, this will look like this', 'tokens': [51512, 257, 2167, 5629, 13, 583, 498, 291, 362, 1096, 1045, 2985, 3089, 420, 16486, 11, 341, 486, 574, 411, 341, 51832], 'temperature': 0.0, 'avg_logprob': -0.19578604925246465, 'compression_ratio': 1.8181818181818181, 'no_speech_prob': 0.06171217933297157}, {'id': 162, 'seek': 157442, 'start': 1574.42, 'end': 1583.54, 'text': ' is one computation i times j, then times k is another operation. So, now I have i times', 'tokens': [50364, 307, 472, 24903, 741, 1413, 361, 11, 550, 1413, 350, 307, 1071, 6916, 13, 407, 11, 586, 286, 362, 741, 1413, 50820], 'temperature': 0.0, 'avg_logprob': -0.25169524630984746, 'compression_ratio': 1.738255033557047, 'no_speech_prob': 0.013630527071654797}, {'id': 163, 'seek': 157442, 'start': 1583.54, 'end': 1598.3400000000001, 'text': ' j. So, now for the k loop, for the k loop, find me an expression which is not, which', 'tokens': [50820, 361, 13, 407, 11, 586, 337, 264, 350, 6367, 11, 337, 264, 350, 6367, 11, 915, 385, 364, 6114, 597, 307, 406, 11, 597, 51560], 'temperature': 0.0, 'avg_logprob': -0.25169524630984746, 'compression_ratio': 1.738255033557047, 'no_speech_prob': 0.013630527071654797}, {'id': 164, 'seek': 157442, 'start': 1598.3400000000001, 'end': 1604.1000000000001, 'text': ' depends on variables which are not defined in this, in this case i times j. So, I will', 'tokens': [51560, 5946, 322, 9102, 597, 366, 406, 7642, 294, 341, 11, 294, 341, 1389, 741, 1413, 361, 13, 407, 11, 286, 486, 51848], 'temperature': 0.0, 'avg_logprob': -0.25169524630984746, 'compression_ratio': 1.738255033557047, 'no_speech_prob': 0.013630527071654797}, {'id': 165, 'seek': 160410, 'start': 1604.1, 'end': 1611.98, 'text': ' do that. I will take this i times j, I will take this i times j and A sub ij and move', 'tokens': [50364, 360, 300, 13, 286, 486, 747, 341, 741, 1413, 361, 11, 286, 486, 747, 341, 741, 1413, 361, 293, 316, 1422, 741, 73, 293, 1286, 50758], 'temperature': 0.0, 'avg_logprob': -0.23776985076536616, 'compression_ratio': 1.5987654320987654, 'no_speech_prob': 0.006074182689189911}, {'id': 166, 'seek': 160410, 'start': 1611.98, 'end': 1622.2199999999998, 'text': ' it up. Nice. So, I created a temporary t1, computed the address of aij, t2 i times j', 'tokens': [50758, 309, 493, 13, 5490, 13, 407, 11, 286, 2942, 257, 13413, 256, 16, 11, 40610, 264, 2985, 295, 257, 1718, 11, 256, 17, 741, 1413, 361, 51270], 'temperature': 0.0, 'avg_logprob': -0.23776985076536616, 'compression_ratio': 1.5987654320987654, 'no_speech_prob': 0.006074182689189911}, {'id': 167, 'seek': 160410, 'start': 1622.2199999999998, 'end': 1631.3, 'text': ' and reuse them. Nice. All of us are on the same page. Good. In the previous page, I said', 'tokens': [51270, 293, 26225, 552, 13, 5490, 13, 1057, 295, 505, 366, 322, 264, 912, 3028, 13, 2205, 13, 682, 264, 3894, 3028, 11, 286, 848, 51724], 'temperature': 0.0, 'avg_logprob': -0.23776985076536616, 'compression_ratio': 1.5987654320987654, 'no_speech_prob': 0.006074182689189911}, {'id': 168, 'seek': 163130, 'start': 1632.3, 'end': 1640.74, 'text': ' there are 3 million array index operations. How many array index operations are here?', 'tokens': [50414, 456, 366, 805, 2459, 10225, 8186, 7705, 13, 1012, 867, 10225, 8186, 7705, 366, 510, 30, 50836], 'temperature': 0.0, 'avg_logprob': -0.3153051488539752, 'compression_ratio': 1.4913793103448276, 'no_speech_prob': 0.7698445320129395}, {'id': 169, 'seek': 163130, 'start': 1640.74, 'end': 1652.1, 'text': ' This is 1 million, this is 10,000, no 20,000, right? 20,000. So, from 3 million to some', 'tokens': [50836, 639, 307, 502, 2459, 11, 341, 307, 1266, 11, 1360, 11, 572, 945, 11, 1360, 11, 558, 30, 945, 11, 1360, 13, 407, 11, 490, 805, 2459, 281, 512, 51404], 'temperature': 0.0, 'avg_logprob': -0.3153051488539752, 'compression_ratio': 1.4913793103448276, 'no_speech_prob': 0.7698445320129395}, {'id': 170, 'seek': 165210, 'start': 1652.8999999999999, 'end': 1664.8999999999999, 'text': ' 1 million chiller, right? How many multiplications am I doing? Here, sorry, here how many multiplications?', 'tokens': [50404, 502, 2459, 417, 10497, 11, 558, 30, 1012, 867, 17596, 763, 669, 286, 884, 30, 1692, 11, 2597, 11, 510, 577, 867, 17596, 763, 30, 51004], 'temperature': 0.0, 'avg_logprob': -0.39689951809969815, 'compression_ratio': 1.648, 'no_speech_prob': 0.7680624723434448}, {'id': 171, 'seek': 165210, 'start': 1664.8999999999999, 'end': 1675.8999999999999, 'text': ' 2 million. 2 million. Here how many multiplications? 1 million and 10,000. Right? Can I do anything', 'tokens': [51004, 568, 2459, 13, 568, 2459, 13, 1692, 577, 867, 17596, 763, 30, 502, 2459, 293, 1266, 11, 1360, 13, 1779, 30, 1664, 286, 360, 1340, 51554], 'temperature': 0.0, 'avg_logprob': -0.39689951809969815, 'compression_ratio': 1.648, 'no_speech_prob': 0.7680624723434448}, {'id': 172, 'seek': 168210, 'start': 1682.26, 'end': 1693.26, 'text': ' further? I can lift this ai up, right? And so, yeah, so if you look at this part, this', 'tokens': [50372, 3052, 30, 286, 393, 5533, 341, 9783, 493, 11, 558, 30, 400, 370, 11, 1338, 11, 370, 498, 291, 574, 412, 341, 644, 11, 341, 50922], 'temperature': 0.0, 'avg_logprob': -0.24376922055899378, 'compression_ratio': 1.5029239766081872, 'no_speech_prob': 0.012045969255268574}, {'id': 173, 'seek': 168210, 'start': 1695.02, 'end': 1702.02, 'text': ' ai here has moved out. This t3, this t3, I am just focusing on just the t3 loop. The', 'tokens': [51010, 9783, 510, 575, 4259, 484, 13, 639, 256, 18, 11, 341, 256, 18, 11, 286, 669, 445, 8416, 322, 445, 264, 256, 18, 6367, 13, 440, 51360], 'temperature': 0.0, 'avg_logprob': -0.24376922055899378, 'compression_ratio': 1.5029239766081872, 'no_speech_prob': 0.012045969255268574}, {'id': 174, 'seek': 168210, 'start': 1704.02, 'end': 1711.02, 'text': ' t3 has become local only from here to here. I created a t3, pushed it up. My life is,', 'tokens': [51460, 256, 18, 575, 1813, 2654, 787, 490, 510, 281, 510, 13, 286, 2942, 257, 256, 18, 11, 9152, 309, 493, 13, 1222, 993, 307, 11, 51810], 'temperature': 0.0, 'avg_logprob': -0.24376922055899378, 'compression_ratio': 1.5029239766081872, 'no_speech_prob': 0.012045969255268574}, {'id': 175, 'seek': 171210, 'start': 1712.62, 'end': 1717.62, 'text': ' has become simpler now. How many operations? How many multiplication operations? The multiplication', 'tokens': [50390, 575, 1813, 18587, 586, 13, 1012, 867, 7705, 30, 1012, 867, 27290, 7705, 30, 440, 27290, 50640], 'temperature': 0.0, 'avg_logprob': -0.4066334740590241, 'compression_ratio': 1.5157232704402517, 'no_speech_prob': 0.00637753726914525}, {'id': 176, 'seek': 171210, 'start': 1717.62, 'end': 1724.62, 'text': ' has not changed. Array index operations have changed. It has become 1 million, 10,000 plus', 'tokens': [50640, 575, 406, 3105, 13, 1587, 3458, 8186, 7705, 362, 3105, 13, 467, 575, 1813, 502, 2459, 11, 1266, 11, 1360, 1804, 50990], 'temperature': 0.0, 'avg_logprob': -0.4066334740590241, 'compression_ratio': 1.5157232704402517, 'no_speech_prob': 0.00637753726914525}, {'id': 177, 'seek': 171210, 'start': 1725.74, 'end': 1732.74, 'text': ' 100. Nice. Can I do further? So, this is the first', 'tokens': [51046, 2319, 13, 5490, 13, 1664, 286, 360, 3052, 30, 407, 11, 341, 307, 264, 700, 51396], 'temperature': 0.0, 'avg_logprob': -0.4066334740590241, 'compression_ratio': 1.5157232704402517, 'no_speech_prob': 0.00637753726914525}, {'id': 178, 'seek': 174210, 'start': 1742.1, 'end': 1749.1, 'text': ' one. We can of course do unrolling and all that, right? And what we saw? Let us not', 'tokens': [50364, 472, 13, 492, 393, 295, 1164, 360, 517, 18688, 293, 439, 300, 11, 558, 30, 400, 437, 321, 1866, 30, 961, 505, 406, 50714], 'temperature': 0.0, 'avg_logprob': -0.28512428746078955, 'compression_ratio': 1.4161490683229814, 'no_speech_prob': 0.01405192818492651}, {'id': 179, 'seek': 174210, 'start': 1751.86, 'end': 1758.86, 'text': ' go to unrolling for this example. You can do it, but not yet. Instead of multiplication,', 'tokens': [50852, 352, 281, 517, 18688, 337, 341, 1365, 13, 509, 393, 360, 309, 11, 457, 406, 1939, 13, 7156, 295, 27290, 11, 51202], 'temperature': 0.0, 'avg_logprob': -0.28512428746078955, 'compression_ratio': 1.4161490683229814, 'no_speech_prob': 0.01405192818492651}, {'id': 180, 'seek': 174210, 'start': 1763.86, 'end': 1770.86, 'text': ' we can do addition. What? Where? Good point. Which one?', 'tokens': [51452, 321, 393, 360, 4500, 13, 708, 30, 2305, 30, 2205, 935, 13, 3013, 472, 30, 51802], 'temperature': 0.0, 'avg_logprob': -0.28512428746078955, 'compression_ratio': 1.4161490683229814, 'no_speech_prob': 0.01405192818492651}, {'id': 181, 'seek': 177210, 'start': 1772.1, 'end': 1779.1, 'text': ' k loop. Yes. What should t be initialized to? This should be a typo here, right? This', 'tokens': [50364, 350, 6367, 13, 1079, 13, 708, 820, 256, 312, 5883, 1602, 281, 30, 639, 820, 312, 257, 2125, 78, 510, 11, 558, 30, 639, 50714], 'temperature': 0.0, 'avg_logprob': -0.45983294436806127, 'compression_ratio': 1.4830508474576272, 'no_speech_prob': 0.03013078309595585}, {'id': 182, 'seek': 177210, 'start': 1793.1, 'end': 1800.1, 'text': ' should be t2. This should be t2. Let us say t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t10,', 'tokens': [51414, 820, 312, 256, 17, 13, 639, 820, 312, 256, 17, 13, 961, 505, 584, 256, 16, 11, 256, 17, 11, 256, 18, 11, 256, 19, 11, 256, 20, 11, 256, 21, 11, 256, 22, 11, 256, 23, 11, 256, 24, 11, 256, 3279, 11, 256, 3279, 11, 51764], 'temperature': 0.0, 'avg_logprob': -0.45983294436806127, 'compression_ratio': 1.4830508474576272, 'no_speech_prob': 0.03013078309595585}, {'id': 183, 'seek': 180210, 'start': 1802.1399999999999, 'end': 1809.1399999999999, 'text': ' t11, t12, t13, t14. The t4 is okay. t4 equal to initial value of t2 and then how should', 'tokens': [50366, 256, 5348, 11, 256, 4762, 11, 256, 7668, 11, 256, 7271, 13, 440, 256, 19, 307, 1392, 13, 256, 19, 2681, 281, 5883, 2158, 295, 256, 17, 293, 550, 577, 820, 50716], 'temperature': 0.4, 'avg_logprob': -0.30391798126563596, 'compression_ratio': 1.5113636363636365, 'no_speech_prob': 0.00938454084098339}, {'id': 184, 'seek': 180210, 'start': 1812.3999999999999, 'end': 1819.3999999999999, 'text': ' t4 change? I will add. You said add, right? What should I add it to? Let us get the value', 'tokens': [50879, 256, 19, 1319, 30, 286, 486, 909, 13, 509, 848, 909, 11, 558, 30, 708, 820, 286, 909, 309, 281, 30, 961, 505, 483, 264, 2158, 51229], 'temperature': 0.4, 'avg_logprob': -0.30391798126563596, 'compression_ratio': 1.5113636363636365, 'no_speech_prob': 0.00938454084098339}, {'id': 185, 'seek': 180210, 'start': 1821.62, 'end': 1826.98, 'text': ' of t2. Initially t2 value is some value. Let us call it x. After first iteration, in the', 'tokens': [51340, 295, 256, 17, 13, 29446, 256, 17, 2158, 307, 512, 2158, 13, 961, 505, 818, 309, 2031, 13, 2381, 700, 24784, 11, 294, 264, 51608], 'temperature': 0.4, 'avg_logprob': -0.30391798126563596, 'compression_ratio': 1.5113636363636365, 'no_speech_prob': 0.00938454084098339}, {'id': 186, 'seek': 182698, 'start': 1826.98, 'end': 1833.98, 'text': ' first iteration you will do t1k equal to x. In the next iteration you will do t1k equal', 'tokens': [50364, 700, 24784, 291, 486, 360, 256, 16, 74, 2681, 281, 2031, 13, 682, 264, 958, 24784, 291, 486, 360, 256, 16, 74, 2681, 50714], 'temperature': 0.0, 'avg_logprob': -0.2279130032188014, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.007118874695152044}, {'id': 187, 'seek': 182698, 'start': 1833.98, 'end': 1840.98, 'text': ' to x plus x plus x. Next, x plus x plus x. So, what am I incrementing it with? This value', 'tokens': [50714, 281, 2031, 1804, 2031, 1804, 2031, 13, 3087, 11, 2031, 1804, 2031, 1804, 2031, 13, 407, 11, 437, 669, 286, 26200, 278, 309, 365, 30, 639, 2158, 51064], 'temperature': 0.0, 'avg_logprob': -0.2279130032188014, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.007118874695152044}, {'id': 188, 'seek': 182698, 'start': 1847.06, 'end': 1854.06, 'text': ' of t2. So, what we are doing is basically strength reduction. We are doing strength', 'tokens': [51368, 295, 256, 17, 13, 407, 11, 437, 321, 366, 884, 307, 1936, 3800, 11004, 13, 492, 366, 884, 3800, 51718], 'temperature': 0.0, 'avg_logprob': -0.2279130032188014, 'compression_ratio': 1.7058823529411764, 'no_speech_prob': 0.007118874695152044}, {'id': 189, 'seek': 185698, 'start': 1857.22, 'end': 1864.22, 'text': ' reduction. See, if there is a loop induction variable, see if it is in the loop, there', 'tokens': [50376, 11004, 13, 3008, 11, 498, 456, 307, 257, 6367, 33371, 7006, 11, 536, 498, 309, 307, 294, 264, 6367, 11, 456, 50726], 'temperature': 0.0, 'avg_logprob': -0.27916568868300495, 'compression_ratio': 1.7077922077922079, 'no_speech_prob': 0.002396033611148596}, {'id': 190, 'seek': 185698, 'start': 1865.82, 'end': 1872.82, 'text': ' is a induction loop index variable which is changing from i plus 1, i plus 2 and so on.', 'tokens': [50806, 307, 257, 33371, 6367, 8186, 7006, 597, 307, 4473, 490, 741, 1804, 502, 11, 741, 1804, 568, 293, 370, 322, 13, 51156], 'temperature': 0.0, 'avg_logprob': -0.27916568868300495, 'compression_ratio': 1.7077922077922079, 'no_speech_prob': 0.002396033611148596}, {'id': 191, 'seek': 185698, 'start': 1874.22, 'end': 1881.22, 'text': ' The induction expression is changing in terms of i. Whatever the current value of i, you', 'tokens': [51226, 440, 33371, 6114, 307, 4473, 294, 2115, 295, 741, 13, 8541, 264, 2190, 2158, 295, 741, 11, 291, 51576], 'temperature': 0.0, 'avg_logprob': -0.27916568868300495, 'compression_ratio': 1.7077922077922079, 'no_speech_prob': 0.002396033611148596}, {'id': 192, 'seek': 188122, 'start': 1882.1000000000001, 'end': 1889.1000000000001, 'text': ' are doing something more than that. So, initially if it was iC1 plus iC2, next i plus 1 times', 'tokens': [50408, 366, 884, 746, 544, 813, 300, 13, 407, 11, 9105, 498, 309, 390, 741, 34, 16, 1804, 741, 34, 17, 11, 958, 741, 1804, 502, 1413, 50758], 'temperature': 0.0, 'avg_logprob': -0.1626483310352672, 'compression_ratio': 1.5747126436781609, 'no_speech_prob': 0.002394152106717229}, {'id': 193, 'seek': 188122, 'start': 1889.38, 'end': 1896.38, 'text': ' C1 plus C2, next i plus 2 C1 plus C2. In such a case, what I can do? Wherever in the body', 'tokens': [50772, 383, 16, 1804, 383, 17, 11, 958, 741, 1804, 568, 383, 16, 1804, 383, 17, 13, 682, 1270, 257, 1389, 11, 437, 286, 393, 360, 30, 30903, 294, 264, 1772, 51122], 'temperature': 0.0, 'avg_logprob': -0.1626483310352672, 'compression_ratio': 1.5747126436781609, 'no_speech_prob': 0.002394152106717229}, {'id': 194, 'seek': 188122, 'start': 1903.14, 'end': 1910.14, 'text': ' I am using this one iC1 plus C2, I will replace it with a temporary. This temporary value,', 'tokens': [51460, 286, 669, 1228, 341, 472, 741, 34, 16, 1804, 383, 17, 11, 286, 486, 7406, 309, 365, 257, 13413, 13, 639, 13413, 2158, 11, 51810], 'temperature': 0.0, 'avg_logprob': -0.1626483310352672, 'compression_ratio': 1.5747126436781609, 'no_speech_prob': 0.002394152106717229}, {'id': 195, 'seek': 191014, 'start': 1910.26, 'end': 1917.26, 'text': ' I will keep incrementing. So, let us see what I will do. I took a temporary t5. Initial', 'tokens': [50370, 286, 486, 1066, 26200, 278, 13, 407, 11, 718, 505, 536, 437, 286, 486, 360, 13, 286, 1890, 257, 13413, 256, 20, 13, 22937, 831, 50720], 'temperature': 0.0, 'avg_logprob': -0.2097684793304979, 'compression_ratio': 1.3834586466165413, 'no_speech_prob': 0.002138948068022728}, {'id': 196, 'seek': 191014, 'start': 1921.98, 'end': 1928.98, 'text': ' value of t5 was t2 and then I am incrementing t5 by t2. Multiplication, how many multiplications', 'tokens': [50956, 2158, 295, 256, 20, 390, 256, 17, 293, 550, 286, 669, 26200, 278, 256, 20, 538, 256, 17, 13, 29238, 4770, 399, 11, 577, 867, 17596, 763, 51306], 'temperature': 0.0, 'avg_logprob': -0.2097684793304979, 'compression_ratio': 1.3834586466165413, 'no_speech_prob': 0.002138948068022728}, {'id': 197, 'seek': 194014, 'start': 1940.6200000000001, 'end': 1947.6200000000001, 'text': ' did we have before? 2 million. We started from 2 million. It became 1 million now, 0.', 'tokens': [50388, 630, 321, 362, 949, 30, 568, 2459, 13, 492, 1409, 490, 568, 2459, 13, 467, 3062, 502, 2459, 586, 11, 1958, 13, 50738], 'temperature': 0.0, 'avg_logprob': -0.312928368063534, 'compression_ratio': 1.330935251798561, 'no_speech_prob': 0.0030721784569323063}, {'id': 198, 'seek': 194014, 'start': 1955.7800000000002, 'end': 1962.7800000000002, 'text': ' Now that is done for, I will go back to the previous code again. So, we remove this multiplication.', 'tokens': [51146, 823, 300, 307, 1096, 337, 11, 286, 486, 352, 646, 281, 264, 3894, 3089, 797, 13, 407, 11, 321, 4159, 341, 27290, 13, 51496], 'temperature': 0.0, 'avg_logprob': -0.312928368063534, 'compression_ratio': 1.330935251798561, 'no_speech_prob': 0.0030721784569323063}, {'id': 199, 'seek': 196278, 'start': 1963.78, 'end': 1970.78, 'text': ' We removed this multiplication. Similarly, this multiplication can also be removed. This', 'tokens': [50414, 492, 7261, 341, 27290, 13, 13157, 11, 341, 27290, 393, 611, 312, 7261, 13, 639, 50764], 'temperature': 0.0, 'avg_logprob': -0.27518817356654574, 'compression_ratio': 1.7435897435897436, 'no_speech_prob': 0.001753328600898385}, {'id': 200, 'seek': 196278, 'start': 1972.22, 'end': 1979.22, 'text': ' multiplication, in this code if you look at it, j is changing. j is the loop index variable.', 'tokens': [50836, 27290, 11, 294, 341, 3089, 498, 291, 574, 412, 309, 11, 361, 307, 4473, 13, 361, 307, 264, 6367, 8186, 7006, 13, 51186], 'temperature': 0.0, 'avg_logprob': -0.27518817356654574, 'compression_ratio': 1.7435897435897436, 'no_speech_prob': 0.001753328600898385}, {'id': 201, 'seek': 196278, 'start': 1980.5, 'end': 1987.5, 'text': ' i is not changing within this code. So, this is as if some C1. For this loop, this is some', 'tokens': [51250, 741, 307, 406, 4473, 1951, 341, 3089, 13, 407, 11, 341, 307, 382, 498, 512, 383, 16, 13, 1171, 341, 6367, 11, 341, 307, 512, 51600], 'temperature': 0.0, 'avg_logprob': -0.27518817356654574, 'compression_ratio': 1.7435897435897436, 'no_speech_prob': 0.001753328600898385}, {'id': 202, 'seek': 198750, 'start': 1987.5, 'end': 1994.5, 'text': ' C1, not a constant literal, but value that does not change in the current loop. So, I', 'tokens': [50364, 383, 16, 11, 406, 257, 5754, 20411, 11, 457, 2158, 300, 775, 406, 1319, 294, 264, 2190, 6367, 13, 407, 11, 286, 50714], 'temperature': 0.0, 'avg_logprob': -0.3182382583618164, 'compression_ratio': 1.4662921348314606, 'no_speech_prob': 0.002049483358860016}, {'id': 203, 'seek': 198750, 'start': 1999.66, 'end': 2006.66, 'text': ' get same t2 equal to some initial value of i and then keep incrementing this t4. t4 equal', 'tokens': [50972, 483, 912, 256, 17, 2681, 281, 512, 5883, 2158, 295, 741, 293, 550, 1066, 26200, 278, 341, 256, 19, 13, 256, 19, 2681, 51322], 'temperature': 0.0, 'avg_logprob': -0.3182382583618164, 'compression_ratio': 1.4662921348314606, 'no_speech_prob': 0.002049483358860016}, {'id': 204, 'seek': 198750, 'start': 2010.38, 'end': 2017.38, 'text': ' to i, t4 equal to t4 plus n. Multiplication is completely gone. Now, I am going to do', 'tokens': [51508, 281, 741, 11, 256, 19, 2681, 281, 256, 19, 1804, 297, 13, 29238, 4770, 399, 307, 2584, 2780, 13, 823, 11, 286, 669, 516, 281, 360, 51858], 'temperature': 0.0, 'avg_logprob': -0.3182382583618164, 'compression_ratio': 1.4662921348314606, 'no_speech_prob': 0.002049483358860016}, {'id': 205, 'seek': 201750, 'start': 2018.5, 'end': 2025.5, 'text': ' something else. Anything else I can do?', 'tokens': [50414, 746, 1646, 13, 11998, 1646, 286, 393, 360, 30, 50764], 'temperature': 0.0, 'avg_logprob': -0.5566378940235485, 'compression_ratio': 1.0555555555555556, 'no_speech_prob': 0.22192496061325073}, {'id': 206, 'seek': 201750, 'start': 2027.5, 'end': 2028.5, 'text': ' .', 'tokens': [50864, 2411, 50914], 'temperature': 0.0, 'avg_logprob': -0.5566378940235485, 'compression_ratio': 1.0555555555555556, 'no_speech_prob': 0.22192496061325073}, {'id': 207, 'seek': 201750, 'start': 2028.5, 'end': 2031.5, 'text': ' T1 sub k equal to t5. Yes.', 'tokens': [50914, 314, 16, 1422, 350, 2681, 281, 256, 20, 13, 1079, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.5566378940235485, 'compression_ratio': 1.0555555555555556, 'no_speech_prob': 0.22192496061325073}, {'id': 208, 'seek': 201750, 'start': 2031.5, 'end': 2032.5, 'text': ' .', 'tokens': [51064, 2411, 51114], 'temperature': 0.0, 'avg_logprob': -0.5566378940235485, 'compression_ratio': 1.0555555555555556, 'no_speech_prob': 0.22192496061325073}, {'id': 209, 'seek': 201750, 'start': 2032.5, 'end': 2037.5, 'text': ' No, but k is changing.', 'tokens': [51114, 883, 11, 457, 350, 307, 4473, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.5566378940235485, 'compression_ratio': 1.0555555555555556, 'no_speech_prob': 0.22192496061325073}, {'id': 210, 'seek': 201750, 'start': 2037.5, 'end': 2038.5, 'text': ' .', 'tokens': [51364, 2411, 51414], 'temperature': 0.0, 'avg_logprob': -0.5566378940235485, 'compression_ratio': 1.0555555555555556, 'no_speech_prob': 0.22192496061325073}, {'id': 211, 'seek': 203850, 'start': 2038.5, 'end': 2045.5, 'text': ' And then, which one you want to assign only once? This one, this is an array element. So,', 'tokens': [50364, 400, 550, 11, 597, 472, 291, 528, 281, 6269, 787, 1564, 30, 639, 472, 11, 341, 307, 364, 10225, 4478, 13, 407, 11, 50714], 'temperature': 0.0, 'avg_logprob': -0.26089850892411903, 'compression_ratio': 1.4285714285714286, 'no_speech_prob': 0.06368149816989899}, {'id': 212, 'seek': 203850, 'start': 2059.86, 'end': 2066.86, 'text': ' I am writing to first element, second element, third element, fourth element and then, but', 'tokens': [51432, 286, 669, 3579, 281, 700, 4478, 11, 1150, 4478, 11, 2636, 4478, 11, 6409, 4478, 293, 550, 11, 457, 51782], 'temperature': 0.0, 'avg_logprob': -0.26089850892411903, 'compression_ratio': 1.4285714285714286, 'no_speech_prob': 0.06368149816989899}, {'id': 213, 'seek': 206850, 'start': 2068.58, 'end': 2075.58, 'text': ' that is still the right statement to focus on.', 'tokens': [50368, 300, 307, 920, 264, 558, 5629, 281, 1879, 322, 13, 50718], 'temperature': 0.0, 'avg_logprob': -0.23854183805161627, 'compression_ratio': 1.3846153846153846, 'no_speech_prob': 0.018976759165525436}, {'id': 214, 'seek': 206850, 'start': 2075.58, 'end': 2076.58, 'text': ' .', 'tokens': [50718, 2411, 50768], 'temperature': 0.0, 'avg_logprob': -0.23854183805161627, 'compression_ratio': 1.3846153846153846, 'no_speech_prob': 0.018976759165525436}, {'id': 215, 'seek': 206850, 'start': 2076.58, 'end': 2083.58, 'text': ' We could be, instead of every time doing t sub something, what I could do?', 'tokens': [50768, 492, 727, 312, 11, 2602, 295, 633, 565, 884, 256, 1422, 746, 11, 437, 286, 727, 360, 30, 51118], 'temperature': 0.0, 'avg_logprob': -0.23854183805161627, 'compression_ratio': 1.3846153846153846, 'no_speech_prob': 0.018976759165525436}, {'id': 216, 'seek': 206850, 'start': 2083.58, 'end': 2084.58, 'text': ' .', 'tokens': [51118, 2411, 51168], 'temperature': 0.0, 'avg_logprob': -0.23854183805161627, 'compression_ratio': 1.3846153846153846, 'no_speech_prob': 0.018976759165525436}, {'id': 217, 'seek': 206850, 'start': 2084.58, 'end': 2091.58, 'text': ' Here, let us say, I have a new temporary. Let us say, which one is t6. t6 equal to address', 'tokens': [51168, 1692, 11, 718, 505, 584, 11, 286, 362, 257, 777, 13413, 13, 961, 505, 584, 11, 597, 472, 307, 256, 21, 13, 256, 21, 2681, 281, 2985, 51518], 'temperature': 0.0, 'avg_logprob': -0.23854183805161627, 'compression_ratio': 1.3846153846153846, 'no_speech_prob': 0.018976759165525436}, {'id': 218, 'seek': 209158, 'start': 2092.58, 'end': 2099.58, 'text': ' of t1 and keep writing to star t6 and keep incrementing t6. I will do star t6 and keep', 'tokens': [50414, 295, 256, 16, 293, 1066, 3579, 281, 3543, 256, 21, 293, 1066, 26200, 278, 256, 21, 13, 286, 486, 360, 3543, 256, 21, 293, 1066, 50764], 'temperature': 0.0, 'avg_logprob': -0.16319217000688827, 'compression_ratio': 1.5398230088495575, 'no_speech_prob': 0.007339483126997948}, {'id': 219, 'seek': 209158, 'start': 2105.14, 'end': 2112.14, 'text': ' incrementing t6. Let us do that. So, I think that goes by one step further. So, this is', 'tokens': [51042, 26200, 278, 256, 21, 13, 961, 505, 360, 300, 13, 407, 11, 286, 519, 300, 1709, 538, 472, 1823, 3052, 13, 407, 11, 341, 307, 51392], 'temperature': 0.0, 'avg_logprob': -0.16319217000688827, 'compression_ratio': 1.5398230088495575, 'no_speech_prob': 0.007339483126997948}, {'id': 220, 'seek': 211214, 'start': 2112.14, 'end': 2119.14, 'text': ' what it was. Star something equal to blah and keep incrementing by how much? That is', 'tokens': [50364, 437, 309, 390, 13, 5705, 746, 2681, 281, 12288, 293, 1066, 26200, 278, 538, 577, 709, 30, 663, 307, 50714], 'temperature': 0.0, 'avg_logprob': -0.2724401501641757, 'compression_ratio': 1.502857142857143, 'no_speech_prob': 0.0025446799118071795}, {'id': 221, 'seek': 211214, 'start': 2124.74, 'end': 2130.18, 'text': ' the question. Let us go back to the previous, because I missed something. Here, how much', 'tokens': [50994, 264, 1168, 13, 961, 505, 352, 646, 281, 264, 3894, 11, 570, 286, 6721, 746, 13, 1692, 11, 577, 709, 51266], 'temperature': 0.0, 'avg_logprob': -0.2724401501641757, 'compression_ratio': 1.502857142857143, 'no_speech_prob': 0.0025446799118071795}, {'id': 222, 'seek': 211214, 'start': 2130.18, 'end': 2137.18, 'text': ' does from one point to the next point change? Only one. Here, it changes by, here it will', 'tokens': [51266, 775, 490, 472, 935, 281, 264, 958, 935, 1319, 30, 5686, 472, 13, 1692, 11, 309, 2962, 538, 11, 510, 309, 486, 51616], 'temperature': 0.0, 'avg_logprob': -0.2724401501641757, 'compression_ratio': 1.502857142857143, 'no_speech_prob': 0.0025446799118071795}, {'id': 223, 'seek': 213718, 'start': 2137.18, 'end': 2144.18, 'text': ' change by 100, here it will change by 10,000. So, you have to be careful. So, what we did', 'tokens': [50364, 1319, 538, 2319, 11, 510, 309, 486, 1319, 538, 1266, 11, 1360, 13, 407, 11, 291, 362, 281, 312, 5026, 13, 407, 11, 437, 321, 630, 50714], 'temperature': 0.0, 'avg_logprob': -0.24529672102494673, 'compression_ratio': 1.3597122302158273, 'no_speech_prob': 0.005218605510890484}, {'id': 224, 'seek': 213718, 'start': 2149.94, 'end': 2156.94, 'text': ' first? From here, we expanded away, we exposed the indexing. I think we also did a copy propagation', 'tokens': [51002, 700, 30, 3358, 510, 11, 321, 14342, 1314, 11, 321, 9495, 264, 8186, 278, 13, 286, 519, 321, 611, 630, 257, 5055, 38377, 51352], 'temperature': 0.0, 'avg_logprob': -0.24529672102494673, 'compression_ratio': 1.3597122302158273, 'no_speech_prob': 0.005218605510890484}, {'id': 225, 'seek': 215694, 'start': 2157.7000000000003, 'end': 2164.7000000000003, 'text': ' phase. There are few copies that can be thrown away. If you look at, is there a copy that', 'tokens': [50402, 5574, 13, 821, 366, 1326, 14341, 300, 393, 312, 11732, 1314, 13, 759, 291, 574, 412, 11, 307, 456, 257, 5055, 300, 50752], 'temperature': 0.0, 'avg_logprob': -0.23809732239821862, 'compression_ratio': 1.3953488372093024, 'no_speech_prob': 0.008808166719973087}, {'id': 226, 'seek': 215694, 'start': 2168.46, 'end': 2175.46, 'text': ' I can, t2 is it? t2 equal to t4. Yeah, from here. Is there a copy that can go? Just check.', 'tokens': [50940, 286, 393, 11, 256, 17, 307, 309, 30, 256, 17, 2681, 281, 256, 19, 13, 865, 11, 490, 510, 13, 1119, 456, 257, 5055, 300, 393, 352, 30, 1449, 1520, 13, 51290], 'temperature': 0.0, 'avg_logprob': -0.23809732239821862, 'compression_ratio': 1.3953488372093024, 'no_speech_prob': 0.008808166719973087}, {'id': 227, 'seek': 218694, 'start': 2186.94, 'end': 2193.94, 'text': ' Am I missing something? Yeah, t2 equal to t4. Nothing is changing from here to here', 'tokens': [50364, 2012, 286, 5361, 746, 30, 865, 11, 256, 17, 2681, 281, 256, 19, 13, 6693, 307, 4473, 490, 510, 281, 510, 50714], 'temperature': 0.0, 'avg_logprob': -0.21101434881036932, 'compression_ratio': 1.3650793650793651, 'no_speech_prob': 0.01323426328599453}, {'id': 228, 'seek': 218694, 'start': 2208.14, 'end': 2215.14, 'text': ' pucca. So, I can replace this with t4. Then, the same t2 is used here. So, I can replace', 'tokens': [51424, 280, 1311, 496, 13, 407, 11, 286, 393, 7406, 341, 365, 256, 19, 13, 1396, 11, 264, 912, 256, 17, 307, 1143, 510, 13, 407, 11, 286, 393, 7406, 51774], 'temperature': 0.0, 'avg_logprob': -0.21101434881036932, 'compression_ratio': 1.3650793650793651, 'no_speech_prob': 0.01323426328599453}, {'id': 229, 'seek': 221694, 'start': 2216.94, 'end': 2223.94, 'text': ' it with t4. So, this statement can go. So, we do the copy propagation and then we expose', 'tokens': [50364, 309, 365, 256, 19, 13, 407, 11, 341, 5629, 393, 352, 13, 407, 11, 321, 360, 264, 5055, 38377, 293, 550, 321, 19219, 50714], 'temperature': 0.0, 'avg_logprob': -0.20743023721795334, 'compression_ratio': 1.5170454545454546, 'no_speech_prob': 0.003171888180077076}, {'id': 230, 'seek': 221694, 'start': 2231.7400000000002, 'end': 2238.7400000000002, 'text': ' the indexing. t1 sub k, I made it t1. I just exposed it and then this looks like the code', 'tokens': [51104, 264, 8186, 278, 13, 256, 16, 1422, 350, 11, 286, 1027, 309, 256, 16, 13, 286, 445, 9495, 309, 293, 550, 341, 1542, 411, 264, 3089, 51454], 'temperature': 0.0, 'avg_logprob': -0.20743023721795334, 'compression_ratio': 1.5170454545454546, 'no_speech_prob': 0.003171888180077076}, {'id': 231, 'seek': 221694, 'start': 2238.9, 'end': 2244.02, 'text': ' that we have seen before, where I can further again do increments in place of array this', 'tokens': [51462, 300, 321, 362, 1612, 949, 11, 689, 286, 393, 3052, 797, 360, 1946, 1117, 294, 1081, 295, 10225, 341, 51718], 'temperature': 0.0, 'avg_logprob': -0.20743023721795334, 'compression_ratio': 1.5170454545454546, 'no_speech_prob': 0.003171888180077076}, {'id': 232, 'seek': 224402, 'start': 2244.02, 'end': 2249.02, 'text': ' thing. So, I will get code like this. Star t8 equal to blah blah, keep incrementing.', 'tokens': [50364, 551, 13, 407, 11, 286, 486, 483, 3089, 411, 341, 13, 5705, 256, 23, 2681, 281, 12288, 12288, 11, 1066, 26200, 278, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.23152509299657678, 'compression_ratio': 1.610091743119266, 'no_speech_prob': 0.008304811082780361}, {'id': 233, 'seek': 224402, 'start': 2249.02, 'end': 2253.5, 'text': ' See, star t8, t8 equal to t8 plus 1. There is something beautiful about this code. How', 'tokens': [50614, 3008, 11, 3543, 256, 23, 11, 256, 23, 2681, 281, 256, 23, 1804, 502, 13, 821, 307, 746, 2238, 466, 341, 3089, 13, 1012, 50838], 'temperature': 0.0, 'avg_logprob': -0.23152509299657678, 'compression_ratio': 1.610091743119266, 'no_speech_prob': 0.008304811082780361}, {'id': 234, 'seek': 224402, 'start': 2253.5, 'end': 2260.5, 'text': ' many of you can know what is special about such a code? This code is very amenable for', 'tokens': [50838, 867, 295, 291, 393, 458, 437, 307, 2121, 466, 1270, 257, 3089, 30, 639, 3089, 307, 588, 18497, 712, 337, 51188], 'temperature': 0.0, 'avg_logprob': -0.23152509299657678, 'compression_ratio': 1.610091743119266, 'no_speech_prob': 0.008304811082780361}, {'id': 235, 'seek': 224402, 'start': 2263.7, 'end': 2270.7, 'text': ' further optimization. This is store and increment. Have you heard of this instructions? This', 'tokens': [51348, 3052, 19618, 13, 639, 307, 3531, 293, 26200, 13, 3560, 291, 2198, 295, 341, 9415, 30, 639, 51698], 'temperature': 0.0, 'avg_logprob': -0.23152509299657678, 'compression_ratio': 1.610091743119266, 'no_speech_prob': 0.008304811082780361}, {'id': 236, 'seek': 227402, 'start': 2274.58, 'end': 2281.58, 'text': ' is lower end increment, store and increment. So, if you see such a code can be later optimized', 'tokens': [50392, 307, 3126, 917, 26200, 11, 3531, 293, 26200, 13, 407, 11, 498, 291, 536, 1270, 257, 3089, 393, 312, 1780, 26941, 50742], 'temperature': 0.0, 'avg_logprob': -0.34570605512978375, 'compression_ratio': 1.6287425149700598, 'no_speech_prob': 0.0018576241564005613}, {'id': 237, 'seek': 227402, 'start': 2282.14, 'end': 2289.14, 'text': ' there to one single fast instruction. But even at this code, just this code, how many', 'tokens': [50770, 456, 281, 472, 2167, 2370, 10951, 13, 583, 754, 412, 341, 3089, 11, 445, 341, 3089, 11, 577, 867, 51120], 'temperature': 0.0, 'avg_logprob': -0.34570605512978375, 'compression_ratio': 1.6287425149700598, 'no_speech_prob': 0.0018576241564005613}, {'id': 238, 'seek': 227402, 'start': 2292.38, 'end': 2299.38, 'text': ' multiplications are there? 0. How many additions are there? Here there are two. So, this is', 'tokens': [51282, 17596, 763, 366, 456, 30, 1958, 13, 1012, 867, 35113, 366, 456, 30, 1692, 456, 366, 732, 13, 407, 11, 341, 307, 51632], 'temperature': 0.0, 'avg_logprob': -0.34570605512978375, 'compression_ratio': 1.6287425149700598, 'no_speech_prob': 0.0018576241564005613}, {'id': 239, 'seek': 230402, 'start': 2304.58, 'end': 2311.1, 'text': ' an increment. This increment will mostly get folded into the store. So, this is the main', 'tokens': [50392, 364, 26200, 13, 639, 26200, 486, 5240, 483, 23940, 666, 264, 3531, 13, 407, 11, 341, 307, 264, 2135, 50718], 'temperature': 0.0, 'avg_logprob': -0.21603079765073716, 'compression_ratio': 1.6211180124223603, 'no_speech_prob': 0.003267477033659816}, {'id': 240, 'seek': 230402, 'start': 2311.1, 'end': 2318.1, 'text': ' this thing. So, there is definitely 1 million additions. From 2 million multiplications,', 'tokens': [50718, 341, 551, 13, 407, 11, 456, 307, 2138, 502, 2459, 35113, 13, 3358, 568, 2459, 17596, 763, 11, 51068], 'temperature': 0.0, 'avg_logprob': -0.21603079765073716, 'compression_ratio': 1.6211180124223603, 'no_speech_prob': 0.003267477033659816}, {'id': 241, 'seek': 230402, 'start': 2319.1, 'end': 2326.1, 'text': ' we came to 1 million additions and we had 3 million array index operations. It came', 'tokens': [51118, 321, 1361, 281, 502, 2459, 35113, 293, 321, 632, 805, 2459, 10225, 8186, 7705, 13, 467, 1361, 51468], 'temperature': 0.0, 'avg_logprob': -0.21603079765073716, 'compression_ratio': 1.6211180124223603, 'no_speech_prob': 0.003267477033659816}, {'id': 242, 'seek': 232610, 'start': 2326.2999999999997, 'end': 2333.2999999999997, 'text': ' down to 0. This is just a plain store, nothing more. Awesome, right? We will take, what time', 'tokens': [50374, 760, 281, 1958, 13, 639, 307, 445, 257, 11121, 3531, 11, 1825, 544, 13, 10391, 11, 558, 30, 492, 486, 747, 11, 437, 565, 50724], 'temperature': 0.0, 'avg_logprob': -0.32095060677363957, 'compression_ratio': 1.2971014492753623, 'no_speech_prob': 0.00475406413897872}, {'id': 243, 'seek': 232610, 'start': 2344.02, 'end': 2351.02, 'text': ' do we take a break? 4.15. Then I will do one more before we. So, if we, I want to do a', 'tokens': [51260, 360, 321, 747, 257, 1821, 30, 1017, 13, 5211, 13, 1396, 286, 486, 360, 472, 544, 949, 321, 13, 407, 11, 498, 321, 11, 286, 528, 281, 360, 257, 51610], 'temperature': 0.0, 'avg_logprob': -0.32095060677363957, 'compression_ratio': 1.2971014492753623, 'no_speech_prob': 0.00475406413897872}, {'id': 244, 'seek': 235610, 'start': 2356.1, 'end': 2363.1, 'text': ' break. I want you guys to go home, take this piece of code, do what we did for the simpler', 'tokens': [50364, 1821, 13, 286, 528, 291, 1074, 281, 352, 1280, 11, 747, 341, 2522, 295, 3089, 11, 360, 437, 321, 630, 337, 264, 18587, 50714], 'temperature': 0.0, 'avg_logprob': -0.22947623512961648, 'compression_ratio': 1.502824858757062, 'no_speech_prob': 0.014951186254620552}, {'id': 245, 'seek': 235610, 'start': 2363.46, 'end': 2370.46, 'text': ' thing. You should get a kick out of seeing this run. Here we not only saw the what part,', 'tokens': [50732, 551, 13, 509, 820, 483, 257, 4437, 484, 295, 2577, 341, 1190, 13, 1692, 321, 406, 787, 1866, 264, 437, 644, 11, 51082], 'temperature': 0.0, 'avg_logprob': -0.22947623512961648, 'compression_ratio': 1.502824858757062, 'no_speech_prob': 0.014951186254620552}, {'id': 246, 'seek': 235610, 'start': 2375.42, 'end': 2381.38, 'text': ' we also know how to do this. We said what is, I mean how do you actually, when do you,', 'tokens': [51330, 321, 611, 458, 577, 281, 360, 341, 13, 492, 848, 437, 307, 11, 286, 914, 577, 360, 291, 767, 11, 562, 360, 291, 11, 51628], 'temperature': 0.0, 'avg_logprob': -0.22947623512961648, 'compression_ratio': 1.502824858757062, 'no_speech_prob': 0.014951186254620552}, {'id': 247, 'seek': 238138, 'start': 2381.46, 'end': 2386.38, 'text': ' I mean the procedure for doing this. We said find out the variables which are defined in', 'tokens': [50368, 286, 914, 264, 10747, 337, 884, 341, 13, 492, 848, 915, 484, 264, 9102, 597, 366, 7642, 294, 50614], 'temperature': 0.0, 'avg_logprob': -0.21143102645874023, 'compression_ratio': 1.8716577540106951, 'no_speech_prob': 0.002471134765073657}, {'id': 248, 'seek': 238138, 'start': 2386.38, 'end': 2393.38, 'text': ' the loop, which are and then find expressions which are using variables which are not in', 'tokens': [50614, 264, 6367, 11, 597, 366, 293, 550, 915, 15277, 597, 366, 1228, 9102, 597, 366, 406, 294, 50964], 'temperature': 0.0, 'avg_logprob': -0.21143102645874023, 'compression_ratio': 1.8716577540106951, 'no_speech_prob': 0.002471134765073657}, {'id': 249, 'seek': 238138, 'start': 2395.02, 'end': 2402.02, 'text': ' the loop. Those expressions are your loop invariance. Then factor them out. Then we', 'tokens': [51046, 264, 6367, 13, 3950, 15277, 366, 428, 6367, 33270, 719, 13, 1396, 5952, 552, 484, 13, 1396, 321, 51396], 'temperature': 0.0, 'avg_logprob': -0.21143102645874023, 'compression_ratio': 1.8716577540106951, 'no_speech_prob': 0.002471134765073657}, {'id': 250, 'seek': 238138, 'start': 2404.38, 'end': 2411.1, 'text': ' looked at strength reduction, right? We looked at strength reduction and we saw how that', 'tokens': [51514, 2956, 412, 3800, 11004, 11, 558, 30, 492, 2956, 412, 3800, 11004, 293, 321, 1866, 577, 300, 51850], 'temperature': 0.0, 'avg_logprob': -0.21143102645874023, 'compression_ratio': 1.8716577540106951, 'no_speech_prob': 0.002471134765073657}, {'id': 251, 'seek': 241110, 'start': 2411.1, 'end': 2418.1, 'text': ' works. So, we not only saw the what part, but also looked at some how part. Is there', 'tokens': [50364, 1985, 13, 407, 11, 321, 406, 787, 1866, 264, 437, 644, 11, 457, 611, 2956, 412, 512, 577, 644, 13, 1119, 456, 50714], 'temperature': 0.0, 'avg_logprob': -0.2665009715340354, 'compression_ratio': 1.2459016393442623, 'no_speech_prob': 0.0010979220969602466}, {'id': 252, 'seek': 241110, 'start': 2425.18, 'end': 2432.18, 'text': ' further propagation you can do here? T3. What is happening with T3?', 'tokens': [51068, 3052, 38377, 291, 393, 360, 510, 30, 314, 18, 13, 708, 307, 2737, 365, 314, 18, 30, 51418], 'temperature': 0.0, 'avg_logprob': -0.2665009715340354, 'compression_ratio': 1.2459016393442623, 'no_speech_prob': 0.0010979220969602466}, {'id': 253, 'seek': 244110, 'start': 2441.1, 'end': 2448.1, 'text': ' T3 equal to T6. This can go, this can be T6 and then where is next T3? Is there any', 'tokens': [50364, 314, 18, 2681, 281, 314, 21, 13, 639, 393, 352, 11, 341, 393, 312, 314, 21, 293, 550, 689, 307, 958, 314, 18, 30, 1119, 456, 604, 50714], 'temperature': 0.0, 'avg_logprob': -0.3002083219330886, 'compression_ratio': 1.2932330827067668, 'no_speech_prob': 0.05173313990235329}, {'id': 254, 'seek': 244110, 'start': 2451.14, 'end': 2458.14, 'text': ' other occurrence of T3? No. Wow. So, this is definitely gone. What else? Sorry? T1 equal', 'tokens': [50866, 661, 36122, 295, 314, 18, 30, 883, 13, 3153, 13, 407, 11, 341, 307, 2138, 2780, 13, 708, 1646, 30, 4919, 30, 314, 16, 2681, 51216], 'temperature': 0.0, 'avg_logprob': -0.3002083219330886, 'compression_ratio': 1.2932330827067668, 'no_speech_prob': 0.05173313990235329}, {'id': 255, 'seek': 245814, 'start': 2458.14, 'end': 2465.14, 'text': ' to T7. Same is it? Good. So, this also goes. So, this one you are saying goes, right? This', 'tokens': [50364, 281, 314, 22, 13, 10635, 307, 309, 30, 2205, 13, 407, 11, 341, 611, 1709, 13, 407, 11, 341, 472, 291, 366, 1566, 1709, 11, 558, 30, 639, 50714], 'temperature': 0.0, 'avg_logprob': -0.3406934440135956, 'compression_ratio': 1.0975609756097562, 'no_speech_prob': 0.011996413581073284}, {'id': 256, 'seek': 246514, 'start': 2465.14, 'end': 2472.14, 'text': ' one goes. Hello. So, this is T3. So, this is T3. So, this is T3. So, this is T3. So,', 'tokens': [50364, 472, 1709, 13, 2425, 13, 407, 11, 341, 307, 314, 18, 13, 407, 11, 341, 307, 314, 18, 13, 407, 11, 341, 307, 314, 18, 13, 407, 11, 341, 307, 314, 18, 13, 407, 11, 50714], 'temperature': 0.0, 'avg_logprob': -0.5936810844822934, 'compression_ratio': 2.1538461538461537, 'no_speech_prob': 0.09408455342054367}, {'id': 257, 'seek': 249514, 'start': 2495.14, 'end': 2502.14, 'text': ' this is T4. Good. What else goes? This guy goes, right? Next.', 'tokens': [50364, 341, 307, 314, 19, 13, 2205, 13, 708, 1646, 1709, 30, 639, 2146, 1709, 11, 558, 30, 3087, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.32242030632205126, 'compression_ratio': 1.1685393258426966, 'no_speech_prob': 0.14339804649353027}, {'id': 258, 'seek': 249514, 'start': 2516.5, 'end': 2523.5, 'text': ' T5 equal to T4 and T5 equal to T5 plus T4.', 'tokens': [51432, 314, 20, 2681, 281, 314, 19, 293, 314, 20, 2681, 281, 314, 20, 1804, 314, 19, 13, 51782], 'temperature': 0.0, 'avg_logprob': -0.32242030632205126, 'compression_ratio': 1.1685393258426966, 'no_speech_prob': 0.14339804649353027}, {'id': 259, 'seek': 252514, 'start': 2525.14, 'end': 2532.14, 'text': ' Is it doubling? No, right? So, let us say the initial value of T4 is pick 5. So, this', 'tokens': [50364, 1119, 309, 33651, 30, 883, 11, 558, 30, 407, 11, 718, 505, 584, 264, 5883, 2158, 295, 314, 19, 307, 1888, 1025, 13, 407, 11, 341, 50714], 'temperature': 0.0, 'avg_logprob': -0.17419153745057153, 'compression_ratio': 1.2919708029197081, 'no_speech_prob': 0.007007400970906019}, {'id': 260, 'seek': 252514, 'start': 2542.06, 'end': 2549.06, 'text': ' becomes 5, then 10, then 15. If you keep left shifting by 2, it will be 5, 10, 20. So, that', 'tokens': [51210, 3643, 1025, 11, 550, 1266, 11, 550, 2119, 13, 759, 291, 1066, 1411, 17573, 538, 568, 11, 309, 486, 312, 1025, 11, 1266, 11, 945, 13, 407, 11, 300, 51560], 'temperature': 0.0, 'avg_logprob': -0.17419153745057153, 'compression_ratio': 1.2919708029197081, 'no_speech_prob': 0.007007400970906019}, {'id': 261, 'seek': 254906, 'start': 2549.06, 'end': 2556.06, 'text': ' we cannot do. Right? Okay. Any other? Anything more? No, right? Can we? T4 equal to i. Can', 'tokens': [50364, 321, 2644, 360, 13, 1779, 30, 1033, 13, 2639, 661, 30, 11998, 544, 30, 883, 11, 558, 30, 1664, 321, 30, 314, 19, 2681, 281, 741, 13, 1664, 50714], 'temperature': 0.0, 'avg_logprob': -0.3437125086784363, 'compression_ratio': 1.0344827586206897, 'no_speech_prob': 0.014205874875187874}, {'id': 262, 'seek': 255606, 'start': 2556.06, 'end': 2563.06, 'text': ' we replace T4 with i? Here, I can use i for sure. Am I? Can I? No, I cannot because T4', 'tokens': [50364, 321, 7406, 314, 19, 365, 741, 30, 1692, 11, 286, 393, 764, 741, 337, 988, 13, 2012, 286, 30, 1664, 286, 30, 883, 11, 286, 2644, 570, 314, 19, 50714], 'temperature': 0.0, 'avg_logprob': -0.22732584404222894, 'compression_ratio': 1.0238095238095237, 'no_speech_prob': 0.04134919121861458}, {'id': 263, 'seek': 256306, 'start': 2563.06, 'end': 2570.06, 'text': ' is changing in the loop. I cannot. No, I think that is it. I mean I am not able to', 'tokens': [50364, 307, 4473, 294, 264, 6367, 13, 286, 2644, 13, 883, 11, 286, 519, 300, 307, 309, 13, 286, 914, 286, 669, 406, 1075, 281, 50714], 'temperature': 0.0, 'avg_logprob': -0.18317706496627242, 'compression_ratio': 1.0933333333333333, 'no_speech_prob': 0.11864353716373444}, {'id': 264, 'seek': 259306, 'start': 2593.06, 'end': 2600.06, 'text': ' do that. Okay. So, let me ask this question. How many of you understand the idea of when', 'tokens': [50364, 360, 300, 13, 1033, 13, 407, 11, 718, 385, 1029, 341, 1168, 13, 1012, 867, 295, 291, 1223, 264, 1558, 295, 562, 50714], 'temperature': 0.0, 'avg_logprob': -0.33555444081624347, 'compression_ratio': 1.372093023255814, 'no_speech_prob': 0.017437756061553955}, {'id': 265, 'seek': 259306, 'start': 2611.5, 'end': 2618.5, 'text': ' I am doing loop invariant code motion? How do I identify which parts are loop invariant?', 'tokens': [51286, 286, 669, 884, 6367, 33270, 394, 3089, 5394, 30, 1012, 360, 286, 5876, 597, 3166, 366, 6367, 33270, 394, 30, 51636], 'temperature': 0.0, 'avg_logprob': -0.33555444081624347, 'compression_ratio': 1.372093023255814, 'no_speech_prob': 0.017437756061553955}, {'id': 266, 'seek': 261850, 'start': 2619.3, 'end': 2626.3, 'text': ' I first identify the variables defined in the loop and then find out expressions which', 'tokens': [50404, 286, 700, 5876, 264, 9102, 7642, 294, 264, 6367, 293, 550, 915, 484, 15277, 597, 50754], 'temperature': 0.0, 'avg_logprob': -0.19898952654938198, 'compression_ratio': 1.5574712643678161, 'no_speech_prob': 0.0016999914078041911}, {'id': 267, 'seek': 261850, 'start': 2628.62, 'end': 2635.62, 'text': ' use variables that are not defined in this. Right? The strength reduction in loops where', 'tokens': [50870, 764, 9102, 300, 366, 406, 7642, 294, 341, 13, 1779, 30, 440, 3800, 11004, 294, 16121, 689, 51220], 'temperature': 0.0, 'avg_logprob': -0.19898952654938198, 'compression_ratio': 1.5574712643678161, 'no_speech_prob': 0.0016999914078041911}, {'id': 268, 'seek': 261850, 'start': 2637.26, 'end': 2644.26, 'text': ' I replace, if I have an expression iC1 plus iC2 where C1 and C2 are the current loop constants.', 'tokens': [51302, 286, 7406, 11, 498, 286, 362, 364, 6114, 741, 34, 16, 1804, 741, 34, 17, 689, 383, 16, 293, 383, 17, 366, 264, 2190, 6367, 35870, 13, 51652], 'temperature': 0.0, 'avg_logprob': -0.19898952654938198, 'compression_ratio': 1.5574712643678161, 'no_speech_prob': 0.0016999914078041911}, {'id': 269, 'seek': 264426, 'start': 2645.26, 'end': 2652.26, 'text': ' They are not constants per se. They are constants as per the current loop. They do not change', 'tokens': [50414, 814, 366, 406, 35870, 680, 369, 13, 814, 366, 35870, 382, 680, 264, 2190, 6367, 13, 814, 360, 406, 1319, 50764], 'temperature': 0.0, 'avg_logprob': -0.19654088945531134, 'compression_ratio': 1.7467532467532467, 'no_speech_prob': 0.0014096808154135942}, {'id': 270, 'seek': 264426, 'start': 2652.46, 'end': 2659.0400000000004, 'text': ' in the current loop. Then I replace this one with a temporary. Initialize the temporary', 'tokens': [50774, 294, 264, 2190, 6367, 13, 1396, 286, 7406, 341, 472, 365, 257, 13413, 13, 22937, 831, 1125, 264, 13413, 51103], 'temperature': 0.0, 'avg_logprob': -0.19654088945531134, 'compression_ratio': 1.7467532467532467, 'no_speech_prob': 0.0014096808154135942}, {'id': 271, 'seek': 264426, 'start': 2659.0400000000004, 'end': 2666.0400000000004, 'text': ' before the loop. Right? And at the end of the loop, I increment this temporary by which', 'tokens': [51103, 949, 264, 6367, 13, 1779, 30, 400, 412, 264, 917, 295, 264, 6367, 11, 286, 26200, 341, 13413, 538, 597, 51453], 'temperature': 0.0, 'avg_logprob': -0.19654088945531134, 'compression_ratio': 1.7467532467532467, 'no_speech_prob': 0.0014096808154135942}, {'id': 272, 'seek': 266604, 'start': 2666.04, 'end': 2673.04, 'text': ' value? See every time it is increasing by C1. What is the initial value? i0 C1 plus', 'tokens': [50364, 2158, 30, 3008, 633, 565, 309, 307, 5662, 538, 383, 16, 13, 708, 307, 264, 5883, 2158, 30, 741, 15, 383, 16, 1804, 50714], 'temperature': 0.0, 'avg_logprob': -0.3004201783074273, 'compression_ratio': 1.5524475524475525, 'no_speech_prob': 0.0022465612273663282}, {'id': 273, 'seek': 266604, 'start': 2679.6, 'end': 2686.6, 'text': ' C2 and every time it is increasing only by C1. So, at the end I will do T equal to T', 'tokens': [51042, 383, 17, 293, 633, 565, 309, 307, 5662, 787, 538, 383, 16, 13, 407, 11, 412, 264, 917, 286, 486, 360, 314, 2681, 281, 314, 51392], 'temperature': 0.0, 'avg_logprob': -0.3004201783074273, 'compression_ratio': 1.5524475524475525, 'no_speech_prob': 0.0022465612273663282}, {'id': 274, 'seek': 266604, 'start': 2687.16, 'end': 2694.16, 'text': ' plus C1. Right? What if the expression is C1 plus C2?', 'tokens': [51420, 1804, 383, 16, 13, 1779, 30, 708, 498, 264, 6114, 307, 383, 16, 1804, 383, 17, 30, 51770], 'temperature': 0.0, 'avg_logprob': -0.3004201783074273, 'compression_ratio': 1.5524475524475525, 'no_speech_prob': 0.0022465612273663282}, {'id': 275, 'seek': 269604, 'start': 2696.04, 'end': 2703.04, 'text': ' The expression is not of this form iC1 plus C2. This scheme cannot be. You have to find', 'tokens': [50364, 440, 6114, 307, 406, 295, 341, 1254, 741, 34, 16, 1804, 383, 17, 13, 639, 12232, 2644, 312, 13, 509, 362, 281, 915, 50714], 'temperature': 0.0, 'avg_logprob': -0.33983912150065104, 'compression_ratio': 1.528735632183908, 'no_speech_prob': 0.014497064054012299}, {'id': 276, 'seek': 269604, 'start': 2703.3, 'end': 2710.3, 'text': ' some other scheme. But it is a fairly common pattern. It is a very fairly common pattern', 'tokens': [50727, 512, 661, 12232, 13, 583, 309, 307, 257, 6457, 2689, 5102, 13, 467, 307, 257, 588, 6457, 2689, 5102, 51077], 'temperature': 0.0, 'avg_logprob': -0.33983912150065104, 'compression_ratio': 1.528735632183908, 'no_speech_prob': 0.014497064054012299}, {'id': 277, 'seek': 269604, 'start': 2711.34, 'end': 2718.34, 'text': ' where I mean look at this. Even in our code for, sorry, yeah, if you look at this T1 plus', 'tokens': [51129, 689, 286, 914, 574, 412, 341, 13, 2754, 294, 527, 3089, 337, 11, 2597, 11, 1338, 11, 498, 291, 574, 412, 341, 314, 16, 1804, 51479], 'temperature': 0.0, 'avg_logprob': -0.33983912150065104, 'compression_ratio': 1.528735632183908, 'no_speech_prob': 0.014497064054012299}, {'id': 278, 'seek': 271834, 'start': 2718.34, 'end': 2725.34, 'text': ' K part, right, T1 times K, this is the K is the loop induction variable, T2 is independent.', 'tokens': [50364, 591, 644, 11, 558, 11, 314, 16, 1413, 591, 11, 341, 307, 264, 591, 307, 264, 6367, 33371, 7006, 11, 314, 17, 307, 6695, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.2697134729641587, 'compression_ratio': 1.4385964912280702, 'no_speech_prob': 0.0028889263048768044}, {'id': 279, 'seek': 271834, 'start': 2732.58, 'end': 2739.58, 'text': ' So, even though it looks like some expression, there is some part which is not changing,', 'tokens': [51076, 407, 11, 754, 1673, 309, 1542, 411, 512, 6114, 11, 456, 307, 512, 644, 597, 307, 406, 4473, 11, 51426], 'temperature': 0.0, 'avg_logprob': -0.2697134729641587, 'compression_ratio': 1.4385964912280702, 'no_speech_prob': 0.0028889263048768044}, {'id': 280, 'seek': 271834, 'start': 2740.2000000000003, 'end': 2747.2000000000003, 'text': ' this T2 part. Make sense? Anyone who is still having issues here?', 'tokens': [51457, 341, 314, 17, 644, 13, 4387, 2020, 30, 14643, 567, 307, 920, 1419, 2663, 510, 30, 51807], 'temperature': 0.0, 'avg_logprob': -0.2697134729641587, 'compression_ratio': 1.4385964912280702, 'no_speech_prob': 0.0028889263048768044}, {'id': 281, 'seek': 274834, 'start': 2748.78, 'end': 2755.78, 'text': ' No, right? Okay. We are done with the introduction to optimizations part where we looked at the', 'tokens': [50386, 883, 11, 558, 30, 1033, 13, 492, 366, 1096, 365, 264, 9339, 281, 5028, 14455, 644, 689, 321, 2956, 412, 264, 50736], 'temperature': 0.0, 'avg_logprob': -0.19123737739794183, 'compression_ratio': 1.8, 'no_speech_prob': 0.0009695913759060204}, {'id': 282, 'seek': 274834, 'start': 2762.26, 'end': 2767.78, 'text': ' basic idea of optimizations. We looked at couple of small optimizations and what they', 'tokens': [51060, 3875, 1558, 295, 5028, 14455, 13, 492, 2956, 412, 1916, 295, 1359, 5028, 14455, 293, 437, 436, 51336], 'temperature': 0.0, 'avg_logprob': -0.19123737739794183, 'compression_ratio': 1.8, 'no_speech_prob': 0.0009695913759060204}, {'id': 283, 'seek': 274834, 'start': 2767.78, 'end': 2774.78, 'text': ' do and couple of small optimizations how they do. We will now look at a type of analysis', 'tokens': [51336, 360, 293, 1916, 295, 1359, 5028, 14455, 577, 436, 360, 13, 492, 486, 586, 574, 412, 257, 2010, 295, 5215, 51686], 'temperature': 0.0, 'avg_logprob': -0.19123737739794183, 'compression_ratio': 1.8, 'no_speech_prob': 0.0009695913759060204}, {'id': 284, 'seek': 277478, 'start': 2775.1000000000004, 'end': 2782.1000000000004, 'text': ' called control flow analysis and its related optimizations, control flow optimization.', 'tokens': [50380, 1219, 1969, 3095, 5215, 293, 1080, 4077, 5028, 14455, 11, 1969, 3095, 19618, 13, 50730], 'temperature': 0.0, 'avg_logprob': -0.36539669525928986, 'compression_ratio': 1.4666666666666666, 'no_speech_prob': 0.0011693603591993451}, {'id': 285, 'seek': 277478, 'start': 2793.1000000000004, 'end': 2798.78, 'text': ' When we, in the previous examples that we saw when we were doing analysis, we kept saying', 'tokens': [51280, 1133, 321, 11, 294, 264, 3894, 5110, 300, 321, 1866, 562, 321, 645, 884, 5215, 11, 321, 4305, 1566, 51564], 'temperature': 0.0, 'avg_logprob': -0.36539669525928986, 'compression_ratio': 1.4666666666666666, 'no_speech_prob': 0.0011693603591993451}, {'id': 286, 'seek': 279878, 'start': 2798.78, 'end': 2805.78, 'text': ' hey here is an expression whose value does not change. This expression can move out.', 'tokens': [50364, 4177, 510, 307, 364, 6114, 6104, 2158, 775, 406, 1319, 13, 639, 6114, 393, 1286, 484, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.23336328462112782, 'compression_ratio': 1.8010204081632653, 'no_speech_prob': 0.00757609773427248}, {'id': 287, 'seek': 279878, 'start': 2806.26, 'end': 2813.26, 'text': ' Here is an expression whose value is a constant. I can replace it with a constant. That is', 'tokens': [50738, 1692, 307, 364, 6114, 6104, 2158, 307, 257, 5754, 13, 286, 393, 7406, 309, 365, 257, 5754, 13, 663, 307, 51088], 'temperature': 0.0, 'avg_logprob': -0.23336328462112782, 'compression_ratio': 1.8010204081632653, 'no_speech_prob': 0.00757609773427248}, {'id': 288, 'seek': 279878, 'start': 2814.42, 'end': 2821.42, 'text': ' all about data. So, the understanding of the program has to be in two directions. One on', 'tokens': [51146, 439, 466, 1412, 13, 407, 11, 264, 3701, 295, 264, 1461, 575, 281, 312, 294, 732, 11095, 13, 1485, 322, 51496], 'temperature': 0.0, 'avg_logprob': -0.23336328462112782, 'compression_ratio': 1.8010204081632653, 'no_speech_prob': 0.00757609773427248}, {'id': 289, 'seek': 279878, 'start': 2822.2200000000003, 'end': 2827.6600000000003, 'text': ' how the data is flowing, the other is how the control is flowing in the program. Control', 'tokens': [51536, 577, 264, 1412, 307, 13974, 11, 264, 661, 307, 577, 264, 1969, 307, 13974, 294, 264, 1461, 13, 12912, 51808], 'temperature': 0.0, 'avg_logprob': -0.23336328462112782, 'compression_ratio': 1.8010204081632653, 'no_speech_prob': 0.00757609773427248}, {'id': 290, 'seek': 282766, 'start': 2827.66, 'end': 2834.66, 'text': ' is in which instructions are executed after what, where are, I mean my if then else blocks,', 'tokens': [50364, 307, 294, 597, 9415, 366, 17577, 934, 437, 11, 689, 366, 11, 286, 914, 452, 498, 550, 1646, 8474, 11, 50714], 'temperature': 0.0, 'avg_logprob': -0.20280286767980554, 'compression_ratio': 1.6886792452830188, 'no_speech_prob': 0.0010984797263517976}, {'id': 291, 'seek': 282766, 'start': 2834.66, 'end': 2841.66, 'text': ' my loops and all that. So, we briefly talked about data flow analysis. We will come in', 'tokens': [50714, 452, 16121, 293, 439, 300, 13, 407, 11, 321, 10515, 2825, 466, 1412, 3095, 5215, 13, 492, 486, 808, 294, 51064], 'temperature': 0.0, 'avg_logprob': -0.20280286767980554, 'compression_ratio': 1.6886792452830188, 'no_speech_prob': 0.0010984797263517976}, {'id': 292, 'seek': 282766, 'start': 2843.46, 'end': 2848.46, 'text': ' detail about data flow analysis for most of tomorrow. Today what we will look at is control', 'tokens': [51154, 2607, 466, 1412, 3095, 5215, 337, 881, 295, 4153, 13, 2692, 437, 321, 486, 574, 412, 307, 1969, 51404], 'temperature': 0.0, 'avg_logprob': -0.20280286767980554, 'compression_ratio': 1.6886792452830188, 'no_speech_prob': 0.0010984797263517976}, {'id': 293, 'seek': 282766, 'start': 2848.46, 'end': 2855.46, 'text': ' flow analysis now. So, here is an example. It is an example that computes the Fibonacci', 'tokens': [51404, 3095, 5215, 586, 13, 407, 11, 510, 307, 364, 1365, 13, 467, 307, 364, 1365, 300, 715, 1819, 264, 479, 897, 266, 43870, 51754], 'temperature': 0.0, 'avg_logprob': -0.20280286767980554, 'compression_ratio': 1.6886792452830188, 'no_speech_prob': 0.0010984797263517976}, {'id': 294, 'seek': 285546, 'start': 2855.46, 'end': 2862.46, 'text': ' series, Mth this thing. So, if this is the input code, this could be the IR. In the', 'tokens': [50364, 2638, 11, 376, 392, 341, 551, 13, 407, 11, 498, 341, 307, 264, 4846, 3089, 11, 341, 727, 312, 264, 16486, 13, 682, 264, 50714], 'temperature': 0.0, 'avg_logprob': -0.22858552065762608, 'compression_ratio': 1.4491525423728813, 'no_speech_prob': 0.004193151835352182}, {'id': 295, 'seek': 285546, 'start': 2874.46, 'end': 2881.46, 'text': ' input code, you can see there is an if, else, for and all that. In the IR, it is pretty', 'tokens': [51314, 4846, 3089, 11, 291, 393, 536, 456, 307, 364, 498, 11, 1646, 11, 337, 293, 439, 300, 13, 682, 264, 16486, 11, 309, 307, 1238, 51664], 'temperature': 0.0, 'avg_logprob': -0.22858552065762608, 'compression_ratio': 1.4491525423728813, 'no_speech_prob': 0.004193151835352182}, {'id': 296, 'seek': 288146, 'start': 2882.1, 'end': 2889.1, 'text': ' high level IR. It is not very low level, but still the loop is gone. The if then else is', 'tokens': [50396, 1090, 1496, 16486, 13, 467, 307, 406, 588, 2295, 1496, 11, 457, 920, 264, 6367, 307, 2780, 13, 440, 498, 550, 1646, 307, 50746], 'temperature': 0.0, 'avg_logprob': -0.14053915642403267, 'compression_ratio': 1.608433734939759, 'no_speech_prob': 0.0030709761194884777}, {'id': 297, 'seek': 288146, 'start': 2890.9, 'end': 2897.9, 'text': ' gone. Can you look at this and say there is a loop? If we say I want to do optimizations', 'tokens': [50836, 2780, 13, 1664, 291, 574, 412, 341, 293, 584, 456, 307, 257, 6367, 30, 759, 321, 584, 286, 528, 281, 360, 5028, 14455, 51186], 'temperature': 0.0, 'avg_logprob': -0.14053915642403267, 'compression_ratio': 1.608433734939759, 'no_speech_prob': 0.0030709761194884777}, {'id': 298, 'seek': 288146, 'start': 2901.34, 'end': 2908.34, 'text': ' and transformations on a higher level IR and the loop is gone, how do I say move the code', 'tokens': [51358, 293, 34852, 322, 257, 2946, 1496, 16486, 293, 264, 6367, 307, 2780, 11, 577, 360, 286, 584, 1286, 264, 3089, 51708], 'temperature': 0.0, 'avg_logprob': -0.14053915642403267, 'compression_ratio': 1.608433734939759, 'no_speech_prob': 0.0030709761194884777}, {'id': 299, 'seek': 290834, 'start': 2908.78, 'end': 2915.78, 'text': ' above the loop? You may say hey, this is stupid. You had loop visible, you threw it away. Now,', 'tokens': [50386, 3673, 264, 6367, 30, 509, 815, 584, 4177, 11, 341, 307, 6631, 13, 509, 632, 6367, 8974, 11, 291, 11918, 309, 1314, 13, 823, 11, 50736], 'temperature': 0.0, 'avg_logprob': -0.2745382235600398, 'compression_ratio': 1.4108527131782946, 'no_speech_prob': 0.0018034001113846898}, {'id': 300, 'seek': 290834, 'start': 2923.7400000000002, 'end': 2930.7400000000002, 'text': ' you are asking where is the loop? What if the code is written in this way? You see this', 'tokens': [51134, 291, 366, 3365, 689, 307, 264, 6367, 30, 708, 498, 264, 3089, 307, 3720, 294, 341, 636, 30, 509, 536, 341, 51484], 'temperature': 0.0, 'avg_logprob': -0.2745382235600398, 'compression_ratio': 1.4108527131782946, 'no_speech_prob': 0.0018034001113846898}, {'id': 301, 'seek': 293074, 'start': 2931.74, 'end': 2938.74, 'text': ' could have been a valid code as well. Can you find out where is the loop? Moral of the', 'tokens': [50414, 727, 362, 668, 257, 7363, 3089, 382, 731, 13, 1664, 291, 915, 484, 689, 307, 264, 6367, 30, 5146, 304, 295, 264, 50764], 'temperature': 0.0, 'avg_logprob': -0.22283269318056778, 'compression_ratio': 1.5595238095238095, 'no_speech_prob': 0.004462172277271748}, {'id': 302, 'seek': 293074, 'start': 2939.8199999999997, 'end': 2946.8199999999997, 'text': ' story, you should be able to find loops from such code. It could have been your IR or the', 'tokens': [50818, 1657, 11, 291, 820, 312, 1075, 281, 915, 16121, 490, 1270, 3089, 13, 467, 727, 362, 668, 428, 16486, 420, 264, 51168], 'temperature': 0.0, 'avg_logprob': -0.22283269318056778, 'compression_ratio': 1.5595238095238095, 'no_speech_prob': 0.004462172277271748}, {'id': 303, 'seek': 293074, 'start': 2947.3799999999997, 'end': 2954.3799999999997, 'text': ' input code itself. So, it is not stupid to ask the question where is the loop in this', 'tokens': [51196, 4846, 3089, 2564, 13, 407, 11, 309, 307, 406, 6631, 281, 1029, 264, 1168, 689, 307, 264, 6367, 294, 341, 51546], 'temperature': 0.0, 'avg_logprob': -0.22283269318056778, 'compression_ratio': 1.5595238095238095, 'no_speech_prob': 0.004462172277271748}, {'id': 304, 'seek': 295438, 'start': 2954.38, 'end': 2961.38, 'text': ' IR? Yes. Have you seen something in this IR? What are the instructions I have? This is', 'tokens': [50364, 16486, 30, 1079, 13, 3560, 291, 1612, 746, 294, 341, 16486, 30, 708, 366, 264, 9415, 286, 362, 30, 639, 307, 50714], 'temperature': 0.0, 'avg_logprob': -0.3019937939114041, 'compression_ratio': 1.373015873015873, 'no_speech_prob': 0.01403448823839426}, {'id': 305, 'seek': 295438, 'start': 2975.1400000000003, 'end': 2982.1400000000003, 'text': ' pretty much the code from there. This is a receive instruction. This says M is passed.', 'tokens': [51402, 1238, 709, 264, 3089, 490, 456, 13, 639, 307, 257, 4774, 10951, 13, 639, 1619, 376, 307, 4678, 13, 51752], 'temperature': 0.0, 'avg_logprob': -0.3019937939114041, 'compression_ratio': 1.373015873015873, 'no_speech_prob': 0.01403448823839426}, {'id': 306, 'seek': 298438, 'start': 2984.94, 'end': 2991.94, 'text': ' The parameter says by value. Why do I need the receive instruction? Any guesses? Why', 'tokens': [50392, 440, 13075, 1619, 538, 2158, 13, 1545, 360, 286, 643, 264, 4774, 10951, 30, 2639, 42703, 30, 1545, 50742], 'temperature': 0.0, 'avg_logprob': -0.5412091341885653, 'compression_ratio': 2.1951219512195124, 'no_speech_prob': 0.018528319895267487}, {'id': 307, 'seek': 298438, 'start': 2997.58, 'end': 3004.58, 'text': ' do I need the receive instruction? If I do not have the receive instruction, what would', 'tokens': [51024, 360, 286, 643, 264, 4774, 10951, 30, 759, 286, 360, 406, 362, 264, 4774, 10951, 11, 437, 576, 51374], 'temperature': 0.0, 'avg_logprob': -0.5412091341885653, 'compression_ratio': 2.1951219512195124, 'no_speech_prob': 0.018528319895267487}, {'id': 308, 'seek': 298438, 'start': 3004.9, 'end': 3005.9, 'text': ' happen?', 'tokens': [51390, 1051, 30, 51440], 'temperature': 0.0, 'avg_logprob': -0.5412091341885653, 'compression_ratio': 2.1951219512195124, 'no_speech_prob': 0.018528319895267487}, {'id': 309, 'seek': 298438, 'start': 3005.9, 'end': 3012.9, 'text': ' I am not sure. I am not sure. I am not sure. I am not sure. I am not sure. I am not sure.', 'tokens': [51440, 286, 669, 406, 988, 13, 286, 669, 406, 988, 13, 286, 669, 406, 988, 13, 286, 669, 406, 988, 13, 286, 669, 406, 988, 13, 286, 669, 406, 988, 13, 51790], 'temperature': 0.0, 'avg_logprob': -0.5412091341885653, 'compression_ratio': 2.1951219512195124, 'no_speech_prob': 0.018528319895267487}, {'id': 310, 'seek': 301438, 'start': 3014.38, 'end': 3021.38, 'text': ' No, receive instruction is only about the parameter. It is only about the parameter.', 'tokens': [50364, 883, 11, 4774, 10951, 307, 787, 466, 264, 13075, 13, 467, 307, 787, 466, 264, 13075, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.36035558527166195, 'compression_ratio': 1.6124031007751938, 'no_speech_prob': 0.010322813875973225}, {'id': 311, 'seek': 301438, 'start': 3021.38, 'end': 3028.38, 'text': ' No, the value is sent by the sender at runtime. Anyway, I do not have the value now. Why do', 'tokens': [50714, 883, 11, 264, 2158, 307, 2279, 538, 264, 2845, 260, 412, 34474, 13, 5684, 11, 286, 360, 406, 362, 264, 2158, 586, 13, 1545, 360, 51064], 'temperature': 0.0, 'avg_logprob': -0.36035558527166195, 'compression_ratio': 1.6124031007751938, 'no_speech_prob': 0.010322813875973225}, {'id': 312, 'seek': 301438, 'start': 3035.34, 'end': 3042.34, 'text': ' I need the receive instruction?', 'tokens': [51412, 286, 643, 264, 4774, 10951, 30, 51762], 'temperature': 0.0, 'avg_logprob': -0.36035558527166195, 'compression_ratio': 1.6124031007751938, 'no_speech_prob': 0.010322813875973225}, {'id': 313, 'seek': 304438, 'start': 3044.38, 'end': 3051.38, 'text': ' Good. So, what she is saying, I guess is, look, if I do not have a receive instruction', 'tokens': [50364, 2205, 13, 407, 11, 437, 750, 307, 1566, 11, 286, 2041, 307, 11, 574, 11, 498, 286, 360, 406, 362, 257, 4774, 10951, 50714], 'temperature': 0.0, 'avg_logprob': -0.29465308556189906, 'compression_ratio': 1.4350649350649352, 'no_speech_prob': 0.009121478535234928}, {'id': 314, 'seek': 304438, 'start': 3061.06, 'end': 3063.9, 'text': ' and I see it is being used, I may say it is an', 'tokens': [51198, 293, 286, 536, 309, 307, 885, 1143, 11, 286, 815, 584, 309, 307, 364, 51340], 'temperature': 0.0, 'avg_logprob': -0.29465308556189906, 'compression_ratio': 1.4350649350649352, 'no_speech_prob': 0.009121478535234928}, {'id': 315, 'seek': 304438, 'start': 3063.9, 'end': 3070.9, 'text': ' initialized variable. It is not initialized. Someone will send the value. Why do I have', 'tokens': [51340, 5883, 1602, 7006, 13, 467, 307, 406, 5883, 1602, 13, 8734, 486, 2845, 264, 2158, 13, 1545, 360, 286, 362, 51690], 'temperature': 0.0, 'avg_logprob': -0.29465308556189906, 'compression_ratio': 1.4350649350649352, 'no_speech_prob': 0.009121478535234928}, {'id': 316, 'seek': 307090, 'start': 3071.9, 'end': 3078.9, 'text': ' to say this is call by value? Because you need to know how you will generate code later', 'tokens': [50414, 281, 584, 341, 307, 818, 538, 2158, 30, 1436, 291, 643, 281, 458, 577, 291, 486, 8460, 3089, 1780, 50764], 'temperature': 0.0, 'avg_logprob': -0.3182135687934028, 'compression_ratio': 1.8832116788321167, 'no_speech_prob': 0.004464851692318916}, {'id': 317, 'seek': 307090, 'start': 3081.5, 'end': 3086.5, 'text': ' whether call by value or call by reference. All of you understand call by value, call', 'tokens': [50894, 1968, 818, 538, 2158, 420, 818, 538, 6408, 13, 1057, 295, 291, 1223, 818, 538, 2158, 11, 818, 51144], 'temperature': 0.0, 'avg_logprob': -0.3182135687934028, 'compression_ratio': 1.8832116788321167, 'no_speech_prob': 0.004464851692318916}, {'id': 318, 'seek': 307090, 'start': 3086.5, 'end': 3093.5, 'text': ' by reference? C supports call by value. C supports call by value. Java supports call', 'tokens': [51144, 538, 6408, 30, 383, 9346, 818, 538, 2158, 13, 383, 9346, 818, 538, 2158, 13, 10745, 9346, 818, 51494], 'temperature': 0.0, 'avg_logprob': -0.3182135687934028, 'compression_ratio': 1.8832116788321167, 'no_speech_prob': 0.004464851692318916}, {'id': 319, 'seek': 309350, 'start': 3093.5, 'end': 3100.5, 'text': ' by value. C plus plus supports call by value. C supports call by reference. Yes. Now, let', 'tokens': [50364, 538, 2158, 13, 383, 1804, 1804, 9346, 818, 538, 2158, 13, 383, 9346, 818, 538, 6408, 13, 1079, 13, 823, 11, 718, 50714], 'temperature': 0.0, 'avg_logprob': -0.2592973327636719, 'compression_ratio': 1.8888888888888888, 'no_speech_prob': 0.005909249652177095}, {'id': 320, 'seek': 309350, 'start': 3107.26, 'end': 3112.46, 'text': ' us have a raise of hand for this. C supports call by reference. Yes. How many of you say', 'tokens': [51052, 505, 362, 257, 5300, 295, 1011, 337, 341, 13, 383, 9346, 818, 538, 6408, 13, 1079, 13, 1012, 867, 295, 291, 584, 51312], 'temperature': 0.0, 'avg_logprob': -0.2592973327636719, 'compression_ratio': 1.8888888888888888, 'no_speech_prob': 0.005909249652177095}, {'id': 321, 'seek': 309350, 'start': 3112.46, 'end': 3119.46, 'text': ' no? How many of you say yes? C does not support call by reference. One hand, two hands, three', 'tokens': [51312, 572, 30, 1012, 867, 295, 291, 584, 2086, 30, 383, 775, 406, 1406, 818, 538, 6408, 13, 1485, 1011, 11, 732, 2377, 11, 1045, 51662], 'temperature': 0.0, 'avg_logprob': -0.2592973327636719, 'compression_ratio': 1.8888888888888888, 'no_speech_prob': 0.005909249652177095}, {'id': 322, 'seek': 312350, 'start': 3123.5, 'end': 3130.5, 'text': ' hands. It is a question MCQ with only two answers. Yes and no. C supports call by value.', 'tokens': [50364, 2377, 13, 467, 307, 257, 1168, 8797, 48, 365, 787, 732, 6338, 13, 1079, 293, 572, 13, 383, 9346, 818, 538, 2158, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.22434010225183823, 'compression_ratio': 1.6428571428571428, 'no_speech_prob': 0.002221016911789775}, {'id': 323, 'seek': 312350, 'start': 3136.1, 'end': 3143.1, 'text': ' C does not support call by value. C supports call by value. Good. C supports call by reference.', 'tokens': [50994, 383, 775, 406, 1406, 818, 538, 2158, 13, 383, 9346, 818, 538, 2158, 13, 2205, 13, 383, 9346, 818, 538, 6408, 13, 51344], 'temperature': 0.0, 'avg_logprob': -0.22434010225183823, 'compression_ratio': 1.6428571428571428, 'no_speech_prob': 0.002221016911789775}, {'id': 324, 'seek': 314310, 'start': 3144.1, 'end': 3151.1, 'text': ' C supports call by reference. One, two, three. Wow. C does not support call by reference.', 'tokens': [50414, 383, 9346, 818, 538, 6408, 13, 1485, 11, 732, 11, 1045, 13, 3153, 13, 383, 775, 406, 1406, 818, 538, 6408, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.2736097482534555, 'compression_ratio': 1.5084745762711864, 'no_speech_prob': 0.0009663771488703787}, {'id': 325, 'seek': 314310, 'start': 3155.98, 'end': 3162.98, 'text': ' One, two, three, four, five. What about the rest? I do not think in this voting the nota', 'tokens': [51008, 1485, 11, 732, 11, 1045, 11, 1451, 11, 1732, 13, 708, 466, 264, 1472, 30, 286, 360, 406, 519, 294, 341, 10419, 264, 36192, 51358], 'temperature': 0.0, 'avg_logprob': -0.2736097482534555, 'compression_ratio': 1.5084745762711864, 'no_speech_prob': 0.0009663771488703787}, {'id': 326, 'seek': 316298, 'start': 3163.38, 'end': 3170.38, 'text': ' is there. What do you guys think? How about Java? Java supports call by value. Java supports', 'tokens': [50384, 307, 456, 13, 708, 360, 291, 1074, 519, 30, 1012, 466, 10745, 30, 10745, 9346, 818, 538, 2158, 13, 10745, 9346, 50734], 'temperature': 0.0, 'avg_logprob': -0.30349896878612287, 'compression_ratio': 1.4833333333333334, 'no_speech_prob': 0.0024671517312526703}, {'id': 327, 'seek': 316298, 'start': 3175.58, 'end': 3182.58, 'text': ' call by reference. One, two, three, four, five, six, seven, eight. Java supports call', 'tokens': [50994, 818, 538, 6408, 13, 1485, 11, 732, 11, 1045, 11, 1451, 11, 1732, 11, 2309, 11, 3407, 11, 3180, 13, 10745, 9346, 818, 51344], 'temperature': 0.0, 'avg_logprob': -0.30349896878612287, 'compression_ratio': 1.4833333333333334, 'no_speech_prob': 0.0024671517312526703}, {'id': 328, 'seek': 319298, 'start': 3193.18, 'end': 3199.98, 'text': ' by reference. One, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve,', 'tokens': [50374, 538, 6408, 13, 1485, 11, 732, 11, 1045, 11, 1451, 11, 1732, 11, 2309, 11, 3407, 11, 3180, 11, 4949, 11, 2064, 11, 21090, 11, 14390, 11, 50714], 'temperature': 0.0, 'avg_logprob': -0.19158505891498767, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.003470424097031355}, {'id': 329, 'seek': 319298, 'start': 3199.98, 'end': 3206.98, 'text': ' thirteen, fourteen, fifteen, sixteen. Wow. Wrong. C does not support call by reference.', 'tokens': [50714, 31534, 11, 32253, 11, 18126, 11, 27847, 13, 3153, 13, 28150, 13, 383, 775, 406, 1406, 818, 538, 6408, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.19158505891498767, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.003470424097031355}, {'id': 330, 'seek': 319298, 'start': 3207.1, 'end': 3214.1, 'text': ' Java does not support call by reference. You pass a variable. Does the value of the variable', 'tokens': [51070, 10745, 775, 406, 1406, 818, 538, 6408, 13, 509, 1320, 257, 7006, 13, 4402, 264, 2158, 295, 264, 7006, 51420], 'temperature': 0.0, 'avg_logprob': -0.19158505891498767, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.003470424097031355}, {'id': 331, 'seek': 319298, 'start': 3215.42, 'end': 3222.42, 'text': ' change when you come back from the function? If yes, then this is call by reference. If', 'tokens': [51486, 1319, 562, 291, 808, 646, 490, 264, 2445, 30, 759, 2086, 11, 550, 341, 307, 818, 538, 6408, 13, 759, 51836], 'temperature': 0.0, 'avg_logprob': -0.19158505891498767, 'compression_ratio': 1.7673267326732673, 'no_speech_prob': 0.003470424097031355}, {'id': 332, 'seek': 322298, 'start': 3222.98, 'end': 3229.98, 'text': ' not, it is call by value. Java when you pass a, even if it is a variable a pointing to', 'tokens': [50364, 406, 11, 309, 307, 818, 538, 2158, 13, 10745, 562, 291, 1320, 257, 11, 754, 498, 309, 307, 257, 7006, 257, 12166, 281, 50714], 'temperature': 0.0, 'avg_logprob': -0.26691124404686084, 'compression_ratio': 1.5582822085889572, 'no_speech_prob': 0.0003005659382324666}, {'id': 333, 'seek': 322298, 'start': 3230.02, 'end': 3237.02, 'text': " an object, a's value does not change. The field therein may change. Same thing in C", 'tokens': [50716, 364, 2657, 11, 257, 311, 2158, 775, 406, 1319, 13, 440, 2519, 456, 259, 815, 1319, 13, 10635, 551, 294, 383, 51066], 'temperature': 0.0, 'avg_logprob': -0.26691124404686084, 'compression_ratio': 1.5582822085889572, 'no_speech_prob': 0.0003005659382324666}, {'id': 334, 'seek': 322298, 'start': 3239.14, 'end': 3246.14, 'text': ' when you pass the address of whatever you are passing is that changing? If I have a', 'tokens': [51172, 562, 291, 1320, 264, 2985, 295, 2035, 291, 366, 8437, 307, 300, 4473, 30, 759, 286, 362, 257, 51522], 'temperature': 0.0, 'avg_logprob': -0.26691124404686084, 'compression_ratio': 1.5582822085889572, 'no_speech_prob': 0.0003005659382324666}, {'id': 335, 'seek': 325298, 'start': 3252.98, 'end': 3259.98, 'text': ' int x equal to 3, int star p equal to address of x and now in a function foo I am passing', 'tokens': [50364, 560, 2031, 2681, 281, 805, 11, 560, 3543, 280, 2681, 281, 2985, 295, 2031, 293, 586, 294, 257, 2445, 726, 78, 286, 669, 8437, 50714], 'temperature': 0.0, 'avg_logprob': -0.40693300420587714, 'compression_ratio': 1.3173076923076923, 'no_speech_prob': 0.007555352058261633}, {'id': 336, 'seek': 325298, 'start': 3267.98, 'end': 3274.98, 'text': ' p. In foo let us say I am setting a variable x,', 'tokens': [51114, 280, 13, 682, 726, 78, 718, 505, 584, 286, 669, 3287, 257, 7006, 2031, 11, 51464], 'temperature': 0.0, 'avg_logprob': -0.40693300420587714, 'compression_ratio': 1.3173076923076923, 'no_speech_prob': 0.007555352058261633}, {'id': 337, 'seek': 328298, 'start': 3282.98, 'end': 3289.98, 'text': ' star y equal to 5. What will change when you come back? Value of x. Does the value', 'tokens': [50364, 3543, 288, 2681, 281, 1025, 13, 708, 486, 1319, 562, 291, 808, 646, 30, 39352, 295, 2031, 13, 4402, 264, 2158, 50714], 'temperature': 0.0, 'avg_logprob': -0.19766867394540824, 'compression_ratio': 1.3383458646616542, 'no_speech_prob': 0.0026282677426934242}, {'id': 338, 'seek': 328298, 'start': 3295.58, 'end': 3302.58, 'text': ' of p change? No. What did I pass? This value. C supports only call by value. A common statement', 'tokens': [50994, 295, 280, 1319, 30, 883, 13, 708, 630, 286, 1320, 30, 639, 2158, 13, 383, 9346, 787, 818, 538, 2158, 13, 316, 2689, 5629, 51344], 'temperature': 0.0, 'avg_logprob': -0.19766867394540824, 'compression_ratio': 1.3383458646616542, 'no_speech_prob': 0.0026282677426934242}, {'id': 339, 'seek': 330258, 'start': 3302.58, 'end': 3309.58, 'text': ' C simulates call by reference. Nah. There is nothing like that. You may feel that some', 'tokens': [50364, 383, 1034, 26192, 818, 538, 6408, 13, 13933, 13, 821, 307, 1825, 411, 300, 13, 509, 815, 841, 300, 512, 50714], 'temperature': 0.0, 'avg_logprob': -0.21656515333387588, 'compression_ratio': 1.3257575757575757, 'no_speech_prob': 0.0067624966613948345}, {'id': 340, 'seek': 330258, 'start': 3318.18, 'end': 3325.18, 'text': ' memory location you are able to modify. Yes, but C supports call by value. Java supports', 'tokens': [51144, 4675, 4914, 291, 366, 1075, 281, 16927, 13, 1079, 11, 457, 383, 9346, 818, 538, 2158, 13, 10745, 9346, 51494], 'temperature': 0.0, 'avg_logprob': -0.21656515333387588, 'compression_ratio': 1.3257575757575757, 'no_speech_prob': 0.0067624966613948345}, {'id': 341, 'seek': 332518, 'start': 3326.1, 'end': 3333.1, 'text': ' only call by value. C plus plus supports call by value and reference. Now, there is some', 'tokens': [50410, 787, 818, 538, 2158, 13, 383, 1804, 1804, 9346, 818, 538, 2158, 293, 6408, 13, 823, 11, 456, 307, 512, 50760], 'temperature': 0.0, 'avg_logprob': -0.3272811571756999, 'compression_ratio': 1.3214285714285714, 'no_speech_prob': 0.004739881958812475}, {'id': 342, 'seek': 332518, 'start': 3340.8999999999996, 'end': 3347.8999999999996, 'text': ' I see some faces with lot of agitation. Yes, question. Yes.', 'tokens': [51150, 286, 536, 512, 8475, 365, 688, 295, 623, 4614, 13, 1079, 11, 1168, 13, 1079, 13, 51500], 'temperature': 0.0, 'avg_logprob': -0.3272811571756999, 'compression_ratio': 1.3214285714285714, 'no_speech_prob': 0.004739881958812475}, {'id': 343, 'seek': 334790, 'start': 3347.9, 'end': 3354.9, 'text': ' Right. That book is mistake. Yes.', 'tokens': [50364, 1779, 13, 663, 1446, 307, 6146, 13, 1079, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.7294168472290039, 'compression_ratio': 0.8048780487804879, 'no_speech_prob': 0.13965067267417908}, {'id': 344, 'seek': 337790, 'start': 3378.9, 'end': 3385.9, 'text': ' If it says so. Right. See idea is very simple. You can what the book is trying to convey.', 'tokens': [50414, 759, 309, 1619, 370, 13, 1779, 13, 3008, 1558, 307, 588, 2199, 13, 509, 393, 437, 264, 1446, 307, 1382, 281, 16965, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.26642626904426736, 'compression_ratio': 1.6869158878504673, 'no_speech_prob': 0.10076257586479187}, {'id': 345, 'seek': 337790, 'start': 3386.9, 'end': 3393.02, 'text': ' Let us give the benefit of doubt to the book. What the book is trying to say is that look', 'tokens': [50814, 961, 505, 976, 264, 5121, 295, 6385, 281, 264, 1446, 13, 708, 264, 1446, 307, 1382, 281, 584, 307, 300, 574, 51120], 'temperature': 0.0, 'avg_logprob': -0.26642626904426736, 'compression_ratio': 1.6869158878504673, 'no_speech_prob': 0.10076257586479187}, {'id': 346, 'seek': 337790, 'start': 3393.02, 'end': 3400.02, 'text': ' if you want to change the variable, the value of a variable in a function, pass its address,', 'tokens': [51120, 498, 291, 528, 281, 1319, 264, 7006, 11, 264, 2158, 295, 257, 7006, 294, 257, 2445, 11, 1320, 1080, 2985, 11, 51470], 'temperature': 0.0, 'avg_logprob': -0.26642626904426736, 'compression_ratio': 1.6869158878504673, 'no_speech_prob': 0.10076257586479187}, {'id': 347, 'seek': 337790, 'start': 3400.3, 'end': 3407.3, 'text': ' then you come back the value that will be visible. They may say the book may be probably', 'tokens': [51484, 550, 291, 808, 646, 264, 2158, 300, 486, 312, 8974, 13, 814, 815, 584, 264, 1446, 815, 312, 1391, 51834], 'temperature': 0.0, 'avg_logprob': -0.26642626904426736, 'compression_ratio': 1.6869158878504673, 'no_speech_prob': 0.10076257586479187}, {'id': 348, 'seek': 340730, 'start': 3407.3, 'end': 3410.26, 'text': ' I see I do not know which book you are talking about. There may be some books which may say', 'tokens': [50364, 286, 536, 286, 360, 406, 458, 597, 1446, 291, 366, 1417, 466, 13, 821, 815, 312, 512, 3642, 597, 815, 584, 50512], 'temperature': 0.0, 'avg_logprob': -0.25798214806450737, 'compression_ratio': 1.6575342465753424, 'no_speech_prob': 0.000666489009745419}, {'id': 349, 'seek': 340730, 'start': 3410.26, 'end': 3417.26, 'text': ' that. That book may be saying that this looks like call by reference. Since C does not support', 'tokens': [50512, 300, 13, 663, 1446, 815, 312, 1566, 300, 341, 1542, 411, 818, 538, 6408, 13, 4162, 383, 775, 406, 1406, 50862], 'temperature': 0.0, 'avg_logprob': -0.25798214806450737, 'compression_ratio': 1.6575342465753424, 'no_speech_prob': 0.000666489009745419}, {'id': 350, 'seek': 340730, 'start': 3419.9, 'end': 3426.9, 'text': ' call by reference, pass the address, change in the function via the star operator, come', 'tokens': [50994, 818, 538, 6408, 11, 1320, 264, 2985, 11, 1319, 294, 264, 2445, 5766, 264, 3543, 12973, 11, 808, 51344], 'temperature': 0.0, 'avg_logprob': -0.25798214806450737, 'compression_ratio': 1.6575342465753424, 'no_speech_prob': 0.000666489009745419}, {'id': 351, 'seek': 340730, 'start': 3428.0600000000004, 'end': 3434.46, 'text': ' back. Right. Let us not pass judgments on the book. But if any book says that C supports', 'tokens': [51402, 646, 13, 1779, 13, 961, 505, 406, 1320, 40337, 322, 264, 1446, 13, 583, 498, 604, 1446, 1619, 300, 383, 9346, 51722], 'temperature': 0.0, 'avg_logprob': -0.25798214806450737, 'compression_ratio': 1.6575342465753424, 'no_speech_prob': 0.000666489009745419}, {'id': 352, 'seek': 343446, 'start': 3434.54, 'end': 3441.54, 'text': ' call by reference, that is clearly a mistake. Right.', 'tokens': [50368, 818, 538, 6408, 11, 300, 307, 4448, 257, 6146, 13, 1779, 13, 50718], 'temperature': 0.0, 'avg_logprob': -0.3059390141413762, 'compression_ratio': 1.5374149659863945, 'no_speech_prob': 0.03728337585926056}, {'id': 353, 'seek': 343446, 'start': 3441.54, 'end': 3448.54, 'text': ' C plus plus has this additional syntax. So, in C plus plus, I could do like this. In C', 'tokens': [50718, 383, 1804, 1804, 575, 341, 4497, 28431, 13, 407, 11, 294, 383, 1804, 1804, 11, 286, 727, 360, 411, 341, 13, 682, 383, 51068], 'temperature': 0.0, 'avg_logprob': -0.3059390141413762, 'compression_ratio': 1.5374149659863945, 'no_speech_prob': 0.03728337585926056}, {'id': 354, 'seek': 343446, 'start': 3453.98, 'end': 3460.98, 'text': ' plus plus, I can have function foo with int and y. It has some syntax like this. Where', 'tokens': [51340, 1804, 1804, 11, 286, 393, 362, 2445, 726, 78, 365, 560, 293, 288, 13, 467, 575, 512, 28431, 411, 341, 13, 2305, 51690], 'temperature': 0.0, 'avg_logprob': -0.3059390141413762, 'compression_ratio': 1.5374149659863945, 'no_speech_prob': 0.03728337585926056}, {'id': 355, 'seek': 346098, 'start': 3461.78, 'end': 3468.78, 'text': ' now if you pass x, is there a module on code generation as well? Who? Govinda is doing', 'tokens': [50404, 586, 498, 291, 1320, 2031, 11, 307, 456, 257, 10088, 322, 3089, 5125, 382, 731, 30, 2102, 30, 1037, 85, 6837, 307, 884, 50754], 'temperature': 0.0, 'avg_logprob': -0.36752416649643255, 'compression_ratio': 1.3828125, 'no_speech_prob': 0.008841782808303833}, {'id': 356, 'seek': 346098, 'start': 3477.82, 'end': 3484.82, 'text': ' low level optimization. Try to do self reading on how the code can be, how the code can be', 'tokens': [51206, 2295, 1496, 19618, 13, 6526, 281, 360, 2698, 3760, 322, 577, 264, 3089, 393, 312, 11, 577, 264, 3089, 393, 312, 51556], 'temperature': 0.0, 'avg_logprob': -0.36752416649643255, 'compression_ratio': 1.3828125, 'no_speech_prob': 0.008841782808303833}, {'id': 357, 'seek': 349098, 'start': 3490.98, 'end': 3496.42, 'text': ' code generated for call by value and call by reference. I wanted to bring out that this', 'tokens': [50364, 3089, 10833, 337, 818, 538, 2158, 293, 818, 538, 6408, 13, 286, 1415, 281, 1565, 484, 300, 341, 50636], 'temperature': 0.0, 'avg_logprob': -0.21408794142983176, 'compression_ratio': 1.9417989417989419, 'no_speech_prob': 0.011634905822575092}, {'id': 358, 'seek': 349098, 'start': 3496.42, 'end': 3502.62, 'text': ' is an important point to note that the call by value, this information that we say that', 'tokens': [50636, 307, 364, 1021, 935, 281, 3637, 300, 264, 818, 538, 2158, 11, 341, 1589, 300, 321, 584, 300, 50946], 'temperature': 0.0, 'avg_logprob': -0.21408794142983176, 'compression_ratio': 1.9417989417989419, 'no_speech_prob': 0.011634905822575092}, {'id': 359, 'seek': 349098, 'start': 3502.62, 'end': 3509.62, 'text': ' is kind of carried over to the IR is an important factor to remember. That this is a, this argument', 'tokens': [50946, 307, 733, 295, 9094, 670, 281, 264, 16486, 307, 364, 1021, 5952, 281, 1604, 13, 663, 341, 307, 257, 11, 341, 6770, 51296], 'temperature': 0.0, 'avg_logprob': -0.21408794142983176, 'compression_ratio': 1.9417989417989419, 'no_speech_prob': 0.011634905822575092}, {'id': 360, 'seek': 349098, 'start': 3511.94, 'end': 3518.22, 'text': ' is call by value, pass by value, this is pass by reference because this will have an impact', 'tokens': [51412, 307, 818, 538, 2158, 11, 1320, 538, 2158, 11, 341, 307, 1320, 538, 6408, 570, 341, 486, 362, 364, 2712, 51726], 'temperature': 0.0, 'avg_logprob': -0.21408794142983176, 'compression_ratio': 1.9417989417989419, 'no_speech_prob': 0.011634905822575092}, {'id': 361, 'seek': 351822, 'start': 3518.22, 'end': 3525.22, 'text': ' on how we generate the code, how we emit the code.', 'tokens': [50364, 322, 577, 321, 8460, 264, 3089, 11, 577, 321, 32084, 264, 3089, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.31106673346625435, 'compression_ratio': 1.4509803921568627, 'no_speech_prob': 0.0078116171061992645}, {'id': 362, 'seek': 351822, 'start': 3527.22, 'end': 3534.22, 'text': ' When you, C arrays are again interesting. Do you know that C array, do you know how', 'tokens': [50814, 1133, 291, 11, 383, 41011, 366, 797, 1880, 13, 1144, 291, 458, 300, 383, 10225, 11, 360, 291, 458, 577, 51164], 'temperature': 0.0, 'avg_logprob': -0.31106673346625435, 'compression_ratio': 1.4509803921568627, 'no_speech_prob': 0.0078116171061992645}, {'id': 363, 'seek': 351822, 'start': 3535.4599999999996, 'end': 3542.4599999999996, 'text': ' is it allocated? Read it anywhere? If I, give me a minute. Let me erase the board here.', 'tokens': [51226, 307, 309, 29772, 30, 17604, 309, 4992, 30, 759, 286, 11, 976, 385, 257, 3456, 13, 961, 385, 23525, 264, 3150, 510, 13, 51576], 'temperature': 0.0, 'avg_logprob': -0.31106673346625435, 'compression_ratio': 1.4509803921568627, 'no_speech_prob': 0.0078116171061992645}, {'id': 364, 'seek': 354822, 'start': 3548.22, 'end': 3555.22, 'text': ' So, you should, probably you are aware that C arrays, when you declare a variable A as', 'tokens': [50364, 407, 11, 291, 820, 11, 1391, 291, 366, 3650, 300, 383, 41011, 11, 562, 291, 19710, 257, 7006, 316, 382, 50714], 'temperature': 0.0, 'avg_logprob': -0.2975864627144553, 'compression_ratio': 1.4508196721311475, 'no_speech_prob': 0.0019524311646819115}, {'id': 365, 'seek': 354822, 'start': 3561.1, 'end': 3568.1, 'text': ' an array, that variable has no, normally every variable has some memory except arrays. The', 'tokens': [51008, 364, 10225, 11, 300, 7006, 575, 572, 11, 5646, 633, 7006, 575, 512, 4675, 3993, 41011, 13, 440, 51358], 'temperature': 0.0, 'avg_logprob': -0.2975864627144553, 'compression_ratio': 1.4508196721311475, 'no_speech_prob': 0.0019524311646819115}, {'id': 366, 'seek': 356810, 'start': 3568.1, 'end': 3575.1, 'text': ' array variable itself has no special memory. So, when you write int A, this is as if you', 'tokens': [50364, 10225, 7006, 2564, 575, 572, 2121, 4675, 13, 407, 11, 562, 291, 2464, 560, 316, 11, 341, 307, 382, 498, 291, 50714], 'temperature': 0.0, 'avg_logprob': -0.20010940396055885, 'compression_ratio': 1.3968253968253967, 'no_speech_prob': 0.0006874983664602041}, {'id': 367, 'seek': 356810, 'start': 3585.66, 'end': 3592.66, 'text': ' are saying, give me a box whose name is A. This box is in the memory and when you write', 'tokens': [51242, 366, 1566, 11, 976, 385, 257, 2424, 6104, 1315, 307, 316, 13, 639, 2424, 307, 294, 264, 4675, 293, 562, 291, 2464, 51592], 'temperature': 0.0, 'avg_logprob': -0.20010940396055885, 'compression_ratio': 1.3968253968253967, 'no_speech_prob': 0.0006874983664602041}, {'id': 368, 'seek': 359266, 'start': 3592.7799999999997, 'end': 3599.7799999999997, 'text': ' something to write A equal to 3, you are writing in this box. If you write int B 10, what you', 'tokens': [50370, 746, 281, 2464, 316, 2681, 281, 805, 11, 291, 366, 3579, 294, 341, 2424, 13, 759, 291, 2464, 560, 363, 1266, 11, 437, 291, 50720], 'temperature': 0.0, 'avg_logprob': -0.26611379782358807, 'compression_ratio': 1.360655737704918, 'no_speech_prob': 0.0006659922073595226}, {'id': 369, 'seek': 359266, 'start': 3602.22, 'end': 3609.22, 'text': ' are asking is 10 elements, 10 boxes, 10 consecutive boxes. No box for B.', 'tokens': [50842, 366, 3365, 307, 1266, 4959, 11, 1266, 9002, 11, 1266, 30497, 9002, 13, 883, 2424, 337, 363, 13, 51192], 'temperature': 0.0, 'avg_logprob': -0.26611379782358807, 'compression_ratio': 1.360655737704918, 'no_speech_prob': 0.0006659922073595226}, {'id': 370, 'seek': 360922, 'start': 3609.22, 'end': 3616.22, 'text': ' So, what is B pointing to? Let me repeat my statement. What do you mean by B is pointing', 'tokens': [50364, 407, 11, 437, 307, 363, 12166, 281, 30, 961, 385, 7149, 452, 5629, 13, 708, 360, 291, 914, 538, 363, 307, 12166, 50714], 'temperature': 0.0, 'avg_logprob': -0.1918959617614746, 'compression_ratio': 1.0731707317073171, 'no_speech_prob': 0.005905624944716692}, {'id': 371, 'seek': 361622, 'start': 3616.22, 'end': 3623.22, 'text': ' to it? What, for something to point to, see if I write int star P, what does it mean?', 'tokens': [50364, 281, 309, 30, 708, 11, 337, 746, 281, 935, 281, 11, 536, 498, 286, 2464, 560, 3543, 430, 11, 437, 775, 309, 914, 30, 50714], 'temperature': 0.0, 'avg_logprob': -0.5881049191510236, 'compression_ratio': 1.9101123595505618, 'no_speech_prob': 0.015396294184029102}, {'id': 372, 'seek': 361622, 'start': 3629.74, 'end': 3636.74, 'text': ' It means, if I write int star P, what does it mean? It means, if I write int star P,', 'tokens': [51040, 467, 1355, 11, 498, 286, 2464, 560, 3543, 430, 11, 437, 775, 309, 914, 30, 467, 1355, 11, 498, 286, 2464, 560, 3543, 430, 11, 51390], 'temperature': 0.0, 'avg_logprob': -0.5881049191510236, 'compression_ratio': 1.9101123595505618, 'no_speech_prob': 0.015396294184029102}, {'id': 373, 'seek': 364622, 'start': 3646.22, 'end': 3653.22, 'text': ' what does it mean? P is a box. If you write P equal to ampersand x, this address of x,', 'tokens': [50364, 437, 775, 309, 914, 30, 430, 307, 257, 2424, 13, 759, 291, 2464, 430, 2681, 281, 18648, 433, 474, 2031, 11, 341, 2985, 295, 2031, 11, 50714], 'temperature': 0.0, 'avg_logprob': -0.2441769352665654, 'compression_ratio': 1.6049382716049383, 'no_speech_prob': 0.004314206074923277}, {'id': 374, 'seek': 364622, 'start': 3655.2999999999997, 'end': 3661.5, 'text': ' let us say this, sorry, address, I will write here, so that it looks continuous. P equal', 'tokens': [50818, 718, 505, 584, 341, 11, 2597, 11, 2985, 11, 286, 486, 2464, 510, 11, 370, 300, 309, 1542, 10957, 13, 430, 2681, 51128], 'temperature': 0.0, 'avg_logprob': -0.2441769352665654, 'compression_ratio': 1.6049382716049383, 'no_speech_prob': 0.004314206074923277}, {'id': 375, 'seek': 364622, 'start': 3661.5, 'end': 3668.5, 'text': ' to address of A. Whatever is this address, that is in the box of P. So, P has a box.', 'tokens': [51128, 281, 2985, 295, 316, 13, 8541, 307, 341, 2985, 11, 300, 307, 294, 264, 2424, 295, 430, 13, 407, 11, 430, 575, 257, 2424, 13, 51478], 'temperature': 0.0, 'avg_logprob': -0.2441769352665654, 'compression_ratio': 1.6049382716049383, 'no_speech_prob': 0.004314206074923277}, {'id': 376, 'seek': 366850, 'start': 3669.5, 'end': 3676.5, 'text': ' Now, you may say P points to A. B is not pointing to anything because B is not a box. Have you', 'tokens': [50414, 823, 11, 291, 815, 584, 430, 2793, 281, 316, 13, 363, 307, 406, 12166, 281, 1340, 570, 363, 307, 406, 257, 2424, 13, 3560, 291, 50764], 'temperature': 0.0, 'avg_logprob': -0.23477320127849338, 'compression_ratio': 1.7106918238993711, 'no_speech_prob': 0.0010961152147501707}, {'id': 377, 'seek': 366850, 'start': 3682.02, 'end': 3689.02, 'text': ' printed the address of B in array? What does it mean by address? Yeah, so if you write', 'tokens': [51040, 13567, 264, 2985, 295, 363, 294, 10225, 30, 708, 775, 309, 914, 538, 2985, 30, 865, 11, 370, 498, 291, 2464, 51390], 'temperature': 0.0, 'avg_logprob': -0.23477320127849338, 'compression_ratio': 1.7106918238993711, 'no_speech_prob': 0.0010961152147501707}, {'id': 378, 'seek': 366850, 'start': 3689.06, 'end': 3696.06, 'text': ' B or address of B or address of B 0, same thing. What does it mean? B is not a box itself.', 'tokens': [51392, 363, 420, 2985, 295, 363, 420, 2985, 295, 363, 1958, 11, 912, 551, 13, 708, 775, 309, 914, 30, 363, 307, 406, 257, 2424, 2564, 13, 51742], 'temperature': 0.0, 'avg_logprob': -0.23477320127849338, 'compression_ratio': 1.7106918238993711, 'no_speech_prob': 0.0010961152147501707}, {'id': 379, 'seek': 369850, 'start': 3698.82, 'end': 3705.82, 'text': ' B is just a placeholder that you can use as a programmer. See, during the code generation,', 'tokens': [50380, 363, 307, 445, 257, 1081, 20480, 300, 291, 393, 764, 382, 257, 32116, 13, 3008, 11, 1830, 264, 3089, 5125, 11, 50730], 'temperature': 0.0, 'avg_logprob': -0.18909944806780135, 'compression_ratio': 1.5168539325842696, 'no_speech_prob': 0.0010321204317733645}, {'id': 380, 'seek': 369850, 'start': 3712.02, 'end': 3719.02, 'text': ' I have, wherever there is B, I will replace it. I have allocated some memory. I will just', 'tokens': [51040, 286, 362, 11, 8660, 456, 307, 363, 11, 286, 486, 7406, 309, 13, 286, 362, 29772, 512, 4675, 13, 286, 486, 445, 51390], 'temperature': 0.0, 'avg_logprob': -0.18909944806780135, 'compression_ratio': 1.5168539325842696, 'no_speech_prob': 0.0010321204317733645}, {'id': 381, 'seek': 369850, 'start': 3719.26, 'end': 3726.26, 'text': ' give that address there. So, it is beautiful that C has created this illusion of an array', 'tokens': [51402, 976, 300, 2985, 456, 13, 407, 11, 309, 307, 2238, 300, 383, 575, 2942, 341, 18854, 295, 364, 10225, 51752], 'temperature': 0.0, 'avg_logprob': -0.18909944806780135, 'compression_ratio': 1.5168539325842696, 'no_speech_prob': 0.0010321204317733645}, {'id': 382, 'seek': 372626, 'start': 3726.6600000000003, 'end': 3733.6600000000003, 'text': ' as a variable which does not exist. Java, the array variables are actually variables.', 'tokens': [50384, 382, 257, 7006, 597, 775, 406, 2514, 13, 10745, 11, 264, 10225, 9102, 366, 767, 9102, 13, 50734], 'temperature': 0.0, 'avg_logprob': -0.226783553759257, 'compression_ratio': 1.7777777777777777, 'no_speech_prob': 0.000801641377620399}, {'id': 383, 'seek': 372626, 'start': 3733.6600000000003, 'end': 3740.6600000000003, 'text': ' They are objects. Here, this B is not an object itself. It is just a pure, just a name. That', 'tokens': [50734, 814, 366, 6565, 13, 1692, 11, 341, 363, 307, 406, 364, 2657, 2564, 13, 467, 307, 445, 257, 6075, 11, 445, 257, 1315, 13, 663, 51084], 'temperature': 0.0, 'avg_logprob': -0.226783553759257, 'compression_ratio': 1.7777777777777777, 'no_speech_prob': 0.000801641377620399}, {'id': 384, 'seek': 372626, 'start': 3742.38, 'end': 3748.38, 'text': ' name does not actually exist, I mean, point to any, I mean, it is not a memory location.', 'tokens': [51170, 1315, 775, 406, 767, 2514, 11, 286, 914, 11, 935, 281, 604, 11, 286, 914, 11, 309, 307, 406, 257, 4675, 4914, 13, 51470], 'temperature': 0.0, 'avg_logprob': -0.226783553759257, 'compression_ratio': 1.7777777777777777, 'no_speech_prob': 0.000801641377620399}, {'id': 385, 'seek': 372626, 'start': 3748.38, 'end': 3755.38, 'text': ' There is no memory box. I like the idea of boxes for variables. It is very, you will', 'tokens': [51470, 821, 307, 572, 4675, 2424, 13, 286, 411, 264, 1558, 295, 9002, 337, 9102, 13, 467, 307, 588, 11, 291, 486, 51820], 'temperature': 0.0, 'avg_logprob': -0.226783553759257, 'compression_ratio': 1.7777777777777777, 'no_speech_prob': 0.000801641377620399}, {'id': 386, 'seek': 375538, 'start': 3755.38, 'end': 3762.38, 'text': ' see that it gives you so much clarity. Anyway. No. If you pass B, when you come back, does', 'tokens': [50364, 536, 300, 309, 2709, 291, 370, 709, 16992, 13, 5684, 13, 883, 13, 759, 291, 1320, 363, 11, 562, 291, 808, 646, 11, 775, 50714], 'temperature': 0.0, 'avg_logprob': -0.23039136109528718, 'compression_ratio': 1.393939393939394, 'no_speech_prob': 0.0033757109194993973}, {'id': 387, 'seek': 375538, 'start': 3771.82, 'end': 3778.82, 'text': ' B change? Does B change? What are you passing? B. Does B change? It is a very simple concept,', 'tokens': [51186, 363, 1319, 30, 4402, 363, 1319, 30, 708, 366, 291, 8437, 30, 363, 13, 4402, 363, 1319, 30, 467, 307, 257, 588, 2199, 3410, 11, 51536], 'temperature': 0.0, 'avg_logprob': -0.23039136109528718, 'compression_ratio': 1.393939393939394, 'no_speech_prob': 0.0033757109194993973}, {'id': 388, 'seek': 378538, 'start': 3785.5, 'end': 3791.5, 'text': ' I mean, I know what you are saying. What you are saying is you pass B and changes of B0,', 'tokens': [50370, 286, 914, 11, 286, 458, 437, 291, 366, 1566, 13, 708, 291, 366, 1566, 307, 291, 1320, 363, 293, 2962, 295, 363, 15, 11, 50670], 'temperature': 0.0, 'avg_logprob': -0.2879323164621989, 'compression_ratio': 1.4713375796178343, 'no_speech_prob': 0.0021149837411940098}, {'id': 389, 'seek': 378538, 'start': 3791.5, 'end': 3798.5, 'text': ' B1, B2 will reflect. But if you pass B0, will B0 change?', 'tokens': [50670, 363, 16, 11, 363, 17, 486, 5031, 13, 583, 498, 291, 1320, 363, 15, 11, 486, 363, 15, 1319, 30, 51020], 'temperature': 0.0, 'avg_logprob': -0.2879323164621989, 'compression_ratio': 1.4713375796178343, 'no_speech_prob': 0.0021149837411940098}, {'id': 390, 'seek': 378538, 'start': 3800.5, 'end': 3807.5, 'text': ' So, any further questions on this pass by value, pass by reference? It is very, there', 'tokens': [51120, 407, 11, 604, 3052, 1651, 322, 341, 1320, 538, 2158, 11, 1320, 538, 6408, 30, 467, 307, 588, 11, 456, 51470], 'temperature': 0.0, 'avg_logprob': -0.2879323164621989, 'compression_ratio': 1.4713375796178343, 'no_speech_prob': 0.0021149837411940098}, {'id': 391, 'seek': 380750, 'start': 3808.5, 'end': 3815.5, 'text': ' are all very common misconceptions. So, do not feel shy, do not feel awkward, but I think', 'tokens': [50414, 366, 439, 588, 2689, 50012, 13, 407, 11, 360, 406, 841, 12685, 11, 360, 406, 841, 11411, 11, 457, 286, 519, 50764], 'temperature': 0.0, 'avg_logprob': -0.1807554244995117, 'compression_ratio': 1.5027932960893855, 'no_speech_prob': 0.00475440314039588}, {'id': 392, 'seek': 380750, 'start': 3816.46, 'end': 3823.46, 'text': ' it is important to have this clarity. So, pass by value, this annotation here which', 'tokens': [50812, 309, 307, 1021, 281, 362, 341, 16992, 13, 407, 11, 1320, 538, 2158, 11, 341, 48654, 510, 597, 51162], 'temperature': 0.0, 'avg_logprob': -0.1807554244995117, 'compression_ratio': 1.5027932960893855, 'no_speech_prob': 0.00475440314039588}, {'id': 393, 'seek': 380750, 'start': 3829.9, 'end': 3836.9, 'text': ' is present in the IR is there for a reason because you will accordingly do the code generation.', 'tokens': [51484, 307, 1974, 294, 264, 16486, 307, 456, 337, 257, 1778, 570, 291, 486, 19717, 360, 264, 3089, 5125, 13, 51834], 'temperature': 0.0, 'avg_logprob': -0.1807554244995117, 'compression_ratio': 1.5027932960893855, 'no_speech_prob': 0.00475440314039588}, {'id': 394, 'seek': 383750, 'start': 3837.5, 'end': 3844.5, 'text': ' Any further questions? No. What will do? We will take a quick break. I guess how much', 'tokens': [50364, 2639, 3052, 1651, 30, 883, 13, 708, 486, 360, 30, 492, 486, 747, 257, 1702, 1821, 13, 286, 2041, 577, 709, 50714], 'temperature': 0.0, 'avg_logprob': -0.2980391274035816, 'compression_ratio': 1.502857142857143, 'no_speech_prob': 0.0006562130292877555}, {'id': 395, 'seek': 383750, 'start': 3845.18, 'end': 3852.18, 'text': ' time I do not know. For 15, you said you wanted a break, right? We will do a quick break and', 'tokens': [50748, 565, 286, 360, 406, 458, 13, 1171, 2119, 11, 291, 848, 291, 1415, 257, 1821, 11, 558, 30, 492, 486, 360, 257, 1702, 1821, 293, 51098], 'temperature': 0.0, 'avg_logprob': -0.2980391274035816, 'compression_ratio': 1.502857142857143, 'no_speech_prob': 0.0006562130292877555}, {'id': 396, 'seek': 383750, 'start': 3854.46, 'end': 3861.46, 'text': ' and then we will see given code like this because the input code or because it could', 'tokens': [51212, 293, 550, 321, 486, 536, 2212, 3089, 411, 341, 570, 264, 4846, 3089, 420, 570, 309, 727, 51562], 'temperature': 0.0, 'avg_logprob': -0.2980391274035816, 'compression_ratio': 1.502857142857143, 'no_speech_prob': 0.0006562130292877555}, {'id': 397, 'seek': 386146, 'start': 3861.46, 'end': 3868.46, 'text': ' be the IR, how do we infer the control structure? Control structure as in I want to know, remember', 'tokens': [50364, 312, 264, 16486, 11, 577, 360, 321, 13596, 264, 1969, 3877, 30, 12912, 3877, 382, 294, 286, 528, 281, 458, 11, 1604, 50714], 'temperature': 0.0, 'avg_logprob': -0.23433245864568972, 'compression_ratio': 1.853658536585366, 'no_speech_prob': 0.0010463671060279012}, {'id': 398, 'seek': 386146, 'start': 3868.46, 'end': 3873.7400000000002, 'text': ' when we did loop invariant code motion, there is a loop somewhere there. I want to know', 'tokens': [50714, 562, 321, 630, 6367, 33270, 394, 3089, 5394, 11, 456, 307, 257, 6367, 4079, 456, 13, 286, 528, 281, 458, 50978], 'temperature': 0.0, 'avg_logprob': -0.23433245864568972, 'compression_ratio': 1.853658536585366, 'no_speech_prob': 0.0010463671060279012}, {'id': 399, 'seek': 386146, 'start': 3873.7400000000002, 'end': 3880.7400000000002, 'text': ' hey where are my if then else blocks? Is it an if then else block or only an if then block?', 'tokens': [50978, 4177, 689, 366, 452, 498, 550, 1646, 8474, 30, 1119, 309, 364, 498, 550, 1646, 3461, 420, 787, 364, 498, 550, 3461, 30, 51328], 'temperature': 0.0, 'avg_logprob': -0.23433245864568972, 'compression_ratio': 1.853658536585366, 'no_speech_prob': 0.0010463671060279012}, {'id': 400, 'seek': 386146, 'start': 3880.7400000000002, 'end': 3886.1, 'text': ' If there is a loop, what is the loop body? What is the loop header? All such things we', 'tokens': [51328, 759, 456, 307, 257, 6367, 11, 437, 307, 264, 6367, 1772, 30, 708, 307, 264, 6367, 23117, 30, 1057, 1270, 721, 321, 51596], 'temperature': 0.0, 'avg_logprob': -0.23433245864568972, 'compression_ratio': 1.853658536585366, 'no_speech_prob': 0.0010463671060279012}, {'id': 401, 'seek': 386146, 'start': 3886.1, 'end': 3886.86, 'text': ' want to infer.', 'tokens': [51596, 528, 281, 13596, 13, 51634], 'temperature': 0.0, 'avg_logprob': -0.23433245864568972, 'compression_ratio': 1.853658536585366, 'no_speech_prob': 0.0010463671060279012}]