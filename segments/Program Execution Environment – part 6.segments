[{'id': 0, 'seek': 0, 'start': 0.0, 'end': 10.56, 'text': ' So, everyone got the L1 cache how it works and so on.', 'tokens': [50364, 407, 11, 1518, 658, 264, 441, 16, 19459, 577, 309, 1985, 293, 370, 322, 13, 50892], 'temperature': 0.0, 'avg_logprob': -0.2902166446050008, 'compression_ratio': 1.2727272727272727, 'no_speech_prob': 0.03304142877459526}, {'id': 1, 'seek': 0, 'start': 10.56, 'end': 23.36, 'text': ' Next quiz, so we saw yes.', 'tokens': [50892, 3087, 15450, 11, 370, 321, 1866, 2086, 13, 51532], 'temperature': 0.0, 'avg_logprob': -0.2902166446050008, 'compression_ratio': 1.2727272727272727, 'no_speech_prob': 0.03304142877459526}, {'id': 2, 'seek': 0, 'start': 23.36, 'end': 29.68, 'text': ' Typically whatever happens I mean it depends on how the layout of the processor is done.', 'tokens': [51532, 23129, 2035, 2314, 286, 914, 309, 5946, 322, 577, 264, 13333, 295, 264, 15321, 307, 1096, 13, 51848], 'temperature': 0.0, 'avg_logprob': -0.2902166446050008, 'compression_ratio': 1.2727272727272727, 'no_speech_prob': 0.03304142877459526}, {'id': 3, 'seek': 2968, 'start': 29.68, 'end': 36.84, 'text': ' So, if your cache is present along with the and the MMU is outside then you will have', 'tokens': [50364, 407, 11, 498, 428, 19459, 307, 1974, 2051, 365, 264, 293, 264, 34191, 52, 307, 2380, 550, 291, 486, 362, 50722], 'temperature': 0.0, 'avg_logprob': -0.19100526321765987, 'compression_ratio': 1.7677725118483412, 'no_speech_prob': 0.020160475745797157}, {'id': 4, 'seek': 2968, 'start': 36.84, 'end': 38.56, 'text': ' those as virtually indexed.', 'tokens': [50722, 729, 382, 14103, 8186, 292, 13, 50808], 'temperature': 0.0, 'avg_logprob': -0.19100526321765987, 'compression_ratio': 1.7677725118483412, 'no_speech_prob': 0.020160475745797157}, {'id': 5, 'seek': 2968, 'start': 38.56, 'end': 45.24, 'text': ' So, whichever cache come on the layout before the MMU comes into picture they will typically', 'tokens': [50808, 407, 11, 24123, 19459, 808, 322, 264, 13333, 949, 264, 34191, 52, 1487, 666, 3036, 436, 486, 5850, 51142], 'temperature': 0.0, 'avg_logprob': -0.19100526321765987, 'compression_ratio': 1.7677725118483412, 'no_speech_prob': 0.020160475745797157}, {'id': 6, 'seek': 2968, 'start': 45.24, 'end': 51.16, 'text': ' be virtually indexed anything which comes after that there is not much benefit of having', 'tokens': [51142, 312, 14103, 8186, 292, 1340, 597, 1487, 934, 300, 456, 307, 406, 709, 5121, 295, 1419, 51438], 'temperature': 0.0, 'avg_logprob': -0.19100526321765987, 'compression_ratio': 1.7677725118483412, 'no_speech_prob': 0.020160475745797157}, {'id': 7, 'seek': 2968, 'start': 51.16, 'end': 54.56, 'text': ' them as virtually indexed because you would have anyway done the translation.', 'tokens': [51438, 552, 382, 14103, 8186, 292, 570, 291, 576, 362, 4033, 1096, 264, 12853, 13, 51608], 'temperature': 0.0, 'avg_logprob': -0.19100526321765987, 'compression_ratio': 1.7677725118483412, 'no_speech_prob': 0.020160475745797157}, {'id': 8, 'seek': 5456, 'start': 54.56, 'end': 67.88, 'text': ' I do not know because it could vary from processors to processors like in the GPUs L2 is still', 'tokens': [50364, 286, 360, 406, 458, 570, 309, 727, 10559, 490, 27751, 281, 27751, 411, 294, 264, 18407, 82, 441, 17, 307, 920, 51030], 'temperature': 0.0, 'avg_logprob': -0.18146305319703657, 'compression_ratio': 1.5518867924528301, 'no_speech_prob': 0.01361183449625969}, {'id': 9, 'seek': 5456, 'start': 67.88, 'end': 71.4, 'text': ' outside the this thing and MMU is also outside.', 'tokens': [51030, 2380, 264, 341, 551, 293, 34191, 52, 307, 611, 2380, 13, 51206], 'temperature': 0.0, 'avg_logprob': -0.18146305319703657, 'compression_ratio': 1.5518867924528301, 'no_speech_prob': 0.01361183449625969}, {'id': 10, 'seek': 5456, 'start': 71.4, 'end': 77.4, 'text': ' So, it is more of a tradeoff between what processors design wants to do, but conceptually', 'tokens': [51206, 407, 11, 309, 307, 544, 295, 257, 4923, 4506, 1296, 437, 27751, 1715, 2738, 281, 360, 11, 457, 3410, 671, 51506], 'temperature': 0.0, 'avg_logprob': -0.18146305319703657, 'compression_ratio': 1.5518867924528301, 'no_speech_prob': 0.01361183449625969}, {'id': 11, 'seek': 5456, 'start': 77.4, 'end': 84.52000000000001, 'text': ' you can think of it like if the address translation is part of some other unit which lies beyond', 'tokens': [51506, 291, 393, 519, 295, 309, 411, 498, 264, 2985, 12853, 307, 644, 295, 512, 661, 4985, 597, 9134, 4399, 51862], 'temperature': 0.0, 'avg_logprob': -0.18146305319703657, 'compression_ratio': 1.5518867924528301, 'no_speech_prob': 0.01361183449625969}, {'id': 12, 'seek': 8452, 'start': 84.67999999999999, 'end': 90.56, 'text': ' the cache then you get benefit out of having virtually indexed cache.', 'tokens': [50372, 264, 19459, 550, 291, 483, 5121, 484, 295, 1419, 14103, 8186, 292, 19459, 13, 50666], 'temperature': 0.0, 'avg_logprob': -0.1557409644126892, 'compression_ratio': 1.6384976525821595, 'no_speech_prob': 0.000257028266787529}, {'id': 13, 'seek': 8452, 'start': 90.56, 'end': 95.96, 'text': ' What is the exact specific architecture doing could be their own set of tradeoffs because', 'tokens': [50666, 708, 307, 264, 1900, 2685, 9482, 884, 727, 312, 641, 1065, 992, 295, 4923, 19231, 570, 50936], 'temperature': 0.0, 'avg_logprob': -0.1557409644126892, 'compression_ratio': 1.6384976525821595, 'no_speech_prob': 0.000257028266787529}, {'id': 14, 'seek': 8452, 'start': 95.96, 'end': 101.96, 'text': ' they have architecture design it just a bunch of tradeoffs involved from here and there.', 'tokens': [50936, 436, 362, 9482, 1715, 309, 445, 257, 3840, 295, 4923, 19231, 3288, 490, 510, 293, 456, 13, 51236], 'temperature': 0.0, 'avg_logprob': -0.1557409644126892, 'compression_ratio': 1.6384976525821595, 'no_speech_prob': 0.000257028266787529}, {'id': 15, 'seek': 8452, 'start': 101.96, 'end': 106.84, 'text': ' So, they have lot of factors into consideration before deciding that.', 'tokens': [51236, 407, 11, 436, 362, 688, 295, 6771, 666, 12381, 949, 17990, 300, 13, 51480], 'temperature': 0.0, 'avg_logprob': -0.1557409644126892, 'compression_ratio': 1.6384976525821595, 'no_speech_prob': 0.000257028266787529}, {'id': 16, 'seek': 8452, 'start': 106.84, 'end': 109.12, 'text': ' Now let us look at this thing.', 'tokens': [51480, 823, 718, 505, 574, 412, 341, 551, 13, 51594], 'temperature': 0.0, 'avg_logprob': -0.1557409644126892, 'compression_ratio': 1.6384976525821595, 'no_speech_prob': 0.000257028266787529}, {'id': 17, 'seek': 10912, 'start': 109.24000000000001, 'end': 115.76, 'text': ' So, what I said is you have the kernel space as part of the process address space.', 'tokens': [50370, 407, 11, 437, 286, 848, 307, 291, 362, 264, 28256, 1901, 382, 644, 295, 264, 1399, 2985, 1901, 13, 50696], 'temperature': 0.0, 'avg_logprob': -0.27313609999053334, 'compression_ratio': 1.456140350877193, 'no_speech_prob': 0.03207340091466904}, {'id': 18, 'seek': 10912, 'start': 115.76, 'end': 117.52000000000001, 'text': ' Why is this done that way?', 'tokens': [50696, 1545, 307, 341, 1096, 300, 636, 30, 50784], 'temperature': 0.0, 'avg_logprob': -0.27313609999053334, 'compression_ratio': 1.456140350877193, 'no_speech_prob': 0.03207340091466904}, {'id': 19, 'seek': 10912, 'start': 117.52000000000001, 'end': 121.32000000000001, 'text': ' Why have kernel mapped as part of the user process?', 'tokens': [50784, 1545, 362, 28256, 33318, 382, 644, 295, 264, 4195, 1399, 30, 50974], 'temperature': 0.0, 'avg_logprob': -0.27313609999053334, 'compression_ratio': 1.456140350877193, 'no_speech_prob': 0.03207340091466904}, {'id': 20, 'seek': 10912, 'start': 137.32, 'end': 138.32, 'text': ' Why?', 'tokens': [51774, 1545, 30, 51824], 'temperature': 0.0, 'avg_logprob': -0.27313609999053334, 'compression_ratio': 1.456140350877193, 'no_speech_prob': 0.03207340091466904}, {'id': 21, 'seek': 13832, 'start': 138.51999999999998, 'end': 139.51999999999998, 'text': ' What are the benefits?', 'tokens': [50374, 708, 366, 264, 5311, 30, 50424], 'temperature': 0.0, 'avg_logprob': -0.2459237397606693, 'compression_ratio': 1.490909090909091, 'no_speech_prob': 0.00954896304756403}, {'id': 22, 'seek': 13832, 'start': 150.51999999999998, 'end': 151.51999999999998, 'text': ' Correct.', 'tokens': [50974, 12753, 13, 51024], 'temperature': 0.0, 'avg_logprob': -0.2459237397606693, 'compression_ratio': 1.490909090909091, 'no_speech_prob': 0.00954896304756403}, {'id': 23, 'seek': 13832, 'start': 151.51999999999998, 'end': 155.51999999999998, 'text': ' So, the main advantage is what he is saying.', 'tokens': [51024, 407, 11, 264, 2135, 5002, 307, 437, 415, 307, 1566, 13, 51224], 'temperature': 0.0, 'avg_logprob': -0.2459237397606693, 'compression_ratio': 1.490909090909091, 'no_speech_prob': 0.00954896304756403}, {'id': 24, 'seek': 13832, 'start': 155.51999999999998, 'end': 161.32, 'text': ' So, whenever a process needs to do a system call it will enter into the kernel space.', 'tokens': [51224, 407, 11, 5699, 257, 1399, 2203, 281, 360, 257, 1185, 818, 309, 486, 3242, 666, 264, 28256, 1901, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.2459237397606693, 'compression_ratio': 1.490909090909091, 'no_speech_prob': 0.00954896304756403}, {'id': 25, 'seek': 13832, 'start': 161.32, 'end': 166.28, 'text': ' Now imagine if kernel was not part of the process then it would have its own set of', 'tokens': [51514, 823, 3811, 498, 28256, 390, 406, 644, 295, 264, 1399, 550, 309, 576, 362, 1080, 1065, 992, 295, 51762], 'temperature': 0.0, 'avg_logprob': -0.2459237397606693, 'compression_ratio': 1.490909090909091, 'no_speech_prob': 0.00954896304756403}, {'id': 26, 'seek': 16628, 'start': 166.28, 'end': 168.84, 'text': ' page tables.', 'tokens': [50364, 3028, 8020, 13, 50492], 'temperature': 0.0, 'avg_logprob': -0.163441344669887, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.012045863084495068}, {'id': 27, 'seek': 16628, 'start': 168.84, 'end': 173.76, 'text': ' Now because of that the page table switch needs to happen.', 'tokens': [50492, 823, 570, 295, 300, 264, 3028, 3199, 3679, 2203, 281, 1051, 13, 50738], 'temperature': 0.0, 'avg_logprob': -0.163441344669887, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.012045863084495068}, {'id': 28, 'seek': 16628, 'start': 173.76, 'end': 180.56, 'text': ' Now as soon as page table switch happens TLB needs to be flushed because TLB no longer', 'tokens': [50738, 823, 382, 2321, 382, 3028, 3199, 3679, 2314, 40277, 33, 2203, 281, 312, 19568, 292, 570, 40277, 33, 572, 2854, 51078], 'temperature': 0.0, 'avg_logprob': -0.163441344669887, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.012045863084495068}, {'id': 29, 'seek': 16628, 'start': 180.56, 'end': 184.6, 'text': ' holds the correct context of the virtual address.', 'tokens': [51078, 9190, 264, 3006, 4319, 295, 264, 6374, 2985, 13, 51280], 'temperature': 0.0, 'avg_logprob': -0.163441344669887, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.012045863084495068}, {'id': 30, 'seek': 16628, 'start': 184.6, 'end': 191.84, 'text': ' So, it is beneficial to have as part of the same process.', 'tokens': [51280, 407, 11, 309, 307, 14072, 281, 362, 382, 644, 295, 264, 912, 1399, 13, 51642], 'temperature': 0.0, 'avg_logprob': -0.163441344669887, 'compression_ratio': 1.6521739130434783, 'no_speech_prob': 0.012045863084495068}, {'id': 31, 'seek': 19184, 'start': 191.84, 'end': 198.64000000000001, 'text': ' Now how many of you have heard of a recent security threat called Spectre and Meltdown?', 'tokens': [50364, 823, 577, 867, 295, 291, 362, 2198, 295, 257, 5162, 3825, 4734, 1219, 27078, 265, 293, 48425, 5093, 30, 50704], 'temperature': 0.0, 'avg_logprob': -0.2490352212566219, 'compression_ratio': 1.564102564102564, 'no_speech_prob': 0.003822553204372525}, {'id': 32, 'seek': 19184, 'start': 198.64000000000001, 'end': 203.64000000000001, 'text': ' So, Meltdown Spectre is slightly different.', 'tokens': [50704, 407, 11, 48425, 5093, 27078, 265, 307, 4748, 819, 13, 50954], 'temperature': 0.0, 'avg_logprob': -0.2490352212566219, 'compression_ratio': 1.564102564102564, 'no_speech_prob': 0.003822553204372525}, {'id': 33, 'seek': 19184, 'start': 203.64000000000001, 'end': 211.52, 'text': ' So, Meltdown was actually a threat which presents in most many processors including x86 ARM', 'tokens': [50954, 407, 11, 48425, 5093, 390, 767, 257, 4734, 597, 13533, 294, 881, 867, 27751, 3009, 2031, 22193, 45209, 51348], 'temperature': 0.0, 'avg_logprob': -0.2490352212566219, 'compression_ratio': 1.564102564102564, 'no_speech_prob': 0.003822553204372525}, {'id': 34, 'seek': 19184, 'start': 211.52, 'end': 217.88, 'text': ' and so on where due to some security hole you could actually access kernel space.', 'tokens': [51348, 293, 370, 322, 689, 3462, 281, 512, 3825, 5458, 291, 727, 767, 2105, 28256, 1901, 13, 51666], 'temperature': 0.0, 'avg_logprob': -0.2490352212566219, 'compression_ratio': 1.564102564102564, 'no_speech_prob': 0.003822553204372525}, {'id': 35, 'seek': 21788, 'start': 218.88, 'end': 223.72, 'text': ' So, you could access the entire address space without any problems and that was done through', 'tokens': [50414, 407, 11, 291, 727, 2105, 264, 2302, 2985, 1901, 1553, 604, 2740, 293, 300, 390, 1096, 807, 50656], 'temperature': 0.0, 'avg_logprob': -0.15045176612006295, 'compression_ratio': 1.6624472573839661, 'no_speech_prob': 0.006690978538244963}, {'id': 36, 'seek': 21788, 'start': 223.72, 'end': 228.96, 'text': ' a loophole which presents which is typically present in these architectures.', 'tokens': [50656, 257, 6367, 14094, 597, 13533, 597, 307, 5850, 1974, 294, 613, 6331, 1303, 13, 50918], 'temperature': 0.0, 'avg_logprob': -0.15045176612006295, 'compression_ratio': 1.6624472573839661, 'no_speech_prob': 0.006690978538244963}, {'id': 37, 'seek': 21788, 'start': 228.96, 'end': 236.04, 'text': ' And the only solution in that case is something called as kernel page table isolation or KPTI', 'tokens': [50918, 400, 264, 787, 3827, 294, 300, 1389, 307, 746, 1219, 382, 28256, 3028, 3199, 16001, 420, 41371, 5422, 51272], 'temperature': 0.0, 'avg_logprob': -0.15045176612006295, 'compression_ratio': 1.6624472573839661, 'no_speech_prob': 0.006690978538244963}, {'id': 38, 'seek': 21788, 'start': 236.04, 'end': 237.64, 'text': ' for a short form.', 'tokens': [51272, 337, 257, 2099, 1254, 13, 51352], 'temperature': 0.0, 'avg_logprob': -0.15045176612006295, 'compression_ratio': 1.6624472573839661, 'no_speech_prob': 0.006690978538244963}, {'id': 39, 'seek': 21788, 'start': 237.64, 'end': 243.68, 'text': ' And what KPTI does is essentially takes out the kernel space from the user address space', 'tokens': [51352, 400, 437, 41371, 5422, 775, 307, 4476, 2516, 484, 264, 28256, 1901, 490, 264, 4195, 2985, 1901, 51654], 'temperature': 0.0, 'avg_logprob': -0.15045176612006295, 'compression_ratio': 1.6624472573839661, 'no_speech_prob': 0.006690978538244963}, {'id': 40, 'seek': 21788, 'start': 243.68, 'end': 245.76, 'text': ' and puts it separately.', 'tokens': [51654, 293, 8137, 309, 14759, 13, 51758], 'temperature': 0.0, 'avg_logprob': -0.15045176612006295, 'compression_ratio': 1.6624472573839661, 'no_speech_prob': 0.006690978538244963}, {'id': 41, 'seek': 24576, 'start': 245.76, 'end': 251.04, 'text': ' Now consequence of that is what he was saying that every time now you have a system call', 'tokens': [50364, 823, 18326, 295, 300, 307, 437, 415, 390, 1566, 300, 633, 565, 586, 291, 362, 257, 1185, 818, 50628], 'temperature': 0.0, 'avg_logprob': -0.12515003093774768, 'compression_ratio': 1.597883597883598, 'no_speech_prob': 0.0028000581078231335}, {'id': 42, 'seek': 24576, 'start': 251.04, 'end': 253.6, 'text': ' you are actually switching the page tables.', 'tokens': [50628, 291, 366, 767, 16493, 264, 3028, 8020, 13, 50756], 'temperature': 0.0, 'avg_logprob': -0.12515003093774768, 'compression_ratio': 1.597883597883598, 'no_speech_prob': 0.0028000581078231335}, {'id': 43, 'seek': 24576, 'start': 253.6, 'end': 263.44, 'text': ' So, this kind of had lot of performance issues and Linux community was not very happy with', 'tokens': [50756, 407, 11, 341, 733, 295, 632, 688, 295, 3389, 2663, 293, 18734, 1768, 390, 406, 588, 2055, 365, 51248], 'temperature': 0.0, 'avg_logprob': -0.12515003093774768, 'compression_ratio': 1.597883597883598, 'no_speech_prob': 0.0028000581078231335}, {'id': 44, 'seek': 24576, 'start': 263.44, 'end': 268.71999999999997, 'text': ' this hardware bug because they had to lose lot of performance because of this.', 'tokens': [51248, 341, 8837, 7426, 570, 436, 632, 281, 3624, 688, 295, 3389, 570, 295, 341, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.12515003093774768, 'compression_ratio': 1.597883597883598, 'no_speech_prob': 0.0028000581078231335}, {'id': 45, 'seek': 26872, 'start': 268.72, 'end': 275.88000000000005, 'text': ' Now just like we have address identifiers there is also process identifiers which are', 'tokens': [50364, 823, 445, 411, 321, 362, 2985, 2473, 23463, 456, 307, 611, 1399, 2473, 23463, 597, 366, 50722], 'temperature': 0.0, 'avg_logprob': -0.12626184419144032, 'compression_ratio': 1.7835051546391754, 'no_speech_prob': 0.0048273405991494656}, {'id': 46, 'seek': 26872, 'start': 275.88000000000005, 'end': 278.56, 'text': ' used for page tables.', 'tokens': [50722, 1143, 337, 3028, 8020, 13, 50856], 'temperature': 0.0, 'avg_logprob': -0.12626184419144032, 'compression_ratio': 1.7835051546391754, 'no_speech_prob': 0.0048273405991494656}, {'id': 47, 'seek': 26872, 'start': 278.56, 'end': 283.76000000000005, 'text': ' Some it is not again in all processors some processors have it, but it essentially allows', 'tokens': [50856, 2188, 309, 307, 406, 797, 294, 439, 27751, 512, 27751, 362, 309, 11, 457, 309, 4476, 4045, 51116], 'temperature': 0.0, 'avg_logprob': -0.12626184419144032, 'compression_ratio': 1.7835051546391754, 'no_speech_prob': 0.0048273405991494656}, {'id': 48, 'seek': 26872, 'start': 283.76000000000005, 'end': 289.04, 'text': ' you to avoid TLB flush even when you swap the page tables.', 'tokens': [51116, 291, 281, 5042, 40277, 33, 19568, 754, 562, 291, 18135, 264, 3028, 8020, 13, 51380], 'temperature': 0.0, 'avg_logprob': -0.12626184419144032, 'compression_ratio': 1.7835051546391754, 'no_speech_prob': 0.0048273405991494656}, {'id': 49, 'seek': 26872, 'start': 289.04, 'end': 294.68, 'text': ' So, even when you switch the page tables you do not have to flush the TLB in the same way', 'tokens': [51380, 407, 11, 754, 562, 291, 3679, 264, 3028, 8020, 291, 360, 406, 362, 281, 19568, 264, 40277, 33, 294, 264, 912, 636, 51662], 'temperature': 0.0, 'avg_logprob': -0.12626184419144032, 'compression_ratio': 1.7835051546391754, 'no_speech_prob': 0.0048273405991494656}, {'id': 50, 'seek': 29468, 'start': 295.12, 'end': 299.68, 'text': ' because what you are storing in TLB is not just the virtual address to physical address', 'tokens': [50386, 570, 437, 291, 366, 26085, 294, 40277, 33, 307, 406, 445, 264, 6374, 2985, 281, 4001, 2985, 50614], 'temperature': 0.0, 'avg_logprob': -0.1262102537257697, 'compression_ratio': 1.7577092511013215, 'no_speech_prob': 0.012817810289561749}, {'id': 51, 'seek': 29468, 'start': 299.68, 'end': 305.08, 'text': ' mapping, but process identifier plus virtual address mapping to the physical address.', 'tokens': [50614, 18350, 11, 457, 1399, 45690, 1804, 6374, 2985, 18350, 281, 264, 4001, 2985, 13, 50884], 'temperature': 0.0, 'avg_logprob': -0.1262102537257697, 'compression_ratio': 1.7577092511013215, 'no_speech_prob': 0.012817810289561749}, {'id': 52, 'seek': 29468, 'start': 305.08, 'end': 311.12, 'text': ' So, some processors do have that even in the TLB, but again with those processors the performance', 'tokens': [50884, 407, 11, 512, 27751, 360, 362, 300, 754, 294, 264, 40277, 33, 11, 457, 797, 365, 729, 27751, 264, 3389, 51186], 'temperature': 0.0, 'avg_logprob': -0.1262102537257697, 'compression_ratio': 1.7577092511013215, 'no_speech_prob': 0.012817810289561749}, {'id': 53, 'seek': 29468, 'start': 311.12, 'end': 314.08, 'text': ' was not so good, but we cannot do much.', 'tokens': [51186, 390, 406, 370, 665, 11, 457, 321, 2644, 360, 709, 13, 51334], 'temperature': 0.0, 'avg_logprob': -0.1262102537257697, 'compression_ratio': 1.7577092511013215, 'no_speech_prob': 0.012817810289561749}, {'id': 54, 'seek': 29468, 'start': 314.08, 'end': 320.76, 'text': ' So, as of now most of the Linux kernels the latest versions will have kernel page table', 'tokens': [51334, 407, 11, 382, 295, 586, 881, 295, 264, 18734, 23434, 1625, 264, 6792, 9606, 486, 362, 28256, 3028, 3199, 51668], 'temperature': 0.0, 'avg_logprob': -0.1262102537257697, 'compression_ratio': 1.7577092511013215, 'no_speech_prob': 0.012817810289561749}, {'id': 55, 'seek': 32076, 'start': 320.76, 'end': 324.92, 'text': ' isolation applied where the kernel space actually does not live in this.', 'tokens': [50364, 16001, 6456, 689, 264, 28256, 1901, 767, 775, 406, 1621, 294, 341, 13, 50572], 'temperature': 0.0, 'avg_logprob': -0.1764563599677935, 'compression_ratio': 1.5161290322580645, 'no_speech_prob': 0.026747021824121475}, {'id': 56, 'seek': 32076, 'start': 324.92, 'end': 329.44, 'text': ' So, this is historical now.', 'tokens': [50572, 407, 11, 341, 307, 8584, 586, 13, 50798], 'temperature': 0.0, 'avg_logprob': -0.1764563599677935, 'compression_ratio': 1.5161290322580645, 'no_speech_prob': 0.026747021824121475}, {'id': 57, 'seek': 32076, 'start': 329.44, 'end': 336.71999999999997, 'text': ' The next quiz, so I have this code what this code is trying to do is it is contiguously', 'tokens': [50798, 440, 958, 15450, 11, 370, 286, 362, 341, 3089, 437, 341, 3089, 307, 1382, 281, 360, 307, 309, 307, 660, 16397, 5098, 51162], 'temperature': 0.0, 'avg_logprob': -0.1764563599677935, 'compression_ratio': 1.5161290322580645, 'no_speech_prob': 0.026747021824121475}, {'id': 58, 'seek': 32076, 'start': 336.71999999999997, 'end': 348.12, 'text': ' trying to malloc 768 MB and whenever it runs out of the memory it breaks out of this infinite', 'tokens': [51162, 1382, 281, 16026, 905, 24733, 23, 28866, 293, 5699, 309, 6676, 484, 295, 264, 4675, 309, 9857, 484, 295, 341, 13785, 51732], 'temperature': 0.0, 'avg_logprob': -0.1764563599677935, 'compression_ratio': 1.5161290322580645, 'no_speech_prob': 0.026747021824121475}, {'id': 59, 'seek': 34812, 'start': 348.12, 'end': 355.68, 'text': ' loop and sorry there is a typo this should have been counter, but and we count how many', 'tokens': [50364, 6367, 293, 2597, 456, 307, 257, 2125, 78, 341, 820, 362, 668, 5682, 11, 457, 293, 321, 1207, 577, 867, 50742], 'temperature': 0.0, 'avg_logprob': -0.19594700235716053, 'compression_ratio': 1.470899470899471, 'no_speech_prob': 0.04462016746401787}, {'id': 60, 'seek': 34812, 'start': 355.68, 'end': 361.7, 'text': ' times we were able to successfully allocate 768 MB.', 'tokens': [50742, 1413, 321, 645, 1075, 281, 10727, 35713, 24733, 23, 28866, 13, 51043], 'temperature': 0.0, 'avg_logprob': -0.19594700235716053, 'compression_ratio': 1.470899470899471, 'no_speech_prob': 0.04462016746401787}, {'id': 61, 'seek': 34812, 'start': 361.7, 'end': 368.24, 'text': ' Now let us say I run this program on two machines one which is 32 bit one which is 64 bit what', 'tokens': [51043, 823, 718, 505, 584, 286, 1190, 341, 1461, 322, 732, 8379, 472, 597, 307, 8858, 857, 472, 597, 307, 12145, 857, 437, 51370], 'temperature': 0.0, 'avg_logprob': -0.19594700235716053, 'compression_ratio': 1.470899470899471, 'no_speech_prob': 0.04462016746401787}, {'id': 62, 'seek': 34812, 'start': 368.24, 'end': 371.36, 'text': ' will be the relationship between the count.', 'tokens': [51370, 486, 312, 264, 2480, 1296, 264, 1207, 13, 51526], 'temperature': 0.0, 'avg_logprob': -0.19594700235716053, 'compression_ratio': 1.470899470899471, 'no_speech_prob': 0.04462016746401787}, {'id': 63, 'seek': 37136, 'start': 371.36, 'end': 379.8, 'text': ' Does count determined by physical memory which is present or will it be dependent on 32 bit', 'tokens': [50364, 4402, 1207, 9540, 538, 4001, 4675, 597, 307, 1974, 420, 486, 309, 312, 12334, 322, 8858, 857, 50786], 'temperature': 0.0, 'avg_logprob': -0.3270856661674304, 'compression_ratio': 1.2416666666666667, 'no_speech_prob': 0.6054116487503052}, {'id': 64, 'seek': 37136, 'start': 379.8, 'end': 395.44, 'text': ' versus 64 bit.', 'tokens': [50786, 5717, 12145, 857, 13, 51568], 'temperature': 0.0, 'avg_logprob': -0.3270856661674304, 'compression_ratio': 1.2416666666666667, 'no_speech_prob': 0.6054116487503052}, {'id': 65, 'seek': 37136, 'start': 395.44, 'end': 397.40000000000003, 'text': ' But if you do not have that much physical.', 'tokens': [51568, 583, 498, 291, 360, 406, 362, 300, 709, 4001, 13, 51666], 'temperature': 0.0, 'avg_logprob': -0.3270856661674304, 'compression_ratio': 1.2416666666666667, 'no_speech_prob': 0.6054116487503052}, {'id': 66, 'seek': 39740, 'start': 397.44, 'end': 403.79999999999995, 'text': ' Now let us say you have a machine which has 32 bit which is 32 bit with 4 GB RAM and you', 'tokens': [50366, 823, 718, 505, 584, 291, 362, 257, 3479, 597, 575, 8858, 857, 597, 307, 8858, 857, 365, 1017, 26809, 14561, 293, 291, 50684], 'temperature': 0.0, 'avg_logprob': -0.24649298632586444, 'compression_ratio': 1.496, 'no_speech_prob': 0.9000105857849121}, {'id': 67, 'seek': 39740, 'start': 403.79999999999995, 'end': 409.59999999999997, 'text': ' have another machine which is 64 bit with 4 GB RAM what will happen will the counter', 'tokens': [50684, 362, 1071, 3479, 597, 307, 12145, 857, 365, 1017, 26809, 14561, 437, 486, 1051, 486, 264, 5682, 50974], 'temperature': 0.0, 'avg_logprob': -0.24649298632586444, 'compression_ratio': 1.496, 'no_speech_prob': 0.9000105857849121}, {'id': 68, 'seek': 39740, 'start': 409.59999999999997, 'end': 410.59999999999997, 'text': ' be same.', 'tokens': [50974, 312, 912, 13, 51024], 'temperature': 0.0, 'avg_logprob': -0.24649298632586444, 'compression_ratio': 1.496, 'no_speech_prob': 0.9000105857849121}, {'id': 69, 'seek': 39740, 'start': 410.59999999999997, 'end': 411.59999999999997, 'text': ' Why?', 'tokens': [51024, 1545, 30, 51074], 'temperature': 0.0, 'avg_logprob': -0.24649298632586444, 'compression_ratio': 1.496, 'no_speech_prob': 0.9000105857849121}, {'id': 70, 'seek': 41160, 'start': 411.6, 'end': 413.6, 'text': ' Why?', 'tokens': [50414, 1545, 30, 50464], 'temperature': 0.0, 'avg_logprob': -0.7459228515625, 'compression_ratio': 0.3333333333333333, 'no_speech_prob': 0.840797483921051}, {'id': 71, 'seek': 47160, 'start': 471.6, 'end': 474.84000000000003, 'text': ' And then we will switch to the next example where we will look at that.', 'tokens': [50364, 400, 550, 321, 486, 3679, 281, 264, 958, 1365, 689, 321, 486, 574, 412, 300, 13, 50526], 'temperature': 0.0, 'avg_logprob': -0.20580750703811646, 'compression_ratio': 1.994871794871795, 'no_speech_prob': 0.28691479563713074}, {'id': 72, 'seek': 47160, 'start': 474.84000000000003, 'end': 481.16, 'text': ' So, essentially remember all the addresses which need to be returned to the program need', 'tokens': [50526, 407, 11, 4476, 1604, 439, 264, 16862, 597, 643, 281, 312, 8752, 281, 264, 1461, 643, 50842], 'temperature': 0.0, 'avg_logprob': -0.20580750703811646, 'compression_ratio': 1.994871794871795, 'no_speech_prob': 0.28691479563713074}, {'id': 73, 'seek': 47160, 'start': 481.16, 'end': 482.16, 'text': ' to be virtual.', 'tokens': [50842, 281, 312, 6374, 13, 50892], 'temperature': 0.0, 'avg_logprob': -0.20580750703811646, 'compression_ratio': 1.994871794871795, 'no_speech_prob': 0.28691479563713074}, {'id': 74, 'seek': 47160, 'start': 482.16, 'end': 485.32000000000005, 'text': ' We saw that earlier.', 'tokens': [50892, 492, 1866, 300, 3071, 13, 51050], 'temperature': 0.0, 'avg_logprob': -0.20580750703811646, 'compression_ratio': 1.994871794871795, 'no_speech_prob': 0.28691479563713074}, {'id': 75, 'seek': 47160, 'start': 485.32000000000005, 'end': 488.52000000000004, 'text': ' So the pointer which is returned by malloc has to be virtual.', 'tokens': [51050, 407, 264, 23918, 597, 307, 8752, 538, 16026, 905, 575, 281, 312, 6374, 13, 51210], 'temperature': 0.0, 'avg_logprob': -0.20580750703811646, 'compression_ratio': 1.994871794871795, 'no_speech_prob': 0.28691479563713074}, {'id': 76, 'seek': 47160, 'start': 488.52000000000004, 'end': 497.08000000000004, 'text': ' So malloc has to at least allocate that much virtual address space at least that much virtual', 'tokens': [51210, 407, 16026, 905, 575, 281, 412, 1935, 35713, 300, 709, 6374, 2985, 1901, 412, 1935, 300, 709, 6374, 51638], 'temperature': 0.0, 'avg_logprob': -0.20580750703811646, 'compression_ratio': 1.994871794871795, 'no_speech_prob': 0.28691479563713074}, {'id': 77, 'seek': 47160, 'start': 497.08000000000004, 'end': 499.08000000000004, 'text': ' address space needs to be allocated.', 'tokens': [51638, 2985, 1901, 2203, 281, 312, 29772, 13, 51738], 'temperature': 0.0, 'avg_logprob': -0.20580750703811646, 'compression_ratio': 1.994871794871795, 'no_speech_prob': 0.28691479563713074}, {'id': 78, 'seek': 49908, 'start': 499.08, 'end': 505.15999999999997, 'text': ' Now if malloc cannot find this much contiguous virtual address space it will error out.', 'tokens': [50364, 823, 498, 16026, 905, 2644, 915, 341, 709, 660, 30525, 6374, 2985, 1901, 309, 486, 6713, 484, 13, 50668], 'temperature': 0.0, 'avg_logprob': -0.11828821897506714, 'compression_ratio': 1.67, 'no_speech_prob': 0.0035343298222869635}, {'id': 79, 'seek': 49908, 'start': 505.15999999999997, 'end': 512.12, 'text': ' So if it cannot find 768 MB in the heap region it will error out and virtual addresses have', 'tokens': [50668, 407, 498, 309, 2644, 915, 24733, 23, 28866, 294, 264, 33591, 4458, 309, 486, 6713, 484, 293, 6374, 16862, 362, 51016], 'temperature': 0.0, 'avg_logprob': -0.11828821897506714, 'compression_ratio': 1.67, 'no_speech_prob': 0.0035343298222869635}, {'id': 80, 'seek': 49908, 'start': 512.12, 'end': 517.4, 'text': ' to be contiguous because that is how pointer arithmetic works.', 'tokens': [51016, 281, 312, 660, 30525, 570, 300, 307, 577, 23918, 42973, 1985, 13, 51280], 'temperature': 0.0, 'avg_logprob': -0.11828821897506714, 'compression_ratio': 1.67, 'no_speech_prob': 0.0035343298222869635}, {'id': 81, 'seek': 49908, 'start': 517.4, 'end': 525.52, 'text': ' Now chances of running out of finding contiguous 768 MB blocks in a 64 bit process versus a', 'tokens': [51280, 823, 10486, 295, 2614, 484, 295, 5006, 660, 30525, 24733, 23, 28866, 8474, 294, 257, 12145, 857, 1399, 5717, 257, 51686], 'temperature': 0.0, 'avg_logprob': -0.11828821897506714, 'compression_ratio': 1.67, 'no_speech_prob': 0.0035343298222869635}, {'id': 82, 'seek': 52552, 'start': 525.52, 'end': 533.24, 'text': ' 32 bit process 64 bit process has much more chunk available of 768 MB just by because', 'tokens': [50364, 8858, 857, 1399, 12145, 857, 1399, 575, 709, 544, 16635, 2435, 295, 24733, 23, 28866, 445, 538, 570, 50750], 'temperature': 0.0, 'avg_logprob': -0.16109839450107533, 'compression_ratio': 1.6609442060085837, 'no_speech_prob': 0.26250308752059937}, {'id': 83, 'seek': 52552, 'start': 533.24, 'end': 537.56, 'text': ' you have more address space available you probably have more chances of finding such', 'tokens': [50750, 291, 362, 544, 2985, 1901, 2435, 291, 1391, 362, 544, 10486, 295, 5006, 1270, 50966], 'temperature': 0.0, 'avg_logprob': -0.16109839450107533, 'compression_ratio': 1.6609442060085837, 'no_speech_prob': 0.26250308752059937}, {'id': 84, 'seek': 52552, 'start': 537.56, 'end': 539.42, 'text': ' a thing.', 'tokens': [50966, 257, 551, 13, 51059], 'temperature': 0.0, 'avg_logprob': -0.16109839450107533, 'compression_ratio': 1.6609442060085837, 'no_speech_prob': 0.26250308752059937}, {'id': 85, 'seek': 52552, 'start': 539.42, 'end': 545.16, 'text': ' So leaving aside the physical resource for a moment if you just look at the virtual address', 'tokens': [51059, 407, 5012, 7359, 264, 4001, 7684, 337, 257, 1623, 498, 291, 445, 574, 412, 264, 6374, 2985, 51346], 'temperature': 0.0, 'avg_logprob': -0.16109839450107533, 'compression_ratio': 1.6609442060085837, 'no_speech_prob': 0.26250308752059937}, {'id': 86, 'seek': 52552, 'start': 545.16, 'end': 551.4399999999999, 'text': ' space the 32 bit machine will run out of this allocation sooner than 64 bit machine.', 'tokens': [51346, 1901, 264, 8858, 857, 3479, 486, 1190, 484, 295, 341, 27599, 15324, 813, 12145, 857, 3479, 13, 51660], 'temperature': 0.0, 'avg_logprob': -0.16109839450107533, 'compression_ratio': 1.6609442060085837, 'no_speech_prob': 0.26250308752059937}, {'id': 87, 'seek': 52552, 'start': 551.4399999999999, 'end': 554.68, 'text': ' Does everyone agree with that?', 'tokens': [51660, 4402, 1518, 3986, 365, 300, 30, 51822], 'temperature': 0.0, 'avg_logprob': -0.16109839450107533, 'compression_ratio': 1.6609442060085837, 'no_speech_prob': 0.26250308752059937}, {'id': 88, 'seek': 55468, 'start': 554.68, 'end': 557.4, 'text': ' Now let us look at the other example.', 'tokens': [50364, 823, 718, 505, 574, 412, 264, 661, 1365, 13, 50500], 'temperature': 0.0, 'avg_logprob': -0.2185024235346546, 'compression_ratio': 1.5056818181818181, 'no_speech_prob': 0.04600437730550766}, {'id': 89, 'seek': 55468, 'start': 557.4, 'end': 562.2399999999999, 'text': ' Here actually sorry I should have changed this.', 'tokens': [50500, 1692, 767, 2597, 286, 820, 362, 3105, 341, 13, 50742], 'temperature': 0.0, 'avg_logprob': -0.2185024235346546, 'compression_ratio': 1.5056818181818181, 'no_speech_prob': 0.04600437730550766}, {'id': 90, 'seek': 55468, 'start': 562.2399999999999, 'end': 566.54, 'text': ' So I have these two codes.', 'tokens': [50742, 407, 286, 362, 613, 732, 14211, 13, 50957], 'temperature': 0.0, 'avg_logprob': -0.2185024235346546, 'compression_ratio': 1.5056818181818181, 'no_speech_prob': 0.04600437730550766}, {'id': 91, 'seek': 55468, 'start': 566.54, 'end': 570.04, 'text': ' The left one is same as the earlier one which I showed.', 'tokens': [50957, 440, 1411, 472, 307, 912, 382, 264, 3071, 472, 597, 286, 4712, 13, 51132], 'temperature': 0.0, 'avg_logprob': -0.2185024235346546, 'compression_ratio': 1.5056818181818181, 'no_speech_prob': 0.04600437730550766}, {'id': 92, 'seek': 55468, 'start': 570.04, 'end': 573.68, 'text': ' The right one is actually using caloc instead of malloc.', 'tokens': [51132, 440, 558, 472, 307, 767, 1228, 2104, 905, 2602, 295, 16026, 905, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.2185024235346546, 'compression_ratio': 1.5056818181818181, 'no_speech_prob': 0.04600437730550766}, {'id': 93, 'seek': 55468, 'start': 573.68, 'end': 579.4399999999999, 'text': ' What is the difference between the two?', 'tokens': [51314, 708, 307, 264, 2649, 1296, 264, 732, 30, 51602], 'temperature': 0.0, 'avg_logprob': -0.2185024235346546, 'compression_ratio': 1.5056818181818181, 'no_speech_prob': 0.04600437730550766}, {'id': 94, 'seek': 57944, 'start': 579.44, 'end': 585.9000000000001, 'text': ' So caloc unlike malloc will actually write zeros into the memory.', 'tokens': [50364, 407, 2104, 905, 8343, 16026, 905, 486, 767, 2464, 35193, 666, 264, 4675, 13, 50687], 'temperature': 0.0, 'avg_logprob': -0.096444271504879, 'compression_ratio': 1.6903225806451614, 'no_speech_prob': 0.04329893738031387}, {'id': 95, 'seek': 57944, 'start': 585.9000000000001, 'end': 593.7600000000001, 'text': ' So caloc actually has to physically access that memory to put zeros.', 'tokens': [50687, 407, 2104, 905, 767, 575, 281, 9762, 2105, 300, 4675, 281, 829, 35193, 13, 51080], 'temperature': 0.0, 'avg_logprob': -0.096444271504879, 'compression_ratio': 1.6903225806451614, 'no_speech_prob': 0.04329893738031387}, {'id': 96, 'seek': 57944, 'start': 593.7600000000001, 'end': 600.72, 'text': ' Now the way malloc actually works is it only allocates the virtual addresses.', 'tokens': [51080, 823, 264, 636, 16026, 905, 767, 1985, 307, 309, 787, 12660, 1024, 264, 6374, 16862, 13, 51428], 'temperature': 0.0, 'avg_logprob': -0.096444271504879, 'compression_ratio': 1.6903225806451614, 'no_speech_prob': 0.04329893738031387}, {'id': 97, 'seek': 57944, 'start': 600.72, 'end': 604.9000000000001, 'text': ' It does not actually give you a physical address.', 'tokens': [51428, 467, 775, 406, 767, 976, 291, 257, 4001, 2985, 13, 51637], 'temperature': 0.0, 'avg_logprob': -0.096444271504879, 'compression_ratio': 1.6903225806451614, 'no_speech_prob': 0.04329893738031387}, {'id': 98, 'seek': 60490, 'start': 604.9, 'end': 612.14, 'text': ' So whenever you do malloc, malloc will give you a contiguous virtual address space but', 'tokens': [50364, 407, 5699, 291, 360, 16026, 905, 11, 16026, 905, 486, 976, 291, 257, 660, 30525, 6374, 2985, 1901, 457, 50726], 'temperature': 0.0, 'avg_logprob': -0.20119518552507673, 'compression_ratio': 1.511111111111111, 'no_speech_prob': 0.01635562628507614}, {'id': 99, 'seek': 60490, 'start': 612.14, 'end': 617.9399999999999, 'text': ' all those pages will not have any backup in the RAM.', 'tokens': [50726, 439, 729, 7183, 486, 406, 362, 604, 14807, 294, 264, 14561, 13, 51016], 'temperature': 0.0, 'avg_logprob': -0.20119518552507673, 'compression_ratio': 1.511111111111111, 'no_speech_prob': 0.01635562628507614}, {'id': 100, 'seek': 60490, 'start': 617.9399999999999, 'end': 622.98, 'text': ' They will not be mapped.', 'tokens': [51016, 814, 486, 406, 312, 33318, 13, 51268], 'temperature': 0.0, 'avg_logprob': -0.20119518552507673, 'compression_ratio': 1.511111111111111, 'no_speech_prob': 0.01635562628507614}, {'id': 101, 'seek': 60490, 'start': 622.98, 'end': 630.3, 'text': ' As you start accessing data into that that is when it will actually start allocating', 'tokens': [51268, 1018, 291, 722, 26440, 1412, 666, 300, 300, 307, 562, 309, 486, 767, 722, 12660, 990, 51634], 'temperature': 0.0, 'avg_logprob': -0.20119518552507673, 'compression_ratio': 1.511111111111111, 'no_speech_prob': 0.01635562628507614}, {'id': 102, 'seek': 60490, 'start': 630.3, 'end': 632.9, 'text': ' physical pages for it.', 'tokens': [51634, 4001, 7183, 337, 309, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.20119518552507673, 'compression_ratio': 1.511111111111111, 'no_speech_prob': 0.01635562628507614}, {'id': 103, 'seek': 63290, 'start': 632.9, 'end': 636.86, 'text': ' And that is what he was saying that it depends on how things are implemented.', 'tokens': [50364, 400, 300, 307, 437, 415, 390, 1566, 300, 309, 5946, 322, 577, 721, 366, 12270, 13, 50562], 'temperature': 0.0, 'avg_logprob': -0.13128511993973344, 'compression_ratio': 1.7926829268292683, 'no_speech_prob': 0.1439432054758072}, {'id': 104, 'seek': 63290, 'start': 636.86, 'end': 639.5, 'text': ' This scheme is called as copy on write.', 'tokens': [50562, 639, 12232, 307, 1219, 382, 5055, 322, 2464, 13, 50694], 'temperature': 0.0, 'avg_logprob': -0.13128511993973344, 'compression_ratio': 1.7926829268292683, 'no_speech_prob': 0.1439432054758072}, {'id': 105, 'seek': 63290, 'start': 639.5, 'end': 642.02, 'text': ' I do not know if you have heard of this term.', 'tokens': [50694, 286, 360, 406, 458, 498, 291, 362, 2198, 295, 341, 1433, 13, 50820], 'temperature': 0.0, 'avg_logprob': -0.13128511993973344, 'compression_ratio': 1.7926829268292683, 'no_speech_prob': 0.1439432054758072}, {'id': 106, 'seek': 63290, 'start': 642.02, 'end': 646.78, 'text': ' So most of the operating systems support something called as copy on write.', 'tokens': [50820, 407, 881, 295, 264, 7447, 3652, 1406, 746, 1219, 382, 5055, 322, 2464, 13, 51058], 'temperature': 0.0, 'avg_logprob': -0.13128511993973344, 'compression_ratio': 1.7926829268292683, 'no_speech_prob': 0.1439432054758072}, {'id': 107, 'seek': 63290, 'start': 646.78, 'end': 654.64, 'text': ' So what happens is you write some only when you write something is when you get physical', 'tokens': [51058, 407, 437, 2314, 307, 291, 2464, 512, 787, 562, 291, 2464, 746, 307, 562, 291, 483, 4001, 51451], 'temperature': 0.0, 'avg_logprob': -0.13128511993973344, 'compression_ratio': 1.7926829268292683, 'no_speech_prob': 0.1439432054758072}, {'id': 108, 'seek': 63290, 'start': 654.64, 'end': 656.14, 'text': ' space for it.', 'tokens': [51451, 1901, 337, 309, 13, 51526], 'temperature': 0.0, 'avg_logprob': -0.13128511993973344, 'compression_ratio': 1.7926829268292683, 'no_speech_prob': 0.1439432054758072}, {'id': 109, 'seek': 63290, 'start': 656.14, 'end': 659.54, 'text': ' Otherwise you have just inherited whatever was earlier present.', 'tokens': [51526, 10328, 291, 362, 445, 27091, 2035, 390, 3071, 1974, 13, 51696], 'temperature': 0.0, 'avg_logprob': -0.13128511993973344, 'compression_ratio': 1.7926829268292683, 'no_speech_prob': 0.1439432054758072}, {'id': 110, 'seek': 63290, 'start': 659.54, 'end': 661.98, 'text': ' You do not have any physical back.', 'tokens': [51696, 509, 360, 406, 362, 604, 4001, 646, 13, 51818], 'temperature': 0.0, 'avg_logprob': -0.13128511993973344, 'compression_ratio': 1.7926829268292683, 'no_speech_prob': 0.1439432054758072}, {'id': 111, 'seek': 66198, 'start': 661.98, 'end': 669.3000000000001, 'text': ' So in this case the code which is with caloc will actually run out of memory when you have', 'tokens': [50364, 407, 294, 341, 1389, 264, 3089, 597, 307, 365, 2104, 905, 486, 767, 1190, 484, 295, 4675, 562, 291, 362, 50730], 'temperature': 0.0, 'avg_logprob': -0.17963380080003005, 'compression_ratio': 1.7664670658682635, 'no_speech_prob': 0.00628848560154438}, {'id': 112, 'seek': 66198, 'start': 669.3000000000001, 'end': 672.0600000000001, 'text': ' run out of either address space.', 'tokens': [50730, 1190, 484, 295, 2139, 2985, 1901, 13, 50868], 'temperature': 0.0, 'avg_logprob': -0.17963380080003005, 'compression_ratio': 1.7664670658682635, 'no_speech_prob': 0.00628848560154438}, {'id': 113, 'seek': 66198, 'start': 672.0600000000001, 'end': 675.9, 'text': ' So it depends on what you run out of sooner whether you run out of the address space or', 'tokens': [50868, 407, 309, 5946, 322, 437, 291, 1190, 484, 295, 15324, 1968, 291, 1190, 484, 295, 264, 2985, 1901, 420, 51060], 'temperature': 0.0, 'avg_logprob': -0.17963380080003005, 'compression_ratio': 1.7664670658682635, 'no_speech_prob': 0.00628848560154438}, {'id': 114, 'seek': 66198, 'start': 675.9, 'end': 680.46, 'text': ' whether you run out of the physical resource.', 'tokens': [51060, 1968, 291, 1190, 484, 295, 264, 4001, 7684, 13, 51288], 'temperature': 0.0, 'avg_logprob': -0.17963380080003005, 'compression_ratio': 1.7664670658682635, 'no_speech_prob': 0.00628848560154438}, {'id': 115, 'seek': 66198, 'start': 680.46, 'end': 684.88, 'text': ' Does this make sense?', 'tokens': [51288, 4402, 341, 652, 2020, 30, 51509], 'temperature': 0.0, 'avg_logprob': -0.17963380080003005, 'compression_ratio': 1.7664670658682635, 'no_speech_prob': 0.00628848560154438}, {'id': 116, 'seek': 66198, 'start': 684.88, 'end': 685.88, 'text': ' Now assign yes.', 'tokens': [51509, 823, 6269, 2086, 13, 51559], 'temperature': 0.0, 'avg_logprob': -0.17963380080003005, 'compression_ratio': 1.7664670658682635, 'no_speech_prob': 0.00628848560154438}, {'id': 117, 'seek': 68588, 'start': 685.88, 'end': 701.2, 'text': ' Better implementation of malloc simply means a better way to track the scheme.', 'tokens': [50364, 15753, 11420, 295, 16026, 905, 2935, 1355, 257, 1101, 636, 281, 2837, 264, 12232, 13, 51130], 'temperature': 0.0, 'avg_logprob': -0.15375823133132038, 'compression_ratio': 1.6686046511627908, 'no_speech_prob': 0.027506869286298752}, {'id': 118, 'seek': 68588, 'start': 701.2, 'end': 707.04, 'text': ' The overall not how lazily memory is actually allocated.', 'tokens': [51130, 440, 4787, 406, 577, 19320, 953, 4675, 307, 767, 29772, 13, 51422], 'temperature': 0.0, 'avg_logprob': -0.15375823133132038, 'compression_ratio': 1.6686046511627908, 'no_speech_prob': 0.027506869286298752}, {'id': 119, 'seek': 68588, 'start': 707.04, 'end': 710.36, 'text': ' Actually I do not have time to cover memory allocators in detail.', 'tokens': [51422, 5135, 286, 360, 406, 362, 565, 281, 2060, 4675, 12660, 3391, 294, 2607, 13, 51588], 'temperature': 0.0, 'avg_logprob': -0.15375823133132038, 'compression_ratio': 1.6686046511627908, 'no_speech_prob': 0.027506869286298752}, {'id': 120, 'seek': 68588, 'start': 710.36, 'end': 714.28, 'text': ' But the way memory allocators actually work like if you want to write your own malloc', 'tokens': [51588, 583, 264, 636, 4675, 12660, 3391, 767, 589, 411, 498, 291, 528, 281, 2464, 428, 1065, 16026, 905, 51784], 'temperature': 0.0, 'avg_logprob': -0.15375823133132038, 'compression_ratio': 1.6686046511627908, 'no_speech_prob': 0.027506869286298752}, {'id': 121, 'seek': 71428, 'start': 714.68, 'end': 720.6, 'text': ' It is not that these things you have to write because these are more of a services provided', 'tokens': [50384, 467, 307, 406, 300, 613, 721, 291, 362, 281, 2464, 570, 613, 366, 544, 295, 257, 3328, 5649, 50680], 'temperature': 0.0, 'avg_logprob': -0.13763680120911262, 'compression_ratio': 1.826839826839827, 'no_speech_prob': 0.5381414294242859}, {'id': 122, 'seek': 71428, 'start': 720.6, 'end': 722.24, 'text': ' by the operating systems.', 'tokens': [50680, 538, 264, 7447, 3652, 13, 50762], 'temperature': 0.0, 'avg_logprob': -0.13763680120911262, 'compression_ratio': 1.826839826839827, 'no_speech_prob': 0.5381414294242859}, {'id': 123, 'seek': 71428, 'start': 722.24, 'end': 723.68, 'text': ' So you have to build on top of it.', 'tokens': [50762, 407, 291, 362, 281, 1322, 322, 1192, 295, 309, 13, 50834], 'temperature': 0.0, 'avg_logprob': -0.13763680120911262, 'compression_ratio': 1.826839826839827, 'no_speech_prob': 0.5381414294242859}, {'id': 124, 'seek': 71428, 'start': 723.68, 'end': 729.12, 'text': ' So unless you are writing the operating system kernel itself where you get to choose these', 'tokens': [50834, 407, 5969, 291, 366, 3579, 264, 7447, 1185, 28256, 2564, 689, 291, 483, 281, 2826, 613, 51106], 'temperature': 0.0, 'avg_logprob': -0.13763680120911262, 'compression_ratio': 1.826839826839827, 'no_speech_prob': 0.5381414294242859}, {'id': 125, 'seek': 71428, 'start': 729.12, 'end': 736.16, 'text': ' policies a memory allocator is simply keeping track of what is free and what is allocated.', 'tokens': [51106, 7657, 257, 4675, 12660, 1639, 307, 2935, 5145, 2837, 295, 437, 307, 1737, 293, 437, 307, 29772, 13, 51458], 'temperature': 0.0, 'avg_logprob': -0.13763680120911262, 'compression_ratio': 1.826839826839827, 'no_speech_prob': 0.5381414294242859}, {'id': 126, 'seek': 71428, 'start': 736.16, 'end': 741.24, 'text': ' And then the better so when someone says I have a better memory allocator what they are', 'tokens': [51458, 400, 550, 264, 1101, 370, 562, 1580, 1619, 286, 362, 257, 1101, 4675, 12660, 1639, 437, 436, 366, 51712], 'temperature': 0.0, 'avg_logprob': -0.13763680120911262, 'compression_ratio': 1.826839826839827, 'no_speech_prob': 0.5381414294242859}, {'id': 127, 'seek': 74124, 'start': 741.24, 'end': 747.28, 'text': ' saying is I have a better implementation which finds free blocks quickly or has some', 'tokens': [50364, 1566, 307, 286, 362, 257, 1101, 11420, 597, 10704, 1737, 8474, 2661, 420, 575, 512, 50666], 'temperature': 0.0, 'avg_logprob': -0.16932709320731784, 'compression_ratio': 1.6810344827586208, 'no_speech_prob': 0.02927873469889164}, {'id': 128, 'seek': 74124, 'start': 747.28, 'end': 749.04, 'text': ' ways to compact things.', 'tokens': [50666, 2098, 281, 14679, 721, 13, 50754], 'temperature': 0.0, 'avg_logprob': -0.16932709320731784, 'compression_ratio': 1.6810344827586208, 'no_speech_prob': 0.02927873469889164}, {'id': 129, 'seek': 74124, 'start': 749.04, 'end': 751.04, 'text': ' So it is all abstraction which is created.', 'tokens': [50754, 407, 309, 307, 439, 37765, 597, 307, 2942, 13, 50854], 'temperature': 0.0, 'avg_logprob': -0.16932709320731784, 'compression_ratio': 1.6810344827586208, 'no_speech_prob': 0.02927873469889164}, {'id': 130, 'seek': 74124, 'start': 751.04, 'end': 756.88, 'text': ' They are not changing the policies provided by the operating system.', 'tokens': [50854, 814, 366, 406, 4473, 264, 7657, 5649, 538, 264, 7447, 1185, 13, 51146], 'temperature': 0.0, 'avg_logprob': -0.16932709320731784, 'compression_ratio': 1.6810344827586208, 'no_speech_prob': 0.02927873469889164}, {'id': 131, 'seek': 74124, 'start': 756.88, 'end': 758.38, 'text': ' Is the distinction clear?', 'tokens': [51146, 1119, 264, 16844, 1850, 30, 51221], 'temperature': 0.0, 'avg_logprob': -0.16932709320731784, 'compression_ratio': 1.6810344827586208, 'no_speech_prob': 0.02927873469889164}, {'id': 132, 'seek': 74124, 'start': 758.38, 'end': 763.44, 'text': ' So what we talked about was actually a thing in the operating system.', 'tokens': [51221, 407, 437, 321, 2825, 466, 390, 767, 257, 551, 294, 264, 7447, 1185, 13, 51474], 'temperature': 0.0, 'avg_logprob': -0.16932709320731784, 'compression_ratio': 1.6810344827586208, 'no_speech_prob': 0.02927873469889164}, {'id': 133, 'seek': 74124, 'start': 763.44, 'end': 769.1, 'text': ' Copy on write is decided by operating system not by malloc versus calloc.', 'tokens': [51474, 25653, 322, 2464, 307, 3047, 538, 7447, 1185, 406, 538, 16026, 905, 5717, 818, 905, 13, 51757], 'temperature': 0.0, 'avg_logprob': -0.16932709320731784, 'compression_ratio': 1.6810344827586208, 'no_speech_prob': 0.02927873469889164}, {'id': 134, 'seek': 76910, 'start': 769.1, 'end': 776.34, 'text': ' It is a OS policy because of that behavior of malloc and calloc might appear different.', 'tokens': [50364, 467, 307, 257, 12731, 3897, 570, 295, 300, 5223, 295, 16026, 905, 293, 818, 905, 1062, 4204, 819, 13, 50726], 'temperature': 0.0, 'avg_logprob': -0.16793147000399503, 'compression_ratio': 1.5463414634146342, 'no_speech_prob': 0.040797363966703415}, {'id': 135, 'seek': 76910, 'start': 776.34, 'end': 780.9, 'text': ' But if you know what happens behind malloc behind calloc then you should be able to reason', 'tokens': [50726, 583, 498, 291, 458, 437, 2314, 2261, 16026, 905, 2261, 818, 905, 550, 291, 820, 312, 1075, 281, 1778, 50954], 'temperature': 0.0, 'avg_logprob': -0.16793147000399503, 'compression_ratio': 1.5463414634146342, 'no_speech_prob': 0.040797363966703415}, {'id': 136, 'seek': 76910, 'start': 780.9, 'end': 783.78, 'text': ' about it.', 'tokens': [50954, 466, 309, 13, 51098], 'temperature': 0.0, 'avg_logprob': -0.16793147000399503, 'compression_ratio': 1.5463414634146342, 'no_speech_prob': 0.040797363966703415}, {'id': 137, 'seek': 76910, 'start': 783.78, 'end': 787.16, 'text': ' Now the assignment for you is something like this.', 'tokens': [51098, 823, 264, 15187, 337, 291, 307, 746, 411, 341, 13, 51267], 'temperature': 0.0, 'avg_logprob': -0.16793147000399503, 'compression_ratio': 1.5463414634146342, 'no_speech_prob': 0.040797363966703415}, {'id': 138, 'seek': 76910, 'start': 787.16, 'end': 793.0600000000001, 'text': ' You have to write a program which will print addresses of different portions.', 'tokens': [51267, 509, 362, 281, 2464, 257, 1461, 597, 486, 4482, 16862, 295, 819, 25070, 13, 51562], 'temperature': 0.0, 'avg_logprob': -0.16793147000399503, 'compression_ratio': 1.5463414634146342, 'no_speech_prob': 0.040797363966703415}, {'id': 139, 'seek': 79306, 'start': 793.06, 'end': 800.0999999999999, 'text': ' So write a program which takes which prints address of some function which prints address', 'tokens': [50364, 407, 2464, 257, 1461, 597, 2516, 597, 22305, 2985, 295, 512, 2445, 597, 22305, 2985, 50716], 'temperature': 0.0, 'avg_logprob': -0.16278688327686205, 'compression_ratio': 2.0240963855421685, 'no_speech_prob': 0.1021600142121315}, {'id': 140, 'seek': 79306, 'start': 800.0999999999999, 'end': 805.7199999999999, 'text': ' of some data which prints address of some variable in the stack and which prints address', 'tokens': [50716, 295, 512, 1412, 597, 22305, 2985, 295, 512, 7006, 294, 264, 8630, 293, 597, 22305, 2985, 50997], 'temperature': 0.0, 'avg_logprob': -0.16278688327686205, 'compression_ratio': 2.0240963855421685, 'no_speech_prob': 0.1021600142121315}, {'id': 141, 'seek': 79306, 'start': 805.7199999999999, 'end': 808.9599999999999, 'text': ' of something in the heap.', 'tokens': [50997, 295, 746, 294, 264, 33591, 13, 51159], 'temperature': 0.0, 'avg_logprob': -0.16278688327686205, 'compression_ratio': 2.0240963855421685, 'no_speech_prob': 0.1021600142121315}, {'id': 142, 'seek': 79306, 'start': 808.9599999999999, 'end': 815.5, 'text': ' And verify if they match to something similar to what we had seen here.', 'tokens': [51159, 400, 16888, 498, 436, 2995, 281, 746, 2531, 281, 437, 321, 632, 1612, 510, 13, 51486], 'temperature': 0.0, 'avg_logprob': -0.16278688327686205, 'compression_ratio': 2.0240963855421685, 'no_speech_prob': 0.1021600142121315}, {'id': 143, 'seek': 79306, 'start': 815.5, 'end': 819.5, 'text': ' Where the function addresses should be something like this.', 'tokens': [51486, 2305, 264, 2445, 16862, 820, 312, 746, 411, 341, 13, 51686], 'temperature': 0.0, 'avg_logprob': -0.16278688327686205, 'compression_ratio': 2.0240963855421685, 'no_speech_prob': 0.1021600142121315}, {'id': 144, 'seek': 81950, 'start': 820.14, 'end': 826.78, 'text': ' So that might be very close to the kernel and so on.', 'tokens': [50396, 407, 300, 1062, 312, 588, 1998, 281, 264, 28256, 293, 370, 322, 13, 50728], 'temperature': 0.0, 'avg_logprob': -0.2131505198292918, 'compression_ratio': 1.5497630331753554, 'no_speech_prob': 0.23902826011180878}, {'id': 145, 'seek': 81950, 'start': 826.78, 'end': 831.8, 'text': ' Remember to compile with dash M32 otherwise you might see completely random stuff which', 'tokens': [50728, 5459, 281, 31413, 365, 8240, 376, 11440, 5911, 291, 1062, 536, 2584, 4974, 1507, 597, 50979], 'temperature': 0.0, 'avg_logprob': -0.2131505198292918, 'compression_ratio': 1.5497630331753554, 'no_speech_prob': 0.23902826011180878}, {'id': 146, 'seek': 81950, 'start': 831.8, 'end': 835.1, 'text': ' is not shown in this diagram.', 'tokens': [50979, 307, 406, 4898, 294, 341, 10686, 13, 51144], 'temperature': 0.0, 'avg_logprob': -0.2131505198292918, 'compression_ratio': 1.5497630331753554, 'no_speech_prob': 0.23902826011180878}, {'id': 147, 'seek': 81950, 'start': 835.1, 'end': 840.18, 'text': ' So whatever concepts you are trying to learn I think the best way to understand them is', 'tokens': [51144, 407, 2035, 10392, 291, 366, 1382, 281, 1466, 286, 519, 264, 1151, 636, 281, 1223, 552, 307, 51398], 'temperature': 0.0, 'avg_logprob': -0.2131505198292918, 'compression_ratio': 1.5497630331753554, 'no_speech_prob': 0.23902826011180878}, {'id': 148, 'seek': 81950, 'start': 840.18, 'end': 844.28, 'text': ' to be able to write some program which can demonstrate that concept.', 'tokens': [51398, 281, 312, 1075, 281, 2464, 512, 1461, 597, 393, 11698, 300, 3410, 13, 51603], 'temperature': 0.0, 'avg_logprob': -0.2131505198292918, 'compression_ratio': 1.5497630331753554, 'no_speech_prob': 0.23902826011180878}, {'id': 149, 'seek': 84428, 'start': 844.28, 'end': 850.26, 'text': ' Otherwise that will make your knowledge much more grounded and you can observe things.', 'tokens': [50364, 10328, 300, 486, 652, 428, 3601, 709, 544, 23535, 293, 291, 393, 11441, 721, 13, 50663], 'temperature': 0.0, 'avg_logprob': -0.12349270268490439, 'compression_ratio': 1.6872427983539096, 'no_speech_prob': 0.18216021358966827}, {'id': 150, 'seek': 84428, 'start': 850.26, 'end': 854.8199999999999, 'text': ' Now one of the things which you can do which is comparatively better than this is using', 'tokens': [50663, 823, 472, 295, 264, 721, 597, 291, 393, 360, 597, 307, 6311, 19020, 1101, 813, 341, 307, 1228, 50891], 'temperature': 0.0, 'avg_logprob': -0.12349270268490439, 'compression_ratio': 1.6872427983539096, 'no_speech_prob': 0.18216021358966827}, {'id': 151, 'seek': 84428, 'start': 854.8199999999999, 'end': 857.6, 'text': ' some commands.', 'tokens': [50891, 512, 16901, 13, 51030], 'temperature': 0.0, 'avg_logprob': -0.12349270268490439, 'compression_ratio': 1.6872427983539096, 'no_speech_prob': 0.18216021358966827}, {'id': 152, 'seek': 84428, 'start': 857.6, 'end': 861.98, 'text': " So let's say I want to actually observe the memory map of how things are.", 'tokens': [51030, 407, 718, 311, 584, 286, 528, 281, 767, 11441, 264, 4675, 4471, 295, 577, 721, 366, 13, 51249], 'temperature': 0.0, 'avg_logprob': -0.12349270268490439, 'compression_ratio': 1.6872427983539096, 'no_speech_prob': 0.18216021358966827}, {'id': 153, 'seek': 84428, 'start': 861.98, 'end': 868.4399999999999, 'text': ' I cannot keep doing this because there might be some things like we know before main there', 'tokens': [51249, 286, 2644, 1066, 884, 341, 570, 456, 1062, 312, 512, 721, 411, 321, 458, 949, 2135, 456, 51572], 'temperature': 0.0, 'avg_logprob': -0.12349270268490439, 'compression_ratio': 1.6872427983539096, 'no_speech_prob': 0.18216021358966827}, {'id': 154, 'seek': 84428, 'start': 868.4399999999999, 'end': 872.3199999999999, 'text': ' is also something called as underscore start as of now.', 'tokens': [51572, 307, 611, 746, 1219, 382, 37556, 722, 382, 295, 586, 13, 51766], 'temperature': 0.0, 'avg_logprob': -0.12349270268490439, 'compression_ratio': 1.6872427983539096, 'no_speech_prob': 0.18216021358966827}, {'id': 155, 'seek': 87232, 'start': 872.36, 'end': 877.5600000000001, 'text': " So we can't exactly get what is the stack layout and so on because there might be some", 'tokens': [50366, 407, 321, 393, 380, 2293, 483, 437, 307, 264, 8630, 13333, 293, 370, 322, 570, 456, 1062, 312, 512, 50626], 'temperature': 0.0, 'avg_logprob': -0.16370522855508207, 'compression_ratio': 1.6531531531531531, 'no_speech_prob': 0.0007669831393286586}, {'id': 156, 'seek': 87232, 'start': 877.5600000000001, 'end': 882.9200000000001, 'text': ' other things which are hidden behind my back which are also occupying space.', 'tokens': [50626, 661, 721, 597, 366, 7633, 2261, 452, 646, 597, 366, 611, 8073, 1840, 1901, 13, 50894], 'temperature': 0.0, 'avg_logprob': -0.16370522855508207, 'compression_ratio': 1.6531531531531531, 'no_speech_prob': 0.0007669831393286586}, {'id': 157, 'seek': 87232, 'start': 882.9200000000001, 'end': 887.0400000000001, 'text': ' So you can actually print memory map of a program.', 'tokens': [50894, 407, 291, 393, 767, 4482, 4675, 4471, 295, 257, 1461, 13, 51100], 'temperature': 0.0, 'avg_logprob': -0.16370522855508207, 'compression_ratio': 1.6531531531531531, 'no_speech_prob': 0.0007669831393286586}, {'id': 158, 'seek': 87232, 'start': 887.0400000000001, 'end': 891.86, 'text': ' So for that you have to find what is the process ID.', 'tokens': [51100, 407, 337, 300, 291, 362, 281, 915, 437, 307, 264, 1399, 7348, 13, 51341], 'temperature': 0.0, 'avg_logprob': -0.16370522855508207, 'compression_ratio': 1.6531531531531531, 'no_speech_prob': 0.0007669831393286586}, {'id': 159, 'seek': 87232, 'start': 891.86, 'end': 895.2800000000001, 'text': ' So there is a command called pgrep.', 'tokens': [51341, 407, 456, 307, 257, 5622, 1219, 280, 70, 19919, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.16370522855508207, 'compression_ratio': 1.6531531531531531, 'no_speech_prob': 0.0007669831393286586}, {'id': 160, 'seek': 87232, 'start': 895.2800000000001, 'end': 896.94, 'text': ' Everyone is aware of command grep.', 'tokens': [51512, 5198, 307, 3650, 295, 5622, 6066, 79, 13, 51595], 'temperature': 0.0, 'avg_logprob': -0.16370522855508207, 'compression_ratio': 1.6531531531531531, 'no_speech_prob': 0.0007669831393286586}, {'id': 161, 'seek': 87232, 'start': 896.94, 'end': 899.5600000000001, 'text': ' Grep is to search something.', 'tokens': [51595, 460, 19919, 307, 281, 3164, 746, 13, 51726], 'temperature': 0.0, 'avg_logprob': -0.16370522855508207, 'compression_ratio': 1.6531531531531531, 'no_speech_prob': 0.0007669831393286586}, {'id': 162, 'seek': 89956, 'start': 899.56, 'end': 907.9599999999999, 'text': ' So pgrep searches for a process which are running and then I can actually use a command', 'tokens': [50364, 407, 280, 70, 19919, 26701, 337, 257, 1399, 597, 366, 2614, 293, 550, 286, 393, 767, 764, 257, 5622, 50784], 'temperature': 0.0, 'avg_logprob': -0.155771193297013, 'compression_ratio': 1.3636363636363635, 'no_speech_prob': 0.01240452192723751}, {'id': 163, 'seek': 89956, 'start': 907.9599999999999, 'end': 912.76, 'text': ' called pmap which shows me the memory map of that process.', 'tokens': [50784, 1219, 280, 24223, 597, 3110, 385, 264, 4675, 4471, 295, 300, 1399, 13, 51024], 'temperature': 0.0, 'avg_logprob': -0.155771193297013, 'compression_ratio': 1.3636363636363635, 'no_speech_prob': 0.01240452192723751}, {'id': 164, 'seek': 89956, 'start': 912.76, 'end': 914.28, 'text': " So let's try that.", 'tokens': [51024, 407, 718, 311, 853, 300, 13, 51100], 'temperature': 0.0, 'avg_logprob': -0.155771193297013, 'compression_ratio': 1.3636363636363635, 'no_speech_prob': 0.01240452192723751}, {'id': 165, 'seek': 91428, 'start': 914.28, 'end': 931.0799999999999, 'text': " So let's say I have", 'tokens': [50364, 407, 718, 311, 584, 286, 362, 51204], 'temperature': 0.0, 'avg_logprob': -0.32397308349609377, 'compression_ratio': 0.7037037037037037, 'no_speech_prob': 0.6388004422187805}, {'id': 166, 'seek': 93108, 'start': 931.08, 'end': 947.5200000000001, 'text': " So let's say I have some proc.c.", 'tokens': [50364, 407, 718, 311, 584, 286, 362, 512, 9510, 13, 66, 13, 51186], 'temperature': 0.0, 'avg_logprob': -0.17317682046156663, 'compression_ratio': 1.3953488372093024, 'no_speech_prob': 0.00818261131644249}, {'id': 167, 'seek': 93108, 'start': 947.5200000000001, 'end': 951.7800000000001, 'text': ' To ensure I can keep poking the binary I will keep it running.', 'tokens': [51186, 1407, 5586, 286, 393, 1066, 42684, 264, 17434, 286, 486, 1066, 309, 2614, 13, 51399], 'temperature': 0.0, 'avg_logprob': -0.17317682046156663, 'compression_ratio': 1.3953488372093024, 'no_speech_prob': 0.00818261131644249}, {'id': 168, 'seek': 93108, 'start': 951.7800000000001, 'end': 956.72, 'text': ' So I will put a scanf so that the process is kind of waiting for something to happen', 'tokens': [51399, 407, 286, 486, 829, 257, 11049, 69, 370, 300, 264, 1399, 307, 733, 295, 3806, 337, 746, 281, 1051, 51646], 'temperature': 0.0, 'avg_logprob': -0.17317682046156663, 'compression_ratio': 1.3953488372093024, 'no_speech_prob': 0.00818261131644249}, {'id': 169, 'seek': 95672, 'start': 956.88, 'end': 961.36, 'text': " and it doesn't run fast enough and I can't observe it.", 'tokens': [50372, 293, 309, 1177, 380, 1190, 2370, 1547, 293, 286, 393, 380, 11441, 309, 13, 50596], 'temperature': 0.0, 'avg_logprob': -0.18571532612115565, 'compression_ratio': 1.4871794871794872, 'no_speech_prob': 0.10507187992334366}, {'id': 170, 'seek': 95672, 'start': 961.36, 'end': 970.28, 'text': ' So now I have this dot is left.', 'tokens': [50596, 407, 586, 286, 362, 341, 5893, 307, 1411, 13, 51042], 'temperature': 0.0, 'avg_logprob': -0.18571532612115565, 'compression_ratio': 1.4871794871794872, 'no_speech_prob': 0.10507187992334366}, {'id': 171, 'seek': 95672, 'start': 970.28, 'end': 972.6, 'text': ' So this process is now running.', 'tokens': [51042, 407, 341, 1399, 307, 586, 2614, 13, 51158], 'temperature': 0.0, 'avg_logprob': -0.18571532612115565, 'compression_ratio': 1.4871794871794872, 'no_speech_prob': 0.10507187992334366}, {'id': 172, 'seek': 95672, 'start': 972.6, 'end': 978.1600000000001, 'text': " Now let's switch back to other terminal and look for where is a dot out.", 'tokens': [51158, 823, 718, 311, 3679, 646, 281, 661, 14709, 293, 574, 337, 689, 307, 257, 5893, 484, 13, 51436], 'temperature': 0.0, 'avg_logprob': -0.18571532612115565, 'compression_ratio': 1.4871794871794872, 'no_speech_prob': 0.10507187992334366}, {'id': 173, 'seek': 95672, 'start': 978.1600000000001, 'end': 981.88, 'text': ' So it says the PID for this is this one.', 'tokens': [51436, 407, 309, 1619, 264, 430, 2777, 337, 341, 307, 341, 472, 13, 51622], 'temperature': 0.0, 'avg_logprob': -0.18571532612115565, 'compression_ratio': 1.4871794871794872, 'no_speech_prob': 0.10507187992334366}, {'id': 174, 'seek': 98188, 'start': 981.88, 'end': 992.88, 'text': ' So I will use that and this is the actual memory map of this.', 'tokens': [50364, 407, 286, 486, 764, 300, 293, 341, 307, 264, 3539, 4675, 4471, 295, 341, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.1366044707217459, 'compression_ratio': 1.509933774834437, 'no_speech_prob': 0.04203680902719498}, {'id': 175, 'seek': 98188, 'start': 992.88, 'end': 998.96, 'text': ' So it says that there are some segments which are loaded at this address which have read', 'tokens': [50914, 407, 309, 1619, 300, 456, 366, 512, 19904, 597, 366, 13210, 412, 341, 2985, 597, 362, 1401, 51218], 'temperature': 0.0, 'avg_logprob': -0.1366044707217459, 'compression_ratio': 1.509933774834437, 'no_speech_prob': 0.04203680902719498}, {'id': 176, 'seek': 98188, 'start': 998.96, 'end': 1003.56, 'text': ' and execute permission and these are of 4k.', 'tokens': [51218, 293, 14483, 11226, 293, 613, 366, 295, 1017, 74, 13, 51448], 'temperature': 0.0, 'avg_logprob': -0.1366044707217459, 'compression_ratio': 1.509933774834437, 'no_speech_prob': 0.04203680902719498}, {'id': 177, 'seek': 98188, 'start': 1003.56, 'end': 1005.7, 'text': ' Now this is the interesting part.', 'tokens': [51448, 823, 341, 307, 264, 1880, 644, 13, 51555], 'temperature': 0.0, 'avg_logprob': -0.1366044707217459, 'compression_ratio': 1.509933774834437, 'no_speech_prob': 0.04203680902719498}, {'id': 178, 'seek': 100570, 'start': 1005.7, 'end': 1012.58, 'text': ' So you remember we said that you will get secfault only when you cross the segment boundaries.', 'tokens': [50364, 407, 291, 1604, 321, 848, 300, 291, 486, 483, 907, 69, 5107, 787, 562, 291, 3278, 264, 9469, 13180, 13, 50708], 'temperature': 0.0, 'avg_logprob': -0.12894529881684677, 'compression_ratio': 1.7549019607843137, 'no_speech_prob': 0.16850723326206207}, {'id': 179, 'seek': 100570, 'start': 1012.58, 'end': 1021.26, 'text': ' So you can see that so if you are on stack if you access up to 132k bytes you will not', 'tokens': [50708, 407, 291, 393, 536, 300, 370, 498, 291, 366, 322, 8630, 498, 291, 2105, 493, 281, 3705, 17, 74, 36088, 291, 486, 406, 51142], 'temperature': 0.0, 'avg_logprob': -0.12894529881684677, 'compression_ratio': 1.7549019607843137, 'no_speech_prob': 0.16850723326206207}, {'id': 180, 'seek': 100570, 'start': 1021.26, 'end': 1028.98, 'text': ' get a secfault but if you do something beyond that you will start getting secfault.', 'tokens': [51142, 483, 257, 907, 69, 5107, 457, 498, 291, 360, 746, 4399, 300, 291, 486, 722, 1242, 907, 69, 5107, 13, 51528], 'temperature': 0.0, 'avg_logprob': -0.12894529881684677, 'compression_ratio': 1.7549019607843137, 'no_speech_prob': 0.16850723326206207}, {'id': 181, 'seek': 100570, 'start': 1028.98, 'end': 1034.46, 'text': ' Similarly it says that there is some 4k segment which is read and write then there are bunch', 'tokens': [51528, 13157, 309, 1619, 300, 456, 307, 512, 1017, 74, 9469, 597, 307, 1401, 293, 2464, 550, 456, 366, 3840, 51802], 'temperature': 0.0, 'avg_logprob': -0.12894529881684677, 'compression_ratio': 1.7549019607843137, 'no_speech_prob': 0.16850723326206207}, {'id': 182, 'seek': 103446, 'start': 1034.46, 'end': 1035.94, 'text': ' of other things.', 'tokens': [50364, 295, 661, 721, 13, 50438], 'temperature': 0.0, 'avg_logprob': -0.21530113597907644, 'compression_ratio': 1.913265306122449, 'no_speech_prob': 0.056599054485559464}, {'id': 183, 'seek': 103446, 'start': 1035.94, 'end': 1038.46, 'text': ' Then there is libc which is there.', 'tokens': [50438, 1396, 456, 307, 22854, 66, 597, 307, 456, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.21530113597907644, 'compression_ratio': 1.913265306122449, 'no_speech_prob': 0.056599054485559464}, {'id': 184, 'seek': 103446, 'start': 1038.46, 'end': 1044.5, 'text': " With libc you can for now assume it's something which provides all the things which you were", 'tokens': [50564, 2022, 22854, 66, 291, 393, 337, 586, 6552, 309, 311, 746, 597, 6417, 439, 264, 721, 597, 291, 645, 50866], 'temperature': 0.0, 'avg_logprob': -0.21530113597907644, 'compression_ratio': 1.913265306122449, 'no_speech_prob': 0.056599054485559464}, {'id': 185, 'seek': 103446, 'start': 1044.5, 'end': 1049.46, 'text': ' using so far printf malloc and other things and this is also loaded and remember this', 'tokens': [50866, 1228, 370, 1400, 4482, 69, 16026, 905, 293, 661, 721, 293, 341, 307, 611, 13210, 293, 1604, 341, 51114], 'temperature': 0.0, 'avg_logprob': -0.21530113597907644, 'compression_ratio': 1.913265306122449, 'no_speech_prob': 0.056599054485559464}, {'id': 186, 'seek': 103446, 'start': 1049.46, 'end': 1051.4, 'text': ' is dot so.', 'tokens': [51114, 307, 5893, 370, 13, 51211], 'temperature': 0.0, 'avg_logprob': -0.21530113597907644, 'compression_ratio': 1.913265306122449, 'no_speech_prob': 0.056599054485559464}, {'id': 187, 'seek': 103446, 'start': 1051.4, 'end': 1058.8400000000001, 'text': ' So this is shared object which we will see how they work and then there is ld dot so.', 'tokens': [51211, 407, 341, 307, 5507, 2657, 597, 321, 486, 536, 577, 436, 589, 293, 550, 456, 307, 287, 67, 5893, 370, 13, 51583], 'temperature': 0.0, 'avg_logprob': -0.21530113597907644, 'compression_ratio': 1.913265306122449, 'no_speech_prob': 0.056599054485559464}, {'id': 188, 'seek': 103446, 'start': 1058.8400000000001, 'end': 1061.3, 'text': ' This is also something which we will see later.', 'tokens': [51583, 639, 307, 611, 746, 597, 321, 486, 536, 1780, 13, 51706], 'temperature': 0.0, 'avg_logprob': -0.21530113597907644, 'compression_ratio': 1.913265306122449, 'no_speech_prob': 0.056599054485559464}, {'id': 189, 'seek': 106130, 'start': 1061.5, 'end': 1068.3, 'text': ' If you look at the map which we had so it had stack and memory map region for shared', 'tokens': [50374, 759, 291, 574, 412, 264, 4471, 597, 321, 632, 370, 309, 632, 8630, 293, 4675, 4471, 4458, 337, 5507, 50714], 'temperature': 0.0, 'avg_logprob': -0.15431948197193635, 'compression_ratio': 1.6, 'no_speech_prob': 0.43756142258644104}, {'id': 190, 'seek': 106130, 'start': 1068.3, 'end': 1069.34, 'text': ' libraries.', 'tokens': [50714, 15148, 13, 50766], 'temperature': 0.0, 'avg_logprob': -0.15431948197193635, 'compression_ratio': 1.6, 'no_speech_prob': 0.43756142258644104}, {'id': 191, 'seek': 106130, 'start': 1069.34, 'end': 1075.1, 'text': ' So this is all the shared library region which I was showing in the memory map and then there', 'tokens': [50766, 407, 341, 307, 439, 264, 5507, 6405, 4458, 597, 286, 390, 4099, 294, 264, 4675, 4471, 293, 550, 456, 51054], 'temperature': 0.0, 'avg_logprob': -0.15431948197193635, 'compression_ratio': 1.6, 'no_speech_prob': 0.43756142258644104}, {'id': 192, 'seek': 106130, 'start': 1075.1, 'end': 1078.02, 'text': ' is a stack.', 'tokens': [51054, 307, 257, 8630, 13, 51200], 'temperature': 0.0, 'avg_logprob': -0.15431948197193635, 'compression_ratio': 1.6, 'no_speech_prob': 0.43756142258644104}, {'id': 193, 'seek': 106130, 'start': 1078.02, 'end': 1079.22, 'text': ' Does that make sense?', 'tokens': [51200, 4402, 300, 652, 2020, 30, 51260], 'temperature': 0.0, 'avg_logprob': -0.15431948197193635, 'compression_ratio': 1.6, 'no_speech_prob': 0.43756142258644104}, {'id': 194, 'seek': 106130, 'start': 1079.22, 'end': 1086.28, 'text': ' You can also observe the same thing using a different command called slash proc.', 'tokens': [51260, 509, 393, 611, 11441, 264, 912, 551, 1228, 257, 819, 5622, 1219, 17330, 9510, 13, 51613], 'temperature': 0.0, 'avg_logprob': -0.15431948197193635, 'compression_ratio': 1.6, 'no_speech_prob': 0.43756142258644104}, {'id': 195, 'seek': 108628, 'start': 1086.28, 'end': 1100.3999999999999, 'text': ' So you could do cat slash proc slash pid slash maps and this also prints similar information.', 'tokens': [50364, 407, 291, 727, 360, 3857, 17330, 9510, 17330, 44540, 17330, 11317, 293, 341, 611, 22305, 2531, 1589, 13, 51070], 'temperature': 0.0, 'avg_logprob': -0.16930799735219856, 'compression_ratio': 1.3274336283185841, 'no_speech_prob': 0.013422264717519283}, {'id': 196, 'seek': 108628, 'start': 1100.3999999999999, 'end': 1111.44, 'text': " It actually let me dump this to a file so it's readable.", 'tokens': [51070, 467, 767, 718, 385, 11430, 341, 281, 257, 3991, 370, 309, 311, 49857, 13, 51622], 'temperature': 0.0, 'avg_logprob': -0.16930799735219856, 'compression_ratio': 1.3274336283185841, 'no_speech_prob': 0.013422264717519283}, {'id': 197, 'seek': 111144, 'start': 1111.44, 'end': 1116.94, 'text': ' So this actually prints the similar information.', 'tokens': [50364, 407, 341, 767, 22305, 264, 2531, 1589, 13, 50639], 'temperature': 0.0, 'avg_logprob': -0.16515611012776693, 'compression_ratio': 1.618421052631579, 'no_speech_prob': 0.0166444331407547}, {'id': 198, 'seek': 111144, 'start': 1116.94, 'end': 1122.16, 'text': ' But it also prints the exact paths on where the things are loaded from.', 'tokens': [50639, 583, 309, 611, 22305, 264, 1900, 14518, 322, 689, 264, 721, 366, 13210, 490, 13, 50900], 'temperature': 0.0, 'avg_logprob': -0.16515611012776693, 'compression_ratio': 1.618421052631579, 'no_speech_prob': 0.0166444331407547}, {'id': 199, 'seek': 111144, 'start': 1122.16, 'end': 1126.16, 'text': ' So libc is loaded from this location.', 'tokens': [50900, 407, 22854, 66, 307, 13210, 490, 341, 4914, 13, 51100], 'temperature': 0.0, 'avg_logprob': -0.16515611012776693, 'compression_ratio': 1.618421052631579, 'no_speech_prob': 0.0166444331407547}, {'id': 200, 'seek': 111144, 'start': 1126.16, 'end': 1136.42, 'text': ' Now what is this saying is this segment whichever was formed was loaded from a dot out.', 'tokens': [51100, 823, 437, 307, 341, 1566, 307, 341, 9469, 24123, 390, 8693, 390, 13210, 490, 257, 5893, 484, 13, 51613], 'temperature': 0.0, 'avg_logprob': -0.16515611012776693, 'compression_ratio': 1.618421052631579, 'no_speech_prob': 0.0166444331407547}, {'id': 201, 'seek': 113642, 'start': 1136.42, 'end': 1143.98, 'text': ' Now remember we had said that from the program code segment will be loaded, data segment', 'tokens': [50364, 823, 1604, 321, 632, 848, 300, 490, 264, 1461, 3089, 9469, 486, 312, 13210, 11, 1412, 9469, 50742], 'temperature': 0.0, 'avg_logprob': -0.12448082974082546, 'compression_ratio': 1.8717948717948718, 'no_speech_prob': 0.01687183603644371}, {'id': 202, 'seek': 113642, 'start': 1143.98, 'end': 1146.66, 'text': ' will be loaded and bss segment will be loaded.', 'tokens': [50742, 486, 312, 13210, 293, 272, 3810, 9469, 486, 312, 13210, 13, 50876], 'temperature': 0.0, 'avg_logprob': -0.12448082974082546, 'compression_ratio': 1.8717948717948718, 'no_speech_prob': 0.01687183603644371}, {'id': 203, 'seek': 113642, 'start': 1146.66, 'end': 1149.4, 'text': " So that's where these come from.", 'tokens': [50876, 407, 300, 311, 689, 613, 808, 490, 13, 51013], 'temperature': 0.0, 'avg_logprob': -0.12448082974082546, 'compression_ratio': 1.8717948717948718, 'no_speech_prob': 0.01687183603644371}, {'id': 204, 'seek': 113642, 'start': 1149.4, 'end': 1154.72, 'text': ' So what it is saying is from executable these three segments have come, from libc these', 'tokens': [51013, 407, 437, 309, 307, 1566, 307, 490, 7568, 712, 613, 1045, 19904, 362, 808, 11, 490, 22854, 66, 613, 51279], 'temperature': 0.0, 'avg_logprob': -0.12448082974082546, 'compression_ratio': 1.8717948717948718, 'no_speech_prob': 0.01687183603644371}, {'id': 205, 'seek': 113642, 'start': 1154.72, 'end': 1160.5600000000002, 'text': ' bunch of things have come, from ld these things have come and this is a stack.', 'tokens': [51279, 3840, 295, 721, 362, 808, 11, 490, 287, 67, 613, 721, 362, 808, 293, 341, 307, 257, 8630, 13, 51571], 'temperature': 0.0, 'avg_logprob': -0.12448082974082546, 'compression_ratio': 1.8717948717948718, 'no_speech_prob': 0.01687183603644371}, {'id': 206, 'seek': 113642, 'start': 1160.5600000000002, 'end': 1162.66, 'text': ' Everyone got how we did this?', 'tokens': [51571, 5198, 658, 577, 321, 630, 341, 30, 51676], 'temperature': 0.0, 'avg_logprob': -0.12448082974082546, 'compression_ratio': 1.8717948717948718, 'no_speech_prob': 0.01687183603644371}, {'id': 207, 'seek': 116266, 'start': 1162.78, 'end': 1169.6000000000001, 'text': ' So you should be able to observe this using these kind of commands.', 'tokens': [50370, 407, 291, 820, 312, 1075, 281, 11441, 341, 1228, 613, 733, 295, 16901, 13, 50711], 'temperature': 0.0, 'avg_logprob': -0.14690848400718287, 'compression_ratio': 1.6292682926829267, 'no_speech_prob': 0.2565937340259552}, {'id': 208, 'seek': 116266, 'start': 1169.6000000000001, 'end': 1172.38, 'text': ' Any doubts so far?', 'tokens': [50711, 2639, 22618, 370, 1400, 30, 50850], 'temperature': 0.0, 'avg_logprob': -0.14690848400718287, 'compression_ratio': 1.6292682926829267, 'no_speech_prob': 0.2565937340259552}, {'id': 209, 'seek': 116266, 'start': 1172.38, 'end': 1177.94, 'text': ' So just to quickly revise since morning we looked into details of what are static libraries', 'tokens': [50850, 407, 445, 281, 2661, 44252, 1670, 2446, 321, 2956, 666, 4365, 295, 437, 366, 13437, 15148, 51128], 'temperature': 0.0, 'avg_logprob': -0.14690848400718287, 'compression_ratio': 1.6292682926829267, 'no_speech_prob': 0.2565937340259552}, {'id': 210, 'seek': 116266, 'start': 1177.94, 'end': 1183.74, 'text': ' and then we looked into details of how processors are created and how virtual memory is useful', 'tokens': [51128, 293, 550, 321, 2956, 666, 4365, 295, 577, 27751, 366, 2942, 293, 577, 6374, 4675, 307, 4420, 51418], 'temperature': 0.0, 'avg_logprob': -0.14690848400718287, 'compression_ratio': 1.6292682926829267, 'no_speech_prob': 0.2565937340259552}, {'id': 211, 'seek': 116266, 'start': 1183.74, 'end': 1188.26, 'text': ' in creating all the abstraction which we know of for memory.', 'tokens': [51418, 294, 4084, 439, 264, 37765, 597, 321, 458, 295, 337, 4675, 13, 51644], 'temperature': 0.0, 'avg_logprob': -0.14690848400718287, 'compression_ratio': 1.6292682926829267, 'no_speech_prob': 0.2565937340259552}, {'id': 212, 'seek': 118826, 'start': 1188.26, 'end': 1193.7, 'text': " Now let's switch on to loader on what loader actually does.", 'tokens': [50364, 823, 718, 311, 3679, 322, 281, 3677, 260, 322, 437, 3677, 260, 767, 775, 13, 50636], 'temperature': 0.0, 'avg_logprob': -0.15108305035215436, 'compression_ratio': 1.6452991452991452, 'no_speech_prob': 0.01796954683959484}, {'id': 213, 'seek': 118826, 'start': 1193.7, 'end': 1199.42, 'text': ' Now I will actually not get into lot of details of loader because I think dynamic linker is', 'tokens': [50636, 823, 286, 486, 767, 406, 483, 666, 688, 295, 4365, 295, 3677, 260, 570, 286, 519, 8546, 2113, 260, 307, 50922], 'temperature': 0.0, 'avg_logprob': -0.15108305035215436, 'compression_ratio': 1.6452991452991452, 'no_speech_prob': 0.01796954683959484}, {'id': 214, 'seek': 118826, 'start': 1199.42, 'end': 1202.44, 'text': ' much more interesting topic than this.', 'tokens': [50922, 709, 544, 1880, 4829, 813, 341, 13, 51073], 'temperature': 0.0, 'avg_logprob': -0.15108305035215436, 'compression_ratio': 1.6452991452991452, 'no_speech_prob': 0.01796954683959484}, {'id': 215, 'seek': 118826, 'start': 1202.44, 'end': 1205.54, 'text': ' So what happens is what all loader needs to do?', 'tokens': [51073, 407, 437, 2314, 307, 437, 439, 3677, 260, 2203, 281, 360, 30, 51228], 'temperature': 0.0, 'avg_logprob': -0.15108305035215436, 'compression_ratio': 1.6452991452991452, 'no_speech_prob': 0.01796954683959484}, {'id': 216, 'seek': 118826, 'start': 1205.54, 'end': 1210.82, 'text': ' We saw loader has to create the memory map.', 'tokens': [51228, 492, 1866, 3677, 260, 575, 281, 1884, 264, 4675, 4471, 13, 51492], 'temperature': 0.0, 'avg_logprob': -0.15108305035215436, 'compression_ratio': 1.6452991452991452, 'no_speech_prob': 0.01796954683959484}, {'id': 217, 'seek': 118826, 'start': 1210.82, 'end': 1216.06, 'text': ' Loader is essentially responsible for saying allocate some space at this virtual address', 'tokens': [51492, 6130, 8312, 307, 4476, 6250, 337, 1566, 35713, 512, 1901, 412, 341, 6374, 2985, 51754], 'temperature': 0.0, 'avg_logprob': -0.15108305035215436, 'compression_ratio': 1.6452991452991452, 'no_speech_prob': 0.01796954683959484}, {'id': 218, 'seek': 118826, 'start': 1216.06, 'end': 1217.42, 'text': ' in the stack.', 'tokens': [51754, 294, 264, 8630, 13, 51822], 'temperature': 0.0, 'avg_logprob': -0.15108305035215436, 'compression_ratio': 1.6452991452991452, 'no_speech_prob': 0.01796954683959484}, {'id': 219, 'seek': 121742, 'start': 1217.5800000000002, 'end': 1222.38, 'text': ' Take some things from executable code segment etc.', 'tokens': [50372, 3664, 512, 721, 490, 7568, 712, 3089, 9469, 5183, 13, 50612], 'temperature': 0.0, 'avg_logprob': -0.17446252574091373, 'compression_ratio': 1.6610169491525424, 'no_speech_prob': 0.0003739800304174423}, {'id': 220, 'seek': 121742, 'start': 1222.38, 'end': 1225.74, 'text': ' Copy them at this virtual address in the process and so on.', 'tokens': [50612, 25653, 552, 412, 341, 6374, 2985, 294, 264, 1399, 293, 370, 322, 13, 50780], 'temperature': 0.0, 'avg_logprob': -0.17446252574091373, 'compression_ratio': 1.6610169491525424, 'no_speech_prob': 0.0003739800304174423}, {'id': 221, 'seek': 121742, 'start': 1225.74, 'end': 1231.14, 'text': ' So loader is essentially responsible for getting data from disk and actually loading it into', 'tokens': [50780, 407, 3677, 260, 307, 4476, 6250, 337, 1242, 1412, 490, 12355, 293, 767, 15114, 309, 666, 51050], 'temperature': 0.0, 'avg_logprob': -0.17446252574091373, 'compression_ratio': 1.6610169491525424, 'no_speech_prob': 0.0003739800304174423}, {'id': 222, 'seek': 121742, 'start': 1231.14, 'end': 1232.8600000000001, 'text': ' the memory.', 'tokens': [51050, 264, 4675, 13, 51136], 'temperature': 0.0, 'avg_logprob': -0.17446252574091373, 'compression_ratio': 1.6610169491525424, 'no_speech_prob': 0.0003739800304174423}, {'id': 223, 'seek': 121742, 'start': 1232.8600000000001, 'end': 1239.9, 'text': ' And then loader will actually start executing the program point which was specified in the', 'tokens': [51136, 400, 550, 3677, 260, 486, 767, 722, 32368, 264, 1461, 935, 597, 390, 22206, 294, 264, 51488], 'temperature': 0.0, 'avg_logprob': -0.17446252574091373, 'compression_ratio': 1.6610169491525424, 'no_speech_prob': 0.0003739800304174423}, {'id': 224, 'seek': 121742, 'start': 1239.9, 'end': 1240.9, 'text': ' elf.', 'tokens': [51488, 35565, 13, 51538], 'temperature': 0.0, 'avg_logprob': -0.17446252574091373, 'compression_ratio': 1.6610169491525424, 'no_speech_prob': 0.0003739800304174423}, {'id': 225, 'seek': 121742, 'start': 1240.9, 'end': 1245.6200000000001, 'text': ' Remember in elf I had showed you that there was something called as entry point?', 'tokens': [51538, 5459, 294, 35565, 286, 632, 4712, 291, 300, 456, 390, 746, 1219, 382, 8729, 935, 30, 51774], 'temperature': 0.0, 'avg_logprob': -0.17446252574091373, 'compression_ratio': 1.6610169491525424, 'no_speech_prob': 0.0003739800304174423}, {'id': 226, 'seek': 124562, 'start': 1245.62, 'end': 1252.5, 'text': ' That is where once loader is done with its activities it will actually jump.', 'tokens': [50364, 663, 307, 689, 1564, 3677, 260, 307, 1096, 365, 1080, 5354, 309, 486, 767, 3012, 13, 50708], 'temperature': 0.0, 'avg_logprob': -0.13541880045851615, 'compression_ratio': 1.529100529100529, 'no_speech_prob': 0.00638045696541667}, {'id': 227, 'seek': 124562, 'start': 1252.5, 'end': 1256.78, 'text': ' Now what happens in the startup?', 'tokens': [50708, 823, 437, 2314, 294, 264, 18578, 30, 50922], 'temperature': 0.0, 'avg_logprob': -0.13541880045851615, 'compression_ratio': 1.529100529100529, 'no_speech_prob': 0.00638045696541667}, {'id': 228, 'seek': 124562, 'start': 1256.78, 'end': 1264.34, 'text': ' So there is something called as CRT which stands briefly for C runtime.', 'tokens': [50922, 407, 456, 307, 746, 1219, 382, 14123, 51, 597, 7382, 10515, 337, 383, 34474, 13, 51300], 'temperature': 0.0, 'avg_logprob': -0.13541880045851615, 'compression_ratio': 1.529100529100529, 'no_speech_prob': 0.00638045696541667}, {'id': 229, 'seek': 124562, 'start': 1264.34, 'end': 1269.62, 'text': " So what happens is when you are running your C program it's not that loader can magically", 'tokens': [51300, 407, 437, 2314, 307, 562, 291, 366, 2614, 428, 383, 1461, 309, 311, 406, 300, 3677, 260, 393, 39763, 51564], 'temperature': 0.0, 'avg_logprob': -0.13541880045851615, 'compression_ratio': 1.529100529100529, 'no_speech_prob': 0.00638045696541667}, {'id': 230, 'seek': 124562, 'start': 1269.62, 'end': 1271.1, 'text': ' start running it.', 'tokens': [51564, 722, 2614, 309, 13, 51638], 'temperature': 0.0, 'avg_logprob': -0.13541880045851615, 'compression_ratio': 1.529100529100529, 'no_speech_prob': 0.00638045696541667}, {'id': 231, 'seek': 127110, 'start': 1271.1, 'end': 1276.5, 'text': ' For example, everyone knows that main takes some arguments.', 'tokens': [50364, 1171, 1365, 11, 1518, 3255, 300, 2135, 2516, 512, 12869, 13, 50634], 'temperature': 0.0, 'avg_logprob': -0.19287806685252856, 'compression_ratio': 1.6307692307692307, 'no_speech_prob': 0.048722755163908005}, {'id': 232, 'seek': 127110, 'start': 1276.5, 'end': 1278.9399999999998, 'text': ' ARGC, ARGV.', 'tokens': [50634, 8943, 38, 34, 11, 8943, 38, 53, 13, 50756], 'temperature': 0.0, 'avg_logprob': -0.19287806685252856, 'compression_ratio': 1.6307692307692307, 'no_speech_prob': 0.048722755163908005}, {'id': 233, 'seek': 127110, 'start': 1278.9399999999998, 'end': 1282.54, 'text': ' So who populates them?', 'tokens': [50756, 407, 567, 24017, 1024, 552, 30, 50936], 'temperature': 0.0, 'avg_logprob': -0.19287806685252856, 'compression_ratio': 1.6307692307692307, 'no_speech_prob': 0.048722755163908005}, {'id': 234, 'seek': 127110, 'start': 1282.54, 'end': 1287.74, 'text': ' Someone needs to populate them and where will they get populated?', 'tokens': [50936, 8734, 2203, 281, 1665, 5256, 552, 293, 689, 486, 436, 483, 32998, 30, 51196], 'temperature': 0.0, 'avg_logprob': -0.19287806685252856, 'compression_ratio': 1.6307692307692307, 'no_speech_prob': 0.048722755163908005}, {'id': 235, 'seek': 127110, 'start': 1287.74, 'end': 1289.26, 'text': ' Stack.', 'tokens': [51196, 37649, 13, 51272], 'temperature': 0.0, 'avg_logprob': -0.19287806685252856, 'compression_ratio': 1.6307692307692307, 'no_speech_prob': 0.048722755163908005}, {'id': 236, 'seek': 127110, 'start': 1289.26, 'end': 1290.9199999999998, 'text': ' Stack of main.', 'tokens': [51272, 37649, 295, 2135, 13, 51355], 'temperature': 0.0, 'avg_logprob': -0.19287806685252856, 'compression_ratio': 1.6307692307692307, 'no_speech_prob': 0.048722755163908005}, {'id': 237, 'seek': 127110, 'start': 1290.9199999999998, 'end': 1294.4199999999998, 'text': ' So they need to be on stack frame of the main.', 'tokens': [51355, 407, 436, 643, 281, 312, 322, 8630, 3920, 295, 264, 2135, 13, 51530], 'temperature': 0.0, 'avg_logprob': -0.19287806685252856, 'compression_ratio': 1.6307692307692307, 'no_speech_prob': 0.048722755163908005}, {'id': 238, 'seek': 127110, 'start': 1294.4199999999998, 'end': 1300.9399999999998, 'text': ' So all of that setup which is needed to be able to start executing main needs to be done', 'tokens': [51530, 407, 439, 295, 300, 8657, 597, 307, 2978, 281, 312, 1075, 281, 722, 32368, 2135, 2203, 281, 312, 1096, 51856], 'temperature': 0.0, 'avg_logprob': -0.19287806685252856, 'compression_ratio': 1.6307692307692307, 'no_speech_prob': 0.048722755163908005}, {'id': 239, 'seek': 130094, 'start': 1300.94, 'end': 1305.3, 'text': ' by underscore start.', 'tokens': [50364, 538, 37556, 722, 13, 50582], 'temperature': 0.0, 'avg_logprob': -0.2013925580836054, 'compression_ratio': 1.6242774566473988, 'no_speech_prob': 0.0013454225845634937}, {'id': 240, 'seek': 130094, 'start': 1305.3, 'end': 1310.6000000000001, 'text': ' There are few other interesting things which underscore start does which we will see later.', 'tokens': [50582, 821, 366, 1326, 661, 1880, 721, 597, 37556, 722, 775, 597, 321, 486, 536, 1780, 13, 50847], 'temperature': 0.0, 'avg_logprob': -0.2013925580836054, 'compression_ratio': 1.6242774566473988, 'no_speech_prob': 0.0013454225845634937}, {'id': 241, 'seek': 130094, 'start': 1310.6000000000001, 'end': 1317.02, 'text': ' But underscore start is essentially responsible for start setting up the state so that main', 'tokens': [50847, 583, 37556, 722, 307, 4476, 6250, 337, 722, 3287, 493, 264, 1785, 370, 300, 2135, 51168], 'temperature': 0.0, 'avg_logprob': -0.2013925580836054, 'compression_ratio': 1.6242774566473988, 'no_speech_prob': 0.0013454225845634937}, {'id': 242, 'seek': 130094, 'start': 1317.02, 'end': 1318.8, 'text': ' can be executed.', 'tokens': [51168, 393, 312, 17577, 13, 51257], 'temperature': 0.0, 'avg_logprob': -0.2013925580836054, 'compression_ratio': 1.6242774566473988, 'no_speech_prob': 0.0013454225845634937}, {'id': 243, 'seek': 130094, 'start': 1318.8, 'end': 1325.44, 'text': ' Now start itself comes in an object file called as CRT 1.0.', 'tokens': [51257, 823, 722, 2564, 1487, 294, 364, 2657, 3991, 1219, 382, 14123, 51, 502, 13, 15, 13, 51589], 'temperature': 0.0, 'avg_logprob': -0.2013925580836054, 'compression_ratio': 1.6242774566473988, 'no_speech_prob': 0.0013454225845634937}, {'id': 244, 'seek': 132544, 'start': 1326.3600000000001, 'end': 1331.64, 'text': ' So many times you might see this error CRT 1.0 missing or something like that.', 'tokens': [50410, 407, 867, 1413, 291, 1062, 536, 341, 6713, 14123, 51, 502, 13, 15, 5361, 420, 746, 411, 300, 13, 50674], 'temperature': 0.0, 'avg_logprob': -0.16335563249485466, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.09935040026903152}, {'id': 245, 'seek': 132544, 'start': 1331.64, 'end': 1340.76, 'text': ' And what linker does the start which it is said in the execute L file as the entry point', 'tokens': [50674, 400, 437, 2113, 260, 775, 264, 722, 597, 309, 307, 848, 294, 264, 14483, 441, 3991, 382, 264, 8729, 935, 51130], 'temperature': 0.0, 'avg_logprob': -0.16335563249485466, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.09935040026903152}, {'id': 246, 'seek': 132544, 'start': 1340.76, 'end': 1344.0, 'text': ' it is address of the underscore start function.', 'tokens': [51130, 309, 307, 2985, 295, 264, 37556, 722, 2445, 13, 51292], 'temperature': 0.0, 'avg_logprob': -0.16335563249485466, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.09935040026903152}, {'id': 247, 'seek': 132544, 'start': 1344.0, 'end': 1349.0, 'text': ' So what linker says is loader once you are done loading the program please start executing', 'tokens': [51292, 407, 437, 2113, 260, 1619, 307, 3677, 260, 1564, 291, 366, 1096, 15114, 264, 1461, 1767, 722, 32368, 51542], 'temperature': 0.0, 'avg_logprob': -0.16335563249485466, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.09935040026903152}, {'id': 248, 'seek': 132544, 'start': 1349.0, 'end': 1352.72, 'text': ' a function called as underscore start.', 'tokens': [51542, 257, 2445, 1219, 382, 37556, 722, 13, 51728], 'temperature': 0.0, 'avg_logprob': -0.16335563249485466, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.09935040026903152}, {'id': 249, 'seek': 132544, 'start': 1352.72, 'end': 1354.56, 'text': ' And what does start does?', 'tokens': [51728, 400, 437, 775, 722, 775, 30, 51820], 'temperature': 0.0, 'avg_logprob': -0.16335563249485466, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.09935040026903152}, {'id': 250, 'seek': 135456, 'start': 1354.56, 'end': 1358.28, 'text': ' So it does bunch of things before calling main.', 'tokens': [50364, 407, 309, 775, 3840, 295, 721, 949, 5141, 2135, 13, 50550], 'temperature': 0.0, 'avg_logprob': -0.16100364726978345, 'compression_ratio': 1.7170731707317073, 'no_speech_prob': 0.0003728927986230701}, {'id': 251, 'seek': 135456, 'start': 1358.28, 'end': 1364.04, 'text': ' So it calls lip-c first to initialize the lip-c so that malloc and other things are', 'tokens': [50550, 407, 309, 5498, 8280, 12, 66, 700, 281, 5883, 1125, 264, 8280, 12, 66, 370, 300, 16026, 905, 293, 661, 721, 366, 50838], 'temperature': 0.0, 'avg_logprob': -0.16100364726978345, 'compression_ratio': 1.7170731707317073, 'no_speech_prob': 0.0003728927986230701}, {'id': 252, 'seek': 135456, 'start': 1364.04, 'end': 1367.32, 'text': ' initialized properly which might have been used.', 'tokens': [50838, 5883, 1602, 6108, 597, 1062, 362, 668, 1143, 13, 51002], 'temperature': 0.0, 'avg_logprob': -0.16100364726978345, 'compression_ratio': 1.7170731707317073, 'no_speech_prob': 0.0003728927986230701}, {'id': 253, 'seek': 135456, 'start': 1367.32, 'end': 1372.3799999999999, 'text': ' Then it calls init function which initializes some state.', 'tokens': [51002, 1396, 309, 5498, 3157, 2445, 597, 5883, 5660, 512, 1785, 13, 51255], 'temperature': 0.0, 'avg_logprob': -0.16100364726978345, 'compression_ratio': 1.7170731707317073, 'no_speech_prob': 0.0003728927986230701}, {'id': 254, 'seek': 135456, 'start': 1372.3799999999999, 'end': 1374.76, 'text': ' Then it sets up at exit handlers.', 'tokens': [51255, 1396, 309, 6352, 493, 412, 11043, 1011, 11977, 13, 51374], 'temperature': 0.0, 'avg_logprob': -0.16100364726978345, 'compression_ratio': 1.7170731707317073, 'no_speech_prob': 0.0003728927986230701}, {'id': 255, 'seek': 135456, 'start': 1374.76, 'end': 1379.56, 'text': ' So what happens is when your program exits it is not that it immediately exits.', 'tokens': [51374, 407, 437, 2314, 307, 562, 428, 1461, 44183, 309, 307, 406, 300, 309, 4258, 44183, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.16100364726978345, 'compression_ratio': 1.7170731707317073, 'no_speech_prob': 0.0003728927986230701}, {'id': 256, 'seek': 137956, 'start': 1380.1599999999999, 'end': 1384.86, 'text': ' There are some post clean up which happens as part of at exit.', 'tokens': [50394, 821, 366, 512, 2183, 2541, 493, 597, 2314, 382, 644, 295, 412, 11043, 13, 50629], 'temperature': 0.0, 'avg_logprob': -0.16480779123830272, 'compression_ratio': 1.7737556561085972, 'no_speech_prob': 0.03111344948410988}, {'id': 257, 'seek': 137956, 'start': 1384.86, 'end': 1390.56, 'text': ' So start function will say that once the program is done call these functions call those functions', 'tokens': [50629, 407, 722, 2445, 486, 584, 300, 1564, 264, 1461, 307, 1096, 818, 613, 6828, 818, 729, 6828, 50914], 'temperature': 0.0, 'avg_logprob': -0.16480779123830272, 'compression_ratio': 1.7737556561085972, 'no_speech_prob': 0.03111344948410988}, {'id': 258, 'seek': 137956, 'start': 1390.56, 'end': 1391.96, 'text': ' and so on.', 'tokens': [50914, 293, 370, 322, 13, 50984], 'temperature': 0.0, 'avg_logprob': -0.16480779123830272, 'compression_ratio': 1.7737556561085972, 'no_speech_prob': 0.03111344948410988}, {'id': 259, 'seek': 137956, 'start': 1391.96, 'end': 1396.76, 'text': ' Then it finally calls main and then it will finally call exit which will actually return', 'tokens': [50984, 1396, 309, 2721, 5498, 2135, 293, 550, 309, 486, 2721, 818, 11043, 597, 486, 767, 2736, 51224], 'temperature': 0.0, 'avg_logprob': -0.16480779123830272, 'compression_ratio': 1.7737556561085972, 'no_speech_prob': 0.03111344948410988}, {'id': 260, 'seek': 137956, 'start': 1396.76, 'end': 1399.0, 'text': ' to the operating system.', 'tokens': [51224, 281, 264, 7447, 1185, 13, 51336], 'temperature': 0.0, 'avg_logprob': -0.16480779123830272, 'compression_ratio': 1.7737556561085972, 'no_speech_prob': 0.03111344948410988}, {'id': 261, 'seek': 137956, 'start': 1399.0, 'end': 1401.2, 'text': ' Is it clear?', 'tokens': [51336, 1119, 309, 1850, 30, 51446], 'temperature': 0.0, 'avg_logprob': -0.16480779123830272, 'compression_ratio': 1.7737556561085972, 'no_speech_prob': 0.03111344948410988}, {'id': 262, 'seek': 137956, 'start': 1401.2, 'end': 1407.52, 'text': ' So essentially if you just want to conceptually remember this remember underscore start will', 'tokens': [51446, 407, 4476, 498, 291, 445, 528, 281, 3410, 671, 1604, 341, 1604, 37556, 722, 486, 51762], 'temperature': 0.0, 'avg_logprob': -0.16480779123830272, 'compression_ratio': 1.7737556561085972, 'no_speech_prob': 0.03111344948410988}, {'id': 263, 'seek': 140752, 'start': 1407.52, 'end': 1411.68, 'text': ' set up the state for main to start functioning correctly.', 'tokens': [50364, 992, 493, 264, 1785, 337, 2135, 281, 722, 18483, 8944, 13, 50572], 'temperature': 0.0, 'avg_logprob': -0.11195847328673018, 'compression_ratio': 1.728110599078341, 'no_speech_prob': 0.025169700384140015}, {'id': 264, 'seek': 140752, 'start': 1411.68, 'end': 1416.92, 'text': ' And there are few other things which happen in init etc which we will do in the last phase', 'tokens': [50572, 400, 456, 366, 1326, 661, 721, 597, 1051, 294, 3157, 5183, 597, 321, 486, 360, 294, 264, 1036, 5574, 50834], 'temperature': 0.0, 'avg_logprob': -0.11195847328673018, 'compression_ratio': 1.728110599078341, 'no_speech_prob': 0.025169700384140015}, {'id': 265, 'seek': 140752, 'start': 1416.92, 'end': 1419.54, 'text': ' of the module.', 'tokens': [50834, 295, 264, 10088, 13, 50965], 'temperature': 0.0, 'avg_logprob': -0.11195847328673018, 'compression_ratio': 1.728110599078341, 'no_speech_prob': 0.025169700384140015}, {'id': 266, 'seek': 140752, 'start': 1419.54, 'end': 1420.76, 'text': ' Is it clear?', 'tokens': [50965, 1119, 309, 1850, 30, 51026], 'temperature': 0.0, 'avg_logprob': -0.11195847328673018, 'compression_ratio': 1.728110599078341, 'no_speech_prob': 0.025169700384140015}, {'id': 267, 'seek': 140752, 'start': 1420.76, 'end': 1427.24, 'text': ' So I will not actually get into details but I will show you picture of what happens actually.', 'tokens': [51026, 407, 286, 486, 406, 767, 483, 666, 4365, 457, 286, 486, 855, 291, 3036, 295, 437, 2314, 767, 13, 51350], 'temperature': 0.0, 'avg_logprob': -0.11195847328673018, 'compression_ratio': 1.728110599078341, 'no_speech_prob': 0.025169700384140015}, {'id': 268, 'seek': 140752, 'start': 1427.24, 'end': 1432.96, 'text': ' So what I showed you was a simplified picture but what is actually happening before main', 'tokens': [51350, 407, 437, 286, 4712, 291, 390, 257, 26335, 3036, 457, 437, 307, 767, 2737, 949, 2135, 51636], 'temperature': 0.0, 'avg_logprob': -0.11195847328673018, 'compression_ratio': 1.728110599078341, 'no_speech_prob': 0.025169700384140015}, {'id': 269, 'seek': 140752, 'start': 1432.96, 'end': 1435.8799999999999, 'text': ' is all of this.', 'tokens': [51636, 307, 439, 295, 341, 13, 51782], 'temperature': 0.0, 'avg_logprob': -0.11195847328673018, 'compression_ratio': 1.728110599078341, 'no_speech_prob': 0.025169700384140015}, {'id': 270, 'seek': 143588, 'start': 1435.88, 'end': 1442.16, 'text': ' So it is not a simple thing although it appears that you just set up state and it works.', 'tokens': [50364, 407, 309, 307, 406, 257, 2199, 551, 4878, 309, 7038, 300, 291, 445, 992, 493, 1785, 293, 309, 1985, 13, 50678], 'temperature': 0.0, 'avg_logprob': -0.16360010959134244, 'compression_ratio': 1.8425531914893618, 'no_speech_prob': 0.03728964924812317}, {'id': 271, 'seek': 143588, 'start': 1442.16, 'end': 1447.92, 'text': ' What is happening is loader is calling start then lip see start main gets called and then', 'tokens': [50678, 708, 307, 2737, 307, 3677, 260, 307, 5141, 722, 550, 8280, 536, 722, 2135, 2170, 1219, 293, 550, 50966], 'temperature': 0.0, 'avg_logprob': -0.16360010959134244, 'compression_ratio': 1.8425531914893618, 'no_speech_prob': 0.03728964924812317}, {'id': 272, 'seek': 143588, 'start': 1447.92, 'end': 1452.3200000000002, 'text': ' there are bunch of other things and at this point main is called but there are bunch of', 'tokens': [50966, 456, 366, 3840, 295, 661, 721, 293, 412, 341, 935, 2135, 307, 1219, 457, 456, 366, 3840, 295, 51186], 'temperature': 0.0, 'avg_logprob': -0.16360010959134244, 'compression_ratio': 1.8425531914893618, 'no_speech_prob': 0.03728964924812317}, {'id': 273, 'seek': 143588, 'start': 1452.3200000000002, 'end': 1455.0400000000002, 'text': ' other things which are happening.', 'tokens': [51186, 661, 721, 597, 366, 2737, 13, 51322], 'temperature': 0.0, 'avg_logprob': -0.16360010959134244, 'compression_ratio': 1.8425531914893618, 'no_speech_prob': 0.03728964924812317}, {'id': 274, 'seek': 143588, 'start': 1455.0400000000002, 'end': 1460.4, 'text': ' Now I will not get actually into details of what each of these are doing because this', 'tokens': [51322, 823, 286, 486, 406, 483, 767, 666, 4365, 295, 437, 1184, 295, 613, 366, 884, 570, 341, 51590], 'temperature': 0.0, 'avg_logprob': -0.16360010959134244, 'compression_ratio': 1.8425531914893618, 'no_speech_prob': 0.03728964924812317}, {'id': 275, 'seek': 143588, 'start': 1460.4, 'end': 1463.96, 'text': ' is actually too specific to an implementation.', 'tokens': [51590, 307, 767, 886, 2685, 281, 364, 11420, 13, 51768], 'temperature': 0.0, 'avg_logprob': -0.16360010959134244, 'compression_ratio': 1.8425531914893618, 'no_speech_prob': 0.03728964924812317}, {'id': 276, 'seek': 146396, 'start': 1463.96, 'end': 1465.88, 'text': ' There is no concept behind it.', 'tokens': [50364, 821, 307, 572, 3410, 2261, 309, 13, 50460], 'temperature': 0.0, 'avg_logprob': -0.2631590512334084, 'compression_ratio': 1.3507462686567164, 'no_speech_prob': 0.575767457485199}, {'id': 277, 'seek': 146396, 'start': 1465.88, 'end': 1468.82, 'text': ' So I would rather skip this.', 'tokens': [50460, 407, 286, 576, 2831, 10023, 341, 13, 50607], 'temperature': 0.0, 'avg_logprob': -0.2631590512334084, 'compression_ratio': 1.3507462686567164, 'no_speech_prob': 0.575767457485199}, {'id': 278, 'seek': 146396, 'start': 1468.82, 'end': 1475.48, 'text': ' But you can look you can just search for these names and you will start getting some information', 'tokens': [50607, 583, 291, 393, 574, 291, 393, 445, 3164, 337, 613, 5288, 293, 291, 486, 722, 1242, 512, 1589, 50940], 'temperature': 0.0, 'avg_logprob': -0.2631590512334084, 'compression_ratio': 1.3507462686567164, 'no_speech_prob': 0.575767457485199}, {'id': 279, 'seek': 146396, 'start': 1475.48, 'end': 1478.52, 'text': ' on web on what these do.', 'tokens': [50940, 322, 3670, 322, 437, 613, 360, 13, 51092], 'temperature': 0.0, 'avg_logprob': -0.2631590512334084, 'compression_ratio': 1.3507462686567164, 'no_speech_prob': 0.575767457485199}, {'id': 280, 'seek': 147852, 'start': 1478.52, 'end': 1488.92, 'text': ' No.', 'tokens': [50364, 883, 13, 50884], 'temperature': 0.0, 'avg_logprob': -0.2645733549788192, 'compression_ratio': 1.2525252525252526, 'no_speech_prob': 0.333364337682724}, {'id': 281, 'seek': 147852, 'start': 1488.92, 'end': 1498.96, 'text': ' So on Linux there is no other way.', 'tokens': [50884, 407, 322, 18734, 456, 307, 572, 661, 636, 13, 51386], 'temperature': 0.0, 'avg_logprob': -0.2645733549788192, 'compression_ratio': 1.2525252525252526, 'no_speech_prob': 0.333364337682724}, {'id': 282, 'seek': 147852, 'start': 1498.96, 'end': 1503.48, 'text': ' So what happens is when you do exec loader will come into picture which needs to load', 'tokens': [51386, 407, 437, 2314, 307, 562, 291, 360, 4454, 3677, 260, 486, 808, 666, 3036, 597, 2203, 281, 3677, 51612], 'temperature': 0.0, 'avg_logprob': -0.2645733549788192, 'compression_ratio': 1.2525252525252526, 'no_speech_prob': 0.333364337682724}, {'id': 283, 'seek': 150348, 'start': 1504.48, 'end': 1509.84, 'text': ' which you have set and then it will do all of this before actually start executing main', 'tokens': [50414, 597, 291, 362, 992, 293, 550, 309, 486, 360, 439, 295, 341, 949, 767, 722, 32368, 2135, 50682], 'temperature': 0.0, 'avg_logprob': -0.15947325606095164, 'compression_ratio': 1.625615763546798, 'no_speech_prob': 0.614152193069458}, {'id': 284, 'seek': 150348, 'start': 1509.84, 'end': 1515.54, 'text': ' of that function.', 'tokens': [50682, 295, 300, 2445, 13, 50967], 'temperature': 0.0, 'avg_logprob': -0.15947325606095164, 'compression_ratio': 1.625615763546798, 'no_speech_prob': 0.614152193069458}, {'id': 285, 'seek': 150348, 'start': 1515.54, 'end': 1519.88, 'text': ' Now let us look at more interesting topic which is dynamic linking.', 'tokens': [50967, 823, 718, 505, 574, 412, 544, 1880, 4829, 597, 307, 8546, 25775, 13, 51184], 'temperature': 0.0, 'avg_logprob': -0.15947325606095164, 'compression_ratio': 1.625615763546798, 'no_speech_prob': 0.614152193069458}, {'id': 286, 'seek': 150348, 'start': 1519.88, 'end': 1524.88, 'text': ' So remember static libraries which we saw in the morning had disadvantage.', 'tokens': [51184, 407, 1604, 13437, 15148, 597, 321, 1866, 294, 264, 2446, 632, 24292, 13, 51434], 'temperature': 0.0, 'avg_logprob': -0.15947325606095164, 'compression_ratio': 1.625615763546798, 'no_speech_prob': 0.614152193069458}, {'id': 287, 'seek': 150348, 'start': 1524.88, 'end': 1529.98, 'text': ' One of the disadvantage was that the code is kind of present in every executable.', 'tokens': [51434, 1485, 295, 264, 24292, 390, 300, 264, 3089, 307, 733, 295, 1974, 294, 633, 7568, 712, 13, 51689], 'temperature': 0.0, 'avg_logprob': -0.15947325606095164, 'compression_ratio': 1.625615763546798, 'no_speech_prob': 0.614152193069458}, {'id': 288, 'seek': 152998, 'start': 1529.98, 'end': 1535.34, 'text': ' So if I have printf code that will be present in the every executable file which is probably', 'tokens': [50364, 407, 498, 286, 362, 4482, 69, 3089, 300, 486, 312, 1974, 294, 264, 633, 7568, 712, 3991, 597, 307, 1391, 50632], 'temperature': 0.0, 'avg_logprob': -0.1231598979548404, 'compression_ratio': 1.61139896373057, 'no_speech_prob': 0.008055568672716618}, {'id': 289, 'seek': 152998, 'start': 1535.34, 'end': 1538.18, 'text': ' not desired.', 'tokens': [50632, 406, 14721, 13, 50774], 'temperature': 0.0, 'avg_logprob': -0.1231598979548404, 'compression_ratio': 1.61139896373057, 'no_speech_prob': 0.008055568672716618}, {'id': 290, 'seek': 152998, 'start': 1538.18, 'end': 1547.18, 'text': ' And bug fix in static library requires everyone to update and recompile their code.', 'tokens': [50774, 400, 7426, 3191, 294, 13437, 6405, 7029, 1518, 281, 5623, 293, 48000, 794, 641, 3089, 13, 51224], 'temperature': 0.0, 'avg_logprob': -0.1231598979548404, 'compression_ratio': 1.61139896373057, 'no_speech_prob': 0.008055568672716618}, {'id': 291, 'seek': 152998, 'start': 1547.18, 'end': 1552.18, 'text': ' So and we overcome these by using shared libraries.', 'tokens': [51224, 407, 293, 321, 10473, 613, 538, 1228, 5507, 15148, 13, 51474], 'temperature': 0.0, 'avg_logprob': -0.1231598979548404, 'compression_ratio': 1.61139896373057, 'no_speech_prob': 0.008055568672716618}, {'id': 292, 'seek': 152998, 'start': 1552.18, 'end': 1558.82, 'text': ' So a shared library is an object file which can be loaded at runtime.', 'tokens': [51474, 407, 257, 5507, 6405, 307, 364, 2657, 3991, 597, 393, 312, 13210, 412, 34474, 13, 51806], 'temperature': 0.0, 'avg_logprob': -0.1231598979548404, 'compression_ratio': 1.61139896373057, 'no_speech_prob': 0.008055568672716618}, {'id': 293, 'seek': 155882, 'start': 1558.82, 'end': 1562.82, 'text': ' It is not linked statically in your executable.', 'tokens': [50364, 467, 307, 406, 9408, 2219, 984, 294, 428, 7568, 712, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.14479412138462067, 'compression_ratio': 1.563953488372093, 'no_speech_prob': 0.006788940168917179}, {'id': 294, 'seek': 155882, 'start': 1562.82, 'end': 1566.22, 'text': ' It is loaded at runtime when your application starts.', 'tokens': [50564, 467, 307, 13210, 412, 34474, 562, 428, 3861, 3719, 13, 50734], 'temperature': 0.0, 'avg_logprob': -0.14479412138462067, 'compression_ratio': 1.563953488372093, 'no_speech_prob': 0.006788940168917179}, {'id': 295, 'seek': 155882, 'start': 1566.22, 'end': 1568.3, 'text': " That's when it gets loaded.", 'tokens': [50734, 663, 311, 562, 309, 2170, 13210, 13, 50838], 'temperature': 0.0, 'avg_logprob': -0.14479412138462067, 'compression_ratio': 1.563953488372093, 'no_speech_prob': 0.006788940168917179}, {'id': 296, 'seek': 155882, 'start': 1568.3, 'end': 1575.6599999999999, 'text': ' And it can be loaded at arbitrary memory location.', 'tokens': [50838, 400, 309, 393, 312, 13210, 412, 23211, 4675, 4914, 13, 51206], 'temperature': 0.0, 'avg_logprob': -0.14479412138462067, 'compression_ratio': 1.563953488372093, 'no_speech_prob': 0.006788940168917179}, {'id': 297, 'seek': 155882, 'start': 1575.6599999999999, 'end': 1582.78, 'text': ' And this process of loading this library is essentially known as dynamic linking because', 'tokens': [51206, 400, 341, 1399, 295, 15114, 341, 6405, 307, 4476, 2570, 382, 8546, 25775, 570, 51562], 'temperature': 0.0, 'avg_logprob': -0.14479412138462067, 'compression_ratio': 1.563953488372093, 'no_speech_prob': 0.006788940168917179}, {'id': 298, 'seek': 158278, 'start': 1582.86, 'end': 1589.5, 'text': ' we are dynamically calling in some code which was not earlier present in my executable.', 'tokens': [50368, 321, 366, 43492, 5141, 294, 512, 3089, 597, 390, 406, 3071, 1974, 294, 452, 7568, 712, 13, 50700], 'temperature': 0.0, 'avg_logprob': -0.13072689719822095, 'compression_ratio': 1.706140350877193, 'no_speech_prob': 0.026724157854914665}, {'id': 299, 'seek': 158278, 'start': 1589.5, 'end': 1593.78, 'text': " So remember yesterday I was trying to tell you that executable is self-sufficient, doesn't", 'tokens': [50700, 407, 1604, 5186, 286, 390, 1382, 281, 980, 291, 300, 7568, 712, 307, 2698, 12, 82, 30664, 11, 1177, 380, 50914], 'temperature': 0.0, 'avg_logprob': -0.13072689719822095, 'compression_ratio': 1.706140350877193, 'no_speech_prob': 0.026724157854914665}, {'id': 300, 'seek': 158278, 'start': 1593.78, 'end': 1595.78, 'text': ' have any other dependencies.', 'tokens': [50914, 362, 604, 661, 36606, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.13072689719822095, 'compression_ratio': 1.706140350877193, 'no_speech_prob': 0.026724157854914665}, {'id': 301, 'seek': 158278, 'start': 1595.78, 'end': 1598.46, 'text': ' That was true for static dependencies.', 'tokens': [51014, 663, 390, 2074, 337, 13437, 36606, 13, 51148], 'temperature': 0.0, 'avg_logprob': -0.13072689719822095, 'compression_ratio': 1.706140350877193, 'no_speech_prob': 0.026724157854914665}, {'id': 302, 'seek': 158278, 'start': 1598.46, 'end': 1605.62, 'text': ' If there could still be a dynamic dependency on from the executable to a dynamic library.', 'tokens': [51148, 759, 456, 727, 920, 312, 257, 8546, 33621, 322, 490, 264, 7568, 712, 281, 257, 8546, 6405, 13, 51506], 'temperature': 0.0, 'avg_logprob': -0.13072689719822095, 'compression_ratio': 1.706140350877193, 'no_speech_prob': 0.026724157854914665}, {'id': 303, 'seek': 158278, 'start': 1605.62, 'end': 1610.54, 'text': ' And this work is essentially done by dynamic linker.', 'tokens': [51506, 400, 341, 589, 307, 4476, 1096, 538, 8546, 2113, 260, 13, 51752], 'temperature': 0.0, 'avg_logprob': -0.13072689719822095, 'compression_ratio': 1.706140350877193, 'no_speech_prob': 0.026724157854914665}, {'id': 304, 'seek': 161054, 'start': 1610.54, 'end': 1616.6599999999999, 'text': ' And Linux will refer to these libraries as dynamic shared objects or DSOs.', 'tokens': [50364, 400, 18734, 486, 2864, 281, 613, 15148, 382, 8546, 5507, 6565, 420, 15816, 31376, 13, 50670], 'temperature': 0.0, 'avg_logprob': -0.14445479292618602, 'compression_ratio': 1.53551912568306, 'no_speech_prob': 0.022966647520661354}, {'id': 305, 'seek': 161054, 'start': 1616.6599999999999, 'end': 1622.6599999999999, 'text': ' And Windows refers to them as DLLs, dynamic link libraries.', 'tokens': [50670, 400, 8591, 14942, 281, 552, 382, 413, 24010, 82, 11, 8546, 2113, 15148, 13, 50970], 'temperature': 0.0, 'avg_logprob': -0.14445479292618602, 'compression_ratio': 1.53551912568306, 'no_speech_prob': 0.022966647520661354}, {'id': 306, 'seek': 161054, 'start': 1622.6599999999999, 'end': 1628.1399999999999, 'text': ' Now how do you create, just like we saw how we create static library, we should be able', 'tokens': [50970, 823, 577, 360, 291, 1884, 11, 445, 411, 321, 1866, 577, 321, 1884, 13437, 6405, 11, 321, 820, 312, 1075, 51244], 'temperature': 0.0, 'avg_logprob': -0.14445479292618602, 'compression_ratio': 1.53551912568306, 'no_speech_prob': 0.022966647520661354}, {'id': 307, 'seek': 161054, 'start': 1628.1399999999999, 'end': 1630.74, 'text': ' to create a shared library.', 'tokens': [51244, 281, 1884, 257, 5507, 6405, 13, 51374], 'temperature': 0.0, 'avg_logprob': -0.14445479292618602, 'compression_ratio': 1.53551912568306, 'no_speech_prob': 0.022966647520661354}, {'id': 308, 'seek': 161054, 'start': 1630.74, 'end': 1633.34, 'text': " So let's say I have this code.", 'tokens': [51374, 407, 718, 311, 584, 286, 362, 341, 3089, 13, 51504], 'temperature': 0.0, 'avg_logprob': -0.14445479292618602, 'compression_ratio': 1.53551912568306, 'no_speech_prob': 0.022966647520661354}, {'id': 309, 'seek': 163334, 'start': 1633.34, 'end': 1640.78, 'text': ' I can do something like this where I can say gcc, temp.c, which is my code.', 'tokens': [50364, 286, 393, 360, 746, 411, 341, 689, 286, 393, 584, 290, 1914, 11, 18274, 13, 66, 11, 597, 307, 452, 3089, 13, 50736], 'temperature': 0.0, 'avg_logprob': -0.16889499712593947, 'compression_ratio': 1.6512820512820512, 'no_speech_prob': 0.09791027754545212}, {'id': 310, 'seek': 163334, 'start': 1640.78, 'end': 1646.6599999999999, 'text': ' And I specify a flag called dash shared, which is telling that instead of creating a normal', 'tokens': [50736, 400, 286, 16500, 257, 7166, 1219, 8240, 5507, 11, 597, 307, 3585, 300, 2602, 295, 4084, 257, 2710, 51030], 'temperature': 0.0, 'avg_logprob': -0.16889499712593947, 'compression_ratio': 1.6512820512820512, 'no_speech_prob': 0.09791027754545212}, {'id': 311, 'seek': 163334, 'start': 1646.6599999999999, 'end': 1654.6999999999998, 'text': ' relocatable object or executable object, create a shared object.', 'tokens': [51030, 26981, 31415, 2657, 420, 7568, 712, 2657, 11, 1884, 257, 5507, 2657, 13, 51432], 'temperature': 0.0, 'avg_logprob': -0.16889499712593947, 'compression_ratio': 1.6512820512820512, 'no_speech_prob': 0.09791027754545212}, {'id': 312, 'seek': 163334, 'start': 1654.6999999999998, 'end': 1660.22, 'text': ' And just like static libraries, the convention even for dynamic libraries is to name them', 'tokens': [51432, 400, 445, 411, 13437, 15148, 11, 264, 10286, 754, 337, 8546, 15148, 307, 281, 1315, 552, 51708], 'temperature': 0.0, 'avg_logprob': -0.16889499712593947, 'compression_ratio': 1.6512820512820512, 'no_speech_prob': 0.09791027754545212}, {'id': 313, 'seek': 166022, 'start': 1660.3, 'end': 1668.1000000000001, 'text': ' as lib name.so.', 'tokens': [50368, 382, 22854, 1315, 13, 539, 13, 50758], 'temperature': 0.0, 'avg_logprob': -0.386742319379534, 'compression_ratio': 1.2476190476190476, 'no_speech_prob': 0.6501253247261047}, {'id': 314, 'seek': 166022, 'start': 1668.1000000000001, 'end': 1678.8600000000001, 'text': ' So can you all write this code and create your own shared library?', 'tokens': [50758, 407, 393, 291, 439, 2464, 341, 3089, 293, 1884, 428, 1065, 5507, 6405, 30, 51296], 'temperature': 0.0, 'avg_logprob': -0.386742319379534, 'compression_ratio': 1.2476190476190476, 'no_speech_prob': 0.6501253247261047}, {'id': 315, 'seek': 166022, 'start': 1678.8600000000001, 'end': 1687.6200000000001, 'text': ' Are you able to have lib my.so on your disk now?', 'tokens': [51296, 2014, 291, 1075, 281, 362, 22854, 452, 13, 539, 322, 428, 12355, 586, 30, 51734], 'temperature': 0.0, 'avg_logprob': -0.386742319379534, 'compression_ratio': 1.2476190476190476, 'no_speech_prob': 0.6501253247261047}, {'id': 316, 'seek': 168762, 'start': 1687.62, 'end': 1702.82, 'text': " Okay, so that might happen if you don't have 32 bit dynamic linker and 32 bit runtime.", 'tokens': [50364, 1033, 11, 370, 300, 1062, 1051, 498, 291, 500, 380, 362, 8858, 857, 8546, 2113, 260, 293, 8858, 857, 34474, 13, 51124], 'temperature': 0.0, 'avg_logprob': -0.3024228491434237, 'compression_ratio': 1.2377049180327868, 'no_speech_prob': 0.036081280559301376}, {'id': 317, 'seek': 168762, 'start': 1702.82, 'end': 1711.5, 'text': ' Can you do this on the server machine where it is already there?', 'tokens': [51124, 1664, 291, 360, 341, 322, 264, 7154, 3479, 689, 309, 307, 1217, 456, 30, 51558], 'temperature': 0.0, 'avg_logprob': -0.3024228491434237, 'compression_ratio': 1.2377049180327868, 'no_speech_prob': 0.036081280559301376}, {'id': 318, 'seek': 171150, 'start': 1711.5, 'end': 1730.5, 'text': " Let's create it here so we can see.", 'tokens': [50364, 961, 311, 1884, 309, 510, 370, 321, 393, 536, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.6218891143798828, 'compression_ratio': 0.813953488372093, 'no_speech_prob': 0.841050386428833}, {'id': 319, 'seek': 176050, 'start': 1760.5, 'end': 1780.38, 'text': ' Okay, so is everyone able to do that?', 'tokens': [50364, 1033, 11, 370, 307, 1518, 1075, 281, 360, 300, 30, 51358], 'temperature': 0.0, 'avg_logprob': -0.2651177644729614, 'compression_ratio': 0.8222222222222222, 'no_speech_prob': 0.29306694865226746}, {'id': 320, 'seek': 178038, 'start': 1780.38, 'end': 1805.66, 'text': " So let's write some client code also, which will use this.", 'tokens': [50364, 407, 718, 311, 2464, 512, 6423, 3089, 611, 11, 597, 486, 764, 341, 13, 51628], 'temperature': 0.0, 'avg_logprob': -0.15904612011379665, 'compression_ratio': 0.9354838709677419, 'no_speech_prob': 0.08493015915155411}, {'id': 321, 'seek': 180566, 'start': 1805.66, 'end': 1809.64, 'text': ' So I have a client code which calls into that library.', 'tokens': [50364, 407, 286, 362, 257, 6423, 3089, 597, 5498, 666, 300, 6405, 13, 50563], 'temperature': 0.0, 'avg_logprob': -0.23790769679571994, 'compression_ratio': 1.616580310880829, 'no_speech_prob': 0.5062541961669922}, {'id': 322, 'seek': 180566, 'start': 1809.64, 'end': 1811.88, 'text': ' And I will now compile my client code.', 'tokens': [50563, 400, 286, 486, 586, 31413, 452, 6423, 3089, 13, 50675], 'temperature': 0.0, 'avg_logprob': -0.23790769679571994, 'compression_ratio': 1.616580310880829, 'no_speech_prob': 0.5062541961669922}, {'id': 323, 'seek': 180566, 'start': 1811.88, 'end': 1815.38, 'text': ' So I will say gcc minus m32 client.c.', 'tokens': [50675, 407, 286, 486, 584, 290, 1914, 3175, 275, 11440, 6423, 13, 66, 13, 50850], 'temperature': 0.0, 'avg_logprob': -0.23790769679571994, 'compression_ratio': 1.616580310880829, 'no_speech_prob': 0.5062541961669922}, {'id': 324, 'seek': 180566, 'start': 1815.38, 'end': 1821.7, 'text': " And just like we tried giving the path for the static libraries, let's try the same", 'tokens': [50850, 400, 445, 411, 321, 3031, 2902, 264, 3100, 337, 264, 13437, 15148, 11, 718, 311, 853, 264, 912, 51166], 'temperature': 0.0, 'avg_logprob': -0.23790769679571994, 'compression_ratio': 1.616580310880829, 'no_speech_prob': 0.5062541961669922}, {'id': 325, 'seek': 180566, 'start': 1821.7, 'end': 1822.7, 'text': ' thing.', 'tokens': [51166, 551, 13, 51216], 'temperature': 0.0, 'avg_logprob': -0.23790769679571994, 'compression_ratio': 1.616580310880829, 'no_speech_prob': 0.5062541961669922}, {'id': 326, 'seek': 180566, 'start': 1822.7, 'end': 1826.52, 'text': ' So I give l. which says find my libraries here.', 'tokens': [51216, 407, 286, 976, 287, 13, 597, 1619, 915, 452, 15148, 510, 13, 51407], 'temperature': 0.0, 'avg_logprob': -0.23790769679571994, 'compression_ratio': 1.616580310880829, 'no_speech_prob': 0.5062541961669922}, {'id': 327, 'seek': 180566, 'start': 1826.52, 'end': 1829.98, 'text': " And the library I'm trying to link is my.", 'tokens': [51407, 400, 264, 6405, 286, 478, 1382, 281, 2113, 307, 452, 13, 51580], 'temperature': 0.0, 'avg_logprob': -0.23790769679571994, 'compression_ratio': 1.616580310880829, 'no_speech_prob': 0.5062541961669922}, {'id': 328, 'seek': 182998, 'start': 1829.98, 'end': 1844.42, 'text': ' Okay, one second.', 'tokens': [50364, 1033, 11, 472, 1150, 13, 51086], 'temperature': 0.0, 'avg_logprob': -0.8571183522542317, 'compression_ratio': 0.8, 'no_speech_prob': 0.9107797145843506}, {'id': 329, 'seek': 182998, 'start': 1844.42, 'end': 1849.42, 'text': ' And it worked.', 'tokens': [51086, 400, 309, 2732, 13, 51336], 'temperature': 0.0, 'avg_logprob': -0.8571183522542317, 'compression_ratio': 0.8, 'no_speech_prob': 0.9107797145843506}, {'id': 330, 'seek': 184942, 'start': 1849.42, 'end': 1863.0600000000002, 'text': ' Sorry.', 'tokens': [50364, 4919, 13, 51046], 'temperature': 0.0, 'avg_logprob': -0.34890816662762614, 'compression_ratio': 1.0978260869565217, 'no_speech_prob': 0.1393119990825653}, {'id': 331, 'seek': 184942, 'start': 1863.0600000000002, 'end': 1866.52, 'text': ' Yes because I am creating executable.', 'tokens': [51046, 1079, 570, 286, 669, 4084, 7568, 712, 13, 51219], 'temperature': 0.0, 'avg_logprob': -0.34890816662762614, 'compression_ratio': 1.0978260869565217, 'no_speech_prob': 0.1393119990825653}, {'id': 332, 'seek': 184942, 'start': 1866.52, 'end': 1871.5, 'text': ' So now I have a client.c compiled.', 'tokens': [51219, 407, 586, 286, 362, 257, 6423, 13, 66, 36548, 13, 51468], 'temperature': 0.0, 'avg_logprob': -0.34890816662762614, 'compression_ratio': 1.0978260869565217, 'no_speech_prob': 0.1393119990825653}, {'id': 333, 'seek': 184942, 'start': 1871.5, 'end': 1876.3400000000001, 'text': ' Let me try to run it.', 'tokens': [51468, 961, 385, 853, 281, 1190, 309, 13, 51710], 'temperature': 0.0, 'avg_logprob': -0.34890816662762614, 'compression_ratio': 1.0978260869565217, 'no_speech_prob': 0.1393119990825653}, {'id': 334, 'seek': 187634, 'start': 1876.34, 'end': 1881.8999999999999, 'text': " It didn't run.", 'tokens': [50364, 467, 994, 380, 1190, 13, 50642], 'temperature': 0.0, 'avg_logprob': -0.2533825079600016, 'compression_ratio': 1.411764705882353, 'no_speech_prob': 0.1851351112127304}, {'id': 335, 'seek': 187634, 'start': 1881.8999999999999, 'end': 1889.06, 'text': " It's saying while loading libraries libmy.so cannot open shared object file, no such file", 'tokens': [50642, 467, 311, 1566, 1339, 15114, 15148, 22854, 2226, 13, 539, 2644, 1269, 5507, 2657, 3991, 11, 572, 1270, 3991, 51000], 'temperature': 0.0, 'avg_logprob': -0.2533825079600016, 'compression_ratio': 1.411764705882353, 'no_speech_prob': 0.1851351112127304}, {'id': 336, 'seek': 187634, 'start': 1889.06, 'end': 1895.26, 'text': ' or direct.', 'tokens': [51000, 420, 2047, 13, 51310], 'temperature': 0.0, 'avg_logprob': -0.2533825079600016, 'compression_ratio': 1.411764705882353, 'no_speech_prob': 0.1851351112127304}, {'id': 337, 'seek': 187634, 'start': 1895.26, 'end': 1902.78, 'text': ' So simply being able to create library and specify it at compile time does not allow', 'tokens': [51310, 407, 2935, 885, 1075, 281, 1884, 6405, 293, 16500, 309, 412, 31413, 565, 775, 406, 2089, 51686], 'temperature': 0.0, 'avg_logprob': -0.2533825079600016, 'compression_ratio': 1.411764705882353, 'no_speech_prob': 0.1851351112127304}, {'id': 338, 'seek': 187634, 'start': 1902.78, 'end': 1904.54, 'text': ' me to use that.', 'tokens': [51686, 385, 281, 764, 300, 13, 51774], 'temperature': 0.0, 'avg_logprob': -0.2533825079600016, 'compression_ratio': 1.411764705882353, 'no_speech_prob': 0.1851351112127304}, {'id': 339, 'seek': 190454, 'start': 1904.54, 'end': 1907.74, 'text': ' Something else needs to be done.', 'tokens': [50364, 6595, 1646, 2203, 281, 312, 1096, 13, 50524], 'temperature': 0.0, 'avg_logprob': -0.23361688000815256, 'compression_ratio': 1.5298013245033113, 'no_speech_prob': 0.5380799174308777}, {'id': 340, 'seek': 190454, 'start': 1907.74, 'end': 1914.96, 'text': ' So unlike static libraries, you need to install dynamic libraries.', 'tokens': [50524, 407, 8343, 13437, 15148, 11, 291, 643, 281, 3625, 8546, 15148, 13, 50885], 'temperature': 0.0, 'avg_logprob': -0.23361688000815256, 'compression_ratio': 1.5298013245033113, 'no_speech_prob': 0.5380799174308777}, {'id': 341, 'seek': 190454, 'start': 1914.96, 'end': 1922.3, 'text': ' And installation means you have to copy them at some standard location like userlib or', 'tokens': [50885, 400, 13260, 1355, 291, 362, 281, 5055, 552, 412, 512, 3832, 4914, 411, 4195, 38270, 420, 51252], 'temperature': 0.0, 'avg_logprob': -0.23361688000815256, 'compression_ratio': 1.5298013245033113, 'no_speech_prob': 0.5380799174308777}, {'id': 342, 'seek': 190454, 'start': 1922.3, 'end': 1928.22, 'text': ' something and run a command called ldconfig.', 'tokens': [51252, 746, 293, 1190, 257, 5622, 1219, 287, 67, 1671, 20646, 13, 51548], 'temperature': 0.0, 'avg_logprob': -0.23361688000815256, 'compression_ratio': 1.5298013245033113, 'no_speech_prob': 0.5380799174308777}, {'id': 343, 'seek': 192822, 'start': 1928.22, 'end': 1938.82, 'text': ' So you have to put your shared library at some specific location to be able to use that.', 'tokens': [50364, 407, 291, 362, 281, 829, 428, 5507, 6405, 412, 512, 2685, 4914, 281, 312, 1075, 281, 764, 300, 13, 50894], 'temperature': 0.0, 'avg_logprob': -0.16092378121835213, 'compression_ratio': 1.5547945205479452, 'no_speech_prob': 0.08743125945329666}, {'id': 344, 'seek': 192822, 'start': 1938.82, 'end': 1945.42, 'text': ' The other option is essentially when you are compiling your program, you specify where', 'tokens': [50894, 440, 661, 3614, 307, 4476, 562, 291, 366, 715, 4883, 428, 1461, 11, 291, 16500, 689, 51224], 'temperature': 0.0, 'avg_logprob': -0.16092378121835213, 'compression_ratio': 1.5547945205479452, 'no_speech_prob': 0.08743125945329666}, {'id': 345, 'seek': 192822, 'start': 1945.42, 'end': 1950.8600000000001, 'text': ' to search the shared library using dash wl command.', 'tokens': [51224, 281, 3164, 264, 5507, 6405, 1228, 8240, 261, 75, 5622, 13, 51496], 'temperature': 0.0, 'avg_logprob': -0.16092378121835213, 'compression_ratio': 1.5547945205479452, 'no_speech_prob': 0.08743125945329666}, {'id': 346, 'seek': 195086, 'start': 1950.86, 'end': 1966.8999999999999, 'text': ' So other option we have is we can use dash wl, dash rpath with dot.', 'tokens': [50364, 407, 661, 3614, 321, 362, 307, 321, 393, 764, 8240, 261, 75, 11, 8240, 367, 31852, 365, 5893, 13, 51166], 'temperature': 0.0, 'avg_logprob': -0.1544071888101512, 'compression_ratio': 1.4154929577464788, 'no_speech_prob': 0.0372854545712471}, {'id': 347, 'seek': 195086, 'start': 1966.8999999999999, 'end': 1973.9399999999998, 'text': ' And now when I run it, it actually worked.', 'tokens': [51166, 400, 586, 562, 286, 1190, 309, 11, 309, 767, 2732, 13, 51518], 'temperature': 0.0, 'avg_logprob': -0.1544071888101512, 'compression_ratio': 1.4154929577464788, 'no_speech_prob': 0.0372854545712471}, {'id': 348, 'seek': 195086, 'start': 1973.9399999999998, 'end': 1980.6, 'text': ' So dash rpath says that at compile time, this is the hard coded location where I must look', 'tokens': [51518, 407, 8240, 367, 31852, 1619, 300, 412, 31413, 565, 11, 341, 307, 264, 1152, 34874, 4914, 689, 286, 1633, 574, 51851], 'temperature': 0.0, 'avg_logprob': -0.1544071888101512, 'compression_ratio': 1.4154929577464788, 'no_speech_prob': 0.0372854545712471}, {'id': 349, 'seek': 198060, 'start': 1980.6, 'end': 1984.3, 'text': ' for my shared library.', 'tokens': [50364, 337, 452, 5507, 6405, 13, 50549], 'temperature': 0.0, 'avg_logprob': -0.11271717283460829, 'compression_ratio': 1.7389162561576355, 'no_speech_prob': 0.0062865205109119415}, {'id': 350, 'seek': 198060, 'start': 1984.3, 'end': 1991.6999999999998, 'text': ' Now if the shared library is not present at this specific path, it is not going to work.', 'tokens': [50549, 823, 498, 264, 5507, 6405, 307, 406, 1974, 412, 341, 2685, 3100, 11, 309, 307, 406, 516, 281, 589, 13, 50919], 'temperature': 0.0, 'avg_logprob': -0.11271717283460829, 'compression_ratio': 1.7389162561576355, 'no_speech_prob': 0.0062865205109119415}, {'id': 351, 'seek': 198060, 'start': 1991.6999999999998, 'end': 1997.3, 'text': ' So it is restrictive from that point of view because at compile time you are saying look', 'tokens': [50919, 407, 309, 307, 43220, 490, 300, 935, 295, 1910, 570, 412, 31413, 565, 291, 366, 1566, 574, 51199], 'temperature': 0.0, 'avg_logprob': -0.11271717283460829, 'compression_ratio': 1.7389162561576355, 'no_speech_prob': 0.0062865205109119415}, {'id': 352, 'seek': 198060, 'start': 1997.3, 'end': 2000.78, 'text': ' for library which is present only at this specific path.', 'tokens': [51199, 337, 6405, 597, 307, 1974, 787, 412, 341, 2685, 3100, 13, 51373], 'temperature': 0.0, 'avg_logprob': -0.11271717283460829, 'compression_ratio': 1.7389162561576355, 'no_speech_prob': 0.0062865205109119415}, {'id': 353, 'seek': 198060, 'start': 2000.78, 'end': 2004.3799999999999, 'text': ' If it is present in any other path, it does not matter.', 'tokens': [51373, 759, 309, 307, 1974, 294, 604, 661, 3100, 11, 309, 775, 406, 1871, 13, 51553], 'temperature': 0.0, 'avg_logprob': -0.11271717283460829, 'compression_ratio': 1.7389162561576355, 'no_speech_prob': 0.0062865205109119415}, {'id': 354, 'seek': 198060, 'start': 2004.3799999999999, 'end': 2008.8999999999999, 'text': ' So this is kind of a problematic thing.', 'tokens': [51553, 407, 341, 307, 733, 295, 257, 19011, 551, 13, 51779], 'temperature': 0.0, 'avg_logprob': -0.11271717283460829, 'compression_ratio': 1.7389162561576355, 'no_speech_prob': 0.0062865205109119415}, {'id': 355, 'seek': 200890, 'start': 2008.9, 'end': 2016.5800000000002, 'text': ' So the other option is actually being able to use something called as ld library path.', 'tokens': [50364, 407, 264, 661, 3614, 307, 767, 885, 1075, 281, 764, 746, 1219, 382, 287, 67, 6405, 3100, 13, 50748], 'temperature': 0.0, 'avg_logprob': -0.18290438652038574, 'compression_ratio': 1.6424581005586592, 'no_speech_prob': 0.11853983998298645}, {'id': 356, 'seek': 200890, 'start': 2016.5800000000002, 'end': 2025.64, 'text': ' So you can say export ld library path and specify the path at runtime and then it will', 'tokens': [50748, 407, 291, 393, 584, 10725, 287, 67, 6405, 3100, 293, 16500, 264, 3100, 412, 34474, 293, 550, 309, 486, 51201], 'temperature': 0.0, 'avg_logprob': -0.18290438652038574, 'compression_ratio': 1.6424581005586592, 'no_speech_prob': 0.11853983998298645}, {'id': 357, 'seek': 200890, 'start': 2025.64, 'end': 2027.14, 'text': ' run.', 'tokens': [51201, 1190, 13, 51276], 'temperature': 0.0, 'avg_logprob': -0.18290438652038574, 'compression_ratio': 1.6424581005586592, 'no_speech_prob': 0.11853983998298645}, {'id': 358, 'seek': 200890, 'start': 2027.14, 'end': 2032.8600000000001, 'text': ' Now even if I put libmy.so at some other location, I will just change my ld library path and it', 'tokens': [51276, 823, 754, 498, 286, 829, 22854, 2226, 13, 539, 412, 512, 661, 4914, 11, 286, 486, 445, 1319, 452, 287, 67, 6405, 3100, 293, 309, 51562], 'temperature': 0.0, 'avg_logprob': -0.18290438652038574, 'compression_ratio': 1.6424581005586592, 'no_speech_prob': 0.11853983998298645}, {'id': 359, 'seek': 200890, 'start': 2032.8600000000001, 'end': 2034.4, 'text': ' will start working.', 'tokens': [51562, 486, 722, 1364, 13, 51639], 'temperature': 0.0, 'avg_logprob': -0.18290438652038574, 'compression_ratio': 1.6424581005586592, 'no_speech_prob': 0.11853983998298645}, {'id': 360, 'seek': 203440, 'start': 2034.4, 'end': 2038.16, 'text': ' Yeah, no that is okay.', 'tokens': [50364, 865, 11, 572, 300, 307, 1392, 13, 50552], 'temperature': 0.0, 'avg_logprob': -0.26384619120005015, 'compression_ratio': 1.5146198830409356, 'no_speech_prob': 0.13975507020950317}, {'id': 361, 'seek': 203440, 'start': 2038.16, 'end': 2044.0400000000002, 'text': ' You are going into, so the shell instance in which you are running must have ld library', 'tokens': [50552, 509, 366, 516, 666, 11, 370, 264, 8720, 5197, 294, 597, 291, 366, 2614, 1633, 362, 287, 67, 6405, 50846], 'temperature': 0.0, 'avg_logprob': -0.26384619120005015, 'compression_ratio': 1.5146198830409356, 'no_speech_prob': 0.13975507020950317}, {'id': 362, 'seek': 203440, 'start': 2044.0400000000002, 'end': 2045.5400000000002, 'text': ' path set.', 'tokens': [50846, 3100, 992, 13, 50921], 'temperature': 0.0, 'avg_logprob': -0.26384619120005015, 'compression_ratio': 1.5146198830409356, 'no_speech_prob': 0.13975507020950317}, {'id': 363, 'seek': 203440, 'start': 2045.5400000000002, 'end': 2051.0, 'text': ' So that is a different problem what you are trying to say.', 'tokens': [50921, 407, 300, 307, 257, 819, 1154, 437, 291, 366, 1382, 281, 584, 13, 51194], 'temperature': 0.0, 'avg_logprob': -0.26384619120005015, 'compression_ratio': 1.5146198830409356, 'no_speech_prob': 0.13975507020950317}, {'id': 364, 'seek': 203440, 'start': 2051.0, 'end': 2052.0, 'text': ' Is it clear?', 'tokens': [51194, 1119, 309, 1850, 30, 51244], 'temperature': 0.0, 'avg_logprob': -0.26384619120005015, 'compression_ratio': 1.5146198830409356, 'no_speech_prob': 0.13975507020950317}, {'id': 365, 'seek': 203440, 'start': 2052.0, 'end': 2057.86, 'text': ' So see what happened is static library was part of the executable.', 'tokens': [51244, 407, 536, 437, 2011, 307, 13437, 6405, 390, 644, 295, 264, 7568, 712, 13, 51537], 'temperature': 0.0, 'avg_logprob': -0.26384619120005015, 'compression_ratio': 1.5146198830409356, 'no_speech_prob': 0.13975507020950317}, {'id': 366, 'seek': 205786, 'start': 2057.86, 'end': 2064.6400000000003, 'text': ' So when it was being run, loader did not have to search where to look for function foo because', 'tokens': [50364, 407, 562, 309, 390, 885, 1190, 11, 3677, 260, 630, 406, 362, 281, 3164, 689, 281, 574, 337, 2445, 726, 78, 570, 50703], 'temperature': 0.0, 'avg_logprob': -0.16236513923196233, 'compression_ratio': 1.6116504854368932, 'no_speech_prob': 0.1437949687242508}, {'id': 367, 'seek': 205786, 'start': 2064.6400000000003, 'end': 2066.78, 'text': ' it was part of the executable.', 'tokens': [50703, 309, 390, 644, 295, 264, 7568, 712, 13, 50810], 'temperature': 0.0, 'avg_logprob': -0.16236513923196233, 'compression_ratio': 1.6116504854368932, 'no_speech_prob': 0.1437949687242508}, {'id': 368, 'seek': 205786, 'start': 2066.78, 'end': 2071.6200000000003, 'text': ' But that is strictly different in case of dynamic libraries because dynamic libraries', 'tokens': [50810, 583, 300, 307, 20792, 819, 294, 1389, 295, 8546, 15148, 570, 8546, 15148, 51052], 'temperature': 0.0, 'avg_logprob': -0.16236513923196233, 'compression_ratio': 1.6116504854368932, 'no_speech_prob': 0.1437949687242508}, {'id': 369, 'seek': 205786, 'start': 2071.6200000000003, 'end': 2074.6800000000003, 'text': ' get me are loaded at runtime.', 'tokens': [51052, 483, 385, 366, 13210, 412, 34474, 13, 51205], 'temperature': 0.0, 'avg_logprob': -0.16236513923196233, 'compression_ratio': 1.6116504854368932, 'no_speech_prob': 0.1437949687242508}, {'id': 370, 'seek': 205786, 'start': 2074.6800000000003, 'end': 2080.6200000000003, 'text': ' So dynamic loader needs to know where is this library present.', 'tokens': [51205, 407, 8546, 3677, 260, 2203, 281, 458, 689, 307, 341, 6405, 1974, 13, 51502], 'temperature': 0.0, 'avg_logprob': -0.16236513923196233, 'compression_ratio': 1.6116504854368932, 'no_speech_prob': 0.1437949687242508}, {'id': 371, 'seek': 205786, 'start': 2080.6200000000003, 'end': 2083.28, 'text': ' Where should I find my foo?', 'tokens': [51502, 2305, 820, 286, 915, 452, 726, 78, 30, 51635], 'temperature': 0.0, 'avg_logprob': -0.16236513923196233, 'compression_ratio': 1.6116504854368932, 'no_speech_prob': 0.1437949687242508}, {'id': 372, 'seek': 208328, 'start': 2083.28, 'end': 2088.84, 'text': ' And it finds it by looking at some libraries which are at standard location.', 'tokens': [50364, 400, 309, 10704, 309, 538, 1237, 412, 512, 15148, 597, 366, 412, 3832, 4914, 13, 50642], 'temperature': 0.0, 'avg_logprob': -0.17416026466771176, 'compression_ratio': 1.7302325581395348, 'no_speech_prob': 0.28095296025276184}, {'id': 373, 'seek': 208328, 'start': 2088.84, 'end': 2093.6200000000003, 'text': ' Otherwise if while compiling you had hard coded the path using r path, then it will', 'tokens': [50642, 10328, 498, 1339, 715, 4883, 291, 632, 1152, 34874, 264, 3100, 1228, 367, 3100, 11, 550, 309, 486, 50881], 'temperature': 0.0, 'avg_logprob': -0.17416026466771176, 'compression_ratio': 1.7302325581395348, 'no_speech_prob': 0.28095296025276184}, {'id': 374, 'seek': 208328, 'start': 2093.6200000000003, 'end': 2095.3, 'text': ' look for that.', 'tokens': [50881, 574, 337, 300, 13, 50965], 'temperature': 0.0, 'avg_logprob': -0.17416026466771176, 'compression_ratio': 1.7302325581395348, 'no_speech_prob': 0.28095296025276184}, {'id': 375, 'seek': 208328, 'start': 2095.3, 'end': 2098.7200000000003, 'text': ' Otherwise it will look for ld library path.', 'tokens': [50965, 10328, 309, 486, 574, 337, 287, 67, 6405, 3100, 13, 51136], 'temperature': 0.0, 'avg_logprob': -0.17416026466771176, 'compression_ratio': 1.7302325581395348, 'no_speech_prob': 0.28095296025276184}, {'id': 376, 'seek': 208328, 'start': 2098.7200000000003, 'end': 2102.5600000000004, 'text': ' Now how do you find out what all an executable depends on?', 'tokens': [51136, 823, 577, 360, 291, 915, 484, 437, 439, 364, 7568, 712, 5946, 322, 30, 51328], 'temperature': 0.0, 'avg_logprob': -0.17416026466771176, 'compression_ratio': 1.7302325581395348, 'no_speech_prob': 0.28095296025276184}, {'id': 377, 'seek': 208328, 'start': 2102.5600000000004, 'end': 2111.6000000000004, 'text': ' So you can do a command called ldd which says list out all the libraries which will be loaded', 'tokens': [51328, 407, 291, 393, 360, 257, 5622, 1219, 287, 24810, 597, 1619, 1329, 484, 439, 264, 15148, 597, 486, 312, 13210, 51780], 'temperature': 0.0, 'avg_logprob': -0.17416026466771176, 'compression_ratio': 1.7302325581395348, 'no_speech_prob': 0.28095296025276184}, {'id': 378, 'seek': 211160, 'start': 2111.6, 'end': 2116.36, 'text': ' dynamically by this program.', 'tokens': [50364, 43492, 538, 341, 1461, 13, 50602], 'temperature': 0.0, 'avg_logprob': -0.2054493878338788, 'compression_ratio': 1.6413793103448275, 'no_speech_prob': 0.2621675133705139}, {'id': 379, 'seek': 211160, 'start': 2116.36, 'end': 2123.96, 'text': ' So there is something called as Linux gate, then there is something called libmyso, libc', 'tokens': [50602, 407, 456, 307, 746, 1219, 382, 18734, 8539, 11, 550, 456, 307, 746, 1219, 22854, 2226, 539, 11, 22854, 66, 50982], 'temperature': 0.0, 'avg_logprob': -0.2054493878338788, 'compression_ratio': 1.6413793103448275, 'no_speech_prob': 0.2621675133705139}, {'id': 380, 'seek': 211160, 'start': 2123.96, 'end': 2127.8399999999997, 'text': ' and then there is this ldlinux.', 'tokens': [50982, 293, 550, 456, 307, 341, 287, 67, 5045, 2449, 13, 51176], 'temperature': 0.0, 'avg_logprob': -0.2054493878338788, 'compression_ratio': 1.6413793103448275, 'no_speech_prob': 0.2621675133705139}, {'id': 381, 'seek': 211160, 'start': 2127.8399999999997, 'end': 2129.2999999999997, 'text': ' Now let us try this.', 'tokens': [51176, 823, 718, 505, 853, 341, 13, 51249], 'temperature': 0.0, 'avg_logprob': -0.2054493878338788, 'compression_ratio': 1.6413793103448275, 'no_speech_prob': 0.2621675133705139}, {'id': 382, 'seek': 211160, 'start': 2129.2999999999997, 'end': 2138.14, 'text': ' So let us say I do not set my ld library path and I try to run ldd.', 'tokens': [51249, 407, 718, 505, 584, 286, 360, 406, 992, 452, 287, 67, 6405, 3100, 293, 286, 853, 281, 1190, 287, 24810, 13, 51691], 'temperature': 0.0, 'avg_logprob': -0.2054493878338788, 'compression_ratio': 1.6413793103448275, 'no_speech_prob': 0.2621675133705139}, {'id': 383, 'seek': 213814, 'start': 2138.14, 'end': 2142.2799999999997, 'text': ' Now it says libmy.so not found.', 'tokens': [50364, 823, 309, 1619, 22854, 2226, 13, 539, 406, 1352, 13, 50571], 'temperature': 0.0, 'avg_logprob': -0.1678931559991399, 'compression_ratio': 1.7627906976744185, 'no_speech_prob': 0.09199279546737671}, {'id': 384, 'seek': 213814, 'start': 2142.2799999999997, 'end': 2148.22, 'text': ' So it was not able to find and that is when I try to run this executable now I will get', 'tokens': [50571, 407, 309, 390, 406, 1075, 281, 915, 293, 300, 307, 562, 286, 853, 281, 1190, 341, 7568, 712, 586, 286, 486, 483, 50868], 'temperature': 0.0, 'avg_logprob': -0.1678931559991399, 'compression_ratio': 1.7627906976744185, 'no_speech_prob': 0.09199279546737671}, {'id': 385, 'seek': 213814, 'start': 2148.22, 'end': 2152.2999999999997, 'text': ' that error that I could not load what is libmy.so.', 'tokens': [50868, 300, 6713, 300, 286, 727, 406, 3677, 437, 307, 22854, 2226, 13, 539, 13, 51072], 'temperature': 0.0, 'avg_logprob': -0.1678931559991399, 'compression_ratio': 1.7627906976744185, 'no_speech_prob': 0.09199279546737671}, {'id': 386, 'seek': 213814, 'start': 2152.2999999999997, 'end': 2158.3399999999997, 'text': ' So if you are any time getting this error, try to look what does ldd show and whether', 'tokens': [51072, 407, 498, 291, 366, 604, 565, 1242, 341, 6713, 11, 853, 281, 574, 437, 775, 287, 24810, 855, 293, 1968, 51374], 'temperature': 0.0, 'avg_logprob': -0.1678931559991399, 'compression_ratio': 1.7627906976744185, 'no_speech_prob': 0.09199279546737671}, {'id': 387, 'seek': 213814, 'start': 2158.3399999999997, 'end': 2161.16, 'text': ' ldd is able to look up these paths.', 'tokens': [51374, 287, 24810, 307, 1075, 281, 574, 493, 613, 14518, 13, 51515], 'temperature': 0.0, 'avg_logprob': -0.1678931559991399, 'compression_ratio': 1.7627906976744185, 'no_speech_prob': 0.09199279546737671}, {'id': 388, 'seek': 213814, 'start': 2161.16, 'end': 2165.2599999999998, 'text': ' If it is not then you are guaranteed to get this error and then you have to set either', 'tokens': [51515, 759, 309, 307, 406, 550, 291, 366, 18031, 281, 483, 341, 6713, 293, 550, 291, 362, 281, 992, 2139, 51720], 'temperature': 0.0, 'avg_logprob': -0.1678931559991399, 'compression_ratio': 1.7627906976744185, 'no_speech_prob': 0.09199279546737671}, {'id': 389, 'seek': 216526, 'start': 2165.26, 'end': 2176.1400000000003, 'text': ' ldd library path or change your rl path to point to that.', 'tokens': [50364, 287, 24810, 6405, 3100, 420, 1319, 428, 367, 75, 3100, 281, 935, 281, 300, 13, 50908], 'temperature': 0.0, 'avg_logprob': -0.1857453849580553, 'compression_ratio': 1.572289156626506, 'no_speech_prob': 0.49957579374313354}, {'id': 390, 'seek': 216526, 'start': 2176.1400000000003, 'end': 2180.76, 'text': ' So essentially what loader is going to do, it is going to find all the directories which', 'tokens': [50908, 407, 4476, 437, 3677, 260, 307, 516, 281, 360, 11, 309, 307, 516, 281, 915, 439, 264, 5391, 530, 597, 51139], 'temperature': 0.0, 'avg_logprob': -0.1857453849580553, 'compression_ratio': 1.572289156626506, 'no_speech_prob': 0.49957579374313354}, {'id': 391, 'seek': 216526, 'start': 2180.76, 'end': 2185.2400000000002, 'text': ' are listed in etcld.so.conf.', 'tokens': [51139, 366, 10052, 294, 1030, 66, 348, 13, 539, 13, 24697, 13, 51363], 'temperature': 0.0, 'avg_logprob': -0.1857453849580553, 'compression_ratio': 1.572289156626506, 'no_speech_prob': 0.49957579374313354}, {'id': 392, 'seek': 216526, 'start': 2185.2400000000002, 'end': 2192.98, 'text': ' So this is the system variable file which can where you can add the default libraries', 'tokens': [51363, 407, 341, 307, 264, 1185, 7006, 3991, 597, 393, 689, 291, 393, 909, 264, 7576, 15148, 51750], 'temperature': 0.0, 'avg_logprob': -0.1857453849580553, 'compression_ratio': 1.572289156626506, 'no_speech_prob': 0.49957579374313354}, {'id': 393, 'seek': 219298, 'start': 2192.98, 'end': 2200.78, 'text': ' of where to find them and then you can have either r path configuration or ld library', 'tokens': [50364, 295, 689, 281, 915, 552, 293, 550, 291, 393, 362, 2139, 367, 3100, 11694, 420, 287, 67, 6405, 50754], 'temperature': 0.0, 'avg_logprob': -0.22792110802992335, 'compression_ratio': 1.4573643410852712, 'no_speech_prob': 0.7536343932151794}, {'id': 394, 'seek': 219298, 'start': 2200.78, 'end': 2204.86, 'text': " path to have the dso's looked up.", 'tokens': [50754, 3100, 281, 362, 264, 274, 539, 311, 2956, 493, 13, 50958], 'temperature': 0.0, 'avg_logprob': -0.22792110802992335, 'compression_ratio': 1.4573643410852712, 'no_speech_prob': 0.7536343932151794}, {'id': 395, 'seek': 219298, 'start': 2204.86, 'end': 2219.58, 'text': ' Now can someone guess why we have r path as well as ld library path?', 'tokens': [50958, 823, 393, 1580, 2041, 983, 321, 362, 367, 3100, 382, 731, 382, 287, 67, 6405, 3100, 30, 51694], 'temperature': 0.0, 'avg_logprob': -0.22792110802992335, 'compression_ratio': 1.4573643410852712, 'no_speech_prob': 0.7536343932151794}, {'id': 396, 'seek': 221958, 'start': 2219.58, 'end': 2222.94, 'text': ' So ld library path what it allows you?', 'tokens': [50364, 407, 287, 67, 6405, 3100, 437, 309, 4045, 291, 30, 50532], 'temperature': 0.0, 'avg_logprob': -0.14554670878819057, 'compression_ratio': 1.7894736842105263, 'no_speech_prob': 0.5291088223457336}, {'id': 397, 'seek': 221958, 'start': 2222.94, 'end': 2228.02, 'text': ' It allows you to configure changing the library which is being loaded.', 'tokens': [50532, 467, 4045, 291, 281, 22162, 4473, 264, 6405, 597, 307, 885, 13210, 13, 50786], 'temperature': 0.0, 'avg_logprob': -0.14554670878819057, 'compression_ratio': 1.7894736842105263, 'no_speech_prob': 0.5291088223457336}, {'id': 398, 'seek': 221958, 'start': 2228.02, 'end': 2232.5, 'text': ' So you may want to try with a different library and see running the things.', 'tokens': [50786, 407, 291, 815, 528, 281, 853, 365, 257, 819, 6405, 293, 536, 2614, 264, 721, 13, 51010], 'temperature': 0.0, 'avg_logprob': -0.14554670878819057, 'compression_ratio': 1.7894736842105263, 'no_speech_prob': 0.5291088223457336}, {'id': 399, 'seek': 221958, 'start': 2232.5, 'end': 2236.58, 'text': ' But all of this activity is typically during development.', 'tokens': [51010, 583, 439, 295, 341, 5191, 307, 5850, 1830, 3250, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.14554670878819057, 'compression_ratio': 1.7894736842105263, 'no_speech_prob': 0.5291088223457336}, {'id': 400, 'seek': 221958, 'start': 2236.58, 'end': 2242.98, 'text': ' But when you are shipping your software you do not want user to configure ld library path', 'tokens': [51214, 583, 562, 291, 366, 14122, 428, 4722, 291, 360, 406, 528, 4195, 281, 22162, 287, 67, 6405, 3100, 51534], 'temperature': 0.0, 'avg_logprob': -0.14554670878819057, 'compression_ratio': 1.7894736842105263, 'no_speech_prob': 0.5291088223457336}, {'id': 401, 'seek': 221958, 'start': 2242.98, 'end': 2248.7999999999997, 'text': ' and you do not want accidentally some other libmy.so get into the picture.', 'tokens': [51534, 293, 291, 360, 406, 528, 15715, 512, 661, 22854, 2226, 13, 539, 483, 666, 264, 3036, 13, 51825], 'temperature': 0.0, 'avg_logprob': -0.14554670878819057, 'compression_ratio': 1.7894736842105263, 'no_speech_prob': 0.5291088223457336}, {'id': 402, 'seek': 224880, 'start': 2248.8, 'end': 2256.32, 'text': ' So for example let us say you had shipped libmy.so which did linked list.', 'tokens': [50364, 407, 337, 1365, 718, 505, 584, 291, 632, 25312, 22854, 2226, 13, 539, 597, 630, 9408, 1329, 13, 50740], 'temperature': 0.0, 'avg_logprob': -0.15378920237223306, 'compression_ratio': 1.71875, 'no_speech_prob': 0.0068933842703700066}, {'id': 403, 'seek': 224880, 'start': 2256.32, 'end': 2261.8, 'text': ' Then there is another libmy.so which pretends to do linked list but is actually doing something', 'tokens': [50740, 1396, 456, 307, 1071, 22854, 2226, 13, 539, 597, 1162, 2581, 281, 360, 9408, 1329, 457, 307, 767, 884, 746, 51014], 'temperature': 0.0, 'avg_logprob': -0.15378920237223306, 'compression_ratio': 1.71875, 'no_speech_prob': 0.0068933842703700066}, {'id': 404, 'seek': 224880, 'start': 2261.8, 'end': 2268.6000000000004, 'text': ' malicious and you set ld library path to that and application will start running that.', 'tokens': [51014, 33496, 293, 291, 992, 287, 67, 6405, 3100, 281, 300, 293, 3861, 486, 722, 2614, 300, 13, 51354], 'temperature': 0.0, 'avg_logprob': -0.15378920237223306, 'compression_ratio': 1.71875, 'no_speech_prob': 0.0068933842703700066}, {'id': 405, 'seek': 224880, 'start': 2268.6000000000004, 'end': 2270.84, 'text': ' So you do not want that to happen.', 'tokens': [51354, 407, 291, 360, 406, 528, 300, 281, 1051, 13, 51466], 'temperature': 0.0, 'avg_logprob': -0.15378920237223306, 'compression_ratio': 1.71875, 'no_speech_prob': 0.0068933842703700066}, {'id': 406, 'seek': 224880, 'start': 2270.84, 'end': 2277.5, 'text': ' That is why when you are shipping your software along with a dso you will say please use this', 'tokens': [51466, 663, 307, 983, 562, 291, 366, 14122, 428, 4722, 2051, 365, 257, 274, 539, 291, 486, 584, 1767, 764, 341, 51799], 'temperature': 0.0, 'avg_logprob': -0.15378920237223306, 'compression_ratio': 1.71875, 'no_speech_prob': 0.0068933842703700066}, {'id': 407, 'seek': 227750, 'start': 2277.5, 'end': 2283.86, 'text': ' specific version only which is at this location and typically that might have some privilege', 'tokens': [50364, 2685, 3037, 787, 597, 307, 412, 341, 4914, 293, 5850, 300, 1062, 362, 512, 12122, 50682], 'temperature': 0.0, 'avg_logprob': -0.16448220899028163, 'compression_ratio': 1.719298245614035, 'no_speech_prob': 0.249966099858284}, {'id': 408, 'seek': 227750, 'start': 2283.86, 'end': 2285.26, 'text': ' for you to change.', 'tokens': [50682, 337, 291, 281, 1319, 13, 50752], 'temperature': 0.0, 'avg_logprob': -0.16448220899028163, 'compression_ratio': 1.719298245614035, 'no_speech_prob': 0.249966099858284}, {'id': 409, 'seek': 227750, 'start': 2285.26, 'end': 2286.58, 'text': ' So you may not be able to change.', 'tokens': [50752, 407, 291, 815, 406, 312, 1075, 281, 1319, 13, 50818], 'temperature': 0.0, 'avg_logprob': -0.16448220899028163, 'compression_ratio': 1.719298245614035, 'no_speech_prob': 0.249966099858284}, {'id': 410, 'seek': 227750, 'start': 2286.58, 'end': 2291.54, 'text': ' For example if it is installed in user then you need root permissions to overwrite a file', 'tokens': [50818, 1171, 1365, 498, 309, 307, 8899, 294, 4195, 550, 291, 643, 5593, 32723, 281, 670, 21561, 257, 3991, 51066], 'temperature': 0.0, 'avg_logprob': -0.16448220899028163, 'compression_ratio': 1.719298245614035, 'no_speech_prob': 0.249966099858284}, {'id': 411, 'seek': 227750, 'start': 2291.54, 'end': 2292.62, 'text': ' in that.', 'tokens': [51066, 294, 300, 13, 51120], 'temperature': 0.0, 'avg_logprob': -0.16448220899028163, 'compression_ratio': 1.719298245614035, 'no_speech_prob': 0.249966099858284}, {'id': 412, 'seek': 227750, 'start': 2292.62, 'end': 2294.66, 'text': ' So there is some security.', 'tokens': [51120, 407, 456, 307, 512, 3825, 13, 51222], 'temperature': 0.0, 'avg_logprob': -0.16448220899028163, 'compression_ratio': 1.719298245614035, 'no_speech_prob': 0.249966099858284}, {'id': 413, 'seek': 227750, 'start': 2294.66, 'end': 2296.34, 'text': ' Does that make sense?', 'tokens': [51222, 4402, 300, 652, 2020, 30, 51306], 'temperature': 0.0, 'avg_logprob': -0.16448220899028163, 'compression_ratio': 1.719298245614035, 'no_speech_prob': 0.249966099858284}, {'id': 414, 'seek': 227750, 'start': 2296.34, 'end': 2300.86, 'text': ' So ld library path is really useful when you are doing development because you might say', 'tokens': [51306, 407, 287, 67, 6405, 3100, 307, 534, 4420, 562, 291, 366, 884, 3250, 570, 291, 1062, 584, 51532], 'temperature': 0.0, 'avg_logprob': -0.16448220899028163, 'compression_ratio': 1.719298245614035, 'no_speech_prob': 0.249966099858284}, {'id': 415, 'seek': 227750, 'start': 2300.86, 'end': 2305.22, 'text': ' that okay I have this older version of the library let me try injecting new and whether', 'tokens': [51532, 300, 1392, 286, 362, 341, 4906, 3037, 295, 264, 6405, 718, 385, 853, 10711, 278, 777, 293, 1968, 51750], 'temperature': 0.0, 'avg_logprob': -0.16448220899028163, 'compression_ratio': 1.719298245614035, 'no_speech_prob': 0.249966099858284}, {'id': 416, 'seek': 227750, 'start': 2305.22, 'end': 2306.9, 'text': ' it works and so on.', 'tokens': [51750, 309, 1985, 293, 370, 322, 13, 51834], 'temperature': 0.0, 'avg_logprob': -0.16448220899028163, 'compression_ratio': 1.719298245614035, 'no_speech_prob': 0.249966099858284}, {'id': 417, 'seek': 230690, 'start': 2306.9, 'end': 2313.64, 'text': ' But when you are shipping something you will configure your build to have hard coded paths.', 'tokens': [50364, 583, 562, 291, 366, 14122, 746, 291, 486, 22162, 428, 1322, 281, 362, 1152, 34874, 14518, 13, 50701], 'temperature': 0.0, 'avg_logprob': -0.09554773761380103, 'compression_ratio': 1.6893617021276597, 'no_speech_prob': 0.002471323823556304}, {'id': 418, 'seek': 230690, 'start': 2313.64, 'end': 2318.58, 'text': ' Now let us examine what all goes into the dynamic shared object.', 'tokens': [50701, 823, 718, 505, 17496, 437, 439, 1709, 666, 264, 8546, 5507, 2657, 13, 50948], 'temperature': 0.0, 'avg_logprob': -0.09554773761380103, 'compression_ratio': 1.6893617021276597, 'no_speech_prob': 0.002471323823556304}, {'id': 419, 'seek': 230690, 'start': 2318.58, 'end': 2323.62, 'text': ' So remember yesterday I had told you that elf is a format which can be used to represent', 'tokens': [50948, 407, 1604, 5186, 286, 632, 1907, 291, 300, 35565, 307, 257, 7877, 597, 393, 312, 1143, 281, 2906, 51200], 'temperature': 0.0, 'avg_logprob': -0.09554773761380103, 'compression_ratio': 1.6893617021276597, 'no_speech_prob': 0.002471323823556304}, {'id': 420, 'seek': 230690, 'start': 2323.62, 'end': 2328.46, 'text': ' all three things executable, relocatable and dynamic shared.', 'tokens': [51200, 439, 1045, 721, 7568, 712, 11, 26981, 31415, 293, 8546, 5507, 13, 51442], 'temperature': 0.0, 'avg_logprob': -0.09554773761380103, 'compression_ratio': 1.6893617021276597, 'no_speech_prob': 0.002471323823556304}, {'id': 421, 'seek': 230690, 'start': 2328.46, 'end': 2335.26, 'text': ' So if you look at kind you will actually see dyn which says it is a dynamic shared object.', 'tokens': [51442, 407, 498, 291, 574, 412, 733, 291, 486, 767, 536, 274, 2534, 597, 1619, 309, 307, 257, 8546, 5507, 2657, 13, 51782], 'temperature': 0.0, 'avg_logprob': -0.09554773761380103, 'compression_ratio': 1.6893617021276597, 'no_speech_prob': 0.002471323823556304}, {'id': 422, 'seek': 233526, 'start': 2335.26, 'end': 2347.0600000000004, 'text': ' So if you look at redelf-h of libmy.so it is actually an elf file of type dynamic shared', 'tokens': [50364, 407, 498, 291, 574, 412, 2182, 1967, 12, 71, 295, 22854, 2226, 13, 539, 309, 307, 767, 364, 35565, 3991, 295, 2010, 8546, 5507, 50954], 'temperature': 0.0, 'avg_logprob': -0.17825349739619664, 'compression_ratio': 1.475, 'no_speech_prob': 0.029589451849460602}, {'id': 423, 'seek': 233526, 'start': 2347.0600000000004, 'end': 2348.38, 'text': ' object.', 'tokens': [50954, 2657, 13, 51020], 'temperature': 0.0, 'avg_logprob': -0.17825349739619664, 'compression_ratio': 1.475, 'no_speech_prob': 0.029589451849460602}, {'id': 424, 'seek': 233526, 'start': 2348.38, 'end': 2359.38, 'text': ' If you look at if you look this for a.out it is an elf file which is executable.', 'tokens': [51020, 759, 291, 574, 412, 498, 291, 574, 341, 337, 257, 13, 346, 309, 307, 364, 35565, 3991, 597, 307, 7568, 712, 13, 51570], 'temperature': 0.0, 'avg_logprob': -0.17825349739619664, 'compression_ratio': 1.475, 'no_speech_prob': 0.029589451849460602}, {'id': 425, 'seek': 235938, 'start': 2359.38, 'end': 2366.82, 'text': ' So elf holds the information that this elf is being described for a dynamic shared object.', 'tokens': [50364, 407, 35565, 9190, 264, 1589, 300, 341, 35565, 307, 885, 7619, 337, 257, 8546, 5507, 2657, 13, 50736], 'temperature': 0.0, 'avg_logprob': -0.13534597917036575, 'compression_ratio': 1.614864864864865, 'no_speech_prob': 0.01638052426278591}, {'id': 426, 'seek': 235938, 'start': 2366.82, 'end': 2370.7000000000003, 'text': ' Then there is entry point.', 'tokens': [50736, 1396, 456, 307, 8729, 935, 13, 50930], 'temperature': 0.0, 'avg_logprob': -0.13534597917036575, 'compression_ratio': 1.614864864864865, 'no_speech_prob': 0.01638052426278591}, {'id': 427, 'seek': 235938, 'start': 2370.7000000000003, 'end': 2379.7400000000002, 'text': ' Now entry point for dso is very interesting because entry point could be anything because', 'tokens': [50930, 823, 8729, 935, 337, 274, 539, 307, 588, 1880, 570, 8729, 935, 727, 312, 1340, 570, 51382], 'temperature': 0.0, 'avg_logprob': -0.13534597917036575, 'compression_ratio': 1.614864864864865, 'no_speech_prob': 0.01638052426278591}, {'id': 428, 'seek': 235938, 'start': 2379.7400000000002, 'end': 2383.06, 'text': ' it is being loaded dynamically.', 'tokens': [51382, 309, 307, 885, 13210, 43492, 13, 51548], 'temperature': 0.0, 'avg_logprob': -0.13534597917036575, 'compression_ratio': 1.614864864864865, 'no_speech_prob': 0.01638052426278591}, {'id': 429, 'seek': 238306, 'start': 2383.06, 'end': 2390.82, 'text': ' So depending on where is the space in the memory mapped region it will get loaded.', 'tokens': [50364, 407, 5413, 322, 689, 307, 264, 1901, 294, 264, 4675, 33318, 4458, 309, 486, 483, 13210, 13, 50752], 'temperature': 0.0, 'avg_logprob': -0.15165071709211483, 'compression_ratio': 1.6865671641791045, 'no_speech_prob': 0.03961292281746864}, {'id': 430, 'seek': 238306, 'start': 2390.82, 'end': 2392.62, 'text': ' Does everyone understand this?', 'tokens': [50752, 4402, 1518, 1223, 341, 30, 50842], 'temperature': 0.0, 'avg_logprob': -0.15165071709211483, 'compression_ratio': 1.6865671641791045, 'no_speech_prob': 0.03961292281746864}, {'id': 431, 'seek': 238306, 'start': 2392.62, 'end': 2399.84, 'text': ' Because let us say you are running your program and you have so much data and some usage of', 'tokens': [50842, 1436, 718, 505, 584, 291, 366, 2614, 428, 1461, 293, 291, 362, 370, 709, 1412, 293, 512, 14924, 295, 51203], 'temperature': 0.0, 'avg_logprob': -0.15165071709211483, 'compression_ratio': 1.6865671641791045, 'no_speech_prob': 0.03961292281746864}, {'id': 432, 'seek': 238306, 'start': 2399.84, 'end': 2401.66, 'text': ' stack and so on.', 'tokens': [51203, 8630, 293, 370, 322, 13, 51294], 'temperature': 0.0, 'avg_logprob': -0.15165071709211483, 'compression_ratio': 1.6865671641791045, 'no_speech_prob': 0.03961292281746864}, {'id': 433, 'seek': 238306, 'start': 2401.66, 'end': 2406.42, 'text': ' Then the dso needs to be in the memory mapped region and there might be multiple dsos which', 'tokens': [51294, 1396, 264, 274, 539, 2203, 281, 312, 294, 264, 4675, 33318, 4458, 293, 456, 1062, 312, 3866, 274, 82, 329, 597, 51532], 'temperature': 0.0, 'avg_logprob': -0.15165071709211483, 'compression_ratio': 1.6865671641791045, 'no_speech_prob': 0.03961292281746864}, {'id': 434, 'seek': 238306, 'start': 2406.42, 'end': 2409.08, 'text': ' your program depends on.', 'tokens': [51532, 428, 1461, 5946, 322, 13, 51665], 'temperature': 0.0, 'avg_logprob': -0.15165071709211483, 'compression_ratio': 1.6865671641791045, 'no_speech_prob': 0.03961292281746864}, {'id': 435, 'seek': 240908, 'start': 2409.2, 'end': 2413.48, 'text': ' So every dso starting point might be different.', 'tokens': [50370, 407, 633, 274, 539, 2891, 935, 1062, 312, 819, 13, 50584], 'temperature': 0.0, 'avg_logprob': -0.1382050947709517, 'compression_ratio': 1.6219512195121952, 'no_speech_prob': 0.21670910716056824}, {'id': 436, 'seek': 240908, 'start': 2413.48, 'end': 2417.6, 'text': ' So the entry point address here is really from the start of the file.', 'tokens': [50584, 407, 264, 8729, 935, 2985, 510, 307, 534, 490, 264, 722, 295, 264, 3991, 13, 50790], 'temperature': 0.0, 'avg_logprob': -0.1382050947709517, 'compression_ratio': 1.6219512195121952, 'no_speech_prob': 0.21670910716056824}, {'id': 437, 'seek': 240908, 'start': 2417.6, 'end': 2419.7799999999997, 'text': ' It is nothing more.', 'tokens': [50790, 467, 307, 1825, 544, 13, 50899], 'temperature': 0.0, 'avg_logprob': -0.1382050947709517, 'compression_ratio': 1.6219512195121952, 'no_speech_prob': 0.21670910716056824}, {'id': 438, 'seek': 240908, 'start': 2419.7799999999997, 'end': 2429.16, 'text': ' So what this is saying is 3d0 is where the code starts from the start of the file.', 'tokens': [50899, 407, 437, 341, 307, 1566, 307, 805, 67, 15, 307, 689, 264, 3089, 3719, 490, 264, 722, 295, 264, 3991, 13, 51368], 'temperature': 0.0, 'avg_logprob': -0.1382050947709517, 'compression_ratio': 1.6219512195121952, 'no_speech_prob': 0.21670910716056824}, {'id': 439, 'seek': 240908, 'start': 2429.16, 'end': 2433.6, 'text': ' And how do we actually fix it?', 'tokens': [51368, 400, 577, 360, 321, 767, 3191, 309, 30, 51590], 'temperature': 0.0, 'avg_logprob': -0.1382050947709517, 'compression_ratio': 1.6219512195121952, 'no_speech_prob': 0.21670910716056824}, {'id': 440, 'seek': 240908, 'start': 2433.6, 'end': 2435.48, 'text': ' So relocation.', 'tokens': [51590, 407, 26981, 399, 13, 51684], 'temperature': 0.0, 'avg_logprob': -0.1382050947709517, 'compression_ratio': 1.6219512195121952, 'no_speech_prob': 0.21670910716056824}, {'id': 441, 'seek': 243548, 'start': 2435.48, 'end': 2440.72, 'text': ' So relocation will actually put it at some specific address and things will get changed', 'tokens': [50364, 407, 26981, 399, 486, 767, 829, 309, 412, 512, 2685, 2985, 293, 721, 486, 483, 3105, 50626], 'temperature': 0.0, 'avg_logprob': -0.14098035372220552, 'compression_ratio': 1.6872037914691944, 'no_speech_prob': 0.028822707012295723}, {'id': 442, 'seek': 243548, 'start': 2440.72, 'end': 2445.88, 'text': ' as part of that.', 'tokens': [50626, 382, 644, 295, 300, 13, 50884], 'temperature': 0.0, 'avg_logprob': -0.14098035372220552, 'compression_ratio': 1.6872037914691944, 'no_speech_prob': 0.028822707012295723}, {'id': 443, 'seek': 243548, 'start': 2445.88, 'end': 2449.6, 'text': ' Now if you look at it, so this is the code.', 'tokens': [50884, 823, 498, 291, 574, 412, 309, 11, 370, 341, 307, 264, 3089, 13, 51070], 'temperature': 0.0, 'avg_logprob': -0.14098035372220552, 'compression_ratio': 1.6872037914691944, 'no_speech_prob': 0.028822707012295723}, {'id': 444, 'seek': 243548, 'start': 2449.6, 'end': 2455.36, 'text': ' What this code is doing is it is accessing this global variable gbl and then some way', 'tokens': [51070, 708, 341, 3089, 307, 884, 307, 309, 307, 26440, 341, 4338, 7006, 290, 5199, 293, 550, 512, 636, 51358], 'temperature': 0.0, 'avg_logprob': -0.14098035372220552, 'compression_ratio': 1.6872037914691944, 'no_speech_prob': 0.028822707012295723}, {'id': 445, 'seek': 243548, 'start': 2455.36, 'end': 2457.2, 'text': ' adding that to parameters.', 'tokens': [51358, 5127, 300, 281, 9834, 13, 51450], 'temperature': 0.0, 'avg_logprob': -0.14098035372220552, 'compression_ratio': 1.6872037914691944, 'no_speech_prob': 0.028822707012295723}, {'id': 446, 'seek': 243548, 'start': 2457.2, 'end': 2464.16, 'text': ' Now if you look at the generated elf for it you would see that there are couple of relocations', 'tokens': [51450, 823, 498, 291, 574, 412, 264, 10833, 35565, 337, 309, 291, 576, 536, 300, 456, 366, 1916, 295, 26981, 763, 51798], 'temperature': 0.0, 'avg_logprob': -0.14098035372220552, 'compression_ratio': 1.6872037914691944, 'no_speech_prob': 0.028822707012295723}, {'id': 447, 'seek': 246416, 'start': 2464.16, 'end': 2466.6, 'text': ' here.', 'tokens': [50364, 510, 13, 50486], 'temperature': 0.0, 'avg_logprob': -0.15274768126638313, 'compression_ratio': 1.560693641618497, 'no_speech_prob': 0.004606814123690128}, {'id': 448, 'seek': 246416, 'start': 2466.6, 'end': 2470.92, 'text': ' Now these relocations are on the dynamic section.', 'tokens': [50486, 823, 613, 26981, 763, 366, 322, 264, 8546, 3541, 13, 50702], 'temperature': 0.0, 'avg_logprob': -0.15274768126638313, 'compression_ratio': 1.560693641618497, 'no_speech_prob': 0.004606814123690128}, {'id': 449, 'seek': 246416, 'start': 2470.92, 'end': 2480.7, 'text': ' And what they are saying is change address 500 with the address of gbl.', 'tokens': [50702, 400, 437, 436, 366, 1566, 307, 1319, 2985, 5923, 365, 264, 2985, 295, 290, 5199, 13, 51191], 'temperature': 0.0, 'avg_logprob': -0.15274768126638313, 'compression_ratio': 1.560693641618497, 'no_speech_prob': 0.004606814123690128}, {'id': 450, 'seek': 246416, 'start': 2480.7, 'end': 2482.2799999999997, 'text': ' What is at 500?', 'tokens': [51191, 708, 307, 412, 5923, 30, 51270], 'temperature': 0.0, 'avg_logprob': -0.15274768126638313, 'compression_ratio': 1.560693641618497, 'no_speech_prob': 0.004606814123690128}, {'id': 451, 'seek': 246416, 'start': 2482.2799999999997, 'end': 2487.12, 'text': ' We can see there are bunch of zeros.', 'tokens': [51270, 492, 393, 536, 456, 366, 3840, 295, 35193, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.15274768126638313, 'compression_ratio': 1.560693641618497, 'no_speech_prob': 0.004606814123690128}, {'id': 452, 'seek': 246416, 'start': 2487.12, 'end': 2493.8399999999997, 'text': ' So what this is going to do is dynamic linker when it is loading this library it is going', 'tokens': [51512, 407, 437, 341, 307, 516, 281, 360, 307, 8546, 2113, 260, 562, 309, 307, 15114, 341, 6405, 309, 307, 516, 51848], 'temperature': 0.0, 'avg_logprob': -0.15274768126638313, 'compression_ratio': 1.560693641618497, 'no_speech_prob': 0.004606814123690128}, {'id': 453, 'seek': 249384, 'start': 2493.84, 'end': 2500.96, 'text': ' to change these zeros with address of gbl.', 'tokens': [50364, 281, 1319, 613, 35193, 365, 2985, 295, 290, 5199, 13, 50720], 'temperature': 0.0, 'avg_logprob': -0.1249571961241883, 'compression_ratio': 1.8709677419354838, 'no_speech_prob': 0.006091409828513861}, {'id': 454, 'seek': 249384, 'start': 2500.96, 'end': 2508.2400000000002, 'text': ' Similarly here we see there is a relocation on 50a which is this.', 'tokens': [50720, 13157, 510, 321, 536, 456, 307, 257, 26981, 399, 322, 2625, 64, 597, 307, 341, 13, 51084], 'temperature': 0.0, 'avg_logprob': -0.1249571961241883, 'compression_ratio': 1.8709677419354838, 'no_speech_prob': 0.006091409828513861}, {'id': 455, 'seek': 249384, 'start': 2508.2400000000002, 'end': 2511.7200000000003, 'text': ' So this will also change with address of gbl.', 'tokens': [51084, 407, 341, 486, 611, 1319, 365, 2985, 295, 290, 5199, 13, 51258], 'temperature': 0.0, 'avg_logprob': -0.1249571961241883, 'compression_ratio': 1.8709677419354838, 'no_speech_prob': 0.006091409828513861}, {'id': 456, 'seek': 249384, 'start': 2511.7200000000003, 'end': 2515.02, 'text': ' Similarly this will also change with address of gbl.', 'tokens': [51258, 13157, 341, 486, 611, 1319, 365, 2985, 295, 290, 5199, 13, 51423], 'temperature': 0.0, 'avg_logprob': -0.1249571961241883, 'compression_ratio': 1.8709677419354838, 'no_speech_prob': 0.006091409828513861}, {'id': 457, 'seek': 249384, 'start': 2515.02, 'end': 2522.28, 'text': ' So every reference of gbl which was earlier, see because the same problem happens.', 'tokens': [51423, 407, 633, 6408, 295, 290, 5199, 597, 390, 3071, 11, 536, 570, 264, 912, 1154, 2314, 13, 51786], 'temperature': 0.0, 'avg_logprob': -0.1249571961241883, 'compression_ratio': 1.8709677419354838, 'no_speech_prob': 0.006091409828513861}, {'id': 458, 'seek': 252228, 'start': 2522.28, 'end': 2532.0800000000004, 'text': ' When linker is creating code for this does linker know where the gbl will go?', 'tokens': [50364, 1133, 2113, 260, 307, 4084, 3089, 337, 341, 775, 2113, 260, 458, 689, 264, 290, 5199, 486, 352, 30, 50854], 'temperature': 0.0, 'avg_logprob': -0.12266491032853911, 'compression_ratio': 1.6857142857142857, 'no_speech_prob': 0.05017099529504776}, {'id': 459, 'seek': 252228, 'start': 2532.0800000000004, 'end': 2537.1600000000003, 'text': ' Static linker does not know where gbl will go because the dynamic library may get loaded', 'tokens': [50854, 745, 2399, 2113, 260, 775, 406, 458, 689, 290, 5199, 486, 352, 570, 264, 8546, 6405, 815, 483, 13210, 51108], 'temperature': 0.0, 'avg_logprob': -0.12266491032853911, 'compression_ratio': 1.6857142857142857, 'no_speech_prob': 0.05017099529504776}, {'id': 460, 'seek': 252228, 'start': 2537.1600000000003, 'end': 2541.4, 'text': ' at different points in different processes.', 'tokens': [51108, 412, 819, 2793, 294, 819, 7555, 13, 51320], 'temperature': 0.0, 'avg_logprob': -0.12266491032853911, 'compression_ratio': 1.6857142857142857, 'no_speech_prob': 0.05017099529504776}, {'id': 461, 'seek': 252228, 'start': 2541.4, 'end': 2548.9, 'text': ' For example address of gbl in p1 might be 100 and address of gbl in p2 might be 500.', 'tokens': [51320, 1171, 1365, 2985, 295, 290, 5199, 294, 280, 16, 1062, 312, 2319, 293, 2985, 295, 290, 5199, 294, 280, 17, 1062, 312, 5923, 13, 51695], 'temperature': 0.0, 'avg_logprob': -0.12266491032853911, 'compression_ratio': 1.6857142857142857, 'no_speech_prob': 0.05017099529504776}, {'id': 462, 'seek': 254890, 'start': 2548.9, 'end': 2553.98, 'text': ' So you cannot change this to 100 or 500 at link time.', 'tokens': [50364, 407, 291, 2644, 1319, 341, 281, 2319, 420, 5923, 412, 2113, 565, 13, 50618], 'temperature': 0.0, 'avg_logprob': -0.16361830545508343, 'compression_ratio': 1.6130434782608696, 'no_speech_prob': 0.019091522321105003}, {'id': 463, 'seek': 254890, 'start': 2553.98, 'end': 2555.1800000000003, 'text': ' Does everyone get this?', 'tokens': [50618, 4402, 1518, 483, 341, 30, 50678], 'temperature': 0.0, 'avg_logprob': -0.16361830545508343, 'compression_ratio': 1.6130434782608696, 'no_speech_prob': 0.019091522321105003}, {'id': 464, 'seek': 254890, 'start': 2555.1800000000003, 'end': 2561.06, 'text': ' So the same problem which assembler had in static compilation, the same problem happens', 'tokens': [50678, 407, 264, 912, 1154, 597, 8438, 1918, 632, 294, 13437, 40261, 11, 264, 912, 1154, 2314, 50972], 'temperature': 0.0, 'avg_logprob': -0.16361830545508343, 'compression_ratio': 1.6130434782608696, 'no_speech_prob': 0.019091522321105003}, {'id': 465, 'seek': 254890, 'start': 2561.06, 'end': 2566.82, 'text': ' when linker is when compiler is trying to create a shared object file.', 'tokens': [50972, 562, 2113, 260, 307, 562, 31958, 307, 1382, 281, 1884, 257, 5507, 2657, 3991, 13, 51260], 'temperature': 0.0, 'avg_logprob': -0.16361830545508343, 'compression_ratio': 1.6130434782608696, 'no_speech_prob': 0.019091522321105003}, {'id': 466, 'seek': 254890, 'start': 2566.82, 'end': 2569.3, 'text': ' Because it does not know where it will get loaded.', 'tokens': [51260, 1436, 309, 775, 406, 458, 689, 309, 486, 483, 13210, 13, 51384], 'temperature': 0.0, 'avg_logprob': -0.16361830545508343, 'compression_ratio': 1.6130434782608696, 'no_speech_prob': 0.019091522321105003}, {'id': 467, 'seek': 254890, 'start': 2569.3, 'end': 2575.7000000000003, 'text': ' Unlike your executable, in executable you knew text section is going to go here and', 'tokens': [51384, 17657, 428, 7568, 712, 11, 294, 7568, 712, 291, 2586, 2487, 3541, 307, 516, 281, 352, 510, 293, 51704], 'temperature': 0.0, 'avg_logprob': -0.16361830545508343, 'compression_ratio': 1.6130434782608696, 'no_speech_prob': 0.019091522321105003}, {'id': 468, 'seek': 257570, 'start': 2576.02, 'end': 2581.2999999999997, 'text': ' section is here so you can have all of their addresses.', 'tokens': [50380, 3541, 307, 510, 370, 291, 393, 362, 439, 295, 641, 16862, 13, 50644], 'temperature': 0.0, 'avg_logprob': -0.13028948447283575, 'compression_ratio': 1.6511627906976745, 'no_speech_prob': 0.1598268449306488}, {'id': 469, 'seek': 257570, 'start': 2581.2999999999997, 'end': 2590.58, 'text': ' And that is why we need relocations which will change this as part of dynamic link.', 'tokens': [50644, 400, 300, 307, 983, 321, 643, 26981, 763, 597, 486, 1319, 341, 382, 644, 295, 8546, 2113, 13, 51108], 'temperature': 0.0, 'avg_logprob': -0.13028948447283575, 'compression_ratio': 1.6511627906976745, 'no_speech_prob': 0.1598268449306488}, {'id': 470, 'seek': 257570, 'start': 2590.58, 'end': 2596.3199999999997, 'text': ' So these will actually get changed by the dynamic linker.', 'tokens': [51108, 407, 613, 486, 767, 483, 3105, 538, 264, 8546, 2113, 260, 13, 51395], 'temperature': 0.0, 'avg_logprob': -0.13028948447283575, 'compression_ratio': 1.6511627906976745, 'no_speech_prob': 0.1598268449306488}, {'id': 471, 'seek': 257570, 'start': 2596.3199999999997, 'end': 2600.66, 'text': ' So when dynamic linker is done loading the library it would have assigned some address', 'tokens': [51395, 407, 562, 8546, 2113, 260, 307, 1096, 15114, 264, 6405, 309, 576, 362, 13279, 512, 2985, 51612], 'temperature': 0.0, 'avg_logprob': -0.13028948447283575, 'compression_ratio': 1.6511627906976745, 'no_speech_prob': 0.1598268449306488}, {'id': 472, 'seek': 260066, 'start': 2600.66, 'end': 2607.66, 'text': ' to gbl in that particular process and then it will change the address to that.', 'tokens': [50364, 281, 290, 5199, 294, 300, 1729, 1399, 293, 550, 309, 486, 1319, 264, 2985, 281, 300, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.48987726731733844, 'compression_ratio': 1.4065934065934067, 'no_speech_prob': 0.8479613661766052}, {'id': 473, 'seek': 260066, 'start': 2607.66, 'end': 2608.66, 'text': ' Yes.', 'tokens': [50714, 1079, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.48987726731733844, 'compression_ratio': 1.4065934065934067, 'no_speech_prob': 0.8479613661766052}, {'id': 474, 'seek': 260066, 'start': 2608.66, 'end': 2609.66, 'text': ' Yes.', 'tokens': [50764, 1079, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.48987726731733844, 'compression_ratio': 1.4065934065934067, 'no_speech_prob': 0.8479613661766052}, {'id': 475, 'seek': 260066, 'start': 2609.66, 'end': 2610.66, 'text': ' We will see that.', 'tokens': [50814, 492, 486, 536, 300, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.48987726731733844, 'compression_ratio': 1.4065934065934067, 'no_speech_prob': 0.8479613661766052}, {'id': 476, 'seek': 260066, 'start': 2610.66, 'end': 2611.66, 'text': ' We will come to that.', 'tokens': [50864, 492, 486, 808, 281, 300, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.48987726731733844, 'compression_ratio': 1.4065934065934067, 'no_speech_prob': 0.8479613661766052}, {'id': 477, 'seek': 261166, 'start': 2611.66, 'end': 2638.58, 'text': ' So every reference of gbl is kind of changed.', 'tokens': [50364, 407, 633, 6408, 295, 290, 5199, 307, 733, 295, 3105, 13, 51710], 'temperature': 0.0, 'avg_logprob': -0.24509681065877278, 'compression_ratio': 0.9, 'no_speech_prob': 0.1398516595363617}, {'id': 478, 'seek': 263858, 'start': 2639.58, 'end': 2643.0, 'text': ' this relocation is actually performed at load time.', 'tokens': [50414, 341, 26981, 399, 307, 767, 10332, 412, 3677, 565, 13, 50585], 'temperature': 0.0, 'avg_logprob': -0.15263735680353074, 'compression_ratio': 1.631578947368421, 'no_speech_prob': 0.42858946323394775}, {'id': 479, 'seek': 263858, 'start': 2643.0, 'end': 2649.62, 'text': ' So using shared objects it is causing some additional work to happen as part of the application', 'tokens': [50585, 407, 1228, 5507, 6565, 309, 307, 9853, 512, 4497, 589, 281, 1051, 382, 644, 295, 264, 3861, 50916], 'temperature': 0.0, 'avg_logprob': -0.15263735680353074, 'compression_ratio': 1.631578947368421, 'no_speech_prob': 0.42858946323394775}, {'id': 480, 'seek': 263858, 'start': 2649.62, 'end': 2650.62, 'text': ' load.', 'tokens': [50916, 3677, 13, 50966], 'temperature': 0.0, 'avg_logprob': -0.15263735680353074, 'compression_ratio': 1.631578947368421, 'no_speech_prob': 0.42858946323394775}, {'id': 481, 'seek': 263858, 'start': 2650.62, 'end': 2654.7799999999997, 'text': ' It is not coming for free.', 'tokens': [50966, 467, 307, 406, 1348, 337, 1737, 13, 51174], 'temperature': 0.0, 'avg_logprob': -0.15263735680353074, 'compression_ratio': 1.631578947368421, 'no_speech_prob': 0.42858946323394775}, {'id': 482, 'seek': 263858, 'start': 2654.7799999999997, 'end': 2660.24, 'text': ' So your assignment is to figure out what happens when you do these function calls.', 'tokens': [51174, 407, 428, 15187, 307, 281, 2573, 484, 437, 2314, 562, 291, 360, 613, 2445, 5498, 13, 51447], 'temperature': 0.0, 'avg_logprob': -0.15263735680353074, 'compression_ratio': 1.631578947368421, 'no_speech_prob': 0.42858946323394775}, {'id': 483, 'seek': 263858, 'start': 2660.24, 'end': 2666.1, 'text': ' So we saw that whenever foo was referring to gbl there were some relocations.', 'tokens': [51447, 407, 321, 1866, 300, 5699, 726, 78, 390, 13761, 281, 290, 5199, 456, 645, 512, 26981, 763, 13, 51740], 'temperature': 0.0, 'avg_logprob': -0.15263735680353074, 'compression_ratio': 1.631578947368421, 'no_speech_prob': 0.42858946323394775}, {'id': 484, 'seek': 266610, 'start': 2666.1, 'end': 2671.06, 'text': ' Now your task is to write a function in dso and call it and see what kind of relocations', 'tokens': [50364, 823, 428, 5633, 307, 281, 2464, 257, 2445, 294, 274, 539, 293, 818, 309, 293, 536, 437, 733, 295, 26981, 763, 50612], 'temperature': 0.0, 'avg_logprob': -0.1139608383178711, 'compression_ratio': 1.2991452991452992, 'no_speech_prob': 0.01320937555283308}, {'id': 485, 'seek': 266610, 'start': 2671.06, 'end': 2676.2999999999997, 'text': ' get generated.', 'tokens': [50612, 483, 10833, 13, 50874], 'temperature': 0.0, 'avg_logprob': -0.1139608383178711, 'compression_ratio': 1.2991452991452992, 'no_speech_prob': 0.01320937555283308}, {'id': 486, 'seek': 266610, 'start': 2676.2999999999997, 'end': 2682.14, 'text': ' So let us try to do this so we can observe here.', 'tokens': [50874, 407, 718, 505, 853, 281, 360, 341, 370, 321, 393, 11441, 510, 13, 51166], 'temperature': 0.0, 'avg_logprob': -0.1139608383178711, 'compression_ratio': 1.2991452991452992, 'no_speech_prob': 0.01320937555283308}, {'id': 487, 'seek': 268214, 'start': 2682.14, 'end': 2709.18, 'text': ' So in this shared library I will simply call bar and', 'tokens': [50364, 407, 294, 341, 5507, 6405, 286, 486, 2935, 818, 2159, 293, 51716], 'temperature': 0.0, 'avg_logprob': -0.2978435834248861, 'compression_ratio': 0.896551724137931, 'no_speech_prob': 0.599802553653717}, {'id': 488, 'seek': 270918, 'start': 2709.22, 'end': 2716.7, 'text': ' So I have modified this code which was the earlier example which now has function call.', 'tokens': [50366, 407, 286, 362, 15873, 341, 3089, 597, 390, 264, 3071, 1365, 597, 586, 575, 2445, 818, 13, 50740], 'temperature': 0.0, 'avg_logprob': -0.23306420541578723, 'compression_ratio': 1.2142857142857142, 'no_speech_prob': 0.6211895942687988}, {'id': 489, 'seek': 270918, 'start': 2716.7, 'end': 2730.12, 'text': ' Now let us try to compile this.', 'tokens': [50740, 823, 718, 505, 853, 281, 31413, 341, 13, 51411], 'temperature': 0.0, 'avg_logprob': -0.23306420541578723, 'compression_ratio': 1.2142857142857142, 'no_speech_prob': 0.6211895942687988}, {'id': 490, 'seek': 273012, 'start': 2731.12, 'end': 2741.56, 'text': ' Now if I look at the relocations there are some relocations which were for patching gbl', 'tokens': [50414, 823, 498, 286, 574, 412, 264, 26981, 763, 456, 366, 512, 26981, 763, 597, 645, 337, 9972, 278, 290, 5199, 50936], 'temperature': 0.0, 'avg_logprob': -0.17974443435668946, 'compression_ratio': 1.8453038674033149, 'no_speech_prob': 0.03711434826254845}, {'id': 491, 'seek': 273012, 'start': 2741.56, 'end': 2747.88, 'text': ' which were present earlier also and now there is additional relocation for patching bar', 'tokens': [50936, 597, 645, 1974, 3071, 611, 293, 586, 456, 307, 4497, 26981, 399, 337, 9972, 278, 2159, 51252], 'temperature': 0.0, 'avg_logprob': -0.17974443435668946, 'compression_ratio': 1.8453038674033149, 'no_speech_prob': 0.03711434826254845}, {'id': 492, 'seek': 273012, 'start': 2747.88, 'end': 2754.14, 'text': ' and it is of other type it is of pc32 which we saw yesterday because when we are doing', 'tokens': [51252, 293, 309, 307, 295, 661, 2010, 309, 307, 295, 43451, 11440, 597, 321, 1866, 5186, 570, 562, 321, 366, 884, 51565], 'temperature': 0.0, 'avg_logprob': -0.17974443435668946, 'compression_ratio': 1.8453038674033149, 'no_speech_prob': 0.03711434826254845}, {'id': 493, 'seek': 273012, 'start': 2754.14, 'end': 2758.4, 'text': ' function call we are not patching the absolute address of the function.', 'tokens': [51565, 2445, 818, 321, 366, 406, 9972, 278, 264, 8236, 2985, 295, 264, 2445, 13, 51778], 'temperature': 0.0, 'avg_logprob': -0.17974443435668946, 'compression_ratio': 1.8453038674033149, 'no_speech_prob': 0.03711434826254845}, {'id': 494, 'seek': 275840, 'start': 2758.4, 'end': 2762.08, 'text': ' We are patching the relative address of the function.', 'tokens': [50364, 492, 366, 9972, 278, 264, 4972, 2985, 295, 264, 2445, 13, 50548], 'temperature': 0.0, 'avg_logprob': -0.18202521926478335, 'compression_ratio': 1.2844036697247707, 'no_speech_prob': 0.3443525433540344}, {'id': 495, 'seek': 275840, 'start': 2762.08, 'end': 2783.02, 'text': ' Now if you look at the actual code using so and if I look at say underscore sorry foo.', 'tokens': [50548, 823, 498, 291, 574, 412, 264, 3539, 3089, 1228, 370, 293, 498, 286, 574, 412, 584, 37556, 2597, 726, 78, 13, 51595], 'temperature': 0.0, 'avg_logprob': -0.18202521926478335, 'compression_ratio': 1.2844036697247707, 'no_speech_prob': 0.3443525433540344}, {'id': 496, 'seek': 278302, 'start': 2783.02, 'end': 2789.18, 'text': ' So if I look at foo I do see that foo has some relocations.', 'tokens': [50364, 407, 498, 286, 574, 412, 726, 78, 286, 360, 536, 300, 726, 78, 575, 512, 26981, 763, 13, 50672], 'temperature': 0.0, 'avg_logprob': -0.13777857387767117, 'compression_ratio': 1.614213197969543, 'no_speech_prob': 0.14767374098300934}, {'id': 497, 'seek': 278302, 'start': 2789.18, 'end': 2796.74, 'text': ' So this call instruction now this fcff you remember we saw yesterday also this is minus', 'tokens': [50672, 407, 341, 818, 10951, 586, 341, 283, 66, 602, 291, 1604, 321, 1866, 5186, 611, 341, 307, 3175, 51050], 'temperature': 0.0, 'avg_logprob': -0.13777857387767117, 'compression_ratio': 1.614213197969543, 'no_speech_prob': 0.14767374098300934}, {'id': 498, 'seek': 278302, 'start': 2796.74, 'end': 2802.86, 'text': ' 4 so the same thing has come up and it is going to change with address of bar.', 'tokens': [51050, 1017, 370, 264, 912, 551, 575, 808, 493, 293, 309, 307, 516, 281, 1319, 365, 2985, 295, 2159, 13, 51356], 'temperature': 0.0, 'avg_logprob': -0.13777857387767117, 'compression_ratio': 1.614213197969543, 'no_speech_prob': 0.14767374098300934}, {'id': 499, 'seek': 278302, 'start': 2802.86, 'end': 2811.84, 'text': ' Similarly gbl wherever gbl is referenced there are relocations to patch the address of gbl.', 'tokens': [51356, 13157, 290, 5199, 8660, 290, 5199, 307, 32734, 456, 366, 26981, 763, 281, 9972, 264, 2985, 295, 290, 5199, 13, 51805], 'temperature': 0.0, 'avg_logprob': -0.13777857387767117, 'compression_ratio': 1.614213197969543, 'no_speech_prob': 0.14767374098300934}, {'id': 500, 'seek': 281184, 'start': 2811.84, 'end': 2817.84, 'text': ' So in dynamic library what is happening is for every reference of the variable we are', 'tokens': [50364, 407, 294, 8546, 6405, 437, 307, 2737, 307, 337, 633, 6408, 295, 264, 7006, 321, 366, 50664], 'temperature': 0.0, 'avg_logprob': -0.17516397175035978, 'compression_ratio': 1.7621145374449338, 'no_speech_prob': 0.008958936668932438}, {'id': 501, 'seek': 281184, 'start': 2817.84, 'end': 2819.0, 'text': ' getting a relocation.', 'tokens': [50664, 1242, 257, 26981, 399, 13, 50722], 'temperature': 0.0, 'avg_logprob': -0.17516397175035978, 'compression_ratio': 1.7621145374449338, 'no_speech_prob': 0.008958936668932438}, {'id': 502, 'seek': 281184, 'start': 2819.0, 'end': 2825.1200000000003, 'text': ' So if you call bar twice you should see two relocations because address at both places', 'tokens': [50722, 407, 498, 291, 818, 2159, 6091, 291, 820, 536, 732, 26981, 763, 570, 2985, 412, 1293, 3190, 51028], 'temperature': 0.0, 'avg_logprob': -0.17516397175035978, 'compression_ratio': 1.7621145374449338, 'no_speech_prob': 0.008958936668932438}, {'id': 503, 'seek': 281184, 'start': 2825.1200000000003, 'end': 2826.8, 'text': ' need to be changed.', 'tokens': [51028, 643, 281, 312, 3105, 13, 51112], 'temperature': 0.0, 'avg_logprob': -0.17516397175035978, 'compression_ratio': 1.7621145374449338, 'no_speech_prob': 0.008958936668932438}, {'id': 504, 'seek': 281184, 'start': 2826.8, 'end': 2832.6000000000004, 'text': ' Similarly gbl is kind of reference three times so its addresses there are three relocations', 'tokens': [51112, 13157, 290, 5199, 307, 733, 295, 6408, 1045, 1413, 370, 1080, 16862, 456, 366, 1045, 26981, 763, 51402], 'temperature': 0.0, 'avg_logprob': -0.17516397175035978, 'compression_ratio': 1.7621145374449338, 'no_speech_prob': 0.008958936668932438}, {'id': 505, 'seek': 281184, 'start': 2832.6000000000004, 'end': 2839.1600000000003, 'text': ' for it and all these relocations need to be resolved at run time when the application', 'tokens': [51402, 337, 309, 293, 439, 613, 26981, 763, 643, 281, 312, 20772, 412, 1190, 565, 562, 264, 3861, 51730], 'temperature': 0.0, 'avg_logprob': -0.17516397175035978, 'compression_ratio': 1.7621145374449338, 'no_speech_prob': 0.008958936668932438}, {'id': 506, 'seek': 281184, 'start': 2839.1600000000003, 'end': 2840.36, 'text': ' starts.', 'tokens': [51730, 3719, 13, 51790], 'temperature': 0.0, 'avg_logprob': -0.17516397175035978, 'compression_ratio': 1.7621145374449338, 'no_speech_prob': 0.008958936668932438}, {'id': 507, 'seek': 284036, 'start': 2840.36, 'end': 2847.36, 'text': ' So the problem is this is this scheme actually works for supporting shared libraries because', 'tokens': [50364, 407, 264, 1154, 307, 341, 307, 341, 12232, 767, 1985, 337, 7231, 5507, 15148, 570, 50714], 'temperature': 0.0, 'avg_logprob': -0.1076912336711642, 'compression_ratio': 1.735, 'no_speech_prob': 0.09781064093112946}, {'id': 508, 'seek': 284036, 'start': 2847.36, 'end': 2852.6800000000003, 'text': ' what will happen is you will have this shared library and once it is loaded by the loader', 'tokens': [50714, 437, 486, 1051, 307, 291, 486, 362, 341, 5507, 6405, 293, 1564, 309, 307, 13210, 538, 264, 3677, 260, 50980], 'temperature': 0.0, 'avg_logprob': -0.1076912336711642, 'compression_ratio': 1.735, 'no_speech_prob': 0.09781064093112946}, {'id': 509, 'seek': 284036, 'start': 2852.6800000000003, 'end': 2858.6800000000003, 'text': ' it will resolve all these relocations once it is done loading it as some specific address.', 'tokens': [50980, 309, 486, 14151, 439, 613, 26981, 763, 1564, 309, 307, 1096, 15114, 309, 382, 512, 2685, 2985, 13, 51280], 'temperature': 0.0, 'avg_logprob': -0.1076912336711642, 'compression_ratio': 1.735, 'no_speech_prob': 0.09781064093112946}, {'id': 510, 'seek': 284036, 'start': 2858.6800000000003, 'end': 2864.6, 'text': ' Once it knows the address of gbl and bar it will change the text section.', 'tokens': [51280, 3443, 309, 3255, 264, 2985, 295, 290, 5199, 293, 2159, 309, 486, 1319, 264, 2487, 3541, 13, 51576], 'temperature': 0.0, 'avg_logprob': -0.1076912336711642, 'compression_ratio': 1.735, 'no_speech_prob': 0.09781064093112946}, {'id': 511, 'seek': 286460, 'start': 2864.6, 'end': 2870.7999999999997, 'text': ' Now the issues with this scheme are essentially first issue is remember we had relocation', 'tokens': [50364, 823, 264, 2663, 365, 341, 12232, 366, 4476, 700, 2734, 307, 1604, 321, 632, 26981, 399, 50674], 'temperature': 0.0, 'avg_logprob': -0.12120684599265075, 'compression_ratio': 1.6428571428571428, 'no_speech_prob': 0.03675166890025139}, {'id': 512, 'seek': 286460, 'start': 2870.7999999999997, 'end': 2873.2, 'text': ' for every reference.', 'tokens': [50674, 337, 633, 6408, 13, 50794], 'temperature': 0.0, 'avg_logprob': -0.12120684599265075, 'compression_ratio': 1.6428571428571428, 'no_speech_prob': 0.03675166890025139}, {'id': 513, 'seek': 286460, 'start': 2873.2, 'end': 2879.36, 'text': ' So every time a function is called all those references need to be changed.', 'tokens': [50794, 407, 633, 565, 257, 2445, 307, 1219, 439, 729, 15400, 643, 281, 312, 3105, 13, 51102], 'temperature': 0.0, 'avg_logprob': -0.12120684599265075, 'compression_ratio': 1.6428571428571428, 'no_speech_prob': 0.03675166890025139}, {'id': 514, 'seek': 286460, 'start': 2879.36, 'end': 2885.2, 'text': ' Does everyone understand this and this needs to happen at load time that means your application', 'tokens': [51102, 4402, 1518, 1223, 341, 293, 341, 2203, 281, 1051, 412, 3677, 565, 300, 1355, 428, 3861, 51394], 'temperature': 0.0, 'avg_logprob': -0.12120684599265075, 'compression_ratio': 1.6428571428571428, 'no_speech_prob': 0.03675166890025139}, {'id': 515, 'seek': 286460, 'start': 2885.2, 'end': 2891.92, 'text': ' will start running slower because initial overhead will be for dynamic linker to come', 'tokens': [51394, 486, 722, 2614, 14009, 570, 5883, 19922, 486, 312, 337, 8546, 2113, 260, 281, 808, 51730], 'temperature': 0.0, 'avg_logprob': -0.12120684599265075, 'compression_ratio': 1.6428571428571428, 'no_speech_prob': 0.03675166890025139}, {'id': 516, 'seek': 289192, 'start': 2891.92, 'end': 2898.92, 'text': ' up with the addresses of all these variables and patch them.', 'tokens': [50364, 493, 365, 264, 16862, 295, 439, 613, 9102, 293, 9972, 552, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.13036698264044685, 'compression_ratio': 1.568075117370892, 'no_speech_prob': 0.029136423021554947}, {'id': 517, 'seek': 289192, 'start': 2898.92, 'end': 2902.08, 'text': ' Everyone understands this overhead which needs to happen.', 'tokens': [50714, 5198, 15146, 341, 19922, 597, 2203, 281, 1051, 13, 50872], 'temperature': 0.0, 'avg_logprob': -0.13036698264044685, 'compression_ratio': 1.568075117370892, 'no_speech_prob': 0.029136423021554947}, {'id': 518, 'seek': 289192, 'start': 2902.08, 'end': 2906.48, 'text': ' Now the second issue is actually more serious which is what I think that other person was', 'tokens': [50872, 823, 264, 1150, 2734, 307, 767, 544, 3156, 597, 307, 437, 286, 519, 300, 661, 954, 390, 51092], 'temperature': 0.0, 'avg_logprob': -0.13036698264044685, 'compression_ratio': 1.568075117370892, 'no_speech_prob': 0.029136423021554947}, {'id': 519, 'seek': 289192, 'start': 2906.48, 'end': 2914.04, 'text': ' trying to ask is the fundamental reason why we started off with shared libraries is because', 'tokens': [51092, 1382, 281, 1029, 307, 264, 8088, 1778, 983, 321, 1409, 766, 365, 5507, 15148, 307, 570, 51470], 'temperature': 0.0, 'avg_logprob': -0.13036698264044685, 'compression_ratio': 1.568075117370892, 'no_speech_prob': 0.029136423021554947}, {'id': 520, 'seek': 289192, 'start': 2914.04, 'end': 2916.56, 'text': ' we do not want to duplicate code.', 'tokens': [51470, 321, 360, 406, 528, 281, 23976, 3089, 13, 51596], 'temperature': 0.0, 'avg_logprob': -0.13036698264044685, 'compression_ratio': 1.568075117370892, 'no_speech_prob': 0.029136423021554947}, {'id': 521, 'seek': 291656, 'start': 2916.56, 'end': 2924.44, 'text': ' We do not want every program to have duplicate code of common libraries like printf.', 'tokens': [50364, 492, 360, 406, 528, 633, 1461, 281, 362, 23976, 3089, 295, 2689, 15148, 411, 4482, 69, 13, 50758], 'temperature': 0.0, 'avg_logprob': -0.14957518259684244, 'compression_ratio': 1.75, 'no_speech_prob': 0.04663938656449318}, {'id': 522, 'seek': 291656, 'start': 2924.44, 'end': 2929.56, 'text': ' Now with dso we are able to share it but what will happen when you are actually loading', 'tokens': [50758, 823, 365, 274, 539, 321, 366, 1075, 281, 2073, 309, 457, 437, 486, 1051, 562, 291, 366, 767, 15114, 51014], 'temperature': 0.0, 'avg_logprob': -0.14957518259684244, 'compression_ratio': 1.75, 'no_speech_prob': 0.04663938656449318}, {'id': 523, 'seek': 291656, 'start': 2929.56, 'end': 2938.7599999999998, 'text': ' it references need to be changed and the reference the addresses with which the references will', 'tokens': [51014, 309, 15400, 643, 281, 312, 3105, 293, 264, 6408, 264, 16862, 365, 597, 264, 15400, 486, 51474], 'temperature': 0.0, 'avg_logprob': -0.14957518259684244, 'compression_ratio': 1.75, 'no_speech_prob': 0.04663938656449318}, {'id': 524, 'seek': 291656, 'start': 2938.7599999999998, 'end': 2945.64, 'text': ' be changed will actually be different for different processes because depending on where', 'tokens': [51474, 312, 3105, 486, 767, 312, 819, 337, 819, 7555, 570, 5413, 322, 689, 51818], 'temperature': 0.0, 'avg_logprob': -0.14957518259684244, 'compression_ratio': 1.75, 'no_speech_prob': 0.04663938656449318}, {'id': 525, 'seek': 294564, 'start': 2945.72, 'end': 2948.64, 'text': ' bar is loaded into the memory.', 'tokens': [50368, 2159, 307, 13210, 666, 264, 4675, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.17084270868545923, 'compression_ratio': 1.836734693877551, 'no_speech_prob': 0.09481529891490936}, {'id': 526, 'seek': 294564, 'start': 2948.64, 'end': 2955.52, 'text': ' So in p1 process p1 bar might be loaded at address 100.', 'tokens': [50514, 407, 294, 280, 16, 1399, 280, 16, 2159, 1062, 312, 13210, 412, 2985, 2319, 13, 50858], 'temperature': 0.0, 'avg_logprob': -0.17084270868545923, 'compression_ratio': 1.836734693877551, 'no_speech_prob': 0.09481529891490936}, {'id': 527, 'seek': 294564, 'start': 2955.52, 'end': 2964.08, 'text': ' In p2 bar might be loaded at address 500 and you will change the text section of bar and', 'tokens': [50858, 682, 280, 17, 2159, 1062, 312, 13210, 412, 2985, 5923, 293, 291, 486, 1319, 264, 2487, 3541, 295, 2159, 293, 51286], 'temperature': 0.0, 'avg_logprob': -0.17084270868545923, 'compression_ratio': 1.836734693877551, 'no_speech_prob': 0.09481529891490936}, {'id': 528, 'seek': 294564, 'start': 2964.08, 'end': 2972.04, 'text': ' foo to refer to address 100 in process p1 and in process p2 you will change it to address', 'tokens': [51286, 726, 78, 281, 2864, 281, 2985, 2319, 294, 1399, 280, 16, 293, 294, 1399, 280, 17, 291, 486, 1319, 309, 281, 2985, 51684], 'temperature': 0.0, 'avg_logprob': -0.17084270868545923, 'compression_ratio': 1.836734693877551, 'no_speech_prob': 0.09481529891490936}, {'id': 529, 'seek': 294564, 'start': 2972.04, 'end': 2973.9, 'text': ' 500.', 'tokens': [51684, 5923, 13, 51777], 'temperature': 0.0, 'avg_logprob': -0.17084270868545923, 'compression_ratio': 1.836734693877551, 'no_speech_prob': 0.09481529891490936}, {'id': 530, 'seek': 297390, 'start': 2973.9, 'end': 2976.78, 'text': ' Does everyone get this?', 'tokens': [50364, 4402, 1518, 483, 341, 30, 50508], 'temperature': 0.0, 'avg_logprob': -0.1720384889178806, 'compression_ratio': 1.6358024691358024, 'no_speech_prob': 0.02435002103447914}, {'id': 531, 'seek': 297390, 'start': 2976.78, 'end': 2980.7000000000003, 'text': ' So can you really share code of foo?', 'tokens': [50508, 407, 393, 291, 534, 2073, 3089, 295, 726, 78, 30, 50704], 'temperature': 0.0, 'avg_logprob': -0.1720384889178806, 'compression_ratio': 1.6358024691358024, 'no_speech_prob': 0.02435002103447914}, {'id': 532, 'seek': 297390, 'start': 2980.7000000000003, 'end': 2988.42, 'text': ' So foo which was calling bar in process p1 foo needs to call address 100 in process p2', 'tokens': [50704, 407, 726, 78, 597, 390, 5141, 2159, 294, 1399, 280, 16, 726, 78, 2203, 281, 818, 2985, 2319, 294, 1399, 280, 17, 51090], 'temperature': 0.0, 'avg_logprob': -0.1720384889178806, 'compression_ratio': 1.6358024691358024, 'no_speech_prob': 0.02435002103447914}, {'id': 533, 'seek': 297390, 'start': 2988.42, 'end': 2995.7400000000002, 'text': ' foo needs to call address 500 that means the content of the text section is different.', 'tokens': [51090, 726, 78, 2203, 281, 818, 2985, 5923, 300, 1355, 264, 2701, 295, 264, 2487, 3541, 307, 819, 13, 51456], 'temperature': 0.0, 'avg_logprob': -0.1720384889178806, 'compression_ratio': 1.6358024691358024, 'no_speech_prob': 0.02435002103447914}, {'id': 534, 'seek': 297390, 'start': 2995.7400000000002, 'end': 2998.9, 'text': ' Does everyone understand this?', 'tokens': [51456, 4402, 1518, 1223, 341, 30, 51614], 'temperature': 0.0, 'avg_logprob': -0.1720384889178806, 'compression_ratio': 1.6358024691358024, 'no_speech_prob': 0.02435002103447914}, {'id': 535, 'seek': 299890, 'start': 2998.9, 'end': 3003.84, 'text': ' And if the content is going to be different can you have one physical copy of that?', 'tokens': [50364, 400, 498, 264, 2701, 307, 516, 281, 312, 819, 393, 291, 362, 472, 4001, 5055, 295, 300, 30, 50611], 'temperature': 0.0, 'avg_logprob': -0.12902516816791734, 'compression_ratio': 1.7116279069767442, 'no_speech_prob': 0.12464704364538193}, {'id': 536, 'seek': 299890, 'start': 3003.84, 'end': 3010.7000000000003, 'text': ' No, because in p1 you need to refer to a version which is going to call the one with address', 'tokens': [50611, 883, 11, 570, 294, 280, 16, 291, 643, 281, 2864, 281, 257, 3037, 597, 307, 516, 281, 818, 264, 472, 365, 2985, 50954], 'temperature': 0.0, 'avg_logprob': -0.12902516816791734, 'compression_ratio': 1.7116279069767442, 'no_speech_prob': 0.12464704364538193}, {'id': 537, 'seek': 299890, 'start': 3010.7000000000003, 'end': 3016.86, 'text': ' 100 and in p2 you need the one which will be called with address 500.', 'tokens': [50954, 2319, 293, 294, 280, 17, 291, 643, 264, 472, 597, 486, 312, 1219, 365, 2985, 5923, 13, 51262], 'temperature': 0.0, 'avg_logprob': -0.12902516816791734, 'compression_ratio': 1.7116279069767442, 'no_speech_prob': 0.12464704364538193}, {'id': 538, 'seek': 299890, 'start': 3016.86, 'end': 3024.46, 'text': ' So you cannot share the code in physical memory which is what we started off as one of the', 'tokens': [51262, 407, 291, 2644, 2073, 264, 3089, 294, 4001, 4675, 597, 307, 437, 321, 1409, 766, 382, 472, 295, 264, 51642], 'temperature': 0.0, 'avg_logprob': -0.12902516816791734, 'compression_ratio': 1.7116279069767442, 'no_speech_prob': 0.12464704364538193}, {'id': 539, 'seek': 299890, 'start': 3024.46, 'end': 3028.1600000000003, 'text': ' goals which we wanted to have.', 'tokens': [51642, 5493, 597, 321, 1415, 281, 362, 13, 51827], 'temperature': 0.0, 'avg_logprob': -0.12902516816791734, 'compression_ratio': 1.7116279069767442, 'no_speech_prob': 0.12464704364538193}, {'id': 540, 'seek': 302816, 'start': 3028.16, 'end': 3031.3599999999997, 'text': ' So that is where the problem comes.', 'tokens': [50364, 407, 300, 307, 689, 264, 1154, 1487, 13, 50524], 'temperature': 0.0, 'avg_logprob': -0.12992916107177735, 'compression_ratio': 1.71, 'no_speech_prob': 0.004252136684954166}, {'id': 541, 'seek': 302816, 'start': 3031.3599999999997, 'end': 3039.2, 'text': ' So if you have relocations they are going to change things in a way that will make it', 'tokens': [50524, 407, 498, 291, 362, 26981, 763, 436, 366, 516, 281, 1319, 721, 294, 257, 636, 300, 486, 652, 309, 50916], 'temperature': 0.0, 'avg_logprob': -0.12992916107177735, 'compression_ratio': 1.71, 'no_speech_prob': 0.004252136684954166}, {'id': 542, 'seek': 302816, 'start': 3039.2, 'end': 3045.48, 'text': ' process specific because the addresses are going to be process specific.', 'tokens': [50916, 1399, 2685, 570, 264, 16862, 366, 516, 281, 312, 1399, 2685, 13, 51230], 'temperature': 0.0, 'avg_logprob': -0.12992916107177735, 'compression_ratio': 1.71, 'no_speech_prob': 0.004252136684954166}, {'id': 543, 'seek': 302816, 'start': 3045.48, 'end': 3046.72, 'text': ' So how to solve this?', 'tokens': [51230, 407, 577, 281, 5039, 341, 30, 51292], 'temperature': 0.0, 'avg_logprob': -0.12992916107177735, 'compression_ratio': 1.71, 'no_speech_prob': 0.004252136684954166}, {'id': 544, 'seek': 302816, 'start': 3046.72, 'end': 3049.48, 'text': ' Why not reserve some addresses?', 'tokens': [51292, 1545, 406, 17824, 512, 16862, 30, 51430], 'temperature': 0.0, 'avg_logprob': -0.12992916107177735, 'compression_ratio': 1.71, 'no_speech_prob': 0.004252136684954166}, {'id': 545, 'seek': 302816, 'start': 3049.48, 'end': 3056.92, 'text': ' So why not say that Lipsy is always loaded at address 100 for everyone that way the addresses', 'tokens': [51430, 407, 983, 406, 584, 300, 441, 2600, 88, 307, 1009, 13210, 412, 2985, 2319, 337, 1518, 300, 636, 264, 16862, 51802], 'temperature': 0.0, 'avg_logprob': -0.12992916107177735, 'compression_ratio': 1.71, 'no_speech_prob': 0.004252136684954166}, {'id': 546, 'seek': 305692, 'start': 3056.92, 'end': 3061.56, 'text': ' will not change.', 'tokens': [50364, 486, 406, 1319, 13, 50596], 'temperature': 0.0, 'avg_logprob': -0.21343410305860566, 'compression_ratio': 1.7043010752688172, 'no_speech_prob': 0.0971762090921402}, {'id': 547, 'seek': 305692, 'start': 3061.56, 'end': 3064.64, 'text': ' So what are the issues with that approach?', 'tokens': [50596, 407, 437, 366, 264, 2663, 365, 300, 3109, 30, 50750], 'temperature': 0.0, 'avg_logprob': -0.21343410305860566, 'compression_ratio': 1.7043010752688172, 'no_speech_prob': 0.0971762090921402}, {'id': 548, 'seek': 305692, 'start': 3064.64, 'end': 3072.12, 'text': ' If we do that if we say that this DSO takes address 100 to 500 for all processes that', 'tokens': [50750, 759, 321, 360, 300, 498, 321, 584, 300, 341, 15816, 46, 2516, 2985, 2319, 281, 5923, 337, 439, 7555, 300, 51124], 'temperature': 0.0, 'avg_logprob': -0.21343410305860566, 'compression_ratio': 1.7043010752688172, 'no_speech_prob': 0.0971762090921402}, {'id': 549, 'seek': 305692, 'start': 3072.12, 'end': 3077.84, 'text': " way addresses will remain same and we don't even if we change the text section the content", 'tokens': [51124, 636, 16862, 486, 6222, 912, 293, 321, 500, 380, 754, 498, 321, 1319, 264, 2487, 3541, 264, 2701, 51410], 'temperature': 0.0, 'avg_logprob': -0.21343410305860566, 'compression_ratio': 1.7043010752688172, 'no_speech_prob': 0.0971762090921402}, {'id': 550, 'seek': 305692, 'start': 3077.84, 'end': 3080.98, 'text': ' will still be same for all the processes.', 'tokens': [51410, 486, 920, 312, 912, 337, 439, 264, 7555, 13, 51567], 'temperature': 0.0, 'avg_logprob': -0.21343410305860566, 'compression_ratio': 1.7043010752688172, 'no_speech_prob': 0.0971762090921402}, {'id': 551, 'seek': 305692, 'start': 3080.98, 'end': 3084.2000000000003, 'text': ' What are issues with such an approach?', 'tokens': [51567, 708, 366, 2663, 365, 1270, 364, 3109, 30, 51728], 'temperature': 0.0, 'avg_logprob': -0.21343410305860566, 'compression_ratio': 1.7043010752688172, 'no_speech_prob': 0.0971762090921402}, {'id': 552, 'seek': 308420, 'start': 3085.0, 'end': 3086.6, 'text': ' Correct.', 'tokens': [50404, 12753, 13, 50484], 'temperature': 0.0, 'avg_logprob': -0.13940342561698255, 'compression_ratio': 1.613953488372093, 'no_speech_prob': 0.0062766666524112225}, {'id': 553, 'seek': 308420, 'start': 3086.6, 'end': 3091.66, 'text': ' So if you reserve some addresses that means even if there is a process which does not', 'tokens': [50484, 407, 498, 291, 17824, 512, 16862, 300, 1355, 754, 498, 456, 307, 257, 1399, 597, 775, 406, 50737], 'temperature': 0.0, 'avg_logprob': -0.13940342561698255, 'compression_ratio': 1.613953488372093, 'no_speech_prob': 0.0062766666524112225}, {'id': 554, 'seek': 308420, 'start': 3091.66, 'end': 3097.8399999999997, 'text': ' need to use that DSO those addresses cannot be reused for something else.', 'tokens': [50737, 643, 281, 764, 300, 15816, 46, 729, 16862, 2644, 312, 319, 4717, 337, 746, 1646, 13, 51046], 'temperature': 0.0, 'avg_logprob': -0.13940342561698255, 'compression_ratio': 1.613953488372093, 'no_speech_prob': 0.0062766666524112225}, {'id': 555, 'seek': 308420, 'start': 3097.8399999999997, 'end': 3104.68, 'text': ' So very inefficient use of the address space plus if the library changes so for example', 'tokens': [51046, 407, 588, 43495, 764, 295, 264, 2985, 1901, 1804, 498, 264, 6405, 2962, 370, 337, 1365, 51388], 'temperature': 0.0, 'avg_logprob': -0.13940342561698255, 'compression_ratio': 1.613953488372093, 'no_speech_prob': 0.0062766666524112225}, {'id': 556, 'seek': 308420, 'start': 3104.68, 'end': 3110.3399999999997, 'text': ' today printf requires 5 bytes to store tomorrow it requires 50 bytes then how will you get', 'tokens': [51388, 965, 4482, 69, 7029, 1025, 36088, 281, 3531, 4153, 309, 7029, 2625, 36088, 550, 577, 486, 291, 483, 51671], 'temperature': 0.0, 'avg_logprob': -0.13940342561698255, 'compression_ratio': 1.613953488372093, 'no_speech_prob': 0.0062766666524112225}, {'id': 557, 'seek': 311034, 'start': 3110.58, 'end': 3116.7000000000003, 'text': ' more addresses because you have said printf should fit within only these addresses and', 'tokens': [50376, 544, 16862, 570, 291, 362, 848, 4482, 69, 820, 3318, 1951, 787, 613, 16862, 293, 50682], 'temperature': 0.0, 'avg_logprob': -0.1312961134799691, 'compression_ratio': 1.7239819004524888, 'no_speech_prob': 0.07142641395330429}, {'id': 558, 'seek': 311034, 'start': 3116.7000000000003, 'end': 3121.5, 'text': ' then you create your own library then how will you get address space.', 'tokens': [50682, 550, 291, 1884, 428, 1065, 6405, 550, 577, 486, 291, 483, 2985, 1901, 13, 50922], 'temperature': 0.0, 'avg_logprob': -0.1312961134799691, 'compression_ratio': 1.7239819004524888, 'no_speech_prob': 0.07142641395330429}, {'id': 559, 'seek': 311034, 'start': 3121.5, 'end': 3127.02, 'text': ' So it becomes a problem of who is the authority to give you that these addresses are reserved', 'tokens': [50922, 407, 309, 3643, 257, 1154, 295, 567, 307, 264, 8281, 281, 976, 291, 300, 613, 16862, 366, 24819, 51198], 'temperature': 0.0, 'avg_logprob': -0.1312961134799691, 'compression_ratio': 1.7239819004524888, 'no_speech_prob': 0.07142641395330429}, {'id': 560, 'seek': 311034, 'start': 3127.02, 'end': 3133.38, 'text': ' for you and that needs to be consistent across everyone every process.', 'tokens': [51198, 337, 291, 293, 300, 2203, 281, 312, 8398, 2108, 1518, 633, 1399, 13, 51516], 'temperature': 0.0, 'avg_logprob': -0.1312961134799691, 'compression_ratio': 1.7239819004524888, 'no_speech_prob': 0.07142641395330429}, {'id': 561, 'seek': 311034, 'start': 3133.38, 'end': 3137.94, 'text': " So this is basically really bad idea we can't do with this.", 'tokens': [51516, 407, 341, 307, 1936, 534, 1578, 1558, 321, 393, 380, 360, 365, 341, 13, 51744], 'temperature': 0.0, 'avg_logprob': -0.1312961134799691, 'compression_ratio': 1.7239819004524888, 'no_speech_prob': 0.07142641395330429}, {'id': 562, 'seek': 313794, 'start': 3137.94, 'end': 3141.7000000000003, 'text': " So that's where the position independent code comes into picture.", 'tokens': [50364, 407, 300, 311, 689, 264, 2535, 6695, 3089, 1487, 666, 3036, 13, 50552], 'temperature': 0.0, 'avg_logprob': -0.11772809530559339, 'compression_ratio': 1.7204301075268817, 'no_speech_prob': 0.009403711184859276}, {'id': 563, 'seek': 313794, 'start': 3141.7000000000003, 'end': 3146.62, 'text': ' How many of you have heard of this term PIC?', 'tokens': [50552, 1012, 867, 295, 291, 362, 2198, 295, 341, 1433, 430, 2532, 30, 50798], 'temperature': 0.0, 'avg_logprob': -0.11772809530559339, 'compression_ratio': 1.7204301075268817, 'no_speech_prob': 0.009403711184859276}, {'id': 564, 'seek': 313794, 'start': 3146.62, 'end': 3152.86, 'text': " So what position independent code implies is it's the code which can be loaded at any", 'tokens': [50798, 407, 437, 2535, 6695, 3089, 18779, 307, 309, 311, 264, 3089, 597, 393, 312, 13210, 412, 604, 51110], 'temperature': 0.0, 'avg_logprob': -0.11772809530559339, 'compression_ratio': 1.7204301075268817, 'no_speech_prob': 0.009403711184859276}, {'id': 565, 'seek': 313794, 'start': 3152.86, 'end': 3158.86, 'text': ' address without any modifications.', 'tokens': [51110, 2985, 1553, 604, 26881, 13, 51410], 'temperature': 0.0, 'avg_logprob': -0.11772809530559339, 'compression_ratio': 1.7204301075268817, 'no_speech_prob': 0.009403711184859276}, {'id': 566, 'seek': 313794, 'start': 3158.86, 'end': 3164.42, 'text': ' And if we somehow have position independent code what it means is I could load it at any', 'tokens': [51410, 400, 498, 321, 6063, 362, 2535, 6695, 3089, 437, 309, 1355, 307, 286, 727, 3677, 309, 412, 604, 51688], 'temperature': 0.0, 'avg_logprob': -0.11772809530559339, 'compression_ratio': 1.7204301075268817, 'no_speech_prob': 0.009403711184859276}, {'id': 567, 'seek': 316442, 'start': 3164.42, 'end': 3169.82, 'text': " location in different processes and I don't have to change it.", 'tokens': [50364, 4914, 294, 819, 7555, 293, 286, 500, 380, 362, 281, 1319, 309, 13, 50634], 'temperature': 0.0, 'avg_logprob': -0.17398122549057007, 'compression_ratio': 1.5339805825242718, 'no_speech_prob': 0.01637180708348751}, {'id': 568, 'seek': 316442, 'start': 3169.82, 'end': 3173.82, 'text': ' That means it truly works.', 'tokens': [50634, 663, 1355, 309, 4908, 1985, 13, 50834], 'temperature': 0.0, 'avg_logprob': -0.17398122549057007, 'compression_ratio': 1.5339805825242718, 'no_speech_prob': 0.01637180708348751}, {'id': 569, 'seek': 316442, 'start': 3173.82, 'end': 3178.54, 'text': ' So if we can somehow have position independent code the problem which we have currently at', 'tokens': [50834, 407, 498, 321, 393, 6063, 362, 2535, 6695, 3089, 264, 1154, 597, 321, 362, 4362, 412, 51070], 'temperature': 0.0, 'avg_logprob': -0.17398122549057007, 'compression_ratio': 1.5339805825242718, 'no_speech_prob': 0.01637180708348751}, {'id': 570, 'seek': 316442, 'start': 3178.54, 'end': 3182.54, 'text': ' our hand will get solved.', 'tokens': [51070, 527, 1011, 486, 483, 13041, 13, 51270], 'temperature': 0.0, 'avg_logprob': -0.17398122549057007, 'compression_ratio': 1.5339805825242718, 'no_speech_prob': 0.01637180708348751}, {'id': 571, 'seek': 316442, 'start': 3182.54, 'end': 3185.62, 'text': ' Now how do you obviously achieve this?', 'tokens': [51270, 823, 577, 360, 291, 2745, 4584, 341, 30, 51424], 'temperature': 0.0, 'avg_logprob': -0.17398122549057007, 'compression_ratio': 1.5339805825242718, 'no_speech_prob': 0.01637180708348751}, {'id': 572, 'seek': 316442, 'start': 3185.62, 'end': 3187.02, 'text': ' Indirection.', 'tokens': [51424, 2333, 621, 882, 13, 51494], 'temperature': 0.0, 'avg_logprob': -0.17398122549057007, 'compression_ratio': 1.5339805825242718, 'no_speech_prob': 0.01637180708348751}, {'id': 573, 'seek': 316442, 'start': 3187.02, 'end': 3191.32, 'text': ' Every problem can be solved using additional indirection.', 'tokens': [51494, 2048, 1154, 393, 312, 13041, 1228, 4497, 1016, 621, 882, 13, 51709], 'temperature': 0.0, 'avg_logprob': -0.17398122549057007, 'compression_ratio': 1.5339805825242718, 'no_speech_prob': 0.01637180708348751}, {'id': 574, 'seek': 319132, 'start': 3191.32, 'end': 3195.76, 'text': " So let's look at what assembler did.", 'tokens': [50364, 407, 718, 311, 574, 412, 437, 8438, 1918, 630, 13, 50586], 'temperature': 0.0, 'avg_logprob': -0.21312959076928312, 'compression_ratio': 1.6308724832214765, 'no_speech_prob': 0.019405320286750793}, {'id': 575, 'seek': 319132, 'start': 3195.76, 'end': 3201.7200000000003, 'text': ' You remember yesterday we learnt assembler for 5 minutes where we saw that there are', 'tokens': [50586, 509, 1604, 5186, 321, 18991, 8438, 1918, 337, 1025, 2077, 689, 321, 1866, 300, 456, 366, 50884], 'temperature': 0.0, 'avg_logprob': -0.21312959076928312, 'compression_ratio': 1.6308724832214765, 'no_speech_prob': 0.019405320286750793}, {'id': 576, 'seek': 319132, 'start': 3201.7200000000003, 'end': 3204.2000000000003, 'text': ' 3 types of addresses.', 'tokens': [50884, 805, 3467, 295, 16862, 13, 51008], 'temperature': 0.0, 'avg_logprob': -0.21312959076928312, 'compression_ratio': 1.6308724832214765, 'no_speech_prob': 0.019405320286750793}, {'id': 577, 'seek': 319132, 'start': 3204.2000000000003, 'end': 3209.6800000000003, 'text': ' There is PC relative address, there is section relative address and there is file relative', 'tokens': [51008, 821, 307, 6465, 4972, 2985, 11, 456, 307, 3541, 4972, 2985, 293, 456, 307, 3991, 4972, 51282], 'temperature': 0.0, 'avg_logprob': -0.21312959076928312, 'compression_ratio': 1.6308724832214765, 'no_speech_prob': 0.019405320286750793}, {'id': 578, 'seek': 319132, 'start': 3209.6800000000003, 'end': 3211.76, 'text': ' address.', 'tokens': [51282, 2985, 13, 51386], 'temperature': 0.0, 'avg_logprob': -0.21312959076928312, 'compression_ratio': 1.6308724832214765, 'no_speech_prob': 0.019405320286750793}, {'id': 579, 'seek': 321176, 'start': 3211.76, 'end': 3221.32, 'text': ' Now the beauty of PC relative address is it is position independent.', 'tokens': [50364, 823, 264, 6643, 295, 6465, 4972, 2985, 307, 309, 307, 2535, 6695, 13, 50842], 'temperature': 0.0, 'avg_logprob': -0.12027288885677562, 'compression_ratio': 1.5257731958762886, 'no_speech_prob': 0.03947965055704117}, {'id': 580, 'seek': 321176, 'start': 3221.32, 'end': 3223.76, 'text': ' Does everyone get why?', 'tokens': [50842, 4402, 1518, 483, 983, 30, 50964], 'temperature': 0.0, 'avg_logprob': -0.12027288885677562, 'compression_ratio': 1.5257731958762886, 'no_speech_prob': 0.03947965055704117}, {'id': 581, 'seek': 321176, 'start': 3223.76, 'end': 3229.84, 'text': ' Because no matter where the text section begins the distance between JMP done and done is', 'tokens': [50964, 1436, 572, 1871, 689, 264, 2487, 3541, 7338, 264, 4560, 1296, 508, 12224, 1096, 293, 1096, 307, 51268], 'temperature': 0.0, 'avg_logprob': -0.12027288885677562, 'compression_ratio': 1.5257731958762886, 'no_speech_prob': 0.03947965055704117}, {'id': 582, 'seek': 321176, 'start': 3229.84, 'end': 3234.76, 'text': ' going to remain same.', 'tokens': [51268, 516, 281, 6222, 912, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.12027288885677562, 'compression_ratio': 1.5257731958762886, 'no_speech_prob': 0.03947965055704117}, {'id': 583, 'seek': 321176, 'start': 3234.76, 'end': 3241.36, 'text': ' If I use section relative address that might actually change because I have to add something', 'tokens': [51514, 759, 286, 764, 3541, 4972, 2985, 300, 1062, 767, 1319, 570, 286, 362, 281, 909, 746, 51844], 'temperature': 0.0, 'avg_logprob': -0.12027288885677562, 'compression_ratio': 1.5257731958762886, 'no_speech_prob': 0.03947965055704117}, {'id': 584, 'seek': 324136, 'start': 3241.36, 'end': 3245.1600000000003, 'text': ' to get to the data section.', 'tokens': [50364, 281, 483, 281, 264, 1412, 3541, 13, 50554], 'temperature': 0.0, 'avg_logprob': -0.12781956755084756, 'compression_ratio': 1.6927083333333333, 'no_speech_prob': 0.0010308392811566591}, {'id': 585, 'seek': 324136, 'start': 3245.1600000000003, 'end': 3252.48, 'text': ' So essentially PC relative addresses by design are position independent and no matter where', 'tokens': [50554, 407, 4476, 6465, 4972, 16862, 538, 1715, 366, 2535, 6695, 293, 572, 1871, 689, 50920], 'temperature': 0.0, 'avg_logprob': -0.12781956755084756, 'compression_ratio': 1.6927083333333333, 'no_speech_prob': 0.0010308392811566591}, {'id': 586, 'seek': 324136, 'start': 3252.48, 'end': 3254.76, 'text': ' the text section is loaded.', 'tokens': [50920, 264, 2487, 3541, 307, 13210, 13, 51034], 'temperature': 0.0, 'avg_logprob': -0.12781956755084756, 'compression_ratio': 1.6927083333333333, 'no_speech_prob': 0.0010308392811566591}, {'id': 587, 'seek': 324136, 'start': 3254.76, 'end': 3262.36, 'text': ' So if JMP says JMP to 5 bytes after current instruction then no matter where it is loaded', 'tokens': [51034, 407, 498, 508, 12224, 1619, 508, 12224, 281, 1025, 36088, 934, 2190, 10951, 550, 572, 1871, 689, 309, 307, 13210, 51414], 'temperature': 0.0, 'avg_logprob': -0.12781956755084756, 'compression_ratio': 1.6927083333333333, 'no_speech_prob': 0.0010308392811566591}, {'id': 588, 'seek': 324136, 'start': 3262.36, 'end': 3266.48, 'text': ' the same instruction is going to work.', 'tokens': [51414, 264, 912, 10951, 307, 516, 281, 589, 13, 51620], 'temperature': 0.0, 'avg_logprob': -0.12781956755084756, 'compression_ratio': 1.6927083333333333, 'no_speech_prob': 0.0010308392811566591}, {'id': 589, 'seek': 324136, 'start': 3266.48, 'end': 3270.1200000000003, 'text': ' No matter what is the address of the JMP itself.', 'tokens': [51620, 883, 1871, 437, 307, 264, 2985, 295, 264, 508, 12224, 2564, 13, 51802], 'temperature': 0.0, 'avg_logprob': -0.12781956755084756, 'compression_ratio': 1.6927083333333333, 'no_speech_prob': 0.0010308392811566591}, {'id': 590, 'seek': 327012, 'start': 3270.12, 'end': 3271.7999999999997, 'text': ' Does that make sense?', 'tokens': [50364, 4402, 300, 652, 2020, 30, 50448], 'temperature': 0.0, 'avg_logprob': -0.165479856824118, 'compression_ratio': 1.4870129870129871, 'no_speech_prob': 0.052475810050964355}, {'id': 591, 'seek': 327012, 'start': 3271.7999999999997, 'end': 3275.0, 'text': ' So this is the key idea which we will use.', 'tokens': [50448, 407, 341, 307, 264, 2141, 1558, 597, 321, 486, 764, 13, 50608], 'temperature': 0.0, 'avg_logprob': -0.165479856824118, 'compression_ratio': 1.4870129870129871, 'no_speech_prob': 0.052475810050964355}, {'id': 592, 'seek': 327012, 'start': 3275.0, 'end': 3282.2799999999997, 'text': ' So when dynamic linker is linked, when the static linker is merging the objects it knows', 'tokens': [50608, 407, 562, 8546, 2113, 260, 307, 9408, 11, 562, 264, 13437, 2113, 260, 307, 44559, 264, 6565, 309, 3255, 50972], 'temperature': 0.0, 'avg_logprob': -0.165479856824118, 'compression_ratio': 1.4870129870129871, 'no_speech_prob': 0.052475810050964355}, {'id': 593, 'seek': 327012, 'start': 3282.2799999999997, 'end': 3287.12, 'text': ' sizes of various sections.', 'tokens': [50972, 11602, 295, 3683, 10863, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.165479856824118, 'compression_ratio': 1.4870129870129871, 'no_speech_prob': 0.052475810050964355}, {'id': 594, 'seek': 327012, 'start': 3287.12, 'end': 3292.72, 'text': ' And it knows that when move refers to some data.', 'tokens': [51214, 400, 309, 3255, 300, 562, 1286, 14942, 281, 512, 1412, 13, 51494], 'temperature': 0.0, 'avg_logprob': -0.165479856824118, 'compression_ratio': 1.4870129870129871, 'no_speech_prob': 0.052475810050964355}, {'id': 595, 'seek': 329272, 'start': 3292.72, 'end': 3300.3999999999996, 'text': ' So when we had a reference for GBL in the text section instead of using address of GBL', 'tokens': [50364, 407, 562, 321, 632, 257, 6408, 337, 460, 17624, 294, 264, 2487, 3541, 2602, 295, 1228, 2985, 295, 460, 17624, 50748], 'temperature': 0.0, 'avg_logprob': -0.1255791899445769, 'compression_ratio': 1.6793478260869565, 'no_speech_prob': 0.016376152634620667}, {'id': 596, 'seek': 329272, 'start': 3300.3999999999996, 'end': 3305.7999999999997, 'text': " why can't we use relative address of GBL from the current instruction.", 'tokens': [50748, 983, 393, 380, 321, 764, 4972, 2985, 295, 460, 17624, 490, 264, 2190, 10951, 13, 51018], 'temperature': 0.0, 'avg_logprob': -0.1255791899445769, 'compression_ratio': 1.6793478260869565, 'no_speech_prob': 0.016376152634620667}, {'id': 597, 'seek': 329272, 'start': 3305.7999999999997, 'end': 3307.24, 'text': ' Does that make sense?', 'tokens': [51018, 4402, 300, 652, 2020, 30, 51090], 'temperature': 0.0, 'avg_logprob': -0.1255791899445769, 'compression_ratio': 1.6793478260869565, 'no_speech_prob': 0.016376152634620667}, {'id': 598, 'seek': 329272, 'start': 3307.24, 'end': 3312.8599999999997, 'text': ' So remember what we were doing earlier is when we had move instruction we were actually', 'tokens': [51090, 407, 1604, 437, 321, 645, 884, 3071, 307, 562, 321, 632, 1286, 10951, 321, 645, 767, 51371], 'temperature': 0.0, 'avg_logprob': -0.1255791899445769, 'compression_ratio': 1.6793478260869565, 'no_speech_prob': 0.016376152634620667}, {'id': 599, 'seek': 329272, 'start': 3312.8599999999997, 'end': 3316.3599999999997, 'text': ' using the actual address of GBL variable.', 'tokens': [51371, 1228, 264, 3539, 2985, 295, 460, 17624, 7006, 13, 51546], 'temperature': 0.0, 'avg_logprob': -0.1255791899445769, 'compression_ratio': 1.6793478260869565, 'no_speech_prob': 0.016376152634620667}, {'id': 600, 'seek': 331636, 'start': 3316.36, 'end': 3323.0, 'text': ' So if GBL was loaded at location 100 then we would say move from address 100 to some', 'tokens': [50364, 407, 498, 460, 17624, 390, 13210, 412, 4914, 2319, 550, 321, 576, 584, 1286, 490, 2985, 2319, 281, 512, 50696], 'temperature': 0.0, 'avg_logprob': -0.16400331026547915, 'compression_ratio': 1.583756345177665, 'no_speech_prob': 0.15506082773208618}, {'id': 601, 'seek': 331636, 'start': 3323.0, 'end': 3324.0, 'text': ' register.', 'tokens': [50696, 7280, 13, 50746], 'temperature': 0.0, 'avg_logprob': -0.16400331026547915, 'compression_ratio': 1.583756345177665, 'no_speech_prob': 0.15506082773208618}, {'id': 602, 'seek': 331636, 'start': 3324.0, 'end': 3332.88, 'text': ' Instead we could say that move from relative address of GBL from the current instruction.', 'tokens': [50746, 7156, 321, 727, 584, 300, 1286, 490, 4972, 2985, 295, 460, 17624, 490, 264, 2190, 10951, 13, 51190], 'temperature': 0.0, 'avg_logprob': -0.16400331026547915, 'compression_ratio': 1.583756345177665, 'no_speech_prob': 0.15506082773208618}, {'id': 603, 'seek': 331636, 'start': 3332.88, 'end': 3340.32, 'text': ' And no matter where the base of this starts the code will still keep working as long as', 'tokens': [51190, 400, 572, 1871, 689, 264, 3096, 295, 341, 3719, 264, 3089, 486, 920, 1066, 1364, 382, 938, 382, 51562], 'temperature': 0.0, 'avg_logprob': -0.16400331026547915, 'compression_ratio': 1.583756345177665, 'no_speech_prob': 0.15506082773208618}, {'id': 604, 'seek': 331636, 'start': 3340.32, 'end': 3344.4, 'text': ' they are in the same contiguous region.', 'tokens': [51562, 436, 366, 294, 264, 912, 660, 30525, 4458, 13, 51766], 'temperature': 0.0, 'avg_logprob': -0.16400331026547915, 'compression_ratio': 1.583756345177665, 'no_speech_prob': 0.15506082773208618}, {'id': 605, 'seek': 334440, 'start': 3344.44, 'end': 3351.76, 'text': ' And remember when we saw the memory map the text section and code data section were all', 'tokens': [50366, 400, 1604, 562, 321, 1866, 264, 4675, 4471, 264, 2487, 3541, 293, 3089, 1412, 3541, 645, 439, 50732], 'temperature': 0.0, 'avg_logprob': -0.12656960487365723, 'compression_ratio': 1.5940594059405941, 'no_speech_prob': 0.014866938814520836}, {'id': 606, 'seek': 334440, 'start': 3351.76, 'end': 3353.7200000000003, 'text': ' one after the other.', 'tokens': [50732, 472, 934, 264, 661, 13, 50830], 'temperature': 0.0, 'avg_logprob': -0.12656960487365723, 'compression_ratio': 1.5940594059405941, 'no_speech_prob': 0.014866938814520836}, {'id': 607, 'seek': 334440, 'start': 3353.7200000000003, 'end': 3356.96, 'text': ' And those were laid out by linker statically.', 'tokens': [50830, 400, 729, 645, 9897, 484, 538, 2113, 260, 2219, 984, 13, 50992], 'temperature': 0.0, 'avg_logprob': -0.12656960487365723, 'compression_ratio': 1.5940594059405941, 'no_speech_prob': 0.014866938814520836}, {'id': 608, 'seek': 334440, 'start': 3356.96, 'end': 3360.76, 'text': ' Nothing came in between that.', 'tokens': [50992, 6693, 1361, 294, 1296, 300, 13, 51182], 'temperature': 0.0, 'avg_logprob': -0.12656960487365723, 'compression_ratio': 1.5940594059405941, 'no_speech_prob': 0.014866938814520836}, {'id': 609, 'seek': 334440, 'start': 3360.76, 'end': 3365.08, 'text': ' So this is the essential idea of what we will do.', 'tokens': [51182, 407, 341, 307, 264, 7115, 1558, 295, 437, 321, 486, 360, 13, 51398], 'temperature': 0.0, 'avg_logprob': -0.12656960487365723, 'compression_ratio': 1.5940594059405941, 'no_speech_prob': 0.014866938814520836}, {'id': 610, 'seek': 334440, 'start': 3365.08, 'end': 3371.48, 'text': ' So we will somehow generate code which will not use absolute address in the instruction', 'tokens': [51398, 407, 321, 486, 6063, 8460, 3089, 597, 486, 406, 764, 8236, 2985, 294, 264, 10951, 51718], 'temperature': 0.0, 'avg_logprob': -0.12656960487365723, 'compression_ratio': 1.5940594059405941, 'no_speech_prob': 0.014866938814520836}, {'id': 611, 'seek': 337148, 'start': 3371.64, 'end': 3375.6, 'text': ' but relative address in the instructions.', 'tokens': [50372, 457, 4972, 2985, 294, 264, 9415, 13, 50570], 'temperature': 0.0, 'avg_logprob': -0.1714994748433431, 'compression_ratio': 1.4161490683229814, 'no_speech_prob': 0.027497582137584686}, {'id': 612, 'seek': 337148, 'start': 3375.6, 'end': 3383.92, 'text': ' And this is done by additional level of indirection called as GOT global offset table.', 'tokens': [50570, 400, 341, 307, 1096, 538, 4497, 1496, 295, 1016, 621, 882, 1219, 382, 36525, 4338, 18687, 3199, 13, 50986], 'temperature': 0.0, 'avg_logprob': -0.1714994748433431, 'compression_ratio': 1.4161490683229814, 'no_speech_prob': 0.027497582137584686}, {'id': 613, 'seek': 337148, 'start': 3383.92, 'end': 3388.04, 'text': ' I hope it is very easy to remember term now.', 'tokens': [50986, 286, 1454, 309, 307, 588, 1858, 281, 1604, 1433, 586, 13, 51192], 'temperature': 0.0, 'avg_logprob': -0.1714994748433431, 'compression_ratio': 1.4161490683229814, 'no_speech_prob': 0.027497582137584686}, {'id': 614, 'seek': 337148, 'start': 3388.04, 'end': 3395.22, 'text': ' So GOT you can think of as a indirection which exists.', 'tokens': [51192, 407, 36525, 291, 393, 519, 295, 382, 257, 1016, 621, 882, 597, 8198, 13, 51551], 'temperature': 0.0, 'avg_logprob': -0.1714994748433431, 'compression_ratio': 1.4161490683229814, 'no_speech_prob': 0.027497582137584686}, {'id': 615, 'seek': 339522, 'start': 3395.22, 'end': 3403.8599999999997, 'text': ' So what you do is for every variable which you have you store its address in a table', 'tokens': [50364, 407, 437, 291, 360, 307, 337, 633, 7006, 597, 291, 362, 291, 3531, 1080, 2985, 294, 257, 3199, 50796], 'temperature': 0.0, 'avg_logprob': -0.13170322690691266, 'compression_ratio': 2.0065789473684212, 'no_speech_prob': 0.02062559500336647}, {'id': 616, 'seek': 339522, 'start': 3403.8599999999997, 'end': 3407.2599999999998, 'text': ' called as global offset table.', 'tokens': [50796, 1219, 382, 4338, 18687, 3199, 13, 50966], 'temperature': 0.0, 'avg_logprob': -0.13170322690691266, 'compression_ratio': 2.0065789473684212, 'no_speech_prob': 0.02062559500336647}, {'id': 617, 'seek': 339522, 'start': 3407.2599999999998, 'end': 3413.18, 'text': ' So global offset table holds address of every variable and it holds absolute address of', 'tokens': [50966, 407, 4338, 18687, 3199, 9190, 2985, 295, 633, 7006, 293, 309, 9190, 8236, 2985, 295, 51262], 'temperature': 0.0, 'avg_logprob': -0.13170322690691266, 'compression_ratio': 2.0065789473684212, 'no_speech_prob': 0.02062559500336647}, {'id': 618, 'seek': 339522, 'start': 3413.18, 'end': 3415.3799999999997, 'text': ' every variable.', 'tokens': [51262, 633, 7006, 13, 51372], 'temperature': 0.0, 'avg_logprob': -0.13170322690691266, 'compression_ratio': 2.0065789473684212, 'no_speech_prob': 0.02062559500336647}, {'id': 619, 'seek': 339522, 'start': 3415.3799999999997, 'end': 3423.7, 'text': ' So the GOT holds absolute address of every variable and GOT is at fixed distance from', 'tokens': [51372, 407, 264, 36525, 9190, 8236, 2985, 295, 633, 7006, 293, 36525, 307, 412, 6806, 4560, 490, 51788], 'temperature': 0.0, 'avg_logprob': -0.13170322690691266, 'compression_ratio': 2.0065789473684212, 'no_speech_prob': 0.02062559500336647}, {'id': 620, 'seek': 342370, 'start': 3423.7, 'end': 3426.06, 'text': ' the text section.', 'tokens': [50364, 264, 2487, 3541, 13, 50482], 'temperature': 0.0, 'avg_logprob': -0.16348681184980604, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.04073308780789375}, {'id': 621, 'seek': 342370, 'start': 3426.06, 'end': 3435.14, 'text': ' So whenever you have to refer to a variable you first look up where is the GOT entry for', 'tokens': [50482, 407, 5699, 291, 362, 281, 2864, 281, 257, 7006, 291, 700, 574, 493, 689, 307, 264, 36525, 8729, 337, 50936], 'temperature': 0.0, 'avg_logprob': -0.16348681184980604, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.04073308780789375}, {'id': 622, 'seek': 342370, 'start': 3435.14, 'end': 3444.7799999999997, 'text': ' that and read the address of that and use that address to actually dereference.', 'tokens': [50936, 300, 293, 1401, 264, 2985, 295, 300, 293, 764, 300, 2985, 281, 767, 15969, 5158, 13, 51418], 'temperature': 0.0, 'avg_logprob': -0.16348681184980604, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.04073308780789375}, {'id': 623, 'seek': 342370, 'start': 3444.7799999999997, 'end': 3446.06, 'text': ' Is it clear?', 'tokens': [51418, 1119, 309, 1850, 30, 51482], 'temperature': 0.0, 'avg_logprob': -0.16348681184980604, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.04073308780789375}, {'id': 624, 'seek': 342370, 'start': 3446.06, 'end': 3452.9399999999996, 'text': ' The indirection so from code instead of directly accessing the variable you first see what', 'tokens': [51482, 440, 1016, 621, 882, 370, 490, 3089, 2602, 295, 3838, 26440, 264, 7006, 291, 700, 536, 437, 51826], 'temperature': 0.0, 'avg_logprob': -0.16348681184980604, 'compression_ratio': 1.6022099447513811, 'no_speech_prob': 0.04073308780789375}, {'id': 625, 'seek': 345294, 'start': 3452.94, 'end': 3462.18, 'text': ' is the address of variable in the GOT and GOT is at fixed position as laid out by linker', 'tokens': [50364, 307, 264, 2985, 295, 7006, 294, 264, 36525, 293, 36525, 307, 412, 6806, 2535, 382, 9897, 484, 538, 2113, 260, 50826], 'temperature': 0.0, 'avg_logprob': -0.18727574348449708, 'compression_ratio': 1.4782608695652173, 'no_speech_prob': 0.0052101705223321915}, {'id': 626, 'seek': 345294, 'start': 3462.18, 'end': 3465.94, 'text': ' and then from GOT you get the address.', 'tokens': [50826, 293, 550, 490, 36525, 291, 483, 264, 2985, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.18727574348449708, 'compression_ratio': 1.4782608695652173, 'no_speech_prob': 0.0052101705223321915}, {'id': 627, 'seek': 345294, 'start': 3465.94, 'end': 3476.3, 'text': ' So now one of the things is x86 supports instructions like call and jump which support PC relative', 'tokens': [51014, 407, 586, 472, 295, 264, 721, 307, 2031, 22193, 9346, 9415, 411, 818, 293, 3012, 597, 1406, 6465, 4972, 51532], 'temperature': 0.0, 'avg_logprob': -0.18727574348449708, 'compression_ratio': 1.4782608695652173, 'no_speech_prob': 0.0052101705223321915}, {'id': 628, 'seek': 345294, 'start': 3476.3, 'end': 3477.44, 'text': ' addressing.', 'tokens': [51532, 14329, 13, 51589], 'temperature': 0.0, 'avg_logprob': -0.18727574348449708, 'compression_ratio': 1.4782608695652173, 'no_speech_prob': 0.0052101705223321915}, {'id': 629, 'seek': 347744, 'start': 3477.44, 'end': 3483.34, 'text': ' That means the offset which you are encoding needs to be relative to the current instruction', 'tokens': [50364, 663, 1355, 264, 18687, 597, 291, 366, 43430, 2203, 281, 312, 4972, 281, 264, 2190, 10951, 50659], 'temperature': 0.0, 'avg_logprob': -0.14205381744786313, 'compression_ratio': 1.7427184466019416, 'no_speech_prob': 0.1580774486064911}, {'id': 630, 'seek': 347744, 'start': 3483.34, 'end': 3489.82, 'text': ' but the instructions like move do not really support relative addressing.', 'tokens': [50659, 457, 264, 9415, 411, 1286, 360, 406, 534, 1406, 4972, 14329, 13, 50983], 'temperature': 0.0, 'avg_logprob': -0.14205381744786313, 'compression_ratio': 1.7427184466019416, 'no_speech_prob': 0.1580774486064911}, {'id': 631, 'seek': 347744, 'start': 3489.82, 'end': 3496.96, 'text': ' So whenever I say move from this address hardware is going to interpret that address as absolute', 'tokens': [50983, 407, 5699, 286, 584, 1286, 490, 341, 2985, 8837, 307, 516, 281, 7302, 300, 2985, 382, 8236, 51340], 'temperature': 0.0, 'avg_logprob': -0.14205381744786313, 'compression_ratio': 1.7427184466019416, 'no_speech_prob': 0.1580774486064911}, {'id': 632, 'seek': 347744, 'start': 3496.96, 'end': 3497.96, 'text': ' address.', 'tokens': [51340, 2985, 13, 51390], 'temperature': 0.0, 'avg_logprob': -0.14205381744786313, 'compression_ratio': 1.7427184466019416, 'no_speech_prob': 0.1580774486064911}, {'id': 633, 'seek': 347744, 'start': 3497.96, 'end': 3506.44, 'text': ' There is no way that you can say that move from five locations below current location.', 'tokens': [51390, 821, 307, 572, 636, 300, 291, 393, 584, 300, 1286, 490, 1732, 9253, 2507, 2190, 4914, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.14205381744786313, 'compression_ratio': 1.7427184466019416, 'no_speech_prob': 0.1580774486064911}, {'id': 634, 'seek': 350644, 'start': 3506.44, 'end': 3508.2200000000003, 'text': ' So there is no way.', 'tokens': [50364, 407, 456, 307, 572, 636, 13, 50453], 'temperature': 0.0, 'avg_logprob': -0.13443910753404772, 'compression_ratio': 1.6179775280898876, 'no_speech_prob': 0.009401447139680386}, {'id': 635, 'seek': 350644, 'start': 3508.2200000000003, 'end': 3513.32, 'text': ' So how do you obtain PC relative data reference?', 'tokens': [50453, 407, 577, 360, 291, 12701, 6465, 4972, 1412, 6408, 30, 50708], 'temperature': 0.0, 'avg_logprob': -0.13443910753404772, 'compression_ratio': 1.6179775280898876, 'no_speech_prob': 0.009401447139680386}, {'id': 636, 'seek': 350644, 'start': 3513.32, 'end': 3519.12, 'text': ' So if you have a program counter so if I know my current instruction and if I know the absolute', 'tokens': [50708, 407, 498, 291, 362, 257, 1461, 5682, 370, 498, 286, 458, 452, 2190, 10951, 293, 498, 286, 458, 264, 8236, 50998], 'temperature': 0.0, 'avg_logprob': -0.13443910753404772, 'compression_ratio': 1.6179775280898876, 'no_speech_prob': 0.009401447139680386}, {'id': 637, 'seek': 350644, 'start': 3519.12, 'end': 3521.7000000000003, 'text': ' address I can compute the difference.', 'tokens': [50998, 2985, 286, 393, 14722, 264, 2649, 13, 51127], 'temperature': 0.0, 'avg_logprob': -0.13443910753404772, 'compression_ratio': 1.6179775280898876, 'no_speech_prob': 0.009401447139680386}, {'id': 638, 'seek': 350644, 'start': 3521.7000000000003, 'end': 3535.04, 'text': ' So for example in so let us say my current instruction is here my PC is here and then', 'tokens': [51127, 407, 337, 1365, 294, 370, 718, 505, 584, 452, 2190, 10951, 307, 510, 452, 6465, 307, 510, 293, 550, 51794], 'temperature': 0.0, 'avg_logprob': -0.13443910753404772, 'compression_ratio': 1.6179775280898876, 'no_speech_prob': 0.009401447139680386}, {'id': 639, 'seek': 353504, 'start': 3535.04, 'end': 3541.42, 'text': ' I have bunch of other instructions and then I have my data section.', 'tokens': [50364, 286, 362, 3840, 295, 661, 9415, 293, 550, 286, 362, 452, 1412, 3541, 13, 50683], 'temperature': 0.0, 'avg_logprob': -0.14049801561567518, 'compression_ratio': 1.7055555555555555, 'no_speech_prob': 0.429173082113266}, {'id': 640, 'seek': 353504, 'start': 3541.42, 'end': 3548.24, 'text': ' I can obtain the relative address between PC and data by knowing the address of PC absolute', 'tokens': [50683, 286, 393, 12701, 264, 4972, 2985, 1296, 6465, 293, 1412, 538, 5276, 264, 2985, 295, 6465, 8236, 51024], 'temperature': 0.0, 'avg_logprob': -0.14049801561567518, 'compression_ratio': 1.7055555555555555, 'no_speech_prob': 0.429173082113266}, {'id': 641, 'seek': 353504, 'start': 3548.24, 'end': 3553.72, 'text': ' address of PC and absolute address of data because I can simply subtract them to get', 'tokens': [51024, 2985, 295, 6465, 293, 8236, 2985, 295, 1412, 570, 286, 393, 2935, 16390, 552, 281, 483, 51298], 'temperature': 0.0, 'avg_logprob': -0.14049801561567518, 'compression_ratio': 1.7055555555555555, 'no_speech_prob': 0.429173082113266}, {'id': 642, 'seek': 353504, 'start': 3553.72, 'end': 3556.96, 'text': ' the distance between them.', 'tokens': [51298, 264, 4560, 1296, 552, 13, 51460], 'temperature': 0.0, 'avg_logprob': -0.14049801561567518, 'compression_ratio': 1.7055555555555555, 'no_speech_prob': 0.429173082113266}, {'id': 643, 'seek': 353504, 'start': 3556.96, 'end': 3561.52, 'text': ' Now how do you get program counter?', 'tokens': [51460, 823, 577, 360, 291, 483, 1461, 5682, 30, 51688], 'temperature': 0.0, 'avg_logprob': -0.14049801561567518, 'compression_ratio': 1.7055555555555555, 'no_speech_prob': 0.429173082113266}, {'id': 644, 'seek': 356152, 'start': 3561.52, 'end': 3569.04, 'text': ' So you still remember we had a trick yesterday which was the first quiz on how to get address', 'tokens': [50364, 407, 291, 920, 1604, 321, 632, 257, 4282, 5186, 597, 390, 264, 700, 15450, 322, 577, 281, 483, 2985, 50740], 'temperature': 0.0, 'avg_logprob': -0.13508957975050984, 'compression_ratio': 1.7062146892655368, 'no_speech_prob': 0.02593471109867096}, {'id': 645, 'seek': 356152, 'start': 3569.04, 'end': 3572.04, 'text': ' of the current instruction.', 'tokens': [50740, 295, 264, 2190, 10951, 13, 50890], 'temperature': 0.0, 'avg_logprob': -0.13508957975050984, 'compression_ratio': 1.7062146892655368, 'no_speech_prob': 0.02593471109867096}, {'id': 646, 'seek': 356152, 'start': 3572.04, 'end': 3581.6, 'text': ' We get address of current instruction by doing a dummy call and popping from the stack and', 'tokens': [50890, 492, 483, 2985, 295, 2190, 10951, 538, 884, 257, 35064, 818, 293, 18374, 490, 264, 8630, 293, 51368], 'temperature': 0.0, 'avg_logprob': -0.13508957975050984, 'compression_ratio': 1.7062146892655368, 'no_speech_prob': 0.02593471109867096}, {'id': 647, 'seek': 356152, 'start': 3581.6, 'end': 3587.16, 'text': ' EBX now holds the current instruction and now we already know how to get absolute address', 'tokens': [51368, 50148, 55, 586, 9190, 264, 2190, 10951, 293, 586, 321, 1217, 458, 577, 281, 483, 8236, 2985, 51646], 'temperature': 0.0, 'avg_logprob': -0.13508957975050984, 'compression_ratio': 1.7062146892655368, 'no_speech_prob': 0.02593471109867096}, {'id': 648, 'seek': 358716, 'start': 3587.16, 'end': 3594.6, 'text': ' of symbols and we subtract them and we get the PC relative address.', 'tokens': [50364, 295, 16944, 293, 321, 16390, 552, 293, 321, 483, 264, 6465, 4972, 2985, 13, 50736], 'temperature': 0.0, 'avg_logprob': -0.15065798006559672, 'compression_ratio': 1.556701030927835, 'no_speech_prob': 0.4984477162361145}, {'id': 649, 'seek': 358716, 'start': 3594.6, 'end': 3596.64, 'text': ' Is it clear?', 'tokens': [50736, 1119, 309, 1850, 30, 50838], 'temperature': 0.0, 'avg_logprob': -0.15065798006559672, 'compression_ratio': 1.556701030927835, 'no_speech_prob': 0.4984477162361145}, {'id': 650, 'seek': 358716, 'start': 3596.64, 'end': 3604.2599999999998, 'text': ' Now this is what the code will look like.', 'tokens': [50838, 823, 341, 307, 437, 264, 3089, 486, 574, 411, 13, 51219], 'temperature': 0.0, 'avg_logprob': -0.15065798006559672, 'compression_ratio': 1.556701030927835, 'no_speech_prob': 0.4984477162361145}, {'id': 651, 'seek': 358716, 'start': 3604.2599999999998, 'end': 3610.8799999999997, 'text': ' So whenever you have to access any variable you first have to get address of GOT and address', 'tokens': [51219, 407, 5699, 291, 362, 281, 2105, 604, 7006, 291, 700, 362, 281, 483, 2985, 295, 36525, 293, 2985, 51550], 'temperature': 0.0, 'avg_logprob': -0.15065798006559672, 'compression_ratio': 1.556701030927835, 'no_speech_prob': 0.4984477162361145}, {'id': 652, 'seek': 358716, 'start': 3610.8799999999997, 'end': 3616.96, 'text': ' of GOT can be obtained using the trick which I showed in the last slide because GOT is', 'tokens': [51550, 295, 36525, 393, 312, 14879, 1228, 264, 4282, 597, 286, 4712, 294, 264, 1036, 4137, 570, 36525, 307, 51854], 'temperature': 0.0, 'avg_logprob': -0.15065798006559672, 'compression_ratio': 1.556701030927835, 'no_speech_prob': 0.4984477162361145}, {'id': 653, 'seek': 361696, 'start': 3616.96, 'end': 3620.88, 'text': ' at some fixed position from every instruction.', 'tokens': [50364, 412, 512, 6806, 2535, 490, 633, 10951, 13, 50560], 'temperature': 0.0, 'avg_logprob': -0.12690302904914408, 'compression_ratio': 1.6243093922651934, 'no_speech_prob': 0.002321090316399932}, {'id': 654, 'seek': 361696, 'start': 3620.88, 'end': 3627.2400000000002, 'text': ' Once you have address of GOT every variable has a entry in GOT.', 'tokens': [50560, 3443, 291, 362, 2985, 295, 36525, 633, 7006, 575, 257, 8729, 294, 36525, 13, 50878], 'temperature': 0.0, 'avg_logprob': -0.12690302904914408, 'compression_ratio': 1.6243093922651934, 'no_speech_prob': 0.002321090316399932}, {'id': 655, 'seek': 361696, 'start': 3627.2400000000002, 'end': 3636.48, 'text': " So let's say you say GBL is entry 0, GBL 2 is entry 2, GBL 3 is entry 3 and so on.", 'tokens': [50878, 407, 718, 311, 584, 291, 584, 460, 17624, 307, 8729, 1958, 11, 460, 17624, 568, 307, 8729, 568, 11, 460, 17624, 805, 307, 8729, 805, 293, 370, 322, 13, 51340], 'temperature': 0.0, 'avg_logprob': -0.12690302904914408, 'compression_ratio': 1.6243093922651934, 'no_speech_prob': 0.002321090316399932}, {'id': 656, 'seek': 361696, 'start': 3636.48, 'end': 3643.0, 'text': " Then you get address of the variable from GOT and then that's what you use to dereference", 'tokens': [51340, 1396, 291, 483, 2985, 295, 264, 7006, 490, 36525, 293, 550, 300, 311, 437, 291, 764, 281, 15969, 5158, 51666], 'temperature': 0.0, 'avg_logprob': -0.12690302904914408, 'compression_ratio': 1.6243093922651934, 'no_speech_prob': 0.002321090316399932}, {'id': 657, 'seek': 361696, 'start': 3643.0, 'end': 3645.44, 'text': ' your code.', 'tokens': [51666, 428, 3089, 13, 51788], 'temperature': 0.0, 'avg_logprob': -0.12690302904914408, 'compression_ratio': 1.6243093922651934, 'no_speech_prob': 0.002321090316399932}, {'id': 658, 'seek': 364544, 'start': 3645.44, 'end': 3648.2000000000003, 'text': ' Is the algorithm clear on how we are going to do it?', 'tokens': [50364, 1119, 264, 9284, 1850, 322, 577, 321, 366, 516, 281, 360, 309, 30, 50502], 'temperature': 0.0, 'avg_logprob': -0.12189119711689565, 'compression_ratio': 1.6108374384236452, 'no_speech_prob': 0.1326192021369934}, {'id': 659, 'seek': 364544, 'start': 3648.2000000000003, 'end': 3654.2400000000002, 'text': ' So anytime you have to refer to a variable you first look up where is the GOT.', 'tokens': [50502, 407, 13038, 291, 362, 281, 2864, 281, 257, 7006, 291, 700, 574, 493, 689, 307, 264, 36525, 13, 50804], 'temperature': 0.0, 'avg_logprob': -0.12189119711689565, 'compression_ratio': 1.6108374384236452, 'no_speech_prob': 0.1326192021369934}, {'id': 660, 'seek': 364544, 'start': 3654.2400000000002, 'end': 3660.96, 'text': ' Once you have GOT you know layout of the GOT that in what order symbols are laid out in', 'tokens': [50804, 3443, 291, 362, 36525, 291, 458, 13333, 295, 264, 36525, 300, 294, 437, 1668, 16944, 366, 9897, 484, 294, 51140], 'temperature': 0.0, 'avg_logprob': -0.12189119711689565, 'compression_ratio': 1.6108374384236452, 'no_speech_prob': 0.1326192021369934}, {'id': 661, 'seek': 364544, 'start': 3660.96, 'end': 3668.7200000000003, 'text': ' GOT and then you use that entry to get the actual address of the symbol.', 'tokens': [51140, 36525, 293, 550, 291, 764, 300, 8729, 281, 483, 264, 3539, 2985, 295, 264, 5986, 13, 51528], 'temperature': 0.0, 'avg_logprob': -0.12189119711689565, 'compression_ratio': 1.6108374384236452, 'no_speech_prob': 0.1326192021369934}, {'id': 662, 'seek': 364544, 'start': 3668.7200000000003, 'end': 3670.64, 'text': ' So this is how the code will look.', 'tokens': [51528, 407, 341, 307, 577, 264, 3089, 486, 574, 13, 51624], 'temperature': 0.0, 'avg_logprob': -0.12189119711689565, 'compression_ratio': 1.6108374384236452, 'no_speech_prob': 0.1326192021369934}, {'id': 663, 'seek': 367064, 'start': 3670.64, 'end': 3675.92, 'text': " I'm sure when you were looking at this assembly you were seeing something like this x86 PC", 'tokens': [50364, 286, 478, 988, 562, 291, 645, 1237, 412, 341, 12103, 291, 645, 2577, 746, 411, 341, 2031, 22193, 6465, 50628], 'temperature': 0.0, 'avg_logprob': -0.16975654676122573, 'compression_ratio': 1.6346153846153846, 'no_speech_prob': 0.24439361691474915}, {'id': 664, 'seek': 367064, 'start': 3675.92, 'end': 3677.62, 'text': ' get THUNC CX.', 'tokens': [50628, 483, 3578, 3979, 34, 383, 55, 13, 50713], 'temperature': 0.0, 'avg_logprob': -0.16975654676122573, 'compression_ratio': 1.6346153846153846, 'no_speech_prob': 0.24439361691474915}, {'id': 665, 'seek': 367064, 'start': 3677.62, 'end': 3679.7599999999998, 'text': ' How many of you saw this?', 'tokens': [50713, 1012, 867, 295, 291, 1866, 341, 30, 50820], 'temperature': 0.0, 'avg_logprob': -0.16975654676122573, 'compression_ratio': 1.6346153846153846, 'no_speech_prob': 0.24439361691474915}, {'id': 666, 'seek': 367064, 'start': 3679.7599999999998, 'end': 3685.12, 'text': ' That there was something in the text section called THUMCX and THUMBX and so on.', 'tokens': [50820, 663, 456, 390, 746, 294, 264, 2487, 3541, 1219, 3578, 14340, 34, 55, 293, 3578, 14340, 33, 55, 293, 370, 322, 13, 51088], 'temperature': 0.0, 'avg_logprob': -0.16975654676122573, 'compression_ratio': 1.6346153846153846, 'no_speech_prob': 0.24439361691474915}, {'id': 667, 'seek': 367064, 'start': 3685.12, 'end': 3689.7599999999998, 'text': ' So this THUNC code is actually doing the trick which we did.', 'tokens': [51088, 407, 341, 3578, 3979, 34, 3089, 307, 767, 884, 264, 4282, 597, 321, 630, 13, 51320], 'temperature': 0.0, 'avg_logprob': -0.16975654676122573, 'compression_ratio': 1.6346153846153846, 'no_speech_prob': 0.24439361691474915}, {'id': 668, 'seek': 367064, 'start': 3689.7599999999998, 'end': 3695.3199999999997, 'text': ' So it is going to do a call and it is going to do a pop and return.', 'tokens': [51320, 407, 309, 307, 516, 281, 360, 257, 818, 293, 309, 307, 516, 281, 360, 257, 1665, 293, 2736, 13, 51598], 'temperature': 0.0, 'avg_logprob': -0.16975654676122573, 'compression_ratio': 1.6346153846153846, 'no_speech_prob': 0.24439361691474915}, {'id': 669, 'seek': 369532, 'start': 3695.32, 'end': 3701.96, 'text': ' So after this instruction CX registers holds address of the current instruction.', 'tokens': [50364, 407, 934, 341, 10951, 383, 55, 38351, 9190, 2985, 295, 264, 2190, 10951, 13, 50696], 'temperature': 0.0, 'avg_logprob': -0.14330222790057842, 'compression_ratio': 1.6242424242424243, 'no_speech_prob': 0.09003090113401413}, {'id': 670, 'seek': 369532, 'start': 3701.96, 'end': 3708.96, 'text': ' And then we add to that the offset I mean this address will likely be negative and then', 'tokens': [50696, 400, 550, 321, 909, 281, 300, 264, 18687, 286, 914, 341, 2985, 486, 3700, 312, 3671, 293, 550, 51046], 'temperature': 0.0, 'avg_logprob': -0.14330222790057842, 'compression_ratio': 1.6242424242424243, 'no_speech_prob': 0.09003090113401413}, {'id': 671, 'seek': 369532, 'start': 3708.96, 'end': 3715.36, 'text': ' we add to that the address of the how far GOT is from the text section which was decided', 'tokens': [51046, 321, 909, 281, 300, 264, 2985, 295, 264, 577, 1400, 36525, 307, 490, 264, 2487, 3541, 597, 390, 3047, 51366], 'temperature': 0.0, 'avg_logprob': -0.14330222790057842, 'compression_ratio': 1.6242424242424243, 'no_speech_prob': 0.09003090113401413}, {'id': 672, 'seek': 369532, 'start': 3715.36, 'end': 3718.7200000000003, 'text': ' by linker.', 'tokens': [51366, 538, 2113, 260, 13, 51534], 'temperature': 0.0, 'avg_logprob': -0.14330222790057842, 'compression_ratio': 1.6242424242424243, 'no_speech_prob': 0.09003090113401413}, {'id': 673, 'seek': 371872, 'start': 3719.2799999999997, 'end': 3725.9599999999996, 'text': ' So at this point ECX holds the base address of GOT.', 'tokens': [50392, 407, 412, 341, 935, 19081, 55, 9190, 264, 3096, 2985, 295, 36525, 13, 50726], 'temperature': 0.0, 'avg_logprob': -0.1380379235566552, 'compression_ratio': 1.6904761904761905, 'no_speech_prob': 0.0684099942445755}, {'id': 674, 'seek': 371872, 'start': 3725.9599999999996, 'end': 3730.8199999999997, 'text': ' Then we essentially get to the variable which we wanted.', 'tokens': [50726, 1396, 321, 4476, 483, 281, 264, 7006, 597, 321, 1415, 13, 50969], 'temperature': 0.0, 'avg_logprob': -0.1380379235566552, 'compression_ratio': 1.6904761904761905, 'no_speech_prob': 0.0684099942445755}, {'id': 675, 'seek': 371872, 'start': 3730.8199999999997, 'end': 3739.5, 'text': ' So minus C holds the address of whatever variable we were concerned with and loads that address', 'tokens': [50969, 407, 3175, 383, 9190, 264, 2985, 295, 2035, 7006, 321, 645, 5922, 365, 293, 12668, 300, 2985, 51403], 'temperature': 0.0, 'avg_logprob': -0.1380379235566552, 'compression_ratio': 1.6904761904761905, 'no_speech_prob': 0.0684099942445755}, {'id': 676, 'seek': 371872, 'start': 3739.5, 'end': 3748.04, 'text': ' and then we actually load from that address to get the content of the variable.', 'tokens': [51403, 293, 550, 321, 767, 3677, 490, 300, 2985, 281, 483, 264, 2701, 295, 264, 7006, 13, 51830], 'temperature': 0.0, 'avg_logprob': -0.1380379235566552, 'compression_ratio': 1.6904761904761905, 'no_speech_prob': 0.0684099942445755}, {'id': 677, 'seek': 374804, 'start': 3748.04, 'end': 3749.16, 'text': ' Is this clear?', 'tokens': [50364, 1119, 341, 1850, 30, 50420], 'temperature': 0.0, 'avg_logprob': -0.14455261684599377, 'compression_ratio': 1.614678899082569, 'no_speech_prob': 0.0019802951719611883}, {'id': 678, 'seek': 374804, 'start': 3749.16, 'end': 3755.24, 'text': ' Because this is the key part of how dynamic libraries work.', 'tokens': [50420, 1436, 341, 307, 264, 2141, 644, 295, 577, 8546, 15148, 589, 13, 50724], 'temperature': 0.0, 'avg_logprob': -0.14455261684599377, 'compression_ratio': 1.614678899082569, 'no_speech_prob': 0.0019802951719611883}, {'id': 679, 'seek': 374804, 'start': 3755.24, 'end': 3762.0, 'text': ' So remember to access any variable you have to first load somehow GOT.', 'tokens': [50724, 407, 1604, 281, 2105, 604, 7006, 291, 362, 281, 700, 3677, 6063, 36525, 13, 51062], 'temperature': 0.0, 'avg_logprob': -0.14455261684599377, 'compression_ratio': 1.614678899082569, 'no_speech_prob': 0.0019802951719611883}, {'id': 680, 'seek': 374804, 'start': 3762.0, 'end': 3767.52, 'text': ' GOT you can load by knowing the PC relative address between your text section and data', 'tokens': [51062, 36525, 291, 393, 3677, 538, 5276, 264, 6465, 4972, 2985, 1296, 428, 2487, 3541, 293, 1412, 51338], 'temperature': 0.0, 'avg_logprob': -0.14455261684599377, 'compression_ratio': 1.614678899082569, 'no_speech_prob': 0.0019802951719611883}, {'id': 681, 'seek': 374804, 'start': 3767.52, 'end': 3770.68, 'text': ' section which was done by linker.', 'tokens': [51338, 3541, 597, 390, 1096, 538, 2113, 260, 13, 51496], 'temperature': 0.0, 'avg_logprob': -0.14455261684599377, 'compression_ratio': 1.614678899082569, 'no_speech_prob': 0.0019802951719611883}, {'id': 682, 'seek': 374804, 'start': 3770.68, 'end': 3776.92, 'text': ' Once you have GOT then within GOT you have series of variables addresses and then you', 'tokens': [51496, 3443, 291, 362, 36525, 550, 1951, 36525, 291, 362, 2638, 295, 9102, 16862, 293, 550, 291, 51808], 'temperature': 0.0, 'avg_logprob': -0.14455261684599377, 'compression_ratio': 1.614678899082569, 'no_speech_prob': 0.0019802951719611883}, {'id': 683, 'seek': 377692, 'start': 3776.92, 'end': 3783.64, 'text': ' load address of whatever variable you want from that into the register and then you actually', 'tokens': [50364, 3677, 2985, 295, 2035, 7006, 291, 528, 490, 300, 666, 264, 7280, 293, 550, 291, 767, 50700], 'temperature': 0.0, 'avg_logprob': -0.17280985945362157, 'compression_ratio': 1.4814814814814814, 'no_speech_prob': 0.00161946180742234}, {'id': 684, 'seek': 377692, 'start': 3783.64, 'end': 3789.96, 'text': ' dereference it.', 'tokens': [50700, 15969, 5158, 309, 13, 51016], 'temperature': 0.0, 'avg_logprob': -0.17280985945362157, 'compression_ratio': 1.4814814814814814, 'no_speech_prob': 0.00161946180742234}, {'id': 685, 'seek': 377692, 'start': 3789.96, 'end': 3795.04, 'text': ' The question is how is the address of variable actually placed into GOT?', 'tokens': [51016, 440, 1168, 307, 577, 307, 264, 2985, 295, 7006, 767, 7074, 666, 36525, 30, 51270], 'temperature': 0.0, 'avg_logprob': -0.17280985945362157, 'compression_ratio': 1.4814814814814814, 'no_speech_prob': 0.00161946180742234}, {'id': 686, 'seek': 377692, 'start': 3795.04, 'end': 3803.76, 'text': ' How does GOT know that GBL is at location 563 or whatever?', 'tokens': [51270, 1012, 775, 36525, 458, 300, 460, 17624, 307, 412, 4914, 19687, 18, 420, 2035, 30, 51706], 'temperature': 0.0, 'avg_logprob': -0.17280985945362157, 'compression_ratio': 1.4814814814814814, 'no_speech_prob': 0.00161946180742234}, {'id': 687, 'seek': 380376, 'start': 3803.76, 'end': 3807.0, 'text': ' Because the addresses will still be allocated at runtime.', 'tokens': [50364, 1436, 264, 16862, 486, 920, 312, 29772, 412, 34474, 13, 50526], 'temperature': 0.0, 'avg_logprob': -0.2461687585581904, 'compression_ratio': 1.396694214876033, 'no_speech_prob': 0.05741085484623909}, {'id': 688, 'seek': 380376, 'start': 3807.0, 'end': 3811.76, 'text': ' So compiler does not know or linker does not know what will be the actual address to be', 'tokens': [50526, 407, 31958, 775, 406, 458, 420, 2113, 260, 775, 406, 458, 437, 486, 312, 264, 3539, 2985, 281, 312, 50764], 'temperature': 0.0, 'avg_logprob': -0.2461687585581904, 'compression_ratio': 1.396694214876033, 'no_speech_prob': 0.05741085484623909}, {'id': 689, 'seek': 380376, 'start': 3811.76, 'end': 3816.36, 'text': ' put in GOT.', 'tokens': [50764, 829, 294, 36525, 13, 50994], 'temperature': 0.0, 'avg_logprob': -0.2461687585581904, 'compression_ratio': 1.396694214876033, 'no_speech_prob': 0.05741085484623909}, {'id': 690, 'seek': 380376, 'start': 3816.36, 'end': 3819.0800000000004, 'text': ' Relocation.', 'tokens': [50994, 8738, 27943, 13, 51130], 'temperature': 0.0, 'avg_logprob': -0.2461687585581904, 'compression_ratio': 1.396694214876033, 'no_speech_prob': 0.05741085484623909}, {'id': 691, 'seek': 381908, 'start': 3819.08, 'end': 3837.2, 'text': ' So what we do is we generate a relocation on this entry for example.', 'tokens': [50364, 407, 437, 321, 360, 307, 321, 8460, 257, 26981, 399, 322, 341, 8729, 337, 1365, 13, 51270], 'temperature': 0.0, 'avg_logprob': -0.1943060557047526, 'compression_ratio': 1.3362068965517242, 'no_speech_prob': 0.03491883724927902}, {'id': 692, 'seek': 381908, 'start': 3837.2, 'end': 3844.84, 'text': ' Since we do not know what is address of var 1 until it is loaded we can simply say var', 'tokens': [51270, 4162, 321, 360, 406, 458, 437, 307, 2985, 295, 1374, 502, 1826, 309, 307, 13210, 321, 393, 2935, 584, 1374, 51652], 'temperature': 0.0, 'avg_logprob': -0.1943060557047526, 'compression_ratio': 1.3362068965517242, 'no_speech_prob': 0.03491883724927902}, {'id': 693, 'seek': 384484, 'start': 3844.84, 'end': 3850.44, 'text': ' 1 holds some dummy content and there will be a relocation to patch this content with', 'tokens': [50364, 502, 9190, 512, 35064, 2701, 293, 456, 486, 312, 257, 26981, 399, 281, 9972, 341, 2701, 365, 50644], 'temperature': 0.0, 'avg_logprob': -0.13033400355158625, 'compression_ratio': 1.7088607594936709, 'no_speech_prob': 0.41659772396087646}, {'id': 694, 'seek': 384484, 'start': 3850.44, 'end': 3854.84, 'text': ' address of var 1.', 'tokens': [50644, 2985, 295, 1374, 502, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.13033400355158625, 'compression_ratio': 1.7088607594936709, 'no_speech_prob': 0.41659772396087646}, {'id': 695, 'seek': 384484, 'start': 3854.84, 'end': 3857.48, 'text': ' Is that clear?', 'tokens': [50864, 1119, 300, 1850, 30, 50996], 'temperature': 0.0, 'avg_logprob': -0.13033400355158625, 'compression_ratio': 1.7088607594936709, 'no_speech_prob': 0.41659772396087646}, {'id': 696, 'seek': 384484, 'start': 3857.48, 'end': 3863.0, 'text': ' So var 1 in GOT needs to hold absolute address and unless it is loaded we do not know that', 'tokens': [50996, 407, 1374, 502, 294, 36525, 2203, 281, 1797, 8236, 2985, 293, 5969, 309, 307, 13210, 321, 360, 406, 458, 300, 51272], 'temperature': 0.0, 'avg_logprob': -0.13033400355158625, 'compression_ratio': 1.7088607594936709, 'no_speech_prob': 0.41659772396087646}, {'id': 697, 'seek': 384484, 'start': 3863.0, 'end': 3864.08, 'text': ' address.', 'tokens': [51272, 2985, 13, 51326], 'temperature': 0.0, 'avg_logprob': -0.13033400355158625, 'compression_ratio': 1.7088607594936709, 'no_speech_prob': 0.41659772396087646}, {'id': 698, 'seek': 384484, 'start': 3864.08, 'end': 3874.38, 'text': ' So there will be a relocation to patch this address.', 'tokens': [51326, 407, 456, 486, 312, 257, 26981, 399, 281, 9972, 341, 2985, 13, 51841], 'temperature': 0.0, 'avg_logprob': -0.13033400355158625, 'compression_ratio': 1.7088607594936709, 'no_speech_prob': 0.41659772396087646}, {'id': 699, 'seek': 387438, 'start': 3874.38, 'end': 3876.6800000000003, 'text': ' So you can actually see this.', 'tokens': [50364, 407, 291, 393, 767, 536, 341, 13, 50479], 'temperature': 0.0, 'avg_logprob': -0.1652178406715393, 'compression_ratio': 1.5105263157894737, 'no_speech_prob': 0.00911150872707367}, {'id': 700, 'seek': 387438, 'start': 3876.6800000000003, 'end': 3882.52, 'text': ' So there is another type of relocation called R386 globe dat.', 'tokens': [50479, 407, 456, 307, 1071, 2010, 295, 26981, 399, 1219, 497, 12625, 21, 15371, 1137, 13, 50771], 'temperature': 0.0, 'avg_logprob': -0.1652178406715393, 'compression_ratio': 1.5105263157894737, 'no_speech_prob': 0.00911150872707367}, {'id': 701, 'seek': 387438, 'start': 3882.52, 'end': 3886.9, 'text': ' What this is saying is patch the address of var 1 in GOT.', 'tokens': [50771, 708, 341, 307, 1566, 307, 9972, 264, 2985, 295, 1374, 502, 294, 36525, 13, 50990], 'temperature': 0.0, 'avg_logprob': -0.1652178406715393, 'compression_ratio': 1.5105263157894737, 'no_speech_prob': 0.00911150872707367}, {'id': 702, 'seek': 387438, 'start': 3886.9, 'end': 3893.42, 'text': ' This offset is actually in the GOT.', 'tokens': [50990, 639, 18687, 307, 767, 294, 264, 36525, 13, 51316], 'temperature': 0.0, 'avg_logprob': -0.1652178406715393, 'compression_ratio': 1.5105263157894737, 'no_speech_prob': 0.00911150872707367}, {'id': 703, 'seek': 387438, 'start': 3893.42, 'end': 3899.86, 'text': ' Now I told you relocations are bad because of relocations we were not able to share the', 'tokens': [51316, 823, 286, 1907, 291, 26981, 763, 366, 1578, 570, 295, 26981, 763, 321, 645, 406, 1075, 281, 2073, 264, 51638], 'temperature': 0.0, 'avg_logprob': -0.1652178406715393, 'compression_ratio': 1.5105263157894737, 'no_speech_prob': 0.00911150872707367}, {'id': 704, 'seek': 387438, 'start': 3899.86, 'end': 3902.1400000000003, 'text': ' text section.', 'tokens': [51638, 2487, 3541, 13, 51752], 'temperature': 0.0, 'avg_logprob': -0.1652178406715393, 'compression_ratio': 1.5105263157894737, 'no_speech_prob': 0.00911150872707367}, {'id': 705, 'seek': 390214, 'start': 3902.14, 'end': 3910.5, 'text': ' So now if we are again going to generate relocation what is the use of all this scheme?', 'tokens': [50364, 407, 586, 498, 321, 366, 797, 516, 281, 8460, 26981, 399, 437, 307, 264, 764, 295, 439, 341, 12232, 30, 50782], 'temperature': 0.0, 'avg_logprob': -0.21005197004838425, 'compression_ratio': 1.5562130177514792, 'no_speech_prob': 0.064358189702034}, {'id': 706, 'seek': 390214, 'start': 3910.5, 'end': 3915.18, 'text': ' Because of relocations which were present earlier we were not able to share the text', 'tokens': [50782, 1436, 295, 26981, 763, 597, 645, 1974, 3071, 321, 645, 406, 1075, 281, 2073, 264, 2487, 51016], 'temperature': 0.0, 'avg_logprob': -0.21005197004838425, 'compression_ratio': 1.5562130177514792, 'no_speech_prob': 0.064358189702034}, {'id': 707, 'seek': 390214, 'start': 3915.18, 'end': 3917.14, 'text': ' section.', 'tokens': [51016, 3541, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.21005197004838425, 'compression_ratio': 1.5562130177514792, 'no_speech_prob': 0.064358189702034}, {'id': 708, 'seek': 390214, 'start': 3917.14, 'end': 3926.02, 'text': ' Now we are saying to patch address of variable in GOT we still need a relocation.', 'tokens': [51114, 823, 321, 366, 1566, 281, 9972, 2985, 295, 7006, 294, 36525, 321, 920, 643, 257, 26981, 399, 13, 51558], 'temperature': 0.0, 'avg_logprob': -0.21005197004838425, 'compression_ratio': 1.5562130177514792, 'no_speech_prob': 0.064358189702034}, {'id': 709, 'seek': 392602, 'start': 3926.02, 'end': 3946.5, 'text': ' But as soon as something is patched which is different for different processes you cannot', 'tokens': [50364, 583, 382, 2321, 382, 746, 307, 9972, 292, 597, 307, 819, 337, 819, 7555, 291, 2644, 51388], 'temperature': 0.0, 'avg_logprob': -0.30963117599487305, 'compression_ratio': 1.2073170731707317, 'no_speech_prob': 0.19537653028964996}, {'id': 710, 'seek': 392602, 'start': 3946.5, 'end': 3951.1, 'text': ' share it.', 'tokens': [51388, 2073, 309, 13, 51618], 'temperature': 0.0, 'avg_logprob': -0.30963117599487305, 'compression_ratio': 1.2073170731707317, 'no_speech_prob': 0.19537653028964996}, {'id': 711, 'seek': 395110, 'start': 3951.1, 'end': 3956.9, 'text': ' Does everyone get the question on what I am trying to ask?', 'tokens': [50364, 4402, 1518, 483, 264, 1168, 322, 437, 286, 669, 1382, 281, 1029, 30, 50654], 'temperature': 0.0, 'avg_logprob': -0.14286131387228493, 'compression_ratio': 1.7117117117117118, 'no_speech_prob': 0.3267567455768585}, {'id': 712, 'seek': 395110, 'start': 3956.9, 'end': 3959.1, 'text': ' So recollect what was happening earlier.', 'tokens': [50654, 407, 39495, 557, 437, 390, 2737, 3071, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.14286131387228493, 'compression_ratio': 1.7117117117117118, 'no_speech_prob': 0.3267567455768585}, {'id': 713, 'seek': 395110, 'start': 3959.1, 'end': 3964.9, 'text': ' So in earlier case what was happening is MOV instruction had a relocation which says patch', 'tokens': [50764, 407, 294, 3071, 1389, 437, 390, 2737, 307, 19290, 53, 10951, 632, 257, 26981, 399, 597, 1619, 9972, 51054], 'temperature': 0.0, 'avg_logprob': -0.14286131387228493, 'compression_ratio': 1.7117117117117118, 'no_speech_prob': 0.3267567455768585}, {'id': 714, 'seek': 395110, 'start': 3964.9, 'end': 3968.46, 'text': ' the address of GBL in MOV instruction.', 'tokens': [51054, 264, 2985, 295, 460, 17624, 294, 19290, 53, 10951, 13, 51232], 'temperature': 0.0, 'avg_logprob': -0.14286131387228493, 'compression_ratio': 1.7117117117117118, 'no_speech_prob': 0.3267567455768585}, {'id': 715, 'seek': 395110, 'start': 3968.46, 'end': 3973.86, 'text': ' Because of that the problem was if GBL was at different locations there was a problem', 'tokens': [51232, 1436, 295, 300, 264, 1154, 390, 498, 460, 17624, 390, 412, 819, 9253, 456, 390, 257, 1154, 51502], 'temperature': 0.0, 'avg_logprob': -0.14286131387228493, 'compression_ratio': 1.7117117117117118, 'no_speech_prob': 0.3267567455768585}, {'id': 716, 'seek': 395110, 'start': 3973.86, 'end': 3978.06, 'text': ' because the code section cannot be shared between two processes.', 'tokens': [51502, 570, 264, 3089, 3541, 2644, 312, 5507, 1296, 732, 7555, 13, 51712], 'temperature': 0.0, 'avg_logprob': -0.14286131387228493, 'compression_ratio': 1.7117117117117118, 'no_speech_prob': 0.3267567455768585}, {'id': 717, 'seek': 397806, 'start': 3978.06, 'end': 3983.54, 'text': ' Now what we are saying is we did all this complicated thing and we said that MOV will', 'tokens': [50364, 823, 437, 321, 366, 1566, 307, 321, 630, 439, 341, 6179, 551, 293, 321, 848, 300, 19290, 53, 486, 50638], 'temperature': 0.0, 'avg_logprob': -0.19356071587764856, 'compression_ratio': 1.494047619047619, 'no_speech_prob': 0.21668550372123718}, {'id': 718, 'seek': 397806, 'start': 3983.54, 'end': 3994.18, 'text': ' now refer to GOT and GOT will have a relocation because GOT how does it know where is GBL?', 'tokens': [50638, 586, 2864, 281, 36525, 293, 36525, 486, 362, 257, 26981, 399, 570, 36525, 577, 775, 309, 458, 689, 307, 460, 17624, 30, 51170], 'temperature': 0.0, 'avg_logprob': -0.19356071587764856, 'compression_ratio': 1.494047619047619, 'no_speech_prob': 0.21668550372123718}, {'id': 719, 'seek': 397806, 'start': 3994.18, 'end': 4001.38, 'text': ' So are we not losing all the benefit which we created by this indirection?', 'tokens': [51170, 407, 366, 321, 406, 7027, 439, 264, 5121, 597, 321, 2942, 538, 341, 1016, 621, 882, 30, 51530], 'temperature': 0.0, 'avg_logprob': -0.19356071587764856, 'compression_ratio': 1.494047619047619, 'no_speech_prob': 0.21668550372123718}, {'id': 720, 'seek': 400138, 'start': 4001.7000000000003, 'end': 4004.62, 'text': ' Correct.', 'tokens': [50380, 12753, 13, 50526], 'temperature': 0.0, 'avg_logprob': -0.17756332050670276, 'compression_ratio': 1.697674418604651, 'no_speech_prob': 0.06688805669546127}, {'id': 721, 'seek': 400138, 'start': 4004.62, 'end': 4011.78, 'text': ' So one of the things which you have to understand is GOT is not in the text section.', 'tokens': [50526, 407, 472, 295, 264, 721, 597, 291, 362, 281, 1223, 307, 36525, 307, 406, 294, 264, 2487, 3541, 13, 50884], 'temperature': 0.0, 'avg_logprob': -0.17756332050670276, 'compression_ratio': 1.697674418604651, 'no_speech_prob': 0.06688805669546127}, {'id': 722, 'seek': 400138, 'start': 4011.78, 'end': 4015.1400000000003, 'text': ' GOT is in the data section.', 'tokens': [50884, 36525, 307, 294, 264, 1412, 3541, 13, 51052], 'temperature': 0.0, 'avg_logprob': -0.17756332050670276, 'compression_ratio': 1.697674418604651, 'no_speech_prob': 0.06688805669546127}, {'id': 723, 'seek': 400138, 'start': 4015.1400000000003, 'end': 4017.98, 'text': ' So there are no relocations on the text section.', 'tokens': [51052, 407, 456, 366, 572, 26981, 763, 322, 264, 2487, 3541, 13, 51194], 'temperature': 0.0, 'avg_logprob': -0.17756332050670276, 'compression_ratio': 1.697674418604651, 'no_speech_prob': 0.06688805669546127}, {'id': 724, 'seek': 400138, 'start': 4017.98, 'end': 4024.7400000000002, 'text': ' Remember text section was only referring to GOT which was at the fixed relative address.', 'tokens': [51194, 5459, 2487, 3541, 390, 787, 13761, 281, 36525, 597, 390, 412, 264, 6806, 4972, 2985, 13, 51532], 'temperature': 0.0, 'avg_logprob': -0.17756332050670276, 'compression_ratio': 1.697674418604651, 'no_speech_prob': 0.06688805669546127}, {'id': 725, 'seek': 400138, 'start': 4024.7400000000002, 'end': 4028.1, 'text': ' And GOT what will relocation do?', 'tokens': [51532, 400, 36525, 437, 486, 26981, 399, 360, 30, 51700], 'temperature': 0.0, 'avg_logprob': -0.17756332050670276, 'compression_ratio': 1.697674418604651, 'no_speech_prob': 0.06688805669546127}, {'id': 726, 'seek': 402810, 'start': 4028.1, 'end': 4035.18, 'text': ' Relocation will change data in GOT and it will change it differently for different processes.', 'tokens': [50364, 1300, 5842, 399, 486, 1319, 1412, 294, 36525, 293, 309, 486, 1319, 309, 7614, 337, 819, 7555, 13, 50718], 'temperature': 0.0, 'avg_logprob': -0.1624600601196289, 'compression_ratio': 1.664804469273743, 'no_speech_prob': 0.04761021211743355}, {'id': 727, 'seek': 402810, 'start': 4035.18, 'end': 4036.62, 'text': ' But guess what?', 'tokens': [50718, 583, 2041, 437, 30, 50790], 'temperature': 0.0, 'avg_logprob': -0.1624600601196289, 'compression_ratio': 1.664804469273743, 'no_speech_prob': 0.04761021211743355}, {'id': 728, 'seek': 402810, 'start': 4036.62, 'end': 4041.86, 'text': ' Every process needs to have its own data because things are going to be different.', 'tokens': [50790, 2048, 1399, 2203, 281, 362, 1080, 1065, 1412, 570, 721, 366, 516, 281, 312, 819, 13, 51052], 'temperature': 0.0, 'avg_logprob': -0.1624600601196289, 'compression_ratio': 1.664804469273743, 'no_speech_prob': 0.04761021211743355}, {'id': 729, 'seek': 402810, 'start': 4041.86, 'end': 4049.8199999999997, 'text': ' Because GBL in process P1 may hold different data than it may hold in process P2.', 'tokens': [51052, 1436, 460, 17624, 294, 1399, 430, 16, 815, 1797, 819, 1412, 813, 309, 815, 1797, 294, 1399, 430, 17, 13, 51450], 'temperature': 0.0, 'avg_logprob': -0.1624600601196289, 'compression_ratio': 1.664804469273743, 'no_speech_prob': 0.04761021211743355}, {'id': 730, 'seek': 402810, 'start': 4049.8199999999997, 'end': 4053.88, 'text': ' Does everyone get this?', 'tokens': [51450, 4402, 1518, 483, 341, 30, 51653], 'temperature': 0.0, 'avg_logprob': -0.1624600601196289, 'compression_ratio': 1.664804469273743, 'no_speech_prob': 0.04761021211743355}, {'id': 731, 'seek': 405388, 'start': 4053.88, 'end': 4060.6, 'text': ' So what we did by this is we shifted all the relocations which earlier were present in', 'tokens': [50364, 407, 437, 321, 630, 538, 341, 307, 321, 18892, 439, 264, 26981, 763, 597, 3071, 645, 1974, 294, 50700], 'temperature': 0.0, 'avg_logprob': -0.15640583257565552, 'compression_ratio': 1.68348623853211, 'no_speech_prob': 0.009100880473852158}, {'id': 732, 'seek': 405388, 'start': 4060.6, 'end': 4063.52, 'text': ' text section into data section.', 'tokens': [50700, 2487, 3541, 666, 1412, 3541, 13, 50846], 'temperature': 0.0, 'avg_logprob': -0.15640583257565552, 'compression_ratio': 1.68348623853211, 'no_speech_prob': 0.009100880473852158}, {'id': 733, 'seek': 405388, 'start': 4063.52, 'end': 4068.44, 'text': ' That way text section can now actually be shared.', 'tokens': [50846, 663, 636, 2487, 3541, 393, 586, 767, 312, 5507, 13, 51092], 'temperature': 0.0, 'avg_logprob': -0.15640583257565552, 'compression_ratio': 1.68348623853211, 'no_speech_prob': 0.009100880473852158}, {'id': 734, 'seek': 405388, 'start': 4068.44, 'end': 4076.4, 'text': ' So when you have Lipsy loaded, what is happening is all the processes are sharing same physical', 'tokens': [51092, 407, 562, 291, 362, 441, 2600, 88, 13210, 11, 437, 307, 2737, 307, 439, 264, 7555, 366, 5414, 912, 4001, 51490], 'temperature': 0.0, 'avg_logprob': -0.15640583257565552, 'compression_ratio': 1.68348623853211, 'no_speech_prob': 0.009100880473852158}, {'id': 735, 'seek': 405388, 'start': 4076.4, 'end': 4078.12, 'text': ' copy of printf.', 'tokens': [51490, 5055, 295, 4482, 69, 13, 51576], 'temperature': 0.0, 'avg_logprob': -0.15640583257565552, 'compression_ratio': 1.68348623853211, 'no_speech_prob': 0.009100880473852158}, {'id': 736, 'seek': 405388, 'start': 4078.12, 'end': 4083.8, 'text': ' Although printf itself might be loaded at different addresses for different processes.', 'tokens': [51576, 5780, 4482, 69, 2564, 1062, 312, 13210, 412, 819, 16862, 337, 819, 7555, 13, 51860], 'temperature': 0.0, 'avg_logprob': -0.15640583257565552, 'compression_ratio': 1.68348623853211, 'no_speech_prob': 0.009100880473852158}, {'id': 737, 'seek': 408380, 'start': 4083.8, 'end': 4090.2000000000003, 'text': ' The data required by printf is still duplicated by every process because data needs to be', 'tokens': [50364, 440, 1412, 4739, 538, 4482, 69, 307, 920, 1581, 564, 3587, 538, 633, 1399, 570, 1412, 2203, 281, 312, 50684], 'temperature': 0.0, 'avg_logprob': -0.110969124770746, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.0004953851457685232}, {'id': 738, 'seek': 408380, 'start': 4090.2000000000003, 'end': 4095.52, 'text': ' different because processes may call printf differently.', 'tokens': [50684, 819, 570, 7555, 815, 818, 4482, 69, 7614, 13, 50950], 'temperature': 0.0, 'avg_logprob': -0.110969124770746, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.0004953851457685232}, {'id': 739, 'seek': 408380, 'start': 4095.52, 'end': 4096.900000000001, 'text': ' Does that make sense?', 'tokens': [50950, 4402, 300, 652, 2020, 30, 51019], 'temperature': 0.0, 'avg_logprob': -0.110969124770746, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.0004953851457685232}, {'id': 740, 'seek': 408380, 'start': 4096.900000000001, 'end': 4102.68, 'text': ' So what this is allowing us to do is to be able to share the code.', 'tokens': [51019, 407, 437, 341, 307, 8293, 505, 281, 360, 307, 281, 312, 1075, 281, 2073, 264, 3089, 13, 51308], 'temperature': 0.0, 'avg_logprob': -0.110969124770746, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.0004953851457685232}, {'id': 741, 'seek': 408380, 'start': 4102.68, 'end': 4105.62, 'text': " It's not sharing data.", 'tokens': [51308, 467, 311, 406, 5414, 1412, 13, 51455], 'temperature': 0.0, 'avg_logprob': -0.110969124770746, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.0004953851457685232}, {'id': 742, 'seek': 408380, 'start': 4105.62, 'end': 4111.96, 'text': ' And shared libraries are for sharing code, not sharing data.', 'tokens': [51455, 400, 5507, 15148, 366, 337, 5414, 3089, 11, 406, 5414, 1412, 13, 51772], 'temperature': 0.0, 'avg_logprob': -0.110969124770746, 'compression_ratio': 1.6614583333333333, 'no_speech_prob': 0.0004953851457685232}, {'id': 743, 'seek': 411196, 'start': 4111.96, 'end': 4113.9, 'text': ' Is this clear?', 'tokens': [50364, 1119, 341, 1850, 30, 50461], 'temperature': 0.0, 'avg_logprob': -0.1625641565474253, 'compression_ratio': 1.4850299401197604, 'no_speech_prob': 0.014271951280534267}, {'id': 744, 'seek': 411196, 'start': 4113.9, 'end': 4121.4800000000005, 'text': ' Because this is I think the fundamental reason why DSOs exist and why there is this complicated', 'tokens': [50461, 1436, 341, 307, 286, 519, 264, 8088, 1778, 983, 15816, 31376, 2514, 293, 983, 456, 307, 341, 6179, 50840], 'temperature': 0.0, 'avg_logprob': -0.1625641565474253, 'compression_ratio': 1.4850299401197604, 'no_speech_prob': 0.014271951280534267}, {'id': 745, 'seek': 411196, 'start': 4121.4800000000005, 'end': 4124.64, 'text': ' mechanism.', 'tokens': [50840, 7513, 13, 50998], 'temperature': 0.0, 'avg_logprob': -0.1625641565474253, 'compression_ratio': 1.4850299401197604, 'no_speech_prob': 0.014271951280534267}, {'id': 746, 'seek': 411196, 'start': 4124.64, 'end': 4131.32, 'text': ' Now the library which we created earlier did not have this GOT and other things.', 'tokens': [50998, 823, 264, 6405, 597, 321, 2942, 3071, 630, 406, 362, 341, 36525, 293, 661, 721, 13, 51332], 'temperature': 0.0, 'avg_logprob': -0.1625641565474253, 'compression_ratio': 1.4850299401197604, 'no_speech_prob': 0.014271951280534267}, {'id': 747, 'seek': 411196, 'start': 4131.32, 'end': 4134.08, 'text': ' So how do you create a library which had GOT?', 'tokens': [51332, 407, 577, 360, 291, 1884, 257, 6405, 597, 632, 36525, 30, 51470], 'temperature': 0.0, 'avg_logprob': -0.1625641565474253, 'compression_ratio': 1.4850299401197604, 'no_speech_prob': 0.014271951280534267}, {'id': 748, 'seek': 413408, 'start': 4134.08, 'end': 4143.5599999999995, 'text': ' So you specify a flag called fpick when creating the shared library.', 'tokens': [50364, 407, 291, 16500, 257, 7166, 1219, 283, 79, 618, 562, 4084, 264, 5507, 6405, 13, 50838], 'temperature': 0.0, 'avg_logprob': -0.13718240601675852, 'compression_ratio': 1.4850746268656716, 'no_speech_prob': 0.10660351812839508}, {'id': 749, 'seek': 413408, 'start': 4143.5599999999995, 'end': 4145.5, 'text': " So let's try that.", 'tokens': [50838, 407, 718, 311, 853, 300, 13, 50935], 'temperature': 0.0, 'avg_logprob': -0.13718240601675852, 'compression_ratio': 1.4850746268656716, 'no_speech_prob': 0.10660351812839508}, {'id': 750, 'seek': 413408, 'start': 4145.5, 'end': 4148.12, 'text': ' So I had this library already.', 'tokens': [50935, 407, 286, 632, 341, 6405, 1217, 13, 51066], 'temperature': 0.0, 'avg_logprob': -0.13718240601675852, 'compression_ratio': 1.4850746268656716, 'no_speech_prob': 0.10660351812839508}, {'id': 751, 'seek': 413408, 'start': 4148.12, 'end': 4158.1, 'text': ' So instead of compiling it as normal library, I will compile it as pick library.', 'tokens': [51066, 407, 2602, 295, 715, 4883, 309, 382, 2710, 6405, 11, 286, 486, 31413, 309, 382, 1888, 6405, 13, 51565], 'temperature': 0.0, 'avg_logprob': -0.13718240601675852, 'compression_ratio': 1.4850746268656716, 'no_speech_prob': 0.10660351812839508}, {'id': 752, 'seek': 415810, 'start': 4158.1, 'end': 4169.740000000001, 'text': ' Now what I see is if I look at the obj dump with relocations, you can see foo does not', 'tokens': [50364, 823, 437, 286, 536, 307, 498, 286, 574, 412, 264, 1111, 73, 11430, 365, 26981, 763, 11, 291, 393, 536, 726, 78, 775, 406, 50946], 'temperature': 0.0, 'avg_logprob': -0.1653233540209034, 'compression_ratio': 1.7417218543046358, 'no_speech_prob': 0.19642606377601624}, {'id': 753, 'seek': 415810, 'start': 4169.740000000001, 'end': 4173.22, 'text': ' have any relocations.', 'tokens': [50946, 362, 604, 26981, 763, 13, 51120], 'temperature': 0.0, 'avg_logprob': -0.1653233540209034, 'compression_ratio': 1.7417218543046358, 'no_speech_prob': 0.19642606377601624}, {'id': 754, 'seek': 415810, 'start': 4173.22, 'end': 4177.620000000001, 'text': ' If you look at it, foo does not have any relocations.', 'tokens': [51120, 759, 291, 574, 412, 309, 11, 726, 78, 775, 406, 362, 604, 26981, 763, 13, 51340], 'temperature': 0.0, 'avg_logprob': -0.1653233540209034, 'compression_ratio': 1.7417218543046358, 'no_speech_prob': 0.19642606377601624}, {'id': 755, 'seek': 415810, 'start': 4177.620000000001, 'end': 4182.9400000000005, 'text': ' Unlike earlier case where foo had relocations to patch the address of gbl and bar and this', 'tokens': [51340, 17657, 3071, 1389, 689, 726, 78, 632, 26981, 763, 281, 9972, 264, 2985, 295, 290, 5199, 293, 2159, 293, 341, 51606], 'temperature': 0.0, 'avg_logprob': -0.1653233540209034, 'compression_ratio': 1.7417218543046358, 'no_speech_prob': 0.19642606377601624}, {'id': 756, 'seek': 415810, 'start': 4182.9400000000005, 'end': 4185.04, 'text': ' and that.', 'tokens': [51606, 293, 300, 13, 51711], 'temperature': 0.0, 'avg_logprob': -0.1653233540209034, 'compression_ratio': 1.7417218543046358, 'no_speech_prob': 0.19642606377601624}, {'id': 757, 'seek': 418504, 'start': 4185.04, 'end': 4197.24, 'text': ' And there is we can see something called as GOT.', 'tokens': [50364, 400, 456, 307, 321, 393, 536, 746, 1219, 382, 36525, 13, 50974], 'temperature': 0.0, 'avg_logprob': -0.24419469492776052, 'compression_ratio': 1.3289473684210527, 'no_speech_prob': 0.2716124951839447}, {'id': 758, 'seek': 418504, 'start': 4197.24, 'end': 4202.44, 'text': ' So there is something called as GOT which is coming.', 'tokens': [50974, 407, 456, 307, 746, 1219, 382, 36525, 597, 307, 1348, 13, 51234], 'temperature': 0.0, 'avg_logprob': -0.24419469492776052, 'compression_ratio': 1.3289473684210527, 'no_speech_prob': 0.2716124951839447}, {'id': 759, 'seek': 420244, 'start': 4202.44, 'end': 4215.54, 'text': ' And you can also see there are relocations on GOT.', 'tokens': [50364, 400, 291, 393, 611, 536, 456, 366, 26981, 763, 322, 36525, 13, 51019], 'temperature': 0.0, 'avg_logprob': -0.11630396842956543, 'compression_ratio': 1.4014598540145986, 'no_speech_prob': 0.022945018485188484}, {'id': 760, 'seek': 420244, 'start': 4215.54, 'end': 4226.139999999999, 'text': ' For some reason this machine has become very slow.', 'tokens': [51019, 1171, 512, 1778, 341, 3479, 575, 1813, 588, 2964, 13, 51549], 'temperature': 0.0, 'avg_logprob': -0.11630396842956543, 'compression_ratio': 1.4014598540145986, 'no_speech_prob': 0.022945018485188484}, {'id': 761, 'seek': 420244, 'start': 4226.139999999999, 'end': 4231.379999999999, 'text': ' So if you look at it, now these are actually some of the relocations which will be present', 'tokens': [51549, 407, 498, 291, 574, 412, 309, 11, 586, 613, 366, 767, 512, 295, 264, 26981, 763, 597, 486, 312, 1974, 51811], 'temperature': 0.0, 'avg_logprob': -0.11630396842956543, 'compression_ratio': 1.4014598540145986, 'no_speech_prob': 0.022945018485188484}, {'id': 762, 'seek': 423138, 'start': 4231.38, 'end': 4233.12, 'text': ' on GOT.', 'tokens': [50364, 322, 36525, 13, 50451], 'temperature': 0.0, 'avg_logprob': -0.13882938263908265, 'compression_ratio': 1.3624161073825503, 'no_speech_prob': 0.38439124822616577}, {'id': 763, 'seek': 423138, 'start': 4233.12, 'end': 4239.04, 'text': ' So it is asking to populate address of gbl in the GOT.', 'tokens': [50451, 407, 309, 307, 3365, 281, 1665, 5256, 2985, 295, 290, 5199, 294, 264, 36525, 13, 50747], 'temperature': 0.0, 'avg_logprob': -0.13882938263908265, 'compression_ratio': 1.3624161073825503, 'no_speech_prob': 0.38439124822616577}, {'id': 764, 'seek': 423138, 'start': 4239.04, 'end': 4241.14, 'text': ' Is everyone clear with that?', 'tokens': [50747, 1119, 1518, 1850, 365, 300, 30, 50852], 'temperature': 0.0, 'avg_logprob': -0.13882938263908265, 'compression_ratio': 1.3624161073825503, 'no_speech_prob': 0.38439124822616577}, {'id': 765, 'seek': 423138, 'start': 4241.14, 'end': 4249.92, 'text': ' So to create a shared library, we have fpick.', 'tokens': [50852, 407, 281, 1884, 257, 5507, 6405, 11, 321, 362, 283, 79, 618, 13, 51291], 'temperature': 0.0, 'avg_logprob': -0.13882938263908265, 'compression_ratio': 1.3624161073825503, 'no_speech_prob': 0.38439124822616577}, {'id': 766, 'seek': 423138, 'start': 4249.92, 'end': 4255.14, 'text': ' So I think we can stop here for now and continue after the lunch.', 'tokens': [51291, 407, 286, 519, 321, 393, 1590, 510, 337, 586, 293, 2354, 934, 264, 6349, 13, 51552], 'temperature': 0.0, 'avg_logprob': -0.13882938263908265, 'compression_ratio': 1.3624161073825503, 'no_speech_prob': 0.38439124822616577}]