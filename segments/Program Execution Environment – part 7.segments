[{'id': 0, 'seek': 0, 'start': 0.0, 'end': 8.16, 'text': ' So, I think we can start.', 'tokens': [50364, 407, 11, 286, 519, 321, 393, 722, 13, 50772], 'temperature': 0.0, 'avg_logprob': -0.13630759716033936, 'compression_ratio': 1.4475138121546962, 'no_speech_prob': 0.012422176077961922}, {'id': 1, 'seek': 0, 'start': 8.16, 'end': 14.52, 'text': ' So, just to recap what we did just before the lunch.', 'tokens': [50772, 407, 11, 445, 281, 20928, 437, 321, 630, 445, 949, 264, 6349, 13, 51090], 'temperature': 0.0, 'avg_logprob': -0.13630759716033936, 'compression_ratio': 1.4475138121546962, 'no_speech_prob': 0.012422176077961922}, {'id': 2, 'seek': 0, 'start': 14.52, 'end': 22.2, 'text': ' The fundamental idea of PIC was to essentially ensure that the relocations which would otherwise', 'tokens': [51090, 440, 8088, 1558, 295, 430, 2532, 390, 281, 4476, 5586, 300, 264, 26981, 763, 597, 576, 5911, 51474], 'temperature': 0.0, 'avg_logprob': -0.13630759716033936, 'compression_ratio': 1.4475138121546962, 'no_speech_prob': 0.012422176077961922}, {'id': 3, 'seek': 0, 'start': 22.2, 'end': 28.36, 'text': ' appear on tech section are moved into the data section right and GOT holds the address', 'tokens': [51474, 4204, 322, 7553, 3541, 366, 4259, 666, 264, 1412, 3541, 558, 293, 36525, 9190, 264, 2985, 51782], 'temperature': 0.0, 'avg_logprob': -0.13630759716033936, 'compression_ratio': 1.4475138121546962, 'no_speech_prob': 0.012422176077961922}, {'id': 4, 'seek': 2836, 'start': 28.36, 'end': 35.76, 'text': ' and essentially what you do is you get the address of GOT using the relative addressing.', 'tokens': [50364, 293, 4476, 437, 291, 360, 307, 291, 483, 264, 2985, 295, 36525, 1228, 264, 4972, 14329, 13, 50734], 'temperature': 0.0, 'avg_logprob': -0.19726826308609605, 'compression_ratio': 1.612565445026178, 'no_speech_prob': 0.037282947450876236}, {'id': 5, 'seek': 2836, 'start': 35.76, 'end': 37.2, 'text': ' This is what we saw.', 'tokens': [50734, 639, 307, 437, 321, 1866, 13, 50806], 'temperature': 0.0, 'avg_logprob': -0.19726826308609605, 'compression_ratio': 1.612565445026178, 'no_speech_prob': 0.037282947450876236}, {'id': 6, 'seek': 2836, 'start': 37.2, 'end': 41.8, 'text': ' Now assignment.', 'tokens': [50806, 823, 15187, 13, 51036], 'temperature': 0.0, 'avg_logprob': -0.19726826308609605, 'compression_ratio': 1.612565445026178, 'no_speech_prob': 0.037282947450876236}, {'id': 7, 'seek': 2836, 'start': 41.8, 'end': 47.519999999999996, 'text': ' What you should do is you have already written this shared library which had this code right.', 'tokens': [51036, 708, 291, 820, 360, 307, 291, 362, 1217, 3720, 341, 5507, 6405, 597, 632, 341, 3089, 558, 13, 51322], 'temperature': 0.0, 'avg_logprob': -0.19726826308609605, 'compression_ratio': 1.612565445026178, 'no_speech_prob': 0.037282947450876236}, {'id': 8, 'seek': 2836, 'start': 47.519999999999996, 'end': 56.84, 'text': ' So, let us write a client code for it and let us print the address of GBL variable which', 'tokens': [51322, 407, 11, 718, 505, 2464, 257, 6423, 3089, 337, 309, 293, 718, 505, 4482, 264, 2985, 295, 460, 17624, 7006, 597, 51788], 'temperature': 0.0, 'avg_logprob': -0.19726826308609605, 'compression_ratio': 1.612565445026178, 'no_speech_prob': 0.037282947450876236}, {'id': 9, 'seek': 5684, 'start': 56.84, 'end': 62.040000000000006, 'text': ' is defined in the shared library and address of another global variable which is defined', 'tokens': [50364, 307, 7642, 294, 264, 5507, 6405, 293, 2985, 295, 1071, 4338, 7006, 597, 307, 7642, 50624], 'temperature': 0.0, 'avg_logprob': -0.2074603854485278, 'compression_ratio': 1.5328947368421053, 'no_speech_prob': 0.056401368230581284}, {'id': 10, 'seek': 5684, 'start': 62.040000000000006, 'end': 70.12, 'text': ' in the program and see if you see something unexpected.', 'tokens': [50624, 294, 264, 1461, 293, 536, 498, 291, 536, 746, 13106, 13, 51028], 'temperature': 0.0, 'avg_logprob': -0.2074603854485278, 'compression_ratio': 1.5328947368421053, 'no_speech_prob': 0.056401368230581284}, {'id': 11, 'seek': 5684, 'start': 70.12, 'end': 82.88, 'text': ' So, before we actually get to that can someone first tell me what is the expected thing.', 'tokens': [51028, 407, 11, 949, 321, 767, 483, 281, 300, 393, 1580, 700, 980, 385, 437, 307, 264, 5176, 551, 13, 51666], 'temperature': 0.0, 'avg_logprob': -0.2074603854485278, 'compression_ratio': 1.5328947368421053, 'no_speech_prob': 0.056401368230581284}, {'id': 12, 'seek': 8288, 'start': 83.16, 'end': 85.96, 'text': ' So for example, where is var stored?', 'tokens': [50378, 407, 337, 1365, 11, 689, 307, 1374, 12187, 30, 50518], 'temperature': 0.0, 'avg_logprob': -0.36310008215525796, 'compression_ratio': 1.4071428571428573, 'no_speech_prob': 0.3609636425971985}, {'id': 13, 'seek': 8288, 'start': 85.96, 'end': 91.72, 'text': ' Var in this myprog.c where is it stored?', 'tokens': [50518, 14662, 294, 341, 452, 4318, 70, 13, 66, 689, 307, 309, 12187, 30, 50806], 'temperature': 0.0, 'avg_logprob': -0.36310008215525796, 'compression_ratio': 1.4071428571428573, 'no_speech_prob': 0.3609636425971985}, {'id': 14, 'seek': 8288, 'start': 91.72, 'end': 93.72, 'text': ' Data section or BSS right.', 'tokens': [50806, 11888, 3541, 420, 363, 21929, 558, 13, 50906], 'temperature': 0.0, 'avg_logprob': -0.36310008215525796, 'compression_ratio': 1.4071428571428573, 'no_speech_prob': 0.3609636425971985}, {'id': 15, 'seek': 8288, 'start': 93.72, 'end': 100.19999999999999, 'text': ' So, the address will be according to the memory map which we saw right.', 'tokens': [50906, 407, 11, 264, 2985, 486, 312, 4650, 281, 264, 4675, 4471, 597, 321, 1866, 558, 13, 51230], 'temperature': 0.0, 'avg_logprob': -0.36310008215525796, 'compression_ratio': 1.4071428571428573, 'no_speech_prob': 0.3609636425971985}, {'id': 16, 'seek': 8288, 'start': 100.19999999999999, 'end': 110.03999999999999, 'text': ' Where is GBL stored?', 'tokens': [51230, 2305, 307, 460, 17624, 12187, 30, 51722], 'temperature': 0.0, 'avg_logprob': -0.36310008215525796, 'compression_ratio': 1.4071428571428573, 'no_speech_prob': 0.3609636425971985}, {'id': 17, 'seek': 11004, 'start': 110.04, 'end': 114.2, 'text': ' Where is GBL stored?', 'tokens': [50364, 2305, 307, 460, 17624, 12187, 30, 50572], 'temperature': 0.0, 'avg_logprob': -0.42325641262915825, 'compression_ratio': 1.2205882352941178, 'no_speech_prob': 0.09223669767379761}, {'id': 18, 'seek': 11004, 'start': 114.2, 'end': 120.56, 'text': ' GBL is defined by the shared library.', 'tokens': [50572, 460, 17624, 307, 7642, 538, 264, 5507, 6405, 13, 50890], 'temperature': 0.0, 'avg_logprob': -0.42325641262915825, 'compression_ratio': 1.2205882352941178, 'no_speech_prob': 0.09223669767379761}, {'id': 19, 'seek': 11004, 'start': 120.56, 'end': 135.52, 'text': ' So, where is GBL stored?', 'tokens': [50890, 407, 11, 689, 307, 460, 17624, 12187, 30, 51638], 'temperature': 0.0, 'avg_logprob': -0.42325641262915825, 'compression_ratio': 1.2205882352941178, 'no_speech_prob': 0.09223669767379761}, {'id': 20, 'seek': 13552, 'start': 135.52, 'end': 148.92000000000002, 'text': ' Will it be in the data section of myprog.c of myprog.c or should it be somewhere in the', 'tokens': [50364, 3099, 309, 312, 294, 264, 1412, 3541, 295, 452, 4318, 70, 13, 66, 295, 452, 4318, 70, 13, 66, 420, 820, 309, 312, 4079, 294, 264, 51034], 'temperature': 0.0, 'avg_logprob': -0.2473083364552465, 'compression_ratio': 1.5413533834586466, 'no_speech_prob': 0.02996808849275112}, {'id': 21, 'seek': 13552, 'start': 148.92000000000002, 'end': 157.64000000000001, 'text': ' memory mapped region of libmy.so right.', 'tokens': [51034, 4675, 33318, 4458, 295, 22854, 2226, 13, 539, 558, 13, 51470], 'temperature': 0.0, 'avg_logprob': -0.2473083364552465, 'compression_ratio': 1.5413533834586466, 'no_speech_prob': 0.02996808849275112}, {'id': 22, 'seek': 13552, 'start': 157.64000000000001, 'end': 162.32000000000002, 'text': ' So wherever shared library is loaded somewhere within that is what we expect.', 'tokens': [51470, 407, 8660, 5507, 6405, 307, 13210, 4079, 1951, 300, 307, 437, 321, 2066, 13, 51704], 'temperature': 0.0, 'avg_logprob': -0.2473083364552465, 'compression_ratio': 1.5413533834586466, 'no_speech_prob': 0.02996808849275112}, {'id': 23, 'seek': 16232, 'start': 162.32, 'end': 165.72, 'text': ' Now try to run this code and see what happens.', 'tokens': [50364, 823, 853, 281, 1190, 341, 3089, 293, 536, 437, 2314, 13, 50534], 'temperature': 0.0, 'avg_logprob': -0.23649611011628183, 'compression_ratio': 1.435897435897436, 'no_speech_prob': 0.025882292538881302}, {'id': 24, 'seek': 16232, 'start': 165.72, 'end': 172.04, 'text': ' So we expect address of var to be in the data section and address of GBL somewhere far away', 'tokens': [50534, 407, 321, 2066, 2985, 295, 1374, 281, 312, 294, 264, 1412, 3541, 293, 2985, 295, 460, 17624, 4079, 1400, 1314, 50850], 'temperature': 0.0, 'avg_logprob': -0.23649611011628183, 'compression_ratio': 1.435897435897436, 'no_speech_prob': 0.025882292538881302}, {'id': 25, 'seek': 16232, 'start': 172.04, 'end': 179.56, 'text': ' from it right.', 'tokens': [50850, 490, 309, 558, 13, 51226], 'temperature': 0.0, 'avg_logprob': -0.23649611011628183, 'compression_ratio': 1.435897435897436, 'no_speech_prob': 0.025882292538881302}, {'id': 26, 'seek': 16232, 'start': 179.56, 'end': 185.04, 'text': ' Why 8 bytes different?', 'tokens': [51226, 1545, 1649, 36088, 819, 30, 51500], 'temperature': 0.0, 'avg_logprob': -0.23649611011628183, 'compression_ratio': 1.435897435897436, 'no_speech_prob': 0.025882292538881302}, {'id': 27, 'seek': 16232, 'start': 185.04, 'end': 188.2, 'text': ' I mean are you observing difference of 8 bytes.', 'tokens': [51500, 286, 914, 366, 291, 22107, 2649, 295, 1649, 36088, 13, 51658], 'temperature': 0.0, 'avg_logprob': -0.23649611011628183, 'compression_ratio': 1.435897435897436, 'no_speech_prob': 0.025882292538881302}, {'id': 28, 'seek': 18820, 'start': 188.2, 'end': 199.16, 'text': ' So someone is observing the difference between address of GBL and address of var is 8 bytes.', 'tokens': [50364, 407, 1580, 307, 22107, 264, 2649, 1296, 2985, 295, 460, 17624, 293, 2985, 295, 1374, 307, 1649, 36088, 13, 50912], 'temperature': 0.0, 'avg_logprob': -0.16108200467866043, 'compression_ratio': 1.1354166666666667, 'no_speech_prob': 0.032201990485191345}, {'id': 29, 'seek': 18820, 'start': 199.16, 'end': 213.72, 'text': ' Is that logical?', 'tokens': [50912, 1119, 300, 14978, 30, 51640], 'temperature': 0.0, 'avg_logprob': -0.16108200467866043, 'compression_ratio': 1.1354166666666667, 'no_speech_prob': 0.032201990485191345}, {'id': 30, 'seek': 21372, 'start': 214.28, 'end': 219.2, 'text': ' Is anyone observing GBL is in the somewhere far region which might be in the memory mapped', 'tokens': [50392, 1119, 2878, 22107, 460, 17624, 307, 294, 264, 4079, 1400, 4458, 597, 1062, 312, 294, 264, 4675, 33318, 50638], 'temperature': 0.0, 'avg_logprob': -0.212490181128184, 'compression_ratio': 1.496, 'no_speech_prob': 0.1425333172082901}, {'id': 31, 'seek': 21372, 'start': 219.2, 'end': 231.0, 'text': ' region?', 'tokens': [50638, 4458, 30, 51228], 'temperature': 0.0, 'avg_logprob': -0.212490181128184, 'compression_ratio': 1.496, 'no_speech_prob': 0.1425333172082901}, {'id': 32, 'seek': 21372, 'start': 231.0, 'end': 236.92, 'text': ' Can you look at the process map and see where is the memory mapped region where libmy.so', 'tokens': [51228, 1664, 291, 574, 412, 264, 1399, 4471, 293, 536, 689, 307, 264, 4675, 33318, 4458, 689, 22854, 2226, 13, 539, 51524], 'temperature': 0.0, 'avg_logprob': -0.212490181128184, 'compression_ratio': 1.496, 'no_speech_prob': 0.1425333172082901}, {'id': 33, 'seek': 23692, 'start': 236.92, 'end': 251.51999999999998, 'text': ' is loaded.', 'tokens': [50364, 307, 13210, 13, 51094], 'temperature': 0.0, 'avg_logprob': -0.18709722432223233, 'compression_ratio': 1.3877551020408163, 'no_speech_prob': 0.009404871612787247}, {'id': 34, 'seek': 23692, 'start': 251.51999999999998, 'end': 254.95999999999998, 'text': ' So let us look at this I have the code.', 'tokens': [51094, 407, 718, 505, 574, 412, 341, 286, 362, 264, 3089, 13, 51266], 'temperature': 0.0, 'avg_logprob': -0.18709722432223233, 'compression_ratio': 1.3877551020408163, 'no_speech_prob': 0.009404871612787247}, {'id': 35, 'seek': 23692, 'start': 254.95999999999998, 'end': 260.68, 'text': ' So I have this code which is doing the same thing.', 'tokens': [51266, 407, 286, 362, 341, 3089, 597, 307, 884, 264, 912, 551, 13, 51552], 'temperature': 0.0, 'avg_logprob': -0.18709722432223233, 'compression_ratio': 1.3877551020408163, 'no_speech_prob': 0.009404871612787247}, {'id': 36, 'seek': 23692, 'start': 260.68, 'end': 263.68, 'text': ' I am printing the address of this.', 'tokens': [51552, 286, 669, 14699, 264, 2985, 295, 341, 13, 51702], 'temperature': 0.0, 'avg_logprob': -0.18709722432223233, 'compression_ratio': 1.3877551020408163, 'no_speech_prob': 0.009404871612787247}, {'id': 37, 'seek': 26368, 'start': 263.72, 'end': 291.08, 'text': ' Now I will add a scan of here so we can examine the process.', 'tokens': [50366, 823, 286, 486, 909, 257, 11049, 295, 510, 370, 321, 393, 17496, 264, 1399, 13, 51734], 'temperature': 0.0, 'avg_logprob': -0.3086346576088353, 'compression_ratio': 0.9230769230769231, 'no_speech_prob': 0.9308040142059326}, {'id': 38, 'seek': 29108, 'start': 291.15999999999997, 'end': 299.28, 'text': ' I run this program and I actually see very small difference between the two.', 'tokens': [50368, 286, 1190, 341, 1461, 293, 286, 767, 536, 588, 1359, 2649, 1296, 264, 732, 13, 50774], 'temperature': 0.0, 'avg_logprob': -0.18052981620611147, 'compression_ratio': 1.3388429752066116, 'no_speech_prob': 0.10178203880786896}, {'id': 39, 'seek': 29108, 'start': 299.28, 'end': 316.96, 'text': ' Now if I examine the process map I do see that libmy.so was loaded but it was at some', 'tokens': [50774, 823, 498, 286, 17496, 264, 1399, 4471, 286, 360, 536, 300, 22854, 2226, 13, 539, 390, 13210, 457, 309, 390, 412, 512, 51658], 'temperature': 0.0, 'avg_logprob': -0.18052981620611147, 'compression_ratio': 1.3388429752066116, 'no_speech_prob': 0.10178203880786896}, {'id': 40, 'seek': 31696, 'start': 317.03999999999996, 'end': 325.32, 'text': ' address f c something something.', 'tokens': [50368, 2985, 283, 269, 746, 746, 13, 50782], 'temperature': 0.0, 'avg_logprob': -0.16620164258139475, 'compression_ratio': 1.5144927536231885, 'no_speech_prob': 0.23794560134410858}, {'id': 41, 'seek': 31696, 'start': 325.32, 'end': 330.79999999999995, 'text': ' And I do see there is some data section here which is read write.', 'tokens': [50782, 400, 286, 360, 536, 456, 307, 512, 1412, 3541, 510, 597, 307, 1401, 2464, 13, 51056], 'temperature': 0.0, 'avg_logprob': -0.16620164258139475, 'compression_ratio': 1.5144927536231885, 'no_speech_prob': 0.23794560134410858}, {'id': 42, 'seek': 31696, 'start': 330.79999999999995, 'end': 339.32, 'text': ' So var is somewhere close to that and for some reason GBL is also very close to that.', 'tokens': [51056, 407, 1374, 307, 4079, 1998, 281, 300, 293, 337, 512, 1778, 460, 17624, 307, 611, 588, 1998, 281, 300, 13, 51482], 'temperature': 0.0, 'avg_logprob': -0.16620164258139475, 'compression_ratio': 1.5144927536231885, 'no_speech_prob': 0.23794560134410858}, {'id': 43, 'seek': 31696, 'start': 339.32, 'end': 342.03999999999996, 'text': ' So what really happened?', 'tokens': [51482, 407, 437, 534, 2011, 30, 51618], 'temperature': 0.0, 'avg_logprob': -0.16620164258139475, 'compression_ratio': 1.5144927536231885, 'no_speech_prob': 0.23794560134410858}, {'id': 44, 'seek': 34204, 'start': 342.04, 'end': 348.8, 'text': ' So somehow GBL variable which was actually supposed to be in the shared library is also', 'tokens': [50364, 407, 6063, 460, 17624, 7006, 597, 390, 767, 3442, 281, 312, 294, 264, 5507, 6405, 307, 611, 50702], 'temperature': 0.0, 'avg_logprob': -0.22227938969930014, 'compression_ratio': 1.3726708074534162, 'no_speech_prob': 0.003068138612434268}, {'id': 45, 'seek': 34204, 'start': 348.8, 'end': 354.04, 'text': ' loaded in the data section.', 'tokens': [50702, 13210, 294, 264, 1412, 3541, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.22227938969930014, 'compression_ratio': 1.3726708074534162, 'no_speech_prob': 0.003068138612434268}, {'id': 46, 'seek': 34204, 'start': 354.04, 'end': 359.6, 'text': ' Does everyone at least confirm that this is what we are observing?', 'tokens': [50964, 4402, 1518, 412, 1935, 9064, 300, 341, 307, 437, 321, 366, 22107, 30, 51242], 'temperature': 0.0, 'avg_logprob': -0.22227938969930014, 'compression_ratio': 1.3726708074534162, 'no_speech_prob': 0.003068138612434268}, {'id': 47, 'seek': 34204, 'start': 359.6, 'end': 362.64000000000004, 'text': ' Now any theories of why this happened?', 'tokens': [51242, 823, 604, 13667, 295, 983, 341, 2011, 30, 51394], 'temperature': 0.0, 'avg_logprob': -0.22227938969930014, 'compression_ratio': 1.3726708074534162, 'no_speech_prob': 0.003068138612434268}, {'id': 48, 'seek': 36264, 'start': 363.64, 'end': 373.44, 'text': " Shouldn't we be seeing some address close to this region where the library was loaded?", 'tokens': [50414, 34170, 380, 321, 312, 2577, 512, 2985, 1998, 281, 341, 4458, 689, 264, 6405, 390, 13210, 30, 50904], 'temperature': 0.0, 'avg_logprob': -0.2826268768310547, 'compression_ratio': 1.3888888888888888, 'no_speech_prob': 0.015628911554813385}, {'id': 49, 'seek': 36264, 'start': 373.44, 'end': 382.03999999999996, 'text': ' Ideally that is where it should be.', 'tokens': [50904, 40817, 300, 307, 689, 309, 820, 312, 13, 51334], 'temperature': 0.0, 'avg_logprob': -0.2826268768310547, 'compression_ratio': 1.3888888888888888, 'no_speech_prob': 0.015628911554813385}, {'id': 50, 'seek': 36264, 'start': 382.03999999999996, 'end': 392.56, 'text': ' The reason this happens is because the a.out which is produced is executable.', 'tokens': [51334, 440, 1778, 341, 2314, 307, 570, 264, 257, 13, 346, 597, 307, 7126, 307, 7568, 712, 13, 51860], 'temperature': 0.0, 'avg_logprob': -0.2826268768310547, 'compression_ratio': 1.3888888888888888, 'no_speech_prob': 0.015628911554813385}, {'id': 51, 'seek': 39256, 'start': 392.56, 'end': 395.8, 'text': ' It is not relocatable.', 'tokens': [50364, 467, 307, 406, 26981, 31415, 13, 50526], 'temperature': 0.0, 'avg_logprob': -0.1346150217829524, 'compression_ratio': 1.5217391304347827, 'no_speech_prob': 0.0005352897569537163}, {'id': 52, 'seek': 39256, 'start': 395.8, 'end': 407.64, 'text': ' Now what happens is when this code is linked into a.out there is no idea to the linker', 'tokens': [50526, 823, 437, 2314, 307, 562, 341, 3089, 307, 9408, 666, 257, 13, 346, 456, 307, 572, 1558, 281, 264, 2113, 260, 51118], 'temperature': 0.0, 'avg_logprob': -0.1346150217829524, 'compression_ratio': 1.5217391304347827, 'no_speech_prob': 0.0005352897569537163}, {'id': 53, 'seek': 39256, 'start': 407.64, 'end': 412.28, 'text': ' and compiler where GBL is going to come from.', 'tokens': [51118, 293, 31958, 689, 460, 17624, 307, 516, 281, 808, 490, 13, 51350], 'temperature': 0.0, 'avg_logprob': -0.1346150217829524, 'compression_ratio': 1.5217391304347827, 'no_speech_prob': 0.0005352897569537163}, {'id': 54, 'seek': 39256, 'start': 412.28, 'end': 416.84000000000003, 'text': ' And they cannot change the text section of this with additional relocation because it', 'tokens': [51350, 400, 436, 2644, 1319, 264, 2487, 3541, 295, 341, 365, 4497, 26981, 399, 570, 309, 51578], 'temperature': 0.0, 'avg_logprob': -0.1346150217829524, 'compression_ratio': 1.5217391304347827, 'no_speech_prob': 0.0005352897569537163}, {'id': 55, 'seek': 39256, 'start': 416.84000000000003, 'end': 419.5, 'text': ' is supposed to be the finalized thing.', 'tokens': [51578, 307, 3442, 281, 312, 264, 2572, 1602, 551, 13, 51711], 'temperature': 0.0, 'avg_logprob': -0.1346150217829524, 'compression_ratio': 1.5217391304347827, 'no_speech_prob': 0.0005352897569537163}, {'id': 56, 'seek': 41950, 'start': 419.5, 'end': 424.26, 'text': ' So how will the address of GBL be obtained?', 'tokens': [50364, 407, 577, 486, 264, 2985, 295, 460, 17624, 312, 14879, 30, 50602], 'temperature': 0.0, 'avg_logprob': -0.0780717148838273, 'compression_ratio': 1.5069124423963134, 'no_speech_prob': 0.0010644544381648302}, {'id': 57, 'seek': 41950, 'start': 424.26, 'end': 428.02, 'text': ' Is everyone clear about the problem which I am trying to describe?', 'tokens': [50602, 1119, 1518, 1850, 466, 264, 1154, 597, 286, 669, 1382, 281, 6786, 30, 50790], 'temperature': 0.0, 'avg_logprob': -0.0780717148838273, 'compression_ratio': 1.5069124423963134, 'no_speech_prob': 0.0010644544381648302}, {'id': 58, 'seek': 41950, 'start': 428.02, 'end': 434.7, 'text': ' So a.out which is produced which contains the code of main is already finalized.', 'tokens': [50790, 407, 257, 13, 346, 597, 307, 7126, 597, 8306, 264, 3089, 295, 2135, 307, 1217, 2572, 1602, 13, 51124], 'temperature': 0.0, 'avg_logprob': -0.0780717148838273, 'compression_ratio': 1.5069124423963134, 'no_speech_prob': 0.0010644544381648302}, {'id': 59, 'seek': 41950, 'start': 434.7, 'end': 440.82, 'text': " It shouldn't be having any additional relocations to be processed.", 'tokens': [51124, 467, 4659, 380, 312, 1419, 604, 4497, 26981, 763, 281, 312, 18846, 13, 51430], 'temperature': 0.0, 'avg_logprob': -0.0780717148838273, 'compression_ratio': 1.5069124423963134, 'no_speech_prob': 0.0010644544381648302}, {'id': 60, 'seek': 41950, 'start': 440.82, 'end': 447.02, 'text': ' But GBL itself is not known because GBL will come from some library.', 'tokens': [51430, 583, 460, 17624, 2564, 307, 406, 2570, 570, 460, 17624, 486, 808, 490, 512, 6405, 13, 51740], 'temperature': 0.0, 'avg_logprob': -0.0780717148838273, 'compression_ratio': 1.5069124423963134, 'no_speech_prob': 0.0010644544381648302}, {'id': 61, 'seek': 44702, 'start': 447.02, 'end': 454.03999999999996, 'text': ' So what compilers and linkers do is they do something called as a copy relocation.', 'tokens': [50364, 407, 437, 715, 388, 433, 293, 2113, 433, 360, 307, 436, 360, 746, 1219, 382, 257, 5055, 26981, 399, 13, 50715], 'temperature': 0.0, 'avg_logprob': -0.10693821907043458, 'compression_ratio': 1.3064516129032258, 'no_speech_prob': 0.004606367088854313}, {'id': 62, 'seek': 44702, 'start': 454.03999999999996, 'end': 468.38, 'text': ' So if you look at a.out you will see a relocation called as R386 copy from GBL.', 'tokens': [50715, 407, 498, 291, 574, 412, 257, 13, 346, 291, 486, 536, 257, 26981, 399, 1219, 382, 497, 12625, 21, 5055, 490, 460, 17624, 13, 51432], 'temperature': 0.0, 'avg_logprob': -0.10693821907043458, 'compression_ratio': 1.3064516129032258, 'no_speech_prob': 0.004606367088854313}, {'id': 63, 'seek': 46838, 'start': 468.94, 'end': 478.06, 'text': ' So what this relocation is going to do is whenever the shared library is loaded and', 'tokens': [50392, 407, 437, 341, 26981, 399, 307, 516, 281, 360, 307, 5699, 264, 5507, 6405, 307, 13210, 293, 50848], 'temperature': 0.0, 'avg_logprob': -0.17553334177276234, 'compression_ratio': 1.7393617021276595, 'no_speech_prob': 0.048551227897405624}, {'id': 64, 'seek': 46838, 'start': 478.06, 'end': 483.58, 'text': ' wherever that address of the GBL in the shared library is it is going to copy content of', 'tokens': [50848, 8660, 300, 2985, 295, 264, 460, 17624, 294, 264, 5507, 6405, 307, 309, 307, 516, 281, 5055, 2701, 295, 51124], 'temperature': 0.0, 'avg_logprob': -0.17553334177276234, 'compression_ratio': 1.7393617021276595, 'no_speech_prob': 0.048551227897405624}, {'id': 65, 'seek': 46838, 'start': 483.58, 'end': 489.78, 'text': ' that into the data section of the executable.', 'tokens': [51124, 300, 666, 264, 1412, 3541, 295, 264, 7568, 712, 13, 51434], 'temperature': 0.0, 'avg_logprob': -0.17553334177276234, 'compression_ratio': 1.7393617021276595, 'no_speech_prob': 0.048551227897405624}, {'id': 66, 'seek': 46838, 'start': 489.78, 'end': 494.34, 'text': " And that's how it will work and all the subsequent references of GBL will actually be from the", 'tokens': [51434, 400, 300, 311, 577, 309, 486, 589, 293, 439, 264, 19962, 15400, 295, 460, 17624, 486, 767, 312, 490, 264, 51662], 'temperature': 0.0, 'avg_logprob': -0.17553334177276234, 'compression_ratio': 1.7393617021276595, 'no_speech_prob': 0.048551227897405624}, {'id': 67, 'seek': 46838, 'start': 494.34, 'end': 496.3, 'text': ' data section.', 'tokens': [51662, 1412, 3541, 13, 51760], 'temperature': 0.0, 'avg_logprob': -0.17553334177276234, 'compression_ratio': 1.7393617021276595, 'no_speech_prob': 0.048551227897405624}, {'id': 68, 'seek': 49630, 'start': 496.3, 'end': 503.38, 'text': ' So although data was owned by the shared library it actually got copied into the data section', 'tokens': [50364, 407, 4878, 1412, 390, 11684, 538, 264, 5507, 6405, 309, 767, 658, 25365, 666, 264, 1412, 3541, 50718], 'temperature': 0.0, 'avg_logprob': -0.14223043873624983, 'compression_ratio': 1.3758389261744965, 'no_speech_prob': 0.005896925460547209}, {'id': 69, 'seek': 49630, 'start': 503.38, 'end': 507.90000000000003, 'text': ' of the executable.', 'tokens': [50718, 295, 264, 7568, 712, 13, 50944], 'temperature': 0.0, 'avg_logprob': -0.14223043873624983, 'compression_ratio': 1.3758389261744965, 'no_speech_prob': 0.005896925460547209}, {'id': 70, 'seek': 49630, 'start': 507.90000000000003, 'end': 516.82, 'text': " And that's why you observe that GBL is actually close to your normal variables.", 'tokens': [50944, 400, 300, 311, 983, 291, 11441, 300, 460, 17624, 307, 767, 1998, 281, 428, 2710, 9102, 13, 51390], 'temperature': 0.0, 'avg_logprob': -0.14223043873624983, 'compression_ratio': 1.3758389261744965, 'no_speech_prob': 0.005896925460547209}, {'id': 71, 'seek': 49630, 'start': 516.82, 'end': 520.22, 'text': ' Is it clear?', 'tokens': [51390, 1119, 309, 1850, 30, 51560], 'temperature': 0.0, 'avg_logprob': -0.14223043873624983, 'compression_ratio': 1.3758389261744965, 'no_speech_prob': 0.005896925460547209}, {'id': 72, 'seek': 52022, 'start': 520.22, 'end': 526.7, 'text': ' Now we saw how to do data references.', 'tokens': [50364, 823, 321, 1866, 577, 281, 360, 1412, 15400, 13, 50688], 'temperature': 0.0, 'avg_logprob': -0.1150545816163759, 'compression_ratio': 1.5449735449735449, 'no_speech_prob': 0.01741696149110794}, {'id': 73, 'seek': 52022, 'start': 526.7, 'end': 533.26, 'text': ' We saw how shared libraries compiled with position independent code to refer to data.', 'tokens': [50688, 492, 1866, 577, 5507, 15148, 36548, 365, 2535, 6695, 3089, 281, 2864, 281, 1412, 13, 51016], 'temperature': 0.0, 'avg_logprob': -0.1150545816163759, 'compression_ratio': 1.5449735449735449, 'no_speech_prob': 0.01741696149110794}, {'id': 74, 'seek': 52022, 'start': 533.26, 'end': 535.3000000000001, 'text': ' But what about functions?', 'tokens': [51016, 583, 437, 466, 6828, 30, 51118], 'temperature': 0.0, 'avg_logprob': -0.1150545816163759, 'compression_ratio': 1.5449735449735449, 'no_speech_prob': 0.01741696149110794}, {'id': 75, 'seek': 52022, 'start': 535.3000000000001, 'end': 541.5600000000001, 'text': " So let's say this is my shared library code and foo is calling bar.", 'tokens': [51118, 407, 718, 311, 584, 341, 307, 452, 5507, 6405, 3089, 293, 726, 78, 307, 5141, 2159, 13, 51431], 'temperature': 0.0, 'avg_logprob': -0.1150545816163759, 'compression_ratio': 1.5449735449735449, 'no_speech_prob': 0.01741696149110794}, {'id': 76, 'seek': 52022, 'start': 541.5600000000001, 'end': 546.6600000000001, 'text': ' Now again just like the problem we had with data we have the same problem.', 'tokens': [51431, 823, 797, 445, 411, 264, 1154, 321, 632, 365, 1412, 321, 362, 264, 912, 1154, 13, 51686], 'temperature': 0.0, 'avg_logprob': -0.1150545816163759, 'compression_ratio': 1.5449735449735449, 'no_speech_prob': 0.01741696149110794}, {'id': 77, 'seek': 54666, 'start': 546.66, 'end': 552.0, 'text': ' That means address of bar may be different when the bar is actually loaded in context', 'tokens': [50364, 663, 1355, 2985, 295, 2159, 815, 312, 819, 562, 264, 2159, 307, 767, 13210, 294, 4319, 50631], 'temperature': 0.0, 'avg_logprob': -0.16171612562956633, 'compression_ratio': 1.395973154362416, 'no_speech_prob': 0.014914003200829029}, {'id': 78, 'seek': 54666, 'start': 552.0, 'end': 555.2199999999999, 'text': ' of some process.', 'tokens': [50631, 295, 512, 1399, 13, 50792], 'temperature': 0.0, 'avg_logprob': -0.16171612562956633, 'compression_ratio': 1.395973154362416, 'no_speech_prob': 0.014914003200829029}, {'id': 79, 'seek': 54666, 'start': 555.2199999999999, 'end': 564.3399999999999, 'text': ' So do we need to do anything for function calls also?', 'tokens': [50792, 407, 360, 321, 643, 281, 360, 1340, 337, 2445, 5498, 611, 30, 51248], 'temperature': 0.0, 'avg_logprob': -0.16171612562956633, 'compression_ratio': 1.395973154362416, 'no_speech_prob': 0.014914003200829029}, {'id': 80, 'seek': 54666, 'start': 564.3399999999999, 'end': 569.0799999999999, 'text': ' Any idea?', 'tokens': [51248, 2639, 1558, 30, 51485], 'temperature': 0.0, 'avg_logprob': -0.16171612562956633, 'compression_ratio': 1.395973154362416, 'no_speech_prob': 0.014914003200829029}, {'id': 81, 'seek': 54666, 'start': 569.0799999999999, 'end': 572.38, 'text': ' Remember the calls were already relative.', 'tokens': [51485, 5459, 264, 5498, 645, 1217, 4972, 13, 51650], 'temperature': 0.0, 'avg_logprob': -0.16171612562956633, 'compression_ratio': 1.395973154362416, 'no_speech_prob': 0.014914003200829029}, {'id': 82, 'seek': 57238, 'start': 572.38, 'end': 578.38, 'text': " So when foo called bar the call instruction didn't take the absolute address of bar.", 'tokens': [50364, 407, 562, 726, 78, 1219, 2159, 264, 818, 10951, 994, 380, 747, 264, 8236, 2985, 295, 2159, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.11193068630724068, 'compression_ratio': 1.6030150753768844, 'no_speech_prob': 0.013204152695834637}, {'id': 83, 'seek': 57238, 'start': 578.38, 'end': 581.88, 'text': ' It took the relative address of the bar.', 'tokens': [50664, 467, 1890, 264, 4972, 2985, 295, 264, 2159, 13, 50839], 'temperature': 0.0, 'avg_logprob': -0.11193068630724068, 'compression_ratio': 1.6030150753768844, 'no_speech_prob': 0.013204152695834637}, {'id': 84, 'seek': 57238, 'start': 581.88, 'end': 587.9399999999999, 'text': " So by that logic we shouldn't need to do anything for the functions.", 'tokens': [50839, 407, 538, 300, 9952, 321, 4659, 380, 643, 281, 360, 1340, 337, 264, 6828, 13, 51142], 'temperature': 0.0, 'avg_logprob': -0.11193068630724068, 'compression_ratio': 1.6030150753768844, 'no_speech_prob': 0.013204152695834637}, {'id': 85, 'seek': 57238, 'start': 587.9399999999999, 'end': 592.42, 'text': ' But we need to do something.', 'tokens': [51142, 583, 321, 643, 281, 360, 746, 13, 51366], 'temperature': 0.0, 'avg_logprob': -0.11193068630724068, 'compression_ratio': 1.6030150753768844, 'no_speech_prob': 0.013204152695834637}, {'id': 86, 'seek': 57238, 'start': 592.42, 'end': 595.26, 'text': ' And symbol resolution is a problem.', 'tokens': [51366, 400, 5986, 8669, 307, 257, 1154, 13, 51508], 'temperature': 0.0, 'avg_logprob': -0.11193068630724068, 'compression_ratio': 1.6030150753768844, 'no_speech_prob': 0.013204152695834637}, {'id': 87, 'seek': 57238, 'start': 595.26, 'end': 600.7, 'text': ' So your assignment is to tell me what happens in this case.', 'tokens': [51508, 407, 428, 15187, 307, 281, 980, 385, 437, 2314, 294, 341, 1389, 13, 51780], 'temperature': 0.0, 'avg_logprob': -0.11193068630724068, 'compression_ratio': 1.6030150753768844, 'no_speech_prob': 0.013204152695834637}, {'id': 88, 'seek': 60070, 'start': 600.7, 'end': 606.98, 'text': " So let's say I have a shared library which has bar which is defined and I have myproc.c", 'tokens': [50364, 407, 718, 311, 584, 286, 362, 257, 5507, 6405, 597, 575, 2159, 597, 307, 7642, 293, 286, 362, 452, 4318, 66, 13, 66, 50678], 'temperature': 0.0, 'avg_logprob': -0.1980376982353103, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.08479935675859451}, {'id': 89, 'seek': 60070, 'start': 606.98, 'end': 611.34, 'text': ' which also defines bar.', 'tokens': [50678, 597, 611, 23122, 2159, 13, 50896], 'temperature': 0.0, 'avg_logprob': -0.1980376982353103, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.08479935675859451}, {'id': 90, 'seek': 60070, 'start': 611.34, 'end': 615.9000000000001, 'text': ' If this was normal code what will happen?', 'tokens': [50896, 759, 341, 390, 2710, 3089, 437, 486, 1051, 30, 51124], 'temperature': 0.0, 'avg_logprob': -0.1980376982353103, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.08479935675859451}, {'id': 91, 'seek': 60070, 'start': 615.9000000000001, 'end': 622.0400000000001, 'text': ' If this was myproc.c and main.c what will happen?', 'tokens': [51124, 759, 341, 390, 452, 4318, 66, 13, 66, 293, 2135, 13, 66, 437, 486, 1051, 30, 51431], 'temperature': 0.0, 'avg_logprob': -0.1980376982353103, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.08479935675859451}, {'id': 92, 'seek': 60070, 'start': 622.0400000000001, 'end': 628.22, 'text': ' Why will there be error?', 'tokens': [51431, 1545, 486, 456, 312, 6713, 30, 51740], 'temperature': 0.0, 'avg_logprob': -0.1980376982353103, 'compression_ratio': 1.6170212765957446, 'no_speech_prob': 0.08479935675859451}, {'id': 93, 'seek': 62822, 'start': 628.34, 'end': 633.3000000000001, 'text': ' So function with the same signature.', 'tokens': [50370, 407, 2445, 365, 264, 912, 13397, 13, 50618], 'temperature': 0.0, 'avg_logprob': -0.2949770313419708, 'compression_ratio': 1.4480874316939891, 'no_speech_prob': 0.1911260038614273}, {'id': 94, 'seek': 62822, 'start': 633.3000000000001, 'end': 636.02, 'text': " In terms of linker why it's an error?", 'tokens': [50618, 682, 2115, 295, 2113, 260, 983, 309, 311, 364, 6713, 30, 50754], 'temperature': 0.0, 'avg_logprob': -0.2949770313419708, 'compression_ratio': 1.4480874316939891, 'no_speech_prob': 0.1911260038614273}, {'id': 95, 'seek': 62822, 'start': 636.02, 'end': 638.0600000000001, 'text': ' What we saw yesterday?', 'tokens': [50754, 708, 321, 1866, 5186, 30, 50856], 'temperature': 0.0, 'avg_logprob': -0.2949770313419708, 'compression_ratio': 1.4480874316939891, 'no_speech_prob': 0.1911260038614273}, {'id': 96, 'seek': 62822, 'start': 638.0600000000001, 'end': 639.28, 'text': ' Correct.', 'tokens': [50856, 12753, 13, 50917], 'temperature': 0.0, 'avg_logprob': -0.2949770313419708, 'compression_ratio': 1.4480874316939891, 'no_speech_prob': 0.1911260038614273}, {'id': 97, 'seek': 62822, 'start': 639.28, 'end': 643.4, 'text': ' So function definitions were treated as strong symbol.', 'tokens': [50917, 407, 2445, 21988, 645, 8668, 382, 2068, 5986, 13, 51123], 'temperature': 0.0, 'avg_logprob': -0.2949770313419708, 'compression_ratio': 1.4480874316939891, 'no_speech_prob': 0.1911260038614273}, {'id': 98, 'seek': 62822, 'start': 643.4, 'end': 646.22, 'text': ' Whatever we learned yesterday.', 'tokens': [51123, 8541, 321, 3264, 5186, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.2949770313419708, 'compression_ratio': 1.4480874316939891, 'no_speech_prob': 0.1911260038614273}, {'id': 99, 'seek': 62822, 'start': 646.22, 'end': 652.78, 'text': ' Now what is the expected output in this case?', 'tokens': [51264, 823, 437, 307, 264, 5176, 5598, 294, 341, 1389, 30, 51592], 'temperature': 0.0, 'avg_logprob': -0.2949770313419708, 'compression_ratio': 1.4480874316939891, 'no_speech_prob': 0.1911260038614273}, {'id': 100, 'seek': 62822, 'start': 652.78, 'end': 654.4200000000001, 'text': ' Linker should raise error.', 'tokens': [51592, 8466, 260, 820, 5300, 6713, 13, 51674], 'temperature': 0.0, 'avg_logprob': -0.2949770313419708, 'compression_ratio': 1.4480874316939891, 'no_speech_prob': 0.1911260038614273}, {'id': 101, 'seek': 65442, 'start': 654.42, 'end': 660.78, 'text': ' At what point will it raise error?', 'tokens': [50364, 1711, 437, 935, 486, 309, 5300, 6713, 30, 50682], 'temperature': 0.0, 'avg_logprob': -0.2226170626553622, 'compression_ratio': 1.6810344827586208, 'no_speech_prob': 0.007574789226055145}, {'id': 102, 'seek': 65442, 'start': 660.78, 'end': 663.3399999999999, 'text': ' At what point will it raise error?', 'tokens': [50682, 1711, 437, 935, 486, 309, 5300, 6713, 30, 50810], 'temperature': 0.0, 'avg_logprob': -0.2226170626553622, 'compression_ratio': 1.6810344827586208, 'no_speech_prob': 0.007574789226055145}, {'id': 103, 'seek': 65442, 'start': 663.3399999999999, 'end': 670.92, 'text': ' Will it be at creation time creating executable or will it be at load time?', 'tokens': [50810, 3099, 309, 312, 412, 8016, 565, 4084, 7568, 712, 420, 486, 309, 312, 412, 3677, 565, 30, 51189], 'temperature': 0.0, 'avg_logprob': -0.2226170626553622, 'compression_ratio': 1.6810344827586208, 'no_speech_prob': 0.007574789226055145}, {'id': 104, 'seek': 65442, 'start': 670.92, 'end': 675.5, 'text': ' Can you try and tell me when does the error come?', 'tokens': [51189, 1664, 291, 853, 293, 980, 385, 562, 775, 264, 6713, 808, 30, 51418], 'temperature': 0.0, 'avg_logprob': -0.2226170626553622, 'compression_ratio': 1.6810344827586208, 'no_speech_prob': 0.007574789226055145}, {'id': 105, 'seek': 67550, 'start': 675.5, 'end': 698.34, 'text': ' Try the exact same case and tell me what is the error you get at whatever time?', 'tokens': [50364, 6526, 264, 1900, 912, 1389, 293, 980, 385, 437, 307, 264, 6713, 291, 483, 412, 2035, 565, 30, 51506], 'temperature': 0.0, 'avg_logprob': -0.300057134320659, 'compression_ratio': 1.325, 'no_speech_prob': 0.37131816148757935}, {'id': 106, 'seek': 67550, 'start': 698.34, 'end': 701.34, 'text': ' What is the error you got?', 'tokens': [51506, 708, 307, 264, 6713, 291, 658, 30, 51656], 'temperature': 0.0, 'avg_logprob': -0.300057134320659, 'compression_ratio': 1.325, 'no_speech_prob': 0.37131816148757935}, {'id': 107, 'seek': 70134, 'start': 701.34, 'end': 712.26, 'text': ' Try with m32.', 'tokens': [50364, 6526, 365, 275, 11440, 13, 50910], 'temperature': 0.0, 'avg_logprob': -0.5034996271133423, 'compression_ratio': 1.0731707317073171, 'no_speech_prob': 0.18823568522930145}, {'id': 108, 'seek': 70134, 'start': 712.26, 'end': 716.46, 'text': ' Sorry?', 'tokens': [50910, 4919, 30, 51120], 'temperature': 0.0, 'avg_logprob': -0.5034996271133423, 'compression_ratio': 1.0731707317073171, 'no_speech_prob': 0.18823568522930145}, {'id': 109, 'seek': 70134, 'start': 716.46, 'end': 718.26, 'text': ' No error.', 'tokens': [51120, 883, 6713, 13, 51210], 'temperature': 0.0, 'avg_logprob': -0.5034996271133423, 'compression_ratio': 1.0731707317073171, 'no_speech_prob': 0.18823568522930145}, {'id': 110, 'seek': 70134, 'start': 718.26, 'end': 726.72, 'text': ' So some people are saying they are not getting any error.', 'tokens': [51210, 407, 512, 561, 366, 1566, 436, 366, 406, 1242, 604, 6713, 13, 51633], 'temperature': 0.0, 'avg_logprob': -0.5034996271133423, 'compression_ratio': 1.0731707317073171, 'no_speech_prob': 0.18823568522930145}, {'id': 111, 'seek': 72672, 'start': 726.72, 'end': 731.98, 'text': ' So what is the actual output?', 'tokens': [50364, 407, 437, 307, 264, 3539, 5598, 30, 50627], 'temperature': 0.0, 'avg_logprob': -0.3525468243492974, 'compression_ratio': 0.8518518518518519, 'no_speech_prob': 0.5469127893447876}, {'id': 112, 'seek': 72672, 'start': 731.98, 'end': 744.9200000000001, 'text': ' How did 10 come?', 'tokens': [50627, 1012, 630, 1266, 808, 30, 51274], 'temperature': 0.0, 'avg_logprob': -0.3525468243492974, 'compression_ratio': 0.8518518518518519, 'no_speech_prob': 0.5469127893447876}, {'id': 113, 'seek': 74492, 'start': 744.92, 'end': 762.06, 'text': ' Anyone got the error?', 'tokens': [50364, 14643, 658, 264, 6713, 30, 51221], 'temperature': 0.0, 'avg_logprob': -0.1752834763637809, 'compression_ratio': 1.3875968992248062, 'no_speech_prob': 0.01563303731381893}, {'id': 114, 'seek': 74492, 'start': 762.06, 'end': 766.4599999999999, 'text': ' So there is some warning but not an error.', 'tokens': [51221, 407, 456, 307, 512, 9164, 457, 406, 364, 6713, 13, 51441], 'temperature': 0.0, 'avg_logprob': -0.1752834763637809, 'compression_ratio': 1.3875968992248062, 'no_speech_prob': 0.01563303731381893}, {'id': 115, 'seek': 74492, 'start': 766.4599999999999, 'end': 772.98, 'text': ' So the resolution rules for dynamic shared libraries are slightly more interesting than', 'tokens': [51441, 407, 264, 8669, 4474, 337, 8546, 5507, 15148, 366, 4748, 544, 1880, 813, 51767], 'temperature': 0.0, 'avg_logprob': -0.1752834763637809, 'compression_ratio': 1.3875968992248062, 'no_speech_prob': 0.01563303731381893}, {'id': 116, 'seek': 74492, 'start': 772.98, 'end': 774.64, 'text': ' what we learned yesterday.', 'tokens': [51767, 437, 321, 3264, 5186, 13, 51850], 'temperature': 0.0, 'avg_logprob': -0.1752834763637809, 'compression_ratio': 1.3875968992248062, 'no_speech_prob': 0.01563303731381893}, {'id': 117, 'seek': 77464, 'start': 774.64, 'end': 780.36, 'text': ' So what we had learned yesterday was if there are two strong symbols there is a problem.', 'tokens': [50364, 407, 437, 321, 632, 3264, 5186, 390, 498, 456, 366, 732, 2068, 16944, 456, 307, 257, 1154, 13, 50650], 'temperature': 0.0, 'avg_logprob': -0.18095983012338704, 'compression_ratio': 1.6790697674418604, 'no_speech_prob': 0.03206203505396843}, {'id': 118, 'seek': 77464, 'start': 780.36, 'end': 783.56, 'text': ' But that is not true when it comes to shared libraries.', 'tokens': [50650, 583, 300, 307, 406, 2074, 562, 309, 1487, 281, 5507, 15148, 13, 50810], 'temperature': 0.0, 'avg_logprob': -0.18095983012338704, 'compression_ratio': 1.6790697674418604, 'no_speech_prob': 0.03206203505396843}, {'id': 119, 'seek': 77464, 'start': 783.56, 'end': 792.16, 'text': ' In shared libraries the functions or anything can be overridden by other things.', 'tokens': [50810, 682, 5507, 15148, 264, 6828, 420, 1340, 393, 312, 670, 81, 6171, 538, 661, 721, 13, 51240], 'temperature': 0.0, 'avg_logprob': -0.18095983012338704, 'compression_ratio': 1.6790697674418604, 'no_speech_prob': 0.03206203505396843}, {'id': 120, 'seek': 77464, 'start': 792.16, 'end': 798.68, 'text': ' So for example if you write a function called malloc in your program and call malloc it', 'tokens': [51240, 407, 337, 1365, 498, 291, 2464, 257, 2445, 1219, 16026, 905, 294, 428, 1461, 293, 818, 16026, 905, 309, 51566], 'temperature': 0.0, 'avg_logprob': -0.18095983012338704, 'compression_ratio': 1.6790697674418604, 'no_speech_prob': 0.03206203505396843}, {'id': 121, 'seek': 77464, 'start': 798.68, 'end': 801.66, 'text': ' is not the lipsys malloc which will get called.', 'tokens': [51566, 307, 406, 264, 10118, 749, 16026, 905, 597, 486, 483, 1219, 13, 51715], 'temperature': 0.0, 'avg_logprob': -0.18095983012338704, 'compression_ratio': 1.6790697674418604, 'no_speech_prob': 0.03206203505396843}, {'id': 122, 'seek': 80166, 'start': 801.66, 'end': 805.3, 'text': ' It will be your malloc which will get called.', 'tokens': [50364, 467, 486, 312, 428, 16026, 905, 597, 486, 483, 1219, 13, 50546], 'temperature': 0.0, 'avg_logprob': -0.1754544875201057, 'compression_ratio': 1.626865671641791, 'no_speech_prob': 0.16000181436538696}, {'id': 123, 'seek': 80166, 'start': 805.3, 'end': 811.02, 'text': ' So there is some preference to the client code to override something which was defined', 'tokens': [50546, 407, 456, 307, 512, 17502, 281, 264, 6423, 3089, 281, 42321, 746, 597, 390, 7642, 50832], 'temperature': 0.0, 'avg_logprob': -0.1754544875201057, 'compression_ratio': 1.626865671641791, 'no_speech_prob': 0.16000181436538696}, {'id': 124, 'seek': 80166, 'start': 811.02, 'end': 814.14, 'text': ' in the shared library.', 'tokens': [50832, 294, 264, 5507, 6405, 13, 50988], 'temperature': 0.0, 'avg_logprob': -0.1754544875201057, 'compression_ratio': 1.626865671641791, 'no_speech_prob': 0.16000181436538696}, {'id': 125, 'seek': 80166, 'start': 814.14, 'end': 815.98, 'text': ' Does that make sense?', 'tokens': [50988, 4402, 300, 652, 2020, 30, 51080], 'temperature': 0.0, 'avg_logprob': -0.1754544875201057, 'compression_ratio': 1.626865671641791, 'no_speech_prob': 0.16000181436538696}, {'id': 126, 'seek': 80166, 'start': 815.98, 'end': 823.6999999999999, 'text': ' There is slightly more convoluted things where if there was a libmy.so and libmy1.so and', 'tokens': [51080, 821, 307, 4748, 544, 3754, 2308, 292, 721, 689, 498, 456, 390, 257, 22854, 2226, 13, 539, 293, 22854, 2226, 16, 13, 539, 293, 51466], 'temperature': 0.0, 'avg_logprob': -0.1754544875201057, 'compression_ratio': 1.626865671641791, 'no_speech_prob': 0.16000181436538696}, {'id': 127, 'seek': 80166, 'start': 823.6999999999999, 'end': 827.3399999999999, 'text': ' they had conflicting definition, client did not do anything.', 'tokens': [51466, 436, 632, 43784, 7123, 11, 6423, 630, 406, 360, 1340, 13, 51648], 'temperature': 0.0, 'avg_logprob': -0.1754544875201057, 'compression_ratio': 1.626865671641791, 'no_speech_prob': 0.16000181436538696}, {'id': 128, 'seek': 82734, 'start': 827.34, 'end': 831.4200000000001, 'text': ' So let us say bar was actually defined in some other SO file.', 'tokens': [50364, 407, 718, 505, 584, 2159, 390, 767, 7642, 294, 512, 661, 10621, 3991, 13, 50568], 'temperature': 0.0, 'avg_logprob': -0.17806948645640228, 'compression_ratio': 1.4545454545454546, 'no_speech_prob': 0.25590452551841736}, {'id': 129, 'seek': 82734, 'start': 831.4200000000001, 'end': 836.1, 'text': ' Then it will depend on the order in which things get loaded and the later one gets the', 'tokens': [50568, 1396, 309, 486, 5672, 322, 264, 1668, 294, 597, 721, 483, 13210, 293, 264, 1780, 472, 2170, 264, 50802], 'temperature': 0.0, 'avg_logprob': -0.17806948645640228, 'compression_ratio': 1.4545454545454546, 'no_speech_prob': 0.25590452551841736}, {'id': 130, 'seek': 82734, 'start': 836.1, 'end': 837.9, 'text': ' preference.', 'tokens': [50802, 17502, 13, 50892], 'temperature': 0.0, 'avg_logprob': -0.17806948645640228, 'compression_ratio': 1.4545454545454546, 'no_speech_prob': 0.25590452551841736}, {'id': 131, 'seek': 82734, 'start': 837.9, 'end': 844.82, 'text': ' So it is kind of hard to figure out exactly which one got used.', 'tokens': [50892, 407, 309, 307, 733, 295, 1152, 281, 2573, 484, 2293, 597, 472, 658, 1143, 13, 51238], 'temperature': 0.0, 'avg_logprob': -0.17806948645640228, 'compression_ratio': 1.4545454545454546, 'no_speech_prob': 0.25590452551841736}, {'id': 132, 'seek': 84482, 'start': 844.82, 'end': 861.2600000000001, 'text': ' Now if you make bar static from libmy.so then this will not happen because when you', 'tokens': [50364, 823, 498, 291, 652, 2159, 13437, 490, 22854, 2226, 13, 539, 550, 341, 486, 406, 1051, 570, 562, 291, 51186], 'temperature': 0.0, 'avg_logprob': -0.10130577428000313, 'compression_ratio': 1.4779874213836477, 'no_speech_prob': 0.006890857592225075}, {'id': 133, 'seek': 84482, 'start': 861.2600000000001, 'end': 866.5, 'text': ' say something is static it cannot be overridden by someone else.', 'tokens': [51186, 584, 746, 307, 13437, 309, 2644, 312, 670, 81, 6171, 538, 1580, 1646, 13, 51448], 'temperature': 0.0, 'avg_logprob': -0.10130577428000313, 'compression_ratio': 1.4779874213836477, 'no_speech_prob': 0.006890857592225075}, {'id': 134, 'seek': 84482, 'start': 866.5, 'end': 874.5400000000001, 'text': ' So this principle applies to only things which are visible outside the shared library.', 'tokens': [51448, 407, 341, 8665, 13165, 281, 787, 721, 597, 366, 8974, 2380, 264, 5507, 6405, 13, 51850], 'temperature': 0.0, 'avg_logprob': -0.10130577428000313, 'compression_ratio': 1.4779874213836477, 'no_speech_prob': 0.006890857592225075}, {'id': 135, 'seek': 87454, 'start': 874.54, 'end': 879.06, 'text': ' Whatever is not visible outside shared library cannot be overridden by others.', 'tokens': [50364, 8541, 307, 406, 8974, 2380, 5507, 6405, 2644, 312, 670, 81, 6171, 538, 2357, 13, 50590], 'temperature': 0.0, 'avg_logprob': -0.1482938766479492, 'compression_ratio': 1.7710843373493976, 'no_speech_prob': 0.01093528512865305}, {'id': 136, 'seek': 87454, 'start': 879.06, 'end': 884.78, 'text': ' But whatever is visible outside a shared library can be overridden by other.', 'tokens': [50590, 583, 2035, 307, 8974, 2380, 257, 5507, 6405, 393, 312, 670, 81, 6171, 538, 661, 13, 50876], 'temperature': 0.0, 'avg_logprob': -0.1482938766479492, 'compression_ratio': 1.7710843373493976, 'no_speech_prob': 0.01093528512865305}, {'id': 137, 'seek': 87454, 'start': 884.78, 'end': 892.18, 'text': ' For that matter even if you define a gbl variable it will get overridden with the one which', 'tokens': [50876, 1171, 300, 1871, 754, 498, 291, 6964, 257, 290, 5199, 7006, 309, 486, 483, 670, 81, 6171, 365, 264, 472, 597, 51246], 'temperature': 0.0, 'avg_logprob': -0.1482938766479492, 'compression_ratio': 1.7710843373493976, 'no_speech_prob': 0.01093528512865305}, {'id': 138, 'seek': 87454, 'start': 892.18, 'end': 896.66, 'text': ' you have in the program.', 'tokens': [51246, 291, 362, 294, 264, 1461, 13, 51470], 'temperature': 0.0, 'avg_logprob': -0.1482938766479492, 'compression_ratio': 1.7710843373493976, 'no_speech_prob': 0.01093528512865305}, {'id': 139, 'seek': 87454, 'start': 896.66, 'end': 899.98, 'text': ' Does that make sense?', 'tokens': [51470, 4402, 300, 652, 2020, 30, 51636], 'temperature': 0.0, 'avg_logprob': -0.1482938766479492, 'compression_ratio': 1.7710843373493976, 'no_speech_prob': 0.01093528512865305}, {'id': 140, 'seek': 89998, 'start': 899.98, 'end': 905.86, 'text': ' Now function calls for this reason, now imagine what happens.', 'tokens': [50364, 823, 2445, 5498, 337, 341, 1778, 11, 586, 3811, 437, 2314, 13, 50658], 'temperature': 0.0, 'avg_logprob': -0.16809725382971386, 'compression_ratio': 1.4523809523809523, 'no_speech_prob': 0.5329633355140686}, {'id': 141, 'seek': 89998, 'start': 905.86, 'end': 914.0600000000001, 'text': ' So if you had foo calling bar and you are compiling a dso can you really replace this', 'tokens': [50658, 407, 498, 291, 632, 726, 78, 5141, 2159, 293, 291, 366, 715, 4883, 257, 274, 539, 393, 291, 534, 7406, 341, 51068], 'temperature': 0.0, 'avg_logprob': -0.16809725382971386, 'compression_ratio': 1.4523809523809523, 'no_speech_prob': 0.5329633355140686}, {'id': 142, 'seek': 89998, 'start': 914.0600000000001, 'end': 922.74, 'text': ' call with the relative address of bar which was defined in the SO.', 'tokens': [51068, 818, 365, 264, 4972, 2985, 295, 2159, 597, 390, 7642, 294, 264, 10621, 13, 51502], 'temperature': 0.0, 'avg_logprob': -0.16809725382971386, 'compression_ratio': 1.4523809523809523, 'no_speech_prob': 0.5329633355140686}, {'id': 143, 'seek': 89998, 'start': 922.74, 'end': 924.38, 'text': ' Did everyone get my question?', 'tokens': [51502, 2589, 1518, 483, 452, 1168, 30, 51584], 'temperature': 0.0, 'avg_logprob': -0.16809725382971386, 'compression_ratio': 1.4523809523809523, 'no_speech_prob': 0.5329633355140686}, {'id': 144, 'seek': 92438, 'start': 924.38, 'end': 933.06, 'text': ' So the question is now that you know these rules when you are trying to generate libmy.so', 'tokens': [50364, 407, 264, 1168, 307, 586, 300, 291, 458, 613, 4474, 562, 291, 366, 1382, 281, 8460, 22854, 2226, 13, 539, 50798], 'temperature': 0.0, 'avg_logprob': -0.1669903583213931, 'compression_ratio': 1.68125, 'no_speech_prob': 0.1683281660079956}, {'id': 145, 'seek': 92438, 'start': 933.06, 'end': 939.9399999999999, 'text': ' can this function call actually call this bar function using the relative address of', 'tokens': [50798, 393, 341, 2445, 818, 767, 818, 341, 2159, 2445, 1228, 264, 4972, 2985, 295, 51142], 'temperature': 0.0, 'avg_logprob': -0.1669903583213931, 'compression_ratio': 1.68125, 'no_speech_prob': 0.1683281660079956}, {'id': 146, 'seek': 92438, 'start': 939.9399999999999, 'end': 943.72, 'text': ' the bar.', 'tokens': [51142, 264, 2159, 13, 51331], 'temperature': 0.0, 'avg_logprob': -0.1669903583213931, 'compression_ratio': 1.68125, 'no_speech_prob': 0.1683281660079956}, {'id': 147, 'seek': 92438, 'start': 943.72, 'end': 949.22, 'text': ' So will the call instruction generated for this statement will be called of something', 'tokens': [51331, 407, 486, 264, 818, 10951, 10833, 337, 341, 5629, 486, 312, 1219, 295, 746, 51606], 'temperature': 0.0, 'avg_logprob': -0.1669903583213931, 'compression_ratio': 1.68125, 'no_speech_prob': 0.1683281660079956}, {'id': 148, 'seek': 94922, 'start': 950.22, 'end': 958.46, 'text': ' to find the address of this bar.', 'tokens': [50414, 281, 915, 264, 2985, 295, 341, 2159, 13, 50826], 'temperature': 0.0, 'avg_logprob': -0.28051272305575287, 'compression_ratio': 1.3714285714285714, 'no_speech_prob': 0.5453477501869202}, {'id': 149, 'seek': 94922, 'start': 958.46, 'end': 969.46, 'text': ' So if you look at this so let us look at the shared library code.', 'tokens': [50826, 407, 498, 291, 574, 412, 341, 370, 718, 505, 574, 412, 264, 5507, 6405, 3089, 13, 51376], 'temperature': 0.0, 'avg_logprob': -0.28051272305575287, 'compression_ratio': 1.3714285714285714, 'no_speech_prob': 0.5453477501869202}, {'id': 150, 'seek': 94922, 'start': 969.46, 'end': 977.6600000000001, 'text': ' So I have this code let me try to compile it.', 'tokens': [51376, 407, 286, 362, 341, 3089, 718, 385, 853, 281, 31413, 309, 13, 51786], 'temperature': 0.0, 'avg_logprob': -0.28051272305575287, 'compression_ratio': 1.3714285714285714, 'no_speech_prob': 0.5453477501869202}, {'id': 151, 'seek': 97766, 'start': 977.66, 'end': 983.2199999999999, 'text': ' For now I will just remove fpick so it looks simpler.', 'tokens': [50364, 1171, 586, 286, 486, 445, 4159, 283, 79, 618, 370, 309, 1542, 18587, 13, 50642], 'temperature': 0.0, 'avg_logprob': -0.22376491546630858, 'compression_ratio': 1.3125, 'no_speech_prob': 0.05529319494962692}, {'id': 152, 'seek': 97766, 'start': 983.2199999999999, 'end': 1001.02, 'text': ' Now if I look at obj dump and if I go to foo it is not generating actually call to bar', 'tokens': [50642, 823, 498, 286, 574, 412, 1111, 73, 11430, 293, 498, 286, 352, 281, 726, 78, 309, 307, 406, 17746, 767, 818, 281, 2159, 51532], 'temperature': 0.0, 'avg_logprob': -0.22376491546630858, 'compression_ratio': 1.3125, 'no_speech_prob': 0.05529319494962692}, {'id': 153, 'seek': 97766, 'start': 1001.02, 'end': 1002.54, 'text': ' using the relative address.', 'tokens': [51532, 1228, 264, 4972, 2985, 13, 51608], 'temperature': 0.0, 'avg_logprob': -0.22376491546630858, 'compression_ratio': 1.3125, 'no_speech_prob': 0.05529319494962692}, {'id': 154, 'seek': 100254, 'start': 1002.66, 'end': 1010.78, 'text': ' It is generating a relocation for it and why was that done is because I do not know that', 'tokens': [50370, 467, 307, 17746, 257, 26981, 399, 337, 309, 293, 983, 390, 300, 1096, 307, 570, 286, 360, 406, 458, 300, 50776], 'temperature': 0.0, 'avg_logprob': -0.18656003886255726, 'compression_ratio': 1.5067567567567568, 'no_speech_prob': 0.09510871022939682}, {'id': 155, 'seek': 100254, 'start': 1010.78, 'end': 1016.88, 'text': ' this is the exact bar which will get called because it might get overridden.', 'tokens': [50776, 341, 307, 264, 1900, 2159, 597, 486, 483, 1219, 570, 309, 1062, 483, 670, 81, 6171, 13, 51081], 'temperature': 0.0, 'avg_logprob': -0.18656003886255726, 'compression_ratio': 1.5067567567567568, 'no_speech_prob': 0.09510871022939682}, {'id': 156, 'seek': 100254, 'start': 1016.88, 'end': 1031.5, 'text': ' Now if I do this static let me make this function static.', 'tokens': [51081, 823, 498, 286, 360, 341, 13437, 718, 385, 652, 341, 2445, 13437, 13, 51812], 'temperature': 0.0, 'avg_logprob': -0.18656003886255726, 'compression_ratio': 1.5067567567567568, 'no_speech_prob': 0.09510871022939682}, {'id': 157, 'seek': 103150, 'start': 1031.5, 'end': 1042.38, 'text': ' Now if I look at the dump I actually see call to the bar.', 'tokens': [50364, 823, 498, 286, 574, 412, 264, 11430, 286, 767, 536, 818, 281, 264, 2159, 13, 50908], 'temperature': 0.0, 'avg_logprob': -0.1386545181274414, 'compression_ratio': 1.508108108108108, 'no_speech_prob': 0.0009389051701873541}, {'id': 158, 'seek': 103150, 'start': 1042.38, 'end': 1043.46, 'text': ' Does that make sense?', 'tokens': [50908, 4402, 300, 652, 2020, 30, 50962], 'temperature': 0.0, 'avg_logprob': -0.1386545181274414, 'compression_ratio': 1.508108108108108, 'no_speech_prob': 0.0009389051701873541}, {'id': 159, 'seek': 103150, 'start': 1043.46, 'end': 1049.14, 'text': ' So when it was not static what happened is there was a possibility that someone could', 'tokens': [50962, 407, 562, 309, 390, 406, 13437, 437, 2011, 307, 456, 390, 257, 7959, 300, 1580, 727, 51246], 'temperature': 0.0, 'avg_logprob': -0.1386545181274414, 'compression_ratio': 1.508108108108108, 'no_speech_prob': 0.0009389051701873541}, {'id': 160, 'seek': 103150, 'start': 1049.14, 'end': 1051.78, 'text': ' overwrite this definition of bar.', 'tokens': [51246, 670, 21561, 341, 7123, 295, 2159, 13, 51378], 'temperature': 0.0, 'avg_logprob': -0.1386545181274414, 'compression_ratio': 1.508108108108108, 'no_speech_prob': 0.0009389051701873541}, {'id': 161, 'seek': 103150, 'start': 1051.78, 'end': 1058.22, 'text': ' That is why compiler could not generate code which will directly call this bar.', 'tokens': [51378, 663, 307, 983, 31958, 727, 406, 8460, 3089, 597, 486, 3838, 818, 341, 2159, 13, 51700], 'temperature': 0.0, 'avg_logprob': -0.1386545181274414, 'compression_ratio': 1.508108108108108, 'no_speech_prob': 0.0009389051701873541}, {'id': 162, 'seek': 105822, 'start': 1058.22, 'end': 1066.94, 'text': ' So it has to generate a relocation and as soon as I make it static then it starts using', 'tokens': [50364, 407, 309, 575, 281, 8460, 257, 26981, 399, 293, 382, 2321, 382, 286, 652, 309, 13437, 550, 309, 3719, 1228, 50800], 'temperature': 0.0, 'avg_logprob': -0.11051860412993988, 'compression_ratio': 1.641025641025641, 'no_speech_prob': 0.0123831108212471}, {'id': 163, 'seek': 105822, 'start': 1066.94, 'end': 1070.82, 'text': ' relative addressing and directly calls bar.', 'tokens': [50800, 4972, 14329, 293, 3838, 5498, 2159, 13, 50994], 'temperature': 0.0, 'avg_logprob': -0.11051860412993988, 'compression_ratio': 1.641025641025641, 'no_speech_prob': 0.0123831108212471}, {'id': 164, 'seek': 105822, 'start': 1070.82, 'end': 1076.34, 'text': ' Now since there was a relocation generated we have the same problem which we had with', 'tokens': [50994, 823, 1670, 456, 390, 257, 26981, 399, 10833, 321, 362, 264, 912, 1154, 597, 321, 632, 365, 51270], 'temperature': 0.0, 'avg_logprob': -0.11051860412993988, 'compression_ratio': 1.641025641025641, 'no_speech_prob': 0.0123831108212471}, {'id': 165, 'seek': 105822, 'start': 1076.34, 'end': 1083.9, 'text': ' data because the text section will get changed based on address of bar which might have overridden', 'tokens': [51270, 1412, 570, 264, 2487, 3541, 486, 483, 3105, 2361, 322, 2985, 295, 2159, 597, 1062, 362, 670, 81, 6171, 51648], 'temperature': 0.0, 'avg_logprob': -0.11051860412993988, 'compression_ratio': 1.641025641025641, 'no_speech_prob': 0.0123831108212471}, {'id': 166, 'seek': 105822, 'start': 1083.9, 'end': 1087.34, 'text': ' it.', 'tokens': [51648, 309, 13, 51820], 'temperature': 0.0, 'avg_logprob': -0.11051860412993988, 'compression_ratio': 1.641025641025641, 'no_speech_prob': 0.0123831108212471}, {'id': 167, 'seek': 108734, 'start': 1087.34, 'end': 1103.62, 'text': ' So we have to do something with function calls just like we were doing for data.', 'tokens': [50364, 407, 321, 362, 281, 360, 746, 365, 2445, 5498, 445, 411, 321, 645, 884, 337, 1412, 13, 51178], 'temperature': 0.0, 'avg_logprob': -0.1541667957695163, 'compression_ratio': 1.5185185185185186, 'no_speech_prob': 0.010311505757272243}, {'id': 168, 'seek': 108734, 'start': 1103.62, 'end': 1111.4199999999998, 'text': ' All calls to functions which might be overridden which means any function which might be exported', 'tokens': [51178, 1057, 5498, 281, 6828, 597, 1062, 312, 670, 81, 6171, 597, 1355, 604, 2445, 597, 1062, 312, 42055, 51568], 'temperature': 0.0, 'avg_logprob': -0.1541667957695163, 'compression_ratio': 1.5185185185185186, 'no_speech_prob': 0.010311505757272243}, {'id': 169, 'seek': 108734, 'start': 1111.4199999999998, 'end': 1113.1, 'text': ' out of the shared library.', 'tokens': [51568, 484, 295, 264, 5507, 6405, 13, 51652], 'temperature': 0.0, 'avg_logprob': -0.1541667957695163, 'compression_ratio': 1.5185185185185186, 'no_speech_prob': 0.010311505757272243}, {'id': 170, 'seek': 111310, 'start': 1113.1, 'end': 1119.0, 'text': ' But if you make something static in the shared library and you call that function that means', 'tokens': [50364, 583, 498, 291, 652, 746, 13437, 294, 264, 5507, 6405, 293, 291, 818, 300, 2445, 300, 1355, 50659], 'temperature': 0.0, 'avg_logprob': -0.14327544967333475, 'compression_ratio': 1.7876106194690264, 'no_speech_prob': 0.43953344225883484}, {'id': 171, 'seek': 111310, 'start': 1119.0, 'end': 1121.5, 'text': ' you are saying it is bound statically.', 'tokens': [50659, 291, 366, 1566, 309, 307, 5472, 2219, 984, 13, 50784], 'temperature': 0.0, 'avg_logprob': -0.14327544967333475, 'compression_ratio': 1.7876106194690264, 'no_speech_prob': 0.43953344225883484}, {'id': 172, 'seek': 111310, 'start': 1121.5, 'end': 1126.6999999999998, 'text': ' So static you can think of it as bound statically so I always know it is always going to call', 'tokens': [50784, 407, 13437, 291, 393, 519, 295, 309, 382, 5472, 2219, 984, 370, 286, 1009, 458, 309, 307, 1009, 516, 281, 818, 51044], 'temperature': 0.0, 'avg_logprob': -0.14327544967333475, 'compression_ratio': 1.7876106194690264, 'no_speech_prob': 0.43953344225883484}, {'id': 173, 'seek': 111310, 'start': 1126.6999999999998, 'end': 1129.6399999999999, 'text': ' this instance and not any other instance.', 'tokens': [51044, 341, 5197, 293, 406, 604, 661, 5197, 13, 51191], 'temperature': 0.0, 'avg_logprob': -0.14327544967333475, 'compression_ratio': 1.7876106194690264, 'no_speech_prob': 0.43953344225883484}, {'id': 174, 'seek': 111310, 'start': 1129.6399999999999, 'end': 1135.6, 'text': ' When it was not static then there is a possibility that someone can override its definition in', 'tokens': [51191, 1133, 309, 390, 406, 13437, 550, 456, 307, 257, 7959, 300, 1580, 393, 42321, 1080, 7123, 294, 51489], 'temperature': 0.0, 'avg_logprob': -0.14327544967333475, 'compression_ratio': 1.7876106194690264, 'no_speech_prob': 0.43953344225883484}, {'id': 175, 'seek': 111310, 'start': 1135.6, 'end': 1138.1799999999998, 'text': ' which case I do not know address of that.', 'tokens': [51489, 597, 1389, 286, 360, 406, 458, 2985, 295, 300, 13, 51618], 'temperature': 0.0, 'avg_logprob': -0.14327544967333475, 'compression_ratio': 1.7876106194690264, 'no_speech_prob': 0.43953344225883484}, {'id': 176, 'seek': 113818, 'start': 1138.26, 'end': 1145.26, 'text': ' That is why I had to generate relocation just like we do for data.', 'tokens': [50368, 663, 307, 983, 286, 632, 281, 8460, 26981, 399, 445, 411, 321, 360, 337, 1412, 13, 50718], 'temperature': 0.0, 'avg_logprob': -0.2166900157928467, 'compression_ratio': 1.6783625730994152, 'no_speech_prob': 0.3980969488620758}, {'id': 177, 'seek': 113818, 'start': 1145.26, 'end': 1147.54, 'text': ' So we have to do something for this.', 'tokens': [50718, 407, 321, 362, 281, 360, 746, 337, 341, 13, 50832], 'temperature': 0.0, 'avg_logprob': -0.2166900157928467, 'compression_ratio': 1.6783625730994152, 'no_speech_prob': 0.3980969488620758}, {'id': 178, 'seek': 113818, 'start': 1147.54, 'end': 1149.8, 'text': ' So what can we do?', 'tokens': [50832, 407, 437, 393, 321, 360, 30, 50945], 'temperature': 0.0, 'avg_logprob': -0.2166900157928467, 'compression_ratio': 1.6783625730994152, 'no_speech_prob': 0.3980969488620758}, {'id': 179, 'seek': 113818, 'start': 1149.8, 'end': 1151.74, 'text': ' Same thing right.', 'tokens': [50945, 10635, 551, 558, 13, 51042], 'temperature': 0.0, 'avg_logprob': -0.2166900157928467, 'compression_ratio': 1.6783625730994152, 'no_speech_prob': 0.3980969488620758}, {'id': 180, 'seek': 113818, 'start': 1151.74, 'end': 1157.5800000000002, 'text': ' Just like for every address we stored its address in got we will do the same thing for', 'tokens': [51042, 1449, 411, 337, 633, 2985, 321, 12187, 1080, 2985, 294, 658, 321, 486, 360, 264, 912, 551, 337, 51334], 'temperature': 0.0, 'avg_logprob': -0.2166900157928467, 'compression_ratio': 1.6783625730994152, 'no_speech_prob': 0.3980969488620758}, {'id': 181, 'seek': 113818, 'start': 1157.5800000000002, 'end': 1163.3, 'text': ' every function you create an entry in got and you use that.', 'tokens': [51334, 633, 2445, 291, 1884, 364, 8729, 294, 658, 293, 291, 764, 300, 13, 51620], 'temperature': 0.0, 'avg_logprob': -0.2166900157928467, 'compression_ratio': 1.6783625730994152, 'no_speech_prob': 0.3980969488620758}, {'id': 182, 'seek': 116330, 'start': 1163.4199999999998, 'end': 1171.8999999999999, 'text': ' So call will actually be load the address of function from got and go to that address.', 'tokens': [50370, 407, 818, 486, 767, 312, 3677, 264, 2985, 295, 2445, 490, 658, 293, 352, 281, 300, 2985, 13, 50794], 'temperature': 0.0, 'avg_logprob': -0.18279150257939877, 'compression_ratio': 1.45, 'no_speech_prob': 0.006363550666719675}, {'id': 183, 'seek': 116330, 'start': 1171.8999999999999, 'end': 1173.78, 'text': ' So we can do the same thing.', 'tokens': [50794, 407, 321, 393, 360, 264, 912, 551, 13, 50888], 'temperature': 0.0, 'avg_logprob': -0.18279150257939877, 'compression_ratio': 1.45, 'no_speech_prob': 0.006363550666719675}, {'id': 184, 'seek': 116330, 'start': 1173.78, 'end': 1187.06, 'text': ' Now unfortunately this is not efficient for functions because unlike variables remember', 'tokens': [50888, 823, 7015, 341, 307, 406, 7148, 337, 6828, 570, 8343, 9102, 1604, 51552], 'temperature': 0.0, 'avg_logprob': -0.18279150257939877, 'compression_ratio': 1.45, 'no_speech_prob': 0.006363550666719675}, {'id': 185, 'seek': 118706, 'start': 1187.06, 'end': 1193.22, 'text': ' typically when you are writing any shared library for example is there any variable', 'tokens': [50364, 5850, 562, 291, 366, 3579, 604, 5507, 6405, 337, 1365, 307, 456, 604, 7006, 50672], 'temperature': 0.0, 'avg_logprob': -0.19169423666345067, 'compression_ratio': 1.7978142076502732, 'no_speech_prob': 0.01686643250286579}, {'id': 186, 'seek': 118706, 'start': 1193.22, 'end': 1200.8, 'text': ' which you do use from libc or you use only functions from libc.', 'tokens': [50672, 597, 291, 360, 764, 490, 22854, 66, 420, 291, 764, 787, 6828, 490, 22854, 66, 13, 51051], 'temperature': 0.0, 'avg_logprob': -0.19169423666345067, 'compression_ratio': 1.7978142076502732, 'no_speech_prob': 0.01686643250286579}, {'id': 187, 'seek': 118706, 'start': 1200.8, 'end': 1207.1799999999998, 'text': ' So libc has bunch of things how many times you had to use a variable which was defined', 'tokens': [51051, 407, 22854, 66, 575, 3840, 295, 721, 577, 867, 1413, 291, 632, 281, 764, 257, 7006, 597, 390, 7642, 51370], 'temperature': 0.0, 'avg_logprob': -0.19169423666345067, 'compression_ratio': 1.7978142076502732, 'no_speech_prob': 0.01686643250286579}, {'id': 188, 'seek': 118706, 'start': 1207.1799999999998, 'end': 1209.28, 'text': ' in libc.', 'tokens': [51370, 294, 22854, 66, 13, 51475], 'temperature': 0.0, 'avg_logprob': -0.19169423666345067, 'compression_ratio': 1.7978142076502732, 'no_speech_prob': 0.01686643250286579}, {'id': 189, 'seek': 118706, 'start': 1209.28, 'end': 1213.46, 'text': ' How many times you had to do extern int of some variable which you are using and that', 'tokens': [51475, 1012, 867, 1413, 291, 632, 281, 360, 30360, 560, 295, 512, 7006, 597, 291, 366, 1228, 293, 300, 51684], 'temperature': 0.0, 'avg_logprob': -0.19169423666345067, 'compression_ratio': 1.7978142076502732, 'no_speech_prob': 0.01686643250286579}, {'id': 190, 'seek': 121346, 'start': 1213.8600000000001, 'end': 1218.18, 'text': ' variable was defined in libc.', 'tokens': [50384, 7006, 390, 7642, 294, 22854, 66, 13, 50600], 'temperature': 0.0, 'avg_logprob': -0.2026085993822883, 'compression_ratio': 1.5078534031413613, 'no_speech_prob': 0.023627715185284615}, {'id': 191, 'seek': 121346, 'start': 1218.18, 'end': 1219.7, 'text': ' Almost never right.', 'tokens': [50600, 12627, 1128, 558, 13, 50676], 'temperature': 0.0, 'avg_logprob': -0.2026085993822883, 'compression_ratio': 1.5078534031413613, 'no_speech_prob': 0.023627715185284615}, {'id': 192, 'seek': 121346, 'start': 1219.7, 'end': 1225.22, 'text': ' The purpose of libraries is to provide interfaces which mostly will be through functions and', 'tokens': [50676, 440, 4334, 295, 15148, 307, 281, 2893, 28416, 597, 5240, 486, 312, 807, 6828, 293, 50952], 'temperature': 0.0, 'avg_logprob': -0.2026085993822883, 'compression_ratio': 1.5078534031413613, 'no_speech_prob': 0.023627715185284615}, {'id': 193, 'seek': 121346, 'start': 1225.22, 'end': 1227.52, 'text': ' not data right.', 'tokens': [50952, 406, 1412, 558, 13, 51067], 'temperature': 0.0, 'avg_logprob': -0.2026085993822883, 'compression_ratio': 1.5078534031413613, 'no_speech_prob': 0.023627715185284615}, {'id': 194, 'seek': 121346, 'start': 1227.52, 'end': 1231.0, 'text': ' Now what is the problem with got?', 'tokens': [51067, 823, 437, 307, 264, 1154, 365, 658, 30, 51241], 'temperature': 0.0, 'avg_logprob': -0.2026085993822883, 'compression_ratio': 1.5078534031413613, 'no_speech_prob': 0.023627715185284615}, {'id': 195, 'seek': 121346, 'start': 1231.0, 'end': 1239.3600000000001, 'text': ' Remember every reference which needs to happen to that variable goes via additional indirection', 'tokens': [51241, 5459, 633, 6408, 597, 2203, 281, 1051, 281, 300, 7006, 1709, 5766, 4497, 1016, 621, 882, 51659], 'temperature': 0.0, 'avg_logprob': -0.2026085993822883, 'compression_ratio': 1.5078534031413613, 'no_speech_prob': 0.023627715185284615}, {'id': 196, 'seek': 123936, 'start': 1239.36, 'end': 1245.6799999999998, 'text': ' because we have to first get the address of got then look at the address of that variable', 'tokens': [50364, 570, 321, 362, 281, 700, 483, 264, 2985, 295, 658, 550, 574, 412, 264, 2985, 295, 300, 7006, 50680], 'temperature': 0.0, 'avg_logprob': -0.16841148607658618, 'compression_ratio': 1.7457627118644068, 'no_speech_prob': 0.010317470878362656}, {'id': 197, 'seek': 123936, 'start': 1245.6799999999998, 'end': 1246.9399999999998, 'text': ' and get it.', 'tokens': [50680, 293, 483, 309, 13, 50743], 'temperature': 0.0, 'avg_logprob': -0.16841148607658618, 'compression_ratio': 1.7457627118644068, 'no_speech_prob': 0.010317470878362656}, {'id': 198, 'seek': 123936, 'start': 1246.9399999999998, 'end': 1253.9599999999998, 'text': ' So every time if you do this there is considerable overhead added for every reference right which', 'tokens': [50743, 407, 633, 565, 498, 291, 360, 341, 456, 307, 24167, 19922, 3869, 337, 633, 6408, 558, 597, 51094], 'temperature': 0.0, 'avg_logprob': -0.16841148607658618, 'compression_ratio': 1.7457627118644068, 'no_speech_prob': 0.010317470878362656}, {'id': 199, 'seek': 123936, 'start': 1253.9599999999998, 'end': 1259.4799999999998, 'text': " may not be the best thing for functions because functions are very common in dso's which will", 'tokens': [51094, 815, 406, 312, 264, 1151, 551, 337, 6828, 570, 6828, 366, 588, 2689, 294, 274, 539, 311, 597, 486, 51370], 'temperature': 0.0, 'avg_logprob': -0.16841148607658618, 'compression_ratio': 1.7457627118644068, 'no_speech_prob': 0.010317470878362656}, {'id': 200, 'seek': 123936, 'start': 1259.4799999999998, 'end': 1267.28, 'text': " be cross referenced in the client code and you don't want every call to go via this indirection.", 'tokens': [51370, 312, 3278, 32734, 294, 264, 6423, 3089, 293, 291, 500, 380, 528, 633, 818, 281, 352, 5766, 341, 1016, 621, 882, 13, 51760], 'temperature': 0.0, 'avg_logprob': -0.16841148607658618, 'compression_ratio': 1.7457627118644068, 'no_speech_prob': 0.010317470878362656}, {'id': 201, 'seek': 123936, 'start': 1267.28, 'end': 1269.1599999999999, 'text': ' Does that make sense?', 'tokens': [51760, 4402, 300, 652, 2020, 30, 51854], 'temperature': 0.0, 'avg_logprob': -0.16841148607658618, 'compression_ratio': 1.7457627118644068, 'no_speech_prob': 0.010317470878362656}, {'id': 202, 'seek': 126916, 'start': 1269.16, 'end': 1273.26, 'text': ' So we do something more for this.', 'tokens': [50364, 407, 321, 360, 746, 544, 337, 341, 13, 50569], 'temperature': 0.0, 'avg_logprob': -0.11813930102757045, 'compression_ratio': 1.6948356807511737, 'no_speech_prob': 0.0013431047555059195}, {'id': 203, 'seek': 126916, 'start': 1273.26, 'end': 1280.5600000000002, 'text': ' And one other thing is this thing that library may actually define thousands of functions', 'tokens': [50569, 400, 472, 661, 551, 307, 341, 551, 300, 6405, 815, 767, 6964, 5383, 295, 6828, 50934], 'temperature': 0.0, 'avg_logprob': -0.11813930102757045, 'compression_ratio': 1.6948356807511737, 'no_speech_prob': 0.0013431047555059195}, {'id': 204, 'seek': 126916, 'start': 1280.5600000000002, 'end': 1288.76, 'text': ' but only some of them are used right and if you put their addresses in got you have to', 'tokens': [50934, 457, 787, 512, 295, 552, 366, 1143, 558, 293, 498, 291, 829, 641, 16862, 294, 658, 291, 362, 281, 51344], 'temperature': 0.0, 'avg_logprob': -0.11813930102757045, 'compression_ratio': 1.6948356807511737, 'no_speech_prob': 0.0013431047555059195}, {'id': 205, 'seek': 126916, 'start': 1288.76, 'end': 1292.3400000000001, 'text': ' do something which will populate that address at load time.', 'tokens': [51344, 360, 746, 597, 486, 1665, 5256, 300, 2985, 412, 3677, 565, 13, 51523], 'temperature': 0.0, 'avg_logprob': -0.11813930102757045, 'compression_ratio': 1.6948356807511737, 'no_speech_prob': 0.0013431047555059195}, {'id': 206, 'seek': 126916, 'start': 1292.3400000000001, 'end': 1297.92, 'text': ' So once the loader is loading the program it has to resolve all the references and resolve', 'tokens': [51523, 407, 1564, 264, 3677, 260, 307, 15114, 264, 1461, 309, 575, 281, 14151, 439, 264, 15400, 293, 14151, 51802], 'temperature': 0.0, 'avg_logprob': -0.11813930102757045, 'compression_ratio': 1.6948356807511737, 'no_speech_prob': 0.0013431047555059195}, {'id': 207, 'seek': 129792, 'start': 1298.0, 'end': 1304.28, 'text': ' all the relocations and if there are thousand functions in the library it has to patch at', 'tokens': [50368, 439, 264, 26981, 763, 293, 498, 456, 366, 4714, 6828, 294, 264, 6405, 309, 575, 281, 9972, 412, 50682], 'temperature': 0.0, 'avg_logprob': -0.1392414683387393, 'compression_ratio': 1.6502463054187193, 'no_speech_prob': 0.03618095815181732}, {'id': 208, 'seek': 129792, 'start': 1304.28, 'end': 1311.1200000000001, 'text': ' least thousand relocations even though when most of the common times you are using just', 'tokens': [50682, 1935, 4714, 26981, 763, 754, 1673, 562, 881, 295, 264, 2689, 1413, 291, 366, 1228, 445, 51024], 'temperature': 0.0, 'avg_logprob': -0.1392414683387393, 'compression_ratio': 1.6502463054187193, 'no_speech_prob': 0.03618095815181732}, {'id': 209, 'seek': 129792, 'start': 1311.1200000000001, 'end': 1314.48, 'text': ' printf and scanf right.', 'tokens': [51024, 4482, 69, 293, 11049, 69, 558, 13, 51192], 'temperature': 0.0, 'avg_logprob': -0.1392414683387393, 'compression_ratio': 1.6502463054187193, 'no_speech_prob': 0.03618095815181732}, {'id': 210, 'seek': 129792, 'start': 1314.48, 'end': 1320.0, 'text': ' So there is lot of work which is happening at load time which could be useless.', 'tokens': [51192, 407, 456, 307, 688, 295, 589, 597, 307, 2737, 412, 3677, 565, 597, 727, 312, 14115, 13, 51468], 'temperature': 0.0, 'avg_logprob': -0.1392414683387393, 'compression_ratio': 1.6502463054187193, 'no_speech_prob': 0.03618095815181732}, {'id': 211, 'seek': 129792, 'start': 1320.0, 'end': 1321.7, 'text': ' Is this clear to everyone?', 'tokens': [51468, 1119, 341, 1850, 281, 1518, 30, 51553], 'temperature': 0.0, 'avg_logprob': -0.1392414683387393, 'compression_ratio': 1.6502463054187193, 'no_speech_prob': 0.03618095815181732}, {'id': 212, 'seek': 129792, 'start': 1321.7, 'end': 1323.0800000000002, 'text': ' So there are two problems.', 'tokens': [51553, 407, 456, 366, 732, 2740, 13, 51622], 'temperature': 0.0, 'avg_logprob': -0.1392414683387393, 'compression_ratio': 1.6502463054187193, 'no_speech_prob': 0.03618095815181732}, {'id': 213, 'seek': 132308, 'start': 1323.08, 'end': 1331.3999999999999, 'text': ' One is there could be too many functions right and second is we have to resolve all the functions', 'tokens': [50364, 1485, 307, 456, 727, 312, 886, 867, 6828, 558, 293, 1150, 307, 321, 362, 281, 14151, 439, 264, 6828, 50780], 'temperature': 0.0, 'avg_logprob': -0.1589571906299126, 'compression_ratio': 1.6464646464646464, 'no_speech_prob': 0.12521757185459137}, {'id': 214, 'seek': 132308, 'start': 1331.3999999999999, 'end': 1338.3999999999999, 'text': ' which may not be the best thing because not all of them will get used.', 'tokens': [50780, 597, 815, 406, 312, 264, 1151, 551, 570, 406, 439, 295, 552, 486, 483, 1143, 13, 51130], 'temperature': 0.0, 'avg_logprob': -0.1589571906299126, 'compression_ratio': 1.6464646464646464, 'no_speech_prob': 0.12521757185459137}, {'id': 215, 'seek': 132308, 'start': 1338.3999999999999, 'end': 1339.9199999999998, 'text': ' So we have to do something lazily.', 'tokens': [51130, 407, 321, 362, 281, 360, 746, 19320, 953, 13, 51206], 'temperature': 0.0, 'avg_logprob': -0.1589571906299126, 'compression_ratio': 1.6464646464646464, 'no_speech_prob': 0.12521757185459137}, {'id': 216, 'seek': 132308, 'start': 1339.9199999999998, 'end': 1345.6, 'text': " We don't want to do something prematurely when the application starts.", 'tokens': [51206, 492, 500, 380, 528, 281, 360, 746, 34877, 356, 562, 264, 3861, 3719, 13, 51490], 'temperature': 0.0, 'avg_logprob': -0.1589571906299126, 'compression_ratio': 1.6464646464646464, 'no_speech_prob': 0.12521757185459137}, {'id': 217, 'seek': 132308, 'start': 1345.6, 'end': 1348.9399999999998, 'text': ' That is the idea which we are trying to go against.', 'tokens': [51490, 663, 307, 264, 1558, 597, 321, 366, 1382, 281, 352, 1970, 13, 51657], 'temperature': 0.0, 'avg_logprob': -0.1589571906299126, 'compression_ratio': 1.6464646464646464, 'no_speech_prob': 0.12521757185459137}, {'id': 218, 'seek': 134894, 'start': 1348.94, 'end': 1352.66, 'text': ' So that is where something called as PLT comes in.', 'tokens': [50364, 407, 300, 307, 689, 746, 1219, 382, 6999, 51, 1487, 294, 13, 50550], 'temperature': 0.0, 'avg_logprob': -0.19559885107952615, 'compression_ratio': 1.6411483253588517, 'no_speech_prob': 0.03352855145931244}, {'id': 219, 'seek': 134894, 'start': 1352.66, 'end': 1355.94, 'text': ' Processor linkage table.', 'tokens': [50550, 1705, 25432, 49118, 3199, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.19559885107952615, 'compression_ratio': 1.6411483253588517, 'no_speech_prob': 0.03352855145931244}, {'id': 220, 'seek': 134894, 'start': 1355.94, 'end': 1360.46, 'text': ' So this is again one more level of indirection.', 'tokens': [50714, 407, 341, 307, 797, 472, 544, 1496, 295, 1016, 621, 882, 13, 50940], 'temperature': 0.0, 'avg_logprob': -0.19559885107952615, 'compression_ratio': 1.6411483253588517, 'no_speech_prob': 0.03352855145931244}, {'id': 221, 'seek': 134894, 'start': 1360.46, 'end': 1367.42, 'text': " So what happens is whenever you want to call a function you don't simply call the function", 'tokens': [50940, 407, 437, 2314, 307, 5699, 291, 528, 281, 818, 257, 2445, 291, 500, 380, 2935, 818, 264, 2445, 51288], 'temperature': 0.0, 'avg_logprob': -0.19559885107952615, 'compression_ratio': 1.6411483253588517, 'no_speech_prob': 0.03352855145931244}, {'id': 222, 'seek': 134894, 'start': 1367.42, 'end': 1369.3200000000002, 'text': ' directly.', 'tokens': [51288, 3838, 13, 51383], 'temperature': 0.0, 'avg_logprob': -0.19559885107952615, 'compression_ratio': 1.6411483253588517, 'no_speech_prob': 0.03352855145931244}, {'id': 223, 'seek': 134894, 'start': 1369.3200000000002, 'end': 1372.94, 'text': ' You call something in the PLT.', 'tokens': [51383, 509, 818, 746, 294, 264, 6999, 51, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.19559885107952615, 'compression_ratio': 1.6411483253588517, 'no_speech_prob': 0.03352855145931244}, {'id': 224, 'seek': 134894, 'start': 1372.94, 'end': 1378.78, 'text': ' So you can think that every function has a PLT entry just like every variable had a GOT', 'tokens': [51564, 407, 291, 393, 519, 300, 633, 2445, 575, 257, 6999, 51, 8729, 445, 411, 633, 7006, 632, 257, 36525, 51856], 'temperature': 0.0, 'avg_logprob': -0.19559885107952615, 'compression_ratio': 1.6411483253588517, 'no_speech_prob': 0.03352855145931244}, {'id': 225, 'seek': 137878, 'start': 1379.62, 'end': 1380.62, 'text': ' entry.', 'tokens': [50406, 8729, 13, 50456], 'temperature': 0.0, 'avg_logprob': -0.21913195670919217, 'compression_ratio': 1.699421965317919, 'no_speech_prob': 0.007438952103257179}, {'id': 226, 'seek': 137878, 'start': 1380.62, 'end': 1384.26, 'text': ' Every function has a PLT entry and PLT entry is not data.', 'tokens': [50456, 2048, 2445, 575, 257, 6999, 51, 8729, 293, 6999, 51, 8729, 307, 406, 1412, 13, 50638], 'temperature': 0.0, 'avg_logprob': -0.21913195670919217, 'compression_ratio': 1.699421965317919, 'no_speech_prob': 0.007438952103257179}, {'id': 227, 'seek': 137878, 'start': 1384.26, 'end': 1387.7, 'text': ' PLT entry is actually code.', 'tokens': [50638, 6999, 51, 8729, 307, 767, 3089, 13, 50810], 'temperature': 0.0, 'avg_logprob': -0.21913195670919217, 'compression_ratio': 1.699421965317919, 'no_speech_prob': 0.007438952103257179}, {'id': 228, 'seek': 137878, 'start': 1387.7, 'end': 1388.7, 'text': ' Executable code.', 'tokens': [50810, 17662, 32148, 3089, 13, 50860], 'temperature': 0.0, 'avg_logprob': -0.21913195670919217, 'compression_ratio': 1.699421965317919, 'no_speech_prob': 0.007438952103257179}, {'id': 229, 'seek': 137878, 'start': 1388.7, 'end': 1391.18, 'text': ' So PLT does not hold data.', 'tokens': [50860, 407, 6999, 51, 775, 406, 1797, 1412, 13, 50984], 'temperature': 0.0, 'avg_logprob': -0.21913195670919217, 'compression_ratio': 1.699421965317919, 'no_speech_prob': 0.007438952103257179}, {'id': 230, 'seek': 137878, 'start': 1391.18, 'end': 1393.98, 'text': ' PLT holds code.', 'tokens': [50984, 6999, 51, 9190, 3089, 13, 51124], 'temperature': 0.0, 'avg_logprob': -0.21913195670919217, 'compression_ratio': 1.699421965317919, 'no_speech_prob': 0.007438952103257179}, {'id': 231, 'seek': 137878, 'start': 1393.98, 'end': 1401.34, 'text': ' And what is going to happen is when you go to the PLT it will actually get the address', 'tokens': [51124, 400, 437, 307, 516, 281, 1051, 307, 562, 291, 352, 281, 264, 6999, 51, 309, 486, 767, 483, 264, 2985, 51492], 'temperature': 0.0, 'avg_logprob': -0.21913195670919217, 'compression_ratio': 1.699421965317919, 'no_speech_prob': 0.007438952103257179}, {'id': 232, 'seek': 137878, 'start': 1401.34, 'end': 1403.7, 'text': ' from the GOT.', 'tokens': [51492, 490, 264, 36525, 13, 51610], 'temperature': 0.0, 'avg_logprob': -0.21913195670919217, 'compression_ratio': 1.699421965317919, 'no_speech_prob': 0.007438952103257179}, {'id': 233, 'seek': 137878, 'start': 1403.7, 'end': 1406.8999999999999, 'text': ' So for every function you do two things.', 'tokens': [51610, 407, 337, 633, 2445, 291, 360, 732, 721, 13, 51770], 'temperature': 0.0, 'avg_logprob': -0.21913195670919217, 'compression_ratio': 1.699421965317919, 'no_speech_prob': 0.007438952103257179}, {'id': 234, 'seek': 140690, 'start': 1406.9, 'end': 1415.1000000000001, 'text': ' You create a PLT entry and you also create a GOT entry.', 'tokens': [50364, 509, 1884, 257, 6999, 51, 8729, 293, 291, 611, 1884, 257, 36525, 8729, 13, 50774], 'temperature': 0.0, 'avg_logprob': -0.15917556713788938, 'compression_ratio': 1.8392857142857142, 'no_speech_prob': 0.009665774181485176}, {'id': 235, 'seek': 140690, 'start': 1415.1000000000001, 'end': 1422.7, 'text': ' Now when you are doing the call you call the PLT entry into the function of that function.', 'tokens': [50774, 823, 562, 291, 366, 884, 264, 818, 291, 818, 264, 6999, 51, 8729, 666, 264, 2445, 295, 300, 2445, 13, 51154], 'temperature': 0.0, 'avg_logprob': -0.15917556713788938, 'compression_ratio': 1.8392857142857142, 'no_speech_prob': 0.009665774181485176}, {'id': 236, 'seek': 140690, 'start': 1422.7, 'end': 1430.3000000000002, 'text': ' The PLT entry of that function is going to look up the address from GOT.', 'tokens': [51154, 440, 6999, 51, 8729, 295, 300, 2445, 307, 516, 281, 574, 493, 264, 2985, 490, 36525, 13, 51534], 'temperature': 0.0, 'avg_logprob': -0.15917556713788938, 'compression_ratio': 1.8392857142857142, 'no_speech_prob': 0.009665774181485176}, {'id': 237, 'seek': 140690, 'start': 1430.3000000000002, 'end': 1435.6200000000001, 'text': ' And then it is going to call the resolver which will try to actually resolve the function', 'tokens': [51534, 400, 550, 309, 307, 516, 281, 818, 264, 34480, 597, 486, 853, 281, 767, 14151, 264, 2445, 51800], 'temperature': 0.0, 'avg_logprob': -0.15917556713788938, 'compression_ratio': 1.8392857142857142, 'no_speech_prob': 0.009665774181485176}, {'id': 238, 'seek': 143562, 'start': 1435.6999999999998, 'end': 1436.8999999999999, 'text': ' call.', 'tokens': [50368, 818, 13, 50428], 'temperature': 0.0, 'avg_logprob': -0.20580228617493534, 'compression_ratio': 1.4702380952380953, 'no_speech_prob': 0.04878944531083107}, {'id': 239, 'seek': 143562, 'start': 1436.8999999999999, 'end': 1439.86, 'text': ' And that is the special entry called PLT L0.', 'tokens': [50428, 400, 300, 307, 264, 2121, 8729, 1219, 6999, 51, 441, 15, 13, 50576], 'temperature': 0.0, 'avg_logprob': -0.20580228617493534, 'compression_ratio': 1.4702380952380953, 'no_speech_prob': 0.04878944531083107}, {'id': 240, 'seek': 143562, 'start': 1439.86, 'end': 1448.6999999999998, 'text': ' So PLT L0 is actually some code from dynamic linker which is going to do the symbol resolution.', 'tokens': [50576, 407, 6999, 51, 441, 15, 307, 767, 512, 3089, 490, 8546, 2113, 260, 597, 307, 516, 281, 360, 264, 5986, 8669, 13, 51018], 'temperature': 0.0, 'avg_logprob': -0.20580228617493534, 'compression_ratio': 1.4702380952380953, 'no_speech_prob': 0.04878944531083107}, {'id': 241, 'seek': 143562, 'start': 1448.6999999999998, 'end': 1450.36, 'text': ' Now what happens is this.', 'tokens': [51018, 823, 437, 2314, 307, 341, 13, 51101], 'temperature': 0.0, 'avg_logprob': -0.20580228617493534, 'compression_ratio': 1.4702380952380953, 'no_speech_prob': 0.04878944531083107}, {'id': 242, 'seek': 143562, 'start': 1450.36, 'end': 1458.4599999999998, 'text': ' When you call the function first time you will first call the PLT of that.', 'tokens': [51101, 1133, 291, 818, 264, 2445, 700, 565, 291, 486, 700, 818, 264, 6999, 51, 295, 300, 13, 51506], 'temperature': 0.0, 'avg_logprob': -0.20580228617493534, 'compression_ratio': 1.4702380952380953, 'no_speech_prob': 0.04878944531083107}, {'id': 243, 'seek': 145846, 'start': 1458.46, 'end': 1465.74, 'text': ' That will essentially try to get the GOT and this address which is stored here is actually', 'tokens': [50364, 663, 486, 4476, 853, 281, 483, 264, 36525, 293, 341, 2985, 597, 307, 12187, 510, 307, 767, 50728], 'temperature': 0.0, 'avg_logprob': -0.10844440209238153, 'compression_ratio': 1.7955801104972375, 'no_speech_prob': 0.036696914583444595}, {'id': 244, 'seek': 145846, 'start': 1465.74, 'end': 1471.58, 'text': ' address of the next instruction.', 'tokens': [50728, 2985, 295, 264, 958, 10951, 13, 51020], 'temperature': 0.0, 'avg_logprob': -0.10844440209238153, 'compression_ratio': 1.7955801104972375, 'no_speech_prob': 0.036696914583444595}, {'id': 245, 'seek': 145846, 'start': 1471.58, 'end': 1476.14, 'text': ' So what will happen is when you get this address and you call that address you will actually', 'tokens': [51020, 407, 437, 486, 1051, 307, 562, 291, 483, 341, 2985, 293, 291, 818, 300, 2985, 291, 486, 767, 51248], 'temperature': 0.0, 'avg_logprob': -0.10844440209238153, 'compression_ratio': 1.7955801104972375, 'no_speech_prob': 0.036696914583444595}, {'id': 246, 'seek': 145846, 'start': 1476.14, 'end': 1480.3400000000001, 'text': ' come to the next instruction only.', 'tokens': [51248, 808, 281, 264, 958, 10951, 787, 13, 51458], 'temperature': 0.0, 'avg_logprob': -0.10844440209238153, 'compression_ratio': 1.7955801104972375, 'no_speech_prob': 0.036696914583444595}, {'id': 247, 'seek': 145846, 'start': 1480.3400000000001, 'end': 1487.5, 'text': ' And this will call the resolver which is PLT 0 and something will happen.', 'tokens': [51458, 400, 341, 486, 818, 264, 34480, 597, 307, 6999, 51, 1958, 293, 746, 486, 1051, 13, 51816], 'temperature': 0.0, 'avg_logprob': -0.10844440209238153, 'compression_ratio': 1.7955801104972375, 'no_speech_prob': 0.036696914583444595}, {'id': 248, 'seek': 148750, 'start': 1487.54, 'end': 1489.62, 'text': ' But is this clear up to this stage?', 'tokens': [50366, 583, 307, 341, 1850, 493, 281, 341, 3233, 30, 50470], 'temperature': 0.0, 'avg_logprob': -0.13914276074759568, 'compression_ratio': 1.6451612903225807, 'no_speech_prob': 0.00711214542388916}, {'id': 249, 'seek': 148750, 'start': 1489.62, 'end': 1497.4, 'text': ' So what is happening is first time we are calling PLT of that function that calls the', 'tokens': [50470, 407, 437, 307, 2737, 307, 700, 565, 321, 366, 5141, 6999, 51, 295, 300, 2445, 300, 5498, 264, 50859], 'temperature': 0.0, 'avg_logprob': -0.13914276074759568, 'compression_ratio': 1.6451612903225807, 'no_speech_prob': 0.00711214542388916}, {'id': 250, 'seek': 148750, 'start': 1497.4, 'end': 1501.58, 'text': ' that gets the address from the GOT.', 'tokens': [50859, 300, 2170, 264, 2985, 490, 264, 36525, 13, 51068], 'temperature': 0.0, 'avg_logprob': -0.13914276074759568, 'compression_ratio': 1.6451612903225807, 'no_speech_prob': 0.00711214542388916}, {'id': 251, 'seek': 148750, 'start': 1501.58, 'end': 1506.62, 'text': ' But GOT actually holds the address of the next instruction only.', 'tokens': [51068, 583, 36525, 767, 9190, 264, 2985, 295, 264, 958, 10951, 787, 13, 51320], 'temperature': 0.0, 'avg_logprob': -0.13914276074759568, 'compression_ratio': 1.6451612903225807, 'no_speech_prob': 0.00711214542388916}, {'id': 252, 'seek': 148750, 'start': 1506.62, 'end': 1515.18, 'text': ' So GOT will come back to the next instruction and call the resolver.', 'tokens': [51320, 407, 36525, 486, 808, 646, 281, 264, 958, 10951, 293, 818, 264, 34480, 13, 51748], 'temperature': 0.0, 'avg_logprob': -0.13914276074759568, 'compression_ratio': 1.6451612903225807, 'no_speech_prob': 0.00711214542388916}, {'id': 253, 'seek': 148750, 'start': 1515.18, 'end': 1516.86, 'text': ' Is this clear?', 'tokens': [51748, 1119, 341, 1850, 30, 51832], 'temperature': 0.0, 'avg_logprob': -0.13914276074759568, 'compression_ratio': 1.6451612903225807, 'no_speech_prob': 0.00711214542388916}, {'id': 254, 'seek': 151686, 'start': 1516.86, 'end': 1519.86, 'text': ' Now some magic happens after the first call.', 'tokens': [50364, 823, 512, 5585, 2314, 934, 264, 700, 818, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.14319088723924425, 'compression_ratio': 1.7818181818181817, 'no_speech_prob': 0.0006764556746929884}, {'id': 255, 'seek': 151686, 'start': 1519.86, 'end': 1526.06, 'text': ' So what resolver is going to do is resolver is going to change the address in the GOT', 'tokens': [50514, 407, 437, 34480, 307, 516, 281, 360, 307, 34480, 307, 516, 281, 1319, 264, 2985, 294, 264, 36525, 50824], 'temperature': 0.0, 'avg_logprob': -0.14319088723924425, 'compression_ratio': 1.7818181818181817, 'no_speech_prob': 0.0006764556746929884}, {'id': 256, 'seek': 151686, 'start': 1526.06, 'end': 1531.54, 'text': ' to actually point to the function.', 'tokens': [50824, 281, 767, 935, 281, 264, 2445, 13, 51098], 'temperature': 0.0, 'avg_logprob': -0.14319088723924425, 'compression_ratio': 1.7818181818181817, 'no_speech_prob': 0.0006764556746929884}, {'id': 257, 'seek': 151686, 'start': 1531.54, 'end': 1538.3, 'text': ' So GOT will be modified after the first call to that function.', 'tokens': [51098, 407, 36525, 486, 312, 15873, 934, 264, 700, 818, 281, 300, 2445, 13, 51436], 'temperature': 0.0, 'avg_logprob': -0.14319088723924425, 'compression_ratio': 1.7818181818181817, 'no_speech_prob': 0.0006764556746929884}, {'id': 258, 'seek': 151686, 'start': 1538.3, 'end': 1546.1, 'text': ' And GOT now will start having the actual address of the function.', 'tokens': [51436, 400, 36525, 586, 486, 722, 1419, 264, 3539, 2985, 295, 264, 2445, 13, 51826], 'temperature': 0.0, 'avg_logprob': -0.14319088723924425, 'compression_ratio': 1.7818181818181817, 'no_speech_prob': 0.0006764556746929884}, {'id': 259, 'seek': 154610, 'start': 1546.1, 'end': 1549.6399999999999, 'text': ' Now let us imagine what happens for the second call.', 'tokens': [50364, 823, 718, 505, 3811, 437, 2314, 337, 264, 1150, 818, 13, 50541], 'temperature': 0.0, 'avg_logprob': -0.15733525782455632, 'compression_ratio': 1.809782608695652, 'no_speech_prob': 0.0006657768972218037}, {'id': 260, 'seek': 154610, 'start': 1549.6399999999999, 'end': 1555.2199999999998, 'text': ' So when you do the second call we come to here and when we get the address from GOT', 'tokens': [50541, 407, 562, 291, 360, 264, 1150, 818, 321, 808, 281, 510, 293, 562, 321, 483, 264, 2985, 490, 36525, 50820], 'temperature': 0.0, 'avg_logprob': -0.15733525782455632, 'compression_ratio': 1.809782608695652, 'no_speech_prob': 0.0006657768972218037}, {'id': 261, 'seek': 154610, 'start': 1555.2199999999998, 'end': 1562.78, 'text': ' we actually get the address of the function and we start executing the function.', 'tokens': [50820, 321, 767, 483, 264, 2985, 295, 264, 2445, 293, 321, 722, 32368, 264, 2445, 13, 51198], 'temperature': 0.0, 'avg_logprob': -0.15733525782455632, 'compression_ratio': 1.809782608695652, 'no_speech_prob': 0.0006657768972218037}, {'id': 262, 'seek': 154610, 'start': 1562.78, 'end': 1570.28, 'text': ' So what happened is first time when the function was called we did not know the address.', 'tokens': [51198, 407, 437, 2011, 307, 700, 565, 562, 264, 2445, 390, 1219, 321, 630, 406, 458, 264, 2985, 13, 51573], 'temperature': 0.0, 'avg_logprob': -0.15733525782455632, 'compression_ratio': 1.809782608695652, 'no_speech_prob': 0.0006657768972218037}, {'id': 263, 'seek': 154610, 'start': 1570.28, 'end': 1575.54, 'text': ' So we called the resolver.', 'tokens': [51573, 407, 321, 1219, 264, 34480, 13, 51836], 'temperature': 0.0, 'avg_logprob': -0.15733525782455632, 'compression_ratio': 1.809782608695652, 'no_speech_prob': 0.0006657768972218037}, {'id': 264, 'seek': 157554, 'start': 1575.54, 'end': 1581.06, 'text': ' After resolver is done figuring out the address of the function it over wrote the address', 'tokens': [50364, 2381, 34480, 307, 1096, 15213, 484, 264, 2985, 295, 264, 2445, 309, 670, 4114, 264, 2985, 50640], 'temperature': 0.0, 'avg_logprob': -0.13512841274863796, 'compression_ratio': 1.7844036697247707, 'no_speech_prob': 0.0012824621517211199}, {'id': 265, 'seek': 157554, 'start': 1581.06, 'end': 1586.02, 'text': ' in the GOT and said now this is the address of the function.', 'tokens': [50640, 294, 264, 36525, 293, 848, 586, 341, 307, 264, 2985, 295, 264, 2445, 13, 50888], 'temperature': 0.0, 'avg_logprob': -0.13512841274863796, 'compression_ratio': 1.7844036697247707, 'no_speech_prob': 0.0012824621517211199}, {'id': 266, 'seek': 157554, 'start': 1586.02, 'end': 1591.74, 'text': ' So next time when you call the same function again you actually have the address of the', 'tokens': [50888, 407, 958, 565, 562, 291, 818, 264, 912, 2445, 797, 291, 767, 362, 264, 2985, 295, 264, 51174], 'temperature': 0.0, 'avg_logprob': -0.13512841274863796, 'compression_ratio': 1.7844036697247707, 'no_speech_prob': 0.0012824621517211199}, {'id': 267, 'seek': 157554, 'start': 1591.74, 'end': 1595.08, 'text': ' function in GOT.', 'tokens': [51174, 2445, 294, 36525, 13, 51341], 'temperature': 0.0, 'avg_logprob': -0.13512841274863796, 'compression_ratio': 1.7844036697247707, 'no_speech_prob': 0.0012824621517211199}, {'id': 268, 'seek': 157554, 'start': 1595.08, 'end': 1596.08, 'text': ' Is this clear?', 'tokens': [51341, 1119, 341, 1850, 30, 51391], 'temperature': 0.0, 'avg_logprob': -0.13512841274863796, 'compression_ratio': 1.7844036697247707, 'no_speech_prob': 0.0012824621517211199}, {'id': 269, 'seek': 157554, 'start': 1596.08, 'end': 1598.34, 'text': ' This is kind of bit complicated.', 'tokens': [51391, 639, 307, 733, 295, 857, 6179, 13, 51504], 'temperature': 0.0, 'avg_logprob': -0.13512841274863796, 'compression_ratio': 1.7844036697247707, 'no_speech_prob': 0.0012824621517211199}, {'id': 270, 'seek': 157554, 'start': 1598.34, 'end': 1604.62, 'text': ' But the fundamental principles you have to remember is we do not want to populate GOT', 'tokens': [51504, 583, 264, 8088, 9156, 291, 362, 281, 1604, 307, 321, 360, 406, 528, 281, 1665, 5256, 36525, 51818], 'temperature': 0.0, 'avg_logprob': -0.13512841274863796, 'compression_ratio': 1.7844036697247707, 'no_speech_prob': 0.0012824621517211199}, {'id': 271, 'seek': 160462, 'start': 1604.6999999999998, 'end': 1610.58, 'text': ' the application start time because that involves lot of overhead.', 'tokens': [50368, 264, 3861, 722, 565, 570, 300, 11626, 688, 295, 19922, 13, 50662], 'temperature': 0.0, 'avg_logprob': -0.11564829157686782, 'compression_ratio': 1.7429906542056075, 'no_speech_prob': 0.08000334352254868}, {'id': 272, 'seek': 160462, 'start': 1610.58, 'end': 1616.4599999999998, 'text': ' So what we do is we say that GOT holds initially address of a resolver function which is going', 'tokens': [50662, 407, 437, 321, 360, 307, 321, 584, 300, 36525, 9190, 9105, 2985, 295, 257, 34480, 2445, 597, 307, 516, 50956], 'temperature': 0.0, 'avg_logprob': -0.11564829157686782, 'compression_ratio': 1.7429906542056075, 'no_speech_prob': 0.08000334352254868}, {'id': 273, 'seek': 160462, 'start': 1616.4599999999998, 'end': 1620.9799999999998, 'text': ' to find out where the address of the function is.', 'tokens': [50956, 281, 915, 484, 689, 264, 2985, 295, 264, 2445, 307, 13, 51182], 'temperature': 0.0, 'avg_logprob': -0.11564829157686782, 'compression_ratio': 1.7429906542056075, 'no_speech_prob': 0.08000334352254868}, {'id': 274, 'seek': 160462, 'start': 1620.9799999999998, 'end': 1626.1399999999999, 'text': ' And once resolver is done it is going to update that address and say now here is the actual', 'tokens': [51182, 400, 1564, 34480, 307, 1096, 309, 307, 516, 281, 5623, 300, 2985, 293, 584, 586, 510, 307, 264, 3539, 51440], 'temperature': 0.0, 'avg_logprob': -0.11564829157686782, 'compression_ratio': 1.7429906542056075, 'no_speech_prob': 0.08000334352254868}, {'id': 275, 'seek': 160462, 'start': 1626.1399999999999, 'end': 1627.1399999999999, 'text': ' function.', 'tokens': [51440, 2445, 13, 51490], 'temperature': 0.0, 'avg_logprob': -0.11564829157686782, 'compression_ratio': 1.7429906542056075, 'no_speech_prob': 0.08000334352254868}, {'id': 276, 'seek': 160462, 'start': 1627.1399999999999, 'end': 1632.86, 'text': ' So every subsequent call is actually going to happen faster.', 'tokens': [51490, 407, 633, 19962, 818, 307, 767, 516, 281, 1051, 4663, 13, 51776], 'temperature': 0.0, 'avg_logprob': -0.11564829157686782, 'compression_ratio': 1.7429906542056075, 'no_speech_prob': 0.08000334352254868}, {'id': 277, 'seek': 163286, 'start': 1632.86, 'end': 1639.84, 'text': ' It still is going through PLT but it does not do any other things.', 'tokens': [50364, 467, 920, 307, 516, 807, 6999, 51, 457, 309, 775, 406, 360, 604, 661, 721, 13, 50713], 'temperature': 0.0, 'avg_logprob': -0.1808399388819565, 'compression_ratio': 1.5471698113207548, 'no_speech_prob': 0.014461921527981758}, {'id': 278, 'seek': 163286, 'start': 1639.84, 'end': 1645.6, 'text': ' So what did we achieve with this is essentially we do not have to populate GOT completely.', 'tokens': [50713, 407, 437, 630, 321, 4584, 365, 341, 307, 4476, 321, 360, 406, 362, 281, 1665, 5256, 36525, 2584, 13, 51001], 'temperature': 0.0, 'avg_logprob': -0.1808399388819565, 'compression_ratio': 1.5471698113207548, 'no_speech_prob': 0.014461921527981758}, {'id': 279, 'seek': 163286, 'start': 1645.6, 'end': 1650.0, 'text': ' So we are populating GOT lazily.', 'tokens': [51001, 407, 321, 366, 1665, 12162, 36525, 19320, 953, 13, 51221], 'temperature': 0.0, 'avg_logprob': -0.1808399388819565, 'compression_ratio': 1.5471698113207548, 'no_speech_prob': 0.014461921527981758}, {'id': 280, 'seek': 163286, 'start': 1650.0, 'end': 1657.2199999999998, 'text': ' And then after the first call overhead is paid all the subsequent calls are faster because', 'tokens': [51221, 400, 550, 934, 264, 700, 818, 19922, 307, 4835, 439, 264, 19962, 5498, 366, 4663, 570, 51582], 'temperature': 0.0, 'avg_logprob': -0.1808399388819565, 'compression_ratio': 1.5471698113207548, 'no_speech_prob': 0.014461921527981758}, {'id': 281, 'seek': 163286, 'start': 1657.2199999999998, 'end': 1660.02, 'text': ' they directly get the address of the function.', 'tokens': [51582, 436, 3838, 483, 264, 2985, 295, 264, 2445, 13, 51722], 'temperature': 0.0, 'avg_logprob': -0.1808399388819565, 'compression_ratio': 1.5471698113207548, 'no_speech_prob': 0.014461921527981758}, {'id': 282, 'seek': 166002, 'start': 1660.74, 'end': 1668.1399999999999, 'text': ' So after resolver after resolver it will come to if you overwrite the address and then comes', 'tokens': [50400, 407, 934, 34480, 934, 34480, 309, 486, 808, 281, 498, 291, 670, 21561, 264, 2985, 293, 550, 1487, 50770], 'temperature': 0.0, 'avg_logprob': -0.3545415692213105, 'compression_ratio': 1.9230769230769231, 'no_speech_prob': 0.029990339651703835}, {'id': 283, 'seek': 166002, 'start': 1668.1399999999999, 'end': 1669.1399999999999, 'text': ' to function.', 'tokens': [50770, 281, 2445, 13, 50820], 'temperature': 0.0, 'avg_logprob': -0.3545415692213105, 'compression_ratio': 1.9230769230769231, 'no_speech_prob': 0.029990339651703835}, {'id': 284, 'seek': 166002, 'start': 1669.1399999999999, 'end': 1670.1399999999999, 'text': ' Correct.', 'tokens': [50820, 12753, 13, 50870], 'temperature': 0.0, 'avg_logprob': -0.3545415692213105, 'compression_ratio': 1.9230769230769231, 'no_speech_prob': 0.029990339651703835}, {'id': 285, 'seek': 166002, 'start': 1670.1399999999999, 'end': 1671.1399999999999, 'text': ' Correct.', 'tokens': [50870, 12753, 13, 50920], 'temperature': 0.0, 'avg_logprob': -0.3545415692213105, 'compression_ratio': 1.9230769230769231, 'no_speech_prob': 0.029990339651703835}, {'id': 286, 'seek': 166002, 'start': 1671.1399999999999, 'end': 1676.3799999999999, 'text': ' So what resolver is doing is it is trying to figure out what is the address of the function', 'tokens': [50920, 407, 437, 34480, 307, 884, 307, 309, 307, 1382, 281, 2573, 484, 437, 307, 264, 2985, 295, 264, 2445, 51182], 'temperature': 0.0, 'avg_logprob': -0.3545415692213105, 'compression_ratio': 1.9230769230769231, 'no_speech_prob': 0.029990339651703835}, {'id': 287, 'seek': 166002, 'start': 1676.3799999999999, 'end': 1681.42, 'text': ' and once it is done figuring out the address it will overwrite the GOT and then start executing', 'tokens': [51182, 293, 1564, 309, 307, 1096, 15213, 484, 264, 2985, 309, 486, 670, 21561, 264, 36525, 293, 550, 722, 32368, 51434], 'temperature': 0.0, 'avg_logprob': -0.3545415692213105, 'compression_ratio': 1.9230769230769231, 'no_speech_prob': 0.029990339651703835}, {'id': 288, 'seek': 166002, 'start': 1681.42, 'end': 1687.9, 'text': ' that address.', 'tokens': [51434, 300, 2985, 13, 51758], 'temperature': 0.0, 'avg_logprob': -0.3545415692213105, 'compression_ratio': 1.9230769230769231, 'no_speech_prob': 0.029990339651703835}, {'id': 289, 'seek': 168790, 'start': 1687.9, 'end': 1690.98, 'text': ' Is this clear?', 'tokens': [50364, 1119, 341, 1850, 30, 50518], 'temperature': 0.0, 'avg_logprob': -0.12492117128874126, 'compression_ratio': 1.559782608695652, 'no_speech_prob': 0.006093784235417843}, {'id': 290, 'seek': 168790, 'start': 1690.98, 'end': 1697.3000000000002, 'text': ' So this allows us to get position independent function calls also.', 'tokens': [50518, 407, 341, 4045, 505, 281, 483, 2535, 6695, 2445, 5498, 611, 13, 50834], 'temperature': 0.0, 'avg_logprob': -0.12492117128874126, 'compression_ratio': 1.559782608695652, 'no_speech_prob': 0.006093784235417843}, {'id': 291, 'seek': 168790, 'start': 1697.3000000000002, 'end': 1704.94, 'text': ' So no matter where a function is loaded it can be called and PLT again you can see PLT', 'tokens': [50834, 407, 572, 1871, 689, 257, 2445, 307, 13210, 309, 393, 312, 1219, 293, 6999, 51, 797, 291, 393, 536, 6999, 51, 51216], 'temperature': 0.0, 'avg_logprob': -0.12492117128874126, 'compression_ratio': 1.559782608695652, 'no_speech_prob': 0.006093784235417843}, {'id': 292, 'seek': 168790, 'start': 1704.94, 'end': 1710.7, 'text': ' is the executable code and GOT is the data.', 'tokens': [51216, 307, 264, 7568, 712, 3089, 293, 36525, 307, 264, 1412, 13, 51504], 'temperature': 0.0, 'avg_logprob': -0.12492117128874126, 'compression_ratio': 1.559782608695652, 'no_speech_prob': 0.006093784235417843}, {'id': 293, 'seek': 168790, 'start': 1710.7, 'end': 1716.5800000000002, 'text': ' So PLT can still be shared across processes because it just bunch of code.', 'tokens': [51504, 407, 6999, 51, 393, 920, 312, 5507, 2108, 7555, 570, 309, 445, 3840, 295, 3089, 13, 51798], 'temperature': 0.0, 'avg_logprob': -0.12492117128874126, 'compression_ratio': 1.559782608695652, 'no_speech_prob': 0.006093784235417843}, {'id': 294, 'seek': 171658, 'start': 1716.58, 'end': 1721.78, 'text': ' What is the things which are changing are still in the GOT only.', 'tokens': [50364, 708, 307, 264, 721, 597, 366, 4473, 366, 920, 294, 264, 36525, 787, 13, 50624], 'temperature': 0.0, 'avg_logprob': -0.2856024182032025, 'compression_ratio': 1.5354838709677419, 'no_speech_prob': 0.001698366249911487}, {'id': 295, 'seek': 171658, 'start': 1721.78, 'end': 1725.6999999999998, 'text': ' We are not changing anything in the PLT.', 'tokens': [50624, 492, 366, 406, 4473, 1340, 294, 264, 6999, 51, 13, 50820], 'temperature': 0.0, 'avg_logprob': -0.2856024182032025, 'compression_ratio': 1.5354838709677419, 'no_speech_prob': 0.001698366249911487}, {'id': 296, 'seek': 171658, 'start': 1725.6999999999998, 'end': 1732.6599999999999, 'text': ' So the code section is completely shared including the code which is present in the PLT only', 'tokens': [50820, 407, 264, 3089, 3541, 307, 2584, 5507, 3009, 264, 3089, 597, 307, 1974, 294, 264, 6999, 51, 787, 51168], 'temperature': 0.0, 'avg_logprob': -0.2856024182032025, 'compression_ratio': 1.5354838709677419, 'no_speech_prob': 0.001698366249911487}, {'id': 297, 'seek': 171658, 'start': 1732.6599999999999, 'end': 1737.0, 'text': ' GOT is modified.', 'tokens': [51168, 36525, 307, 15873, 13, 51385], 'temperature': 0.0, 'avg_logprob': -0.2856024182032025, 'compression_ratio': 1.5354838709677419, 'no_speech_prob': 0.001698366249911487}, {'id': 298, 'seek': 171658, 'start': 1737.0, 'end': 1741.5, 'text': ' Any questions on this?', 'tokens': [51385, 2639, 1651, 322, 341, 30, 51610], 'temperature': 0.0, 'avg_logprob': -0.2856024182032025, 'compression_ratio': 1.5354838709677419, 'no_speech_prob': 0.001698366249911487}, {'id': 299, 'seek': 174150, 'start': 1741.5, 'end': 1746.5, 'text': ' Sorry.', 'tokens': [50364, 4919, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.18419519189285904, 'compression_ratio': 1.627906976744186, 'no_speech_prob': 0.010645574890077114}, {'id': 300, 'seek': 174150, 'start': 1746.5, 'end': 1750.46, 'text': ' Resolvers job is essentially to figure out which symbol to pick up.', 'tokens': [50614, 5015, 401, 840, 1691, 307, 4476, 281, 2573, 484, 597, 5986, 281, 1888, 493, 13, 50812], 'temperature': 0.0, 'avg_logprob': -0.18419519189285904, 'compression_ratio': 1.627906976744186, 'no_speech_prob': 0.010645574890077114}, {'id': 301, 'seek': 174150, 'start': 1750.46, 'end': 1754.14, 'text': ' So for example if there are multiple foos which one to pick up according to the rules', 'tokens': [50812, 407, 337, 1365, 498, 456, 366, 3866, 726, 329, 597, 472, 281, 1888, 493, 4650, 281, 264, 4474, 50996], 'temperature': 0.0, 'avg_logprob': -0.18419519189285904, 'compression_ratio': 1.627906976744186, 'no_speech_prob': 0.010645574890077114}, {'id': 302, 'seek': 174150, 'start': 1754.14, 'end': 1761.42, 'text': ' for dynamic shared libraries.', 'tokens': [50996, 337, 8546, 5507, 15148, 13, 51360], 'temperature': 0.0, 'avg_logprob': -0.18419519189285904, 'compression_ratio': 1.627906976744186, 'no_speech_prob': 0.010645574890077114}, {'id': 303, 'seek': 174150, 'start': 1761.42, 'end': 1769.84, 'text': ' So it is part of the linker code which figures out when there are two symbols what to do.', 'tokens': [51360, 407, 309, 307, 644, 295, 264, 2113, 260, 3089, 597, 9624, 484, 562, 456, 366, 732, 16944, 437, 281, 360, 13, 51781], 'temperature': 0.0, 'avg_logprob': -0.18419519189285904, 'compression_ratio': 1.627906976744186, 'no_speech_prob': 0.010645574890077114}, {'id': 304, 'seek': 176984, 'start': 1769.84, 'end': 1772.4399999999998, 'text': ' So what are the pros and cons of PIC?', 'tokens': [50364, 407, 437, 366, 264, 6267, 293, 1014, 295, 430, 2532, 30, 50494], 'temperature': 0.0, 'avg_logprob': -0.17638495798861042, 'compression_ratio': 1.6232558139534883, 'no_speech_prob': 0.016890373080968857}, {'id': 305, 'seek': 176984, 'start': 1772.4399999999998, 'end': 1779.1999999999998, 'text': ' So one is obviously pro is you are able to get shared libraries by which you can share', 'tokens': [50494, 407, 472, 307, 2745, 447, 307, 291, 366, 1075, 281, 483, 5507, 15148, 538, 597, 291, 393, 2073, 50832], 'temperature': 0.0, 'avg_logprob': -0.17638495798861042, 'compression_ratio': 1.6232558139534883, 'no_speech_prob': 0.016890373080968857}, {'id': 306, 'seek': 176984, 'start': 1779.1999999999998, 'end': 1780.24, 'text': ' the text section.', 'tokens': [50832, 264, 2487, 3541, 13, 50884], 'temperature': 0.0, 'avg_logprob': -0.17638495798861042, 'compression_ratio': 1.6232558139534883, 'no_speech_prob': 0.016890373080968857}, {'id': 307, 'seek': 176984, 'start': 1780.24, 'end': 1785.58, 'text': ' You do not have to kind of duplicate the text section.', 'tokens': [50884, 509, 360, 406, 362, 281, 733, 295, 23976, 264, 2487, 3541, 13, 51151], 'temperature': 0.0, 'avg_logprob': -0.17638495798861042, 'compression_ratio': 1.6232558139534883, 'no_speech_prob': 0.016890373080968857}, {'id': 308, 'seek': 176984, 'start': 1785.58, 'end': 1792.36, 'text': ' The cons is obviously you have some runtime overhead because you have GOTs and other things.', 'tokens': [51151, 440, 1014, 307, 2745, 291, 362, 512, 34474, 19922, 570, 291, 362, 36525, 82, 293, 661, 721, 13, 51490], 'temperature': 0.0, 'avg_logprob': -0.17638495798861042, 'compression_ratio': 1.6232558139534883, 'no_speech_prob': 0.016890373080968857}, {'id': 309, 'seek': 176984, 'start': 1792.36, 'end': 1795.3999999999999, 'text': ' Everything goes through at least one level of indirection.', 'tokens': [51490, 5471, 1709, 807, 412, 1935, 472, 1496, 295, 1016, 621, 882, 13, 51642], 'temperature': 0.0, 'avg_logprob': -0.17638495798861042, 'compression_ratio': 1.6232558139534883, 'no_speech_prob': 0.016890373080968857}, {'id': 310, 'seek': 179540, 'start': 1796.4, 'end': 1801.5600000000002, 'text': ' Every reference at least goes through one GOT reference and in case of function after', 'tokens': [50414, 2048, 6408, 412, 1935, 1709, 807, 472, 36525, 6408, 293, 294, 1389, 295, 2445, 934, 50672], 'temperature': 0.0, 'avg_logprob': -0.13112828948281027, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.10634179413318634}, {'id': 311, 'seek': 179540, 'start': 1801.5600000000002, 'end': 1804.0800000000002, 'text': ' first call one PLT reference.', 'tokens': [50672, 700, 818, 472, 6999, 51, 6408, 13, 50798], 'temperature': 0.0, 'avg_logprob': -0.13112828948281027, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.10634179413318634}, {'id': 312, 'seek': 179540, 'start': 1804.0800000000002, 'end': 1811.52, 'text': ' So there are some overheads and every variable and every function which is defined actually', 'tokens': [50798, 407, 456, 366, 512, 19922, 82, 293, 633, 7006, 293, 633, 2445, 597, 307, 7642, 767, 51170], 'temperature': 0.0, 'avg_logprob': -0.13112828948281027, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.10634179413318634}, {'id': 313, 'seek': 179540, 'start': 1811.52, 'end': 1813.22, 'text': ' needs to have a GOT entry.', 'tokens': [51170, 2203, 281, 362, 257, 36525, 8729, 13, 51255], 'temperature': 0.0, 'avg_logprob': -0.13112828948281027, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.10634179413318634}, {'id': 314, 'seek': 179540, 'start': 1813.22, 'end': 1815.72, 'text': ' So GOT can actually be very large.', 'tokens': [51255, 407, 36525, 393, 767, 312, 588, 2416, 13, 51380], 'temperature': 0.0, 'avg_logprob': -0.13112828948281027, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.10634179413318634}, {'id': 315, 'seek': 179540, 'start': 1815.72, 'end': 1821.88, 'text': ' So that will take some space in your program when it is running.', 'tokens': [51380, 407, 300, 486, 747, 512, 1901, 294, 428, 1461, 562, 309, 307, 2614, 13, 51688], 'temperature': 0.0, 'avg_logprob': -0.13112828948281027, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.10634179413318634}, {'id': 316, 'seek': 179540, 'start': 1821.88, 'end': 1822.88, 'text': ' Does that make sense?', 'tokens': [51688, 4402, 300, 652, 2020, 30, 51738], 'temperature': 0.0, 'avg_logprob': -0.13112828948281027, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.10634179413318634}, {'id': 317, 'seek': 182288, 'start': 1823.8400000000001, 'end': 1828.72, 'text': ' That is why when you are writing shared libraries it is very important for you to know which', 'tokens': [50412, 663, 307, 983, 562, 291, 366, 3579, 5507, 15148, 309, 307, 588, 1021, 337, 291, 281, 458, 597, 50656], 'temperature': 0.0, 'avg_logprob': -0.12981314511643244, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.004522380419075489}, {'id': 318, 'seek': 182288, 'start': 1828.72, 'end': 1834.72, 'text': ' things are actually needed to be exposed outside shared library and which things are needed', 'tokens': [50656, 721, 366, 767, 2978, 281, 312, 9495, 2380, 5507, 6405, 293, 597, 721, 366, 2978, 50956], 'temperature': 0.0, 'avg_logprob': -0.12981314511643244, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.004522380419075489}, {'id': 319, 'seek': 182288, 'start': 1834.72, 'end': 1836.48, 'text': ' just for the internal thing.', 'tokens': [50956, 445, 337, 264, 6920, 551, 13, 51044], 'temperature': 0.0, 'avg_logprob': -0.12981314511643244, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.004522380419075489}, {'id': 320, 'seek': 182288, 'start': 1836.48, 'end': 1842.96, 'text': ' So for example printf might be using bunch of utility routines for doing its own operation', 'tokens': [51044, 407, 337, 1365, 4482, 69, 1062, 312, 1228, 3840, 295, 14877, 33827, 337, 884, 1080, 1065, 6916, 51368], 'temperature': 0.0, 'avg_logprob': -0.12981314511643244, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.004522380419075489}, {'id': 321, 'seek': 182288, 'start': 1842.96, 'end': 1847.68, 'text': ' but those can be marked static and as soon as they are marked static they do not need', 'tokens': [51368, 457, 729, 393, 312, 12658, 13437, 293, 382, 2321, 382, 436, 366, 12658, 13437, 436, 360, 406, 643, 51604], 'temperature': 0.0, 'avg_logprob': -0.12981314511643244, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.004522380419075489}, {'id': 322, 'seek': 182288, 'start': 1847.68, 'end': 1851.64, 'text': ' a PLT entry or a GOT entry.', 'tokens': [51604, 257, 6999, 51, 8729, 420, 257, 36525, 8729, 13, 51802], 'temperature': 0.0, 'avg_logprob': -0.12981314511643244, 'compression_ratio': 1.7272727272727273, 'no_speech_prob': 0.004522380419075489}, {'id': 323, 'seek': 185164, 'start': 1851.64, 'end': 1857.76, 'text': ' That is why it is very important to tag your functions to respect the visibility because', 'tokens': [50364, 663, 307, 983, 309, 307, 588, 1021, 281, 6162, 428, 6828, 281, 3104, 264, 19883, 570, 50670], 'temperature': 0.0, 'avg_logprob': -0.12204712557505412, 'compression_ratio': 1.6129032258064515, 'no_speech_prob': 0.0007783146575093269}, {'id': 324, 'seek': 185164, 'start': 1857.76, 'end': 1864.2, 'text': ' it enables compiler to do more optimizations and linker to do more optimizations like this.', 'tokens': [50670, 309, 17077, 31958, 281, 360, 544, 5028, 14455, 293, 2113, 260, 281, 360, 544, 5028, 14455, 411, 341, 13, 50992], 'temperature': 0.0, 'avg_logprob': -0.12204712557505412, 'compression_ratio': 1.6129032258064515, 'no_speech_prob': 0.0007783146575093269}, {'id': 325, 'seek': 185164, 'start': 1864.2, 'end': 1868.48, 'text': ' Is it clear?', 'tokens': [50992, 1119, 309, 1850, 30, 51206], 'temperature': 0.0, 'avg_logprob': -0.12204712557505412, 'compression_ratio': 1.6129032258064515, 'no_speech_prob': 0.0007783146575093269}, {'id': 326, 'seek': 185164, 'start': 1868.48, 'end': 1874.2800000000002, 'text': ' Now whatever we saw so far was what happened in Linux x86.', 'tokens': [51206, 823, 2035, 321, 1866, 370, 1400, 390, 437, 2011, 294, 18734, 2031, 22193, 13, 51496], 'temperature': 0.0, 'avg_logprob': -0.12204712557505412, 'compression_ratio': 1.6129032258064515, 'no_speech_prob': 0.0007783146575093269}, {'id': 327, 'seek': 185164, 'start': 1874.2800000000002, 'end': 1880.1200000000001, 'text': ' Now obviously when you are designing new architectures you want to see what are the common things', 'tokens': [51496, 823, 2745, 562, 291, 366, 14685, 777, 6331, 1303, 291, 528, 281, 536, 437, 366, 264, 2689, 721, 51788], 'temperature': 0.0, 'avg_logprob': -0.12204712557505412, 'compression_ratio': 1.6129032258064515, 'no_speech_prob': 0.0007783146575093269}, {'id': 328, 'seek': 188012, 'start': 1880.28, 'end': 1889.04, 'text': ' which happened in the old architecture and improve hardware support for some of the things.', 'tokens': [50372, 597, 2011, 294, 264, 1331, 9482, 293, 3470, 8837, 1406, 337, 512, 295, 264, 721, 13, 50810], 'temperature': 0.0, 'avg_logprob': -0.12679506520755957, 'compression_ratio': 1.5868263473053892, 'no_speech_prob': 0.009874911978840828}, {'id': 329, 'seek': 188012, 'start': 1889.04, 'end': 1898.36, 'text': ' So one of the things which x86-64 architecture adds is it adds relative data addressing.', 'tokens': [50810, 407, 472, 295, 264, 721, 597, 2031, 22193, 12, 19395, 9482, 10860, 307, 309, 10860, 4972, 1412, 14329, 13, 51276], 'temperature': 0.0, 'avg_logprob': -0.12679506520755957, 'compression_ratio': 1.5868263473053892, 'no_speech_prob': 0.009874911978840828}, {'id': 330, 'seek': 188012, 'start': 1898.36, 'end': 1906.04, 'text': ' So this trick which we were doing that we had to call to a dummy instruction and get', 'tokens': [51276, 407, 341, 4282, 597, 321, 645, 884, 300, 321, 632, 281, 818, 281, 257, 35064, 10951, 293, 483, 51660], 'temperature': 0.0, 'avg_logprob': -0.12679506520755957, 'compression_ratio': 1.5868263473053892, 'no_speech_prob': 0.009874911978840828}, {'id': 331, 'seek': 190604, 'start': 1906.2, 'end': 1916.68, 'text': ' from the stack is no longer needed on x86-64 because x86-64 allows you to do current instruction', 'tokens': [50372, 490, 264, 8630, 307, 572, 2854, 2978, 322, 2031, 22193, 12, 19395, 570, 2031, 22193, 12, 19395, 4045, 291, 281, 360, 2190, 10951, 50896], 'temperature': 0.0, 'avg_logprob': -0.1347801834344864, 'compression_ratio': 1.4437869822485208, 'no_speech_prob': 0.07794897258281708}, {'id': 332, 'seek': 190604, 'start': 1916.68, 'end': 1921.72, 'text': ' plus minus something to access the data.', 'tokens': [50896, 1804, 3175, 746, 281, 2105, 264, 1412, 13, 51148], 'temperature': 0.0, 'avg_logprob': -0.1347801834344864, 'compression_ratio': 1.4437869822485208, 'no_speech_prob': 0.07794897258281708}, {'id': 333, 'seek': 190604, 'start': 1921.72, 'end': 1930.96, 'text': ' So x86-64 supports PC relative addressing and some of the support for PIC gets simplified', 'tokens': [51148, 407, 2031, 22193, 12, 19395, 9346, 6465, 4972, 14329, 293, 512, 295, 264, 1406, 337, 430, 2532, 2170, 26335, 51610], 'temperature': 0.0, 'avg_logprob': -0.1347801834344864, 'compression_ratio': 1.4437869822485208, 'no_speech_prob': 0.07794897258281708}, {'id': 334, 'seek': 190604, 'start': 1930.96, 'end': 1934.3999999999999, 'text': ' because of that.', 'tokens': [51610, 570, 295, 300, 13, 51782], 'temperature': 0.0, 'avg_logprob': -0.1347801834344864, 'compression_ratio': 1.4437869822485208, 'no_speech_prob': 0.07794897258281708}, {'id': 335, 'seek': 193440, 'start': 1934.4, 'end': 1941.8400000000001, 'text': " So it requires essentially fewer instructions because you don't have to do that dummy call.", 'tokens': [50364, 407, 309, 7029, 4476, 13366, 9415, 570, 291, 500, 380, 362, 281, 360, 300, 35064, 818, 13, 50736], 'temperature': 0.0, 'avg_logprob': -0.14435051835101584, 'compression_ratio': 1.5991379310344827, 'no_speech_prob': 0.0021735490299761295}, {'id': 336, 'seek': 193440, 'start': 1941.8400000000001, 'end': 1950.0800000000002, 'text': ' One other thing which x86-64 enforces at least GCC is it forces you to create shared libraries', 'tokens': [50736, 1485, 661, 551, 597, 2031, 22193, 12, 19395, 25495, 887, 412, 1935, 460, 11717, 307, 309, 5874, 291, 281, 1884, 5507, 15148, 51148], 'temperature': 0.0, 'avg_logprob': -0.14435051835101584, 'compression_ratio': 1.5991379310344827, 'no_speech_prob': 0.0021735490299761295}, {'id': 337, 'seek': 193440, 'start': 1950.0800000000002, 'end': 1951.8000000000002, 'text': ' using FPIC only.', 'tokens': [51148, 1228, 36655, 2532, 787, 13, 51234], 'temperature': 0.0, 'avg_logprob': -0.14435051835101584, 'compression_ratio': 1.5991379310344827, 'no_speech_prob': 0.0021735490299761295}, {'id': 338, 'seek': 193440, 'start': 1951.8000000000002, 'end': 1956.0, 'text': ' So you cannot create a shared library without FPIC.', 'tokens': [51234, 407, 291, 2644, 1884, 257, 5507, 6405, 1553, 36655, 2532, 13, 51444], 'temperature': 0.0, 'avg_logprob': -0.14435051835101584, 'compression_ratio': 1.5991379310344827, 'no_speech_prob': 0.0021735490299761295}, {'id': 339, 'seek': 193440, 'start': 1956.0, 'end': 1961.76, 'text': ' Remember before we got into FPIC we were trying to create shared library which had relocations', 'tokens': [51444, 5459, 949, 321, 658, 666, 36655, 2532, 321, 645, 1382, 281, 1884, 5507, 6405, 597, 632, 26981, 763, 51732], 'temperature': 0.0, 'avg_logprob': -0.14435051835101584, 'compression_ratio': 1.5991379310344827, 'no_speech_prob': 0.0021735490299761295}, {'id': 340, 'seek': 193440, 'start': 1961.76, 'end': 1963.76, 'text': ' on the text section.', 'tokens': [51732, 322, 264, 2487, 3541, 13, 51832], 'temperature': 0.0, 'avg_logprob': -0.14435051835101584, 'compression_ratio': 1.5991379310344827, 'no_speech_prob': 0.0021735490299761295}, {'id': 341, 'seek': 196376, 'start': 1963.76, 'end': 1968.08, 'text': ' So x86-64 Linux implementation does not allow you to do that.', 'tokens': [50364, 407, 2031, 22193, 12, 19395, 18734, 11420, 775, 406, 2089, 291, 281, 360, 300, 13, 50580], 'temperature': 0.0, 'avg_logprob': -0.26497647166252136, 'compression_ratio': 1.4024390243902438, 'no_speech_prob': 0.007114289794117212}, {'id': 342, 'seek': 196376, 'start': 1968.08, 'end': 1973.28, 'text': ' So you have to compile your shared libraries using FPIC.', 'tokens': [50580, 407, 291, 362, 281, 31413, 428, 5507, 15148, 1228, 36655, 2532, 13, 50840], 'temperature': 0.0, 'avg_logprob': -0.26497647166252136, 'compression_ratio': 1.4024390243902438, 'no_speech_prob': 0.007114289794117212}, {'id': 343, 'seek': 196376, 'start': 1973.28, 'end': 1979.68, 'text': ' How many of you have heard of a term called as code models?', 'tokens': [50840, 1012, 867, 295, 291, 362, 2198, 295, 257, 1433, 1219, 382, 3089, 5245, 30, 51160], 'temperature': 0.0, 'avg_logprob': -0.26497647166252136, 'compression_ratio': 1.4024390243902438, 'no_speech_prob': 0.007114289794117212}, {'id': 344, 'seek': 196376, 'start': 1979.68, 'end': 1983.24, 'text': ' Anyone?', 'tokens': [51160, 14643, 30, 51338], 'temperature': 0.0, 'avg_logprob': -0.26497647166252136, 'compression_ratio': 1.4024390243902438, 'no_speech_prob': 0.007114289794117212}, {'id': 345, 'seek': 196376, 'start': 1983.24, 'end': 1989.0, 'text': ' So code model is essentially set of things.', 'tokens': [51338, 407, 3089, 2316, 307, 4476, 992, 295, 721, 13, 51626], 'temperature': 0.0, 'avg_logprob': -0.26497647166252136, 'compression_ratio': 1.4024390243902438, 'no_speech_prob': 0.007114289794117212}, {'id': 346, 'seek': 198900, 'start': 1989.84, 'end': 1991.4, 'text': ' Correct.', 'tokens': [50406, 12753, 13, 50484], 'temperature': 0.0, 'avg_logprob': -0.23922813349756702, 'compression_ratio': 1.5828220858895705, 'no_speech_prob': 0.014047369360923767}, {'id': 347, 'seek': 198900, 'start': 1991.4, 'end': 1992.8, 'text': ' Somewhat yeah.', 'tokens': [50484, 2188, 5479, 1338, 13, 50554], 'temperature': 0.0, 'avg_logprob': -0.23922813349756702, 'compression_ratio': 1.5828220858895705, 'no_speech_prob': 0.014047369360923767}, {'id': 348, 'seek': 198900, 'start': 1992.8, 'end': 2001.6, 'text': ' So essentially what happens is whenever compiler is generating code it assumes some code model.', 'tokens': [50554, 407, 4476, 437, 2314, 307, 5699, 31958, 307, 17746, 3089, 309, 37808, 512, 3089, 2316, 13, 50994], 'temperature': 0.0, 'avg_logprob': -0.23922813349756702, 'compression_ratio': 1.5828220858895705, 'no_speech_prob': 0.014047369360923767}, {'id': 349, 'seek': 198900, 'start': 2001.6, 'end': 2009.4, 'text': ' Now what happens is typically you can think of code model as something which describes', 'tokens': [50994, 823, 437, 2314, 307, 5850, 291, 393, 519, 295, 3089, 2316, 382, 746, 597, 15626, 51384], 'temperature': 0.0, 'avg_logprob': -0.23922813349756702, 'compression_ratio': 1.5828220858895705, 'no_speech_prob': 0.014047369360923767}, {'id': 350, 'seek': 198900, 'start': 2009.4, 'end': 2014.12, 'text': ' how far addresses you can access from instructions.', 'tokens': [51384, 577, 1400, 16862, 291, 393, 2105, 490, 9415, 13, 51620], 'temperature': 0.0, 'avg_logprob': -0.23922813349756702, 'compression_ratio': 1.5828220858895705, 'no_speech_prob': 0.014047369360923767}, {'id': 351, 'seek': 201412, 'start': 2014.12, 'end': 2021.8799999999999, 'text': ' Now by default x86-64 supports PC relative addressing and the way things are supported', 'tokens': [50364, 823, 538, 7576, 2031, 22193, 12, 19395, 9346, 6465, 4972, 14329, 293, 264, 636, 721, 366, 8104, 50752], 'temperature': 0.0, 'avg_logprob': -0.14233860904223297, 'compression_ratio': 1.4146341463414633, 'no_speech_prob': 0.019099626690149307}, {'id': 352, 'seek': 201412, 'start': 2021.8799999999999, 'end': 2024.2399999999998, 'text': ' is the displacement can be 32 bits.', 'tokens': [50752, 307, 264, 21899, 393, 312, 8858, 9239, 13, 50870], 'temperature': 0.0, 'avg_logprob': -0.14233860904223297, 'compression_ratio': 1.4146341463414633, 'no_speech_prob': 0.019099626690149307}, {'id': 353, 'seek': 201412, 'start': 2024.2399999999998, 'end': 2029.9199999999998, 'text': ' So you should be able to reference anything from current instruction which lies above', 'tokens': [50870, 407, 291, 820, 312, 1075, 281, 6408, 1340, 490, 2190, 10951, 597, 9134, 3673, 51154], 'temperature': 0.0, 'avg_logprob': -0.14233860904223297, 'compression_ratio': 1.4146341463414633, 'no_speech_prob': 0.019099626690149307}, {'id': 354, 'seek': 201412, 'start': 2029.9199999999998, 'end': 2033.9199999999998, 'text': ' 2 GB or below 2 GB.', 'tokens': [51154, 568, 26809, 420, 2507, 568, 26809, 13, 51354], 'temperature': 0.0, 'avg_logprob': -0.14233860904223297, 'compression_ratio': 1.4146341463414633, 'no_speech_prob': 0.019099626690149307}, {'id': 355, 'seek': 201412, 'start': 2033.9199999999998, 'end': 2041.1999999999998, 'text': ' Now what happens if you have data which does not fit in 2 GB?', 'tokens': [51354, 823, 437, 2314, 498, 291, 362, 1412, 597, 775, 406, 3318, 294, 568, 26809, 30, 51718], 'temperature': 0.0, 'avg_logprob': -0.14233860904223297, 'compression_ratio': 1.4146341463414633, 'no_speech_prob': 0.019099626690149307}, {'id': 356, 'seek': 204120, 'start': 2041.28, 'end': 2044.56, 'text': ' Then you cannot use PC relative addressing.', 'tokens': [50368, 1396, 291, 2644, 764, 6465, 4972, 14329, 13, 50532], 'temperature': 0.0, 'avg_logprob': -0.29095426358674703, 'compression_ratio': 0.9090909090909091, 'no_speech_prob': 0.47903764247894287}, {'id': 357, 'seek': 204120, 'start': 2044.56, 'end': 2045.56, 'text': ' Let us try that.', 'tokens': [50532, 961, 505, 853, 300, 13, 50582], 'temperature': 0.0, 'avg_logprob': -0.29095426358674703, 'compression_ratio': 0.9090909090909091, 'no_speech_prob': 0.47903764247894287}, {'id': 358, 'seek': 204556, 'start': 2045.56, 'end': 2058.7599999999998, 'text': ' Let us say I have', 'tokens': [50364, 961, 505, 584, 286, 362, 51024], 'temperature': 0.0, 'avg_logprob': -0.5685382948981391, 'compression_ratio': 0.68, 'no_speech_prob': 0.2935331165790558}, {'id': 359, 'seek': 205876, 'start': 2058.96, 'end': 2078.96, 'text': ' Let us say I have ARR which is of 1 GB and I am trying to access it now in the program.', 'tokens': [50374, 961, 505, 584, 286, 362, 8943, 49, 597, 307, 295, 502, 26809, 293, 286, 669, 1382, 281, 2105, 309, 586, 294, 264, 1461, 13, 51374], 'temperature': 0.0, 'avg_logprob': -0.3436342988695417, 'compression_ratio': 1.0235294117647058, 'no_speech_prob': 0.23279857635498047}, {'id': 360, 'seek': 207896, 'start': 2078.96, 'end': 2098.88, 'text': ' It worked.', 'tokens': [50364, 467, 2732, 13, 51360], 'temperature': 0.0, 'avg_logprob': -0.6258700915745327, 'compression_ratio': 0.5555555555555556, 'no_speech_prob': 0.7605388164520264}, {'id': 361, 'seek': 209888, 'start': 2098.88, 'end': 2101.6800000000003, 'text': ' And it printed something.', 'tokens': [50364, 400, 309, 13567, 746, 13, 50504], 'temperature': 0.0, 'avg_logprob': -0.4402081878096969, 'compression_ratio': 1.1842105263157894, 'no_speech_prob': 0.2929782569408417}, {'id': 362, 'seek': 209888, 'start': 2101.6800000000003, 'end': 2122.52, 'text': ' I mean it should have printed.', 'tokens': [50504, 286, 914, 309, 820, 362, 13567, 13, 51546], 'temperature': 0.0, 'avg_logprob': -0.4402081878096969, 'compression_ratio': 1.1842105263157894, 'no_speech_prob': 0.2929782569408417}, {'id': 363, 'seek': 209888, 'start': 2122.52, 'end': 2127.36, 'text': ' So it printed some garbage stuff.', 'tokens': [51546, 407, 309, 13567, 512, 14150, 1507, 13, 51788], 'temperature': 0.0, 'avg_logprob': -0.4402081878096969, 'compression_ratio': 1.1842105263157894, 'no_speech_prob': 0.2929782569408417}, {'id': 364, 'seek': 212736, 'start': 2127.36, 'end': 2153.92, 'text': ' Now let me try to increase this to 2 GB.', 'tokens': [50364, 823, 718, 385, 853, 281, 3488, 341, 281, 568, 26809, 13, 51692], 'temperature': 0.0, 'avg_logprob': -0.3634986241658529, 'compression_ratio': 0.9090909090909091, 'no_speech_prob': 0.8955251574516296}, {'id': 365, 'seek': 215392, 'start': 2153.92, 'end': 2157.8, 'text': ' It still worked.', 'tokens': [50364, 467, 920, 2732, 13, 50558], 'temperature': 0.0, 'avg_logprob': -0.45638769323175604, 'compression_ratio': 1.0408163265306123, 'no_speech_prob': 0.836412787437439}, {'id': 366, 'seek': 215392, 'start': 2157.8, 'end': 2176.04, 'text': ' Let me make it 3 GB.', 'tokens': [50558, 961, 385, 652, 309, 805, 26809, 13, 51470], 'temperature': 0.0, 'avg_logprob': -0.45638769323175604, 'compression_ratio': 1.0408163265306123, 'no_speech_prob': 0.836412787437439}, {'id': 367, 'seek': 215392, 'start': 2176.04, 'end': 2181.04, 'text': ' Still worked.', 'tokens': [51470, 8291, 2732, 13, 51720], 'temperature': 0.0, 'avg_logprob': -0.45638769323175604, 'compression_ratio': 1.0408163265306123, 'no_speech_prob': 0.836412787437439}, {'id': 368, 'seek': 218104, 'start': 2181.04, 'end': 2200.04, 'text': ' This is 7 GB.', 'tokens': [50364, 639, 307, 1614, 26809, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.8007484012179904, 'compression_ratio': 0.6842105263157895, 'no_speech_prob': 0.9376960396766663}, {'id': 369, 'seek': 238004, 'start': 2380.04, 'end': 2407.16, 'text': ' Okay.', 'tokens': [50364, 1033, 13, 51720], 'temperature': 0.0, 'avg_logprob': -0.8060101668039957, 'compression_ratio': 0.38461538461538464, 'no_speech_prob': 0.8337509036064148}, {'id': 370, 'seek': 240716, 'start': 2407.16, 'end': 2410.68, 'text': ' So GCC is actually realizing it is absolute address.', 'tokens': [50364, 407, 460, 11717, 307, 767, 16734, 309, 307, 8236, 2985, 13, 50540], 'temperature': 0.0, 'avg_logprob': -0.532893453325544, 'compression_ratio': 0.927536231884058, 'no_speech_prob': 0.6992864608764648}, {'id': 371, 'seek': 240716, 'start': 2410.68, 'end': 2434.16, 'text': ' Let us try.', 'tokens': [50540, 961, 505, 853, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.532893453325544, 'compression_ratio': 0.927536231884058, 'no_speech_prob': 0.6992864608764648}, {'id': 372, 'seek': 243416, 'start': 2434.16, 'end': 2435.68, 'text': ' I think I will need to try it.', 'tokens': [50364, 286, 519, 286, 486, 643, 281, 853, 309, 13, 50440], 'temperature': 0.0, 'avg_logprob': -0.1138918950007512, 'compression_ratio': 1.708502024291498, 'no_speech_prob': 0.5304242968559265}, {'id': 373, 'seek': 243416, 'start': 2435.68, 'end': 2439.8799999999997, 'text': ' But essentially what I was expecting sorry for going on detour.', 'tokens': [50440, 583, 4476, 437, 286, 390, 9650, 2597, 337, 516, 322, 1141, 396, 13, 50650], 'temperature': 0.0, 'avg_logprob': -0.1138918950007512, 'compression_ratio': 1.708502024291498, 'no_speech_prob': 0.5304242968559265}, {'id': 374, 'seek': 243416, 'start': 2439.8799999999997, 'end': 2445.44, 'text': ' But essentially what happens is since it supports PC relative addressing what happens is you', 'tokens': [50650, 583, 4476, 437, 2314, 307, 1670, 309, 9346, 6465, 4972, 14329, 437, 2314, 307, 291, 50928], 'temperature': 0.0, 'avg_logprob': -0.1138918950007512, 'compression_ratio': 1.708502024291498, 'no_speech_prob': 0.5304242968559265}, {'id': 375, 'seek': 243416, 'start': 2445.44, 'end': 2451.12, 'text': ' can refer to the data from the code section which falls within the 2 GB range.', 'tokens': [50928, 393, 2864, 281, 264, 1412, 490, 264, 3089, 3541, 597, 8804, 1951, 264, 568, 26809, 3613, 13, 51212], 'temperature': 0.0, 'avg_logprob': -0.1138918950007512, 'compression_ratio': 1.708502024291498, 'no_speech_prob': 0.5304242968559265}, {'id': 376, 'seek': 243416, 'start': 2451.12, 'end': 2455.64, 'text': ' Now for some reason GCC is realizing it is going far away and it is actually using absolute', 'tokens': [51212, 823, 337, 512, 1778, 460, 11717, 307, 16734, 309, 307, 516, 1400, 1314, 293, 309, 307, 767, 1228, 8236, 51438], 'temperature': 0.0, 'avg_logprob': -0.1138918950007512, 'compression_ratio': 1.708502024291498, 'no_speech_prob': 0.5304242968559265}, {'id': 377, 'seek': 243416, 'start': 2455.64, 'end': 2456.64, 'text': ' address.', 'tokens': [51438, 2985, 13, 51488], 'temperature': 0.0, 'avg_logprob': -0.1138918950007512, 'compression_ratio': 1.708502024291498, 'no_speech_prob': 0.5304242968559265}, {'id': 378, 'seek': 243416, 'start': 2456.64, 'end': 2459.48, 'text': ' I do not know how to force it to use relative address.', 'tokens': [51488, 286, 360, 406, 458, 577, 281, 3464, 309, 281, 764, 4972, 2985, 13, 51630], 'temperature': 0.0, 'avg_logprob': -0.1138918950007512, 'compression_ratio': 1.708502024291498, 'no_speech_prob': 0.5304242968559265}, {'id': 379, 'seek': 245948, 'start': 2460.28, 'end': 2464.2400000000002, 'text': ' But since you were using relative address and if your data does not fit then what will', 'tokens': [50404, 583, 1670, 291, 645, 1228, 4972, 2985, 293, 498, 428, 1412, 775, 406, 3318, 550, 437, 486, 50602], 'temperature': 0.0, 'avg_logprob': -0.13167527198791504, 'compression_ratio': 1.7669491525423728, 'no_speech_prob': 0.4137701392173767}, {'id': 380, 'seek': 245948, 'start': 2464.2400000000002, 'end': 2469.88, 'text': ' actually happen is it will not be able to figure out it will not be able to reference', 'tokens': [50602, 767, 1051, 307, 309, 486, 406, 312, 1075, 281, 2573, 484, 309, 486, 406, 312, 1075, 281, 6408, 50884], 'temperature': 0.0, 'avg_logprob': -0.13167527198791504, 'compression_ratio': 1.7669491525423728, 'no_speech_prob': 0.4137701392173767}, {'id': 381, 'seek': 245948, 'start': 2469.88, 'end': 2473.64, 'text': ' that data using the PC relative addressing.', 'tokens': [50884, 300, 1412, 1228, 264, 6465, 4972, 14329, 13, 51072], 'temperature': 0.0, 'avg_logprob': -0.13167527198791504, 'compression_ratio': 1.7669491525423728, 'no_speech_prob': 0.4137701392173767}, {'id': 382, 'seek': 245948, 'start': 2473.64, 'end': 2480.2, 'text': ' And that is supposed to be the default code model where you always use data which will', 'tokens': [51072, 400, 300, 307, 3442, 281, 312, 264, 7576, 3089, 2316, 689, 291, 1009, 764, 1412, 597, 486, 51400], 'temperature': 0.0, 'avg_logprob': -0.13167527198791504, 'compression_ratio': 1.7669491525423728, 'no_speech_prob': 0.4137701392173767}, {'id': 383, 'seek': 245948, 'start': 2480.2, 'end': 2482.08, 'text': ' fit within the 2 GB range.', 'tokens': [51400, 3318, 1951, 264, 568, 26809, 3613, 13, 51494], 'temperature': 0.0, 'avg_logprob': -0.13167527198791504, 'compression_ratio': 1.7669491525423728, 'no_speech_prob': 0.4137701392173767}, {'id': 384, 'seek': 245948, 'start': 2482.08, 'end': 2488.1, 'text': ' But if that does not happen then compiler and linker cannot figure out how to do this.', 'tokens': [51494, 583, 498, 300, 775, 406, 1051, 550, 31958, 293, 2113, 260, 2644, 2573, 484, 577, 281, 360, 341, 13, 51795], 'temperature': 0.0, 'avg_logprob': -0.13167527198791504, 'compression_ratio': 1.7669491525423728, 'no_speech_prob': 0.4137701392173767}, {'id': 385, 'seek': 248810, 'start': 2488.22, 'end': 2494.2599999999998, 'text': ' And that is where you need to actually change the code model to use large addresses where', 'tokens': [50370, 400, 300, 307, 689, 291, 643, 281, 767, 1319, 264, 3089, 2316, 281, 764, 2416, 16862, 689, 50672], 'temperature': 0.0, 'avg_logprob': -0.1445530298593882, 'compression_ratio': 1.675531914893617, 'no_speech_prob': 0.014921379275619984}, {'id': 386, 'seek': 248810, 'start': 2494.2599999999998, 'end': 2498.06, 'text': ' it can actually be more than 2 GB.', 'tokens': [50672, 309, 393, 767, 312, 544, 813, 568, 26809, 13, 50862], 'temperature': 0.0, 'avg_logprob': -0.1445530298593882, 'compression_ratio': 1.675531914893617, 'no_speech_prob': 0.014921379275619984}, {'id': 387, 'seek': 248810, 'start': 2498.06, 'end': 2503.38, 'text': ' And then it will actually use slightly slower code to reference data than using relative', 'tokens': [50862, 400, 550, 309, 486, 767, 764, 4748, 14009, 3089, 281, 6408, 1412, 813, 1228, 4972, 51128], 'temperature': 0.0, 'avg_logprob': -0.1445530298593882, 'compression_ratio': 1.675531914893617, 'no_speech_prob': 0.014921379275619984}, {'id': 388, 'seek': 248810, 'start': 2503.38, 'end': 2507.22, 'text': ' addressing.', 'tokens': [51128, 14329, 13, 51320], 'temperature': 0.0, 'avg_logprob': -0.1445530298593882, 'compression_ratio': 1.675531914893617, 'no_speech_prob': 0.014921379275619984}, {'id': 389, 'seek': 248810, 'start': 2507.22, 'end': 2514.3399999999997, 'text': ' Now one of the things which we said was one of the advantages of one of the problems with', 'tokens': [51320, 823, 472, 295, 264, 721, 597, 321, 848, 390, 472, 295, 264, 14906, 295, 472, 295, 264, 2740, 365, 51676], 'temperature': 0.0, 'avg_logprob': -0.1445530298593882, 'compression_ratio': 1.675531914893617, 'no_speech_prob': 0.014921379275619984}, {'id': 390, 'seek': 251434, 'start': 2514.42, 'end': 2520.86, 'text': ' static libraries was that if there is a bug in static library once it is fixed you have', 'tokens': [50368, 13437, 15148, 390, 300, 498, 456, 307, 257, 7426, 294, 13437, 6405, 1564, 309, 307, 6806, 291, 362, 50690], 'temperature': 0.0, 'avg_logprob': -0.14745630869051304, 'compression_ratio': 1.621212121212121, 'no_speech_prob': 0.023669710382819176}, {'id': 391, 'seek': 251434, 'start': 2520.86, 'end': 2527.98, 'text': ' to tell all of your customers to recompile and relink their application.', 'tokens': [50690, 281, 980, 439, 295, 428, 4581, 281, 48000, 794, 293, 1039, 475, 641, 3861, 13, 51046], 'temperature': 0.0, 'avg_logprob': -0.14745630869051304, 'compression_ratio': 1.621212121212121, 'no_speech_prob': 0.023669710382819176}, {'id': 392, 'seek': 251434, 'start': 2527.98, 'end': 2529.34, 'text': ' How does DSO solve this?', 'tokens': [51046, 1012, 775, 15816, 46, 5039, 341, 30, 51114], 'temperature': 0.0, 'avg_logprob': -0.14745630869051304, 'compression_ratio': 1.621212121212121, 'no_speech_prob': 0.023669710382819176}, {'id': 393, 'seek': 251434, 'start': 2529.34, 'end': 2532.6600000000003, 'text': ' So we said that DSO is going to solve this problem.', 'tokens': [51114, 407, 321, 848, 300, 15816, 46, 307, 516, 281, 5039, 341, 1154, 13, 51280], 'temperature': 0.0, 'avg_logprob': -0.14745630869051304, 'compression_ratio': 1.621212121212121, 'no_speech_prob': 0.023669710382819176}, {'id': 394, 'seek': 251434, 'start': 2532.6600000000003, 'end': 2538.02, 'text': ' But so far whatever we have seen does not solve that problem because what we so far', 'tokens': [51280, 583, 370, 1400, 2035, 321, 362, 1612, 775, 406, 5039, 300, 1154, 570, 437, 321, 370, 1400, 51548], 'temperature': 0.0, 'avg_logprob': -0.14745630869051304, 'compression_ratio': 1.621212121212121, 'no_speech_prob': 0.023669710382819176}, {'id': 395, 'seek': 253802, 'start': 2538.02, 'end': 2544.7, 'text': ' learned is just how to load DSO that does not say how to actually distribute a bug fixed', 'tokens': [50364, 3264, 307, 445, 577, 281, 3677, 15816, 46, 300, 775, 406, 584, 577, 281, 767, 20594, 257, 7426, 6806, 50698], 'temperature': 0.0, 'avg_logprob': -0.28066990826580973, 'compression_ratio': 1.4835164835164836, 'no_speech_prob': 0.06941024959087372}, {'id': 396, 'seek': 253802, 'start': 2544.7, 'end': 2545.7, 'text': ' DSO.', 'tokens': [50698, 15816, 46, 13, 50748], 'temperature': 0.0, 'avg_logprob': -0.28066990826580973, 'compression_ratio': 1.4835164835164836, 'no_speech_prob': 0.06941024959087372}, {'id': 397, 'seek': 253802, 'start': 2545.7, 'end': 2549.62, 'text': ' And how does it ensure that client does not have to change?', 'tokens': [50748, 400, 577, 775, 309, 5586, 300, 6423, 775, 406, 362, 281, 1319, 30, 50944], 'temperature': 0.0, 'avg_logprob': -0.28066990826580973, 'compression_ratio': 1.4835164835164836, 'no_speech_prob': 0.06941024959087372}, {'id': 398, 'seek': 253802, 'start': 2549.62, 'end': 2552.62, 'text': ' Correct.', 'tokens': [50944, 12753, 13, 51094], 'temperature': 0.0, 'avg_logprob': -0.28066990826580973, 'compression_ratio': 1.4835164835164836, 'no_speech_prob': 0.06941024959087372}, {'id': 399, 'seek': 253802, 'start': 2552.62, 'end': 2557.42, 'text': ' So that would do it.', 'tokens': [51094, 407, 300, 576, 360, 309, 13, 51334], 'temperature': 0.0, 'avg_logprob': -0.28066990826580973, 'compression_ratio': 1.4835164835164836, 'no_speech_prob': 0.06941024959087372}, {'id': 400, 'seek': 253802, 'start': 2557.42, 'end': 2565.82, 'text': ' The problem which happens is there are cases where so when you fix something so let us', 'tokens': [51334, 440, 1154, 597, 2314, 307, 456, 366, 3331, 689, 370, 562, 291, 3191, 746, 370, 718, 505, 51754], 'temperature': 0.0, 'avg_logprob': -0.28066990826580973, 'compression_ratio': 1.4835164835164836, 'no_speech_prob': 0.06941024959087372}, {'id': 401, 'seek': 256582, 'start': 2565.82, 'end': 2570.98, 'text': ' say you have mylib.so.', 'tokens': [50364, 584, 291, 362, 452, 38270, 13, 539, 13, 50622], 'temperature': 0.0, 'avg_logprob': -0.17470810460109337, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.044505491852760315}, {'id': 402, 'seek': 256582, 'start': 2570.98, 'end': 2577.38, 'text': ' So what will happen is mylib.so someone has mylib.so then how do you know whether it is', 'tokens': [50622, 407, 437, 486, 1051, 307, 452, 38270, 13, 539, 1580, 575, 452, 38270, 13, 539, 550, 577, 360, 291, 458, 1968, 309, 307, 50942], 'temperature': 0.0, 'avg_logprob': -0.17470810460109337, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.044505491852760315}, {'id': 403, 'seek': 256582, 'start': 2577.38, 'end': 2578.38, 'text': ' fixed or not?', 'tokens': [50942, 6806, 420, 406, 30, 50992], 'temperature': 0.0, 'avg_logprob': -0.17470810460109337, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.044505491852760315}, {'id': 404, 'seek': 256582, 'start': 2578.38, 'end': 2583.54, 'text': ' So you want to version your SO saying this is version 1, this is version 2, this is version', 'tokens': [50992, 407, 291, 528, 281, 3037, 428, 10621, 1566, 341, 307, 3037, 502, 11, 341, 307, 3037, 568, 11, 341, 307, 3037, 51250], 'temperature': 0.0, 'avg_logprob': -0.17470810460109337, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.044505491852760315}, {'id': 405, 'seek': 256582, 'start': 2583.54, 'end': 2589.1800000000003, 'text': ' 3 and you can tell your customer please use version 3 to get this bug fixed.', 'tokens': [51250, 805, 293, 291, 393, 980, 428, 5474, 1767, 764, 3037, 805, 281, 483, 341, 7426, 6806, 13, 51532], 'temperature': 0.0, 'avg_logprob': -0.17470810460109337, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.044505491852760315}, {'id': 406, 'seek': 256582, 'start': 2589.1800000000003, 'end': 2593.46, 'text': ' So you need something to say that this is the version of mySO.', 'tokens': [51532, 407, 291, 643, 746, 281, 584, 300, 341, 307, 264, 3037, 295, 452, 17188, 13, 51746], 'temperature': 0.0, 'avg_logprob': -0.17470810460109337, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.044505491852760315}, {'id': 407, 'seek': 259346, 'start': 2593.46, 'end': 2600.94, 'text': ' So what happens is each DSO has something called as a SO name and a real name.', 'tokens': [50364, 407, 437, 2314, 307, 1184, 15816, 46, 575, 746, 1219, 382, 257, 10621, 1315, 293, 257, 957, 1315, 13, 50738], 'temperature': 0.0, 'avg_logprob': -0.0928513507048289, 'compression_ratio': 1.7, 'no_speech_prob': 0.14776182174682617}, {'id': 408, 'seek': 259346, 'start': 2600.94, 'end': 2605.46, 'text': ' So SO name is what is actually used by the linker.', 'tokens': [50738, 407, 10621, 1315, 307, 437, 307, 767, 1143, 538, 264, 2113, 260, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.0928513507048289, 'compression_ratio': 1.7, 'no_speech_prob': 0.14776182174682617}, {'id': 409, 'seek': 259346, 'start': 2605.46, 'end': 2610.46, 'text': ' So whenever I say libmy.so this is SO name.', 'tokens': [50964, 407, 5699, 286, 584, 22854, 2226, 13, 539, 341, 307, 10621, 1315, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.0928513507048289, 'compression_ratio': 1.7, 'no_speech_prob': 0.14776182174682617}, {'id': 410, 'seek': 259346, 'start': 2610.46, 'end': 2615.18, 'text': ' So whenever linker wants to load a library it will look at the SO name.', 'tokens': [51214, 407, 5699, 2113, 260, 2738, 281, 3677, 257, 6405, 309, 486, 574, 412, 264, 10621, 1315, 13, 51450], 'temperature': 0.0, 'avg_logprob': -0.0928513507048289, 'compression_ratio': 1.7, 'no_speech_prob': 0.14776182174682617}, {'id': 411, 'seek': 259346, 'start': 2615.18, 'end': 2620.46, 'text': ' But the physical name of the file which is stored in the file system may not be actually', 'tokens': [51450, 583, 264, 4001, 1315, 295, 264, 3991, 597, 307, 12187, 294, 264, 3991, 1185, 815, 406, 312, 767, 51714], 'temperature': 0.0, 'avg_logprob': -0.0928513507048289, 'compression_ratio': 1.7, 'no_speech_prob': 0.14776182174682617}, {'id': 412, 'seek': 259346, 'start': 2620.46, 'end': 2621.46, 'text': ' that.', 'tokens': [51714, 300, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.0928513507048289, 'compression_ratio': 1.7, 'no_speech_prob': 0.14776182174682617}, {'id': 413, 'seek': 262146, 'start': 2621.46, 'end': 2629.02, 'text': ' It could actually be libmy.so.something.', 'tokens': [50364, 467, 727, 767, 312, 22854, 2226, 13, 539, 13, 31681, 13, 50742], 'temperature': 0.0, 'avg_logprob': -0.14616304828274634, 'compression_ratio': 1.4967741935483871, 'no_speech_prob': 0.08249231427907944}, {'id': 414, 'seek': 262146, 'start': 2629.02, 'end': 2635.02, 'text': ' So typically you will always see every SO file has dot some numbers.', 'tokens': [50742, 407, 5850, 291, 486, 1009, 536, 633, 10621, 3991, 575, 5893, 512, 3547, 13, 51042], 'temperature': 0.0, 'avg_logprob': -0.14616304828274634, 'compression_ratio': 1.4967741935483871, 'no_speech_prob': 0.08249231427907944}, {'id': 415, 'seek': 262146, 'start': 2635.02, 'end': 2641.36, 'text': ' So those are the actual names of those files but that is not the SO name which is actually', 'tokens': [51042, 407, 729, 366, 264, 3539, 5288, 295, 729, 7098, 457, 300, 307, 406, 264, 10621, 1315, 597, 307, 767, 51359], 'temperature': 0.0, 'avg_logprob': -0.14616304828274634, 'compression_ratio': 1.4967741935483871, 'no_speech_prob': 0.08249231427907944}, {'id': 416, 'seek': 262146, 'start': 2641.36, 'end': 2645.54, 'text': ' used by the linker for loading.', 'tokens': [51359, 1143, 538, 264, 2113, 260, 337, 15114, 13, 51568], 'temperature': 0.0, 'avg_logprob': -0.14616304828274634, 'compression_ratio': 1.4967741935483871, 'no_speech_prob': 0.08249231427907944}, {'id': 417, 'seek': 264554, 'start': 2645.54, 'end': 2651.18, 'text': ' And what typically you do is you create a symbolic link between the SO name file to', 'tokens': [50364, 400, 437, 5850, 291, 360, 307, 291, 1884, 257, 25755, 2113, 1296, 264, 10621, 1315, 3991, 281, 50646], 'temperature': 0.0, 'avg_logprob': -0.2001980428826319, 'compression_ratio': 1.6358381502890174, 'no_speech_prob': 0.14743618667125702}, {'id': 418, 'seek': 264554, 'start': 2651.18, 'end': 2653.38, 'text': ' the real file.', 'tokens': [50646, 264, 957, 3991, 13, 50756], 'temperature': 0.0, 'avg_logprob': -0.2001980428826319, 'compression_ratio': 1.6358381502890174, 'no_speech_prob': 0.14743618667125702}, {'id': 419, 'seek': 264554, 'start': 2653.38, 'end': 2660.5, 'text': ' So what allows this you to do is programs the client code whenever it needs to say that', 'tokens': [50756, 407, 437, 4045, 341, 291, 281, 360, 307, 4268, 264, 6423, 3089, 5699, 309, 2203, 281, 584, 300, 51112], 'temperature': 0.0, 'avg_logprob': -0.2001980428826319, 'compression_ratio': 1.6358381502890174, 'no_speech_prob': 0.14743618667125702}, {'id': 420, 'seek': 264554, 'start': 2660.5, 'end': 2664.66, 'text': ' I want this library they always refer to the SO name.', 'tokens': [51112, 286, 528, 341, 6405, 436, 1009, 2864, 281, 264, 10621, 1315, 13, 51320], 'temperature': 0.0, 'avg_logprob': -0.2001980428826319, 'compression_ratio': 1.6358381502890174, 'no_speech_prob': 0.14743618667125702}, {'id': 421, 'seek': 264554, 'start': 2664.66, 'end': 2667.66, 'text': ' They do not refer to the actual file name.', 'tokens': [51320, 814, 360, 406, 2864, 281, 264, 3539, 3991, 1315, 13, 51470], 'temperature': 0.0, 'avg_logprob': -0.2001980428826319, 'compression_ratio': 1.6358381502890174, 'no_speech_prob': 0.14743618667125702}, {'id': 422, 'seek': 266766, 'start': 2667.74, 'end': 2675.8599999999997, 'text': ' And you as an author of the library can ship a new version and client can create a SIM', 'tokens': [50368, 400, 291, 382, 364, 3793, 295, 264, 6405, 393, 5374, 257, 777, 3037, 293, 6423, 393, 1884, 257, 24738, 50774], 'temperature': 0.0, 'avg_logprob': -0.23581285325307694, 'compression_ratio': 1.4050632911392404, 'no_speech_prob': 0.1514197587966919}, {'id': 423, 'seek': 266766, 'start': 2675.8599999999997, 'end': 2679.42, 'text': ' link to that and it will start working.', 'tokens': [50774, 2113, 281, 300, 293, 309, 486, 722, 1364, 13, 50952], 'temperature': 0.0, 'avg_logprob': -0.23581285325307694, 'compression_ratio': 1.4050632911392404, 'no_speech_prob': 0.1514197587966919}, {'id': 424, 'seek': 266766, 'start': 2679.42, 'end': 2681.66, 'text': ' Does that make sense?', 'tokens': [50952, 4402, 300, 652, 2020, 30, 51064], 'temperature': 0.0, 'avg_logprob': -0.23581285325307694, 'compression_ratio': 1.4050632911392404, 'no_speech_prob': 0.1514197587966919}, {'id': 425, 'seek': 266766, 'start': 2681.66, 'end': 2689.94, 'text': ' So just to show you so if you look at ldd a dot out which we were seeing.', 'tokens': [51064, 407, 445, 281, 855, 291, 370, 498, 291, 574, 412, 287, 24810, 257, 5893, 484, 597, 321, 645, 2577, 13, 51478], 'temperature': 0.0, 'avg_logprob': -0.23581285325307694, 'compression_ratio': 1.4050632911392404, 'no_speech_prob': 0.1514197587966919}, {'id': 426, 'seek': 268994, 'start': 2689.94, 'end': 2699.34, 'text': ' So this libvdso.so this you can think of it as the SO name.', 'tokens': [50364, 407, 341, 22854, 85, 67, 539, 13, 539, 341, 291, 393, 519, 295, 309, 382, 264, 10621, 1315, 13, 50834], 'temperature': 0.0, 'avg_logprob': -0.1592622995376587, 'compression_ratio': 1.6283783783783783, 'no_speech_prob': 0.0020457690116018057}, {'id': 427, 'seek': 268994, 'start': 2699.34, 'end': 2706.42, 'text': ' The dot one is actually the so if you look at the actual file the actual file name is', 'tokens': [50834, 440, 5893, 472, 307, 767, 264, 370, 498, 291, 574, 412, 264, 3539, 3991, 264, 3539, 3991, 1315, 307, 51188], 'temperature': 0.0, 'avg_logprob': -0.1592622995376587, 'compression_ratio': 1.6283783783783783, 'no_speech_prob': 0.0020457690116018057}, {'id': 428, 'seek': 268994, 'start': 2706.42, 'end': 2707.62, 'text': ' this.', 'tokens': [51188, 341, 13, 51248], 'temperature': 0.0, 'avg_logprob': -0.1592622995376587, 'compression_ratio': 1.6283783783783783, 'no_speech_prob': 0.0020457690116018057}, {'id': 429, 'seek': 268994, 'start': 2707.62, 'end': 2715.2200000000003, 'text': ' But what loader when it needs to load it only uses the SO name which is up to this point.', 'tokens': [51248, 583, 437, 3677, 260, 562, 309, 2203, 281, 3677, 309, 787, 4960, 264, 10621, 1315, 597, 307, 493, 281, 341, 935, 13, 51628], 'temperature': 0.0, 'avg_logprob': -0.1592622995376587, 'compression_ratio': 1.6283783783783783, 'no_speech_prob': 0.0020457690116018057}, {'id': 430, 'seek': 271522, 'start': 2715.22, 'end': 2720.66, 'text': ' So if I get a new version with dot two I will simply put it and the same code without any', 'tokens': [50364, 407, 498, 286, 483, 257, 777, 3037, 365, 5893, 732, 286, 486, 2935, 829, 309, 293, 264, 912, 3089, 1553, 604, 50636], 'temperature': 0.0, 'avg_logprob': -0.16299027911687303, 'compression_ratio': 1.4313725490196079, 'no_speech_prob': 0.0011325544910505414}, {'id': 431, 'seek': 271522, 'start': 2720.66, 'end': 2725.8199999999997, 'text': ' changes will start using that file.', 'tokens': [50636, 2962, 486, 722, 1228, 300, 3991, 13, 50894], 'temperature': 0.0, 'avg_logprob': -0.16299027911687303, 'compression_ratio': 1.4313725490196079, 'no_speech_prob': 0.0011325544910505414}, {'id': 432, 'seek': 271522, 'start': 2725.8199999999997, 'end': 2730.56, 'text': ' Does that make sense?', 'tokens': [50894, 4402, 300, 652, 2020, 30, 51131], 'temperature': 0.0, 'avg_logprob': -0.16299027911687303, 'compression_ratio': 1.4313725490196079, 'no_speech_prob': 0.0011325544910505414}, {'id': 433, 'seek': 271522, 'start': 2730.56, 'end': 2739.3399999999997, 'text': ' So if you look at redelf it actually shows what all libraries you need.', 'tokens': [51131, 407, 498, 291, 574, 412, 2182, 1967, 309, 767, 3110, 437, 439, 15148, 291, 643, 13, 51570], 'temperature': 0.0, 'avg_logprob': -0.16299027911687303, 'compression_ratio': 1.4313725490196079, 'no_speech_prob': 0.0011325544910505414}, {'id': 434, 'seek': 273934, 'start': 2739.38, 'end': 2744.86, 'text': ' So if I do redelf dash da dot out it shows all the libraries which are needed by this', 'tokens': [50366, 407, 498, 286, 360, 2182, 1967, 8240, 1120, 5893, 484, 309, 3110, 439, 264, 15148, 597, 366, 2978, 538, 341, 50640], 'temperature': 0.0, 'avg_logprob': -0.11675808429718018, 'compression_ratio': 1.930817610062893, 'no_speech_prob': 0.007568985223770142}, {'id': 435, 'seek': 273934, 'start': 2744.86, 'end': 2749.3, 'text': ' program.', 'tokens': [50640, 1461, 13, 50862], 'temperature': 0.0, 'avg_logprob': -0.11675808429718018, 'compression_ratio': 1.930817610062893, 'no_speech_prob': 0.007568985223770142}, {'id': 436, 'seek': 273934, 'start': 2749.3, 'end': 2757.1000000000004, 'text': ' So if I do redelf dash da dot out it shows bunch of things and some of the entries you', 'tokens': [50862, 407, 498, 286, 360, 2182, 1967, 8240, 1120, 5893, 484, 309, 3110, 3840, 295, 721, 293, 512, 295, 264, 23041, 291, 51252], 'temperature': 0.0, 'avg_logprob': -0.11675808429718018, 'compression_ratio': 1.930817610062893, 'no_speech_prob': 0.007568985223770142}, {'id': 437, 'seek': 273934, 'start': 2757.1000000000004, 'end': 2760.44, 'text': ' can see are something called as needed.', 'tokens': [51252, 393, 536, 366, 746, 1219, 382, 2978, 13, 51419], 'temperature': 0.0, 'avg_logprob': -0.11675808429718018, 'compression_ratio': 1.930817610062893, 'no_speech_prob': 0.007568985223770142}, {'id': 438, 'seek': 273934, 'start': 2760.44, 'end': 2767.2000000000003, 'text': ' So needed are the set of shared libraries which are needed for this program to start.', 'tokens': [51419, 407, 2978, 366, 264, 992, 295, 5507, 15148, 597, 366, 2978, 337, 341, 1461, 281, 722, 13, 51757], 'temperature': 0.0, 'avg_logprob': -0.11675808429718018, 'compression_ratio': 1.930817610062893, 'no_speech_prob': 0.007568985223770142}, {'id': 439, 'seek': 276720, 'start': 2767.2, 'end': 2773.64, 'text': ' So these are the ones which will actually be loaded by the loader as part of the application', 'tokens': [50364, 407, 613, 366, 264, 2306, 597, 486, 767, 312, 13210, 538, 264, 3677, 260, 382, 644, 295, 264, 3861, 50686], 'temperature': 0.0, 'avg_logprob': -0.15079698669776487, 'compression_ratio': 1.7, 'no_speech_prob': 0.0006256841588765383}, {'id': 440, 'seek': 276720, 'start': 2773.64, 'end': 2775.04, 'text': ' startup type.', 'tokens': [50686, 18578, 2010, 13, 50756], 'temperature': 0.0, 'avg_logprob': -0.15079698669776487, 'compression_ratio': 1.7, 'no_speech_prob': 0.0006256841588765383}, {'id': 441, 'seek': 276720, 'start': 2775.04, 'end': 2779.2799999999997, 'text': ' So when the application starts the loader is going to look at what all is marked as', 'tokens': [50756, 407, 562, 264, 3861, 3719, 264, 3677, 260, 307, 516, 281, 574, 412, 437, 439, 307, 12658, 382, 50968], 'temperature': 0.0, 'avg_logprob': -0.15079698669776487, 'compression_ratio': 1.7, 'no_speech_prob': 0.0006256841588765383}, {'id': 442, 'seek': 276720, 'start': 2779.2799999999997, 'end': 2785.6, 'text': ' needed in this executable and it is going to load all those shared libraries.', 'tokens': [50968, 2978, 294, 341, 7568, 712, 293, 309, 307, 516, 281, 3677, 439, 729, 5507, 15148, 13, 51284], 'temperature': 0.0, 'avg_logprob': -0.15079698669776487, 'compression_ratio': 1.7, 'no_speech_prob': 0.0006256841588765383}, {'id': 443, 'seek': 276720, 'start': 2785.6, 'end': 2787.52, 'text': ' Does that make sense?', 'tokens': [51284, 4402, 300, 652, 2020, 30, 51380], 'temperature': 0.0, 'avg_logprob': -0.15079698669776487, 'compression_ratio': 1.7, 'no_speech_prob': 0.0006256841588765383}, {'id': 444, 'seek': 276720, 'start': 2787.52, 'end': 2793.12, 'text': ' Now we had seen something like what happens in the loader earlier.', 'tokens': [51380, 823, 321, 632, 1612, 746, 411, 437, 2314, 294, 264, 3677, 260, 3071, 13, 51660], 'temperature': 0.0, 'avg_logprob': -0.15079698669776487, 'compression_ratio': 1.7, 'no_speech_prob': 0.0006256841588765383}, {'id': 445, 'seek': 279312, 'start': 2793.12, 'end': 2798.08, 'text': ' There was start which called libc start and ultimately called main.', 'tokens': [50364, 821, 390, 722, 597, 1219, 22854, 66, 722, 293, 6284, 1219, 2135, 13, 50612], 'temperature': 0.0, 'avg_logprob': -0.19745473066965738, 'compression_ratio': 1.8, 'no_speech_prob': 0.011310895904898643}, {'id': 446, 'seek': 279312, 'start': 2798.08, 'end': 2804.04, 'text': ' Now that we have shared libraries also learned how does the thing happens.', 'tokens': [50612, 823, 300, 321, 362, 5507, 15148, 611, 3264, 577, 775, 264, 551, 2314, 13, 50910], 'temperature': 0.0, 'avg_logprob': -0.19745473066965738, 'compression_ratio': 1.8, 'no_speech_prob': 0.011310895904898643}, {'id': 447, 'seek': 279312, 'start': 2804.04, 'end': 2809.64, 'text': ' So what needs to happen is the loader will look at all the segments which were marked', 'tokens': [50910, 407, 437, 2203, 281, 1051, 307, 264, 3677, 260, 486, 574, 412, 439, 264, 19904, 597, 645, 12658, 51190], 'temperature': 0.0, 'avg_logprob': -0.19745473066965738, 'compression_ratio': 1.8, 'no_speech_prob': 0.011310895904898643}, {'id': 448, 'seek': 279312, 'start': 2809.64, 'end': 2810.64, 'text': ' as pt load.', 'tokens': [51190, 382, 280, 83, 3677, 13, 51240], 'temperature': 0.0, 'avg_logprob': -0.19745473066965738, 'compression_ratio': 1.8, 'no_speech_prob': 0.011310895904898643}, {'id': 449, 'seek': 279312, 'start': 2810.64, 'end': 2816.7, 'text': ' Pt load were the segments which were present in the executable which needed to be mapped', 'tokens': [51240, 430, 83, 3677, 645, 264, 19904, 597, 645, 1974, 294, 264, 7568, 712, 597, 2978, 281, 312, 33318, 51543], 'temperature': 0.0, 'avg_logprob': -0.19745473066965738, 'compression_ratio': 1.8, 'no_speech_prob': 0.011310895904898643}, {'id': 450, 'seek': 279312, 'start': 2816.7, 'end': 2821.24, 'text': ' into the memory map which was code segment data segment and so on.', 'tokens': [51543, 666, 264, 4675, 4471, 597, 390, 3089, 9469, 1412, 9469, 293, 370, 322, 13, 51770], 'temperature': 0.0, 'avg_logprob': -0.19745473066965738, 'compression_ratio': 1.8, 'no_speech_prob': 0.011310895904898643}, {'id': 451, 'seek': 282124, 'start': 2821.24, 'end': 2825.64, 'text': ' So loader looks at all the segments which were pt load and loads them.', 'tokens': [50364, 407, 3677, 260, 1542, 412, 439, 264, 19904, 597, 645, 280, 83, 3677, 293, 12668, 552, 13, 50584], 'temperature': 0.0, 'avg_logprob': -0.14803866089367476, 'compression_ratio': 1.5266666666666666, 'no_speech_prob': 0.017958717420697212}, {'id': 452, 'seek': 282124, 'start': 2825.64, 'end': 2830.08, 'text': ' There is a field in the elf called as interrupt.', 'tokens': [50584, 821, 307, 257, 2519, 294, 264, 35565, 1219, 382, 12729, 13, 50806], 'temperature': 0.0, 'avg_logprob': -0.14803866089367476, 'compression_ratio': 1.5266666666666666, 'no_speech_prob': 0.017958717420697212}, {'id': 453, 'seek': 282124, 'start': 2830.08, 'end': 2833.2, 'text': ' You can see that here.', 'tokens': [50806, 509, 393, 536, 300, 510, 13, 50962], 'temperature': 0.0, 'avg_logprob': -0.14803866089367476, 'compression_ratio': 1.5266666666666666, 'no_speech_prob': 0.017958717420697212}, {'id': 454, 'seek': 282124, 'start': 2833.2, 'end': 2847.8399999999997, 'text': ' So if I print the program headers for a file I see something like this interrupt which', 'tokens': [50962, 407, 498, 286, 4482, 264, 1461, 45101, 337, 257, 3991, 286, 536, 746, 411, 341, 12729, 597, 51694], 'temperature': 0.0, 'avg_logprob': -0.14803866089367476, 'compression_ratio': 1.5266666666666666, 'no_speech_prob': 0.017958717420697212}, {'id': 455, 'seek': 284784, 'start': 2848.84, 'end': 2855.48, 'text': ' the program interpreter ld linux x86 64 something something.', 'tokens': [50414, 264, 1461, 34132, 287, 67, 22896, 2449, 2031, 22193, 12145, 746, 746, 13, 50746], 'temperature': 0.0, 'avg_logprob': -0.22249532124352833, 'compression_ratio': 1.6357615894039734, 'no_speech_prob': 0.5614181756973267}, {'id': 456, 'seek': 284784, 'start': 2855.48, 'end': 2860.96, 'text': ' So this is actually the dynamic linker.', 'tokens': [50746, 407, 341, 307, 767, 264, 8546, 2113, 260, 13, 51020], 'temperature': 0.0, 'avg_logprob': -0.22249532124352833, 'compression_ratio': 1.6357615894039734, 'no_speech_prob': 0.5614181756973267}, {'id': 457, 'seek': 284784, 'start': 2860.96, 'end': 2865.48, 'text': ' So this SO file actually has code for dynamic linker.', 'tokens': [51020, 407, 341, 10621, 3991, 767, 575, 3089, 337, 8546, 2113, 260, 13, 51246], 'temperature': 0.0, 'avg_logprob': -0.22249532124352833, 'compression_ratio': 1.6357615894039734, 'no_speech_prob': 0.5614181756973267}, {'id': 458, 'seek': 284784, 'start': 2865.48, 'end': 2872.9, 'text': ' So what this is saying to the loader is once you are starting to execute this program please', 'tokens': [51246, 407, 437, 341, 307, 1566, 281, 264, 3677, 260, 307, 1564, 291, 366, 2891, 281, 14483, 341, 1461, 1767, 51617], 'temperature': 0.0, 'avg_logprob': -0.22249532124352833, 'compression_ratio': 1.6357615894039734, 'no_speech_prob': 0.5614181756973267}, {'id': 459, 'seek': 287290, 'start': 2872.9, 'end': 2879.4, 'text': ' call this guy to do the further processing.', 'tokens': [50364, 818, 341, 2146, 281, 360, 264, 3052, 9007, 13, 50689], 'temperature': 0.0, 'avg_logprob': -0.13272071211305383, 'compression_ratio': 1.6352941176470588, 'no_speech_prob': 0.02715199626982212}, {'id': 460, 'seek': 287290, 'start': 2879.4, 'end': 2886.94, 'text': ' So what loader will simply do is once it starts executing the binary it will call and once', 'tokens': [50689, 407, 437, 3677, 260, 486, 2935, 360, 307, 1564, 309, 3719, 32368, 264, 17434, 309, 486, 818, 293, 1564, 51066], 'temperature': 0.0, 'avg_logprob': -0.13272071211305383, 'compression_ratio': 1.6352941176470588, 'no_speech_prob': 0.02715199626982212}, {'id': 461, 'seek': 287290, 'start': 2886.94, 'end': 2893.76, 'text': ' it is done mapping the pt load segments it will call this guy ld linux or whatever we', 'tokens': [51066, 309, 307, 1096, 18350, 264, 280, 83, 3677, 19904, 309, 486, 818, 341, 2146, 287, 67, 22896, 2449, 420, 2035, 321, 51407], 'temperature': 0.0, 'avg_logprob': -0.13272071211305383, 'compression_ratio': 1.6352941176470588, 'no_speech_prob': 0.02715199626982212}, {'id': 462, 'seek': 287290, 'start': 2893.76, 'end': 2898.42, 'text': ' saw in the 64 bit variant and this is the dynamic linker.', 'tokens': [51407, 1866, 294, 264, 12145, 857, 17501, 293, 341, 307, 264, 8546, 2113, 260, 13, 51640], 'temperature': 0.0, 'avg_logprob': -0.13272071211305383, 'compression_ratio': 1.6352941176470588, 'no_speech_prob': 0.02715199626982212}, {'id': 463, 'seek': 289842, 'start': 2898.42, 'end': 2906.5, 'text': ' Dynamic linker is going to look at all the things which were marked as dded which I showed', 'tokens': [50364, 45440, 2113, 260, 307, 516, 281, 574, 412, 439, 264, 721, 597, 645, 12658, 382, 274, 9207, 597, 286, 4712, 50768], 'temperature': 0.0, 'avg_logprob': -0.17396569569905598, 'compression_ratio': 1.5576923076923077, 'no_speech_prob': 0.134577676653862}, {'id': 464, 'seek': 289842, 'start': 2906.5, 'end': 2915.04, 'text': ' you in the previous slide from the executable and start loading all those libraries.', 'tokens': [50768, 291, 294, 264, 3894, 4137, 490, 264, 7568, 712, 293, 722, 15114, 439, 729, 15148, 13, 51195], 'temperature': 0.0, 'avg_logprob': -0.17396569569905598, 'compression_ratio': 1.5576923076923077, 'no_speech_prob': 0.134577676653862}, {'id': 465, 'seek': 289842, 'start': 2915.04, 'end': 2922.7200000000003, 'text': ' And then kernel will essentially get the exec system call and will start transferring control', 'tokens': [51195, 400, 550, 28256, 486, 4476, 483, 264, 454, 3045, 1185, 818, 293, 486, 722, 31437, 1969, 51579], 'temperature': 0.0, 'avg_logprob': -0.17396569569905598, 'compression_ratio': 1.5576923076923077, 'no_speech_prob': 0.134577676653862}, {'id': 466, 'seek': 289842, 'start': 2922.7200000000003, 'end': 2925.96, 'text': ' to the actual program execution.', 'tokens': [51579, 281, 264, 3539, 1461, 15058, 13, 51741], 'temperature': 0.0, 'avg_logprob': -0.17396569569905598, 'compression_ratio': 1.5576923076923077, 'no_speech_prob': 0.134577676653862}, {'id': 467, 'seek': 289842, 'start': 2925.96, 'end': 2927.28, 'text': ' Does that make sense?', 'tokens': [51741, 4402, 300, 652, 2020, 30, 51807], 'temperature': 0.0, 'avg_logprob': -0.17396569569905598, 'compression_ratio': 1.5576923076923077, 'no_speech_prob': 0.134577676653862}, {'id': 468, 'seek': 292728, 'start': 2927.28, 'end': 2933.86, 'text': ' So what happened is essentially when the program starts running in the kernel, kernel is first', 'tokens': [50364, 407, 437, 2011, 307, 4476, 562, 264, 1461, 3719, 2614, 294, 264, 28256, 11, 28256, 307, 700, 50693], 'temperature': 0.0, 'avg_logprob': -0.1200180248338349, 'compression_ratio': 1.7892561983471074, 'no_speech_prob': 0.004597495775669813}, {'id': 469, 'seek': 292728, 'start': 2933.86, 'end': 2937.82, 'text': ' going to look at there is something called as interrupt specified so I will call that', 'tokens': [50693, 516, 281, 574, 412, 456, 307, 746, 1219, 382, 12729, 22206, 370, 286, 486, 818, 300, 50891], 'temperature': 0.0, 'avg_logprob': -0.1200180248338349, 'compression_ratio': 1.7892561983471074, 'no_speech_prob': 0.004597495775669813}, {'id': 470, 'seek': 292728, 'start': 2937.82, 'end': 2940.2200000000003, 'text': ' guy.', 'tokens': [50891, 2146, 13, 51011], 'temperature': 0.0, 'avg_logprob': -0.1200180248338349, 'compression_ratio': 1.7892561983471074, 'no_speech_prob': 0.004597495775669813}, {'id': 471, 'seek': 292728, 'start': 2940.2200000000003, 'end': 2946.34, 'text': ' That guy which is the dynamic linker is going to call is going to look at whatever was marked', 'tokens': [51011, 663, 2146, 597, 307, 264, 8546, 2113, 260, 307, 516, 281, 818, 307, 516, 281, 574, 412, 2035, 390, 12658, 51317], 'temperature': 0.0, 'avg_logprob': -0.1200180248338349, 'compression_ratio': 1.7892561983471074, 'no_speech_prob': 0.004597495775669813}, {'id': 472, 'seek': 292728, 'start': 2946.34, 'end': 2951.46, 'text': ' as needed in the executable and load all those shared libraries.', 'tokens': [51317, 382, 2978, 294, 264, 7568, 712, 293, 3677, 439, 729, 5507, 15148, 13, 51573], 'temperature': 0.0, 'avg_logprob': -0.1200180248338349, 'compression_ratio': 1.7892561983471074, 'no_speech_prob': 0.004597495775669813}, {'id': 473, 'seek': 292728, 'start': 2951.46, 'end': 2956.0600000000004, 'text': ' And then all the segments will be loaded from the program and then the program execution', 'tokens': [51573, 400, 550, 439, 264, 19904, 486, 312, 13210, 490, 264, 1461, 293, 550, 264, 1461, 15058, 51803], 'temperature': 0.0, 'avg_logprob': -0.1200180248338349, 'compression_ratio': 1.7892561983471074, 'no_speech_prob': 0.004597495775669813}, {'id': 474, 'seek': 295606, 'start': 2956.06, 'end': 2972.2799999999997, 'text': ' start will be starting from underscore start function.', 'tokens': [50364, 722, 486, 312, 2891, 490, 37556, 722, 2445, 13, 51175], 'temperature': 0.0, 'avg_logprob': -0.2706290994371687, 'compression_ratio': 1.2446808510638299, 'no_speech_prob': 0.9389709830284119}, {'id': 475, 'seek': 295606, 'start': 2972.2799999999997, 'end': 2983.2999999999997, 'text': ' No then you get that error that could not load shared library.', 'tokens': [51175, 883, 550, 291, 483, 300, 6713, 300, 727, 406, 3677, 5507, 6405, 13, 51726], 'temperature': 0.0, 'avg_logprob': -0.2706290994371687, 'compression_ratio': 1.2446808510638299, 'no_speech_prob': 0.9389709830284119}, {'id': 476, 'seek': 298330, 'start': 2983.3, 'end': 2989.46, 'text': ' So what will happen is so it you have to realize at what point that event happened.', 'tokens': [50364, 407, 437, 486, 1051, 307, 370, 309, 291, 362, 281, 4325, 412, 437, 935, 300, 2280, 2011, 13, 50672], 'temperature': 0.0, 'avg_logprob': -0.15742599964141846, 'compression_ratio': 1.6555555555555554, 'no_speech_prob': 0.4519130289554596}, {'id': 477, 'seek': 298330, 'start': 2989.46, 'end': 2994.52, 'text': " So let's say dynamic linker is looking at the needed list.", 'tokens': [50672, 407, 718, 311, 584, 8546, 2113, 260, 307, 1237, 412, 264, 2978, 1329, 13, 50925], 'temperature': 0.0, 'avg_logprob': -0.15742599964141846, 'compression_ratio': 1.6555555555555554, 'no_speech_prob': 0.4519130289554596}, {'id': 478, 'seek': 298330, 'start': 2994.52, 'end': 3001.1800000000003, 'text': " So when it looks at the first needed entry so let's say that was a.so it loaded that.", 'tokens': [50925, 407, 562, 309, 1542, 412, 264, 700, 2978, 8729, 370, 718, 311, 584, 300, 390, 257, 13, 539, 309, 13210, 300, 13, 51258], 'temperature': 0.0, 'avg_logprob': -0.15742599964141846, 'compression_ratio': 1.6555555555555554, 'no_speech_prob': 0.4519130289554596}, {'id': 479, 'seek': 298330, 'start': 3001.1800000000003, 'end': 3006.5, 'text': ' Now before it went to further you deleted b.so which was also needed.', 'tokens': [51258, 823, 949, 309, 1437, 281, 3052, 291, 22981, 272, 13, 539, 597, 390, 611, 2978, 13, 51524], 'temperature': 0.0, 'avg_logprob': -0.15742599964141846, 'compression_ratio': 1.6555555555555554, 'no_speech_prob': 0.4519130289554596}, {'id': 480, 'seek': 300650, 'start': 3006.5, 'end': 3013.44, 'text': ' So when linker actually goes to needed and b.so is not present it is going to cry out.', 'tokens': [50364, 407, 562, 2113, 260, 767, 1709, 281, 2978, 293, 272, 13, 539, 307, 406, 1974, 309, 307, 516, 281, 3305, 484, 13, 50711], 'temperature': 0.0, 'avg_logprob': -0.20999449352885402, 'compression_ratio': 1.6526315789473685, 'no_speech_prob': 0.24456816911697388}, {'id': 481, 'seek': 300650, 'start': 3013.44, 'end': 3020.74, 'text': " Once it is start loading and if it has loaded and then you delete then it also doesn't", 'tokens': [50711, 3443, 309, 307, 722, 15114, 293, 498, 309, 575, 13210, 293, 550, 291, 12097, 550, 309, 611, 1177, 380, 51076], 'temperature': 0.0, 'avg_logprob': -0.20999449352885402, 'compression_ratio': 1.6526315789473685, 'no_speech_prob': 0.24456816911697388}, {'id': 482, 'seek': 300650, 'start': 3020.74, 'end': 3021.74, 'text': ' matter.', 'tokens': [51076, 1871, 13, 51126], 'temperature': 0.0, 'avg_logprob': -0.20999449352885402, 'compression_ratio': 1.6526315789473685, 'no_speech_prob': 0.24456816911697388}, {'id': 483, 'seek': 300650, 'start': 3021.74, 'end': 3029.18, 'text': ' So the timing has to be precise where linker is not fully done loading yet and you deleted', 'tokens': [51126, 407, 264, 10822, 575, 281, 312, 13600, 689, 2113, 260, 307, 406, 4498, 1096, 15114, 1939, 293, 291, 22981, 51498], 'temperature': 0.0, 'avg_logprob': -0.20999449352885402, 'compression_ratio': 1.6526315789473685, 'no_speech_prob': 0.24456816911697388}, {'id': 484, 'seek': 300650, 'start': 3029.18, 'end': 3030.18, 'text': ' something.', 'tokens': [51498, 746, 13, 51548], 'temperature': 0.0, 'avg_logprob': -0.20999449352885402, 'compression_ratio': 1.6526315789473685, 'no_speech_prob': 0.24456816911697388}, {'id': 485, 'seek': 300650, 'start': 3030.18, 'end': 3031.18, 'text': " I don't know what will happen.", 'tokens': [51548, 286, 500, 380, 458, 437, 486, 1051, 13, 51598], 'temperature': 0.0, 'avg_logprob': -0.20999449352885402, 'compression_ratio': 1.6526315789473685, 'no_speech_prob': 0.24456816911697388}, {'id': 486, 'seek': 303118, 'start': 3031.18, 'end': 3047.54, 'text': ' Correct the entire.so will be loaded.', 'tokens': [50364, 12753, 264, 2302, 13, 539, 486, 312, 13210, 13, 51182], 'temperature': 0.0, 'avg_logprob': -0.17068474381058305, 'compression_ratio': 1.50354609929078, 'no_speech_prob': 0.1992243081331253}, {'id': 487, 'seek': 303118, 'start': 3047.54, 'end': 3053.98, 'text': ' If it was already in physical memory you still need to load it by load in this context mean', 'tokens': [51182, 759, 309, 390, 1217, 294, 4001, 4675, 291, 920, 643, 281, 3677, 309, 538, 3677, 294, 341, 4319, 914, 51504], 'temperature': 0.0, 'avg_logprob': -0.17068474381058305, 'compression_ratio': 1.50354609929078, 'no_speech_prob': 0.1992243081331253}, {'id': 488, 'seek': 303118, 'start': 3053.98, 'end': 3059.02, 'text': ' you have to set up the virtual addresses where it will be loaded to point to that.', 'tokens': [51504, 291, 362, 281, 992, 493, 264, 6374, 16862, 689, 309, 486, 312, 13210, 281, 935, 281, 300, 13, 51756], 'temperature': 0.0, 'avg_logprob': -0.17068474381058305, 'compression_ratio': 1.50354609929078, 'no_speech_prob': 0.1992243081331253}, {'id': 489, 'seek': 305902, 'start': 3059.86, 'end': 3064.02, 'text': ' You have to create physically more space into the RAM.', 'tokens': [50406, 509, 362, 281, 1884, 9762, 544, 1901, 666, 264, 14561, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.32229567473789433, 'compression_ratio': 1.5032679738562091, 'no_speech_prob': 0.7689014673233032}, {'id': 490, 'seek': 305902, 'start': 3064.02, 'end': 3071.2599999999998, 'text': ' It just means that you have to create mapping that these virtual addresses hold this portion', 'tokens': [50614, 467, 445, 1355, 300, 291, 362, 281, 1884, 18350, 300, 613, 6374, 16862, 1797, 341, 8044, 50976], 'temperature': 0.0, 'avg_logprob': -0.32229567473789433, 'compression_ratio': 1.5032679738562091, 'no_speech_prob': 0.7689014673233032}, {'id': 491, 'seek': 305902, 'start': 3071.2599999999998, 'end': 3076.98, 'text': ' of the.so physically it may be backed in this same copy which was already present.', 'tokens': [50976, 295, 264, 13, 539, 9762, 309, 815, 312, 20391, 294, 341, 912, 5055, 597, 390, 1217, 1974, 13, 51262], 'temperature': 0.0, 'avg_logprob': -0.32229567473789433, 'compression_ratio': 1.5032679738562091, 'no_speech_prob': 0.7689014673233032}, {'id': 492, 'seek': 307698, 'start': 3076.98, 'end': 3087.9, 'text': ' I will come to that.', 'tokens': [50364, 286, 486, 808, 281, 300, 13, 50910], 'temperature': 0.0, 'avg_logprob': -0.16543873151143393, 'compression_ratio': 1.3059701492537314, 'no_speech_prob': 0.03503252938389778}, {'id': 493, 'seek': 307698, 'start': 3087.9, 'end': 3089.46, 'text': ' But that is a good point.', 'tokens': [50910, 583, 300, 307, 257, 665, 935, 13, 50988], 'temperature': 0.0, 'avg_logprob': -0.16543873151143393, 'compression_ratio': 1.3059701492537314, 'no_speech_prob': 0.03503252938389778}, {'id': 494, 'seek': 307698, 'start': 3089.46, 'end': 3095.42, 'text': ' So now does everyone at least understood whatever we have covered so far.', 'tokens': [50988, 407, 586, 775, 1518, 412, 1935, 7320, 2035, 321, 362, 5343, 370, 1400, 13, 51286], 'temperature': 0.0, 'avg_logprob': -0.16543873151143393, 'compression_ratio': 1.3059701492537314, 'no_speech_prob': 0.03503252938389778}, {'id': 495, 'seek': 307698, 'start': 3095.42, 'end': 3101.76, 'text': " Now obviously you don't want to pay application start.", 'tokens': [51286, 823, 2745, 291, 500, 380, 528, 281, 1689, 3861, 722, 13, 51603], 'temperature': 0.0, 'avg_logprob': -0.16543873151143393, 'compression_ratio': 1.3059701492537314, 'no_speech_prob': 0.03503252938389778}, {'id': 496, 'seek': 310176, 'start': 3101.76, 'end': 3108.7200000000003, 'text': ' So for example if you are using printf or if you are using some shared library function', 'tokens': [50364, 407, 337, 1365, 498, 291, 366, 1228, 4482, 69, 420, 498, 291, 366, 1228, 512, 5507, 6405, 2445, 50712], 'temperature': 0.0, 'avg_logprob': -0.14803498321109348, 'compression_ratio': 1.6511627906976745, 'no_speech_prob': 0.02792319469153881}, {'id': 497, 'seek': 310176, 'start': 3108.7200000000003, 'end': 3111.2400000000002, 'text': ' only for very small amount of time.', 'tokens': [50712, 787, 337, 588, 1359, 2372, 295, 565, 13, 50838], 'temperature': 0.0, 'avg_logprob': -0.14803498321109348, 'compression_ratio': 1.6511627906976745, 'no_speech_prob': 0.02792319469153881}, {'id': 498, 'seek': 310176, 'start': 3111.2400000000002, 'end': 3118.1600000000003, 'text': ' Do you really want to pay for the entire load for the entire duration.', 'tokens': [50838, 1144, 291, 534, 528, 281, 1689, 337, 264, 2302, 3677, 337, 264, 2302, 16365, 13, 51184], 'temperature': 0.0, 'avg_logprob': -0.14803498321109348, 'compression_ratio': 1.6511627906976745, 'no_speech_prob': 0.02792319469153881}, {'id': 499, 'seek': 310176, 'start': 3118.1600000000003, 'end': 3126.36, 'text': ' So what happens is when you have loaded the d.so that was loaded by the loader or dynamic', 'tokens': [51184, 407, 437, 2314, 307, 562, 291, 362, 13210, 264, 274, 13, 539, 300, 390, 13210, 538, 264, 3677, 260, 420, 8546, 51594], 'temperature': 0.0, 'avg_logprob': -0.14803498321109348, 'compression_ratio': 1.6511627906976745, 'no_speech_prob': 0.02792319469153881}, {'id': 500, 'seek': 312636, 'start': 3126.36, 'end': 3133.36, 'text': ' linker and that remains loaded for the entire duration of the program.', 'tokens': [50364, 2113, 260, 293, 300, 7023, 13210, 337, 264, 2302, 16365, 295, 264, 1461, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.18578088006307913, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.1768634170293808}, {'id': 501, 'seek': 312636, 'start': 3133.36, 'end': 3138.84, 'text': " So that no matter how frequently you use it versus don't use it.", 'tokens': [50714, 407, 300, 572, 1871, 577, 10374, 291, 764, 309, 5717, 500, 380, 764, 309, 13, 50988], 'temperature': 0.0, 'avg_logprob': -0.18578088006307913, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.1768634170293808}, {'id': 502, 'seek': 312636, 'start': 3138.84, 'end': 3143.0, 'text': ' Once you have said I need this it will get loaded and it will remain for lifetime of', 'tokens': [50988, 3443, 291, 362, 848, 286, 643, 341, 309, 486, 483, 13210, 293, 309, 486, 6222, 337, 11364, 295, 51196], 'temperature': 0.0, 'avg_logprob': -0.18578088006307913, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.1768634170293808}, {'id': 503, 'seek': 312636, 'start': 3143.0, 'end': 3144.0, 'text': ' the application.', 'tokens': [51196, 264, 3861, 13, 51246], 'temperature': 0.0, 'avg_logprob': -0.18578088006307913, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.1768634170293808}, {'id': 504, 'seek': 312636, 'start': 3144.0, 'end': 3149.48, 'text': ' Now that obviously may not be the best case specially for very large application you may', 'tokens': [51246, 823, 300, 2745, 815, 406, 312, 264, 1151, 1389, 22549, 337, 588, 2416, 3861, 291, 815, 51520], 'temperature': 0.0, 'avg_logprob': -0.18578088006307913, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.1768634170293808}, {'id': 505, 'seek': 312636, 'start': 3149.48, 'end': 3151.76, 'text': ' do some processing in chunks.', 'tokens': [51520, 360, 512, 9007, 294, 24004, 13, 51634], 'temperature': 0.0, 'avg_logprob': -0.18578088006307913, 'compression_ratio': 1.655813953488372, 'no_speech_prob': 0.1768634170293808}, {'id': 506, 'seek': 315176, 'start': 3151.76, 'end': 3157.0800000000004, 'text': ' Like for example if you look at game itself or any other such large application it may', 'tokens': [50364, 1743, 337, 1365, 498, 291, 574, 412, 1216, 2564, 420, 604, 661, 1270, 2416, 3861, 309, 815, 50630], 'temperature': 0.0, 'avg_logprob': -0.11551182270050049, 'compression_ratio': 1.7222222222222223, 'no_speech_prob': 0.059866227209568024}, {'id': 507, 'seek': 315176, 'start': 3157.0800000000004, 'end': 3162.1400000000003, 'text': ' require some functionality for some specific duration within the application.', 'tokens': [50630, 3651, 512, 14980, 337, 512, 2685, 16365, 1951, 264, 3861, 13, 50883], 'temperature': 0.0, 'avg_logprob': -0.11551182270050049, 'compression_ratio': 1.7222222222222223, 'no_speech_prob': 0.059866227209568024}, {'id': 508, 'seek': 315176, 'start': 3162.1400000000003, 'end': 3166.88, 'text': " Once you are done using that functionality you may say I don't want this functionality", 'tokens': [50883, 3443, 291, 366, 1096, 1228, 300, 14980, 291, 815, 584, 286, 500, 380, 528, 341, 14980, 51120], 'temperature': 0.0, 'avg_logprob': -0.11551182270050049, 'compression_ratio': 1.7222222222222223, 'no_speech_prob': 0.059866227209568024}, {'id': 509, 'seek': 315176, 'start': 3166.88, 'end': 3172.4, 'text': ' now because you are done with whatever needed to be done.', 'tokens': [51120, 586, 570, 291, 366, 1096, 365, 2035, 2978, 281, 312, 1096, 13, 51396], 'temperature': 0.0, 'avg_logprob': -0.11551182270050049, 'compression_ratio': 1.7222222222222223, 'no_speech_prob': 0.059866227209568024}, {'id': 510, 'seek': 315176, 'start': 3172.4, 'end': 3178.1600000000003, 'text': " So that's where applications can actually call dynamic linker.", 'tokens': [51396, 407, 300, 311, 689, 5821, 393, 767, 818, 8546, 2113, 260, 13, 51684], 'temperature': 0.0, 'avg_logprob': -0.11551182270050049, 'compression_ratio': 1.7222222222222223, 'no_speech_prob': 0.059866227209568024}, {'id': 511, 'seek': 317816, 'start': 3178.16, 'end': 3184.52, 'text': ' So far we saw loader calling dynamic linker at the application start time but there are', 'tokens': [50364, 407, 1400, 321, 1866, 3677, 260, 5141, 8546, 2113, 260, 412, 264, 3861, 722, 565, 457, 456, 366, 50682], 'temperature': 0.0, 'avg_logprob': -0.17346947692161382, 'compression_ratio': 1.7736842105263158, 'no_speech_prob': 0.008443089202046394}, {'id': 512, 'seek': 317816, 'start': 3184.52, 'end': 3191.48, 'text': ' ways in which application can call dynamic linker.', 'tokens': [50682, 2098, 294, 597, 3861, 393, 818, 8546, 2113, 260, 13, 51030], 'temperature': 0.0, 'avg_logprob': -0.17346947692161382, 'compression_ratio': 1.7736842105263158, 'no_speech_prob': 0.008443089202046394}, {'id': 513, 'seek': 317816, 'start': 3191.48, 'end': 3193.42, 'text': ' And what is the interface obviously.', 'tokens': [51030, 400, 437, 307, 264, 9226, 2745, 13, 51127], 'temperature': 0.0, 'avg_logprob': -0.17346947692161382, 'compression_ratio': 1.7736842105263158, 'no_speech_prob': 0.008443089202046394}, {'id': 514, 'seek': 317816, 'start': 3193.42, 'end': 3195.7999999999997, 'text': ' So there is a function called as dlopen.', 'tokens': [51127, 407, 456, 307, 257, 2445, 1219, 382, 37873, 15752, 13, 51246], 'temperature': 0.0, 'avg_logprob': -0.17346947692161382, 'compression_ratio': 1.7736842105263158, 'no_speech_prob': 0.008443089202046394}, {'id': 515, 'seek': 317816, 'start': 3195.7999999999997, 'end': 3200.08, 'text': ' How many of you had heard of this function.', 'tokens': [51246, 1012, 867, 295, 291, 632, 2198, 295, 341, 2445, 13, 51460], 'temperature': 0.0, 'avg_logprob': -0.17346947692161382, 'compression_ratio': 1.7736842105263158, 'no_speech_prob': 0.008443089202046394}, {'id': 516, 'seek': 317816, 'start': 3200.08, 'end': 3204.54, 'text': ' So there is a function called dlopen which you can call from your C program.', 'tokens': [51460, 407, 456, 307, 257, 2445, 1219, 37873, 15752, 597, 291, 393, 818, 490, 428, 383, 1461, 13, 51683], 'temperature': 0.0, 'avg_logprob': -0.17346947692161382, 'compression_ratio': 1.7736842105263158, 'no_speech_prob': 0.008443089202046394}, {'id': 517, 'seek': 320454, 'start': 3204.54, 'end': 3210.34, 'text': ' It takes a file name as the argument which is the file name of the .so which you want', 'tokens': [50364, 467, 2516, 257, 3991, 1315, 382, 264, 6770, 597, 307, 264, 3991, 1315, 295, 264, 2411, 539, 597, 291, 528, 50654], 'temperature': 0.0, 'avg_logprob': -0.11966469582546962, 'compression_ratio': 1.8972972972972972, 'no_speech_prob': 0.30673906207084656}, {'id': 518, 'seek': 320454, 'start': 3210.34, 'end': 3213.22, 'text': ' to load.', 'tokens': [50654, 281, 3677, 13, 50798], 'temperature': 0.0, 'avg_logprob': -0.11966469582546962, 'compression_ratio': 1.8972972972972972, 'no_speech_prob': 0.30673906207084656}, {'id': 519, 'seek': 320454, 'start': 3213.22, 'end': 3220.54, 'text': ' And it takes a flag which says at what point the resolution should happen.', 'tokens': [50798, 400, 309, 2516, 257, 7166, 597, 1619, 412, 437, 935, 264, 8669, 820, 1051, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.11966469582546962, 'compression_ratio': 1.8972972972972972, 'no_speech_prob': 0.30673906207084656}, {'id': 520, 'seek': 320454, 'start': 3220.54, 'end': 3226.74, 'text': ' So whether do you want to do as soon as the file is opened do you want to do symbol resolution', 'tokens': [51164, 407, 1968, 360, 291, 528, 281, 360, 382, 2321, 382, 264, 3991, 307, 5625, 360, 291, 528, 281, 360, 5986, 8669, 51474], 'temperature': 0.0, 'avg_logprob': -0.11966469582546962, 'compression_ratio': 1.8972972972972972, 'no_speech_prob': 0.30673906207084656}, {'id': 521, 'seek': 320454, 'start': 3226.74, 'end': 3234.2599999999998, 'text': ' or you want to do symbol resolution lazily as things are being used from that library.', 'tokens': [51474, 420, 291, 528, 281, 360, 5986, 8669, 19320, 953, 382, 721, 366, 885, 1143, 490, 300, 6405, 13, 51850], 'temperature': 0.0, 'avg_logprob': -0.11966469582546962, 'compression_ratio': 1.8972972972972972, 'no_speech_prob': 0.30673906207084656}, {'id': 522, 'seek': 323426, 'start': 3234.26, 'end': 3241.6200000000003, 'text': ' So for example if you say rtld now so what will dynamic linker do it will go and resolve', 'tokens': [50364, 407, 337, 1365, 498, 291, 584, 367, 83, 348, 586, 370, 437, 486, 8546, 2113, 260, 360, 309, 486, 352, 293, 14151, 50732], 'temperature': 0.0, 'avg_logprob': -0.16388414420333564, 'compression_ratio': 1.7324561403508771, 'no_speech_prob': 0.0021138396114110947}, {'id': 523, 'seek': 323426, 'start': 3241.6200000000003, 'end': 3243.78, 'text': ' all the symbols.', 'tokens': [50732, 439, 264, 16944, 13, 50840], 'temperature': 0.0, 'avg_logprob': -0.16388414420333564, 'compression_ratio': 1.7324561403508771, 'no_speech_prob': 0.0021138396114110947}, {'id': 524, 'seek': 323426, 'start': 3243.78, 'end': 3247.98, 'text': " No matter whether you use them don't use them at this point everything will be resolved", 'tokens': [50840, 883, 1871, 1968, 291, 764, 552, 500, 380, 764, 552, 412, 341, 935, 1203, 486, 312, 20772, 51050], 'temperature': 0.0, 'avg_logprob': -0.16388414420333564, 'compression_ratio': 1.7324561403508771, 'no_speech_prob': 0.0021138396114110947}, {'id': 525, 'seek': 323426, 'start': 3247.98, 'end': 3253.26, 'text': " and all the subsequent references will be fast because you don't have to re resolve", 'tokens': [51050, 293, 439, 264, 19962, 15400, 486, 312, 2370, 570, 291, 500, 380, 362, 281, 319, 14151, 51314], 'temperature': 0.0, 'avg_logprob': -0.16388414420333564, 'compression_ratio': 1.7324561403508771, 'no_speech_prob': 0.0021138396114110947}, {'id': 526, 'seek': 323426, 'start': 3253.26, 'end': 3254.44, 'text': ' them.', 'tokens': [51314, 552, 13, 51373], 'temperature': 0.0, 'avg_logprob': -0.16388414420333564, 'compression_ratio': 1.7324561403508771, 'no_speech_prob': 0.0021138396114110947}, {'id': 527, 'seek': 323426, 'start': 3254.44, 'end': 3259.7400000000002, 'text': ' If you say rtld lazy then linker will simply map it into your virtual address space will', 'tokens': [51373, 759, 291, 584, 367, 83, 348, 14847, 550, 2113, 260, 486, 2935, 4471, 309, 666, 428, 6374, 2985, 1901, 486, 51638], 'temperature': 0.0, 'avg_logprob': -0.16388414420333564, 'compression_ratio': 1.7324561403508771, 'no_speech_prob': 0.0021138396114110947}, {'id': 528, 'seek': 323426, 'start': 3259.7400000000002, 'end': 3262.1400000000003, 'text': ' not do any resolution.', 'tokens': [51638, 406, 360, 604, 8669, 13, 51758], 'temperature': 0.0, 'avg_logprob': -0.16388414420333564, 'compression_ratio': 1.7324561403508771, 'no_speech_prob': 0.0021138396114110947}, {'id': 529, 'seek': 326214, 'start': 3262.14, 'end': 3266.94, 'text': " And once you call something then it will say oh I don't know its address so let me resolve", 'tokens': [50364, 400, 1564, 291, 818, 746, 550, 309, 486, 584, 1954, 286, 500, 380, 458, 1080, 2985, 370, 718, 385, 14151, 50604], 'temperature': 0.0, 'avg_logprob': -0.25039877210344585, 'compression_ratio': 1.36, 'no_speech_prob': 0.3367694914340973}, {'id': 530, 'seek': 326214, 'start': 3266.94, 'end': 3272.18, 'text': ' first and then come back.', 'tokens': [50604, 700, 293, 550, 808, 646, 13, 50866], 'temperature': 0.0, 'avg_logprob': -0.25039877210344585, 'compression_ratio': 1.36, 'no_speech_prob': 0.3367694914340973}, {'id': 531, 'seek': 326214, 'start': 3272.18, 'end': 3285.9, 'text': " It's a file it's not file path it's the library name.", 'tokens': [50866, 467, 311, 257, 3991, 309, 311, 406, 3991, 3100, 309, 311, 264, 6405, 1315, 13, 51552], 'temperature': 0.0, 'avg_logprob': -0.25039877210344585, 'compression_ratio': 1.36, 'no_speech_prob': 0.3367694914340973}, {'id': 532, 'seek': 328590, 'start': 3286.6600000000003, 'end': 3293.86, 'text': ' So you have to say where to locate so as a programmer at build time you have to tell', 'tokens': [50402, 407, 291, 362, 281, 584, 689, 281, 22370, 370, 382, 257, 32116, 412, 1322, 565, 291, 362, 281, 980, 50762], 'temperature': 0.0, 'avg_logprob': -0.2275710048445736, 'compression_ratio': 1.7079207920792079, 'no_speech_prob': 0.6125320196151733}, {'id': 533, 'seek': 328590, 'start': 3293.86, 'end': 3296.26, 'text': ' where to look for shared libraries.', 'tokens': [50762, 689, 281, 574, 337, 5507, 15148, 13, 50882], 'temperature': 0.0, 'avg_logprob': -0.2275710048445736, 'compression_ratio': 1.7079207920792079, 'no_speech_prob': 0.6125320196151733}, {'id': 534, 'seek': 328590, 'start': 3296.26, 'end': 3301.54, 'text': ' Whether those shared libraries are loaded by the loader or by loaded by your application.', 'tokens': [50882, 8503, 729, 5507, 15148, 366, 13210, 538, 264, 3677, 260, 420, 538, 13210, 538, 428, 3861, 13, 51146], 'temperature': 0.0, 'avg_logprob': -0.2275710048445736, 'compression_ratio': 1.7079207920792079, 'no_speech_prob': 0.6125320196151733}, {'id': 535, 'seek': 328590, 'start': 3301.54, 'end': 3308.08, 'text': ' LD library path again as usual keeps working.', 'tokens': [51146, 33936, 6405, 3100, 797, 382, 7713, 5965, 1364, 13, 51473], 'temperature': 0.0, 'avg_logprob': -0.2275710048445736, 'compression_ratio': 1.7079207920792079, 'no_speech_prob': 0.6125320196151733}, {'id': 536, 'seek': 328590, 'start': 3308.08, 'end': 3314.7000000000003, 'text': " Now once you have loaded it how will you call a function because you can't say now refer", 'tokens': [51473, 823, 1564, 291, 362, 13210, 309, 577, 486, 291, 818, 257, 2445, 570, 291, 393, 380, 584, 586, 2864, 51804], 'temperature': 0.0, 'avg_logprob': -0.2275710048445736, 'compression_ratio': 1.7079207920792079, 'no_speech_prob': 0.6125320196151733}, {'id': 537, 'seek': 331470, 'start': 3314.7, 'end': 3319.74, 'text': ' to variable gbl because it was never referenced in your program.', 'tokens': [50364, 281, 7006, 290, 5199, 570, 309, 390, 1128, 32734, 294, 428, 1461, 13, 50616], 'temperature': 0.0, 'avg_logprob': -0.1489985676135047, 'compression_ratio': 1.4522292993630572, 'no_speech_prob': 0.0617942251265049}, {'id': 538, 'seek': 331470, 'start': 3319.74, 'end': 3326.46, 'text': ' So there is another API called dl sim which is from this dso which was opened give me', 'tokens': [50616, 407, 456, 307, 1071, 9362, 1219, 37873, 1034, 597, 307, 490, 341, 274, 539, 597, 390, 5625, 976, 385, 50952], 'temperature': 0.0, 'avg_logprob': -0.1489985676135047, 'compression_ratio': 1.4522292993630572, 'no_speech_prob': 0.0617942251265049}, {'id': 539, 'seek': 331470, 'start': 3326.46, 'end': 3332.3399999999997, 'text': ' address of this symbol.', 'tokens': [50952, 2985, 295, 341, 5986, 13, 51246], 'temperature': 0.0, 'avg_logprob': -0.1489985676135047, 'compression_ratio': 1.4522292993630572, 'no_speech_prob': 0.0617942251265049}, {'id': 540, 'seek': 331470, 'start': 3332.3399999999997, 'end': 3337.1, 'text': ' And you get the handle and then you use that address.', 'tokens': [51246, 400, 291, 483, 264, 4813, 293, 550, 291, 764, 300, 2985, 13, 51484], 'temperature': 0.0, 'avg_logprob': -0.1489985676135047, 'compression_ratio': 1.4522292993630572, 'no_speech_prob': 0.0617942251265049}, {'id': 541, 'seek': 333710, 'start': 3337.1, 'end': 3347.02, 'text': ' Once you are done you can do dl close which will close the.', 'tokens': [50364, 3443, 291, 366, 1096, 291, 393, 360, 37873, 1998, 597, 486, 1998, 264, 13, 50860], 'temperature': 0.0, 'avg_logprob': -0.14261315882891074, 'compression_ratio': 1.7121212121212122, 'no_speech_prob': 0.06749123334884644}, {'id': 542, 'seek': 333710, 'start': 3347.02, 'end': 3354.02, 'text': ' You can think of it like this that it gives you a handle to a symbol which you requested', 'tokens': [50860, 509, 393, 519, 295, 309, 411, 341, 300, 309, 2709, 291, 257, 4813, 281, 257, 5986, 597, 291, 16436, 51210], 'temperature': 0.0, 'avg_logprob': -0.14261315882891074, 'compression_ratio': 1.7121212121212122, 'no_speech_prob': 0.06749123334884644}, {'id': 543, 'seek': 333710, 'start': 3354.02, 'end': 3355.02, 'text': ' and then you can use that.', 'tokens': [51210, 293, 550, 291, 393, 764, 300, 13, 51260], 'temperature': 0.0, 'avg_logprob': -0.14261315882891074, 'compression_ratio': 1.7121212121212122, 'no_speech_prob': 0.06749123334884644}, {'id': 544, 'seek': 333710, 'start': 3355.02, 'end': 3359.18, 'text': ' I have an example which shows how to use this.', 'tokens': [51260, 286, 362, 364, 1365, 597, 3110, 577, 281, 764, 341, 13, 51468], 'temperature': 0.0, 'avg_logprob': -0.14261315882891074, 'compression_ratio': 1.7121212121212122, 'no_speech_prob': 0.06749123334884644}, {'id': 545, 'seek': 333710, 'start': 3359.18, 'end': 3363.54, 'text': ' And then there is dl error which will say whether anything happened I mean anything', 'tokens': [51468, 400, 550, 456, 307, 37873, 6713, 597, 486, 584, 1968, 1340, 2011, 286, 914, 1340, 51686], 'temperature': 0.0, 'avg_logprob': -0.14261315882891074, 'compression_ratio': 1.7121212121212122, 'no_speech_prob': 0.06749123334884644}, {'id': 546, 'seek': 333710, 'start': 3363.54, 'end': 3366.5, 'text': ' went wrong in the whole process.', 'tokens': [51686, 1437, 2085, 294, 264, 1379, 1399, 13, 51834], 'temperature': 0.0, 'avg_logprob': -0.14261315882891074, 'compression_ratio': 1.7121212121212122, 'no_speech_prob': 0.06749123334884644}, {'id': 547, 'seek': 336650, 'start': 3366.58, 'end': 3370.98, 'text': ' Now you can see that you have control over when to open the shared library and when to', 'tokens': [50368, 823, 291, 393, 536, 300, 291, 362, 1969, 670, 562, 281, 1269, 264, 5507, 6405, 293, 562, 281, 50588], 'temperature': 0.0, 'avg_logprob': -0.22348161424909319, 'compression_ratio': 1.6125, 'no_speech_prob': 0.008563620038330555}, {'id': 548, 'seek': 336650, 'start': 3370.98, 'end': 3377.62, 'text': ' close it and you can do this as often as you want and for as shorter or as longer duration', 'tokens': [50588, 1998, 309, 293, 291, 393, 360, 341, 382, 2049, 382, 291, 528, 293, 337, 382, 11639, 420, 382, 2854, 16365, 50920], 'temperature': 0.0, 'avg_logprob': -0.22348161424909319, 'compression_ratio': 1.6125, 'no_speech_prob': 0.008563620038330555}, {'id': 549, 'seek': 336650, 'start': 3377.62, 'end': 3380.1, 'text': ' of the time during your application.', 'tokens': [50920, 295, 264, 565, 1830, 428, 3861, 13, 51044], 'temperature': 0.0, 'avg_logprob': -0.22348161424909319, 'compression_ratio': 1.6125, 'no_speech_prob': 0.008563620038330555}, {'id': 550, 'seek': 336650, 'start': 3380.1, 'end': 3384.14, 'text': ' No loader will not do.', 'tokens': [51044, 883, 3677, 260, 486, 406, 360, 13, 51246], 'temperature': 0.0, 'avg_logprob': -0.22348161424909319, 'compression_ratio': 1.6125, 'no_speech_prob': 0.008563620038330555}, {'id': 551, 'seek': 336650, 'start': 3384.14, 'end': 3390.14, 'text': ' I will come to that.', 'tokens': [51246, 286, 486, 808, 281, 300, 13, 51546], 'temperature': 0.0, 'avg_logprob': -0.22348161424909319, 'compression_ratio': 1.6125, 'no_speech_prob': 0.008563620038330555}, {'id': 552, 'seek': 339014, 'start': 3390.14, 'end': 3397.58, 'text': ' But essentially when you are saying so the entries which are used via dl open will not', 'tokens': [50364, 583, 4476, 562, 291, 366, 1566, 370, 264, 23041, 597, 366, 1143, 5766, 37873, 1269, 486, 406, 50736], 'temperature': 0.0, 'avg_logprob': -0.1965547644573709, 'compression_ratio': 1.5271739130434783, 'no_speech_prob': 0.020936144515872}, {'id': 553, 'seek': 339014, 'start': 3397.58, 'end': 3401.3799999999997, 'text': ' have dt needed in the else.', 'tokens': [50736, 362, 36423, 2978, 294, 264, 1646, 13, 50926], 'temperature': 0.0, 'avg_logprob': -0.1965547644573709, 'compression_ratio': 1.5271739130434783, 'no_speech_prob': 0.020936144515872}, {'id': 554, 'seek': 339014, 'start': 3401.3799999999997, 'end': 3409.3399999999997, 'text': ' So remember we saw something like there is something called as needed.', 'tokens': [50926, 407, 1604, 321, 1866, 746, 411, 456, 307, 746, 1219, 382, 2978, 13, 51324], 'temperature': 0.0, 'avg_logprob': -0.1965547644573709, 'compression_ratio': 1.5271739130434783, 'no_speech_prob': 0.020936144515872}, {'id': 555, 'seek': 339014, 'start': 3409.3399999999997, 'end': 3413.62, 'text': ' This word generated by compiler or during the assembly process.', 'tokens': [51324, 639, 1349, 10833, 538, 31958, 420, 1830, 264, 12103, 1399, 13, 51538], 'temperature': 0.0, 'avg_logprob': -0.1965547644573709, 'compression_ratio': 1.5271739130434783, 'no_speech_prob': 0.020936144515872}, {'id': 556, 'seek': 339014, 'start': 3413.62, 'end': 3416.64, 'text': ' So this says I need lib dot so.', 'tokens': [51538, 407, 341, 1619, 286, 643, 22854, 5893, 370, 13, 51689], 'temperature': 0.0, 'avg_logprob': -0.1965547644573709, 'compression_ratio': 1.5271739130434783, 'no_speech_prob': 0.020936144515872}, {'id': 557, 'seek': 341664, 'start': 3416.64, 'end': 3421.2, 'text': ' What loader is going to do is it is going to load all the shared libraries which had', 'tokens': [50364, 708, 3677, 260, 307, 516, 281, 360, 307, 309, 307, 516, 281, 3677, 439, 264, 5507, 15148, 597, 632, 50592], 'temperature': 0.0, 'avg_logprob': -0.1466309644173885, 'compression_ratio': 1.6832298136645962, 'no_speech_prob': 0.0382654145359993}, {'id': 558, 'seek': 341664, 'start': 3421.2, 'end': 3423.08, 'text': ' this flag.', 'tokens': [50592, 341, 7166, 13, 50686], 'temperature': 0.0, 'avg_logprob': -0.1466309644173885, 'compression_ratio': 1.6832298136645962, 'no_speech_prob': 0.0382654145359993}, {'id': 559, 'seek': 341664, 'start': 3423.08, 'end': 3431.8799999999997, 'text': ' Any library which is only dl opened and not statically linked at build time by statically', 'tokens': [50686, 2639, 6405, 597, 307, 787, 37873, 5625, 293, 406, 2219, 984, 9408, 412, 1322, 565, 538, 2219, 984, 51126], 'temperature': 0.0, 'avg_logprob': -0.1466309644173885, 'compression_ratio': 1.6832298136645962, 'no_speech_prob': 0.0382654145359993}, {'id': 560, 'seek': 341664, 'start': 3431.8799999999997, 'end': 3441.96, 'text': ' link I mean was linked at the time of creation of executable will not have this flag.', 'tokens': [51126, 2113, 286, 914, 390, 9408, 412, 264, 565, 295, 8016, 295, 7568, 712, 486, 406, 362, 341, 7166, 13, 51630], 'temperature': 0.0, 'avg_logprob': -0.1466309644173885, 'compression_ratio': 1.6832298136645962, 'no_speech_prob': 0.0382654145359993}, {'id': 561, 'seek': 344196, 'start': 3441.96, 'end': 3448.92, 'text': ' What you are so think of it this way that wl path etc which you are giving is only to', 'tokens': [50364, 708, 291, 366, 370, 519, 295, 309, 341, 636, 300, 261, 75, 3100, 5183, 597, 291, 366, 2902, 307, 787, 281, 50712], 'temperature': 0.0, 'avg_logprob': -0.1690375428450735, 'compression_ratio': 1.8214285714285714, 'no_speech_prob': 0.005638291593641043}, {'id': 562, 'seek': 344196, 'start': 3448.92, 'end': 3452.48, 'text': ' say that this is where shared libraries live.', 'tokens': [50712, 584, 300, 341, 307, 689, 5507, 15148, 1621, 13, 50890], 'temperature': 0.0, 'avg_logprob': -0.1690375428450735, 'compression_ratio': 1.8214285714285714, 'no_speech_prob': 0.005638291593641043}, {'id': 563, 'seek': 344196, 'start': 3452.48, 'end': 3456.92, 'text': ' It does not say all the shared libraries are needed depending on the references which you', 'tokens': [50890, 467, 775, 406, 584, 439, 264, 5507, 15148, 366, 2978, 5413, 322, 264, 15400, 597, 291, 51112], 'temperature': 0.0, 'avg_logprob': -0.1690375428450735, 'compression_ratio': 1.8214285714285714, 'no_speech_prob': 0.005638291593641043}, {'id': 564, 'seek': 344196, 'start': 3456.92, 'end': 3465.56, 'text': ' are doing the shared libraries will be marked as needed.', 'tokens': [51112, 366, 884, 264, 5507, 15148, 486, 312, 12658, 382, 2978, 13, 51544], 'temperature': 0.0, 'avg_logprob': -0.1690375428450735, 'compression_ratio': 1.8214285714285714, 'no_speech_prob': 0.005638291593641043}, {'id': 565, 'seek': 344196, 'start': 3465.56, 'end': 3468.28, 'text': ' So this is the sample code.', 'tokens': [51544, 407, 341, 307, 264, 6889, 3089, 13, 51680], 'temperature': 0.0, 'avg_logprob': -0.1690375428450735, 'compression_ratio': 1.8214285714285714, 'no_speech_prob': 0.005638291593641043}, {'id': 566, 'seek': 346828, 'start': 3468.28, 'end': 3477.36, 'text': ' So I have I am doing dl open of some library and I am saying lazily if there is any error', 'tokens': [50364, 407, 286, 362, 286, 669, 884, 37873, 1269, 295, 512, 6405, 293, 286, 669, 1566, 19320, 953, 498, 456, 307, 604, 6713, 50818], 'temperature': 0.0, 'avg_logprob': -0.18950913276201414, 'compression_ratio': 1.6453488372093024, 'no_speech_prob': 0.03611063212156296}, {'id': 567, 'seek': 346828, 'start': 3477.36, 'end': 3479.36, 'text': ' I check it.', 'tokens': [50818, 286, 1520, 309, 13, 50918], 'temperature': 0.0, 'avg_logprob': -0.18950913276201414, 'compression_ratio': 1.6453488372093024, 'no_speech_prob': 0.03611063212156296}, {'id': 568, 'seek': 346828, 'start': 3479.36, 'end': 3485.84, 'text': ' Otherwise I say give me handle of a function called as of a symbol called advec and I store', 'tokens': [50918, 10328, 286, 584, 976, 385, 4813, 295, 257, 2445, 1219, 382, 295, 257, 5986, 1219, 614, 303, 66, 293, 286, 3531, 51242], 'temperature': 0.0, 'avg_logprob': -0.18950913276201414, 'compression_ratio': 1.6453488372093024, 'no_speech_prob': 0.03611063212156296}, {'id': 569, 'seek': 346828, 'start': 3485.84, 'end': 3494.96, 'text': ' it in advec and advec has this prototype and I simply call it as a function and I get now', 'tokens': [51242, 309, 294, 614, 303, 66, 293, 614, 303, 66, 575, 341, 19475, 293, 286, 2935, 818, 309, 382, 257, 2445, 293, 286, 483, 586, 51698], 'temperature': 0.0, 'avg_logprob': -0.18950913276201414, 'compression_ratio': 1.6453488372093024, 'no_speech_prob': 0.03611063212156296}, {'id': 570, 'seek': 349496, 'start': 3494.96, 'end': 3504.12, 'text': ' advec is not real lib vector dot so will not be loaded until the application actually starts', 'tokens': [50364, 614, 303, 66, 307, 406, 957, 22854, 8062, 5893, 370, 486, 406, 312, 13210, 1826, 264, 3861, 767, 3719, 50822], 'temperature': 0.0, 'avg_logprob': -0.4155600589254628, 'compression_ratio': 1.3771929824561404, 'no_speech_prob': 0.41227036714553833}, {'id': 571, 'seek': 349496, 'start': 3504.12, 'end': 3507.12, 'text': ' execute.', 'tokens': [50822, 14483, 13, 50972], 'temperature': 0.0, 'avg_logprob': -0.4155600589254628, 'compression_ratio': 1.3771929824561404, 'no_speech_prob': 0.41227036714553833}, {'id': 572, 'seek': 349496, 'start': 3507.12, 'end': 3514.88, 'text': ' Correct and we can we can see that.', 'tokens': [50972, 12753, 293, 321, 393, 321, 393, 536, 300, 13, 51360], 'temperature': 0.0, 'avg_logprob': -0.4155600589254628, 'compression_ratio': 1.3771929824561404, 'no_speech_prob': 0.41227036714553833}, {'id': 573, 'seek': 349496, 'start': 3514.88, 'end': 3516.4, 'text': ' So let us see that.', 'tokens': [51360, 407, 718, 505, 536, 300, 13, 51436], 'temperature': 0.0, 'avg_logprob': -0.4155600589254628, 'compression_ratio': 1.3771929824561404, 'no_speech_prob': 0.41227036714553833}, {'id': 574, 'seek': 351640, 'start': 3516.4, 'end': 3538.84, 'text': ' So let us say I take this code.', 'tokens': [50364, 407, 718, 505, 584, 286, 747, 341, 3089, 13, 51486], 'temperature': 0.0, 'avg_logprob': -0.64739440037654, 'compression_ratio': 0.7948717948717948, 'no_speech_prob': 0.9433557391166687}, {'id': 575, 'seek': 353884, 'start': 3538.84, 'end': 3566.2400000000002, 'text': ' Now for simplicity I will say this is.', 'tokens': [50364, 823, 337, 25632, 286, 486, 584, 341, 307, 13, 51734], 'temperature': 0.0, 'avg_logprob': -0.6934350087092473, 'compression_ratio': 0.8260869565217391, 'no_speech_prob': 0.9544950127601624}, {'id': 576, 'seek': 371624, 'start': 3716.24, 'end': 3736.7999999999997, 'text': ' Is everyone clear what happened here now if we do ldd ldd does not say I need lib my dot', 'tokens': [50364, 1119, 1518, 1850, 437, 2011, 510, 586, 498, 321, 360, 287, 24810, 287, 24810, 775, 406, 584, 286, 643, 22854, 452, 5893, 51392], 'temperature': 0.0, 'avg_logprob': -0.3554190488962027, 'compression_ratio': 1.1428571428571428, 'no_speech_prob': 0.44439661502838135}, {'id': 577, 'seek': 373680, 'start': 3736.8, 'end': 3739.44, 'text': ' so and you can actually see it in action.', 'tokens': [50364, 370, 293, 291, 393, 767, 536, 309, 294, 3069, 13, 50496], 'temperature': 0.0, 'avg_logprob': -0.2832230758666992, 'compression_ratio': 1.0714285714285714, 'no_speech_prob': 0.5297501683235168}, {'id': 578, 'seek': 373680, 'start': 3739.44, 'end': 3753.42, 'text': ' So let us try to debug this code.', 'tokens': [50496, 407, 718, 505, 853, 281, 24083, 341, 3089, 13, 51195], 'temperature': 0.0, 'avg_logprob': -0.2832230758666992, 'compression_ratio': 1.0714285714285714, 'no_speech_prob': 0.5297501683235168}, {'id': 579, 'seek': 375342, 'start': 3753.42, 'end': 3780.58, 'text': ' So I will put a break point on main.', 'tokens': [50364, 407, 286, 486, 829, 257, 1821, 935, 322, 2135, 13, 51722], 'temperature': 0.0, 'avg_logprob': -0.585758890424456, 'compression_ratio': 0.8181818181818182, 'no_speech_prob': 0.62230384349823}, {'id': 580, 'seek': 378058, 'start': 3780.58, 'end': 3788.6, 'text': ' So now the program has started but it has not yet done dl open.', 'tokens': [50364, 407, 586, 264, 1461, 575, 1409, 457, 309, 575, 406, 1939, 1096, 37873, 1269, 13, 50765], 'temperature': 0.0, 'avg_logprob': -0.16291900114579635, 'compression_ratio': 1.2882882882882882, 'no_speech_prob': 0.6462629437446594}, {'id': 581, 'seek': 378058, 'start': 3788.6, 'end': 3796.7, 'text': ' Now let us switch back to this.', 'tokens': [50765, 823, 718, 505, 3679, 646, 281, 341, 13, 51170], 'temperature': 0.0, 'avg_logprob': -0.16291900114579635, 'compression_ratio': 1.2882882882882882, 'no_speech_prob': 0.6462629437446594}, {'id': 582, 'seek': 378058, 'start': 3796.7, 'end': 3804.2, 'text': ' So we have this is the memory map of a dot out.', 'tokens': [51170, 407, 321, 362, 341, 307, 264, 4675, 4471, 295, 257, 5893, 484, 13, 51545], 'temperature': 0.0, 'avg_logprob': -0.16291900114579635, 'compression_ratio': 1.2882882882882882, 'no_speech_prob': 0.6462629437446594}, {'id': 583, 'seek': 380420, 'start': 3805.06, 'end': 3811.58, 'text': ' my dot so here.', 'tokens': [50407, 452, 5893, 370, 510, 13, 50733], 'temperature': 0.0, 'avg_logprob': -0.25811264038085935, 'compression_ratio': 1.3333333333333333, 'no_speech_prob': 0.10962609201669693}, {'id': 584, 'seek': 380420, 'start': 3811.58, 'end': 3816.8199999999997, 'text': ' Let me execute this.', 'tokens': [50733, 961, 385, 14483, 341, 13, 50995], 'temperature': 0.0, 'avg_logprob': -0.25811264038085935, 'compression_ratio': 1.3333333333333333, 'no_speech_prob': 0.10962609201669693}, {'id': 585, 'seek': 380420, 'start': 3816.8199999999997, 'end': 3821.08, 'text': ' Let me re-examine the map.', 'tokens': [50995, 961, 385, 319, 12, 3121, 18929, 264, 4471, 13, 51208], 'temperature': 0.0, 'avg_logprob': -0.25811264038085935, 'compression_ratio': 1.3333333333333333, 'no_speech_prob': 0.10962609201669693}, {'id': 586, 'seek': 380420, 'start': 3821.08, 'end': 3824.3999999999996, 'text': ' You can see lib my dot so now.', 'tokens': [51208, 509, 393, 536, 22854, 452, 5893, 370, 586, 13, 51374], 'temperature': 0.0, 'avg_logprob': -0.25811264038085935, 'compression_ratio': 1.3333333333333333, 'no_speech_prob': 0.10962609201669693}, {'id': 587, 'seek': 380420, 'start': 3824.3999999999996, 'end': 3830.08, 'text': ' So it was actually loaded when it was needed.', 'tokens': [51374, 407, 309, 390, 767, 13210, 562, 309, 390, 2978, 13, 51658], 'temperature': 0.0, 'avg_logprob': -0.25811264038085935, 'compression_ratio': 1.3333333333333333, 'no_speech_prob': 0.10962609201669693}, {'id': 588, 'seek': 383008, 'start': 3830.08, 'end': 3834.52, 'text': ' And if you do the same thing with the earlier examples we were trying where it was kind', 'tokens': [50364, 400, 498, 291, 360, 264, 912, 551, 365, 264, 3071, 5110, 321, 645, 1382, 689, 309, 390, 733, 50586], 'temperature': 0.0, 'avg_logprob': -0.20598648019032936, 'compression_ratio': 1.5502645502645502, 'no_speech_prob': 0.11871965229511261}, {'id': 589, 'seek': 383008, 'start': 3834.52, 'end': 3838.4, 'text': ' of linked at compile time that this is needed.', 'tokens': [50586, 295, 9408, 412, 31413, 565, 300, 341, 307, 2978, 13, 50780], 'temperature': 0.0, 'avg_logprob': -0.20598648019032936, 'compression_ratio': 1.5502645502645502, 'no_speech_prob': 0.11871965229511261}, {'id': 590, 'seek': 383008, 'start': 3838.4, 'end': 3849.2999999999997, 'text': ' Then you need and you will see at the program startup itself it is already loaded.', 'tokens': [50780, 1396, 291, 643, 293, 291, 486, 536, 412, 264, 1461, 18578, 2564, 309, 307, 1217, 13210, 13, 51325], 'temperature': 0.0, 'avg_logprob': -0.20598648019032936, 'compression_ratio': 1.5502645502645502, 'no_speech_prob': 0.11871965229511261}, {'id': 591, 'seek': 383008, 'start': 3849.2999999999997, 'end': 3855.92, 'text': ' So those are calls to the dynamic linker which is part of OS in some sense.', 'tokens': [51325, 407, 729, 366, 5498, 281, 264, 8546, 2113, 260, 597, 307, 644, 295, 12731, 294, 512, 2020, 13, 51656], 'temperature': 0.0, 'avg_logprob': -0.20598648019032936, 'compression_ratio': 1.5502645502645502, 'no_speech_prob': 0.11871965229511261}, {'id': 592, 'seek': 385592, 'start': 3855.92, 'end': 3864.28, 'text': ' Yes so internally it will do some system calls to get to that.', 'tokens': [50364, 1079, 370, 19501, 309, 486, 360, 512, 1185, 5498, 281, 483, 281, 300, 13, 50782], 'temperature': 0.0, 'avg_logprob': -0.2978103718859084, 'compression_ratio': 1.3511450381679388, 'no_speech_prob': 0.05492189899086952}, {'id': 593, 'seek': 385592, 'start': 3864.28, 'end': 3876.76, 'text': ' It is not a libc feature.', 'tokens': [50782, 467, 307, 406, 257, 22854, 66, 4111, 13, 51406], 'temperature': 0.0, 'avg_logprob': -0.2978103718859084, 'compression_ratio': 1.3511450381679388, 'no_speech_prob': 0.05492189899086952}, {'id': 594, 'seek': 385592, 'start': 3876.76, 'end': 3882.64, 'text': ' So that kind of concludes most of the things which I had with respect to the surrounding', 'tokens': [51406, 407, 300, 733, 295, 24643, 881, 295, 264, 721, 597, 286, 632, 365, 3104, 281, 264, 11498, 51700], 'temperature': 0.0, 'avg_logprob': -0.2978103718859084, 'compression_ratio': 1.3511450381679388, 'no_speech_prob': 0.05492189899086952}, {'id': 595, 'seek': 388264, 'start': 3882.64, 'end': 3887.08, 'text': ' environment.', 'tokens': [50364, 2823, 13, 50586], 'temperature': 0.0, 'avg_logprob': -0.18417040039511287, 'compression_ratio': 1.6071428571428572, 'no_speech_prob': 0.1190960705280304}, {'id': 596, 'seek': 388264, 'start': 3887.08, 'end': 3896.04, 'text': ' So just to kind of recap what we saw so far was how function calls were done.', 'tokens': [50586, 407, 445, 281, 733, 295, 20928, 437, 321, 1866, 370, 1400, 390, 577, 2445, 5498, 645, 1096, 13, 51034], 'temperature': 0.0, 'avg_logprob': -0.18417040039511287, 'compression_ratio': 1.6071428571428572, 'no_speech_prob': 0.1190960705280304}, {'id': 597, 'seek': 388264, 'start': 3896.04, 'end': 3902.16, 'text': ' And if you look at function calls who played major roles in getting function calls working.', 'tokens': [51034, 400, 498, 291, 574, 412, 2445, 5498, 567, 3737, 2563, 9604, 294, 1242, 2445, 5498, 1364, 13, 51340], 'temperature': 0.0, 'avg_logprob': -0.18417040039511287, 'compression_ratio': 1.6071428571428572, 'no_speech_prob': 0.1190960705280304}, {'id': 598, 'seek': 388264, 'start': 3902.16, 'end': 3904.96, 'text': ' Which component compiler.', 'tokens': [51340, 3013, 6542, 31958, 13, 51480], 'temperature': 0.0, 'avg_logprob': -0.18417040039511287, 'compression_ratio': 1.6071428571428572, 'no_speech_prob': 0.1190960705280304}, {'id': 599, 'seek': 388264, 'start': 3904.96, 'end': 3910.16, 'text': ' So most of the magic for function call was done by compilers.', 'tokens': [51480, 407, 881, 295, 264, 5585, 337, 2445, 818, 390, 1096, 538, 715, 388, 433, 13, 51740], 'temperature': 0.0, 'avg_logprob': -0.18417040039511287, 'compression_ratio': 1.6071428571428572, 'no_speech_prob': 0.1190960705280304}, {'id': 600, 'seek': 391016, 'start': 3910.16, 'end': 3913.72, 'text': ' Then we went into details of object files.', 'tokens': [50364, 1396, 321, 1437, 666, 4365, 295, 2657, 7098, 13, 50542], 'temperature': 0.0, 'avg_logprob': -0.14265279660279723, 'compression_ratio': 1.7688442211055277, 'no_speech_prob': 0.12237007170915604}, {'id': 601, 'seek': 391016, 'start': 3913.72, 'end': 3919.54, 'text': ' The creation of object file was essentially job of assembler.', 'tokens': [50542, 440, 8016, 295, 2657, 3991, 390, 4476, 1691, 295, 8438, 1918, 13, 50833], 'temperature': 0.0, 'avg_logprob': -0.14265279660279723, 'compression_ratio': 1.7688442211055277, 'no_speech_prob': 0.12237007170915604}, {'id': 602, 'seek': 391016, 'start': 3919.54, 'end': 3925.3999999999996, 'text': ' Then we looked at linker which was its own thing and it had its own quirky rules of how', 'tokens': [50833, 1396, 321, 2956, 412, 2113, 260, 597, 390, 1080, 1065, 551, 293, 309, 632, 1080, 1065, 49515, 4474, 295, 577, 51126], 'temperature': 0.0, 'avg_logprob': -0.14265279660279723, 'compression_ratio': 1.7688442211055277, 'no_speech_prob': 0.12237007170915604}, {'id': 603, 'seek': 391016, 'start': 3925.3999999999996, 'end': 3927.7999999999997, 'text': ' to do things.', 'tokens': [51126, 281, 360, 721, 13, 51246], 'temperature': 0.0, 'avg_logprob': -0.14265279660279723, 'compression_ratio': 1.7688442211055277, 'no_speech_prob': 0.12237007170915604}, {'id': 604, 'seek': 391016, 'start': 3927.7999999999997, 'end': 3932.8799999999997, 'text': ' Then we looked in the morning we started off with libraries where we saw how to create', 'tokens': [51246, 1396, 321, 2956, 294, 264, 2446, 321, 1409, 766, 365, 15148, 689, 321, 1866, 577, 281, 1884, 51500], 'temperature': 0.0, 'avg_logprob': -0.14265279660279723, 'compression_ratio': 1.7688442211055277, 'no_speech_prob': 0.12237007170915604}, {'id': 605, 'seek': 391016, 'start': 3932.8799999999997, 'end': 3936.92, 'text': ' libraries and what are the additional features of linkers.', 'tokens': [51500, 15148, 293, 437, 366, 264, 4497, 4122, 295, 2113, 433, 13, 51702], 'temperature': 0.0, 'avg_logprob': -0.14265279660279723, 'compression_ratio': 1.7688442211055277, 'no_speech_prob': 0.12237007170915604}, {'id': 606, 'seek': 393692, 'start': 3936.92, 'end': 3943.6, 'text': ' Then we went into virtual memory and processes and how when something is running on the system', 'tokens': [50364, 1396, 321, 1437, 666, 6374, 4675, 293, 7555, 293, 577, 562, 746, 307, 2614, 322, 264, 1185, 50698], 'temperature': 0.0, 'avg_logprob': -0.10310167661854919, 'compression_ratio': 1.6326530612244898, 'no_speech_prob': 0.08028503507375717}, {'id': 607, 'seek': 393692, 'start': 3943.6, 'end': 3948.92, 'text': ' what is the view of that to the actual processor and the resources.', 'tokens': [50698, 437, 307, 264, 1910, 295, 300, 281, 264, 3539, 15321, 293, 264, 3593, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.10310167661854919, 'compression_ratio': 1.6326530612244898, 'no_speech_prob': 0.08028503507375717}, {'id': 608, 'seek': 393692, 'start': 3948.92, 'end': 3955.48, 'text': ' Then we looked into the dynamic linking including position independent code and this.', 'tokens': [50964, 1396, 321, 2956, 666, 264, 8546, 25775, 3009, 2535, 6695, 3089, 293, 341, 13, 51292], 'temperature': 0.0, 'avg_logprob': -0.10310167661854919, 'compression_ratio': 1.6326530612244898, 'no_speech_prob': 0.08028503507375717}, {'id': 609, 'seek': 393692, 'start': 3955.48, 'end': 3959.92, 'text': ' So that kind of covers most of the things which I wanted to talk about.', 'tokens': [51292, 407, 300, 733, 295, 10538, 881, 295, 264, 721, 597, 286, 1415, 281, 751, 466, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.10310167661854919, 'compression_ratio': 1.6326530612244898, 'no_speech_prob': 0.08028503507375717}, {'id': 610, 'seek': 395992, 'start': 3959.96, 'end': 3967.12, 'text': ' The remaining session is all about how various language features are implemented.', 'tokens': [50366, 440, 8877, 5481, 307, 439, 466, 577, 3683, 2856, 4122, 366, 12270, 13, 50724], 'temperature': 0.0, 'avg_logprob': -0.17440269871761924, 'compression_ratio': 1.590717299578059, 'no_speech_prob': 0.3987509310245514}, {'id': 611, 'seek': 395992, 'start': 3967.12, 'end': 3974.02, 'text': ' What all happens when you do something in your C language or C++ language.', 'tokens': [50724, 708, 439, 2314, 562, 291, 360, 746, 294, 428, 383, 2856, 420, 383, 25472, 2856, 13, 51069], 'temperature': 0.0, 'avg_logprob': -0.17440269871761924, 'compression_ratio': 1.590717299578059, 'no_speech_prob': 0.3987509310245514}, {'id': 612, 'seek': 395992, 'start': 3974.02, 'end': 3978.2200000000003, 'text': ' What all happens across the stack to make it work.', 'tokens': [51069, 708, 439, 2314, 2108, 264, 8630, 281, 652, 309, 589, 13, 51279], 'temperature': 0.0, 'avg_logprob': -0.17440269871761924, 'compression_ratio': 1.590717299578059, 'no_speech_prob': 0.3987509310245514}, {'id': 613, 'seek': 395992, 'start': 3978.2200000000003, 'end': 3980.92, 'text': " Now I don't have any slides for these.", 'tokens': [51279, 823, 286, 500, 380, 362, 604, 9788, 337, 613, 13, 51414], 'temperature': 0.0, 'avg_logprob': -0.17440269871761924, 'compression_ratio': 1.590717299578059, 'no_speech_prob': 0.3987509310245514}, {'id': 614, 'seek': 395992, 'start': 3980.92, 'end': 3983.6800000000003, 'text': ' I was bit lazy to actually prepare them.', 'tokens': [51414, 286, 390, 857, 14847, 281, 767, 5940, 552, 13, 51552], 'temperature': 0.0, 'avg_logprob': -0.17440269871761924, 'compression_ratio': 1.590717299578059, 'no_speech_prob': 0.3987509310245514}, {'id': 615, 'seek': 395992, 'start': 3983.6800000000003, 'end': 3986.4, 'text': ' But I wanted this to be more interactive.', 'tokens': [51552, 583, 286, 1415, 341, 281, 312, 544, 15141, 13, 51688], 'temperature': 0.0, 'avg_logprob': -0.17440269871761924, 'compression_ratio': 1.590717299578059, 'no_speech_prob': 0.3987509310245514}, {'id': 616, 'seek': 395992, 'start': 3986.4, 'end': 3988.44, 'text': " That's why I have not kind of put fixed slides.", 'tokens': [51688, 663, 311, 983, 286, 362, 406, 733, 295, 829, 6806, 9788, 13, 51790], 'temperature': 0.0, 'avg_logprob': -0.17440269871761924, 'compression_ratio': 1.590717299578059, 'no_speech_prob': 0.3987509310245514}]