[{'id': 0, 'seek': 0, 'start': 0.0, 'end': 15.52, 'text': ' So, if you look at this code here, once you draw this CFG, you will find that here is', 'tokens': [50364, 407, 11, 498, 291, 574, 412, 341, 3089, 510, 11, 1564, 291, 2642, 341, 21792, 38, 11, 291, 486, 915, 300, 510, 307, 51140], 'temperature': 0.0, 'avg_logprob': -0.23018453179336176, 'compression_ratio': 1.75, 'no_speech_prob': 0.03840843588113785}, {'id': 1, 'seek': 0, 'start': 15.52, 'end': 16.64, 'text': ' one basic block.', 'tokens': [51140, 472, 3875, 3461, 13, 51196], 'temperature': 0.0, 'avg_logprob': -0.23018453179336176, 'compression_ratio': 1.75, 'no_speech_prob': 0.03840843588113785}, {'id': 2, 'seek': 0, 'start': 16.64, 'end': 21.72, 'text': ' From this basic block, you have one edge to this basic block.', 'tokens': [51196, 3358, 341, 3875, 3461, 11, 291, 362, 472, 4691, 281, 341, 3875, 3461, 13, 51450], 'temperature': 0.0, 'avg_logprob': -0.23018453179336176, 'compression_ratio': 1.75, 'no_speech_prob': 0.03840843588113785}, {'id': 3, 'seek': 0, 'start': 21.72, 'end': 26.12, 'text': ' You have another kind of couple of basic blocks here from which there is an edge to the block', 'tokens': [51450, 509, 362, 1071, 733, 295, 1916, 295, 3875, 8474, 510, 490, 597, 456, 307, 364, 4691, 281, 264, 3461, 51670], 'temperature': 0.0, 'avg_logprob': -0.23018453179336176, 'compression_ratio': 1.75, 'no_speech_prob': 0.03840843588113785}, {'id': 4, 'seek': 0, 'start': 26.12, 'end': 28.36, 'text': ' here, but that part is unreachable.', 'tokens': [51670, 510, 11, 457, 300, 644, 307, 517, 16226, 712, 13, 51782], 'temperature': 0.0, 'avg_logprob': -0.23018453179336176, 'compression_ratio': 1.75, 'no_speech_prob': 0.03840843588113785}, {'id': 5, 'seek': 2836, 'start': 28.919999999999998, 'end': 31.36, 'text': ' So that part goes away.', 'tokens': [50392, 407, 300, 644, 1709, 1314, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.298909837549383, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.044665493071079254}, {'id': 6, 'seek': 2836, 'start': 31.36, 'end': 39.44, 'text': ' And then you have, so I just, and then I do not need the label here.', 'tokens': [50514, 400, 550, 291, 362, 11, 370, 286, 445, 11, 293, 550, 286, 360, 406, 643, 264, 7645, 510, 13, 50918], 'temperature': 0.0, 'avg_logprob': -0.298909837549383, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.044665493071079254}, {'id': 7, 'seek': 2836, 'start': 39.44, 'end': 46.68, 'text': ' Basically, now I can, I will basic block here and edge to the next basic block.', 'tokens': [50918, 8537, 11, 586, 286, 393, 11, 286, 486, 3875, 3461, 510, 293, 4691, 281, 264, 958, 3875, 3461, 13, 51280], 'temperature': 0.0, 'avg_logprob': -0.298909837549383, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.044665493071079254}, {'id': 8, 'seek': 2836, 'start': 46.68, 'end': 50.480000000000004, 'text': ' This guy has only one successor, the bottom guy has only one predecessor.', 'tokens': [51280, 639, 2146, 575, 787, 472, 31864, 11, 264, 2767, 2146, 575, 787, 472, 34991, 13, 51470], 'temperature': 0.0, 'avg_logprob': -0.298909837549383, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.044665493071079254}, {'id': 9, 'seek': 2836, 'start': 50.480000000000004, 'end': 55.0, 'text': ' I can straighten the, do straightening.', 'tokens': [51470, 286, 393, 32777, 264, 11, 360, 2997, 4559, 13, 51696], 'temperature': 0.0, 'avg_logprob': -0.298909837549383, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.044665493071079254}, {'id': 10, 'seek': 2836, 'start': 55.0, 'end': 56.64, 'text': ' So this label is gone.', 'tokens': [51696, 407, 341, 7645, 307, 2780, 13, 51778], 'temperature': 0.0, 'avg_logprob': -0.298909837549383, 'compression_ratio': 1.6263157894736842, 'no_speech_prob': 0.044665493071079254}, {'id': 11, 'seek': 5664, 'start': 56.72, 'end': 57.72, 'text': ' I do not need.', 'tokens': [50368, 286, 360, 406, 643, 13, 50418], 'temperature': 0.0, 'avg_logprob': -0.2639272802016314, 'compression_ratio': 1.7514124293785311, 'no_speech_prob': 0.0010002987692132592}, {'id': 12, 'seek': 5664, 'start': 57.72, 'end': 66.48, 'text': ' Similarly, now here is a basic block which has, now initially this basic block had two', 'tokens': [50418, 13157, 11, 586, 510, 307, 257, 3875, 3461, 597, 575, 11, 586, 9105, 341, 3875, 3461, 632, 732, 50856], 'temperature': 0.0, 'avg_logprob': -0.2639272802016314, 'compression_ratio': 1.7514124293785311, 'no_speech_prob': 0.0010002987692132592}, {'id': 13, 'seek': 5664, 'start': 66.48, 'end': 69.48, 'text': ' parents, two predecessors.', 'tokens': [50856, 3152, 11, 732, 24874, 45700, 13, 51006], 'temperature': 0.0, 'avg_logprob': -0.2639272802016314, 'compression_ratio': 1.7514124293785311, 'no_speech_prob': 0.0010002987692132592}, {'id': 14, 'seek': 5664, 'start': 69.48, 'end': 73.16, 'text': ' Now it has only one predecessor.', 'tokens': [51006, 823, 309, 575, 787, 472, 34991, 13, 51190], 'temperature': 0.0, 'avg_logprob': -0.2639272802016314, 'compression_ratio': 1.7514124293785311, 'no_speech_prob': 0.0010002987692132592}, {'id': 15, 'seek': 5664, 'start': 73.16, 'end': 78.64, 'text': ' So because you did one optimization, it enabled one more.', 'tokens': [51190, 407, 570, 291, 630, 472, 19618, 11, 309, 15172, 472, 544, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.2639272802016314, 'compression_ratio': 1.7514124293785311, 'no_speech_prob': 0.0010002987692132592}, {'id': 16, 'seek': 5664, 'start': 78.64, 'end': 85.12, 'text': ' So now this basic block, so I have one basic block all the way here, then this, then this.', 'tokens': [51464, 407, 586, 341, 3875, 3461, 11, 370, 286, 362, 472, 3875, 3461, 439, 264, 636, 510, 11, 550, 341, 11, 550, 341, 13, 51788], 'temperature': 0.0, 'avg_logprob': -0.2639272802016314, 'compression_ratio': 1.7514124293785311, 'no_speech_prob': 0.0010002987692132592}, {'id': 17, 'seek': 8512, 'start': 85.12, 'end': 90.80000000000001, 'text': ' Now if you look at it, if you do some simple constant propagation, we have not learned', 'tokens': [50364, 823, 498, 291, 574, 412, 309, 11, 498, 291, 360, 512, 2199, 5754, 38377, 11, 321, 362, 406, 3264, 50648], 'temperature': 0.0, 'avg_logprob': -0.15927207344456723, 'compression_ratio': 1.696078431372549, 'no_speech_prob': 0.0018099835142493248}, {'id': 18, 'seek': 8512, 'start': 90.80000000000001, 'end': 94.72, 'text': ' how to do it, but that is fine.', 'tokens': [50648, 577, 281, 360, 309, 11, 457, 300, 307, 2489, 13, 50844], 'temperature': 0.0, 'avg_logprob': -0.15927207344456723, 'compression_ratio': 1.696078431372549, 'no_speech_prob': 0.0018099835142493248}, {'id': 19, 'seek': 8512, 'start': 94.72, 'end': 98.64, 'text': ' So here it is y equal to 2 and y equal to b plus 1.', 'tokens': [50844, 407, 510, 309, 307, 288, 2681, 281, 568, 293, 288, 2681, 281, 272, 1804, 502, 13, 51040], 'temperature': 0.0, 'avg_logprob': -0.15927207344456723, 'compression_ratio': 1.696078431372549, 'no_speech_prob': 0.0018099835142493248}, {'id': 20, 'seek': 8512, 'start': 98.64, 'end': 101.64, 'text': ' You have already done reaching definitions, right?', 'tokens': [51040, 509, 362, 1217, 1096, 9906, 21988, 11, 558, 30, 51190], 'temperature': 0.0, 'avg_logprob': -0.15927207344456723, 'compression_ratio': 1.696078431372549, 'no_speech_prob': 0.0018099835142493248}, {'id': 21, 'seek': 8512, 'start': 101.64, 'end': 108.68, 'text': ' The reaching definitions will tell you that this definition reaches nowhere, right?', 'tokens': [51190, 440, 9906, 21988, 486, 980, 291, 300, 341, 7123, 14235, 11159, 11, 558, 30, 51542], 'temperature': 0.0, 'avg_logprob': -0.15927207344456723, 'compression_ratio': 1.696078431372549, 'no_speech_prob': 0.0018099835142493248}, {'id': 22, 'seek': 8512, 'start': 108.68, 'end': 114.0, 'text': ' So y equal to 2, this guy will, is gone.', 'tokens': [51542, 407, 288, 2681, 281, 568, 11, 341, 2146, 486, 11, 307, 2780, 13, 51808], 'temperature': 0.0, 'avg_logprob': -0.15927207344456723, 'compression_ratio': 1.696078431372549, 'no_speech_prob': 0.0018099835142493248}, {'id': 23, 'seek': 11400, 'start': 114.0, 'end': 119.52, 'text': ' Then y equal to b plus 1, constant propagation will make it y equal to 2.', 'tokens': [50364, 1396, 288, 2681, 281, 272, 1804, 502, 11, 5754, 38377, 486, 652, 309, 288, 2681, 281, 568, 13, 50640], 'temperature': 0.0, 'avg_logprob': -0.23013994273017435, 'compression_ratio': 1.4838709677419355, 'no_speech_prob': 0.004897505510598421}, {'id': 24, 'seek': 11400, 'start': 119.52, 'end': 128.64, 'text': ' Now this b equal to 1 reaches nowhere, then x plus plus remains.', 'tokens': [50640, 823, 341, 272, 2681, 281, 502, 14235, 11159, 11, 550, 2031, 1804, 1804, 7023, 13, 51096], 'temperature': 0.0, 'avg_logprob': -0.23013994273017435, 'compression_ratio': 1.4838709677419355, 'no_speech_prob': 0.004897505510598421}, {'id': 25, 'seek': 11400, 'start': 128.64, 'end': 134.2, 'text': ' Now you have this if else, is y greater than 3?', 'tokens': [51096, 823, 291, 362, 341, 498, 1646, 11, 307, 288, 5044, 813, 805, 30, 51374], 'temperature': 0.0, 'avg_logprob': -0.23013994273017435, 'compression_ratio': 1.4838709677419355, 'no_speech_prob': 0.004897505510598421}, {'id': 26, 'seek': 11400, 'start': 134.2, 'end': 138.88, 'text': ' No, so you know that the then part is gone.', 'tokens': [51374, 883, 11, 370, 291, 458, 300, 264, 550, 644, 307, 2780, 13, 51608], 'temperature': 0.0, 'avg_logprob': -0.23013994273017435, 'compression_ratio': 1.4838709677419355, 'no_speech_prob': 0.004897505510598421}, {'id': 27, 'seek': 13888, 'start': 138.88, 'end': 144.44, 'text': ' So this is constant propagation if you do, that goes out.', 'tokens': [50364, 407, 341, 307, 5754, 38377, 498, 291, 360, 11, 300, 1709, 484, 13, 50642], 'temperature': 0.0, 'avg_logprob': -0.1711705525716146, 'compression_ratio': 1.6045197740112995, 'no_speech_prob': 0.06172481179237366}, {'id': 28, 'seek': 13888, 'start': 144.44, 'end': 152.04, 'text': ' And now I have this if, before I do, see here I have y greater than 3, the else part is', 'tokens': [50642, 400, 586, 286, 362, 341, 498, 11, 949, 286, 360, 11, 536, 510, 286, 362, 288, 5044, 813, 805, 11, 264, 1646, 644, 307, 51022], 'temperature': 0.0, 'avg_logprob': -0.1711705525716146, 'compression_ratio': 1.6045197740112995, 'no_speech_prob': 0.06172481179237366}, {'id': 29, 'seek': 13888, 'start': 152.04, 'end': 155.4, 'text': ' y is less than 3.', 'tokens': [51022, 288, 307, 1570, 813, 805, 13, 51190], 'temperature': 0.0, 'avg_logprob': -0.1711705525716146, 'compression_ratio': 1.6045197740112995, 'no_speech_prob': 0.06172481179237366}, {'id': 30, 'seek': 13888, 'start': 155.4, 'end': 160.3, 'text': ' So that means this inner if is always false.', 'tokens': [51190, 407, 300, 1355, 341, 7284, 498, 307, 1009, 7908, 13, 51435], 'temperature': 0.0, 'avg_logprob': -0.1711705525716146, 'compression_ratio': 1.6045197740112995, 'no_speech_prob': 0.06172481179237366}, {'id': 31, 'seek': 13888, 'start': 160.3, 'end': 168.24, 'text': ' So I can not only remove that part, but I can also remove this inner, okay?', 'tokens': [51435, 407, 286, 393, 406, 787, 4159, 300, 644, 11, 457, 286, 393, 611, 4159, 341, 7284, 11, 1392, 30, 51832], 'temperature': 0.0, 'avg_logprob': -0.1711705525716146, 'compression_ratio': 1.6045197740112995, 'no_speech_prob': 0.06172481179237366}, {'id': 32, 'seek': 16824, 'start': 168.32000000000002, 'end': 174.34, 'text': ' And if you are dealing with CFG, you will find that this particular block now has only', 'tokens': [50368, 400, 498, 291, 366, 6260, 365, 21792, 38, 11, 291, 486, 915, 300, 341, 1729, 3461, 586, 575, 787, 50669], 'temperature': 0.0, 'avg_logprob': -0.203010077788451, 'compression_ratio': 1.5313807531380754, 'no_speech_prob': 0.014061146415770054}, {'id': 33, 'seek': 16824, 'start': 174.34, 'end': 175.60000000000002, 'text': ' one parent.', 'tokens': [50669, 472, 2596, 13, 50732], 'temperature': 0.0, 'avg_logprob': -0.203010077788451, 'compression_ratio': 1.5313807531380754, 'no_speech_prob': 0.014061146415770054}, {'id': 34, 'seek': 16824, 'start': 175.60000000000002, 'end': 179.36, 'text': ' So you will merge those two, now I will have this if x greater than 5, y equal to y minus', 'tokens': [50732, 407, 291, 486, 22183, 729, 732, 11, 586, 286, 486, 362, 341, 498, 2031, 5044, 813, 1025, 11, 288, 2681, 281, 288, 3175, 50920], 'temperature': 0.0, 'avg_logprob': -0.203010077788451, 'compression_ratio': 1.5313807531380754, 'no_speech_prob': 0.014061146415770054}, {'id': 35, 'seek': 16824, 'start': 179.36, 'end': 181.0, 'text': ' 3.', 'tokens': [50920, 805, 13, 51002], 'temperature': 0.0, 'avg_logprob': -0.203010077788451, 'compression_ratio': 1.5313807531380754, 'no_speech_prob': 0.014061146415770054}, {'id': 36, 'seek': 16824, 'start': 181.0, 'end': 183.28, 'text': ' And now comes something trickier.', 'tokens': [51002, 400, 586, 1487, 746, 4282, 811, 13, 51116], 'temperature': 0.0, 'avg_logprob': -0.203010077788451, 'compression_ratio': 1.5313807531380754, 'no_speech_prob': 0.014061146415770054}, {'id': 37, 'seek': 16824, 'start': 183.28, 'end': 187.0, 'text': ' Now I have a while loop, while y is less than 100.', 'tokens': [51116, 823, 286, 362, 257, 1339, 6367, 11, 1339, 288, 307, 1570, 813, 2319, 13, 51302], 'temperature': 0.0, 'avg_logprob': -0.203010077788451, 'compression_ratio': 1.5313807531380754, 'no_speech_prob': 0.014061146415770054}, {'id': 38, 'seek': 16824, 'start': 187.0, 'end': 194.68, 'text': ' Your constant propagation will tell you that y is, value of y can be either 2 or minus', 'tokens': [51302, 2260, 5754, 38377, 486, 980, 291, 300, 288, 307, 11, 2158, 295, 288, 393, 312, 2139, 568, 420, 3175, 51686], 'temperature': 0.0, 'avg_logprob': -0.203010077788451, 'compression_ratio': 1.5313807531380754, 'no_speech_prob': 0.014061146415770054}, {'id': 39, 'seek': 16824, 'start': 194.68, 'end': 195.68, 'text': ' 1.', 'tokens': [51686, 502, 13, 51736], 'temperature': 0.0, 'avg_logprob': -0.203010077788451, 'compression_ratio': 1.5313807531380754, 'no_speech_prob': 0.014061146415770054}, {'id': 40, 'seek': 19568, 'start': 196.12, 'end': 200.6, 'text': ' So constant propagation, normally we keep only one constant.', 'tokens': [50386, 407, 5754, 38377, 11, 5646, 321, 1066, 787, 472, 5754, 13, 50610], 'temperature': 0.0, 'avg_logprob': -0.22647550246294806, 'compression_ratio': 1.6424870466321244, 'no_speech_prob': 0.014004183001816273}, {'id': 41, 'seek': 19568, 'start': 200.6, 'end': 206.20000000000002, 'text': ' But let us say you do something smart, we do not know what that smart thing is.', 'tokens': [50610, 583, 718, 505, 584, 291, 360, 746, 4069, 11, 321, 360, 406, 458, 437, 300, 4069, 551, 307, 13, 50890], 'temperature': 0.0, 'avg_logprob': -0.22647550246294806, 'compression_ratio': 1.6424870466321244, 'no_speech_prob': 0.014004183001816273}, {'id': 42, 'seek': 19568, 'start': 206.20000000000002, 'end': 213.12, 'text': ' Then you can say this condition is true for the first time, right?', 'tokens': [50890, 1396, 291, 393, 584, 341, 4188, 307, 2074, 337, 264, 700, 565, 11, 558, 30, 51236], 'temperature': 0.0, 'avg_logprob': -0.22647550246294806, 'compression_ratio': 1.6424870466321244, 'no_speech_prob': 0.014004183001816273}, {'id': 43, 'seek': 19568, 'start': 213.12, 'end': 214.58, 'text': ' So we will come to that.', 'tokens': [51236, 407, 321, 486, 808, 281, 300, 13, 51309], 'temperature': 0.0, 'avg_logprob': -0.22647550246294806, 'compression_ratio': 1.6424870466321244, 'no_speech_prob': 0.014004183001816273}, {'id': 44, 'seek': 19568, 'start': 214.58, 'end': 220.52, 'text': ' So we have this while loop here, we will first convert it to a do while loop, right?', 'tokens': [51309, 407, 321, 362, 341, 1339, 6367, 510, 11, 321, 486, 700, 7620, 309, 281, 257, 360, 1339, 6367, 11, 558, 30, 51606], 'temperature': 0.0, 'avg_logprob': -0.22647550246294806, 'compression_ratio': 1.6424870466321244, 'no_speech_prob': 0.014004183001816273}, {'id': 45, 'seek': 22052, 'start': 220.52, 'end': 227.28, 'text': ' Do while y is 100.', 'tokens': [50364, 1144, 1339, 288, 307, 2319, 13, 50702], 'temperature': 0.0, 'avg_logprob': -0.15228195404738523, 'compression_ratio': 1.5944444444444446, 'no_speech_prob': 0.020322592929005623}, {'id': 46, 'seek': 22052, 'start': 227.28, 'end': 231.92000000000002, 'text': ' And we know the condition is true for the first time, so we can, we do not need an if', 'tokens': [50702, 400, 321, 458, 264, 4188, 307, 2074, 337, 264, 700, 565, 11, 370, 321, 393, 11, 321, 360, 406, 643, 364, 498, 50934], 'temperature': 0.0, 'avg_logprob': -0.15228195404738523, 'compression_ratio': 1.5944444444444446, 'no_speech_prob': 0.020322592929005623}, {'id': 47, 'seek': 22052, 'start': 231.92000000000002, 'end': 233.28, 'text': ' condition on the top.', 'tokens': [50934, 4188, 322, 264, 1192, 13, 51002], 'temperature': 0.0, 'avg_logprob': -0.15228195404738523, 'compression_ratio': 1.5944444444444446, 'no_speech_prob': 0.020322592929005623}, {'id': 48, 'seek': 22052, 'start': 233.28, 'end': 237.88, 'text': ' If we did not know, then we would be forced to keep a condition that looks like this.', 'tokens': [51002, 759, 321, 630, 406, 458, 11, 550, 321, 576, 312, 7579, 281, 1066, 257, 4188, 300, 1542, 411, 341, 13, 51232], 'temperature': 0.0, 'avg_logprob': -0.15228195404738523, 'compression_ratio': 1.5944444444444446, 'no_speech_prob': 0.020322592929005623}, {'id': 49, 'seek': 22052, 'start': 237.88, 'end': 241.78, 'text': ' If y is less than 100, right?', 'tokens': [51232, 759, 288, 307, 1570, 813, 2319, 11, 558, 30, 51427], 'temperature': 0.0, 'avg_logprob': -0.15228195404738523, 'compression_ratio': 1.5944444444444446, 'no_speech_prob': 0.020322592929005623}, {'id': 50, 'seek': 22052, 'start': 241.78, 'end': 248.0, 'text': ' But in our case we know it, so we skip that.', 'tokens': [51427, 583, 294, 527, 1389, 321, 458, 309, 11, 370, 321, 10023, 300, 13, 51738], 'temperature': 0.0, 'avg_logprob': -0.15228195404738523, 'compression_ratio': 1.5944444444444446, 'no_speech_prob': 0.020322592929005623}, {'id': 51, 'seek': 24800, 'start': 248.0, 'end': 254.08, 'text': ' And now I have z equal to 4 and z equal to 5.', 'tokens': [50364, 400, 586, 286, 362, 710, 2681, 281, 1017, 293, 710, 2681, 281, 1025, 13, 50668], 'temperature': 0.0, 'avg_logprob': -0.302395458879142, 'compression_ratio': 1.4603174603174602, 'no_speech_prob': 0.20667651295661926}, {'id': 52, 'seek': 24800, 'start': 254.08, 'end': 258.28, 'text': ' This definition reaches nowhere.', 'tokens': [50668, 639, 7123, 14235, 11159, 13, 50878], 'temperature': 0.0, 'avg_logprob': -0.302395458879142, 'compression_ratio': 1.4603174603174602, 'no_speech_prob': 0.20667651295661926}, {'id': 53, 'seek': 24800, 'start': 258.28, 'end': 263.04, 'text': ' So this definition goes.', 'tokens': [50878, 407, 341, 7123, 1709, 13, 51116], 'temperature': 0.0, 'avg_logprob': -0.302395458879142, 'compression_ratio': 1.4603174603174602, 'no_speech_prob': 0.20667651295661926}, {'id': 54, 'seek': 24800, 'start': 263.04, 'end': 266.52, 'text': ' Then I have z equal to 5, this is loop invariant.', 'tokens': [51116, 1396, 286, 362, 710, 2681, 281, 1025, 11, 341, 307, 6367, 33270, 394, 13, 51290], 'temperature': 0.0, 'avg_logprob': -0.302395458879142, 'compression_ratio': 1.4603174603174602, 'no_speech_prob': 0.20667651295661926}, {'id': 55, 'seek': 24800, 'start': 266.52, 'end': 275.52, 'text': ' I will move it outside, right?', 'tokens': [51290, 286, 486, 1286, 309, 2380, 11, 558, 30, 51740], 'temperature': 0.0, 'avg_logprob': -0.302395458879142, 'compression_ratio': 1.4603174603174602, 'no_speech_prob': 0.20667651295661926}, {'id': 56, 'seek': 27552, 'start': 275.52, 'end': 284.96, 'text': ' And now I have z equal to 5 which reaches here.', 'tokens': [50364, 400, 586, 286, 362, 710, 2681, 281, 1025, 597, 14235, 510, 13, 50836], 'temperature': 0.0, 'avg_logprob': -0.31923040703161437, 'compression_ratio': 1.366412213740458, 'no_speech_prob': 0.03844930976629257}, {'id': 57, 'seek': 27552, 'start': 284.96, 'end': 291.53999999999996, 'text': ' It is a constant.', 'tokens': [50836, 467, 307, 257, 5754, 13, 51165], 'temperature': 0.0, 'avg_logprob': -0.31923040703161437, 'compression_ratio': 1.366412213740458, 'no_speech_prob': 0.03844930976629257}, {'id': 58, 'seek': 27552, 'start': 291.53999999999996, 'end': 295.08, 'text': ' So I remove that and da-da.', 'tokens': [51165, 407, 286, 4159, 300, 293, 1120, 12, 2675, 13, 51342], 'temperature': 0.0, 'avg_logprob': -0.31923040703161437, 'compression_ratio': 1.366412213740458, 'no_speech_prob': 0.03844930976629257}, {'id': 59, 'seek': 27552, 'start': 295.08, 'end': 298.52, 'text': ' I have y equal to y minus 3, what is the value of y here?', 'tokens': [51342, 286, 362, 288, 2681, 281, 288, 3175, 805, 11, 437, 307, 264, 2158, 295, 288, 510, 30, 51514], 'temperature': 0.0, 'avg_logprob': -0.31923040703161437, 'compression_ratio': 1.366412213740458, 'no_speech_prob': 0.03844930976629257}, {'id': 60, 'seek': 27552, 'start': 298.52, 'end': 299.52, 'text': ' 2.', 'tokens': [51514, 568, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.31923040703161437, 'compression_ratio': 1.366412213740458, 'no_speech_prob': 0.03844930976629257}, {'id': 61, 'seek': 27552, 'start': 299.52, 'end': 302.96, 'text': ' So 2 minus 3 is minus 1.', 'tokens': [51564, 407, 568, 3175, 805, 307, 3175, 502, 13, 51736], 'temperature': 0.0, 'avg_logprob': -0.31923040703161437, 'compression_ratio': 1.366412213740458, 'no_speech_prob': 0.03844930976629257}, {'id': 62, 'seek': 30296, 'start': 303.71999999999997, 'end': 314.23999999999995, 'text': ' This also goes and I can do couple of more things.', 'tokens': [50402, 639, 611, 1709, 293, 286, 393, 360, 1916, 295, 544, 721, 13, 50928], 'temperature': 0.0, 'avg_logprob': -0.2680232354572841, 'compression_ratio': 1.3555555555555556, 'no_speech_prob': 0.18226827681064606}, {'id': 63, 'seek': 30296, 'start': 314.23999999999995, 'end': 324.32, 'text': ' So this kind of, right.', 'tokens': [50928, 407, 341, 733, 295, 11, 558, 13, 51432], 'temperature': 0.0, 'avg_logprob': -0.2680232354572841, 'compression_ratio': 1.3555555555555556, 'no_speech_prob': 0.18226827681064606}, {'id': 64, 'seek': 30296, 'start': 324.32, 'end': 327.76, 'text': ' So now if we look at this code, right?', 'tokens': [51432, 407, 586, 498, 321, 574, 412, 341, 3089, 11, 558, 30, 51604], 'temperature': 0.0, 'avg_logprob': -0.2680232354572841, 'compression_ratio': 1.3555555555555556, 'no_speech_prob': 0.18226827681064606}, {'id': 65, 'seek': 30296, 'start': 327.76, 'end': 332.17999999999995, 'text': ' Using the techniques we have studied so far, this is what you can do.', 'tokens': [51604, 11142, 264, 7512, 321, 362, 9454, 370, 1400, 11, 341, 307, 437, 291, 393, 360, 13, 51825], 'temperature': 0.0, 'avg_logprob': -0.2680232354572841, 'compression_ratio': 1.3555555555555556, 'no_speech_prob': 0.18226827681064606}, {'id': 66, 'seek': 33218, 'start': 332.18, 'end': 337.98, 'text': ' And some of you said look, I am smart.', 'tokens': [50364, 400, 512, 295, 291, 848, 574, 11, 286, 669, 4069, 13, 50654], 'temperature': 0.0, 'avg_logprob': -0.24546926671808417, 'compression_ratio': 1.4926829268292683, 'no_speech_prob': 0.012789922766387463}, {'id': 67, 'seek': 33218, 'start': 337.98, 'end': 342.06, 'text': ' I can see that this is actually doing just a simple addition.', 'tokens': [50654, 286, 393, 536, 300, 341, 307, 767, 884, 445, 257, 2199, 4500, 13, 50858], 'temperature': 0.0, 'avg_logprob': -0.24546926671808417, 'compression_ratio': 1.4926829268292683, 'no_speech_prob': 0.012789922766387463}, {'id': 68, 'seek': 33218, 'start': 342.06, 'end': 343.06, 'text': ' Sum equal to sum.', 'tokens': [50858, 8626, 2681, 281, 2408, 13, 50908], 'temperature': 0.0, 'avg_logprob': -0.24546926671808417, 'compression_ratio': 1.4926829268292683, 'no_speech_prob': 0.012789922766387463}, {'id': 69, 'seek': 33218, 'start': 343.06, 'end': 344.06, 'text': ' So what I am adding?', 'tokens': [50908, 407, 437, 286, 669, 5127, 30, 50958], 'temperature': 0.0, 'avg_logprob': -0.24546926671808417, 'compression_ratio': 1.4926829268292683, 'no_speech_prob': 0.012789922766387463}, {'id': 70, 'seek': 33218, 'start': 344.06, 'end': 352.9, 'text': ' y, y plus 1, y plus 2, y plus 3 up till 100 from some initial value of y, right?', 'tokens': [50958, 288, 11, 288, 1804, 502, 11, 288, 1804, 568, 11, 288, 1804, 805, 493, 4288, 2319, 490, 512, 5883, 2158, 295, 288, 11, 558, 30, 51400], 'temperature': 0.0, 'avg_logprob': -0.24546926671808417, 'compression_ratio': 1.4926829268292683, 'no_speech_prob': 0.012789922766387463}, {'id': 71, 'seek': 33218, 'start': 352.9, 'end': 361.26, 'text': ' And then you applied your favorite mathematical formula and computed this whole part.', 'tokens': [51400, 400, 550, 291, 6456, 428, 2954, 18894, 8513, 293, 40610, 341, 1379, 644, 13, 51818], 'temperature': 0.0, 'avg_logprob': -0.24546926671808417, 'compression_ratio': 1.4926829268292683, 'no_speech_prob': 0.012789922766387463}, {'id': 72, 'seek': 36126, 'start': 361.34, 'end': 363.74, 'text': ' If y equal to 2, what will be the answer?', 'tokens': [50368, 759, 288, 2681, 281, 568, 11, 437, 486, 312, 264, 1867, 30, 50488], 'temperature': 0.0, 'avg_logprob': -0.24882803857326508, 'compression_ratio': 1.4779411764705883, 'no_speech_prob': 0.010649938136339188}, {'id': 73, 'seek': 36126, 'start': 363.74, 'end': 365.9, 'text': ' Else, what will be the answer?', 'tokens': [50488, 45472, 11, 437, 486, 312, 264, 1867, 30, 50596], 'temperature': 0.0, 'avg_logprob': -0.24882803857326508, 'compression_ratio': 1.4779411764705883, 'no_speech_prob': 0.010649938136339188}, {'id': 74, 'seek': 36126, 'start': 365.9, 'end': 366.98, 'text': ' That can also be done, right?', 'tokens': [50596, 663, 393, 611, 312, 1096, 11, 558, 30, 50650], 'temperature': 0.0, 'avg_logprob': -0.24882803857326508, 'compression_ratio': 1.4779411764705883, 'no_speech_prob': 0.010649938136339188}, {'id': 75, 'seek': 36126, 'start': 366.98, 'end': 375.09999999999997, 'text': ' So some of you said look, I will replace the whole do-y loop and the print to something', 'tokens': [50650, 407, 512, 295, 291, 848, 574, 11, 286, 486, 7406, 264, 1379, 360, 12, 88, 6367, 293, 264, 4482, 281, 746, 51056], 'temperature': 0.0, 'avg_logprob': -0.24882803857326508, 'compression_ratio': 1.4779411764705883, 'no_speech_prob': 0.010649938136339188}, {'id': 76, 'seek': 36126, 'start': 375.09999999999997, 'end': 376.42, 'text': ' like this.', 'tokens': [51056, 411, 341, 13, 51122], 'temperature': 0.0, 'avg_logprob': -0.24882803857326508, 'compression_ratio': 1.4779411764705883, 'no_speech_prob': 0.010649938136339188}, {'id': 77, 'seek': 37642, 'start': 376.42, 'end': 394.38, 'text': ' If y equal to 2, sum equal to something else, sum equal to something else, right?', 'tokens': [50364, 759, 288, 2681, 281, 568, 11, 2408, 2681, 281, 746, 1646, 11, 2408, 2681, 281, 746, 1646, 11, 558, 30, 51262], 'temperature': 0.0, 'avg_logprob': -0.3281010309855143, 'compression_ratio': 1.4456521739130435, 'no_speech_prob': 0.30025163292884827}, {'id': 78, 'seek': 37642, 'start': 394.38, 'end': 403.74, 'text': ' Both are same, is it?', 'tokens': [51262, 6767, 366, 912, 11, 307, 309, 30, 51730], 'temperature': 0.0, 'avg_logprob': -0.3281010309855143, 'compression_ratio': 1.4456521739130435, 'no_speech_prob': 0.30025163292884827}, {'id': 79, 'seek': 37642, 'start': 403.74, 'end': 404.74, 'text': ' You get the same answer?', 'tokens': [51730, 509, 483, 264, 912, 1867, 30, 51780], 'temperature': 0.0, 'avg_logprob': -0.3281010309855143, 'compression_ratio': 1.4456521739130435, 'no_speech_prob': 0.30025163292884827}, {'id': 80, 'seek': 37642, 'start': 404.74, 'end': 405.74, 'text': ' Yes.', 'tokens': [51780, 1079, 13, 51830], 'temperature': 0.0, 'avg_logprob': -0.3281010309855143, 'compression_ratio': 1.4456521739130435, 'no_speech_prob': 0.30025163292884827}, {'id': 81, 'seek': 40574, 'start': 406.06, 'end': 407.06, 'text': ' Really?', 'tokens': [50380, 4083, 30, 50430], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 82, 'seek': 40574, 'start': 407.06, 'end': 411.94, 'text': ' Sir, if we plug in y and sum, then it is 2 to the power minus.', 'tokens': [50430, 6144, 11, 498, 321, 5452, 294, 288, 293, 2408, 11, 550, 309, 307, 568, 281, 264, 1347, 3175, 13, 50674], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 83, 'seek': 40574, 'start': 411.94, 'end': 415.3, 'text': ' So there is something interesting that many of you have missed.', 'tokens': [50674, 407, 456, 307, 746, 1880, 300, 867, 295, 291, 362, 6721, 13, 50842], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 84, 'seek': 40574, 'start': 415.3, 'end': 417.5, 'text': ' The initial value of sum is not given.', 'tokens': [50842, 440, 5883, 2158, 295, 2408, 307, 406, 2212, 13, 50952], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 85, 'seek': 40574, 'start': 417.5, 'end': 418.5, 'text': ' Yes, sorry?', 'tokens': [50952, 1079, 11, 2597, 30, 51002], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 86, 'seek': 40574, 'start': 418.5, 'end': 419.5, 'text': ' Yes, so we do not know.', 'tokens': [51002, 1079, 11, 370, 321, 360, 406, 458, 13, 51052], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 87, 'seek': 40574, 'start': 419.5, 'end': 422.5, 'text': ' Sum equal to sum constant value.', 'tokens': [51052, 8626, 2681, 281, 2408, 5754, 2158, 13, 51202], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 88, 'seek': 40574, 'start': 422.5, 'end': 425.5, 'text': ' Sum plus sum constant value, yes.', 'tokens': [51202, 8626, 1804, 2408, 5754, 2158, 11, 2086, 13, 51352], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 89, 'seek': 40574, 'start': 425.5, 'end': 426.5, 'text': ' Both are fixed.', 'tokens': [51352, 6767, 366, 6806, 13, 51402], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 90, 'seek': 40574, 'start': 426.5, 'end': 427.5, 'text': ' Both are the same.', 'tokens': [51402, 6767, 366, 264, 912, 13, 51452], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 91, 'seek': 40574, 'start': 427.5, 'end': 428.5, 'text': ' Same for y equal to 2 or minus 2.', 'tokens': [51452, 10635, 337, 288, 2681, 281, 568, 420, 3175, 568, 13, 51502], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 92, 'seek': 40574, 'start': 428.5, 'end': 429.5, 'text': ' And they would not be same, but the formula is same.', 'tokens': [51502, 400, 436, 576, 406, 312, 912, 11, 457, 264, 8513, 307, 912, 13, 51552], 'temperature': 0.0, 'avg_logprob': -0.515139422078771, 'compression_ratio': 1.6583333333333334, 'no_speech_prob': 0.07364877313375473}, {'id': 93, 'seek': 42950, 'start': 429.5, 'end': 436.5, 'text': ' How can it be same?', 'tokens': [50364, 1012, 393, 309, 312, 912, 30, 50714], 'temperature': 0.0, 'avg_logprob': -0.5202743630660208, 'compression_ratio': 1.075268817204301, 'no_speech_prob': 0.06746665388345718}, {'id': 94, 'seek': 42950, 'start': 436.5, 'end': 447.38, 'text': ' Sir, for y we are starting from 2, next step.', 'tokens': [50714, 6144, 11, 337, 288, 321, 366, 2891, 490, 568, 11, 958, 1823, 13, 51258], 'temperature': 0.0, 'avg_logprob': -0.5202743630660208, 'compression_ratio': 1.075268817204301, 'no_speech_prob': 0.06746665388345718}, {'id': 95, 'seek': 42950, 'start': 447.38, 'end': 450.78, 'text': ' See here, let us say y is minus 1.', 'tokens': [51258, 3008, 510, 11, 718, 505, 584, 288, 307, 3175, 502, 13, 51428], 'temperature': 0.0, 'avg_logprob': -0.5202743630660208, 'compression_ratio': 1.075268817204301, 'no_speech_prob': 0.06746665388345718}, {'id': 96, 'seek': 45078, 'start': 451.78, 'end': 459.41999999999996, 'text': ' 0, 1, they cancel out, 2 to 99 and the other way is 2 to 99, right?', 'tokens': [50414, 1958, 11, 502, 11, 436, 10373, 484, 11, 568, 281, 11803, 293, 264, 661, 636, 307, 568, 281, 11803, 11, 558, 30, 50796], 'temperature': 0.0, 'avg_logprob': -0.3598424932929907, 'compression_ratio': 1.4438202247191012, 'no_speech_prob': 0.19659727811813354}, {'id': 97, 'seek': 45078, 'start': 459.41999999999996, 'end': 460.41999999999996, 'text': ' Good.', 'tokens': [50796, 2205, 13, 50846], 'temperature': 0.0, 'avg_logprob': -0.3598424932929907, 'compression_ratio': 1.4438202247191012, 'no_speech_prob': 0.19659727811813354}, {'id': 98, 'seek': 45078, 'start': 460.41999999999996, 'end': 466.41999999999996, 'text': ' So now the moral of the story is that either way you have only a single number, sum equal', 'tokens': [50846, 407, 586, 264, 9723, 295, 264, 1657, 307, 300, 2139, 636, 291, 362, 787, 257, 2167, 1230, 11, 2408, 2681, 51146], 'temperature': 0.0, 'avg_logprob': -0.3598424932929907, 'compression_ratio': 1.4438202247191012, 'no_speech_prob': 0.19659727811813354}, {'id': 99, 'seek': 45078, 'start': 466.41999999999996, 'end': 471.61999999999995, 'text': ' to sum plus sum constant.', 'tokens': [51146, 281, 2408, 1804, 2408, 5754, 13, 51406], 'temperature': 0.0, 'avg_logprob': -0.3598424932929907, 'compression_ratio': 1.4438202247191012, 'no_speech_prob': 0.19659727811813354}, {'id': 100, 'seek': 45078, 'start': 471.61999999999995, 'end': 474.61999999999995, 'text': ' What is the, anyone bother to calculate it?', 'tokens': [51406, 708, 307, 264, 11, 2878, 8677, 281, 8873, 309, 30, 51556], 'temperature': 0.0, 'avg_logprob': -0.3598424932929907, 'compression_ratio': 1.4438202247191012, 'no_speech_prob': 0.19659727811813354}, {'id': 101, 'seek': 45078, 'start': 474.61999999999995, 'end': 475.61999999999995, 'text': ' Huh?', 'tokens': [51556, 8063, 30, 51606], 'temperature': 0.0, 'avg_logprob': -0.3598424932929907, 'compression_ratio': 1.4438202247191012, 'no_speech_prob': 0.19659727811813354}, {'id': 102, 'seek': 45078, 'start': 475.61999999999995, 'end': 476.61999999999995, 'text': ' 4949.', 'tokens': [51606, 16513, 14938, 13, 51656], 'temperature': 0.0, 'avg_logprob': -0.3598424932929907, 'compression_ratio': 1.4438202247191012, 'no_speech_prob': 0.19659727811813354}, {'id': 103, 'seek': 45078, 'start': 476.61999999999995, 'end': 477.61999999999995, 'text': ' 4949, is it?', 'tokens': [51656, 16513, 14938, 11, 307, 309, 30, 51706], 'temperature': 0.0, 'avg_logprob': -0.3598424932929907, 'compression_ratio': 1.4438202247191012, 'no_speech_prob': 0.19659727811813354}, {'id': 104, 'seek': 47762, 'start': 478.46, 'end': 481.46, 'text': ' All of you are in the, I have not calculated it.', 'tokens': [50406, 1057, 295, 291, 366, 294, 264, 11, 286, 362, 406, 15598, 309, 13, 50556], 'temperature': 0.0, 'avg_logprob': -0.3818584903255924, 'compression_ratio': 1.516304347826087, 'no_speech_prob': 0.0163507591933012}, {'id': 105, 'seek': 47762, 'start': 481.46, 'end': 484.46, 'text': ' If you say it, I will just take it.', 'tokens': [50556, 759, 291, 584, 309, 11, 286, 486, 445, 747, 309, 13, 50706], 'temperature': 0.0, 'avg_logprob': -0.3818584903255924, 'compression_ratio': 1.516304347826087, 'no_speech_prob': 0.0163507591933012}, {'id': 106, 'seek': 47762, 'start': 484.46, 'end': 486.38, 'text': ' Okay, wow.', 'tokens': [50706, 1033, 11, 6076, 13, 50802], 'temperature': 0.0, 'avg_logprob': -0.3818584903255924, 'compression_ratio': 1.516304347826087, 'no_speech_prob': 0.0163507591933012}, {'id': 107, 'seek': 47762, 'start': 486.38, 'end': 492.3, 'text': ' So this whole thing is gone.', 'tokens': [50802, 407, 341, 1379, 551, 307, 2780, 13, 51098], 'temperature': 0.0, 'avg_logprob': -0.3818584903255924, 'compression_ratio': 1.516304347826087, 'no_speech_prob': 0.0163507591933012}, {'id': 108, 'seek': 47762, 'start': 492.3, 'end': 501.86, 'text': ' The print sum will go and I will replace it with sum and now can we remove this as well?', 'tokens': [51098, 440, 4482, 2408, 486, 352, 293, 286, 486, 7406, 309, 365, 2408, 293, 586, 393, 321, 4159, 341, 382, 731, 30, 51576], 'temperature': 0.0, 'avg_logprob': -0.3818584903255924, 'compression_ratio': 1.516304347826087, 'no_speech_prob': 0.0163507591933012}, {'id': 109, 'seek': 47762, 'start': 501.86, 'end': 504.74, 'text': ' Okay, a couple of things I have.', 'tokens': [51576, 1033, 11, 257, 1916, 295, 721, 286, 362, 13, 51720], 'temperature': 0.0, 'avg_logprob': -0.3818584903255924, 'compression_ratio': 1.516304347826087, 'no_speech_prob': 0.0163507591933012}, {'id': 110, 'seek': 47762, 'start': 504.74, 'end': 507.5, 'text': ' See here is z equal to 5, right?', 'tokens': [51720, 3008, 510, 307, 710, 2681, 281, 1025, 11, 558, 30, 51858], 'temperature': 0.0, 'avg_logprob': -0.3818584903255924, 'compression_ratio': 1.516304347826087, 'no_speech_prob': 0.0163507591933012}, {'id': 111, 'seek': 50750, 'start': 507.5, 'end': 514.58, 'text': ' If this is my whole code, I can remove z equal to 5 and I can probably also remove, I can', 'tokens': [50364, 759, 341, 307, 452, 1379, 3089, 11, 286, 393, 4159, 710, 2681, 281, 1025, 293, 286, 393, 1391, 611, 4159, 11, 286, 393, 50718], 'temperature': 0.0, 'avg_logprob': -0.3031521903143989, 'compression_ratio': 1.6231884057971016, 'no_speech_prob': 0.0039441147819161415}, {'id': 112, 'seek': 50750, 'start': 514.58, 'end': 525.3, 'text': ' remove, I can remove y equal to minus, I can remove y equal to 2, I am not using it.', 'tokens': [50718, 4159, 11, 286, 393, 4159, 288, 2681, 281, 3175, 11, 286, 393, 4159, 288, 2681, 281, 568, 11, 286, 669, 406, 1228, 309, 13, 51254], 'temperature': 0.0, 'avg_logprob': -0.3031521903143989, 'compression_ratio': 1.6231884057971016, 'no_speech_prob': 0.0039441147819161415}, {'id': 113, 'seek': 50750, 'start': 525.3, 'end': 531.18, 'text': ' This goes, wait slowly, one at a time.', 'tokens': [51254, 639, 1709, 11, 1699, 5692, 11, 472, 412, 257, 565, 13, 51548], 'temperature': 0.0, 'avg_logprob': -0.3031521903143989, 'compression_ratio': 1.6231884057971016, 'no_speech_prob': 0.0039441147819161415}, {'id': 114, 'seek': 50750, 'start': 531.18, 'end': 533.14, 'text': ' So, right?', 'tokens': [51548, 407, 11, 558, 30, 51646], 'temperature': 0.0, 'avg_logprob': -0.3031521903143989, 'compression_ratio': 1.6231884057971016, 'no_speech_prob': 0.0039441147819161415}, {'id': 115, 'seek': 53314, 'start': 533.78, 'end': 539.74, 'text': ' Okay, I have, if x greater than 5, nothing, right?', 'tokens': [50396, 1033, 11, 286, 362, 11, 498, 2031, 5044, 813, 1025, 11, 1825, 11, 558, 30, 50694], 'temperature': 0.0, 'avg_logprob': -0.26437721252441404, 'compression_ratio': 1.5699481865284974, 'no_speech_prob': 0.008059384301304817}, {'id': 116, 'seek': 53314, 'start': 539.74, 'end': 541.98, 'text': ' Now can I eliminate this if condition?', 'tokens': [50694, 823, 393, 286, 13819, 341, 498, 4188, 30, 50806], 'temperature': 0.0, 'avg_logprob': -0.26437721252441404, 'compression_ratio': 1.5699481865284974, 'no_speech_prob': 0.008059384301304817}, {'id': 117, 'seek': 53314, 'start': 541.98, 'end': 548.24, 'text': ' Because the condition has no side effects, I can eliminate that as well.', 'tokens': [50806, 1436, 264, 4188, 575, 572, 1252, 5065, 11, 286, 393, 13819, 300, 382, 731, 13, 51119], 'temperature': 0.0, 'avg_logprob': -0.26437721252441404, 'compression_ratio': 1.5699481865284974, 'no_speech_prob': 0.008059384301304817}, {'id': 118, 'seek': 53314, 'start': 548.24, 'end': 557.02, 'text': ' So once I eliminate that, I do not need x plus plus.', 'tokens': [51119, 407, 1564, 286, 13819, 300, 11, 286, 360, 406, 643, 2031, 1804, 1804, 13, 51558], 'temperature': 0.0, 'avg_logprob': -0.26437721252441404, 'compression_ratio': 1.5699481865284974, 'no_speech_prob': 0.008059384301304817}, {'id': 119, 'seek': 53314, 'start': 557.02, 'end': 561.46, 'text': ' So please do not tell me in the morning all the code I wrote is only two lines of code.', 'tokens': [51558, 407, 1767, 360, 406, 980, 385, 294, 264, 2446, 439, 264, 3089, 286, 4114, 307, 787, 732, 3876, 295, 3089, 13, 51780], 'temperature': 0.0, 'avg_logprob': -0.26437721252441404, 'compression_ratio': 1.5699481865284974, 'no_speech_prob': 0.008059384301304817}, {'id': 120, 'seek': 56146, 'start': 561.46, 'end': 564.98, 'text': ' No, some plus equal to.', 'tokens': [50364, 883, 11, 512, 1804, 2681, 281, 13, 50540], 'temperature': 0.0, 'avg_logprob': -0.3796098855825571, 'compression_ratio': 1.48, 'no_speech_prob': 0.0028888164088129997}, {'id': 121, 'seek': 56146, 'start': 564.98, 'end': 575.98, 'text': ' No, fine, you, whether you keep it some plus here or here, that is right.', 'tokens': [50540, 883, 11, 2489, 11, 291, 11, 1968, 291, 1066, 309, 512, 1804, 510, 420, 510, 11, 300, 307, 558, 13, 51090], 'temperature': 0.0, 'avg_logprob': -0.3796098855825571, 'compression_ratio': 1.48, 'no_speech_prob': 0.0028888164088129997}, {'id': 122, 'seek': 56146, 'start': 575.98, 'end': 582.5400000000001, 'text': ' So of these, the last optimization is something that not many compilers do, where we took', 'tokens': [51090, 407, 295, 613, 11, 264, 1036, 19618, 307, 746, 300, 406, 867, 715, 388, 433, 360, 11, 689, 321, 1890, 51418], 'temperature': 0.0, 'avg_logprob': -0.3796098855825571, 'compression_ratio': 1.48, 'no_speech_prob': 0.0028888164088129997}, {'id': 123, 'seek': 56146, 'start': 582.5400000000001, 'end': 584.4200000000001, 'text': ' the while loop and try to compute.', 'tokens': [51418, 264, 1339, 6367, 293, 853, 281, 14722, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.3796098855825571, 'compression_ratio': 1.48, 'no_speech_prob': 0.0028888164088129997}, {'id': 124, 'seek': 58442, 'start': 585.38, 'end': 592.2199999999999, 'text': ' to, if it is such a simple math, it can be done, but otherwise it is harder.', 'tokens': [50412, 281, 11, 498, 309, 307, 1270, 257, 2199, 5221, 11, 309, 393, 312, 1096, 11, 457, 5911, 309, 307, 6081, 13, 50754], 'temperature': 0.0, 'avg_logprob': -0.2388911823649983, 'compression_ratio': 1.5472636815920398, 'no_speech_prob': 0.050317589193582535}, {'id': 125, 'seek': 58442, 'start': 592.2199999999999, 'end': 596.5799999999999, 'text': " The other thing which is hard is y's value is it minus 1 or 2, right?", 'tokens': [50754, 440, 661, 551, 597, 307, 1152, 307, 288, 311, 2158, 307, 309, 3175, 502, 420, 568, 11, 558, 30, 50972], 'temperature': 0.0, 'avg_logprob': -0.2388911823649983, 'compression_ratio': 1.5472636815920398, 'no_speech_prob': 0.050317589193582535}, {'id': 126, 'seek': 58442, 'start': 596.5799999999999, 'end': 600.26, 'text': ' And then you merge both of them into a single, you say hey, both of them will have compute', 'tokens': [50972, 400, 550, 291, 22183, 1293, 295, 552, 666, 257, 2167, 11, 291, 584, 4177, 11, 1293, 295, 552, 486, 362, 14722, 51156], 'temperature': 0.0, 'avg_logprob': -0.2388911823649983, 'compression_ratio': 1.5472636815920398, 'no_speech_prob': 0.050317589193582535}, {'id': 127, 'seek': 58442, 'start': 600.26, 'end': 601.26, 'text': ' the same value.', 'tokens': [51156, 264, 912, 2158, 13, 51206], 'temperature': 0.0, 'avg_logprob': -0.2388911823649983, 'compression_ratio': 1.5472636815920398, 'no_speech_prob': 0.050317589193582535}, {'id': 128, 'seek': 58442, 'start': 601.26, 'end': 610.06, 'text': ' That is a bit of math and a compiler may not normally do.', 'tokens': [51206, 663, 307, 257, 857, 295, 5221, 293, 257, 31958, 815, 406, 5646, 360, 13, 51646], 'temperature': 0.0, 'avg_logprob': -0.2388911823649983, 'compression_ratio': 1.5472636815920398, 'no_speech_prob': 0.050317589193582535}, {'id': 129, 'seek': 61006, 'start': 610.6999999999999, 'end': 632.7399999999999, 'text': ' No, it is not always you can identify that.', 'tokens': [50396, 883, 11, 309, 307, 406, 1009, 291, 393, 5876, 300, 13, 51498], 'temperature': 0.0, 'avg_logprob': -0.4043056435055203, 'compression_ratio': 1.161904761904762, 'no_speech_prob': 0.12246834486722946}, {'id': 130, 'seek': 61006, 'start': 632.7399999999999, 'end': 634.5, 'text': ' And then compute the closed form expression.', 'tokens': [51498, 400, 550, 14722, 264, 5395, 1254, 6114, 13, 51586], 'temperature': 0.0, 'avg_logprob': -0.4043056435055203, 'compression_ratio': 1.161904761904762, 'no_speech_prob': 0.12246834486722946}, {'id': 131, 'seek': 61006, 'start': 634.5, 'end': 637.0999999999999, 'text': ' That is what you guys did, right?', 'tokens': [51586, 663, 307, 437, 291, 1074, 630, 11, 558, 30, 51716], 'temperature': 0.0, 'avg_logprob': -0.4043056435055203, 'compression_ratio': 1.161904761904762, 'no_speech_prob': 0.12246834486722946}, {'id': 132, 'seek': 63710, 'start': 637.14, 'end': 641.86, 'text': ' You took the do while loop, you took the, computed the closed form expression.', 'tokens': [50366, 509, 1890, 264, 360, 1339, 6367, 11, 291, 1890, 264, 11, 40610, 264, 5395, 1254, 6114, 13, 50602], 'temperature': 0.0, 'avg_logprob': -0.2435835409855497, 'compression_ratio': 1.5737704918032787, 'no_speech_prob': 0.06949343532323837}, {'id': 133, 'seek': 63710, 'start': 641.86, 'end': 649.14, 'text': ' From that you said hey, I can actually reduce the closed form expression to a single number.', 'tokens': [50602, 3358, 300, 291, 848, 4177, 11, 286, 393, 767, 5407, 264, 5395, 1254, 6114, 281, 257, 2167, 1230, 13, 50966], 'temperature': 0.0, 'avg_logprob': -0.2435835409855497, 'compression_ratio': 1.5737704918032787, 'no_speech_prob': 0.06949343532323837}, {'id': 134, 'seek': 63710, 'start': 649.14, 'end': 656.14, 'text': ' That is what was that.', 'tokens': [50966, 663, 307, 437, 390, 300, 13, 51316], 'temperature': 0.0, 'avg_logprob': -0.2435835409855497, 'compression_ratio': 1.5737704918032787, 'no_speech_prob': 0.06949343532323837}, {'id': 135, 'seek': 63710, 'start': 656.14, 'end': 666.94, 'text': ' I think researchers understand and the developers know about these techniques, but as I said,', 'tokens': [51316, 286, 519, 10309, 1223, 293, 264, 8849, 458, 466, 613, 7512, 11, 457, 382, 286, 848, 11, 51856], 'temperature': 0.0, 'avg_logprob': -0.2435835409855497, 'compression_ratio': 1.5737704918032787, 'no_speech_prob': 0.06949343532323837}, {'id': 136, 'seek': 66694, 'start': 667.7800000000001, 'end': 673.86, 'text': ' unless the pattern is something obviously simple, it is not easy to come up with closed', 'tokens': [50406, 5969, 264, 5102, 307, 746, 2745, 2199, 11, 309, 307, 406, 1858, 281, 808, 493, 365, 5395, 50710], 'temperature': 0.0, 'avg_logprob': -0.20423227475013261, 'compression_ratio': 1.5360824742268042, 'no_speech_prob': 0.012416386045515537}, {'id': 137, 'seek': 66694, 'start': 673.86, 'end': 675.86, 'text': ' form expressions in arbitrary code.', 'tokens': [50710, 1254, 15277, 294, 23211, 3089, 13, 50810], 'temperature': 0.0, 'avg_logprob': -0.20423227475013261, 'compression_ratio': 1.5360824742268042, 'no_speech_prob': 0.012416386045515537}, {'id': 138, 'seek': 66694, 'start': 675.86, 'end': 685.22, 'text': ' You know, but I can have arbitrary code in between, right?', 'tokens': [50810, 509, 458, 11, 457, 286, 393, 362, 23211, 3089, 294, 1296, 11, 558, 30, 51278], 'temperature': 0.0, 'avg_logprob': -0.20423227475013261, 'compression_ratio': 1.5360824742268042, 'no_speech_prob': 0.012416386045515537}, {'id': 139, 'seek': 66694, 'start': 685.22, 'end': 686.22, 'text': ' That makes it hard.', 'tokens': [51278, 663, 1669, 309, 1152, 13, 51328], 'temperature': 0.0, 'avg_logprob': -0.20423227475013261, 'compression_ratio': 1.5360824742268042, 'no_speech_prob': 0.012416386045515537}, {'id': 140, 'seek': 66694, 'start': 686.22, 'end': 692.3000000000001, 'text': ' See, if the code is simple, it can be done and I am pretty sure we can find prior work', 'tokens': [51328, 3008, 11, 498, 264, 3089, 307, 2199, 11, 309, 393, 312, 1096, 293, 286, 669, 1238, 988, 321, 393, 915, 4059, 589, 51632], 'temperature': 0.0, 'avg_logprob': -0.20423227475013261, 'compression_ratio': 1.5360824742268042, 'no_speech_prob': 0.012416386045515537}, {'id': 141, 'seek': 66694, 'start': 692.3000000000001, 'end': 693.3000000000001, 'text': ' on that.', 'tokens': [51632, 322, 300, 13, 51682], 'temperature': 0.0, 'avg_logprob': -0.20423227475013261, 'compression_ratio': 1.5360824742268042, 'no_speech_prob': 0.012416386045515537}, {'id': 142, 'seek': 69330, 'start': 693.66, 'end': 694.66, 'text': ' Okay.', 'tokens': [50382, 1033, 13, 50432], 'temperature': 0.0, 'avg_logprob': -0.27803589957101005, 'compression_ratio': 1.463855421686747, 'no_speech_prob': 0.06157791242003441}, {'id': 143, 'seek': 69330, 'start': 694.66, 'end': 704.8599999999999, 'text': ' Yes, that can also be done.', 'tokens': [50432, 1079, 11, 300, 393, 611, 312, 1096, 13, 50942], 'temperature': 0.0, 'avg_logprob': -0.27803589957101005, 'compression_ratio': 1.463855421686747, 'no_speech_prob': 0.06157791242003441}, {'id': 144, 'seek': 69330, 'start': 704.8599999999999, 'end': 707.8599999999999, 'text': ' What is your name?', 'tokens': [50942, 708, 307, 428, 1315, 30, 51092], 'temperature': 0.0, 'avg_logprob': -0.27803589957101005, 'compression_ratio': 1.463855421686747, 'no_speech_prob': 0.06157791242003441}, {'id': 145, 'seek': 69330, 'start': 707.8599999999999, 'end': 716.54, 'text': ' Atharva is saying if all my, if I have a piece of code in which some variables, values are', 'tokens': [51092, 16487, 289, 2757, 307, 1566, 498, 439, 452, 11, 498, 286, 362, 257, 2522, 295, 3089, 294, 597, 512, 9102, 11, 4190, 366, 51526], 'temperature': 0.0, 'avg_logprob': -0.27803589957101005, 'compression_ratio': 1.463855421686747, 'no_speech_prob': 0.06157791242003441}, {'id': 146, 'seek': 69330, 'start': 716.54, 'end': 720.4599999999999, 'text': ' already there or some variables are assigned some constants and I am doing some evaluation', 'tokens': [51526, 1217, 456, 420, 512, 9102, 366, 13279, 512, 35870, 293, 286, 669, 884, 512, 13344, 51722], 'temperature': 0.0, 'avg_logprob': -0.27803589957101005, 'compression_ratio': 1.463855421686747, 'no_speech_prob': 0.06157791242003441}, {'id': 147, 'seek': 69330, 'start': 720.4599999999999, 'end': 721.4599999999999, 'text': ' on that.', 'tokens': [51722, 322, 300, 13, 51772], 'temperature': 0.0, 'avg_logprob': -0.27803589957101005, 'compression_ratio': 1.463855421686747, 'no_speech_prob': 0.06157791242003441}, {'id': 148, 'seek': 72146, 'start': 721.62, 'end': 728.1800000000001, 'text': ' Why cannot the compiler partially evaluate that part and plug in that code?', 'tokens': [50372, 1545, 2644, 264, 31958, 18886, 13059, 300, 644, 293, 5452, 294, 300, 3089, 30, 50700], 'temperature': 0.0, 'avg_logprob': -0.259118914604187, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.0012442952720448375}, {'id': 149, 'seek': 72146, 'start': 728.1800000000001, 'end': 729.1800000000001, 'text': ' That also happens.', 'tokens': [50700, 663, 611, 2314, 13, 50750], 'temperature': 0.0, 'avg_logprob': -0.259118914604187, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.0012442952720448375}, {'id': 150, 'seek': 72146, 'start': 729.1800000000001, 'end': 731.38, 'text': ' Those who are interested read about partial evaluation.', 'tokens': [50750, 3950, 567, 366, 3102, 1401, 466, 14641, 13344, 13, 50860], 'temperature': 0.0, 'avg_logprob': -0.259118914604187, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.0012442952720448375}, {'id': 151, 'seek': 72146, 'start': 731.38, 'end': 732.38, 'text': ' Okay.', 'tokens': [50860, 1033, 13, 50910], 'temperature': 0.0, 'avg_logprob': -0.259118914604187, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.0012442952720448375}, {'id': 152, 'seek': 72146, 'start': 732.38, 'end': 739.94, 'text': ' People do a lot of work on that.', 'tokens': [50910, 3432, 360, 257, 688, 295, 589, 322, 300, 13, 51288], 'temperature': 0.0, 'avg_logprob': -0.259118914604187, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.0012442952720448375}, {'id': 153, 'seek': 72146, 'start': 739.94, 'end': 747.4200000000001, 'text': ' But anyway, moral of the story was the code that, the optimizations that we did yesterday', 'tokens': [51288, 583, 4033, 11, 9723, 295, 264, 1657, 390, 264, 3089, 300, 11, 264, 5028, 14455, 300, 321, 630, 5186, 51662], 'temperature': 0.0, 'avg_logprob': -0.259118914604187, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.0012442952720448375}, {'id': 154, 'seek': 72146, 'start': 747.4200000000001, 'end': 749.86, 'text': ' can be very effective, right?', 'tokens': [51662, 393, 312, 588, 4942, 11, 558, 30, 51784], 'temperature': 0.0, 'avg_logprob': -0.259118914604187, 'compression_ratio': 1.522167487684729, 'no_speech_prob': 0.0012442952720448375}, {'id': 155, 'seek': 74986, 'start': 750.26, 'end': 756.26, 'text': ' I mean, do you see any link between this and this, right?', 'tokens': [50384, 286, 914, 11, 360, 291, 536, 604, 2113, 1296, 341, 293, 341, 11, 558, 30, 50684], 'temperature': 0.0, 'avg_logprob': -0.32523083157009547, 'compression_ratio': 1.5494505494505495, 'no_speech_prob': 0.06364477425813675}, {'id': 156, 'seek': 74986, 'start': 756.26, 'end': 763.26, 'text': ' And Ujwal, to be able to say that this and this are equivalent is pretty hard, right?', 'tokens': [50684, 400, 624, 73, 29530, 11, 281, 312, 1075, 281, 584, 300, 341, 293, 341, 366, 10344, 307, 1238, 1152, 11, 558, 30, 51034], 'temperature': 0.0, 'avg_logprob': -0.32523083157009547, 'compression_ratio': 1.5494505494505495, 'no_speech_prob': 0.06364477425813675}, {'id': 157, 'seek': 74986, 'start': 763.26, 'end': 766.26, 'text': ' We are talking something else in the morning.', 'tokens': [51034, 492, 366, 1417, 746, 1646, 294, 264, 2446, 13, 51184], 'temperature': 0.0, 'avg_logprob': -0.32523083157009547, 'compression_ratio': 1.5494505494505495, 'no_speech_prob': 0.06364477425813675}, {'id': 158, 'seek': 74986, 'start': 766.26, 'end': 767.26, 'text': ' Okay.', 'tokens': [51184, 1033, 13, 51234], 'temperature': 0.0, 'avg_logprob': -0.32523083157009547, 'compression_ratio': 1.5494505494505495, 'no_speech_prob': 0.06364477425813675}, {'id': 159, 'seek': 74986, 'start': 767.26, 'end': 769.26, 'text': ' Any questions on this so far?', 'tokens': [51234, 2639, 1651, 322, 341, 370, 1400, 30, 51334], 'temperature': 0.0, 'avg_logprob': -0.32523083157009547, 'compression_ratio': 1.5494505494505495, 'no_speech_prob': 0.06364477425813675}, {'id': 160, 'seek': 74986, 'start': 769.26, 'end': 770.26, 'text': ' Okay.', 'tokens': [51334, 1033, 13, 51384], 'temperature': 0.0, 'avg_logprob': -0.32523083157009547, 'compression_ratio': 1.5494505494505495, 'no_speech_prob': 0.06364477425813675}, {'id': 161, 'seek': 74986, 'start': 770.26, 'end': 771.26, 'text': ' Then, what I will do?', 'tokens': [51384, 1396, 11, 437, 286, 486, 360, 30, 51434], 'temperature': 0.0, 'avg_logprob': -0.32523083157009547, 'compression_ratio': 1.5494505494505495, 'no_speech_prob': 0.06364477425813675}, {'id': 162, 'seek': 74986, 'start': 771.26, 'end': 776.26, 'text': ' I will close this and, okay.', 'tokens': [51434, 286, 486, 1998, 341, 293, 11, 1392, 13, 51684], 'temperature': 0.0, 'avg_logprob': -0.32523083157009547, 'compression_ratio': 1.5494505494505495, 'no_speech_prob': 0.06364477425813675}, {'id': 163, 'seek': 77626, 'start': 776.66, 'end': 785.98, 'text': ' So, now we will start a new topic which is not actually new.', 'tokens': [50384, 407, 11, 586, 321, 486, 722, 257, 777, 4829, 597, 307, 406, 767, 777, 13, 50850], 'temperature': 0.0, 'avg_logprob': -0.24812400341033936, 'compression_ratio': 1.321917808219178, 'no_speech_prob': 0.01048166025429964}, {'id': 164, 'seek': 77626, 'start': 785.98, 'end': 793.62, 'text': ' I am told you have already been, I mean, the, Professor Shubhujit from Kanpur has already', 'tokens': [50850, 286, 669, 1907, 291, 362, 1217, 668, 11, 286, 914, 11, 264, 11, 8419, 1160, 836, 71, 4579, 270, 490, 11120, 35801, 575, 1217, 51232], 'temperature': 0.0, 'avg_logprob': -0.24812400341033936, 'compression_ratio': 1.321917808219178, 'no_speech_prob': 0.01048166025429964}, {'id': 165, 'seek': 77626, 'start': 793.62, 'end': 798.1, 'text': ' covered quite a bit of data flow analysis.', 'tokens': [51232, 5343, 1596, 257, 857, 295, 1412, 3095, 5215, 13, 51456], 'temperature': 0.0, 'avg_logprob': -0.24812400341033936, 'compression_ratio': 1.321917808219178, 'no_speech_prob': 0.01048166025429964}, {'id': 166, 'seek': 79810, 'start': 798.1, 'end': 806.3000000000001, 'text': ' I however need a few concepts to be on top of your mind or in your cache.', 'tokens': [50364, 286, 4461, 643, 257, 1326, 10392, 281, 312, 322, 1192, 295, 428, 1575, 420, 294, 428, 19459, 13, 50774], 'temperature': 0.0, 'avg_logprob': -0.20361659333512588, 'compression_ratio': 1.4861878453038675, 'no_speech_prob': 0.016779163852334023}, {'id': 167, 'seek': 79810, 'start': 806.3000000000001, 'end': 807.62, 'text': ' So, what I have done?', 'tokens': [50774, 407, 11, 437, 286, 362, 1096, 30, 50840], 'temperature': 0.0, 'avg_logprob': -0.20361659333512588, 'compression_ratio': 1.4861878453038675, 'no_speech_prob': 0.016779163852334023}, {'id': 168, 'seek': 79810, 'start': 807.62, 'end': 814.38, 'text': ' I put in some introductory material which we will call as recap, okay, which will go', 'tokens': [50840, 286, 829, 294, 512, 39048, 2527, 597, 321, 486, 818, 382, 20928, 11, 1392, 11, 597, 486, 352, 51178], 'temperature': 0.0, 'avg_logprob': -0.20361659333512588, 'compression_ratio': 1.4861878453038675, 'no_speech_prob': 0.016779163852334023}, {'id': 169, 'seek': 79810, 'start': 814.38, 'end': 820.74, 'text': ' over quickly then before we go into our material, okay.', 'tokens': [51178, 670, 2661, 550, 949, 321, 352, 666, 527, 2527, 11, 1392, 13, 51496], 'temperature': 0.0, 'avg_logprob': -0.20361659333512588, 'compression_ratio': 1.4861878453038675, 'no_speech_prob': 0.016779163852334023}, {'id': 170, 'seek': 79810, 'start': 820.74, 'end': 823.82, 'text': ' We want to do some optimization.', 'tokens': [51496, 492, 528, 281, 360, 512, 19618, 13, 51650], 'temperature': 0.0, 'avg_logprob': -0.20361659333512588, 'compression_ratio': 1.4861878453038675, 'no_speech_prob': 0.016779163852334023}, {'id': 171, 'seek': 82382, 'start': 823.82, 'end': 832.1800000000001, 'text': ' These optimizations need to understand how the data is flowing in the program and we', 'tokens': [50364, 1981, 5028, 14455, 643, 281, 1223, 577, 264, 1412, 307, 13974, 294, 264, 1461, 293, 321, 50782], 'temperature': 0.0, 'avg_logprob': -0.19881002453790195, 'compression_ratio': 1.79874213836478, 'no_speech_prob': 0.02514616772532463}, {'id': 172, 'seek': 82382, 'start': 832.1800000000001, 'end': 838.38, 'text': ' want to do data flow analysis to do this, to understand about the program.', 'tokens': [50782, 528, 281, 360, 1412, 3095, 5215, 281, 360, 341, 11, 281, 1223, 466, 264, 1461, 13, 51092], 'temperature': 0.0, 'avg_logprob': -0.19881002453790195, 'compression_ratio': 1.79874213836478, 'no_speech_prob': 0.02514616772532463}, {'id': 173, 'seek': 82382, 'start': 838.38, 'end': 847.94, 'text': ' So, data flow analysis we do so that we can provide information about how a program manipulates', 'tokens': [51092, 407, 11, 1412, 3095, 5215, 321, 360, 370, 300, 321, 393, 2893, 1589, 466, 577, 257, 1461, 9258, 26192, 51570], 'temperature': 0.0, 'avg_logprob': -0.19881002453790195, 'compression_ratio': 1.79874213836478, 'no_speech_prob': 0.02514616772532463}, {'id': 174, 'seek': 82382, 'start': 847.94, 'end': 850.1400000000001, 'text': ' the data in the program, okay.', 'tokens': [51570, 264, 1412, 294, 264, 1461, 11, 1392, 13, 51680], 'temperature': 0.0, 'avg_logprob': -0.19881002453790195, 'compression_ratio': 1.79874213836478, 'no_speech_prob': 0.02514616772532463}, {'id': 175, 'seek': 85014, 'start': 850.46, 'end': 856.98, 'text': ' So, it basically studies the behavior of the function.', 'tokens': [50380, 407, 11, 309, 1936, 5313, 264, 5223, 295, 264, 2445, 13, 50706], 'temperature': 0.0, 'avg_logprob': -0.17312049865722656, 'compression_ratio': 1.5454545454545454, 'no_speech_prob': 0.0211824681609869}, {'id': 176, 'seek': 85014, 'start': 856.98, 'end': 861.98, 'text': ' You can use the data flow analysis to build the control flow information.', 'tokens': [50706, 509, 393, 764, 264, 1412, 3095, 5215, 281, 1322, 264, 1969, 3095, 1589, 13, 50956], 'temperature': 0.0, 'avg_logprob': -0.17312049865722656, 'compression_ratio': 1.5454545454545454, 'no_speech_prob': 0.0211824681609869}, {'id': 177, 'seek': 85014, 'start': 861.98, 'end': 871.42, 'text': ' If you find that y is always 2, then you could say, hey, because y is always 2, the y greater', 'tokens': [50956, 759, 291, 915, 300, 288, 307, 1009, 568, 11, 550, 291, 727, 584, 11, 4177, 11, 570, 288, 307, 1009, 568, 11, 264, 288, 5044, 51428], 'temperature': 0.0, 'avg_logprob': -0.17312049865722656, 'compression_ratio': 1.5454545454545454, 'no_speech_prob': 0.0211824681609869}, {'id': 178, 'seek': 85014, 'start': 871.42, 'end': 874.14, 'text': ' than 3, that condition is false.', 'tokens': [51428, 813, 805, 11, 300, 4188, 307, 7908, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.17312049865722656, 'compression_ratio': 1.5454545454545454, 'no_speech_prob': 0.0211824681609869}, {'id': 179, 'seek': 87414, 'start': 875.14, 'end': 884.26, 'text': ' So, your data flow information can help refine and build control flow information, okay.', 'tokens': [50414, 407, 11, 428, 1412, 3095, 1589, 393, 854, 33906, 293, 1322, 1969, 3095, 1589, 11, 1392, 13, 50870], 'temperature': 0.0, 'avg_logprob': -0.19928853104754193, 'compression_ratio': 1.6051282051282052, 'no_speech_prob': 0.0009666880359873176}, {'id': 180, 'seek': 87414, 'start': 884.26, 'end': 886.66, 'text': ' You can use data flow analysis to understand the program.', 'tokens': [50870, 509, 393, 764, 1412, 3095, 5215, 281, 1223, 264, 1461, 13, 50990], 'temperature': 0.0, 'avg_logprob': -0.19928853104754193, 'compression_ratio': 1.6051282051282052, 'no_speech_prob': 0.0009666880359873176}, {'id': 181, 'seek': 87414, 'start': 886.66, 'end': 891.86, 'text': ' For instance, you can use it to say, hey, here is a piece of code that sorts an array,', 'tokens': [50990, 1171, 5197, 11, 291, 393, 764, 309, 281, 584, 11, 4177, 11, 510, 307, 257, 2522, 295, 3089, 300, 7527, 364, 10225, 11, 51250], 'temperature': 0.0, 'avg_logprob': -0.19928853104754193, 'compression_ratio': 1.6051282051282052, 'no_speech_prob': 0.0009666880359873176}, {'id': 182, 'seek': 87414, 'start': 891.86, 'end': 894.78, 'text': ' ascending order, right.', 'tokens': [51250, 15526, 2029, 1668, 11, 558, 13, 51396], 'temperature': 0.0, 'avg_logprob': -0.19928853104754193, 'compression_ratio': 1.6051282051282052, 'no_speech_prob': 0.0009666880359873176}, {'id': 183, 'seek': 87414, 'start': 894.78, 'end': 900.1, 'text': ' It is pretty involved but can be done in theory, right.', 'tokens': [51396, 467, 307, 1238, 3288, 457, 393, 312, 1096, 294, 5261, 11, 558, 13, 51662], 'temperature': 0.0, 'avg_logprob': -0.19928853104754193, 'compression_ratio': 1.6051282051282052, 'no_speech_prob': 0.0009666880359873176}, {'id': 184, 'seek': 90010, 'start': 901.0600000000001, 'end': 904.14, 'text': ' You can use data flow analysis to generate the model of the original program and verify', 'tokens': [50412, 509, 393, 764, 1412, 3095, 5215, 281, 8460, 264, 2316, 295, 264, 3380, 1461, 293, 16888, 50566], 'temperature': 0.0, 'avg_logprob': -0.23195207118988037, 'compression_ratio': 1.6467065868263473, 'no_speech_prob': 0.007922325283288956}, {'id': 185, 'seek': 90010, 'start': 904.14, 'end': 912.02, 'text': ' that the model is correct, okay.', 'tokens': [50566, 300, 264, 2316, 307, 3006, 11, 1392, 13, 50960], 'temperature': 0.0, 'avg_logprob': -0.23195207118988037, 'compression_ratio': 1.6467065868263473, 'no_speech_prob': 0.007922325283288956}, {'id': 186, 'seek': 90010, 'start': 912.02, 'end': 916.86, 'text': ' The key point about data flow analysis as you guys know is that it should give information', 'tokens': [50960, 440, 2141, 935, 466, 1412, 3095, 5215, 382, 291, 1074, 458, 307, 300, 309, 820, 976, 1589, 51202], 'temperature': 0.0, 'avg_logprob': -0.23195207118988037, 'compression_ratio': 1.6467065868263473, 'no_speech_prob': 0.007922325283288956}, {'id': 187, 'seek': 90010, 'start': 916.86, 'end': 924.88, 'text': ' that the program does not misrepresent what the procedure does.', 'tokens': [51202, 300, 264, 1461, 775, 406, 3346, 19919, 11662, 437, 264, 10747, 775, 13, 51603], 'temperature': 0.0, 'avg_logprob': -0.23195207118988037, 'compression_ratio': 1.6467065868263473, 'no_speech_prob': 0.007922325283288956}, {'id': 188, 'seek': 92488, 'start': 924.88, 'end': 933.8, 'text': ' When it says it may do something, that means the rest of it is not possible.', 'tokens': [50364, 1133, 309, 1619, 309, 815, 360, 746, 11, 300, 1355, 264, 1472, 295, 309, 307, 406, 1944, 13, 50810], 'temperature': 0.0, 'avg_logprob': -0.2428967519239946, 'compression_ratio': 1.7731958762886597, 'no_speech_prob': 0.010903801769018173}, {'id': 189, 'seek': 92488, 'start': 933.8, 'end': 936.16, 'text': ' The opposite of may is must not, right.', 'tokens': [50810, 440, 6182, 295, 815, 307, 1633, 406, 11, 558, 13, 50928], 'temperature': 0.0, 'avg_logprob': -0.2428967519239946, 'compression_ratio': 1.7731958762886597, 'no_speech_prob': 0.010903801769018173}, {'id': 190, 'seek': 92488, 'start': 936.16, 'end': 941.0, 'text': ' So, the data flow analysis says that something is impossible, that should be the case that', 'tokens': [50928, 407, 11, 264, 1412, 3095, 5215, 1619, 300, 746, 307, 6243, 11, 300, 820, 312, 264, 1389, 300, 51170], 'temperature': 0.0, 'avg_logprob': -0.2428967519239946, 'compression_ratio': 1.7731958762886597, 'no_speech_prob': 0.010903801769018173}, {'id': 191, 'seek': 92488, 'start': 941.0, 'end': 944.2, 'text': ' it is never possible, okay.', 'tokens': [51170, 309, 307, 1128, 1944, 11, 1392, 13, 51330], 'temperature': 0.0, 'avg_logprob': -0.2428967519239946, 'compression_ratio': 1.7731958762886597, 'no_speech_prob': 0.010903801769018173}, {'id': 192, 'seek': 92488, 'start': 944.2, 'end': 948.32, 'text': ' Data flow analysis is also done for program validation to validate that the program does', 'tokens': [51330, 11888, 3095, 5215, 307, 611, 1096, 337, 1461, 24071, 281, 29562, 300, 264, 1461, 775, 51536], 'temperature': 0.0, 'avg_logprob': -0.2428967519239946, 'compression_ratio': 1.7731958762886597, 'no_speech_prob': 0.010903801769018173}, {'id': 193, 'seek': 92488, 'start': 948.32, 'end': 949.96, 'text': ' what it says, okay.', 'tokens': [51536, 437, 309, 1619, 11, 1392, 13, 51618], 'temperature': 0.0, 'avg_logprob': -0.2428967519239946, 'compression_ratio': 1.7731958762886597, 'no_speech_prob': 0.010903801769018173}, {'id': 194, 'seek': 94996, 'start': 950.0400000000001, 'end': 959.52, 'text': ' There are different types of analysis, intra-procedural and inter-procedural analysis.', 'tokens': [50368, 821, 366, 819, 3467, 295, 5215, 11, 43358, 12, 4318, 1232, 1807, 293, 728, 12, 4318, 1232, 1807, 5215, 13, 50842], 'temperature': 0.0, 'avg_logprob': -0.22531997680664062, 'compression_ratio': 1.7914110429447854, 'no_speech_prob': 0.010217344388365746}, {'id': 195, 'seek': 94996, 'start': 959.52, 'end': 967.2800000000001, 'text': ' We will study, we will start with intra-procedural analysis, then we will touch upon inter-procedural', 'tokens': [50842, 492, 486, 2979, 11, 321, 486, 722, 365, 43358, 12, 4318, 1232, 1807, 5215, 11, 550, 321, 486, 2557, 3564, 728, 12, 4318, 1232, 1807, 51230], 'temperature': 0.0, 'avg_logprob': -0.22531997680664062, 'compression_ratio': 1.7914110429447854, 'no_speech_prob': 0.010217344388365746}, {'id': 196, 'seek': 94996, 'start': 967.2800000000001, 'end': 974.32, 'text': ' analysis, okay.', 'tokens': [51230, 5215, 11, 1392, 13, 51582], 'temperature': 0.0, 'avg_logprob': -0.22531997680664062, 'compression_ratio': 1.7914110429447854, 'no_speech_prob': 0.010217344388365746}, {'id': 197, 'seek': 94996, 'start': 974.32, 'end': 978.84, 'text': ' You have already seen iterative data flow analysis where you build a collection of data', 'tokens': [51582, 509, 362, 1217, 1612, 17138, 1166, 1412, 3095, 5215, 689, 291, 1322, 257, 5765, 295, 1412, 51808], 'temperature': 0.0, 'avg_logprob': -0.22531997680664062, 'compression_ratio': 1.7914110429447854, 'no_speech_prob': 0.010217344388365746}, {'id': 198, 'seek': 97884, 'start': 978.84, 'end': 982.48, 'text': ' flow equations, right.', 'tokens': [50364, 3095, 11787, 11, 558, 13, 50546], 'temperature': 0.0, 'avg_logprob': -0.19346051276484622, 'compression_ratio': 1.6376811594202898, 'no_speech_prob': 0.009120476432144642}, {'id': 199, 'seek': 97884, 'start': 982.48, 'end': 985.4, 'text': ' So, what is a data flow equation?', 'tokens': [50546, 407, 11, 437, 307, 257, 1412, 3095, 5367, 30, 50692], 'temperature': 0.0, 'avg_logprob': -0.19346051276484622, 'compression_ratio': 1.6376811594202898, 'no_speech_prob': 0.009120476432144642}, {'id': 200, 'seek': 97884, 'start': 985.4, 'end': 993.32, 'text': ' It tells which data may flow into which variable or which expression or different program abstractions', 'tokens': [50692, 467, 5112, 597, 1412, 815, 3095, 666, 597, 7006, 420, 597, 6114, 420, 819, 1461, 12649, 626, 51088], 'temperature': 0.0, 'avg_logprob': -0.19346051276484622, 'compression_ratio': 1.6376811594202898, 'no_speech_prob': 0.009120476432144642}, {'id': 201, 'seek': 97884, 'start': 993.32, 'end': 998.36, 'text': ' and once you have these equations, they are solved iteratively.', 'tokens': [51088, 293, 1564, 291, 362, 613, 11787, 11, 436, 366, 13041, 17138, 19020, 13, 51340], 'temperature': 0.0, 'avg_logprob': -0.19346051276484622, 'compression_ratio': 1.6376811594202898, 'no_speech_prob': 0.009120476432144642}, {'id': 202, 'seek': 97884, 'start': 998.36, 'end': 1003.88, 'text': ' What we do is we invariably start from a conservative set of initial values and continuously improve', 'tokens': [51340, 708, 321, 360, 307, 321, 33270, 1188, 722, 490, 257, 13780, 992, 295, 5883, 4190, 293, 15684, 3470, 51616], 'temperature': 0.0, 'avg_logprob': -0.19346051276484622, 'compression_ratio': 1.6376811594202898, 'no_speech_prob': 0.009120476432144642}, {'id': 203, 'seek': 97884, 'start': 1003.88, 'end': 1004.88, 'text': ' the precision.', 'tokens': [51616, 264, 18356, 13, 51666], 'temperature': 0.0, 'avg_logprob': -0.19346051276484622, 'compression_ratio': 1.6376811594202898, 'no_speech_prob': 0.009120476432144642}, {'id': 204, 'seek': 100488, 'start': 1004.92, 'end': 1012.8, 'text': ' The dominator computation yesterday, for instance, was one such example where we initially said', 'tokens': [50366, 440, 8859, 1639, 24903, 5186, 11, 337, 5197, 11, 390, 472, 1270, 1365, 689, 321, 9105, 848, 50760], 'temperature': 0.0, 'avg_logprob': -0.2454538008745979, 'compression_ratio': 1.7135922330097086, 'no_speech_prob': 0.039582617580890656}, {'id': 205, 'seek': 100488, 'start': 1012.8, 'end': 1017.76, 'text': ' for each variable, the dominators are the set of the all, sorry, for each statement,', 'tokens': [50760, 337, 1184, 7006, 11, 264, 8859, 3391, 366, 264, 992, 295, 264, 439, 11, 2597, 11, 337, 1184, 5629, 11, 51008], 'temperature': 0.0, 'avg_logprob': -0.2454538008745979, 'compression_ratio': 1.7135922330097086, 'no_speech_prob': 0.039582617580890656}, {'id': 206, 'seek': 100488, 'start': 1017.76, 'end': 1025.76, 'text': ' set of dominators are all the statements and kept on refining them, right, okay.', 'tokens': [51008, 992, 295, 8859, 3391, 366, 439, 264, 12363, 293, 4305, 322, 1895, 1760, 552, 11, 558, 11, 1392, 13, 51408], 'temperature': 0.0, 'avg_logprob': -0.2454538008745979, 'compression_ratio': 1.7135922330097086, 'no_speech_prob': 0.039582617580890656}, {'id': 207, 'seek': 100488, 'start': 1025.76, 'end': 1031.36, 'text': ' So one disadvantage of such a scheme is that initially we may be handling too large a data.', 'tokens': [51408, 407, 472, 24292, 295, 1270, 257, 12232, 307, 300, 9105, 321, 815, 312, 13175, 886, 2416, 257, 1412, 13, 51688], 'temperature': 0.0, 'avg_logprob': -0.2454538008745979, 'compression_ratio': 1.7135922330097086, 'no_speech_prob': 0.039582617580890656}, {'id': 208, 'seek': 103136, 'start': 1031.84, 'end': 1035.6, 'text': ' So what sometimes people do, they start from an aggressive set of initial values, very', 'tokens': [50388, 407, 437, 2171, 561, 360, 11, 436, 722, 490, 364, 10762, 992, 295, 5883, 4190, 11, 588, 50576], 'temperature': 0.0, 'avg_logprob': -0.21992991105565485, 'compression_ratio': 1.8112449799196788, 'no_speech_prob': 0.0029786434024572372}, {'id': 209, 'seek': 103136, 'start': 1035.6, 'end': 1040.36, 'text': ' small, kind of which is very aggressive and then continuously improve the precision, kind', 'tokens': [50576, 1359, 11, 733, 295, 597, 307, 588, 10762, 293, 550, 15684, 3470, 264, 18356, 11, 733, 50814], 'temperature': 0.0, 'avg_logprob': -0.21992991105565485, 'compression_ratio': 1.8112449799196788, 'no_speech_prob': 0.0029786434024572372}, {'id': 210, 'seek': 103136, 'start': 1040.36, 'end': 1045.1599999999999, 'text': ' of improve the precision, kind of I will make it bigger, bigger, bigger.', 'tokens': [50814, 295, 3470, 264, 18356, 11, 733, 295, 286, 486, 652, 309, 3801, 11, 3801, 11, 3801, 13, 51054], 'temperature': 0.0, 'avg_logprob': -0.21992991105565485, 'compression_ratio': 1.8112449799196788, 'no_speech_prob': 0.0029786434024572372}, {'id': 211, 'seek': 103136, 'start': 1045.1599999999999, 'end': 1049.8, 'text': ' So both are possible depending on the program, problem you are solving you can choose.', 'tokens': [51054, 407, 1293, 366, 1944, 5413, 322, 264, 1461, 11, 1154, 291, 366, 12606, 291, 393, 2826, 13, 51286], 'temperature': 0.0, 'avg_logprob': -0.21992991105565485, 'compression_ratio': 1.8112449799196788, 'no_speech_prob': 0.0029786434024572372}, {'id': 212, 'seek': 103136, 'start': 1049.8, 'end': 1053.32, 'text': ' So the advantage is the data sets are small to start with.', 'tokens': [51286, 407, 264, 5002, 307, 264, 1412, 6352, 366, 1359, 281, 722, 365, 13, 51462], 'temperature': 0.0, 'avg_logprob': -0.21992991105565485, 'compression_ratio': 1.8112449799196788, 'no_speech_prob': 0.0029786434024572372}, {'id': 213, 'seek': 103136, 'start': 1053.32, 'end': 1056.9199999999998, 'text': ' The choice mostly depends on the problem at hand, okay.', 'tokens': [51462, 440, 3922, 5240, 5946, 322, 264, 1154, 412, 1011, 11, 1392, 13, 51642], 'temperature': 0.0, 'avg_logprob': -0.21992991105565485, 'compression_ratio': 1.8112449799196788, 'no_speech_prob': 0.0029786434024572372}, {'id': 214, 'seek': 105692, 'start': 1057.48, 'end': 1062.24, 'text': ' For instance, by the way, you remember the reaching definition example, right.', 'tokens': [50392, 1171, 5197, 11, 538, 264, 636, 11, 291, 1604, 264, 9906, 7123, 1365, 11, 558, 13, 50630], 'temperature': 0.0, 'avg_logprob': -0.2778183309043326, 'compression_ratio': 1.5142857142857142, 'no_speech_prob': 0.03234121575951576}, {'id': 215, 'seek': 105692, 'start': 1062.24, 'end': 1073.24, 'text': ' So in this code, can you tell does the definition of I at line 4 reach the users in 7 and 8?', 'tokens': [50630, 407, 294, 341, 3089, 11, 393, 291, 980, 775, 264, 7123, 295, 286, 412, 1622, 1017, 2524, 264, 5022, 294, 1614, 293, 1649, 30, 51180], 'temperature': 0.0, 'avg_logprob': -0.2778183309043326, 'compression_ratio': 1.5142857142857142, 'no_speech_prob': 0.03234121575951576}, {'id': 216, 'seek': 105692, 'start': 1073.24, 'end': 1077.44, 'text': ' Does it reach yes or no?', 'tokens': [51180, 4402, 309, 2524, 2086, 420, 572, 30, 51390], 'temperature': 0.0, 'avg_logprob': -0.2778183309043326, 'compression_ratio': 1.5142857142857142, 'no_speech_prob': 0.03234121575951576}, {'id': 217, 'seek': 105692, 'start': 1077.44, 'end': 1079.88, 'text': ' Yes it may reach.', 'tokens': [51390, 1079, 309, 815, 2524, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.2778183309043326, 'compression_ratio': 1.5142857142857142, 'no_speech_prob': 0.03234121575951576}, {'id': 218, 'seek': 105692, 'start': 1079.88, 'end': 1083.44, 'text': ' But if I say, must it reach?', 'tokens': [51512, 583, 498, 286, 584, 11, 1633, 309, 2524, 30, 51690], 'temperature': 0.0, 'avg_logprob': -0.2778183309043326, 'compression_ratio': 1.5142857142857142, 'no_speech_prob': 0.03234121575951576}, {'id': 219, 'seek': 105692, 'start': 1083.44, 'end': 1086.48, 'text': ' I do not know, right.', 'tokens': [51690, 286, 360, 406, 458, 11, 558, 13, 51842], 'temperature': 0.0, 'avg_logprob': -0.2778183309043326, 'compression_ratio': 1.5142857142857142, 'no_speech_prob': 0.03234121575951576}, {'id': 220, 'seek': 108648, 'start': 1087.04, 'end': 1090.68, 'text': ' But reaching definitions, when we say mostly we talk about may and may information.', 'tokens': [50392, 583, 9906, 21988, 11, 562, 321, 584, 5240, 321, 751, 466, 815, 293, 815, 1589, 13, 50574], 'temperature': 0.0, 'avg_logprob': -0.28468340093439276, 'compression_ratio': 1.655367231638418, 'no_speech_prob': 0.0016477492172271013}, {'id': 221, 'seek': 108648, 'start': 1090.68, 'end': 1100.84, 'text': ' So using may information we say that this I in both the statements it reaches, right.', 'tokens': [50574, 407, 1228, 815, 1589, 321, 584, 300, 341, 286, 294, 1293, 264, 12363, 309, 14235, 11, 558, 13, 51082], 'temperature': 0.0, 'avg_logprob': -0.28468340093439276, 'compression_ratio': 1.655367231638418, 'no_speech_prob': 0.0016477492172271013}, {'id': 222, 'seek': 108648, 'start': 1100.84, 'end': 1111.1200000000001, 'text': ' And what about does the value of J at line 7 is computed here?', 'tokens': [51082, 400, 437, 466, 775, 264, 2158, 295, 508, 412, 1622, 1614, 307, 40610, 510, 30, 51596], 'temperature': 0.0, 'avg_logprob': -0.28468340093439276, 'compression_ratio': 1.655367231638418, 'no_speech_prob': 0.0016477492172271013}, {'id': 223, 'seek': 108648, 'start': 1111.1200000000001, 'end': 1112.44, 'text': ' Does it reach the line 10?', 'tokens': [51596, 4402, 309, 2524, 264, 1622, 1266, 30, 51662], 'temperature': 0.0, 'avg_logprob': -0.28468340093439276, 'compression_ratio': 1.655367231638418, 'no_speech_prob': 0.0016477492172271013}, {'id': 224, 'seek': 108648, 'start': 1112.44, 'end': 1115.64, 'text': ' Does it reach the use in line 10?', 'tokens': [51662, 4402, 309, 2524, 264, 764, 294, 1622, 1266, 30, 51822], 'temperature': 0.0, 'avg_logprob': -0.28468340093439276, 'compression_ratio': 1.655367231638418, 'no_speech_prob': 0.0016477492172271013}, {'id': 225, 'seek': 111564, 'start': 1115.8000000000002, 'end': 1127.44, 'text': ' Does the value, does the definition J gets here at line 7, does it reach?', 'tokens': [50372, 4402, 264, 2158, 11, 775, 264, 7123, 508, 2170, 510, 412, 1622, 1614, 11, 775, 309, 2524, 30, 50954], 'temperature': 0.0, 'avg_logprob': -0.4189474582672119, 'compression_ratio': 1.2608695652173914, 'no_speech_prob': 0.012642238289117813}, {'id': 226, 'seek': 111564, 'start': 1127.44, 'end': 1130.6000000000001, 'text': ' It may reach.', 'tokens': [50954, 467, 815, 2524, 13, 51112], 'temperature': 0.0, 'avg_logprob': -0.4189474582672119, 'compression_ratio': 1.2608695652173914, 'no_speech_prob': 0.012642238289117813}, {'id': 227, 'seek': 111564, 'start': 1130.6000000000001, 'end': 1132.6000000000001, 'text': ' Why it may not reach?', 'tokens': [51112, 1545, 309, 815, 406, 2524, 30, 51212], 'temperature': 0.0, 'avg_logprob': -0.4189474582672119, 'compression_ratio': 1.2608695652173914, 'no_speech_prob': 0.012642238289117813}, {'id': 228, 'seek': 111564, 'start': 1132.6000000000001, 'end': 1133.6000000000001, 'text': ' Sorry?', 'tokens': [51212, 4919, 30, 51262], 'temperature': 0.0, 'avg_logprob': -0.4189474582672119, 'compression_ratio': 1.2608695652173914, 'no_speech_prob': 0.012642238289117813}, {'id': 229, 'seek': 113360, 'start': 1134.56, 'end': 1149.4399999999998, 'text': ' If n is negative, if n is negative, you are saying this may not even execute.', 'tokens': [50412, 759, 297, 307, 3671, 11, 498, 297, 307, 3671, 11, 291, 366, 1566, 341, 815, 406, 754, 14483, 13, 51156], 'temperature': 0.0, 'avg_logprob': -0.2525833716759315, 'compression_ratio': 1.619047619047619, 'no_speech_prob': 0.01521008089184761}, {'id': 230, 'seek': 113360, 'start': 1149.4399999999998, 'end': 1151.7199999999998, 'text': ' Then some other definition may reach.', 'tokens': [51156, 1396, 512, 661, 7123, 815, 2524, 13, 51270], 'temperature': 0.0, 'avg_logprob': -0.2525833716759315, 'compression_ratio': 1.619047619047619, 'no_speech_prob': 0.01521008089184761}, {'id': 231, 'seek': 113360, 'start': 1151.7199999999998, 'end': 1154.4399999999998, 'text': ' Am I asking is this the only definition that may reach?', 'tokens': [51270, 2012, 286, 3365, 307, 341, 264, 787, 7123, 300, 815, 2524, 30, 51406], 'temperature': 0.0, 'avg_logprob': -0.2525833716759315, 'compression_ratio': 1.619047619047619, 'no_speech_prob': 0.01521008089184761}, {'id': 232, 'seek': 113360, 'start': 1154.4399999999998, 'end': 1155.4399999999998, 'text': ' No.', 'tokens': [51406, 883, 13, 51456], 'temperature': 0.0, 'avg_logprob': -0.2525833716759315, 'compression_ratio': 1.619047619047619, 'no_speech_prob': 0.01521008089184761}, {'id': 233, 'seek': 113360, 'start': 1155.4399999999998, 'end': 1162.12, 'text': ' I am saying, is it guaranteed that this definition will reach?', 'tokens': [51456, 286, 669, 1566, 11, 307, 309, 18031, 300, 341, 7123, 486, 2524, 30, 51790], 'temperature': 0.0, 'avg_logprob': -0.2525833716759315, 'compression_ratio': 1.619047619047619, 'no_speech_prob': 0.01521008089184761}, {'id': 234, 'seek': 116212, 'start': 1162.6399999999999, 'end': 1165.6399999999999, 'text': ' No, why not?', 'tokens': [50390, 883, 11, 983, 406, 30, 50540], 'temperature': 0.0, 'avg_logprob': -0.3690901279449463, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.03713100403547287}, {'id': 235, 'seek': 116212, 'start': 1165.6399999999999, 'end': 1166.6399999999999, 'text': ' Correct.', 'tokens': [50540, 12753, 13, 50590], 'temperature': 0.0, 'avg_logprob': -0.3690901279449463, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.03713100403547287}, {'id': 236, 'seek': 116212, 'start': 1166.6399999999999, 'end': 1169.6399999999999, 'text': ' Okay, so?', 'tokens': [50590, 1033, 11, 370, 30, 50740], 'temperature': 0.0, 'avg_logprob': -0.3690901279449463, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.03713100403547287}, {'id': 237, 'seek': 116212, 'start': 1169.6399999999999, 'end': 1181.6399999999999, 'text': ' So, will the definition of this J, whatever the I that may get, I may change or not I', 'tokens': [50740, 407, 11, 486, 264, 7123, 295, 341, 508, 11, 2035, 264, 286, 300, 815, 483, 11, 286, 815, 1319, 420, 406, 286, 51340], 'temperature': 0.0, 'avg_logprob': -0.3690901279449463, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.03713100403547287}, {'id': 238, 'seek': 116212, 'start': 1181.6399999999999, 'end': 1183.28, 'text': ' do not know at this time.', 'tokens': [51340, 360, 406, 458, 412, 341, 565, 13, 51422], 'temperature': 0.0, 'avg_logprob': -0.3690901279449463, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.03713100403547287}, {'id': 239, 'seek': 116212, 'start': 1183.28, 'end': 1187.56, 'text': ' I am getting there is some definition here.', 'tokens': [51422, 286, 669, 1242, 456, 307, 512, 7123, 510, 13, 51636], 'temperature': 0.0, 'avg_logprob': -0.3690901279449463, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.03713100403547287}, {'id': 240, 'seek': 116212, 'start': 1187.56, 'end': 1188.56, 'text': ' Will it reach here?', 'tokens': [51636, 3099, 309, 2524, 510, 30, 51686], 'temperature': 0.0, 'avg_logprob': -0.3690901279449463, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.03713100403547287}, {'id': 241, 'seek': 116212, 'start': 1188.56, 'end': 1190.7199999999998, 'text': ' Is it guaranteed to reach that point?', 'tokens': [51686, 1119, 309, 18031, 281, 2524, 300, 935, 30, 51794], 'temperature': 0.0, 'avg_logprob': -0.3690901279449463, 'compression_ratio': 1.4848484848484849, 'no_speech_prob': 0.03713100403547287}, {'id': 242, 'seek': 119072, 'start': 1191.32, 'end': 1194.72, 'text': ' Assuming the while loop is, I enter the while loop.', 'tokens': [50394, 6281, 24919, 264, 1339, 6367, 307, 11, 286, 3242, 264, 1339, 6367, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.35472032883588006, 'compression_ratio': 1.5773809523809523, 'no_speech_prob': 0.002271306002512574}, {'id': 243, 'seek': 119072, 'start': 1194.72, 'end': 1202.2, 'text': ' Still no guarantee, why not?', 'tokens': [50564, 8291, 572, 10815, 11, 983, 406, 30, 50938], 'temperature': 0.0, 'avg_logprob': -0.35472032883588006, 'compression_ratio': 1.5773809523809523, 'no_speech_prob': 0.002271306002512574}, {'id': 244, 'seek': 119072, 'start': 1202.2, 'end': 1205.76, 'text': ' What happens in the G function?', 'tokens': [50938, 708, 2314, 294, 264, 460, 2445, 30, 51116], 'temperature': 0.0, 'avg_logprob': -0.35472032883588006, 'compression_ratio': 1.5773809523809523, 'no_speech_prob': 0.002271306002512574}, {'id': 245, 'seek': 119072, 'start': 1205.76, 'end': 1208.88, 'text': ' So what may happen?', 'tokens': [51116, 407, 437, 815, 1051, 30, 51272], 'temperature': 0.0, 'avg_logprob': -0.35472032883588006, 'compression_ratio': 1.5773809523809523, 'no_speech_prob': 0.002271306002512574}, {'id': 246, 'seek': 119072, 'start': 1208.88, 'end': 1210.88, 'text': ' It can be infinite loop, right?', 'tokens': [51272, 467, 393, 312, 13785, 6367, 11, 558, 30, 51372], 'temperature': 0.0, 'avg_logprob': -0.35472032883588006, 'compression_ratio': 1.5773809523809523, 'no_speech_prob': 0.002271306002512574}, {'id': 247, 'seek': 119072, 'start': 1210.88, 'end': 1213.32, 'text': ' If it is an infinite loop, it may not reach.', 'tokens': [51372, 759, 309, 307, 364, 13785, 6367, 11, 309, 815, 406, 2524, 13, 51494], 'temperature': 0.0, 'avg_logprob': -0.35472032883588006, 'compression_ratio': 1.5773809523809523, 'no_speech_prob': 0.002271306002512574}, {'id': 248, 'seek': 119072, 'start': 1213.32, 'end': 1219.3600000000001, 'text': ' So, yeah, so there can be, you can even terminate in G.', 'tokens': [51494, 407, 11, 1338, 11, 370, 456, 393, 312, 11, 291, 393, 754, 10761, 473, 294, 460, 13, 51796], 'temperature': 0.0, 'avg_logprob': -0.35472032883588006, 'compression_ratio': 1.5773809523809523, 'no_speech_prob': 0.002271306002512574}, {'id': 249, 'seek': 121936, 'start': 1219.36, 'end': 1224.04, 'text': ' And if you want to be paranoid like that, you can even have an exception inside that,', 'tokens': [50364, 400, 498, 291, 528, 281, 312, 43948, 411, 300, 11, 291, 393, 754, 362, 364, 11183, 1854, 300, 11, 50598], 'temperature': 0.0, 'avg_logprob': -0.2179494614296771, 'compression_ratio': 1.599056603773585, 'no_speech_prob': 0.0019239463144913316}, {'id': 250, 'seek': 121936, 'start': 1224.04, 'end': 1226.4399999999998, 'text': ' which will jump out, right?', 'tokens': [50598, 597, 486, 3012, 484, 11, 558, 30, 50718], 'temperature': 0.0, 'avg_logprob': -0.2179494614296771, 'compression_ratio': 1.599056603773585, 'no_speech_prob': 0.0019239463144913316}, {'id': 251, 'seek': 121936, 'start': 1226.4399999999998, 'end': 1231.6799999999998, 'text': ' So what we are saying, it may reach, right?', 'tokens': [50718, 407, 437, 321, 366, 1566, 11, 309, 815, 2524, 11, 558, 30, 50980], 'temperature': 0.0, 'avg_logprob': -0.2179494614296771, 'compression_ratio': 1.599056603773585, 'no_speech_prob': 0.0019239463144913316}, {'id': 252, 'seek': 121936, 'start': 1231.6799999999998, 'end': 1233.08, 'text': ' Make sense?', 'tokens': [50980, 4387, 2020, 30, 51050], 'temperature': 0.0, 'avg_logprob': -0.2179494614296771, 'compression_ratio': 1.599056603773585, 'no_speech_prob': 0.0019239463144913316}, {'id': 253, 'seek': 121936, 'start': 1233.08, 'end': 1237.76, 'text': ' Anyone who still does not see that this J, there is a chance that this, after you execute', 'tokens': [51050, 14643, 567, 920, 775, 406, 536, 300, 341, 508, 11, 456, 307, 257, 2931, 300, 341, 11, 934, 291, 14483, 51284], 'temperature': 0.0, 'avg_logprob': -0.2179494614296771, 'compression_ratio': 1.599056603773585, 'no_speech_prob': 0.0019239463144913316}, {'id': 254, 'seek': 121936, 'start': 1237.76, 'end': 1243.8, 'text': ' this J, I may not get this definition here, because the loop may not terminate.', 'tokens': [51284, 341, 508, 11, 286, 815, 406, 483, 341, 7123, 510, 11, 570, 264, 6367, 815, 406, 10761, 473, 13, 51586], 'temperature': 0.0, 'avg_logprob': -0.2179494614296771, 'compression_ratio': 1.599056603773585, 'no_speech_prob': 0.0019239463144913316}, {'id': 255, 'seek': 124380, 'start': 1244.24, 'end': 1251.56, 'text': ' So most of the time, when we do such analysis, we assume that all loops terminate, all branches', 'tokens': [50386, 407, 881, 295, 264, 565, 11, 562, 321, 360, 1270, 5215, 11, 321, 6552, 300, 439, 16121, 10761, 473, 11, 439, 14770, 50752], 'temperature': 0.0, 'avg_logprob': -0.3380311699800713, 'compression_ratio': 1.6111111111111112, 'no_speech_prob': 0.026727495715022087}, {'id': 256, 'seek': 124380, 'start': 1251.56, 'end': 1256.3999999999999, 'text': ' are taken, we are, when you say it is precise, it is module of those things.', 'tokens': [50752, 366, 2726, 11, 321, 366, 11, 562, 291, 584, 309, 307, 13600, 11, 309, 307, 10088, 295, 729, 721, 13, 50994], 'temperature': 0.0, 'avg_logprob': -0.3380311699800713, 'compression_ratio': 1.6111111111111112, 'no_speech_prob': 0.026727495715022087}, {'id': 257, 'seek': 124380, 'start': 1256.3999999999999, 'end': 1257.3999999999999, 'text': ' Okay.', 'tokens': [50994, 1033, 13, 51044], 'temperature': 0.0, 'avg_logprob': -0.3380311699800713, 'compression_ratio': 1.6111111111111112, 'no_speech_prob': 0.026727495715022087}, {'id': 258, 'seek': 124380, 'start': 1257.3999999999999, 'end': 1260.3999999999999, 'text': ' So you have already done reaching definition.', 'tokens': [51044, 407, 291, 362, 1217, 1096, 9906, 7123, 13, 51194], 'temperature': 0.0, 'avg_logprob': -0.3380311699800713, 'compression_ratio': 1.6111111111111112, 'no_speech_prob': 0.026727495715022087}, {'id': 259, 'seek': 124380, 'start': 1260.3999999999999, 'end': 1261.3999999999999, 'text': ' Good.', 'tokens': [51194, 2205, 13, 51244], 'temperature': 0.0, 'avg_logprob': -0.3380311699800713, 'compression_ratio': 1.6111111111111112, 'no_speech_prob': 0.026727495715022087}, {'id': 260, 'seek': 124380, 'start': 1261.3999999999999, 'end': 1268.8799999999999, 'text': ' So data flow equations behavior, so when we specify data flow equations, so for example,', 'tokens': [51244, 407, 1412, 3095, 11787, 5223, 11, 370, 562, 321, 16500, 1412, 3095, 11787, 11, 370, 337, 1365, 11, 51618], 'temperature': 0.0, 'avg_logprob': -0.3380311699800713, 'compression_ratio': 1.6111111111111112, 'no_speech_prob': 0.026727495715022087}, {'id': 261, 'seek': 126888, 'start': 1268.96, 'end': 1275.96, 'text': ' in the previous line, we kind of say, here is a definition, here is a definition, this', 'tokens': [50368, 294, 264, 3894, 1622, 11, 321, 733, 295, 584, 11, 510, 307, 257, 7123, 11, 510, 307, 257, 7123, 11, 341, 50718], 'temperature': 0.0, 'avg_logprob': -0.2383011681692941, 'compression_ratio': 1.8636363636363635, 'no_speech_prob': 0.018404942005872726}, {'id': 262, 'seek': 126888, 'start': 1275.96, 'end': 1285.48, 'text': ' definition is created in this block, and the definition is flowing through me, right?', 'tokens': [50718, 7123, 307, 2942, 294, 341, 3461, 11, 293, 264, 7123, 307, 13974, 807, 385, 11, 558, 30, 51194], 'temperature': 0.0, 'avg_logprob': -0.2383011681692941, 'compression_ratio': 1.8636363636363635, 'no_speech_prob': 0.018404942005872726}, {'id': 263, 'seek': 126888, 'start': 1285.48, 'end': 1290.6000000000001, 'text': ' So before the block, what definitions were reaching?', 'tokens': [51194, 407, 949, 264, 3461, 11, 437, 21988, 645, 9906, 30, 51450], 'temperature': 0.0, 'avg_logprob': -0.2383011681692941, 'compression_ratio': 1.8636363636363635, 'no_speech_prob': 0.018404942005872726}, {'id': 264, 'seek': 126888, 'start': 1290.6000000000001, 'end': 1295.46, 'text': ' After the block, what definitions are carried forward, right?', 'tokens': [51450, 2381, 264, 3461, 11, 437, 21988, 366, 9094, 2128, 11, 558, 30, 51693], 'temperature': 0.0, 'avg_logprob': -0.2383011681692941, 'compression_ratio': 1.8636363636363635, 'no_speech_prob': 0.018404942005872726}, {'id': 265, 'seek': 129546, 'start': 1295.46, 'end': 1303.14, 'text': ' So we call these equations as transfer equations or transfer equations or flow equations, right?', 'tokens': [50364, 407, 321, 818, 613, 11787, 382, 5003, 11787, 420, 5003, 11787, 420, 3095, 11787, 11, 558, 30, 50748], 'temperature': 0.0, 'avg_logprob': -0.1815831017872644, 'compression_ratio': 1.5961538461538463, 'no_speech_prob': 0.0014314635191112757}, {'id': 266, 'seek': 129546, 'start': 1303.14, 'end': 1310.66, 'text': ' So in the forward analysis, you know that given for a block S, how do I compute the', 'tokens': [50748, 407, 294, 264, 2128, 5215, 11, 291, 458, 300, 2212, 337, 257, 3461, 318, 11, 577, 360, 286, 14722, 264, 51124], 'temperature': 0.0, 'avg_logprob': -0.1815831017872644, 'compression_ratio': 1.5961538461538463, 'no_speech_prob': 0.0014314635191112757}, {'id': 267, 'seek': 129546, 'start': 1310.66, 'end': 1311.66, 'text': ' out?', 'tokens': [51124, 484, 30, 51174], 'temperature': 0.0, 'avg_logprob': -0.1815831017872644, 'compression_ratio': 1.5961538461538463, 'no_speech_prob': 0.0014314635191112757}, {'id': 268, 'seek': 129546, 'start': 1311.66, 'end': 1319.26, 'text': ' The out depends on its ins and what is happening inside, right?', 'tokens': [51174, 440, 484, 5946, 322, 1080, 1028, 293, 437, 307, 2737, 1854, 11, 558, 30, 51554], 'temperature': 0.0, 'avg_logprob': -0.1815831017872644, 'compression_ratio': 1.5961538461538463, 'no_speech_prob': 0.0014314635191112757}, {'id': 269, 'seek': 131926, 'start': 1319.26, 'end': 1326.8799999999999, 'text': ' So if I see whatever is happening inside is, I know is a constant, then it is a function', 'tokens': [50364, 407, 498, 286, 536, 2035, 307, 2737, 1854, 307, 11, 286, 458, 307, 257, 5754, 11, 550, 309, 307, 257, 2445, 50745], 'temperature': 0.0, 'avg_logprob': -0.2854712350027902, 'compression_ratio': 1.4181818181818182, 'no_speech_prob': 0.013188074342906475}, {'id': 270, 'seek': 131926, 'start': 1326.8799999999999, 'end': 1338.5, 'text': ' of ins, and this F encapsulates whatever is happening in the block.', 'tokens': [50745, 295, 1028, 11, 293, 341, 479, 38745, 26192, 2035, 307, 2737, 294, 264, 3461, 13, 51326], 'temperature': 0.0, 'avg_logprob': -0.2854712350027902, 'compression_ratio': 1.4181818181818182, 'no_speech_prob': 0.013188074342906475}, {'id': 271, 'seek': 133850, 'start': 1338.5, 'end': 1353.9, 'text': ' In backward analysis, I compute my in based on outs of my outs, right?', 'tokens': [50364, 682, 23897, 5215, 11, 286, 14722, 452, 294, 2361, 322, 14758, 295, 452, 14758, 11, 558, 30, 51134], 'temperature': 0.0, 'avg_logprob': -0.2102731227874756, 'compression_ratio': 1.312, 'no_speech_prob': 0.01910645142197609}, {'id': 272, 'seek': 133850, 'start': 1353.9, 'end': 1365.38, 'text': ' And the rules have an interesting property that they change the values only in one direction,', 'tokens': [51134, 400, 264, 4474, 362, 364, 1880, 4707, 300, 436, 1319, 264, 4190, 787, 294, 472, 3513, 11, 51708], 'temperature': 0.0, 'avg_logprob': -0.2102731227874756, 'compression_ratio': 1.312, 'no_speech_prob': 0.01910645142197609}, {'id': 273, 'seek': 136538, 'start': 1365.38, 'end': 1372.8200000000002, 'text': ' something like if I initially have all zeros, then from zeros it will only go to ones, it', 'tokens': [50364, 746, 411, 498, 286, 9105, 362, 439, 35193, 11, 550, 490, 35193, 309, 486, 787, 352, 281, 2306, 11, 309, 50736], 'temperature': 0.0, 'avg_logprob': -0.2992221168849779, 'compression_ratio': 1.7614213197969544, 'no_speech_prob': 0.19139879941940308}, {'id': 274, 'seek': 136538, 'start': 1372.8200000000002, 'end': 1377.7, 'text': ' will never go from one to zero, right?', 'tokens': [50736, 486, 1128, 352, 490, 472, 281, 4018, 11, 558, 30, 50980], 'temperature': 0.0, 'avg_logprob': -0.2992221168849779, 'compression_ratio': 1.7614213197969544, 'no_speech_prob': 0.19139879941940308}, {'id': 275, 'seek': 136538, 'start': 1377.7, 'end': 1382.0800000000002, 'text': ' So basically what we are saying, the information is going only in one progressing one direction,', 'tokens': [50980, 407, 1936, 437, 321, 366, 1566, 11, 264, 1589, 307, 516, 787, 294, 472, 36305, 472, 3513, 11, 51199], 'temperature': 0.0, 'avg_logprob': -0.2992221168849779, 'compression_ratio': 1.7614213197969544, 'no_speech_prob': 0.19139879941940308}, {'id': 276, 'seek': 136538, 'start': 1382.0800000000002, 'end': 1389.46, 'text': ' we call it kind of intuitively that is what and we call it as monotone, what is a monotone,', 'tokens': [51199, 321, 818, 309, 733, 295, 46506, 300, 307, 437, 293, 321, 818, 309, 382, 1108, 310, 546, 11, 437, 307, 257, 1108, 310, 546, 11, 51568], 'temperature': 0.0, 'avg_logprob': -0.2992221168849779, 'compression_ratio': 1.7614213197969544, 'no_speech_prob': 0.19139879941940308}, {'id': 277, 'seek': 136538, 'start': 1389.46, 'end': 1391.5, 'text': ' we have been informed, right?', 'tokens': [51568, 321, 362, 668, 11740, 11, 558, 30, 51670], 'temperature': 0.0, 'avg_logprob': -0.2992221168849779, 'compression_ratio': 1.7614213197969544, 'no_speech_prob': 0.19139879941940308}, {'id': 278, 'seek': 139150, 'start': 1391.62, 'end': 1399.62, 'text': ' So this ensures that iterations, the process will terminate.', 'tokens': [50370, 407, 341, 28111, 300, 36540, 11, 264, 1399, 486, 10761, 473, 13, 50770], 'temperature': 0.0, 'avg_logprob': -0.40392169952392576, 'compression_ratio': 1.3706896551724137, 'no_speech_prob': 0.6739217042922974}, {'id': 279, 'seek': 139150, 'start': 1399.62, 'end': 1402.94, 'text': ' By the way, you studied about reaching definitions, right?', 'tokens': [50770, 3146, 264, 636, 11, 291, 9454, 466, 9906, 21988, 11, 558, 30, 50936], 'temperature': 0.0, 'avg_logprob': -0.40392169952392576, 'compression_ratio': 1.3706896551724137, 'no_speech_prob': 0.6739217042922974}, {'id': 280, 'seek': 139150, 'start': 1402.94, 'end': 1413.3, 'text': ' What is the use of reaching definition?', 'tokens': [50936, 708, 307, 264, 764, 295, 9906, 7123, 30, 51454], 'temperature': 0.0, 'avg_logprob': -0.40392169952392576, 'compression_ratio': 1.3706896551724137, 'no_speech_prob': 0.6739217042922974}, {'id': 281, 'seek': 141330, 'start': 1413.3, 'end': 1424.6599999999999, 'text': ' We can remove dead code, right?', 'tokens': [50364, 492, 393, 4159, 3116, 3089, 11, 558, 30, 50932], 'temperature': 0.0, 'avg_logprob': -0.3337399819317986, 'compression_ratio': 1.294871794871795, 'no_speech_prob': 0.05030711740255356}, {'id': 282, 'seek': 141330, 'start': 1424.6599999999999, 'end': 1435.26, 'text': ' We can remove dead code, what else can we do?', 'tokens': [50932, 492, 393, 4159, 3116, 3089, 11, 437, 1646, 393, 321, 360, 30, 51462], 'temperature': 0.0, 'avg_logprob': -0.3337399819317986, 'compression_ratio': 1.294871794871795, 'no_speech_prob': 0.05030711740255356}, {'id': 283, 'seek': 141330, 'start': 1435.26, 'end': 1436.26, 'text': ' You can do many things.', 'tokens': [51462, 509, 393, 360, 867, 721, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.3337399819317986, 'compression_ratio': 1.294871794871795, 'no_speech_prob': 0.05030711740255356}, {'id': 284, 'seek': 143626, 'start': 1436.42, 'end': 1444.74, 'text': ' Can you use reaching definitions to find errors in the program?', 'tokens': [50372, 1664, 291, 764, 9906, 21988, 281, 915, 13603, 294, 264, 1461, 30, 50788], 'temperature': 0.0, 'avg_logprob': -0.42141853494847076, 'compression_ratio': 1.346774193548387, 'no_speech_prob': 0.2850586473941803}, {'id': 285, 'seek': 143626, 'start': 1444.74, 'end': 1445.74, 'text': ' Such as?', 'tokens': [50788, 9653, 382, 30, 50838], 'temperature': 0.0, 'avg_logprob': -0.42141853494847076, 'compression_ratio': 1.346774193548387, 'no_speech_prob': 0.2850586473941803}, {'id': 286, 'seek': 143626, 'start': 1445.74, 'end': 1460.22, 'text': ' If there is no definition is reaching a use, then Java will say uninitialized variable,', 'tokens': [50838, 759, 456, 307, 572, 7123, 307, 9906, 257, 764, 11, 550, 10745, 486, 584, 43456, 270, 831, 1602, 7006, 11, 51562], 'temperature': 0.0, 'avg_logprob': -0.42141853494847076, 'compression_ratio': 1.346774193548387, 'no_speech_prob': 0.2850586473941803}, {'id': 287, 'seek': 143626, 'start': 1460.22, 'end': 1463.22, 'text': ' right?', 'tokens': [51562, 558, 30, 51712], 'temperature': 0.0, 'avg_logprob': -0.42141853494847076, 'compression_ratio': 1.346774193548387, 'no_speech_prob': 0.2850586473941803}, {'id': 288, 'seek': 146322, 'start': 1464.18, 'end': 1473.26, 'text': ' And because of what you have studied in the properties of lattices and fixed points, we', 'tokens': [50412, 400, 570, 295, 437, 291, 362, 9454, 294, 264, 7221, 295, 29025, 1473, 293, 6806, 2793, 11, 321, 50866], 'temperature': 0.0, 'avg_logprob': -0.15580404372442336, 'compression_ratio': 1.5180722891566265, 'no_speech_prob': 0.001673439284786582}, {'id': 289, 'seek': 146322, 'start': 1473.26, 'end': 1479.82, 'text': ' know that this iterative solution will produce an acceptable solution, right?', 'tokens': [50866, 458, 300, 341, 17138, 1166, 3827, 486, 5258, 364, 15513, 3827, 11, 558, 30, 51194], 'temperature': 0.0, 'avg_logprob': -0.15580404372442336, 'compression_ratio': 1.5180722891566265, 'no_speech_prob': 0.001673439284786582}, {'id': 290, 'seek': 146322, 'start': 1479.82, 'end': 1486.02, 'text': ' And brief summarization of the monotones, we say a function is a monotone if x is less', 'tokens': [51194, 400, 5353, 14611, 2144, 295, 264, 1108, 310, 2213, 11, 321, 584, 257, 2445, 307, 257, 1108, 310, 546, 498, 2031, 307, 1570, 51504], 'temperature': 0.0, 'avg_logprob': -0.15580404372442336, 'compression_ratio': 1.5180722891566265, 'no_speech_prob': 0.001673439284786582}, {'id': 291, 'seek': 148602, 'start': 1486.02, 'end': 1492.7, 'text': ' than y, then fx is less than fy.', 'tokens': [50364, 813, 288, 11, 550, 283, 87, 307, 1570, 813, 38777, 13, 50698], 'temperature': 0.0, 'avg_logprob': -0.23751677888812442, 'compression_ratio': 1.5810810810810811, 'no_speech_prob': 0.0566164068877697}, {'id': 292, 'seek': 148602, 'start': 1492.7, 'end': 1497.7, 'text': ' And the flow function has to model the effect of the programming language, I mean what the', 'tokens': [50698, 400, 264, 3095, 2445, 575, 281, 2316, 264, 1802, 295, 264, 9410, 2856, 11, 286, 914, 437, 264, 50948], 'temperature': 0.0, 'avg_logprob': -0.23751677888812442, 'compression_ratio': 1.5810810810810811, 'no_speech_prob': 0.0566164068877697}, {'id': 293, 'seek': 148602, 'start': 1497.7, 'end': 1503.3799999999999, 'text': ' statement does.', 'tokens': [50948, 5629, 775, 13, 51232], 'temperature': 0.0, 'avg_logprob': -0.23751677888812442, 'compression_ratio': 1.5810810810810811, 'no_speech_prob': 0.0566164068877697}, {'id': 294, 'seek': 148602, 'start': 1503.3799999999999, 'end': 1508.66, 'text': ' And we want the flow functions to be monotones because we want the process to terminate,', 'tokens': [51232, 400, 321, 528, 264, 3095, 6828, 281, 312, 1108, 310, 2213, 570, 321, 528, 264, 1399, 281, 10761, 473, 11, 51496], 'temperature': 0.0, 'avg_logprob': -0.23751677888812442, 'compression_ratio': 1.5810810810810811, 'no_speech_prob': 0.0566164068877697}, {'id': 295, 'seek': 148602, 'start': 1508.66, 'end': 1510.66, 'text': ' good.', 'tokens': [51496, 665, 13, 51596], 'temperature': 0.0, 'avg_logprob': -0.23751677888812442, 'compression_ratio': 1.5810810810810811, 'no_speech_prob': 0.0566164068877697}, {'id': 296, 'seek': 151066, 'start': 1511.3000000000002, 'end': 1521.42, 'text': ' And we say for a function f, it has reached a fixed point if f of z is equal to z, okay?', 'tokens': [50396, 400, 321, 584, 337, 257, 2445, 283, 11, 309, 575, 6488, 257, 6806, 935, 498, 283, 295, 710, 307, 2681, 281, 710, 11, 1392, 30, 50902], 'temperature': 0.0, 'avg_logprob': -0.20350364084993855, 'compression_ratio': 1.6230366492146597, 'no_speech_prob': 0.038421567529439926}, {'id': 297, 'seek': 151066, 'start': 1521.42, 'end': 1526.1000000000001, 'text': ' So that is a fixed point of a function.', 'tokens': [50902, 407, 300, 307, 257, 6806, 935, 295, 257, 2445, 13, 51136], 'temperature': 0.0, 'avg_logprob': -0.20350364084993855, 'compression_ratio': 1.6230366492146597, 'no_speech_prob': 0.038421567529439926}, {'id': 298, 'seek': 151066, 'start': 1526.1000000000001, 'end': 1531.8600000000001, 'text': ' And in our case, when we have a series of data flow equations, we compute the fixed', 'tokens': [51136, 400, 294, 527, 1389, 11, 562, 321, 362, 257, 2638, 295, 1412, 3095, 11787, 11, 321, 14722, 264, 6806, 51424], 'temperature': 0.0, 'avg_logprob': -0.20350364084993855, 'compression_ratio': 1.6230366492146597, 'no_speech_prob': 0.038421567529439926}, {'id': 299, 'seek': 151066, 'start': 1531.8600000000001, 'end': 1534.46, 'text': ' point and we call it the solution, right?', 'tokens': [51424, 935, 293, 321, 818, 309, 264, 3827, 11, 558, 30, 51554], 'temperature': 0.0, 'avg_logprob': -0.20350364084993855, 'compression_ratio': 1.6230366492146597, 'no_speech_prob': 0.038421567529439926}, {'id': 300, 'seek': 151066, 'start': 1534.46, 'end': 1540.22, 'text': ' That means we cannot define it any further, okay, good.', 'tokens': [51554, 663, 1355, 321, 2644, 6964, 309, 604, 3052, 11, 1392, 11, 665, 13, 51842], 'temperature': 0.0, 'avg_logprob': -0.20350364084993855, 'compression_ratio': 1.6230366492146597, 'no_speech_prob': 0.038421567529439926}, {'id': 301, 'seek': 154022, 'start': 1540.78, 'end': 1547.78, 'text': ' And our goal is to compute data flow equations by doing the meet over all paths.', 'tokens': [50392, 400, 527, 3387, 307, 281, 14722, 1412, 3095, 11787, 538, 884, 264, 1677, 670, 439, 14518, 13, 50742], 'temperature': 0.0, 'avg_logprob': -0.215940805129063, 'compression_ratio': 1.4908256880733946, 'no_speech_prob': 0.00030524301109835505}, {'id': 302, 'seek': 154022, 'start': 1547.78, 'end': 1549.78, 'text': ' This is covered, right?', 'tokens': [50742, 639, 307, 5343, 11, 558, 30, 50842], 'temperature': 0.0, 'avg_logprob': -0.215940805129063, 'compression_ratio': 1.4908256880733946, 'no_speech_prob': 0.00030524301109835505}, {'id': 303, 'seek': 154022, 'start': 1549.78, 'end': 1551.78, 'text': ' MOP solutions, good.', 'tokens': [50842, 376, 12059, 6547, 11, 665, 13, 50942], 'temperature': 0.0, 'avg_logprob': -0.215940805129063, 'compression_ratio': 1.4908256880733946, 'no_speech_prob': 0.00030524301109835505}, {'id': 304, 'seek': 154022, 'start': 1551.78, 'end': 1557.18, 'text': ' So we start with some prescribed information at the entry or sometimes exit and then keep', 'tokens': [50942, 407, 321, 722, 365, 512, 29099, 1589, 412, 264, 8729, 420, 2171, 11043, 293, 550, 1066, 51212], 'temperature': 0.0, 'avg_logprob': -0.215940805129063, 'compression_ratio': 1.4908256880733946, 'no_speech_prob': 0.00030524301109835505}, {'id': 305, 'seek': 154022, 'start': 1557.18, 'end': 1561.82, 'text': ' on doing either forward or backward analysis.', 'tokens': [51212, 322, 884, 2139, 2128, 420, 23897, 5215, 13, 51444], 'temperature': 0.0, 'avg_logprob': -0.215940805129063, 'compression_ratio': 1.4908256880733946, 'no_speech_prob': 0.00030524301109835505}, {'id': 306, 'seek': 154022, 'start': 1561.82, 'end': 1569.82, 'text': ' And we repeatedly apply this till we reach a fixed point, okay.', 'tokens': [51444, 400, 321, 18227, 3079, 341, 4288, 321, 2524, 257, 6806, 935, 11, 1392, 13, 51844], 'temperature': 0.0, 'avg_logprob': -0.215940805129063, 'compression_ratio': 1.4908256880733946, 'no_speech_prob': 0.00030524301109835505}, {'id': 307, 'seek': 156982, 'start': 1569.82, 'end': 1578.82, 'text': ' This is the kind of a skeleton of a forward analysis, okay?', 'tokens': [50364, 639, 307, 264, 733, 295, 257, 25204, 295, 257, 2128, 5215, 11, 1392, 30, 50814], 'temperature': 0.0, 'avg_logprob': -0.2113771282258581, 'compression_ratio': 1.462962962962963, 'no_speech_prob': 0.0017792285652831197}, {'id': 308, 'seek': 156982, 'start': 1578.82, 'end': 1585.58, 'text': ' So let us, maybe you have been shown a similar algorithm using different thing.', 'tokens': [50814, 407, 718, 505, 11, 1310, 291, 362, 668, 4898, 257, 2531, 9284, 1228, 819, 551, 13, 51152], 'temperature': 0.0, 'avg_logprob': -0.2113771282258581, 'compression_ratio': 1.462962962962963, 'no_speech_prob': 0.0017792285652831197}, {'id': 309, 'seek': 156982, 'start': 1585.58, 'end': 1589.62, 'text': ' We will go over it and derive constant propagation from this, okay?', 'tokens': [51152, 492, 486, 352, 670, 309, 293, 28446, 5754, 38377, 490, 341, 11, 1392, 30, 51354], 'temperature': 0.0, 'avg_logprob': -0.2113771282258581, 'compression_ratio': 1.462962962962963, 'no_speech_prob': 0.0017792285652831197}, {'id': 310, 'seek': 156982, 'start': 1589.62, 'end': 1596.78, 'text': ' So let us pay attention here.', 'tokens': [51354, 407, 718, 505, 1689, 3202, 510, 13, 51712], 'temperature': 0.0, 'avg_logprob': -0.2113771282258581, 'compression_ratio': 1.462962962962963, 'no_speech_prob': 0.0017792285652831197}, {'id': 311, 'seek': 159678, 'start': 1596.78, 'end': 1604.42, 'text': ' So we have a set of nodes where for our convenience, we can assume every statement is a different', 'tokens': [50364, 407, 321, 362, 257, 992, 295, 13891, 689, 337, 527, 19283, 11, 321, 393, 6552, 633, 5629, 307, 257, 819, 50746], 'temperature': 0.0, 'avg_logprob': -0.2560528139524822, 'compression_ratio': 1.7630057803468209, 'no_speech_prob': 0.03604031726717949}, {'id': 312, 'seek': 159678, 'start': 1604.42, 'end': 1606.78, 'text': ' node.', 'tokens': [50746, 9984, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.2560528139524822, 'compression_ratio': 1.7630057803468209, 'no_speech_prob': 0.03604031726717949}, {'id': 313, 'seek': 159678, 'start': 1606.78, 'end': 1608.98, 'text': ' And statement, do not keep very complicated statements.', 'tokens': [50864, 400, 5629, 11, 360, 406, 1066, 588, 6179, 12363, 13, 50974], 'temperature': 0.0, 'avg_logprob': -0.2560528139524822, 'compression_ratio': 1.7630057803468209, 'no_speech_prob': 0.03604031726717949}, {'id': 314, 'seek': 159678, 'start': 1608.98, 'end': 1612.26, 'text': ' We will keep every statement as, let us say our three address code statements, simple', 'tokens': [50974, 492, 486, 1066, 633, 5629, 382, 11, 718, 505, 584, 527, 1045, 2985, 3089, 12363, 11, 2199, 51138], 'temperature': 0.0, 'avg_logprob': -0.2560528139524822, 'compression_ratio': 1.7630057803468209, 'no_speech_prob': 0.03604031726717949}, {'id': 315, 'seek': 159678, 'start': 1612.26, 'end': 1615.06, 'text': ' statements, okay?', 'tokens': [51138, 12363, 11, 1392, 30, 51278], 'temperature': 0.0, 'avg_logprob': -0.2560528139524822, 'compression_ratio': 1.7630057803468209, 'no_speech_prob': 0.03604031726717949}, {'id': 316, 'seek': 159678, 'start': 1615.06, 'end': 1622.26, 'text': ' We have a set of nodes, entry node, okay?', 'tokens': [51278, 492, 362, 257, 992, 295, 13891, 11, 8729, 9984, 11, 1392, 30, 51638], 'temperature': 0.0, 'avg_logprob': -0.2560528139524822, 'compression_ratio': 1.7630057803468209, 'no_speech_prob': 0.03604031726717949}, {'id': 317, 'seek': 162226, 'start': 1622.74, 'end': 1630.94, 'text': ' And the transfer, the flow function for each of these things, which is like it takes a', 'tokens': [50388, 400, 264, 5003, 11, 264, 3095, 2445, 337, 1184, 295, 613, 721, 11, 597, 307, 411, 309, 2516, 257, 50798], 'temperature': 0.0, 'avg_logprob': -0.32403293921022996, 'compression_ratio': 1.4153846153846155, 'no_speech_prob': 0.21612945199012756}, {'id': 318, 'seek': 162226, 'start': 1630.94, 'end': 1639.74, 'text': ' node and it takes some input and gives you some other output.', 'tokens': [50798, 9984, 293, 309, 2516, 512, 4846, 293, 2709, 291, 512, 661, 5598, 13, 51238], 'temperature': 0.0, 'avg_logprob': -0.32403293921022996, 'compression_ratio': 1.4153846153846155, 'no_speech_prob': 0.21612945199012756}, {'id': 319, 'seek': 162226, 'start': 1639.74, 'end': 1645.22, 'text': ' L is my lattice, lattice of values.', 'tokens': [51238, 441, 307, 452, 34011, 11, 34011, 295, 4190, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.32403293921022996, 'compression_ratio': 1.4153846153846155, 'no_speech_prob': 0.21612945199012756}, {'id': 320, 'seek': 164522, 'start': 1646.18, 'end': 1653.82, 'text': ' And so let us see what we do.', 'tokens': [50412, 400, 370, 718, 505, 536, 437, 321, 360, 13, 50794], 'temperature': 0.0, 'avg_logprob': -0.23041794217866043, 'compression_ratio': 1.4090909090909092, 'no_speech_prob': 0.025450026616454124}, {'id': 321, 'seek': 164522, 'start': 1653.82, 'end': 1657.94, 'text': ' Initially for each block, so I have a work list.', 'tokens': [50794, 29446, 337, 1184, 3461, 11, 370, 286, 362, 257, 589, 1329, 13, 51000], 'temperature': 0.0, 'avg_logprob': -0.23041794217866043, 'compression_ratio': 1.4090909090909092, 'no_speech_prob': 0.025450026616454124}, {'id': 322, 'seek': 164522, 'start': 1657.94, 'end': 1665.02, 'text': ' I want to process all the blocks in my input.', 'tokens': [51000, 286, 528, 281, 1399, 439, 264, 8474, 294, 452, 4846, 13, 51354], 'temperature': 0.0, 'avg_logprob': -0.23041794217866043, 'compression_ratio': 1.4090909090909092, 'no_speech_prob': 0.025450026616454124}, {'id': 323, 'seek': 164522, 'start': 1665.02, 'end': 1670.3, 'text': ' So I have a work list where I initialize it to N minus entry.', 'tokens': [51354, 407, 286, 362, 257, 589, 1329, 689, 286, 5883, 1125, 309, 281, 426, 3175, 8729, 13, 51618], 'temperature': 0.0, 'avg_logprob': -0.23041794217866043, 'compression_ratio': 1.4090909090909092, 'no_speech_prob': 0.025450026616454124}, {'id': 324, 'seek': 167030, 'start': 1670.3799999999999, 'end': 1672.86, 'text': ' So I initialize the entry, I initialize that.', 'tokens': [50368, 407, 286, 5883, 1125, 264, 8729, 11, 286, 5883, 1125, 300, 13, 50492], 'temperature': 0.0, 'avg_logprob': -0.22936777635054154, 'compression_ratio': 1.7865853658536586, 'no_speech_prob': 0.03611961007118225}, {'id': 325, 'seek': 167030, 'start': 1672.86, 'end': 1681.22, 'text': ' And I initialize the in of entry to be some unit value, okay?', 'tokens': [50492, 400, 286, 5883, 1125, 264, 294, 295, 8729, 281, 312, 512, 4985, 2158, 11, 1392, 30, 50910], 'temperature': 0.0, 'avg_logprob': -0.22936777635054154, 'compression_ratio': 1.7865853658536586, 'no_speech_prob': 0.03611961007118225}, {'id': 326, 'seek': 167030, 'start': 1681.22, 'end': 1688.3, 'text': ' And I initialize the in of every other basic block as some top value, top value in my lattice,', 'tokens': [50910, 400, 286, 5883, 1125, 264, 294, 295, 633, 661, 3875, 3461, 382, 512, 1192, 2158, 11, 1192, 2158, 294, 452, 34011, 11, 51264], 'temperature': 0.0, 'avg_logprob': -0.22936777635054154, 'compression_ratio': 1.7865853658536586, 'no_speech_prob': 0.03611961007118225}, {'id': 327, 'seek': 167030, 'start': 1688.3, 'end': 1690.82, 'text': ' okay?', 'tokens': [51264, 1392, 30, 51390], 'temperature': 0.0, 'avg_logprob': -0.22936777635054154, 'compression_ratio': 1.7865853658536586, 'no_speech_prob': 0.03611961007118225}, {'id': 328, 'seek': 167030, 'start': 1690.82, 'end': 1692.3799999999999, 'text': ' Then what I do?', 'tokens': [51390, 1396, 437, 286, 360, 30, 51468], 'temperature': 0.0, 'avg_logprob': -0.22936777635054154, 'compression_ratio': 1.7865853658536586, 'no_speech_prob': 0.03611961007118225}, {'id': 329, 'seek': 167030, 'start': 1692.3799999999999, 'end': 1695.5, 'text': ' I take one element from the work list.', 'tokens': [51468, 286, 747, 472, 4478, 490, 264, 589, 1329, 13, 51624], 'temperature': 0.0, 'avg_logprob': -0.22936777635054154, 'compression_ratio': 1.7865853658536586, 'no_speech_prob': 0.03611961007118225}, {'id': 330, 'seek': 167030, 'start': 1695.5, 'end': 1697.1399999999999, 'text': " Which element doesn't matter?", 'tokens': [51624, 3013, 4478, 1177, 380, 1871, 30, 51706], 'temperature': 0.0, 'avg_logprob': -0.22936777635054154, 'compression_ratio': 1.7865853658536586, 'no_speech_prob': 0.03611961007118225}, {'id': 331, 'seek': 169714, 'start': 1697.14, 'end': 1706.66, 'text': ' I pick one element from the work list and then what I do for that element, for that', 'tokens': [50364, 286, 1888, 472, 4478, 490, 264, 589, 1329, 293, 550, 437, 286, 360, 337, 300, 4478, 11, 337, 300, 50840], 'temperature': 0.0, 'avg_logprob': -0.13809944411455574, 'compression_ratio': 1.5615384615384615, 'no_speech_prob': 0.010393008589744568}, {'id': 332, 'seek': 169714, 'start': 1706.66, 'end': 1711.8600000000001, 'text': ' element, I look at all its predecessors.', 'tokens': [50840, 4478, 11, 286, 574, 412, 439, 1080, 24874, 45700, 13, 51100], 'temperature': 0.0, 'avg_logprob': -0.13809944411455574, 'compression_ratio': 1.5615384615384615, 'no_speech_prob': 0.010393008589744568}, {'id': 333, 'seek': 169714, 'start': 1711.8600000000001, 'end': 1716.3000000000002, 'text': ' From the predecessors, what am I getting?', 'tokens': [51100, 3358, 264, 24874, 45700, 11, 437, 669, 286, 1242, 30, 51322], 'temperature': 0.0, 'avg_logprob': -0.13809944411455574, 'compression_ratio': 1.5615384615384615, 'no_speech_prob': 0.010393008589744568}, {'id': 334, 'seek': 169714, 'start': 1716.3000000000002, 'end': 1720.6200000000001, 'text': ' My predecessors out is my in, right?', 'tokens': [51322, 1222, 24874, 45700, 484, 307, 452, 294, 11, 558, 30, 51538], 'temperature': 0.0, 'avg_logprob': -0.13809944411455574, 'compression_ratio': 1.5615384615384615, 'no_speech_prob': 0.010393008589744568}, {'id': 335, 'seek': 172062, 'start': 1721.1, 'end': 1730.9799999999998, 'text': ' So what I will do, I want the out of that predecessor.', 'tokens': [50388, 407, 437, 286, 486, 360, 11, 286, 528, 264, 484, 295, 300, 34991, 13, 50882], 'temperature': 0.0, 'avg_logprob': -0.2521639585494995, 'compression_ratio': 1.4, 'no_speech_prob': 0.011314439587295055}, {'id': 336, 'seek': 172062, 'start': 1730.9799999999998, 'end': 1734.3, 'text': ' How do I get the out of that predecessor?', 'tokens': [50882, 1012, 360, 286, 483, 264, 484, 295, 300, 34991, 30, 51048], 'temperature': 0.0, 'avg_logprob': -0.2521639585494995, 'compression_ratio': 1.4, 'no_speech_prob': 0.011314439587295055}, {'id': 337, 'seek': 172062, 'start': 1734.3, 'end': 1743.1, 'text': ' See I have a block like this.', 'tokens': [51048, 3008, 286, 362, 257, 3461, 411, 341, 13, 51488], 'temperature': 0.0, 'avg_logprob': -0.2521639585494995, 'compression_ratio': 1.4, 'no_speech_prob': 0.011314439587295055}, {'id': 338, 'seek': 174310, 'start': 1743.1, 'end': 1753.34, 'text': ' I want to take a meet of the out of this and out of this, right?', 'tokens': [50364, 286, 528, 281, 747, 257, 1677, 295, 264, 484, 295, 341, 293, 484, 295, 341, 11, 558, 30, 50876], 'temperature': 0.0, 'avg_logprob': -0.14993409315745035, 'compression_ratio': 1.71875, 'no_speech_prob': 0.02744872123003006}, {'id': 339, 'seek': 174310, 'start': 1753.34, 'end': 1759.06, 'text': ' This out and this out, I want to take a meet of, correct?', 'tokens': [50876, 639, 484, 293, 341, 484, 11, 286, 528, 281, 747, 257, 1677, 295, 11, 3006, 30, 51162], 'temperature': 0.0, 'avg_logprob': -0.14993409315745035, 'compression_ratio': 1.71875, 'no_speech_prob': 0.02744872123003006}, {'id': 340, 'seek': 174310, 'start': 1759.06, 'end': 1763.8999999999999, 'text': ' And this out I can compute.', 'tokens': [51162, 400, 341, 484, 286, 393, 14722, 13, 51404], 'temperature': 0.0, 'avg_logprob': -0.14993409315745035, 'compression_ratio': 1.71875, 'no_speech_prob': 0.02744872123003006}, {'id': 341, 'seek': 174310, 'start': 1763.8999999999999, 'end': 1771.8799999999999, 'text': ' If I know this in, then I can take the in if I call this as P, right?', 'tokens': [51404, 759, 286, 458, 341, 294, 11, 550, 286, 393, 747, 264, 294, 498, 286, 818, 341, 382, 430, 11, 558, 30, 51803], 'temperature': 0.0, 'avg_logprob': -0.14993409315745035, 'compression_ratio': 1.71875, 'no_speech_prob': 0.02744872123003006}, {'id': 342, 'seek': 177188, 'start': 1771.88, 'end': 1787.92, 'text': ' So whatever is the in of that P, I can use the transfer function of this guy and take', 'tokens': [50364, 407, 2035, 307, 264, 294, 295, 300, 430, 11, 286, 393, 764, 264, 5003, 2445, 295, 341, 2146, 293, 747, 51166], 'temperature': 0.0, 'avg_logprob': -0.1556689739227295, 'compression_ratio': 1.5630252100840336, 'no_speech_prob': 0.0006841205176897347}, {'id': 343, 'seek': 177188, 'start': 1787.92, 'end': 1791.96, 'text': ' the input and compute the out.', 'tokens': [51166, 264, 4846, 293, 14722, 264, 484, 13, 51368], 'temperature': 0.0, 'avg_logprob': -0.1556689739227295, 'compression_ratio': 1.5630252100840336, 'no_speech_prob': 0.0006841205176897347}, {'id': 344, 'seek': 177188, 'start': 1791.96, 'end': 1801.2, 'text': " Similarly, I can take this guy's transfer function, compute this guy.", 'tokens': [51368, 13157, 11, 286, 393, 747, 341, 2146, 311, 5003, 2445, 11, 14722, 341, 2146, 13, 51830], 'temperature': 0.0, 'avg_logprob': -0.1556689739227295, 'compression_ratio': 1.5630252100840336, 'no_speech_prob': 0.0006841205176897347}, {'id': 345, 'seek': 180120, 'start': 1801.2, 'end': 1812.2, 'text': ' So now once I have these two, I can take a meet of these two to give me the in for this', 'tokens': [50364, 407, 586, 1564, 286, 362, 613, 732, 11, 286, 393, 747, 257, 1677, 295, 613, 732, 281, 976, 385, 264, 294, 337, 341, 50914], 'temperature': 0.0, 'avg_logprob': -0.13662685782222425, 'compression_ratio': 1.4202898550724639, 'no_speech_prob': 0.0016303270822390914}, {'id': 346, 'seek': 180120, 'start': 1812.2, 'end': 1817.56, 'text': " block B. That's what I am doing here.", 'tokens': [50914, 3461, 363, 13, 663, 311, 437, 286, 669, 884, 510, 13, 51182], 'temperature': 0.0, 'avg_logprob': -0.13662685782222425, 'compression_ratio': 1.4202898550724639, 'no_speech_prob': 0.0016303270822390914}, {'id': 347, 'seek': 180120, 'start': 1817.56, 'end': 1826.8400000000001, 'text': ' So I am taking a meet of all my predecessors outs and computing my in.', 'tokens': [51182, 407, 286, 669, 1940, 257, 1677, 295, 439, 452, 24874, 45700, 14758, 293, 15866, 452, 294, 13, 51646], 'temperature': 0.0, 'avg_logprob': -0.13662685782222425, 'compression_ratio': 1.4202898550724639, 'no_speech_prob': 0.0016303270822390914}, {'id': 348, 'seek': 182684, 'start': 1827.08, 'end': 1837.9199999999998, 'text': ' Then I will check if my in is different from what was there before.', 'tokens': [50376, 1396, 286, 486, 1520, 498, 452, 294, 307, 819, 490, 437, 390, 456, 949, 13, 50918], 'temperature': 0.0, 'avg_logprob': -0.18360817853142233, 'compression_ratio': 1.6065573770491803, 'no_speech_prob': 0.017369238659739494}, {'id': 349, 'seek': 182684, 'start': 1837.9199999999998, 'end': 1845.52, 'text': ' If it is different, then I am setting my in as the new value and then what I am saying,', 'tokens': [50918, 759, 309, 307, 819, 11, 550, 286, 669, 3287, 452, 294, 382, 264, 777, 2158, 293, 550, 437, 286, 669, 1566, 11, 51298], 'temperature': 0.0, 'avg_logprob': -0.18360817853142233, 'compression_ratio': 1.6065573770491803, 'no_speech_prob': 0.017369238659739494}, {'id': 350, 'seek': 182684, 'start': 1845.52, 'end': 1847.3999999999999, 'text': ' hey, something has changed.', 'tokens': [51298, 4177, 11, 746, 575, 3105, 13, 51392], 'temperature': 0.0, 'avg_logprob': -0.18360817853142233, 'compression_ratio': 1.6065573770491803, 'no_speech_prob': 0.017369238659739494}, {'id': 351, 'seek': 182684, 'start': 1847.3999999999999, 'end': 1848.56, 'text': ' I have two options.', 'tokens': [51392, 286, 362, 732, 3956, 13, 51450], 'temperature': 0.0, 'avg_logprob': -0.18360817853142233, 'compression_ratio': 1.6065573770491803, 'no_speech_prob': 0.017369238659739494}, {'id': 352, 'seek': 182684, 'start': 1848.56, 'end': 1854.76, 'text': " Like in the previous case, I will say reanalyze the whole world or say don't reanalyze the", 'tokens': [51450, 1743, 294, 264, 3894, 1389, 11, 286, 486, 584, 319, 282, 5222, 1381, 264, 1379, 1002, 420, 584, 500, 380, 319, 282, 5222, 1381, 264, 51760], 'temperature': 0.0, 'avg_logprob': -0.18360817853142233, 'compression_ratio': 1.6065573770491803, 'no_speech_prob': 0.017369238659739494}, {'id': 353, 'seek': 185476, 'start': 1854.76, 'end': 1862.4, 'text': ' whole world but analyze only what may get affected because of me.', 'tokens': [50364, 1379, 1002, 457, 12477, 787, 437, 815, 483, 8028, 570, 295, 385, 13, 50746], 'temperature': 0.0, 'avg_logprob': -0.1948641538619995, 'compression_ratio': 1.6848484848484848, 'no_speech_prob': 0.05483042821288109}, {'id': 354, 'seek': 185476, 'start': 1862.4, 'end': 1866.52, 'text': ' What may get affected because of my in?', 'tokens': [50746, 708, 815, 483, 8028, 570, 295, 452, 294, 30, 50952], 'temperature': 0.0, 'avg_logprob': -0.1948641538619995, 'compression_ratio': 1.6848484848484848, 'no_speech_prob': 0.05483042821288109}, {'id': 355, 'seek': 185476, 'start': 1866.52, 'end': 1869.08, 'text': ' Only my successors, not others.', 'tokens': [50952, 5686, 452, 2245, 830, 11, 406, 2357, 13, 51080], 'temperature': 0.0, 'avg_logprob': -0.1948641538619995, 'compression_ratio': 1.6848484848484848, 'no_speech_prob': 0.05483042821288109}, {'id': 356, 'seek': 185476, 'start': 1869.08, 'end': 1876.48, 'text': ' So what I will do, if the value is, if my in has changed, then I will set my in to the', 'tokens': [51080, 407, 437, 286, 486, 360, 11, 498, 264, 2158, 307, 11, 498, 452, 294, 575, 3105, 11, 550, 286, 486, 992, 452, 294, 281, 264, 51450], 'temperature': 0.0, 'avg_logprob': -0.1948641538619995, 'compression_ratio': 1.6848484848484848, 'no_speech_prob': 0.05483042821288109}, {'id': 357, 'seek': 185476, 'start': 1876.48, 'end': 1883.0, 'text': ' new value and add to the work list all my successors.', 'tokens': [51450, 777, 2158, 293, 909, 281, 264, 589, 1329, 439, 452, 2245, 830, 13, 51776], 'temperature': 0.0, 'avg_logprob': -0.1948641538619995, 'compression_ratio': 1.6848484848484848, 'no_speech_prob': 0.05483042821288109}, {'id': 358, 'seek': 188300, 'start': 1883.96, 'end': 1890.6, 'text': ' All are on the same page.', 'tokens': [50412, 1057, 366, 322, 264, 912, 3028, 13, 50744], 'temperature': 0.0, 'avg_logprob': -0.2909984376695421, 'compression_ratio': 1.3097345132743363, 'no_speech_prob': 0.016885166987776756}, {'id': 359, 'seek': 188300, 'start': 1890.6, 'end': 1902.08, 'text': ' And then we keep on repeating till the work list is empty.', 'tokens': [50744, 400, 550, 321, 1066, 322, 18617, 4288, 264, 589, 1329, 307, 6707, 13, 51318], 'temperature': 0.0, 'avg_logprob': -0.2909984376695421, 'compression_ratio': 1.3097345132743363, 'no_speech_prob': 0.016885166987776756}, {'id': 360, 'seek': 188300, 'start': 1902.08, 'end': 1907.96, 'text': ' And do we have a conviction that this loop will terminate?', 'tokens': [51318, 400, 360, 321, 362, 257, 24837, 300, 341, 6367, 486, 10761, 473, 30, 51612], 'temperature': 0.0, 'avg_logprob': -0.2909984376695421, 'compression_ratio': 1.3097345132743363, 'no_speech_prob': 0.016885166987776756}, {'id': 361, 'seek': 188300, 'start': 1907.96, 'end': 1908.96, 'text': ' Why?', 'tokens': [51612, 1545, 30, 51662], 'temperature': 0.0, 'avg_logprob': -0.2909984376695421, 'compression_ratio': 1.3097345132743363, 'no_speech_prob': 0.016885166987776756}, {'id': 362, 'seek': 190896, 'start': 1909.0, 'end': 1914.08, 'text': ' And now I am adding to the work list.', 'tokens': [50366, 400, 586, 286, 669, 5127, 281, 264, 589, 1329, 13, 50620], 'temperature': 0.0, 'avg_logprob': -0.2860715475427099, 'compression_ratio': 1.5857988165680474, 'no_speech_prob': 0.02475387044250965}, {'id': 363, 'seek': 190896, 'start': 1914.08, 'end': 1916.72, 'text': ' I may randomly add to the work list, right?', 'tokens': [50620, 286, 815, 16979, 909, 281, 264, 589, 1329, 11, 558, 30, 50752], 'temperature': 0.0, 'avg_logprob': -0.2860715475427099, 'compression_ratio': 1.5857988165680474, 'no_speech_prob': 0.02475387044250965}, {'id': 364, 'seek': 190896, 'start': 1916.72, 'end': 1922.8400000000001, 'text': ' What is the guarantee that I will terminate?', 'tokens': [50752, 708, 307, 264, 10815, 300, 286, 486, 10761, 473, 30, 51058], 'temperature': 0.0, 'avg_logprob': -0.2860715475427099, 'compression_ratio': 1.5857988165680474, 'no_speech_prob': 0.02475387044250965}, {'id': 365, 'seek': 190896, 'start': 1922.8400000000001, 'end': 1923.8400000000001, 'text': ' Anyone?', 'tokens': [51058, 14643, 30, 51108], 'temperature': 0.0, 'avg_logprob': -0.2860715475427099, 'compression_ratio': 1.5857988165680474, 'no_speech_prob': 0.02475387044250965}, {'id': 366, 'seek': 190896, 'start': 1923.8400000000001, 'end': 1933.44, 'text': ' Yes, I am removing one element at a time to the work list and then adding, in the worst', 'tokens': [51108, 1079, 11, 286, 669, 12720, 472, 4478, 412, 257, 565, 281, 264, 589, 1329, 293, 550, 5127, 11, 294, 264, 5855, 51588], 'temperature': 0.0, 'avg_logprob': -0.2860715475427099, 'compression_ratio': 1.5857988165680474, 'no_speech_prob': 0.02475387044250965}, {'id': 367, 'seek': 190896, 'start': 1933.44, 'end': 1934.44, 'text': ' case, all my successors.', 'tokens': [51588, 1389, 11, 439, 452, 2245, 830, 13, 51638], 'temperature': 0.0, 'avg_logprob': -0.2860715475427099, 'compression_ratio': 1.5857988165680474, 'no_speech_prob': 0.02475387044250965}, {'id': 368, 'seek': 190896, 'start': 1934.44, 'end': 1937.8, 'text': ' There may be a loop.', 'tokens': [51638, 821, 815, 312, 257, 6367, 13, 51806], 'temperature': 0.0, 'avg_logprob': -0.2860715475427099, 'compression_ratio': 1.5857988165680474, 'no_speech_prob': 0.02475387044250965}, {'id': 369, 'seek': 193780, 'start': 1937.8, 'end': 1941.36, 'text': ' So I keep on adding my successors.', 'tokens': [50364, 407, 286, 1066, 322, 5127, 452, 2245, 830, 13, 50542], 'temperature': 0.0, 'avg_logprob': -0.4004558563232422, 'compression_ratio': 1.56, 'no_speech_prob': 0.013883869163691998}, {'id': 370, 'seek': 193780, 'start': 1941.36, 'end': 1943.76, 'text': ' So may be, will I be in an infinite loop?', 'tokens': [50542, 407, 815, 312, 11, 486, 286, 312, 294, 364, 13785, 6367, 30, 50662], 'temperature': 0.0, 'avg_logprob': -0.4004558563232422, 'compression_ratio': 1.56, 'no_speech_prob': 0.013883869163691998}, {'id': 371, 'seek': 193780, 'start': 1943.76, 'end': 1944.76, 'text': ' Right?', 'tokens': [50662, 1779, 30, 50712], 'temperature': 0.0, 'avg_logprob': -0.4004558563232422, 'compression_ratio': 1.56, 'no_speech_prob': 0.013883869163691998}, {'id': 372, 'seek': 193780, 'start': 1944.76, 'end': 1947.12, 'text': ' So what I am doing, I am adding my successors.', 'tokens': [50712, 407, 437, 286, 669, 884, 11, 286, 669, 5127, 452, 2245, 830, 13, 50830], 'temperature': 0.0, 'avg_logprob': -0.4004558563232422, 'compression_ratio': 1.56, 'no_speech_prob': 0.013883869163691998}, {'id': 373, 'seek': 193780, 'start': 1947.12, 'end': 1951.32, 'text': ' If I am in a loop, you add me, I add you.', 'tokens': [50830, 759, 286, 669, 294, 257, 6367, 11, 291, 909, 385, 11, 286, 909, 291, 13, 51040], 'temperature': 0.0, 'avg_logprob': -0.4004558563232422, 'compression_ratio': 1.56, 'no_speech_prob': 0.013883869163691998}, {'id': 374, 'seek': 193780, 'start': 1951.32, 'end': 1952.32, 'text': ' Why?', 'tokens': [51040, 1545, 30, 51090], 'temperature': 0.0, 'avg_logprob': -0.4004558563232422, 'compression_ratio': 1.56, 'no_speech_prob': 0.013883869163691998}, {'id': 375, 'seek': 193780, 'start': 1952.32, 'end': 1958.12, 'text': ' I mean, it is a set, work list is a set.', 'tokens': [51090, 286, 914, 11, 309, 307, 257, 992, 11, 589, 1329, 307, 257, 992, 13, 51380], 'temperature': 0.0, 'avg_logprob': -0.4004558563232422, 'compression_ratio': 1.56, 'no_speech_prob': 0.013883869163691998}, {'id': 376, 'seek': 193780, 'start': 1958.12, 'end': 1961.68, 'text': ' Yes, so there are no repeated elements.', 'tokens': [51380, 1079, 11, 370, 456, 366, 572, 10477, 4959, 13, 51558], 'temperature': 0.0, 'avg_logprob': -0.4004558563232422, 'compression_ratio': 1.56, 'no_speech_prob': 0.013883869163691998}, {'id': 377, 'seek': 193780, 'start': 1961.68, 'end': 1962.68, 'text': ' That is right.', 'tokens': [51558, 663, 307, 558, 13, 51608], 'temperature': 0.0, 'avg_logprob': -0.4004558563232422, 'compression_ratio': 1.56, 'no_speech_prob': 0.013883869163691998}, {'id': 378, 'seek': 196268, 'start': 1963.5600000000002, 'end': 1971.04, 'text': ' So I have added all my successors.', 'tokens': [50408, 407, 286, 362, 3869, 439, 452, 2245, 830, 13, 50782], 'temperature': 0.0, 'avg_logprob': -0.3738367391187091, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.04733486473560333}, {'id': 379, 'seek': 196268, 'start': 1971.04, 'end': 1972.04, 'text': ' Let us say I have only one successor.', 'tokens': [50782, 961, 505, 584, 286, 362, 787, 472, 31864, 13, 50832], 'temperature': 0.0, 'avg_logprob': -0.3738367391187091, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.04733486473560333}, {'id': 380, 'seek': 196268, 'start': 1972.04, 'end': 1973.04, 'text': ' That is you.', 'tokens': [50832, 663, 307, 291, 13, 50882], 'temperature': 0.0, 'avg_logprob': -0.3738367391187091, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.04733486473560333}, {'id': 381, 'seek': 196268, 'start': 1973.04, 'end': 1977.96, 'text': ' And we are in a loop and so you will add your successors.', 'tokens': [50882, 400, 321, 366, 294, 257, 6367, 293, 370, 291, 486, 909, 428, 2245, 830, 13, 51128], 'temperature': 0.0, 'avg_logprob': -0.3738367391187091, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.04733486473560333}, {'id': 382, 'seek': 196268, 'start': 1977.96, 'end': 1978.96, 'text': ' That is me.', 'tokens': [51128, 663, 307, 385, 13, 51178], 'temperature': 0.0, 'avg_logprob': -0.3738367391187091, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.04733486473560333}, {'id': 383, 'seek': 196268, 'start': 1978.96, 'end': 1979.96, 'text': ' So you add me, I add you.', 'tokens': [51178, 407, 291, 909, 385, 11, 286, 909, 291, 13, 51228], 'temperature': 0.0, 'avg_logprob': -0.3738367391187091, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.04733486473560333}, {'id': 384, 'seek': 196268, 'start': 1979.96, 'end': 1982.96, 'text': ' Then there is a change.', 'tokens': [51228, 1396, 456, 307, 257, 1319, 13, 51378], 'temperature': 0.0, 'avg_logprob': -0.3738367391187091, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.04733486473560333}, {'id': 385, 'seek': 196268, 'start': 1982.96, 'end': 1983.96, 'text': ' Okay, good.', 'tokens': [51378, 1033, 11, 665, 13, 51428], 'temperature': 0.0, 'avg_logprob': -0.3738367391187091, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.04733486473560333}, {'id': 386, 'seek': 196268, 'start': 1983.96, 'end': 1988.96, 'text': ' That is the key point.', 'tokens': [51428, 663, 307, 264, 2141, 935, 13, 51678], 'temperature': 0.0, 'avg_logprob': -0.3738367391187091, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.04733486473560333}, {'id': 387, 'seek': 198896, 'start': 1988.96, 'end': 1993.96, 'text': ' I am adding only when there is a change.', 'tokens': [50364, 286, 669, 5127, 787, 562, 456, 307, 257, 1319, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.3813101548414964, 'compression_ratio': 1.3687943262411348, 'no_speech_prob': 0.061730582267045975}, {'id': 388, 'seek': 198896, 'start': 1993.96, 'end': 1994.96, 'text': ' Okay.', 'tokens': [50614, 1033, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.3813101548414964, 'compression_ratio': 1.3687943262411348, 'no_speech_prob': 0.061730582267045975}, {'id': 389, 'seek': 198896, 'start': 1994.96, 'end': 2003.96, 'text': ' Why do you say so?', 'tokens': [50664, 1545, 360, 291, 584, 370, 30, 51114], 'temperature': 0.0, 'avg_logprob': -0.3813101548414964, 'compression_ratio': 1.3687943262411348, 'no_speech_prob': 0.061730582267045975}, {'id': 390, 'seek': 198896, 'start': 2003.96, 'end': 2009.1200000000001, 'text': ' So Rishabh is saying after certain time, there will not be any change.', 'tokens': [51114, 407, 497, 742, 455, 71, 307, 1566, 934, 1629, 565, 11, 456, 486, 406, 312, 604, 1319, 13, 51372], 'temperature': 0.0, 'avg_logprob': -0.3813101548414964, 'compression_ratio': 1.3687943262411348, 'no_speech_prob': 0.061730582267045975}, {'id': 391, 'seek': 198896, 'start': 2009.1200000000001, 'end': 2010.1200000000001, 'text': ' What gives you that confidence?', 'tokens': [51372, 708, 2709, 291, 300, 6687, 30, 51422], 'temperature': 0.0, 'avg_logprob': -0.3813101548414964, 'compression_ratio': 1.3687943262411348, 'no_speech_prob': 0.061730582267045975}, {'id': 392, 'seek': 198896, 'start': 2010.1200000000001, 'end': 2011.1200000000001, 'text': ' Right.', 'tokens': [51422, 1779, 13, 51472], 'temperature': 0.0, 'avg_logprob': -0.3813101548414964, 'compression_ratio': 1.3687943262411348, 'no_speech_prob': 0.061730582267045975}, {'id': 393, 'seek': 198896, 'start': 2011.1200000000001, 'end': 2012.1200000000001, 'text': ' So you are right.', 'tokens': [51472, 407, 291, 366, 558, 13, 51522], 'temperature': 0.0, 'avg_logprob': -0.3813101548414964, 'compression_ratio': 1.3687943262411348, 'no_speech_prob': 0.061730582267045975}, {'id': 394, 'seek': 201212, 'start': 2012.12, 'end': 2021.28, 'text': ' So you are doing a meet.', 'tokens': [50364, 407, 291, 366, 884, 257, 1677, 13, 50822], 'temperature': 0.0, 'avg_logprob': -0.2616657642049527, 'compression_ratio': 1.8, 'no_speech_prob': 0.03607949614524841}, {'id': 395, 'seek': 201212, 'start': 2021.28, 'end': 2026.52, 'text': ' So in a lattice, if you keep doing meet, you will finally reach the bottom.', 'tokens': [50822, 407, 294, 257, 34011, 11, 498, 291, 1066, 884, 1677, 11, 291, 486, 2721, 2524, 264, 2767, 13, 51084], 'temperature': 0.0, 'avg_logprob': -0.2616657642049527, 'compression_ratio': 1.8, 'no_speech_prob': 0.03607949614524841}, {'id': 396, 'seek': 201212, 'start': 2026.52, 'end': 2029.8, 'text': ' Once you reach the bottom, there will not be any more change.', 'tokens': [51084, 3443, 291, 2524, 264, 2767, 11, 456, 486, 406, 312, 604, 544, 1319, 13, 51248], 'temperature': 0.0, 'avg_logprob': -0.2616657642049527, 'compression_ratio': 1.8, 'no_speech_prob': 0.03607949614524841}, {'id': 397, 'seek': 201212, 'start': 2029.8, 'end': 2030.8, 'text': ' It is a lattice.', 'tokens': [51248, 467, 307, 257, 34011, 13, 51298], 'temperature': 0.0, 'avg_logprob': -0.2616657642049527, 'compression_ratio': 1.8, 'no_speech_prob': 0.03607949614524841}, {'id': 398, 'seek': 201212, 'start': 2030.8, 'end': 2032.1599999999999, 'text': ' We do not know what the elements are.', 'tokens': [51298, 492, 360, 406, 458, 437, 264, 4959, 366, 13, 51366], 'temperature': 0.0, 'avg_logprob': -0.2616657642049527, 'compression_ratio': 1.8, 'no_speech_prob': 0.03607949614524841}, {'id': 399, 'seek': 201212, 'start': 2032.1599999999999, 'end': 2033.9599999999998, 'text': ' Null set, empty set, we do not know.', 'tokens': [51366, 426, 858, 992, 11, 6707, 992, 11, 321, 360, 406, 458, 13, 51456], 'temperature': 0.0, 'avg_logprob': -0.2616657642049527, 'compression_ratio': 1.8, 'no_speech_prob': 0.03607949614524841}, {'id': 400, 'seek': 201212, 'start': 2033.9599999999998, 'end': 2036.28, 'text': ' We are talking in terms of a lattice.', 'tokens': [51456, 492, 366, 1417, 294, 2115, 295, 257, 34011, 13, 51572], 'temperature': 0.0, 'avg_logprob': -0.2616657642049527, 'compression_ratio': 1.8, 'no_speech_prob': 0.03607949614524841}, {'id': 401, 'seek': 201212, 'start': 2036.28, 'end': 2038.6799999999998, 'text': ' I initialize to top.', 'tokens': [51572, 286, 5883, 1125, 281, 1192, 13, 51692], 'temperature': 0.0, 'avg_logprob': -0.2616657642049527, 'compression_ratio': 1.8, 'no_speech_prob': 0.03607949614524841}, {'id': 402, 'seek': 201212, 'start': 2038.6799999999998, 'end': 2040.56, 'text': ' I keep taking meet, keep taking meet.', 'tokens': [51692, 286, 1066, 1940, 1677, 11, 1066, 1940, 1677, 13, 51786], 'temperature': 0.0, 'avg_logprob': -0.2616657642049527, 'compression_ratio': 1.8, 'no_speech_prob': 0.03607949614524841}, {'id': 403, 'seek': 204056, 'start': 2041.44, 'end': 2047.6, 'text': ' Either there is no change or I mean there is no, finally I have to stop somewhere because', 'tokens': [50408, 13746, 456, 307, 572, 1319, 420, 286, 914, 456, 307, 572, 11, 2721, 286, 362, 281, 1590, 4079, 570, 50716], 'temperature': 0.0, 'avg_logprob': -0.39532983125145754, 'compression_ratio': 1.4662162162162162, 'no_speech_prob': 0.4056456983089447}, {'id': 404, 'seek': 204056, 'start': 2047.6, 'end': 2050.12, 'text': ' the lattice height is finite.', 'tokens': [50716, 264, 34011, 6681, 307, 19362, 13, 50842], 'temperature': 0.0, 'avg_logprob': -0.39532983125145754, 'compression_ratio': 1.4662162162162162, 'no_speech_prob': 0.4056456983089447}, {'id': 405, 'seek': 204056, 'start': 2050.12, 'end': 2055.84, 'text': ' So if I keep on taking meet, finally I will terminate.', 'tokens': [50842, 407, 498, 286, 1066, 322, 1940, 1677, 11, 2721, 286, 486, 10761, 473, 13, 51128], 'temperature': 0.0, 'avg_logprob': -0.39532983125145754, 'compression_ratio': 1.4662162162162162, 'no_speech_prob': 0.4056456983089447}, {'id': 406, 'seek': 204056, 'start': 2055.84, 'end': 2057.84, 'text': ' Right.', 'tokens': [51128, 1779, 13, 51228], 'temperature': 0.0, 'avg_logprob': -0.39532983125145754, 'compression_ratio': 1.4662162162162162, 'no_speech_prob': 0.4056456983089447}, {'id': 407, 'seek': 204056, 'start': 2057.84, 'end': 2064.64, 'text': ' Yes, no, no, no.', 'tokens': [51228, 1079, 11, 572, 11, 572, 11, 572, 13, 51568], 'temperature': 0.0, 'avg_logprob': -0.39532983125145754, 'compression_ratio': 1.4662162162162162, 'no_speech_prob': 0.4056456983089447}, {'id': 408, 'seek': 204056, 'start': 2064.64, 'end': 2065.64, 'text': ' What is bothering?', 'tokens': [51568, 708, 307, 31432, 30, 51618], 'temperature': 0.0, 'avg_logprob': -0.39532983125145754, 'compression_ratio': 1.4662162162162162, 'no_speech_prob': 0.4056456983089447}, {'id': 409, 'seek': 206564, 'start': 2065.72, 'end': 2074.3199999999997, 'text': ' Okay, okay.', 'tokens': [50368, 1033, 11, 1392, 13, 50798], 'temperature': 0.0, 'avg_logprob': -0.5104554120232078, 'compression_ratio': 1.0978260869565217, 'no_speech_prob': 0.02668042480945587}, {'id': 410, 'seek': 206564, 'start': 2074.3199999999997, 'end': 2077.3199999999997, 'text': ' Anyone still bothering?', 'tokens': [50798, 14643, 920, 31432, 30, 50948], 'temperature': 0.0, 'avg_logprob': -0.5104554120232078, 'compression_ratio': 1.0978260869565217, 'no_speech_prob': 0.02668042480945587}, {'id': 411, 'seek': 206564, 'start': 2077.3199999999997, 'end': 2080.3199999999997, 'text': ' Okay.', 'tokens': [50948, 1033, 13, 51098], 'temperature': 0.0, 'avg_logprob': -0.5104554120232078, 'compression_ratio': 1.0978260869565217, 'no_speech_prob': 0.02668042480945587}, {'id': 412, 'seek': 206564, 'start': 2080.3199999999997, 'end': 2085.8799999999997, 'text': ' Yes, we are definitely assuming there have to be monotonic.', 'tokens': [51098, 1079, 11, 321, 366, 2138, 11926, 456, 362, 281, 312, 1108, 310, 11630, 13, 51376], 'temperature': 0.0, 'avg_logprob': -0.5104554120232078, 'compression_ratio': 1.0978260869565217, 'no_speech_prob': 0.02668042480945587}, {'id': 413, 'seek': 208588, 'start': 2086.12, 'end': 2096.92, 'text': ' If it is not monotonic, then we are not sure.', 'tokens': [50376, 759, 309, 307, 406, 1108, 310, 11630, 11, 550, 321, 366, 406, 988, 13, 50916], 'temperature': 0.0, 'avg_logprob': -0.2979491067969281, 'compression_ratio': 1.2079207920792079, 'no_speech_prob': 0.009114190936088562}, {'id': 414, 'seek': 208588, 'start': 2096.92, 'end': 2102.32, 'text': ' So F is monotonic and it is working on a lattice.', 'tokens': [50916, 407, 479, 307, 1108, 310, 11630, 293, 309, 307, 1364, 322, 257, 34011, 13, 51186], 'temperature': 0.0, 'avg_logprob': -0.2979491067969281, 'compression_ratio': 1.2079207920792079, 'no_speech_prob': 0.009114190936088562}, {'id': 415, 'seek': 208588, 'start': 2102.32, 'end': 2105.32, 'text': ' That gives us, okay.', 'tokens': [51186, 663, 2709, 505, 11, 1392, 13, 51336], 'temperature': 0.0, 'avg_logprob': -0.2979491067969281, 'compression_ratio': 1.2079207920792079, 'no_speech_prob': 0.009114190936088562}, {'id': 416, 'seek': 208588, 'start': 2105.32, 'end': 2106.32, 'text': ' Fine.', 'tokens': [51336, 12024, 13, 51386], 'temperature': 0.0, 'avg_logprob': -0.2979491067969281, 'compression_ratio': 1.2079207920792079, 'no_speech_prob': 0.009114190936088562}, {'id': 417, 'seek': 210632, 'start': 2106.76, 'end': 2117.2400000000002, 'text': ' We will use this iterative data flow analysis to derive an algorithm to do constant propagation.', 'tokens': [50386, 492, 486, 764, 341, 17138, 1166, 1412, 3095, 5215, 281, 28446, 364, 9284, 281, 360, 5754, 38377, 13, 50910], 'temperature': 0.0, 'avg_logprob': -0.23163316764083564, 'compression_ratio': 1.5746268656716418, 'no_speech_prob': 0.00467793270945549}, {'id': 418, 'seek': 210632, 'start': 2117.2400000000002, 'end': 2119.32, 'text': ' Okay.', 'tokens': [50910, 1033, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.23163316764083564, 'compression_ratio': 1.5746268656716418, 'no_speech_prob': 0.00467793270945549}, {'id': 419, 'seek': 210632, 'start': 2119.32, 'end': 2126.0800000000004, 'text': ' We already have seen how we are using the constant propagation.', 'tokens': [51014, 492, 1217, 362, 1612, 577, 321, 366, 1228, 264, 5754, 38377, 13, 51352], 'temperature': 0.0, 'avg_logprob': -0.23163316764083564, 'compression_ratio': 1.5746268656716418, 'no_speech_prob': 0.00467793270945549}, {'id': 420, 'seek': 210632, 'start': 2126.0800000000004, 'end': 2128.6400000000003, 'text': ' So what is the idea of constant propagation?', 'tokens': [51352, 407, 437, 307, 264, 1558, 295, 5754, 38377, 30, 51480], 'temperature': 0.0, 'avg_logprob': -0.23163316764083564, 'compression_ratio': 1.5746268656716418, 'no_speech_prob': 0.00467793270945549}, {'id': 421, 'seek': 212864, 'start': 2128.96, 'end': 2135.12, 'text': ' So we will take whatever values that are constants on all possible executions, on all possible', 'tokens': [50380, 407, 321, 486, 747, 2035, 4190, 300, 366, 35870, 322, 439, 1944, 4454, 3666, 11, 322, 439, 1944, 50688], 'temperature': 0.0, 'avg_logprob': -0.3369090092646611, 'compression_ratio': 1.9195402298850575, 'no_speech_prob': 0.12555815279483795}, {'id': 422, 'seek': 212864, 'start': 2135.12, 'end': 2141.7999999999997, 'text': ' executions and then we will propagate those.', 'tokens': [50688, 4454, 3666, 293, 550, 321, 486, 48256, 729, 13, 51022], 'temperature': 0.0, 'avg_logprob': -0.3369090092646611, 'compression_ratio': 1.9195402298850575, 'no_speech_prob': 0.12555815279483795}, {'id': 423, 'seek': 212864, 'start': 2141.7999999999997, 'end': 2145.6, 'text': ' If I have an expression which is guaranteed, variable which is guaranteed to be constant', 'tokens': [51022, 759, 286, 362, 364, 6114, 597, 307, 18031, 11, 7006, 597, 307, 18031, 281, 312, 5754, 51212], 'temperature': 0.0, 'avg_logprob': -0.3369090092646611, 'compression_ratio': 1.9195402298850575, 'no_speech_prob': 0.12555815279483795}, {'id': 424, 'seek': 212864, 'start': 2145.6, 'end': 2156.2, 'text': ' in all possible executions, then I will replace those occurrences of the variable with a constant,', 'tokens': [51212, 294, 439, 1944, 4454, 3666, 11, 550, 286, 486, 7406, 729, 5160, 38983, 295, 264, 7006, 365, 257, 5754, 11, 51742], 'temperature': 0.0, 'avg_logprob': -0.3369090092646611, 'compression_ratio': 1.9195402298850575, 'no_speech_prob': 0.12555815279483795}, {'id': 425, 'seek': 212864, 'start': 2156.2, 'end': 2158.0, 'text': ' right.', 'tokens': [51742, 558, 13, 51832], 'temperature': 0.0, 'avg_logprob': -0.3369090092646611, 'compression_ratio': 1.9195402298850575, 'no_speech_prob': 0.12555815279483795}, {'id': 426, 'seek': 215800, 'start': 2158.36, 'end': 2168.0, 'text': ' I will replace it in all, as far as I can push, okay.', 'tokens': [50382, 286, 486, 7406, 309, 294, 439, 11, 382, 1400, 382, 286, 393, 2944, 11, 1392, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.18462598323822021, 'compression_ratio': 1.6736111111111112, 'no_speech_prob': 0.0018867967883124948}, {'id': 427, 'seek': 215800, 'start': 2168.0, 'end': 2169.0, 'text': ' But this is conservative.', 'tokens': [50864, 583, 341, 307, 13780, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.18462598323822021, 'compression_ratio': 1.6736111111111112, 'no_speech_prob': 0.0018867967883124948}, {'id': 428, 'seek': 215800, 'start': 2169.0, 'end': 2172.04, 'text': ' It can discover only a subset of all possible constants.', 'tokens': [50914, 467, 393, 4411, 787, 257, 25993, 295, 439, 1944, 35870, 13, 51066], 'temperature': 0.0, 'avg_logprob': -0.18462598323822021, 'compression_ratio': 1.6736111111111112, 'no_speech_prob': 0.0018867967883124948}, {'id': 429, 'seek': 215800, 'start': 2172.04, 'end': 2176.12, 'text': ' We cannot discover all possible constants, right.', 'tokens': [51066, 492, 2644, 4411, 439, 1944, 35870, 11, 558, 13, 51270], 'temperature': 0.0, 'avg_logprob': -0.18462598323822021, 'compression_ratio': 1.6736111111111112, 'no_speech_prob': 0.0018867967883124948}, {'id': 430, 'seek': 215800, 'start': 2176.12, 'end': 2186.84, 'text': ' Why do I say I cannot discover all possible constants?', 'tokens': [51270, 1545, 360, 286, 584, 286, 2644, 4411, 439, 1944, 35870, 30, 51806], 'temperature': 0.0, 'avg_logprob': -0.18462598323822021, 'compression_ratio': 1.6736111111111112, 'no_speech_prob': 0.0018867967883124948}, {'id': 431, 'seek': 218684, 'start': 2186.84, 'end': 2190.76, 'text': ' Why do I say I cannot discover all possible constants?', 'tokens': [50364, 1545, 360, 286, 584, 286, 2644, 4411, 439, 1944, 35870, 30, 50560], 'temperature': 0.0, 'avg_logprob': -0.5992493484959458, 'compression_ratio': 1.054945054945055, 'no_speech_prob': 0.42762577533721924}, {'id': 432, 'seek': 218684, 'start': 2190.76, 'end': 2195.2400000000002, 'text': ' Example, what is the example?', 'tokens': [50560, 24755, 781, 11, 437, 307, 264, 1365, 30, 50784], 'temperature': 0.0, 'avg_logprob': -0.5992493484959458, 'compression_ratio': 1.054945054945055, 'no_speech_prob': 0.42762577533721924}, {'id': 433, 'seek': 218684, 'start': 2195.2400000000002, 'end': 2197.2400000000002, 'text': ' Okay.', 'tokens': [50784, 1033, 13, 50884], 'temperature': 0.0, 'avg_logprob': -0.5992493484959458, 'compression_ratio': 1.054945054945055, 'no_speech_prob': 0.42762577533721924}, {'id': 434, 'seek': 218684, 'start': 2197.2400000000002, 'end': 2199.2400000000002, 'text': ' Yeah.', 'tokens': [50884, 865, 13, 50984], 'temperature': 0.0, 'avg_logprob': -0.5992493484959458, 'compression_ratio': 1.054945054945055, 'no_speech_prob': 0.42762577533721924}, {'id': 435, 'seek': 222924, 'start': 2229.64, 'end': 2232.24, 'text': ' See what you are seeing is the ordering.', 'tokens': [50384, 3008, 437, 291, 366, 2577, 307, 264, 21739, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.2999170334612737, 'compression_ratio': 1.4899328859060403, 'no_speech_prob': 0.048032209277153015}, {'id': 436, 'seek': 222924, 'start': 2232.24, 'end': 2235.7999999999997, 'text': ' What if I do the other way around?', 'tokens': [50514, 708, 498, 286, 360, 264, 661, 636, 926, 30, 50692], 'temperature': 0.0, 'avg_logprob': -0.2999170334612737, 'compression_ratio': 1.4899328859060403, 'no_speech_prob': 0.048032209277153015}, {'id': 437, 'seek': 222924, 'start': 2235.7999999999997, 'end': 2241.12, 'text': ' See I mean what if I will first do the other optimization then do constant propagation.', 'tokens': [50692, 3008, 286, 914, 437, 498, 286, 486, 700, 360, 264, 661, 19618, 550, 360, 5754, 38377, 13, 50958], 'temperature': 0.0, 'avg_logprob': -0.2999170334612737, 'compression_ratio': 1.4899328859060403, 'no_speech_prob': 0.048032209277153015}, {'id': 438, 'seek': 222924, 'start': 2241.12, 'end': 2242.12, 'text': ' But here is an example, right.', 'tokens': [50958, 583, 510, 307, 364, 1365, 11, 558, 13, 51008], 'temperature': 0.0, 'avg_logprob': -0.2999170334612737, 'compression_ratio': 1.4899328859060403, 'no_speech_prob': 0.048032209277153015}, {'id': 439, 'seek': 222924, 'start': 2242.12, 'end': 2244.52, 'text': ' I mean very simple example.', 'tokens': [51008, 286, 914, 588, 2199, 1365, 13, 51128], 'temperature': 0.0, 'avg_logprob': -0.2999170334612737, 'compression_ratio': 1.4899328859060403, 'no_speech_prob': 0.048032209277153015}, {'id': 440, 'seek': 224452, 'start': 2244.52, 'end': 2263.0, 'text': ' If i is greater than 10, x equal to 3, else x equal to 5, right.', 'tokens': [50364, 759, 741, 307, 5044, 813, 1266, 11, 2031, 2681, 281, 805, 11, 1646, 2031, 2681, 281, 1025, 11, 558, 13, 51288], 'temperature': 0.0, 'avg_logprob': -0.21538113711173074, 'compression_ratio': 1.2714285714285714, 'no_speech_prob': 0.019033009186387062}, {'id': 441, 'seek': 224452, 'start': 2263.0, 'end': 2266.32, 'text': ' This code was written long back.', 'tokens': [51288, 639, 3089, 390, 3720, 938, 646, 13, 51454], 'temperature': 0.0, 'avg_logprob': -0.21538113711173074, 'compression_ratio': 1.2714285714285714, 'no_speech_prob': 0.019033009186387062}, {'id': 442, 'seek': 224452, 'start': 2266.32, 'end': 2274.28, 'text': ' So if you do not like 2018 and make it 2000, you will recollect the y2k problem.', 'tokens': [51454, 407, 498, 291, 360, 406, 411, 6096, 293, 652, 309, 8132, 11, 291, 486, 39495, 557, 264, 288, 17, 74, 1154, 13, 51852], 'temperature': 0.0, 'avg_logprob': -0.21538113711173074, 'compression_ratio': 1.2714285714285714, 'no_speech_prob': 0.019033009186387062}, {'id': 443, 'seek': 227428, 'start': 2275.0400000000004, 'end': 2276.0400000000004, 'text': ' Right.', 'tokens': [50402, 1779, 13, 50452], 'temperature': 0.0, 'avg_logprob': -0.18547682535080684, 'compression_ratio': 1.7318435754189945, 'no_speech_prob': 0.0008161549922078848}, {'id': 444, 'seek': 227428, 'start': 2276.0400000000004, 'end': 2279.28, 'text': ' If it is greater than 2000, do something else, do something else.', 'tokens': [50452, 759, 309, 307, 5044, 813, 8132, 11, 360, 746, 1646, 11, 360, 746, 1646, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.18547682535080684, 'compression_ratio': 1.7318435754189945, 'no_speech_prob': 0.0008161549922078848}, {'id': 445, 'seek': 227428, 'start': 2279.28, 'end': 2286.44, 'text': ' If you look at this code and want to optimize now, the code is still there but now you know', 'tokens': [50614, 759, 291, 574, 412, 341, 3089, 293, 528, 281, 19719, 586, 11, 264, 3089, 307, 920, 456, 457, 586, 291, 458, 50972], 'temperature': 0.0, 'avg_logprob': -0.18547682535080684, 'compression_ratio': 1.7318435754189945, 'no_speech_prob': 0.0008161549922078848}, {'id': 446, 'seek': 227428, 'start': 2286.44, 'end': 2292.6800000000003, 'text': ' that this year is always going to be greater than 2000.', 'tokens': [50972, 300, 341, 1064, 307, 1009, 516, 281, 312, 5044, 813, 8132, 13, 51284], 'temperature': 0.0, 'avg_logprob': -0.18547682535080684, 'compression_ratio': 1.7318435754189945, 'no_speech_prob': 0.0008161549922078848}, {'id': 447, 'seek': 227428, 'start': 2292.6800000000003, 'end': 2300.2000000000003, 'text': ' But the compiler would not know and cannot say that this is a constant.', 'tokens': [51284, 583, 264, 31958, 576, 406, 458, 293, 2644, 584, 300, 341, 307, 257, 5754, 13, 51660], 'temperature': 0.0, 'avg_logprob': -0.18547682535080684, 'compression_ratio': 1.7318435754189945, 'no_speech_prob': 0.0008161549922078848}, {'id': 448, 'seek': 227428, 'start': 2300.2000000000003, 'end': 2301.2000000000003, 'text': ' It is a constant.', 'tokens': [51660, 467, 307, 257, 5754, 13, 51710], 'temperature': 0.0, 'avg_logprob': -0.18547682535080684, 'compression_ratio': 1.7318435754189945, 'no_speech_prob': 0.0008161549922078848}, {'id': 449, 'seek': 230120, 'start': 2302.12, 'end': 2305.2, 'text': ' So the programmer knows, programmer with his intelligence or her intelligence now know', 'tokens': [50410, 407, 264, 32116, 3255, 11, 32116, 365, 702, 7599, 420, 720, 7599, 586, 458, 50564], 'temperature': 0.0, 'avg_logprob': -0.2463782878404253, 'compression_ratio': 1.8190954773869348, 'no_speech_prob': 0.051659900695085526}, {'id': 450, 'seek': 230120, 'start': 2305.2, 'end': 2308.56, 'text': ' that it is a constant.', 'tokens': [50564, 300, 309, 307, 257, 5754, 13, 50732], 'temperature': 0.0, 'avg_logprob': -0.2463782878404253, 'compression_ratio': 1.8190954773869348, 'no_speech_prob': 0.051659900695085526}, {'id': 451, 'seek': 230120, 'start': 2308.56, 'end': 2310.08, 'text': ' But we cannot detect all the constants.', 'tokens': [50732, 583, 321, 2644, 5531, 439, 264, 35870, 13, 50808], 'temperature': 0.0, 'avg_logprob': -0.2463782878404253, 'compression_ratio': 1.8190954773869348, 'no_speech_prob': 0.051659900695085526}, {'id': 452, 'seek': 230120, 'start': 2310.08, 'end': 2315.56, 'text': ' Similarly, there may be a loop that the programmer knows that it will be executed or it will', 'tokens': [50808, 13157, 11, 456, 815, 312, 257, 6367, 300, 264, 32116, 3255, 300, 309, 486, 312, 17577, 420, 309, 486, 51082], 'temperature': 0.0, 'avg_logprob': -0.2463782878404253, 'compression_ratio': 1.8190954773869348, 'no_speech_prob': 0.051659900695085526}, {'id': 453, 'seek': 230120, 'start': 2315.56, 'end': 2318.7599999999998, 'text': ' never be executed.', 'tokens': [51082, 1128, 312, 17577, 13, 51242], 'temperature': 0.0, 'avg_logprob': -0.2463782878404253, 'compression_ratio': 1.8190954773869348, 'no_speech_prob': 0.051659900695085526}, {'id': 454, 'seek': 230120, 'start': 2318.7599999999998, 'end': 2321.4399999999996, 'text': ' But compiler cannot figure out some of those.', 'tokens': [51242, 583, 31958, 2644, 2573, 484, 512, 295, 729, 13, 51376], 'temperature': 0.0, 'avg_logprob': -0.2463782878404253, 'compression_ratio': 1.8190954773869348, 'no_speech_prob': 0.051659900695085526}, {'id': 455, 'seek': 230120, 'start': 2321.4399999999996, 'end': 2327.08, 'text': ' So we are, we discover only a subset of the constants.', 'tokens': [51376, 407, 321, 366, 11, 321, 4411, 787, 257, 25993, 295, 264, 35870, 13, 51658], 'temperature': 0.0, 'avg_logprob': -0.2463782878404253, 'compression_ratio': 1.8190954773869348, 'no_speech_prob': 0.051659900695085526}, {'id': 456, 'seek': 232708, 'start': 2327.96, 'end': 2334.0, 'text': ' And a constant lattice, constant propagation lattice is this lattice where you have all', 'tokens': [50408, 400, 257, 5754, 34011, 11, 5754, 38377, 34011, 307, 341, 34011, 689, 291, 362, 439, 50710], 'temperature': 0.0, 'avg_logprob': -0.33939335392970665, 'compression_ratio': 1.576, 'no_speech_prob': 0.06179088354110718}, {'id': 457, 'seek': 232708, 'start': 2334.0, 'end': 2342.6, 'text': ' the constant literals in the middle and you have top on the top and meet of any one of', 'tokens': [50710, 264, 5754, 2733, 1124, 294, 264, 2808, 293, 291, 362, 1192, 322, 264, 1192, 293, 1677, 295, 604, 472, 295, 51140], 'temperature': 0.0, 'avg_logprob': -0.33939335392970665, 'compression_ratio': 1.576, 'no_speech_prob': 0.06179088354110718}, {'id': 458, 'seek': 232708, 'start': 2342.6, 'end': 2345.6, 'text': ' them is bottom.', 'tokens': [51140, 552, 307, 2767, 13, 51290], 'temperature': 0.0, 'avg_logprob': -0.33939335392970665, 'compression_ratio': 1.576, 'no_speech_prob': 0.06179088354110718}, {'id': 459, 'seek': 232708, 'start': 2345.6, 'end': 2346.6, 'text': ' Right.', 'tokens': [51290, 1779, 13, 51340], 'temperature': 0.0, 'avg_logprob': -0.33939335392970665, 'compression_ratio': 1.576, 'no_speech_prob': 0.06179088354110718}, {'id': 460, 'seek': 234660, 'start': 2347.12, 'end': 2357.48, 'text': ' So what is the, what do these values top and bottom mean?', 'tokens': [50390, 407, 437, 307, 264, 11, 437, 360, 613, 4190, 1192, 293, 2767, 914, 30, 50908], 'temperature': 0.0, 'avg_logprob': -0.2222163802699039, 'compression_ratio': 1.6772151898734178, 'no_speech_prob': 0.004379060585051775}, {'id': 461, 'seek': 234660, 'start': 2357.48, 'end': 2361.7999999999997, 'text': ' For us, bottom means constant value cannot be guaranteed.', 'tokens': [50908, 1171, 505, 11, 2767, 1355, 5754, 2158, 2644, 312, 18031, 13, 51124], 'temperature': 0.0, 'avg_logprob': -0.2222163802699039, 'compression_ratio': 1.6772151898734178, 'no_speech_prob': 0.004379060585051775}, {'id': 462, 'seek': 234660, 'start': 2361.7999999999997, 'end': 2363.88, 'text': ' Right.', 'tokens': [51124, 1779, 13, 51228], 'temperature': 0.0, 'avg_logprob': -0.2222163802699039, 'compression_ratio': 1.6772151898734178, 'no_speech_prob': 0.004379060585051775}, {'id': 463, 'seek': 234660, 'start': 2363.88, 'end': 2369.46, 'text': ' So if a value of Xi compute to be a bottom, it means it is not a constant.', 'tokens': [51228, 407, 498, 257, 2158, 295, 15712, 14722, 281, 312, 257, 2767, 11, 309, 1355, 309, 307, 406, 257, 5754, 13, 51507], 'temperature': 0.0, 'avg_logprob': -0.2222163802699039, 'compression_ratio': 1.6772151898734178, 'no_speech_prob': 0.004379060585051775}, {'id': 464, 'seek': 234660, 'start': 2369.46, 'end': 2373.52, 'text': ' If it is top, it means it may be a constant but not yet determined.', 'tokens': [51507, 759, 309, 307, 1192, 11, 309, 1355, 309, 815, 312, 257, 5754, 457, 406, 1939, 9540, 13, 51710], 'temperature': 0.0, 'avg_logprob': -0.2222163802699039, 'compression_ratio': 1.6772151898734178, 'no_speech_prob': 0.004379060585051775}, {'id': 465, 'seek': 237352, 'start': 2374.44, 'end': 2377.44, 'text': ' So these are the initial values.', 'tokens': [50410, 407, 613, 366, 264, 5883, 4190, 13, 50560], 'temperature': 0.0, 'avg_logprob': -0.21382018267098118, 'compression_ratio': 1.45, 'no_speech_prob': 0.15916451811790466}, {'id': 466, 'seek': 237352, 'start': 2377.44, 'end': 2387.84, 'text': ' And for all X, X meet top is X and X meet bottom is bottom.', 'tokens': [50560, 400, 337, 439, 1783, 11, 1783, 1677, 1192, 307, 1783, 293, 1783, 1677, 2767, 307, 2767, 13, 51080], 'temperature': 0.0, 'avg_logprob': -0.21382018267098118, 'compression_ratio': 1.45, 'no_speech_prob': 0.15916451811790466}, {'id': 467, 'seek': 237352, 'start': 2387.84, 'end': 2401.04, 'text': ' And if it is two constants, I am doing C1 meet C1 is C1 and C1 meet C2 is bottom.', 'tokens': [51080, 400, 498, 309, 307, 732, 35870, 11, 286, 669, 884, 383, 16, 1677, 383, 16, 307, 383, 16, 293, 383, 16, 1677, 383, 17, 307, 2767, 13, 51740], 'temperature': 0.0, 'avg_logprob': -0.21382018267098118, 'compression_ratio': 1.45, 'no_speech_prob': 0.15916451811790466}, {'id': 468, 'seek': 240104, 'start': 2401.56, 'end': 2408.7599999999998, 'text': ' Does that make sense?', 'tokens': [50390, 4402, 300, 652, 2020, 30, 50750], 'temperature': 0.0, 'avg_logprob': -0.3217619941348121, 'compression_ratio': 1.455128205128205, 'no_speech_prob': 0.04329654574394226}, {'id': 469, 'seek': 240104, 'start': 2408.7599999999998, 'end': 2417.96, 'text': ' And so we will be using a pair of techniques from a pretty old paper and this technique', 'tokens': [50750, 400, 370, 321, 486, 312, 1228, 257, 6119, 295, 7512, 490, 257, 1238, 1331, 3035, 293, 341, 6532, 51210], 'temperature': 0.0, 'avg_logprob': -0.3217619941348121, 'compression_ratio': 1.455128205128205, 'no_speech_prob': 0.04329654574394226}, {'id': 470, 'seek': 240104, 'start': 2417.96, 'end': 2423.0, 'text': " is called the Kildall's algorithm.", 'tokens': [51210, 307, 1219, 264, 591, 793, 336, 311, 9284, 13, 51462], 'temperature': 0.0, 'avg_logprob': -0.3217619941348121, 'compression_ratio': 1.455128205128205, 'no_speech_prob': 0.04329654574394226}, {'id': 471, 'seek': 240104, 'start': 2423.0, 'end': 2430.8, 'text': ' And if you are interested, you can also look at the refluis paper of the old time.', 'tokens': [51462, 400, 498, 291, 366, 3102, 11, 291, 393, 611, 574, 412, 264, 1895, 2781, 271, 3035, 295, 264, 1331, 565, 13, 51852], 'temperature': 0.0, 'avg_logprob': -0.3217619941348121, 'compression_ratio': 1.455128205128205, 'no_speech_prob': 0.04329654574394226}, {'id': 472, 'seek': 243080, 'start': 2431.5600000000004, 'end': 2433.8, 'text': ' So we are talking about simple constants.', 'tokens': [50402, 407, 321, 366, 1417, 466, 2199, 35870, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.21715529148395246, 'compression_ratio': 1.6977777777777778, 'no_speech_prob': 0.01000336091965437}, {'id': 473, 'seek': 243080, 'start': 2433.8, 'end': 2438.48, 'text': ' So we are talking about constant that can be proved to be constant provided you do not', 'tokens': [50514, 407, 321, 366, 1417, 466, 5754, 300, 393, 312, 14617, 281, 312, 5754, 5649, 291, 360, 406, 50748], 'temperature': 0.0, 'avg_logprob': -0.21715529148395246, 'compression_ratio': 1.6977777777777778, 'no_speech_prob': 0.01000336091965437}, {'id': 474, 'seek': 243080, 'start': 2438.48, 'end': 2440.52, 'text': ' assume which way the branch is taken.', 'tokens': [50748, 6552, 597, 636, 264, 9819, 307, 2726, 13, 50850], 'temperature': 0.0, 'avg_logprob': -0.21715529148395246, 'compression_ratio': 1.6977777777777778, 'no_speech_prob': 0.01000336091965437}, {'id': 475, 'seek': 243080, 'start': 2440.52, 'end': 2449.28, 'text': ' You will assume that both branches are taken and only one value is maintained per variable', 'tokens': [50850, 509, 486, 6552, 300, 1293, 14770, 366, 2726, 293, 787, 472, 2158, 307, 17578, 680, 7006, 51288], 'temperature': 0.0, 'avg_logprob': -0.21715529148395246, 'compression_ratio': 1.6977777777777778, 'no_speech_prob': 0.01000336091965437}, {'id': 476, 'seek': 243080, 'start': 2449.28, 'end': 2450.76, 'text': ' along each path.', 'tokens': [51288, 2051, 1184, 3100, 13, 51362], 'temperature': 0.0, 'avg_logprob': -0.21715529148395246, 'compression_ratio': 1.6977777777777778, 'no_speech_prob': 0.01000336091965437}, {'id': 477, 'seek': 243080, 'start': 2450.76, 'end': 2454.48, 'text': ' So I cannot say X is either minus 1 or 2.', 'tokens': [51362, 407, 286, 2644, 584, 1783, 307, 2139, 3175, 502, 420, 568, 13, 51548], 'temperature': 0.0, 'avg_logprob': -0.21715529148395246, 'compression_ratio': 1.6977777777777778, 'no_speech_prob': 0.01000336091965437}, {'id': 478, 'seek': 243080, 'start': 2454.48, 'end': 2458.2400000000002, 'text': ' In the previous loop, we said no, no, Y will be minus 1 or 2.', 'tokens': [51548, 682, 264, 3894, 6367, 11, 321, 848, 572, 11, 572, 11, 398, 486, 312, 3175, 502, 420, 568, 13, 51736], 'temperature': 0.0, 'avg_logprob': -0.21715529148395246, 'compression_ratio': 1.6977777777777778, 'no_speech_prob': 0.01000336091965437}, {'id': 479, 'seek': 243080, 'start': 2458.2400000000002, 'end': 2459.2400000000002, 'text': ' No.', 'tokens': [51736, 883, 13, 51786], 'temperature': 0.0, 'avg_logprob': -0.21715529148395246, 'compression_ratio': 1.6977777777777778, 'no_speech_prob': 0.01000336091965437}, {'id': 480, 'seek': 245924, 'start': 2459.68, 'end': 2466.9199999999996, 'text': ' So here we are talking about simple constants where, do you want to watch?', 'tokens': [50386, 407, 510, 321, 366, 1417, 466, 2199, 35870, 689, 11, 360, 291, 528, 281, 1159, 30, 50748], 'temperature': 0.0, 'avg_logprob': -0.3242076873779297, 'compression_ratio': 1.6419753086419753, 'no_speech_prob': 0.004974734503775835}, {'id': 481, 'seek': 245924, 'start': 2466.9199999999996, 'end': 2469.0, 'text': ' Go ahead.', 'tokens': [50748, 1037, 2286, 13, 50852], 'temperature': 0.0, 'avg_logprob': -0.3242076873779297, 'compression_ratio': 1.6419753086419753, 'no_speech_prob': 0.004974734503775835}, {'id': 482, 'seek': 245924, 'start': 2469.0, 'end': 2471.9199999999996, 'text': ' We will maintain only one value.', 'tokens': [50852, 492, 486, 6909, 787, 472, 2158, 13, 50998], 'temperature': 0.0, 'avg_logprob': -0.3242076873779297, 'compression_ratio': 1.6419753086419753, 'no_speech_prob': 0.004974734503775835}, {'id': 483, 'seek': 245924, 'start': 2471.9199999999996, 'end': 2476.12, 'text': ' We will not maintain multiple values, simple constants.', 'tokens': [50998, 492, 486, 406, 6909, 3866, 4190, 11, 2199, 35870, 13, 51208], 'temperature': 0.0, 'avg_logprob': -0.3242076873779297, 'compression_ratio': 1.6419753086419753, 'no_speech_prob': 0.004974734503775835}, {'id': 484, 'seek': 245924, 'start': 2476.12, 'end': 2481.0, 'text': " The Kildall's algorithm starts with an entry node.", 'tokens': [51208, 440, 591, 793, 336, 311, 9284, 3719, 365, 364, 8729, 9984, 13, 51452], 'temperature': 0.0, 'avg_logprob': -0.3242076873779297, 'compression_ratio': 1.6419753086419753, 'no_speech_prob': 0.004974734503775835}, {'id': 485, 'seek': 245924, 'start': 2481.0, 'end': 2483.7599999999998, 'text': ' The processing starts with an entry node.', 'tokens': [51452, 440, 9007, 3719, 365, 364, 8729, 9984, 13, 51590], 'temperature': 0.0, 'avg_logprob': -0.3242076873779297, 'compression_ratio': 1.6419753086419753, 'no_speech_prob': 0.004974734503775835}, {'id': 486, 'seek': 248376, 'start': 2484.28, 'end': 2489.44, 'text': ' We will process each node and produce a constant information.', 'tokens': [50390, 492, 486, 1399, 1184, 9984, 293, 5258, 257, 5754, 1589, 13, 50648], 'temperature': 0.0, 'avg_logprob': -0.16638634713847986, 'compression_ratio': 1.8641304347826086, 'no_speech_prob': 0.038443583995103836}, {'id': 487, 'seek': 248376, 'start': 2489.44, 'end': 2495.7200000000003, 'text': ' That is, I will process a statement and say I had a set of constants.', 'tokens': [50648, 663, 307, 11, 286, 486, 1399, 257, 5629, 293, 584, 286, 632, 257, 992, 295, 35870, 13, 50962], 'temperature': 0.0, 'avg_logprob': -0.16638634713847986, 'compression_ratio': 1.8641304347826086, 'no_speech_prob': 0.038443583995103836}, {'id': 488, 'seek': 248376, 'start': 2495.7200000000003, 'end': 2501.5200000000004, 'text': ' Now I have another set of constants.', 'tokens': [50962, 823, 286, 362, 1071, 992, 295, 35870, 13, 51252], 'temperature': 0.0, 'avg_logprob': -0.16638634713847986, 'compression_ratio': 1.8641304347826086, 'no_speech_prob': 0.038443583995103836}, {'id': 489, 'seek': 248376, 'start': 2501.5200000000004, 'end': 2505.76, 'text': ' And we will pass this information to all its successors.', 'tokens': [51252, 400, 321, 486, 1320, 341, 1589, 281, 439, 1080, 2245, 830, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.16638634713847986, 'compression_ratio': 1.8641304347826086, 'no_speech_prob': 0.038443583995103836}, {'id': 490, 'seek': 248376, 'start': 2505.76, 'end': 2509.8, 'text': ' And at a merge point, let us say I have a set of constants coming from left side, another', 'tokens': [51464, 400, 412, 257, 22183, 935, 11, 718, 505, 584, 286, 362, 257, 992, 295, 35870, 1348, 490, 1411, 1252, 11, 1071, 51666], 'temperature': 0.0, 'avg_logprob': -0.16638634713847986, 'compression_ratio': 1.8641304347826086, 'no_speech_prob': 0.038443583995103836}, {'id': 491, 'seek': 248376, 'start': 2509.8, 'end': 2511.5, 'text': ' set coming from right side.', 'tokens': [51666, 992, 1348, 490, 558, 1252, 13, 51751], 'temperature': 0.0, 'avg_logprob': -0.16638634713847986, 'compression_ratio': 1.8641304347826086, 'no_speech_prob': 0.038443583995103836}, {'id': 492, 'seek': 251150, 'start': 2511.5, 'end': 2513.98, 'text': ' And what will I do?', 'tokens': [50364, 400, 437, 486, 286, 360, 30, 50488], 'temperature': 0.0, 'avg_logprob': -0.24742957523890904, 'compression_ratio': 1.5112781954887218, 'no_speech_prob': 0.017411034554243088}, {'id': 493, 'seek': 251150, 'start': 2513.98, 'end': 2521.02, 'text': ' I will take a pairwise meet.', 'tokens': [50488, 286, 486, 747, 257, 6119, 3711, 1677, 13, 50840], 'temperature': 0.0, 'avg_logprob': -0.24742957523890904, 'compression_ratio': 1.5112781954887218, 'no_speech_prob': 0.017411034554243088}, {'id': 494, 'seek': 251150, 'start': 2521.02, 'end': 2532.34, 'text': ' And when I am processing a node, if its constant value has changed, but the constants it carries', 'tokens': [50840, 400, 562, 286, 669, 9007, 257, 9984, 11, 498, 1080, 5754, 2158, 575, 3105, 11, 457, 264, 35870, 309, 16402, 51406], 'temperature': 0.0, 'avg_logprob': -0.24742957523890904, 'compression_ratio': 1.5112781954887218, 'no_speech_prob': 0.017411034554243088}, {'id': 495, 'seek': 251150, 'start': 2532.34, 'end': 2537.38, 'text': ' has changed, then I will say my constants have changed.', 'tokens': [51406, 575, 3105, 11, 550, 286, 486, 584, 452, 35870, 362, 3105, 13, 51658], 'temperature': 0.0, 'avg_logprob': -0.24742957523890904, 'compression_ratio': 1.5112781954887218, 'no_speech_prob': 0.017411034554243088}, {'id': 496, 'seek': 253738, 'start': 2537.38, 'end': 2548.1400000000003, 'text': ' New successors, make sure you are added to the work list.', 'tokens': [50364, 1873, 2245, 830, 11, 652, 988, 291, 366, 3869, 281, 264, 589, 1329, 13, 50902], 'temperature': 0.0, 'avg_logprob': -0.23832453409830728, 'compression_ratio': 1.5828877005347595, 'no_speech_prob': 0.053598709404468536}, {'id': 497, 'seek': 253738, 'start': 2548.1400000000003, 'end': 2553.42, 'text': ' For simplicity, we will assume we have one basic block per statement.', 'tokens': [50902, 1171, 25632, 11, 321, 486, 6552, 321, 362, 472, 3875, 3461, 680, 5629, 13, 51166], 'temperature': 0.0, 'avg_logprob': -0.23832453409830728, 'compression_ratio': 1.5828877005347595, 'no_speech_prob': 0.053598709404468536}, {'id': 498, 'seek': 253738, 'start': 2553.42, 'end': 2558.42, 'text': ' And for each statement, we will have a transfer function.', 'tokens': [51166, 400, 337, 1184, 5629, 11, 321, 486, 362, 257, 5003, 2445, 13, 51416], 'temperature': 0.0, 'avg_logprob': -0.23832453409830728, 'compression_ratio': 1.5828877005347595, 'no_speech_prob': 0.053598709404468536}, {'id': 499, 'seek': 253738, 'start': 2558.42, 'end': 2561.38, 'text': ' We will see what the transfer function will look like.', 'tokens': [51416, 492, 486, 536, 437, 264, 5003, 2445, 486, 574, 411, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.23832453409830728, 'compression_ratio': 1.5828877005347595, 'no_speech_prob': 0.053598709404468536}, {'id': 500, 'seek': 253738, 'start': 2561.38, 'end': 2566.54, 'text': ' The important thing is the data set of dataflow values.', 'tokens': [51564, 440, 1021, 551, 307, 264, 1412, 992, 295, 1412, 10565, 4190, 13, 51822], 'temperature': 0.0, 'avg_logprob': -0.23832453409830728, 'compression_ratio': 1.5828877005347595, 'no_speech_prob': 0.053598709404468536}, {'id': 501, 'seek': 256654, 'start': 2566.7, 'end': 2567.7, 'text': ' What am I tracking?', 'tokens': [50372, 708, 669, 286, 11603, 30, 50422], 'temperature': 0.0, 'avg_logprob': -0.30124031172858345, 'compression_ratio': 1.6164383561643836, 'no_speech_prob': 0.06593411415815353}, {'id': 502, 'seek': 256654, 'start': 2567.7, 'end': 2572.54, 'text': ' I want to know whether a variable is a constant or not.', 'tokens': [50422, 286, 528, 281, 458, 1968, 257, 7006, 307, 257, 5754, 420, 406, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.30124031172858345, 'compression_ratio': 1.6164383561643836, 'no_speech_prob': 0.06593411415815353}, {'id': 503, 'seek': 256654, 'start': 2572.54, 'end': 2574.02, 'text': ' Correct?', 'tokens': [50664, 12753, 30, 50738], 'temperature': 0.0, 'avg_logprob': -0.30124031172858345, 'compression_ratio': 1.6164383561643836, 'no_speech_prob': 0.06593411415815353}, {'id': 504, 'seek': 256654, 'start': 2574.02, 'end': 2591.22, 'text': ' So for each block, I will track for each variable v1, v2 up to vn, I will track whether it is', 'tokens': [50738, 407, 337, 1184, 3461, 11, 286, 486, 2837, 337, 1184, 7006, 371, 16, 11, 371, 17, 493, 281, 371, 77, 11, 286, 486, 2837, 1968, 309, 307, 51598], 'temperature': 0.0, 'avg_logprob': -0.30124031172858345, 'compression_ratio': 1.6164383561643836, 'no_speech_prob': 0.06593411415815353}, {'id': 505, 'seek': 256654, 'start': 2591.22, 'end': 2596.46, 'text': ' a what is its constant value or rather what is its value.', 'tokens': [51598, 257, 437, 307, 1080, 5754, 2158, 420, 2831, 437, 307, 1080, 2158, 13, 51860], 'temperature': 0.0, 'avg_logprob': -0.30124031172858345, 'compression_ratio': 1.6164383561643836, 'no_speech_prob': 0.06593411415815353}, {'id': 506, 'seek': 259646, 'start': 2597.38, 'end': 2601.46, 'text': ' What value can a variable take?', 'tokens': [50410, 708, 2158, 393, 257, 7006, 747, 30, 50614], 'temperature': 0.0, 'avg_logprob': -0.2817810992805325, 'compression_ratio': 1.5294117647058822, 'no_speech_prob': 0.0012836841633543372}, {'id': 507, 'seek': 259646, 'start': 2601.46, 'end': 2605.98, 'text': ' Either one of the constant literals, top or bottom.', 'tokens': [50614, 13746, 472, 295, 264, 5754, 2733, 1124, 11, 1192, 420, 2767, 13, 50840], 'temperature': 0.0, 'avg_logprob': -0.2817810992805325, 'compression_ratio': 1.5294117647058822, 'no_speech_prob': 0.0012836841633543372}, {'id': 508, 'seek': 259646, 'start': 2605.98, 'end': 2615.3, 'text': ' A variable may contain only these three types of values, either a constant literal, top', 'tokens': [50840, 316, 7006, 815, 5304, 787, 613, 1045, 3467, 295, 4190, 11, 2139, 257, 5754, 20411, 11, 1192, 51306], 'temperature': 0.0, 'avg_logprob': -0.2817810992805325, 'compression_ratio': 1.5294117647058822, 'no_speech_prob': 0.0012836841633543372}, {'id': 509, 'seek': 259646, 'start': 2615.3, 'end': 2619.2200000000003, 'text': ' or bottom.', 'tokens': [51306, 420, 2767, 13, 51502], 'temperature': 0.0, 'avg_logprob': -0.2817810992805325, 'compression_ratio': 1.5294117647058822, 'no_speech_prob': 0.0012836841633543372}, {'id': 510, 'seek': 261922, 'start': 2619.98, 'end': 2629.8599999999997, 'text': ' Now, if I call it as this map as m that takes a variable v and gives me its value, then', 'tokens': [50402, 823, 11, 498, 286, 818, 309, 382, 341, 4471, 382, 275, 300, 2516, 257, 7006, 371, 293, 2709, 385, 1080, 2158, 11, 550, 50896], 'temperature': 0.0, 'avg_logprob': -0.20967860099596855, 'compression_ratio': 1.7407407407407407, 'no_speech_prob': 0.012994186952710152}, {'id': 511, 'seek': 261922, 'start': 2629.8599999999997, 'end': 2637.8599999999997, 'text': ' each variable, each statement when I process it, it takes one m as input and gives me an', 'tokens': [50896, 1184, 7006, 11, 1184, 5629, 562, 286, 1399, 309, 11, 309, 2516, 472, 275, 382, 4846, 293, 2709, 385, 364, 51296], 'temperature': 0.0, 'avg_logprob': -0.20967860099596855, 'compression_ratio': 1.7407407407407407, 'no_speech_prob': 0.012994186952710152}, {'id': 512, 'seek': 261922, 'start': 2637.8599999999997, 'end': 2640.62, 'text': ' m prime as output.', 'tokens': [51296, 275, 5835, 382, 5598, 13, 51434], 'temperature': 0.0, 'avg_logprob': -0.20967860099596855, 'compression_ratio': 1.7407407407407407, 'no_speech_prob': 0.012994186952710152}, {'id': 513, 'seek': 261922, 'start': 2640.62, 'end': 2647.8599999999997, 'text': ' That is, it has, it takes as input a set of values for variables and gives out another', 'tokens': [51434, 663, 307, 11, 309, 575, 11, 309, 2516, 382, 4846, 257, 992, 295, 4190, 337, 9102, 293, 2709, 484, 1071, 51796], 'temperature': 0.0, 'avg_logprob': -0.20967860099596855, 'compression_ratio': 1.7407407407407407, 'no_speech_prob': 0.012994186952710152}, {'id': 514, 'seek': 264786, 'start': 2647.86, 'end': 2654.5, 'text': ' set of values for the variables.', 'tokens': [50364, 992, 295, 4190, 337, 264, 9102, 13, 50696], 'temperature': 0.0, 'avg_logprob': -0.3232578478361431, 'compression_ratio': 1.3986486486486487, 'no_speech_prob': 0.008570300415158272}, {'id': 515, 'seek': 264786, 'start': 2654.5, 'end': 2656.98, 'text': ' So now let us look at how the functions look like.', 'tokens': [50696, 407, 586, 718, 505, 574, 412, 577, 264, 6828, 574, 411, 13, 50820], 'temperature': 0.0, 'avg_logprob': -0.3232578478361431, 'compression_ratio': 1.3986486486486487, 'no_speech_prob': 0.008570300415158272}, {'id': 516, 'seek': 264786, 'start': 2656.98, 'end': 2664.26, 'text': ' Again, as we said, we will start with an entry node.', 'tokens': [50820, 3764, 11, 382, 321, 848, 11, 321, 486, 722, 365, 364, 8729, 9984, 13, 51184], 'temperature': 0.0, 'avg_logprob': -0.3232578478361431, 'compression_ratio': 1.3986486486486487, 'no_speech_prob': 0.008570300415158272}, {'id': 517, 'seek': 264786, 'start': 2664.26, 'end': 2677.1400000000003, 'text': ' Which statements in the program can change my variable to value map m?', 'tokens': [51184, 3013, 12363, 294, 264, 1461, 393, 1319, 452, 7006, 281, 2158, 4471, 275, 30, 51828], 'temperature': 0.0, 'avg_logprob': -0.3232578478361431, 'compression_ratio': 1.3986486486486487, 'no_speech_prob': 0.008570300415158272}, {'id': 518, 'seek': 267714, 'start': 2677.14, 'end': 2680.9, 'text': ' Only assignment statements, nothing else, right?', 'tokens': [50364, 5686, 15187, 12363, 11, 1825, 1646, 11, 558, 30, 50552], 'temperature': 0.0, 'avg_logprob': -0.3673487062807436, 'compression_ratio': 1.68, 'no_speech_prob': 0.008504693396389484}, {'id': 519, 'seek': 267714, 'start': 2680.9, 'end': 2685.06, 'text': ' Jumps do not change nothing, right?', 'tokens': [50552, 508, 16951, 360, 406, 1319, 1825, 11, 558, 30, 50760], 'temperature': 0.0, 'avg_logprob': -0.3673487062807436, 'compression_ratio': 1.68, 'no_speech_prob': 0.008504693396389484}, {'id': 520, 'seek': 267714, 'start': 2685.06, 'end': 2686.06, 'text': ' Only assignment statements.', 'tokens': [50760, 5686, 15187, 12363, 13, 50810], 'temperature': 0.0, 'avg_logprob': -0.3673487062807436, 'compression_ratio': 1.68, 'no_speech_prob': 0.008504693396389484}, {'id': 521, 'seek': 267714, 'start': 2686.06, 'end': 2693.2599999999998, 'text': ' So now let us understand how does it, how do these things change for assignment statements?', 'tokens': [50810, 407, 586, 718, 505, 1223, 577, 775, 309, 11, 577, 360, 613, 721, 1319, 337, 15187, 12363, 30, 51170], 'temperature': 0.0, 'avg_logprob': -0.3673487062807436, 'compression_ratio': 1.68, 'no_speech_prob': 0.008504693396389484}, {'id': 522, 'seek': 267714, 'start': 2693.2599999999998, 'end': 2694.2599999999998, 'text': ' Okay.', 'tokens': [51170, 1033, 13, 51220], 'temperature': 0.0, 'avg_logprob': -0.3673487062807436, 'compression_ratio': 1.68, 'no_speech_prob': 0.008504693396389484}, {'id': 523, 'seek': 269426, 'start': 2694.26, 'end': 2709.94, 'text': ' Let us say I have a statement S and I want to compute the flow function Fs, right?', 'tokens': [50364, 961, 505, 584, 286, 362, 257, 5629, 318, 293, 286, 528, 281, 14722, 264, 3095, 2445, 479, 82, 11, 558, 30, 51148], 'temperature': 0.0, 'avg_logprob': -0.19851277271906534, 'compression_ratio': 1.4390243902439024, 'no_speech_prob': 0.007810650393366814}, {'id': 524, 'seek': 269426, 'start': 2709.94, 'end': 2712.3, 'text': ' And we say it is an assignment statement.', 'tokens': [51148, 400, 321, 584, 309, 307, 364, 15187, 5629, 13, 51266], 'temperature': 0.0, 'avg_logprob': -0.19851277271906534, 'compression_ratio': 1.4390243902439024, 'no_speech_prob': 0.007810650393366814}, {'id': 525, 'seek': 269426, 'start': 2712.3, 'end': 2716.9, 'text': ' So what is the structure of an assignment statement?', 'tokens': [51266, 407, 437, 307, 264, 3877, 295, 364, 15187, 5629, 30, 51496], 'temperature': 0.0, 'avg_logprob': -0.19851277271906534, 'compression_ratio': 1.4390243902439024, 'no_speech_prob': 0.007810650393366814}, {'id': 526, 'seek': 271690, 'start': 2717.9, 'end': 2721.86, 'text': ' It can be, sorry, S can be of one of the following, right?', 'tokens': [50414, 467, 393, 312, 11, 2597, 11, 318, 393, 312, 295, 472, 295, 264, 3480, 11, 558, 30, 50612], 'temperature': 0.0, 'avg_logprob': -0.30272960662841797, 'compression_ratio': 1.5290322580645161, 'no_speech_prob': 0.11555970460176468}, {'id': 527, 'seek': 271690, 'start': 2721.86, 'end': 2729.54, 'text': ' S can be a copy, right?', 'tokens': [50612, 318, 393, 312, 257, 5055, 11, 558, 30, 50996], 'temperature': 0.0, 'avg_logprob': -0.30272960662841797, 'compression_ratio': 1.5290322580645161, 'no_speech_prob': 0.11555970460176468}, {'id': 528, 'seek': 271690, 'start': 2729.54, 'end': 2735.98, 'text': ' Or what expressions I can have?', 'tokens': [50996, 1610, 437, 15277, 286, 393, 362, 30, 51318], 'temperature': 0.0, 'avg_logprob': -0.30272960662841797, 'compression_ratio': 1.5290322580645161, 'no_speech_prob': 0.11555970460176468}, {'id': 529, 'seek': 271690, 'start': 2735.98, 'end': 2738.78, 'text': ' Either a unary expression or a binary expression.', 'tokens': [51318, 13746, 257, 517, 822, 6114, 420, 257, 17434, 6114, 13, 51458], 'temperature': 0.0, 'avg_logprob': -0.30272960662841797, 'compression_ratio': 1.5290322580645161, 'no_speech_prob': 0.11555970460176468}, {'id': 530, 'seek': 271690, 'start': 2738.78, 'end': 2739.78, 'text': ' That is it.', 'tokens': [51458, 663, 307, 309, 13, 51508], 'temperature': 0.0, 'avg_logprob': -0.30272960662841797, 'compression_ratio': 1.5290322580645161, 'no_speech_prob': 0.11555970460176468}, {'id': 531, 'seek': 271690, 'start': 2739.78, 'end': 2743.38, 'text': ' My three address code does not have anything more than that.', 'tokens': [51508, 1222, 1045, 2985, 3089, 775, 406, 362, 1340, 544, 813, 300, 13, 51688], 'temperature': 0.0, 'avg_logprob': -0.30272960662841797, 'compression_ratio': 1.5290322580645161, 'no_speech_prob': 0.11555970460176468}, {'id': 532, 'seek': 274338, 'start': 2743.38, 'end': 2758.5, 'text': ' So x equal to y of z or x equal to of y, right?', 'tokens': [50364, 407, 2031, 2681, 281, 288, 295, 710, 420, 2031, 2681, 281, 295, 288, 11, 558, 30, 51120], 'temperature': 0.0, 'avg_logprob': -0.19430730780776667, 'compression_ratio': 1.2566371681415929, 'no_speech_prob': 0.03389086201786995}, {'id': 533, 'seek': 274338, 'start': 2758.5, 'end': 2768.1, 'text': ' Now if this is my statement, so my flow function of Fs takes some m as an argument.', 'tokens': [51120, 823, 498, 341, 307, 452, 5629, 11, 370, 452, 3095, 2445, 295, 479, 82, 2516, 512, 275, 382, 364, 6770, 13, 51600], 'temperature': 0.0, 'avg_logprob': -0.19430730780776667, 'compression_ratio': 1.2566371681415929, 'no_speech_prob': 0.03389086201786995}, {'id': 534, 'seek': 274338, 'start': 2768.1, 'end': 2769.1, 'text': ' What is m?', 'tokens': [51600, 708, 307, 275, 30, 51650], 'temperature': 0.0, 'avg_logprob': -0.19430730780776667, 'compression_ratio': 1.2566371681415929, 'no_speech_prob': 0.03389086201786995}, {'id': 535, 'seek': 276910, 'start': 2769.8199999999997, 'end': 2774.38, 'text': ' m is the mapping flow of variables to values.', 'tokens': [50400, 275, 307, 264, 18350, 3095, 295, 9102, 281, 4190, 13, 50628], 'temperature': 0.0, 'avg_logprob': -0.2516583399986153, 'compression_ratio': 1.6293706293706294, 'no_speech_prob': 0.37672463059425354}, {'id': 536, 'seek': 276910, 'start': 2774.38, 'end': 2785.86, 'text': ' In the out for S, which variables value may change?', 'tokens': [50628, 682, 264, 484, 337, 318, 11, 597, 9102, 2158, 815, 1319, 30, 51202], 'temperature': 0.0, 'avg_logprob': -0.2516583399986153, 'compression_ratio': 1.6293706293706294, 'no_speech_prob': 0.37672463059425354}, {'id': 537, 'seek': 276910, 'start': 2785.86, 'end': 2789.74, 'text': ' My statement is of the form x equal to blah.', 'tokens': [51202, 1222, 5629, 307, 295, 264, 1254, 2031, 2681, 281, 12288, 13, 51396], 'temperature': 0.0, 'avg_logprob': -0.2516583399986153, 'compression_ratio': 1.6293706293706294, 'no_speech_prob': 0.37672463059425354}, {'id': 538, 'seek': 276910, 'start': 2789.74, 'end': 2792.98, 'text': ' Which variables value may change?', 'tokens': [51396, 3013, 9102, 2158, 815, 1319, 30, 51558], 'temperature': 0.0, 'avg_logprob': -0.2516583399986153, 'compression_ratio': 1.6293706293706294, 'no_speech_prob': 0.37672463059425354}, {'id': 539, 'seek': 276910, 'start': 2792.98, 'end': 2793.98, 'text': ' X.', 'tokens': [51558, 1783, 13, 51608], 'temperature': 0.0, 'avg_logprob': -0.2516583399986153, 'compression_ratio': 1.6293706293706294, 'no_speech_prob': 0.37672463059425354}, {'id': 540, 'seek': 276910, 'start': 2793.98, 'end': 2798.98, 'text': ' For rest of the variables, the value will not change.', 'tokens': [51608, 1171, 1472, 295, 264, 9102, 11, 264, 2158, 486, 406, 1319, 13, 51858], 'temperature': 0.0, 'avg_logprob': -0.2516583399986153, 'compression_ratio': 1.6293706293706294, 'no_speech_prob': 0.37672463059425354}, {'id': 541, 'seek': 279898, 'start': 2799.86, 'end': 2800.86, 'text': ' Does that make sense?', 'tokens': [50408, 4402, 300, 652, 2020, 30, 50458], 'temperature': 0.0, 'avg_logprob': -0.27760328005437984, 'compression_ratio': 1.417808219178082, 'no_speech_prob': 0.00271003064699471}, {'id': 542, 'seek': 279898, 'start': 2800.86, 'end': 2801.86, 'text': ' Okay.', 'tokens': [50458, 1033, 13, 50508], 'temperature': 0.0, 'avg_logprob': -0.27760328005437984, 'compression_ratio': 1.417808219178082, 'no_speech_prob': 0.00271003064699471}, {'id': 543, 'seek': 279898, 'start': 2801.86, 'end': 2808.86, 'text': ' So, for the Fs of m, right, how do I define this function?', 'tokens': [50508, 407, 11, 337, 264, 479, 82, 295, 275, 11, 558, 11, 577, 360, 286, 6964, 341, 2445, 30, 50858], 'temperature': 0.0, 'avg_logprob': -0.27760328005437984, 'compression_ratio': 1.417808219178082, 'no_speech_prob': 0.00271003064699471}, {'id': 544, 'seek': 279898, 'start': 2808.86, 'end': 2820.54, 'text': ' It returns an m prime such that m prime of a variable v is equal to mv, the old, this', 'tokens': [50858, 467, 11247, 364, 275, 5835, 1270, 300, 275, 5835, 295, 257, 7006, 371, 307, 2681, 281, 275, 85, 11, 264, 1331, 11, 341, 51442], 'temperature': 0.0, 'avg_logprob': -0.27760328005437984, 'compression_ratio': 1.417808219178082, 'no_speech_prob': 0.00271003064699471}, {'id': 545, 'seek': 279898, 'start': 2820.54, 'end': 2827.26, 'text': ' mv, if v is not equal to x, right?', 'tokens': [51442, 275, 85, 11, 498, 371, 307, 406, 2681, 281, 2031, 11, 558, 30, 51778], 'temperature': 0.0, 'avg_logprob': -0.27760328005437984, 'compression_ratio': 1.417808219178082, 'no_speech_prob': 0.00271003064699471}, {'id': 546, 'seek': 282726, 'start': 2827.26, 'end': 2834.94, 'text': ' If v is not equal to x, if v is not equal to x, then m prime v is same as mv.', 'tokens': [50364, 759, 371, 307, 406, 2681, 281, 2031, 11, 498, 371, 307, 406, 2681, 281, 2031, 11, 550, 275, 5835, 371, 307, 912, 382, 275, 85, 13, 50748], 'temperature': 0.0, 'avg_logprob': -0.2825264428791247, 'compression_ratio': 1.5319148936170213, 'no_speech_prob': 0.02591531164944172}, {'id': 547, 'seek': 282726, 'start': 2834.94, 'end': 2843.2200000000003, 'text': ' If I write, if I let me, okay, here it is, I am writing v there, so I will just change', 'tokens': [50748, 759, 286, 2464, 11, 498, 286, 718, 385, 11, 1392, 11, 510, 309, 307, 11, 286, 669, 3579, 371, 456, 11, 370, 286, 486, 445, 1319, 51162], 'temperature': 0.0, 'avg_logprob': -0.2825264428791247, 'compression_ratio': 1.5319148936170213, 'no_speech_prob': 0.02591531164944172}, {'id': 548, 'seek': 282726, 'start': 2843.2200000000003, 'end': 2848.46, 'text': ' it to v so that we talk about the same thing.', 'tokens': [51162, 309, 281, 371, 370, 300, 321, 751, 466, 264, 912, 551, 13, 51424], 'temperature': 0.0, 'avg_logprob': -0.2825264428791247, 'compression_ratio': 1.5319148936170213, 'no_speech_prob': 0.02591531164944172}, {'id': 549, 'seek': 282726, 'start': 2848.46, 'end': 2850.7400000000002, 'text': ' Okay?', 'tokens': [51424, 1033, 30, 51538], 'temperature': 0.0, 'avg_logprob': -0.2825264428791247, 'compression_ratio': 1.5319148936170213, 'no_speech_prob': 0.02591531164944172}, {'id': 550, 'seek': 285074, 'start': 2851.22, 'end': 2864.1, 'text': ' So, this is v, m prime of v prime is equal to m of v prime if v is not equal to v prime.', 'tokens': [50388, 407, 11, 341, 307, 371, 11, 275, 5835, 295, 371, 5835, 307, 2681, 281, 275, 295, 371, 5835, 498, 371, 307, 406, 2681, 281, 371, 5835, 13, 51032], 'temperature': 0.0, 'avg_logprob': -0.22135531596648386, 'compression_ratio': 1.6594202898550725, 'no_speech_prob': 0.007876030169427395}, {'id': 551, 'seek': 285074, 'start': 2864.1, 'end': 2865.1, 'text': ' Okay?', 'tokens': [51032, 1033, 30, 51082], 'temperature': 0.0, 'avg_logprob': -0.22135531596648386, 'compression_ratio': 1.6594202898550725, 'no_speech_prob': 0.007876030169427395}, {'id': 552, 'seek': 285074, 'start': 2865.1, 'end': 2872.4199999999996, 'text': ' So, if you are not, if you are writing to v, then the map of all other variables, there', 'tokens': [51082, 407, 11, 498, 291, 366, 406, 11, 498, 291, 366, 3579, 281, 371, 11, 550, 264, 4471, 295, 439, 661, 9102, 11, 456, 51448], 'temperature': 0.0, 'avg_logprob': -0.22135531596648386, 'compression_ratio': 1.6594202898550725, 'no_speech_prob': 0.007876030169427395}, {'id': 553, 'seek': 285074, 'start': 2872.4199999999996, 'end': 2875.1, 'text': ' is no change.', 'tokens': [51448, 307, 572, 1319, 13, 51582], 'temperature': 0.0, 'avg_logprob': -0.22135531596648386, 'compression_ratio': 1.6594202898550725, 'no_speech_prob': 0.007876030169427395}, {'id': 554, 'seek': 285074, 'start': 2875.1, 'end': 2877.54, 'text': ' If v prime is equal to v, right?', 'tokens': [51582, 759, 371, 5835, 307, 2681, 281, 371, 11, 558, 30, 51704], 'temperature': 0.0, 'avg_logprob': -0.22135531596648386, 'compression_ratio': 1.6594202898550725, 'no_speech_prob': 0.007876030169427395}, {'id': 555, 'seek': 287754, 'start': 2878.06, 'end': 2884.58, 'text': ' So what will happen to m prime of v?', 'tokens': [50390, 407, 437, 486, 1051, 281, 275, 5835, 295, 371, 30, 50716], 'temperature': 0.0, 'avg_logprob': -0.3178281784057617, 'compression_ratio': 1.7209302325581395, 'no_speech_prob': 0.0043467869982123375}, {'id': 556, 'seek': 287754, 'start': 2884.58, 'end': 2885.82, 'text': ' What will happen to m prime of v?', 'tokens': [50716, 708, 486, 1051, 281, 275, 5835, 295, 371, 30, 50778], 'temperature': 0.0, 'avg_logprob': -0.3178281784057617, 'compression_ratio': 1.7209302325581395, 'no_speech_prob': 0.0043467869982123375}, {'id': 557, 'seek': 287754, 'start': 2885.82, 'end': 2890.58, 'text': ' Let us compute.', 'tokens': [50778, 961, 505, 14722, 13, 51016], 'temperature': 0.0, 'avg_logprob': -0.3178281784057617, 'compression_ratio': 1.7209302325581395, 'no_speech_prob': 0.0043467869982123375}, {'id': 558, 'seek': 287754, 'start': 2890.58, 'end': 2893.54, 'text': ' What will happen to m prime of v?', 'tokens': [51016, 708, 486, 1051, 281, 275, 5835, 295, 371, 30, 51164], 'temperature': 0.0, 'avg_logprob': -0.3178281784057617, 'compression_ratio': 1.7209302325581395, 'no_speech_prob': 0.0043467869982123375}, {'id': 559, 'seek': 287754, 'start': 2893.54, 'end': 2896.54, 'text': ' There are three conditions.', 'tokens': [51164, 821, 366, 1045, 4487, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.3178281784057617, 'compression_ratio': 1.7209302325581395, 'no_speech_prob': 0.0043467869982123375}, {'id': 560, 'seek': 289654, 'start': 2896.54, 'end': 2908.06, 'text': ' If v is equal to y is the statement you are processing, what will be m prime of v?', 'tokens': [50364, 759, 371, 307, 2681, 281, 288, 307, 264, 5629, 291, 366, 9007, 11, 437, 486, 312, 275, 5835, 295, 371, 30, 50940], 'temperature': 0.0, 'avg_logprob': -0.31963385910284325, 'compression_ratio': 1.3305785123966942, 'no_speech_prob': 0.0032537090592086315}, {'id': 561, 'seek': 289654, 'start': 2908.06, 'end': 2909.3, 'text': ' Perfect.', 'tokens': [50940, 10246, 13, 51002], 'temperature': 0.0, 'avg_logprob': -0.31963385910284325, 'compression_ratio': 1.3305785123966942, 'no_speech_prob': 0.0032537090592086315}, {'id': 562, 'seek': 289654, 'start': 2909.3, 'end': 2917.86, 'text': ' m prime of v is equal to m of y.', 'tokens': [51002, 275, 5835, 295, 371, 307, 2681, 281, 275, 295, 288, 13, 51430], 'temperature': 0.0, 'avg_logprob': -0.31963385910284325, 'compression_ratio': 1.3305785123966942, 'no_speech_prob': 0.0032537090592086315}, {'id': 563, 'seek': 289654, 'start': 2917.86, 'end': 2920.38, 'text': ' What were it was?', 'tokens': [51430, 708, 645, 309, 390, 30, 51556], 'temperature': 0.0, 'avg_logprob': -0.31963385910284325, 'compression_ratio': 1.3305785123966942, 'no_speech_prob': 0.0032537090592086315}, {'id': 564, 'seek': 289654, 'start': 2920.38, 'end': 2921.38, 'text': ' Right?', 'tokens': [51556, 1779, 30, 51606], 'temperature': 0.0, 'avg_logprob': -0.31963385910284325, 'compression_ratio': 1.3305785123966942, 'no_speech_prob': 0.0032537090592086315}, {'id': 565, 'seek': 289654, 'start': 2921.38, 'end': 2922.38, 'text': ' Fine?', 'tokens': [51606, 12024, 30, 51656], 'temperature': 0.0, 'avg_logprob': -0.31963385910284325, 'compression_ratio': 1.3305785123966942, 'no_speech_prob': 0.0032537090592086315}, {'id': 566, 'seek': 289654, 'start': 2922.38, 'end': 2923.38, 'text': ' Okay.', 'tokens': [51656, 1033, 13, 51706], 'temperature': 0.0, 'avg_logprob': -0.31963385910284325, 'compression_ratio': 1.3305785123966942, 'no_speech_prob': 0.0032537090592086315}, {'id': 567, 'seek': 292338, 'start': 2924.06, 'end': 2927.78, 'text': ' If it is y of z, then what?', 'tokens': [50398, 759, 309, 307, 288, 295, 710, 11, 550, 437, 30, 50584], 'temperature': 0.0, 'avg_logprob': -0.2961923178140219, 'compression_ratio': 1.4525547445255473, 'no_speech_prob': 0.013130160979926586}, {'id': 568, 'seek': 292338, 'start': 2927.78, 'end': 2930.34, 'text': ' What can this of be?', 'tokens': [50584, 708, 393, 341, 295, 312, 30, 50712], 'temperature': 0.0, 'avg_logprob': -0.2961923178140219, 'compression_ratio': 1.4525547445255473, 'no_speech_prob': 0.013130160979926586}, {'id': 569, 'seek': 292338, 'start': 2930.34, 'end': 2934.82, 'text': ' Plus minus star, something like that, right?', 'tokens': [50712, 7721, 3175, 3543, 11, 746, 411, 300, 11, 558, 30, 50936], 'temperature': 0.0, 'avg_logprob': -0.2961923178140219, 'compression_ratio': 1.4525547445255473, 'no_speech_prob': 0.013130160979926586}, {'id': 570, 'seek': 292338, 'start': 2934.82, 'end': 2935.82, 'text': ' Okay?', 'tokens': [50936, 1033, 30, 50986], 'temperature': 0.0, 'avg_logprob': -0.2961923178140219, 'compression_ratio': 1.4525547445255473, 'no_speech_prob': 0.013130160979926586}, {'id': 571, 'seek': 292338, 'start': 2935.82, 'end': 2939.62, 'text': ' So, v equal to y of z, then what?', 'tokens': [50986, 407, 11, 371, 2681, 281, 288, 295, 710, 11, 550, 437, 30, 51176], 'temperature': 0.0, 'avg_logprob': -0.2961923178140219, 'compression_ratio': 1.4525547445255473, 'no_speech_prob': 0.013130160979926586}, {'id': 572, 'seek': 292338, 'start': 2939.62, 'end': 2940.62, 'text': ' Right.', 'tokens': [51176, 1779, 13, 51226], 'temperature': 0.0, 'avg_logprob': -0.2961923178140219, 'compression_ratio': 1.4525547445255473, 'no_speech_prob': 0.013130160979926586}, {'id': 573, 'seek': 292338, 'start': 2940.62, 'end': 2949.46, 'text': ' So, you are saying m prime of v equal to m of y of m of z.', 'tokens': [51226, 407, 11, 291, 366, 1566, 275, 5835, 295, 371, 2681, 281, 275, 295, 288, 295, 275, 295, 710, 13, 51668], 'temperature': 0.0, 'avg_logprob': -0.2961923178140219, 'compression_ratio': 1.4525547445255473, 'no_speech_prob': 0.013130160979926586}, {'id': 574, 'seek': 294946, 'start': 2949.46, 'end': 2957.46, 'text': ' So, let us say m of y was 2 and m of z was 3, then you will say, and this is, op is plus,', 'tokens': [50364, 407, 11, 718, 505, 584, 275, 295, 288, 390, 568, 293, 275, 295, 710, 390, 805, 11, 550, 291, 486, 584, 11, 293, 341, 307, 11, 999, 307, 1804, 11, 50764], 'temperature': 0.0, 'avg_logprob': -0.27228443710892286, 'compression_ratio': 1.728813559322034, 'no_speech_prob': 0.23318445682525635}, {'id': 575, 'seek': 294946, 'start': 2957.46, 'end': 2960.7, 'text': ' then you will do 2 plus 3 and mark it as 5.', 'tokens': [50764, 550, 291, 486, 360, 568, 1804, 805, 293, 1491, 309, 382, 1025, 13, 50926], 'temperature': 0.0, 'avg_logprob': -0.27228443710892286, 'compression_ratio': 1.728813559322034, 'no_speech_prob': 0.23318445682525635}, {'id': 576, 'seek': 294946, 'start': 2960.7, 'end': 2963.02, 'text': ' But what if this is 2 and this is bottom?', 'tokens': [50926, 583, 437, 498, 341, 307, 568, 293, 341, 307, 2767, 30, 51042], 'temperature': 0.0, 'avg_logprob': -0.27228443710892286, 'compression_ratio': 1.728813559322034, 'no_speech_prob': 0.23318445682525635}, {'id': 577, 'seek': 294946, 'start': 2963.02, 'end': 2966.46, 'text': ' If what does it mean?', 'tokens': [51042, 759, 437, 775, 309, 914, 30, 51214], 'temperature': 0.0, 'avg_logprob': -0.27228443710892286, 'compression_ratio': 1.728813559322034, 'no_speech_prob': 0.23318445682525635}, {'id': 578, 'seek': 294946, 'start': 2966.46, 'end': 2970.26, 'text': ' One of them is not a constant, the other one is a constant.', 'tokens': [51214, 1485, 295, 552, 307, 406, 257, 5754, 11, 264, 661, 472, 307, 257, 5754, 13, 51404], 'temperature': 0.0, 'avg_logprob': -0.27228443710892286, 'compression_ratio': 1.728813559322034, 'no_speech_prob': 0.23318445682525635}, {'id': 579, 'seek': 294946, 'start': 2970.26, 'end': 2971.26, 'text': ' Then what?', 'tokens': [51404, 1396, 437, 30, 51454], 'temperature': 0.0, 'avg_logprob': -0.27228443710892286, 'compression_ratio': 1.728813559322034, 'no_speech_prob': 0.23318445682525635}, {'id': 580, 'seek': 294946, 'start': 2971.26, 'end': 2972.26, 'text': ' Then?', 'tokens': [51454, 1396, 30, 51504], 'temperature': 0.0, 'avg_logprob': -0.27228443710892286, 'compression_ratio': 1.728813559322034, 'no_speech_prob': 0.23318445682525635}, {'id': 581, 'seek': 294946, 'start': 2972.26, 'end': 2973.26, 'text': ' Not a constant.', 'tokens': [51504, 1726, 257, 5754, 13, 51554], 'temperature': 0.0, 'avg_logprob': -0.27228443710892286, 'compression_ratio': 1.728813559322034, 'no_speech_prob': 0.23318445682525635}, {'id': 582, 'seek': 294946, 'start': 2973.26, 'end': 2974.26, 'text': ' Not a constant.', 'tokens': [51554, 1726, 257, 5754, 13, 51604], 'temperature': 0.0, 'avg_logprob': -0.27228443710892286, 'compression_ratio': 1.728813559322034, 'no_speech_prob': 0.23318445682525635}, {'id': 583, 'seek': 297426, 'start': 2975.0600000000004, 'end': 2982.0600000000004, 'text': ' So, if both of them, if this is a constant, c1 and this is a constant c2, then I will', 'tokens': [50404, 407, 11, 498, 1293, 295, 552, 11, 498, 341, 307, 257, 5754, 11, 269, 16, 293, 341, 307, 257, 5754, 269, 17, 11, 550, 286, 486, 50754], 'temperature': 0.0, 'avg_logprob': -0.29439051397915544, 'compression_ratio': 1.7, 'no_speech_prob': 0.031070763245224953}, {'id': 584, 'seek': 297426, 'start': 2982.0600000000004, 'end': 2986.1000000000004, 'text': ' do c1 of c2.', 'tokens': [50754, 360, 269, 16, 295, 269, 17, 13, 50956], 'temperature': 0.0, 'avg_logprob': -0.29439051397915544, 'compression_ratio': 1.7, 'no_speech_prob': 0.031070763245224953}, {'id': 585, 'seek': 297426, 'start': 2986.1000000000004, 'end': 2989.3, 'text': ' If one of them is bottom, then?', 'tokens': [50956, 759, 472, 295, 552, 307, 2767, 11, 550, 30, 51116], 'temperature': 0.0, 'avg_logprob': -0.29439051397915544, 'compression_ratio': 1.7, 'no_speech_prob': 0.031070763245224953}, {'id': 586, 'seek': 297426, 'start': 2989.3, 'end': 2990.5400000000004, 'text': ' Then the value is bottom.', 'tokens': [51116, 1396, 264, 2158, 307, 2767, 13, 51178], 'temperature': 0.0, 'avg_logprob': -0.29439051397915544, 'compression_ratio': 1.7, 'no_speech_prob': 0.031070763245224953}, {'id': 587, 'seek': 297426, 'start': 2990.5400000000004, 'end': 2993.9, 'text': ' This is this or bottom.', 'tokens': [51178, 639, 307, 341, 420, 2767, 13, 51346], 'temperature': 0.0, 'avg_logprob': -0.29439051397915544, 'compression_ratio': 1.7, 'no_speech_prob': 0.031070763245224953}, {'id': 588, 'seek': 297426, 'start': 2993.9, 'end': 2996.42, 'text': ' When is it bottom?', 'tokens': [51346, 1133, 307, 309, 2767, 30, 51472], 'temperature': 0.0, 'avg_logprob': -0.29439051397915544, 'compression_ratio': 1.7, 'no_speech_prob': 0.031070763245224953}, {'id': 589, 'seek': 297426, 'start': 2996.42, 'end': 3000.0200000000004, 'text': ' If either one of them is bottom.', 'tokens': [51472, 759, 2139, 472, 295, 552, 307, 2767, 13, 51652], 'temperature': 0.0, 'avg_logprob': -0.29439051397915544, 'compression_ratio': 1.7, 'no_speech_prob': 0.031070763245224953}, {'id': 590, 'seek': 297426, 'start': 3000.0200000000004, 'end': 3003.1800000000003, 'text': ' Okay?', 'tokens': [51652, 1033, 30, 51810], 'temperature': 0.0, 'avg_logprob': -0.29439051397915544, 'compression_ratio': 1.7, 'no_speech_prob': 0.031070763245224953}, {'id': 591, 'seek': 300318, 'start': 3004.1, 'end': 3008.8599999999997, 'text': ' And similarly, if it is v equal to op y, what will it be?', 'tokens': [50410, 400, 14138, 11, 498, 309, 307, 371, 2681, 281, 999, 288, 11, 437, 486, 309, 312, 30, 50648], 'temperature': 0.0, 'avg_logprob': -0.25603277866656965, 'compression_ratio': 1.2545454545454546, 'no_speech_prob': 0.03553539887070656}, {'id': 592, 'seek': 300318, 'start': 3008.8599999999997, 'end': 3019.8999999999996, 'text': ' What will be m prime of v?', 'tokens': [50648, 708, 486, 312, 275, 5835, 295, 371, 30, 51200], 'temperature': 0.0, 'avg_logprob': -0.25603277866656965, 'compression_ratio': 1.2545454545454546, 'no_speech_prob': 0.03553539887070656}, {'id': 593, 'seek': 300318, 'start': 3019.8999999999996, 'end': 3026.1, 'text': ' If y is constant, if y is constant, then?', 'tokens': [51200, 759, 288, 307, 5754, 11, 498, 288, 307, 5754, 11, 550, 30, 51510], 'temperature': 0.0, 'avg_logprob': -0.25603277866656965, 'compression_ratio': 1.2545454545454546, 'no_speech_prob': 0.03553539887070656}, {'id': 594, 'seek': 300318, 'start': 3026.1, 'end': 3030.3799999999997, 'text': ' Then op c1.', 'tokens': [51510, 1396, 999, 269, 16, 13, 51724], 'temperature': 0.0, 'avg_logprob': -0.25603277866656965, 'compression_ratio': 1.2545454545454546, 'no_speech_prob': 0.03553539887070656}, {'id': 595, 'seek': 303038, 'start': 3030.38, 'end': 3038.1800000000003, 'text': ' If m of y is equal to c1 else bottom.', 'tokens': [50364, 759, 275, 295, 288, 307, 2681, 281, 269, 16, 1646, 2767, 13, 50754], 'temperature': 0.0, 'avg_logprob': -0.5440485440767728, 'compression_ratio': 1.3893805309734513, 'no_speech_prob': 0.1865202784538269}, {'id': 596, 'seek': 303038, 'start': 3038.1800000000003, 'end': 3042.34, 'text': ' If it is bottom, this is bottom.', 'tokens': [50754, 759, 309, 307, 2767, 11, 341, 307, 2767, 13, 50962], 'temperature': 0.0, 'avg_logprob': -0.5440485440767728, 'compression_ratio': 1.3893805309734513, 'no_speech_prob': 0.1865202784538269}, {'id': 597, 'seek': 303038, 'start': 3042.34, 'end': 3043.34, 'text': ' Make sense?', 'tokens': [50962, 4387, 2020, 30, 51012], 'temperature': 0.0, 'avg_logprob': -0.5440485440767728, 'compression_ratio': 1.3893805309734513, 'no_speech_prob': 0.1865202784538269}, {'id': 598, 'seek': 303038, 'start': 3043.34, 'end': 3044.34, 'text': ' Yeah.', 'tokens': [51012, 865, 13, 51062], 'temperature': 0.0, 'avg_logprob': -0.5440485440767728, 'compression_ratio': 1.3893805309734513, 'no_speech_prob': 0.1865202784538269}, {'id': 599, 'seek': 303038, 'start': 3044.34, 'end': 3045.34, 'text': ' Yeah.', 'tokens': [51062, 865, 13, 51112], 'temperature': 0.0, 'avg_logprob': -0.5440485440767728, 'compression_ratio': 1.3893805309734513, 'no_speech_prob': 0.1865202784538269}, {'id': 600, 'seek': 303038, 'start': 3045.34, 'end': 3046.34, 'text': ' This one, right?', 'tokens': [51112, 639, 472, 11, 558, 30, 51162], 'temperature': 0.0, 'avg_logprob': -0.5440485440767728, 'compression_ratio': 1.3893805309734513, 'no_speech_prob': 0.1865202784538269}, {'id': 601, 'seek': 303038, 'start': 3046.34, 'end': 3047.34, 'text': ' Yeah.', 'tokens': [51162, 865, 13, 51212], 'temperature': 0.0, 'avg_logprob': -0.5440485440767728, 'compression_ratio': 1.3893805309734513, 'no_speech_prob': 0.1865202784538269}, {'id': 602, 'seek': 303038, 'start': 3047.34, 'end': 3056.34, 'text': ' What it says is, if it is bottom, then?', 'tokens': [51212, 708, 309, 1619, 307, 11, 498, 309, 307, 2767, 11, 550, 30, 51662], 'temperature': 0.0, 'avg_logprob': -0.5440485440767728, 'compression_ratio': 1.3893805309734513, 'no_speech_prob': 0.1865202784538269}, {'id': 603, 'seek': 305634, 'start': 3056.9, 'end': 3057.9, 'text': ' This one, right?', 'tokens': [50392, 639, 472, 11, 558, 30, 50442], 'temperature': 0.0, 'avg_logprob': -0.2717554524259747, 'compression_ratio': 1.4044117647058822, 'no_speech_prob': 0.08443701267242432}, {'id': 604, 'seek': 305634, 'start': 3057.9, 'end': 3058.9, 'text': ' Yeah.', 'tokens': [50442, 865, 13, 50492], 'temperature': 0.0, 'avg_logprob': -0.2717554524259747, 'compression_ratio': 1.4044117647058822, 'no_speech_prob': 0.08443701267242432}, {'id': 605, 'seek': 305634, 'start': 3058.9, 'end': 3065.94, 'text': ' What it says is, you are processing a statement which says v equal to blah.', 'tokens': [50492, 708, 309, 1619, 307, 11, 291, 366, 9007, 257, 5629, 597, 1619, 371, 2681, 281, 12288, 13, 50844], 'temperature': 0.0, 'avg_logprob': -0.2717554524259747, 'compression_ratio': 1.4044117647058822, 'no_speech_prob': 0.08443701267242432}, {'id': 606, 'seek': 305634, 'start': 3065.94, 'end': 3067.42, 'text': ' Correct?', 'tokens': [50844, 12753, 30, 50918], 'temperature': 0.0, 'avg_logprob': -0.2717554524259747, 'compression_ratio': 1.4044117647058822, 'no_speech_prob': 0.08443701267242432}, {'id': 607, 'seek': 305634, 'start': 3067.42, 'end': 3076.54, 'text': ' Before processing this statement, you had values for all the variables including v.', 'tokens': [50918, 4546, 9007, 341, 5629, 11, 291, 632, 4190, 337, 439, 264, 9102, 3009, 371, 13, 51374], 'temperature': 0.0, 'avg_logprob': -0.2717554524259747, 'compression_ratio': 1.4044117647058822, 'no_speech_prob': 0.08443701267242432}, {'id': 608, 'seek': 307654, 'start': 3077.54, 'end': 3087.1, 'text': ' After processing this statement, which one of the old values have changed, may have changed?', 'tokens': [50414, 2381, 9007, 341, 5629, 11, 597, 472, 295, 264, 1331, 4190, 362, 3105, 11, 815, 362, 3105, 30, 50892], 'temperature': 0.0, 'avg_logprob': -0.21776921698387633, 'compression_ratio': 1.5729166666666667, 'no_speech_prob': 0.01959190145134926}, {'id': 609, 'seek': 307654, 'start': 3087.1, 'end': 3092.34, 'text': ' Only those which, only that of v.', 'tokens': [50892, 5686, 729, 597, 11, 787, 300, 295, 371, 13, 51154], 'temperature': 0.0, 'avg_logprob': -0.21776921698387633, 'compression_ratio': 1.5729166666666667, 'no_speech_prob': 0.01959190145134926}, {'id': 610, 'seek': 307654, 'start': 3092.34, 'end': 3098.46, 'text': ' For the rest which is not v, let us say you have v1, v2, v3.', 'tokens': [51154, 1171, 264, 1472, 597, 307, 406, 371, 11, 718, 505, 584, 291, 362, 371, 16, 11, 371, 17, 11, 371, 18, 13, 51460], 'temperature': 0.0, 'avg_logprob': -0.21776921698387633, 'compression_ratio': 1.5729166666666667, 'no_speech_prob': 0.01959190145134926}, {'id': 611, 'seek': 307654, 'start': 3098.46, 'end': 3101.14, 'text': ' You are writing v1 equal to blah.', 'tokens': [51460, 509, 366, 3579, 371, 16, 2681, 281, 12288, 13, 51594], 'temperature': 0.0, 'avg_logprob': -0.21776921698387633, 'compression_ratio': 1.5729166666666667, 'no_speech_prob': 0.01959190145134926}, {'id': 612, 'seek': 307654, 'start': 3101.14, 'end': 3105.42, 'text': ' Does it have, because of this statement, does the value of v2 and v3 change?', 'tokens': [51594, 4402, 309, 362, 11, 570, 295, 341, 5629, 11, 775, 264, 2158, 295, 371, 17, 293, 371, 18, 1319, 30, 51808], 'temperature': 0.0, 'avg_logprob': -0.21776921698387633, 'compression_ratio': 1.5729166666666667, 'no_speech_prob': 0.01959190145134926}, {'id': 613, 'seek': 307654, 'start': 3105.42, 'end': 3106.42, 'text': ' No.', 'tokens': [51808, 883, 13, 51858], 'temperature': 0.0, 'avg_logprob': -0.21776921698387633, 'compression_ratio': 1.5729166666666667, 'no_speech_prob': 0.01959190145134926}, {'id': 614, 'seek': 310642, 'start': 3107.3, 'end': 3112.1800000000003, 'text': ' What we are saying, except for the current variable which is being written to, for rest', 'tokens': [50408, 708, 321, 366, 1566, 11, 3993, 337, 264, 2190, 7006, 597, 307, 885, 3720, 281, 11, 337, 1472, 50652], 'temperature': 0.0, 'avg_logprob': -0.410203370180997, 'compression_ratio': 1.3109243697478992, 'no_speech_prob': 0.017421580851078033}, {'id': 615, 'seek': 310642, 'start': 3112.1800000000003, 'end': 3119.1800000000003, 'text': ' all the variables, the value is same as previous value.', 'tokens': [50652, 439, 264, 9102, 11, 264, 2158, 307, 912, 382, 3894, 2158, 13, 51002], 'temperature': 0.0, 'avg_logprob': -0.410203370180997, 'compression_ratio': 1.3109243697478992, 'no_speech_prob': 0.017421580851078033}, {'id': 616, 'seek': 310642, 'start': 3119.1800000000003, 'end': 3120.1800000000003, 'text': ' Right?', 'tokens': [51002, 1779, 30, 51052], 'temperature': 0.0, 'avg_logprob': -0.410203370180997, 'compression_ratio': 1.3109243697478992, 'no_speech_prob': 0.017421580851078033}, {'id': 617, 'seek': 310642, 'start': 3120.1800000000003, 'end': 3121.1800000000003, 'text': ' Okay.', 'tokens': [51052, 1033, 13, 51102], 'temperature': 0.0, 'avg_logprob': -0.410203370180997, 'compression_ratio': 1.3109243697478992, 'no_speech_prob': 0.017421580851078033}, {'id': 618, 'seek': 312118, 'start': 3121.18, 'end': 3136.94, 'text': ' So, we know that the value of y and z will be either constant or bottom, not top, because', 'tokens': [50364, 407, 11, 321, 458, 300, 264, 2158, 295, 288, 293, 710, 486, 312, 2139, 5754, 420, 2767, 11, 406, 1192, 11, 570, 51152], 'temperature': 0.0, 'avg_logprob': -0.35751312498062376, 'compression_ratio': 1.457516339869281, 'no_speech_prob': 0.03620867431163788}, {'id': 619, 'seek': 312118, 'start': 3136.94, 'end': 3139.94, 'text': ' there must be some initialization.', 'tokens': [51152, 456, 1633, 312, 512, 5883, 2144, 13, 51302], 'temperature': 0.0, 'avg_logprob': -0.35751312498062376, 'compression_ratio': 1.457516339869281, 'no_speech_prob': 0.03620867431163788}, {'id': 620, 'seek': 312118, 'start': 3139.94, 'end': 3140.94, 'text': ' Right.', 'tokens': [51302, 1779, 13, 51352], 'temperature': 0.0, 'avg_logprob': -0.35751312498062376, 'compression_ratio': 1.457516339869281, 'no_speech_prob': 0.03620867431163788}, {'id': 621, 'seek': 312118, 'start': 3140.94, 'end': 3146.74, 'text': ' So, in the context of Java, right, where you are guaranteed that there are no uninitialized', 'tokens': [51352, 407, 11, 294, 264, 4319, 295, 10745, 11, 558, 11, 689, 291, 366, 18031, 300, 456, 366, 572, 43456, 270, 831, 1602, 51642], 'temperature': 0.0, 'avg_logprob': -0.35751312498062376, 'compression_ratio': 1.457516339869281, 'no_speech_prob': 0.03620867431163788}, {'id': 622, 'seek': 314674, 'start': 3146.74, 'end': 3153.74, 'text': ' variables, you can be guaranteed that this will never happen.', 'tokens': [50364, 9102, 11, 291, 393, 312, 18031, 300, 341, 486, 1128, 1051, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.23731749085174209, 'compression_ratio': 1.7157894736842105, 'no_speech_prob': 0.216901496052742}, {'id': 623, 'seek': 314674, 'start': 3153.74, 'end': 3163.66, 'text': ' However, it may so happen that during the analysis, the way you choose the, the order', 'tokens': [50714, 2908, 11, 309, 815, 370, 1051, 300, 1830, 264, 5215, 11, 264, 636, 291, 2826, 264, 11, 264, 1668, 51210], 'temperature': 0.0, 'avg_logprob': -0.23731749085174209, 'compression_ratio': 1.7157894736842105, 'no_speech_prob': 0.216901496052742}, {'id': 624, 'seek': 314674, 'start': 3163.66, 'end': 3169.14, 'text': ' in which you choose, it may so happen that I am doing top of top, because you have picked', 'tokens': [51210, 294, 597, 291, 2826, 11, 309, 815, 370, 1051, 300, 286, 669, 884, 1192, 295, 1192, 11, 570, 291, 362, 6183, 51484], 'temperature': 0.0, 'avg_logprob': -0.23731749085174209, 'compression_ratio': 1.7157894736842105, 'no_speech_prob': 0.216901496052742}, {'id': 625, 'seek': 314674, 'start': 3169.14, 'end': 3170.14, 'text': ' a basic block.', 'tokens': [51484, 257, 3875, 3461, 13, 51534], 'temperature': 0.0, 'avg_logprob': -0.23731749085174209, 'compression_ratio': 1.7157894736842105, 'no_speech_prob': 0.216901496052742}, {'id': 626, 'seek': 314674, 'start': 3170.14, 'end': 3173.7, 'text': ' See, we are saying pick any block, we are not saying in any order, right.', 'tokens': [51534, 3008, 11, 321, 366, 1566, 1888, 604, 3461, 11, 321, 366, 406, 1566, 294, 604, 1668, 11, 558, 13, 51712], 'temperature': 0.0, 'avg_logprob': -0.23731749085174209, 'compression_ratio': 1.7157894736842105, 'no_speech_prob': 0.216901496052742}, {'id': 627, 'seek': 317370, 'start': 3174.66, 'end': 3179.2999999999997, 'text': ' You have picked a basic block whose predecessors have not yet been processed.', 'tokens': [50412, 509, 362, 6183, 257, 3875, 3461, 6104, 24874, 45700, 362, 406, 1939, 668, 18846, 13, 50644], 'temperature': 0.0, 'avg_logprob': -0.29916945448866833, 'compression_ratio': 1.8115942028985508, 'no_speech_prob': 0.10362065583467484}, {'id': 628, 'seek': 317370, 'start': 3179.2999999999997, 'end': 3180.9399999999996, 'text': ' So, you may get a top.', 'tokens': [50644, 407, 11, 291, 815, 483, 257, 1192, 13, 50726], 'temperature': 0.0, 'avg_logprob': -0.29916945448866833, 'compression_ratio': 1.8115942028985508, 'no_speech_prob': 0.10362065583467484}, {'id': 629, 'seek': 317370, 'start': 3180.9399999999996, 'end': 3183.9399999999996, 'text': ' So, in that case, you just leave it as top.', 'tokens': [50726, 407, 11, 294, 300, 1389, 11, 291, 445, 1856, 309, 382, 1192, 13, 50876], 'temperature': 0.0, 'avg_logprob': -0.29916945448866833, 'compression_ratio': 1.8115942028985508, 'no_speech_prob': 0.10362065583467484}, {'id': 630, 'seek': 317370, 'start': 3183.9399999999996, 'end': 3187.3399999999997, 'text': ' You do not make it a bottom, you just keep it as top.', 'tokens': [50876, 509, 360, 406, 652, 309, 257, 2767, 11, 291, 445, 1066, 309, 382, 1192, 13, 51046], 'temperature': 0.0, 'avg_logprob': -0.29916945448866833, 'compression_ratio': 1.8115942028985508, 'no_speech_prob': 0.10362065583467484}, {'id': 631, 'seek': 317370, 'start': 3187.3399999999997, 'end': 3195.8999999999996, 'text': ' So, that is why we still kept this rule that if neither of them is bottom, we will keep', 'tokens': [51046, 407, 11, 300, 307, 983, 321, 920, 4305, 341, 4978, 300, 498, 9662, 295, 552, 307, 2767, 11, 321, 486, 1066, 51474], 'temperature': 0.0, 'avg_logprob': -0.29916945448866833, 'compression_ratio': 1.8115942028985508, 'no_speech_prob': 0.10362065583467484}, {'id': 632, 'seek': 317370, 'start': 3195.8999999999996, 'end': 3196.8999999999996, 'text': ' it as top.', 'tokens': [51474, 309, 382, 1192, 13, 51524], 'temperature': 0.0, 'avg_logprob': -0.29916945448866833, 'compression_ratio': 1.8115942028985508, 'no_speech_prob': 0.10362065583467484}, {'id': 633, 'seek': 317370, 'start': 3196.8999999999996, 'end': 3202.2599999999998, 'text': ' We will let it, after some time, the top will become one of the more complex.', 'tokens': [51524, 492, 486, 718, 309, 11, 934, 512, 565, 11, 264, 1192, 486, 1813, 472, 295, 264, 544, 3997, 13, 51792], 'temperature': 0.0, 'avg_logprob': -0.29916945448866833, 'compression_ratio': 1.8115942028985508, 'no_speech_prob': 0.10362065583467484}, {'id': 634, 'seek': 320226, 'start': 3202.26, 'end': 3203.26, 'text': ' Yeah.', 'tokens': [50364, 865, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.3904724487891564, 'compression_ratio': 1.0843373493975903, 'no_speech_prob': 0.32039594650268555}, {'id': 635, 'seek': 320226, 'start': 3203.26, 'end': 3225.46, 'text': ' So, now what you are saying is, why do not I take into consideration some properties', 'tokens': [50414, 407, 11, 586, 437, 291, 366, 1566, 307, 11, 983, 360, 406, 286, 747, 666, 12381, 512, 7221, 51524], 'temperature': 0.0, 'avg_logprob': -0.3904724487891564, 'compression_ratio': 1.0843373493975903, 'no_speech_prob': 0.32039594650268555}, {'id': 636, 'seek': 322546, 'start': 3226.46, 'end': 3232.58, 'text': ' of mathematics and make it more precise, right.', 'tokens': [50414, 295, 18666, 293, 652, 309, 544, 13600, 11, 558, 13, 50720], 'temperature': 0.0, 'avg_logprob': -0.21746437637894242, 'compression_ratio': 1.6237113402061856, 'no_speech_prob': 0.3600895404815674}, {'id': 637, 'seek': 322546, 'start': 3232.58, 'end': 3233.58, 'text': ' You can.', 'tokens': [50720, 509, 393, 13, 50770], 'temperature': 0.0, 'avg_logprob': -0.21746437637894242, 'compression_ratio': 1.6237113402061856, 'no_speech_prob': 0.3600895404815674}, {'id': 638, 'seek': 322546, 'start': 3233.58, 'end': 3235.86, 'text': ' So, you are saying, what is your name again?', 'tokens': [50770, 407, 11, 291, 366, 1566, 11, 437, 307, 428, 1315, 797, 30, 50884], 'temperature': 0.0, 'avg_logprob': -0.21746437637894242, 'compression_ratio': 1.6237113402061856, 'no_speech_prob': 0.3600895404815674}, {'id': 639, 'seek': 322546, 'start': 3235.86, 'end': 3236.86, 'text': ' Badri.', 'tokens': [50884, 11523, 470, 13, 50934], 'temperature': 0.0, 'avg_logprob': -0.21746437637894242, 'compression_ratio': 1.6237113402061856, 'no_speech_prob': 0.3600895404815674}, {'id': 640, 'seek': 322546, 'start': 3236.86, 'end': 3237.86, 'text': ' Badri.', 'tokens': [50934, 11523, 470, 13, 50984], 'temperature': 0.0, 'avg_logprob': -0.21746437637894242, 'compression_ratio': 1.6237113402061856, 'no_speech_prob': 0.3600895404815674}, {'id': 641, 'seek': 322546, 'start': 3237.86, 'end': 3243.1, 'text': ' So, what Badri is saying is, if I, let us say I am doing an op, where I am doing something', 'tokens': [50984, 407, 11, 437, 11523, 470, 307, 1566, 307, 11, 498, 286, 11, 718, 505, 584, 286, 669, 884, 364, 999, 11, 689, 286, 669, 884, 746, 51246], 'temperature': 0.0, 'avg_logprob': -0.21746437637894242, 'compression_ratio': 1.6237113402061856, 'no_speech_prob': 0.3600895404815674}, {'id': 642, 'seek': 322546, 'start': 3243.1, 'end': 3250.78, 'text': ' multiplied by 0, I can as well, even if the other number is bottom, I can as well make', 'tokens': [51246, 17207, 538, 1958, 11, 286, 393, 382, 731, 11, 754, 498, 264, 661, 1230, 307, 2767, 11, 286, 393, 382, 731, 652, 51630], 'temperature': 0.0, 'avg_logprob': -0.21746437637894242, 'compression_ratio': 1.6237113402061856, 'no_speech_prob': 0.3600895404815674}, {'id': 643, 'seek': 322546, 'start': 3250.78, 'end': 3251.78, 'text': ' it a 0.', 'tokens': [51630, 309, 257, 1958, 13, 51680], 'temperature': 0.0, 'avg_logprob': -0.21746437637894242, 'compression_ratio': 1.6237113402061856, 'no_speech_prob': 0.3600895404815674}, {'id': 644, 'seek': 322546, 'start': 3251.78, 'end': 3252.78, 'text': ' Yes, you can.', 'tokens': [51680, 1079, 11, 291, 393, 13, 51730], 'temperature': 0.0, 'avg_logprob': -0.21746437637894242, 'compression_ratio': 1.6237113402061856, 'no_speech_prob': 0.3600895404815674}, {'id': 645, 'seek': 325278, 'start': 3253.78, 'end': 3261.86, 'text': ' What else can you do like that?', 'tokens': [50414, 708, 1646, 393, 291, 360, 411, 300, 30, 50818], 'temperature': 0.0, 'avg_logprob': -0.25622490660784997, 'compression_ratio': 1.5302013422818792, 'no_speech_prob': 0.08993372321128845}, {'id': 646, 'seek': 325278, 'start': 3261.86, 'end': 3262.86, 'text': ' X minus x.', 'tokens': [50818, 1783, 3175, 2031, 13, 50868], 'temperature': 0.0, 'avg_logprob': -0.25622490660784997, 'compression_ratio': 1.5302013422818792, 'no_speech_prob': 0.08993372321128845}, {'id': 647, 'seek': 325278, 'start': 3262.86, 'end': 3263.86, 'text': ' X minus x.', 'tokens': [50868, 1783, 3175, 2031, 13, 50918], 'temperature': 0.0, 'avg_logprob': -0.25622490660784997, 'compression_ratio': 1.5302013422818792, 'no_speech_prob': 0.08993372321128845}, {'id': 648, 'seek': 325278, 'start': 3263.86, 'end': 3273.2200000000003, 'text': " Both x's are bottoms, but you can say, in general, bottom minus bottom is not 0, right.", 'tokens': [50918, 6767, 2031, 311, 366, 43413, 11, 457, 291, 393, 584, 11, 294, 2674, 11, 2767, 3175, 2767, 307, 406, 1958, 11, 558, 13, 51386], 'temperature': 0.0, 'avg_logprob': -0.25622490660784997, 'compression_ratio': 1.5302013422818792, 'no_speech_prob': 0.08993372321128845}, {'id': 649, 'seek': 325278, 'start': 3273.2200000000003, 'end': 3281.1000000000004, 'text': ' But x minus x is, so you can take some of those mathematical or x divided by x, right.', 'tokens': [51386, 583, 2031, 3175, 2031, 307, 11, 370, 291, 393, 747, 512, 295, 729, 18894, 420, 2031, 6666, 538, 2031, 11, 558, 13, 51780], 'temperature': 0.0, 'avg_logprob': -0.25622490660784997, 'compression_ratio': 1.5302013422818792, 'no_speech_prob': 0.08993372321128845}, {'id': 650, 'seek': 328110, 'start': 3281.42, 'end': 3283.2999999999997, 'text': ' Some of those you can.', 'tokens': [50380, 2188, 295, 729, 291, 393, 13, 50474], 'temperature': 0.0, 'avg_logprob': -0.2677457760541867, 'compression_ratio': 1.5180722891566265, 'no_speech_prob': 0.024035044014453888}, {'id': 651, 'seek': 328110, 'start': 3283.2999999999997, 'end': 3291.02, 'text': ' What would x divided by x?', 'tokens': [50474, 708, 576, 2031, 6666, 538, 2031, 30, 50860], 'temperature': 0.0, 'avg_logprob': -0.2677457760541867, 'compression_ratio': 1.5180722891566265, 'no_speech_prob': 0.024035044014453888}, {'id': 652, 'seek': 328110, 'start': 3291.02, 'end': 3297.06, 'text': ' X divided by x is not guaranteed to be 1, right, because you do not know if x is 0.', 'tokens': [50860, 1783, 6666, 538, 2031, 307, 406, 18031, 281, 312, 502, 11, 558, 11, 570, 291, 360, 406, 458, 498, 2031, 307, 1958, 13, 51162], 'temperature': 0.0, 'avg_logprob': -0.2677457760541867, 'compression_ratio': 1.5180722891566265, 'no_speech_prob': 0.024035044014453888}, {'id': 653, 'seek': 328110, 'start': 3297.06, 'end': 3302.5, 'text': ' But yeah, so you can, I mean, you can then find out if x is 0 or not.', 'tokens': [51162, 583, 1338, 11, 370, 291, 393, 11, 286, 914, 11, 291, 393, 550, 915, 484, 498, 2031, 307, 1958, 420, 406, 13, 51434], 'temperature': 0.0, 'avg_logprob': -0.2677457760541867, 'compression_ratio': 1.5180722891566265, 'no_speech_prob': 0.024035044014453888}, {'id': 654, 'seek': 328110, 'start': 3302.5, 'end': 3305.02, 'text': ' You can take into those mathematical properties.', 'tokens': [51434, 509, 393, 747, 666, 729, 18894, 7221, 13, 51560], 'temperature': 0.0, 'avg_logprob': -0.2677457760541867, 'compression_ratio': 1.5180722891566265, 'no_speech_prob': 0.024035044014453888}, {'id': 655, 'seek': 330502, 'start': 3305.94, 'end': 3313.46, 'text': ' In, for a simpler scenario, we are saying, let us not worry about that, okay.', 'tokens': [50410, 682, 11, 337, 257, 18587, 9005, 11, 321, 366, 1566, 11, 718, 505, 406, 3292, 466, 300, 11, 1392, 13, 50786], 'temperature': 0.0, 'avg_logprob': -0.17766999089440635, 'compression_ratio': 1.5365853658536586, 'no_speech_prob': 0.11172784119844437}, {'id': 656, 'seek': 330502, 'start': 3313.46, 'end': 3323.02, 'text': ' And at a merge point, so now if I have, from this side I am getting 1M1, from this side', 'tokens': [50786, 400, 412, 257, 22183, 935, 11, 370, 586, 498, 286, 362, 11, 490, 341, 1252, 286, 669, 1242, 502, 44, 16, 11, 490, 341, 1252, 51264], 'temperature': 0.0, 'avg_logprob': -0.17766999089440635, 'compression_ratio': 1.5365853658536586, 'no_speech_prob': 0.11172784119844437}, {'id': 657, 'seek': 330502, 'start': 3323.02, 'end': 3325.42, 'text': ' I am getting M2.', 'tokens': [51264, 286, 669, 1242, 376, 17, 13, 51384], 'temperature': 0.0, 'avg_logprob': -0.17766999089440635, 'compression_ratio': 1.5365853658536586, 'no_speech_prob': 0.11172784119844437}, {'id': 658, 'seek': 330502, 'start': 3325.42, 'end': 3326.42, 'text': ' What is M1?', 'tokens': [51384, 708, 307, 376, 16, 30, 51434], 'temperature': 0.0, 'avg_logprob': -0.17766999089440635, 'compression_ratio': 1.5365853658536586, 'no_speech_prob': 0.11172784119844437}, {'id': 659, 'seek': 330502, 'start': 3326.42, 'end': 3329.98, 'text': ' It is a map from every variable to its value.', 'tokens': [51434, 467, 307, 257, 4471, 490, 633, 7006, 281, 1080, 2158, 13, 51612], 'temperature': 0.0, 'avg_logprob': -0.17766999089440635, 'compression_ratio': 1.5365853658536586, 'no_speech_prob': 0.11172784119844437}, {'id': 660, 'seek': 330502, 'start': 3329.98, 'end': 3330.98, 'text': ' What is M2?', 'tokens': [51612, 708, 307, 376, 17, 30, 51662], 'temperature': 0.0, 'avg_logprob': -0.17766999089440635, 'compression_ratio': 1.5365853658536586, 'no_speech_prob': 0.11172784119844437}, {'id': 661, 'seek': 333098, 'start': 3331.26, 'end': 3336.78, 'text': ' It is a map from every variable to their value in that path.', 'tokens': [50378, 467, 307, 257, 4471, 490, 633, 7006, 281, 641, 2158, 294, 300, 3100, 13, 50654], 'temperature': 0.0, 'avg_logprob': -0.2823415155763979, 'compression_ratio': 1.291044776119403, 'no_speech_prob': 0.023854156956076622}, {'id': 662, 'seek': 333098, 'start': 3336.78, 'end': 3344.58, 'text': ' Now I want to compute a merged M. How do I compute this?', 'tokens': [50654, 823, 286, 528, 281, 14722, 257, 36427, 376, 13, 1012, 360, 286, 14722, 341, 30, 51044], 'temperature': 0.0, 'avg_logprob': -0.2823415155763979, 'compression_ratio': 1.291044776119403, 'no_speech_prob': 0.023854156956076622}, {'id': 663, 'seek': 333098, 'start': 3344.58, 'end': 3356.58, 'text': ' For each variable V, MV equal to M1V meet M2V, perfect.', 'tokens': [51044, 1171, 1184, 7006, 691, 11, 17663, 2681, 281, 376, 16, 53, 1677, 376, 17, 53, 11, 2176, 13, 51644], 'temperature': 0.0, 'avg_logprob': -0.2823415155763979, 'compression_ratio': 1.291044776119403, 'no_speech_prob': 0.023854156956076622}, {'id': 664, 'seek': 336098, 'start': 3361.58, 'end': 3366.58, 'text': ' Okay, questions?', 'tokens': [50394, 1033, 11, 1651, 30, 50644], 'temperature': 0.0, 'avg_logprob': -0.3426111972693241, 'compression_ratio': 1.2876712328767124, 'no_speech_prob': 0.12570388615131378}, {'id': 665, 'seek': 336098, 'start': 3378.58, 'end': 3381.58, 'text': ' Okay, there it will be in terms of sets.', 'tokens': [51244, 1033, 11, 456, 309, 486, 312, 294, 2115, 295, 6352, 13, 51394], 'temperature': 0.0, 'avg_logprob': -0.3426111972693241, 'compression_ratio': 1.2876712328767124, 'no_speech_prob': 0.12570388615131378}, {'id': 666, 'seek': 336098, 'start': 3381.58, 'end': 3385.98, 'text': ' There it has to be in terms of sets.', 'tokens': [51394, 821, 309, 575, 281, 312, 294, 2115, 295, 6352, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.3426111972693241, 'compression_ratio': 1.2876712328767124, 'no_speech_prob': 0.12570388615131378}, {'id': 667, 'seek': 338598, 'start': 3385.98, 'end': 3397.78, 'text': ' So you, let us say, see, I do not know what I will, were you taught using bit vectors', 'tokens': [50364, 407, 291, 11, 718, 505, 584, 11, 536, 11, 286, 360, 406, 458, 437, 286, 486, 11, 645, 291, 5928, 1228, 857, 18875, 50954], 'temperature': 0.0, 'avg_logprob': -0.31233834486741285, 'compression_ratio': 1.3642384105960266, 'no_speech_prob': 0.019102593883872032}, {'id': 668, 'seek': 338598, 'start': 3397.78, 'end': 3398.78, 'text': ' or?', 'tokens': [50954, 420, 30, 51004], 'temperature': 0.0, 'avg_logprob': -0.31233834486741285, 'compression_ratio': 1.3642384105960266, 'no_speech_prob': 0.019102593883872032}, {'id': 669, 'seek': 338598, 'start': 3398.78, 'end': 3399.78, 'text': ' Bit vectors.', 'tokens': [51004, 9101, 18875, 13, 51054], 'temperature': 0.0, 'avg_logprob': -0.31233834486741285, 'compression_ratio': 1.3642384105960266, 'no_speech_prob': 0.019102593883872032}, {'id': 670, 'seek': 338598, 'start': 3399.78, 'end': 3407.38, 'text': ' Okay, and did you, what did you initialize the values of each nodes?', 'tokens': [51054, 1033, 11, 293, 630, 291, 11, 437, 630, 291, 5883, 1125, 264, 4190, 295, 1184, 13891, 30, 51434], 'temperature': 0.0, 'avg_logprob': -0.31233834486741285, 'compression_ratio': 1.3642384105960266, 'no_speech_prob': 0.019102593883872032}, {'id': 671, 'seek': 338598, 'start': 3407.38, 'end': 3413.38, 'text': ' You started with empty sets, okay.', 'tokens': [51434, 509, 1409, 365, 6707, 6352, 11, 1392, 13, 51734], 'temperature': 0.0, 'avg_logprob': -0.31233834486741285, 'compression_ratio': 1.3642384105960266, 'no_speech_prob': 0.019102593883872032}, {'id': 672, 'seek': 341338, 'start': 3413.78, 'end': 3419.58, 'text': ' In your case, then the meet was the union operator.', 'tokens': [50384, 682, 428, 1389, 11, 550, 264, 1677, 390, 264, 11671, 12973, 13, 50674], 'temperature': 0.0, 'avg_logprob': -0.22752771377563477, 'compression_ratio': 1.7471264367816093, 'no_speech_prob': 0.034076277166604996}, {'id': 673, 'seek': 341338, 'start': 3419.58, 'end': 3423.02, 'text': ' The meet was the union operator.', 'tokens': [50674, 440, 1677, 390, 264, 11671, 12973, 13, 50846], 'temperature': 0.0, 'avg_logprob': -0.22752771377563477, 'compression_ratio': 1.7471264367816093, 'no_speech_prob': 0.034076277166604996}, {'id': 674, 'seek': 341338, 'start': 3423.02, 'end': 3428.1400000000003, 'text': ' And when you keep meeting, finally you will reach, what is the worst you can assume?', 'tokens': [50846, 400, 562, 291, 1066, 3440, 11, 2721, 291, 486, 2524, 11, 437, 307, 264, 5855, 291, 393, 6552, 30, 51102], 'temperature': 0.0, 'avg_logprob': -0.22752771377563477, 'compression_ratio': 1.7471264367816093, 'no_speech_prob': 0.034076277166604996}, {'id': 675, 'seek': 341338, 'start': 3428.1400000000003, 'end': 3432.54, 'text': ' Every variable, every definition reaches every point.', 'tokens': [51102, 2048, 7006, 11, 633, 7123, 14235, 633, 935, 13, 51322], 'temperature': 0.0, 'avg_logprob': -0.22752771377563477, 'compression_ratio': 1.7471264367816093, 'no_speech_prob': 0.034076277166604996}, {'id': 676, 'seek': 341338, 'start': 3432.54, 'end': 3437.6600000000003, 'text': ' So your bottom is the set of all variables.', 'tokens': [51322, 407, 428, 2767, 307, 264, 992, 295, 439, 9102, 13, 51578], 'temperature': 0.0, 'avg_logprob': -0.22752771377563477, 'compression_ratio': 1.7471264367816093, 'no_speech_prob': 0.034076277166604996}, {'id': 677, 'seek': 341338, 'start': 3437.6600000000003, 'end': 3440.54, 'text': ' Your top is the set of no variables.', 'tokens': [51578, 2260, 1192, 307, 264, 992, 295, 572, 9102, 13, 51722], 'temperature': 0.0, 'avg_logprob': -0.22752771377563477, 'compression_ratio': 1.7471264367816093, 'no_speech_prob': 0.034076277166604996}, {'id': 678, 'seek': 344054, 'start': 3440.7, 'end': 3443.7, 'text': ' So it is empty set, right?', 'tokens': [50372, 407, 309, 307, 6707, 992, 11, 558, 30, 50522], 'temperature': 0.0, 'avg_logprob': -0.32740866463139373, 'compression_ratio': 1.434108527131783, 'no_speech_prob': 0.019046582281589508}, {'id': 679, 'seek': 344054, 'start': 3457.7, 'end': 3462.7, 'text': ' Okay, in the mop type of solutions, meet over all paths, that is what we try to do.', 'tokens': [51222, 1033, 11, 294, 264, 48106, 2010, 295, 6547, 11, 1677, 670, 439, 14518, 11, 300, 307, 437, 321, 853, 281, 360, 13, 51472], 'temperature': 0.0, 'avg_logprob': -0.32740866463139373, 'compression_ratio': 1.434108527131783, 'no_speech_prob': 0.019046582281589508}, {'id': 680, 'seek': 344054, 'start': 3462.7, 'end': 3469.42, 'text': ' There is also something called job type of solutions, join over all paths.', 'tokens': [51472, 821, 307, 611, 746, 1219, 1691, 2010, 295, 6547, 11, 3917, 670, 439, 14518, 13, 51808], 'temperature': 0.0, 'avg_logprob': -0.32740866463139373, 'compression_ratio': 1.434108527131783, 'no_speech_prob': 0.019046582281589508}, {'id': 681, 'seek': 346942, 'start': 3470.3, 'end': 3474.7000000000003, 'text': ' So, okay, what you keep your top and bottom is not so important.', 'tokens': [50408, 407, 11, 1392, 11, 437, 291, 1066, 428, 1192, 293, 2767, 307, 406, 370, 1021, 13, 50628], 'temperature': 0.0, 'avg_logprob': -0.22917469845542424, 'compression_ratio': 1.6470588235294117, 'no_speech_prob': 0.000814348051790148}, {'id': 682, 'seek': 346942, 'start': 3474.7000000000003, 'end': 3480.42, 'text': ' Some people keep lattice like this, some people keep it this way.', 'tokens': [50628, 2188, 561, 1066, 34011, 411, 341, 11, 512, 561, 1066, 309, 341, 636, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.22917469845542424, 'compression_ratio': 1.6470588235294117, 'no_speech_prob': 0.000814348051790148}, {'id': 683, 'seek': 346942, 'start': 3480.42, 'end': 3489.3, 'text': ' But as long as you are proceeding in one direction, you are in good position, you are in good', 'tokens': [50914, 583, 382, 938, 382, 291, 366, 41163, 294, 472, 3513, 11, 291, 366, 294, 665, 2535, 11, 291, 366, 294, 665, 51358], 'temperature': 0.0, 'avg_logprob': -0.22917469845542424, 'compression_ratio': 1.6470588235294117, 'no_speech_prob': 0.000814348051790148}, {'id': 684, 'seek': 346942, 'start': 3489.3, 'end': 3492.3, 'text': ' shape, okay.', 'tokens': [51358, 3909, 11, 1392, 13, 51508], 'temperature': 0.0, 'avg_logprob': -0.22917469845542424, 'compression_ratio': 1.6470588235294117, 'no_speech_prob': 0.000814348051790148}, {'id': 685, 'seek': 346942, 'start': 3492.3, 'end': 3497.02, 'text': " It is just people's, what you are used to.", 'tokens': [51508, 467, 307, 445, 561, 311, 11, 437, 291, 366, 1143, 281, 13, 51744], 'temperature': 0.0, 'avg_logprob': -0.22917469845542424, 'compression_ratio': 1.6470588235294117, 'no_speech_prob': 0.000814348051790148}, {'id': 686, 'seek': 349702, 'start': 3497.02, 'end': 3502.98, 'text': ' So I am used to this thing where my top is on the top and bottom is on the bottom.', 'tokens': [50364, 407, 286, 669, 1143, 281, 341, 551, 689, 452, 1192, 307, 322, 264, 1192, 293, 2767, 307, 322, 264, 2767, 13, 50662], 'temperature': 0.0, 'avg_logprob': -0.1937551092594228, 'compression_ratio': 1.6274509803921569, 'no_speech_prob': 0.000984871294349432}, {'id': 687, 'seek': 349702, 'start': 3502.98, 'end': 3504.94, 'text': ' There are some people who like it the other way around.', 'tokens': [50662, 821, 366, 512, 561, 567, 411, 309, 264, 661, 636, 926, 13, 50760], 'temperature': 0.0, 'avg_logprob': -0.1937551092594228, 'compression_ratio': 1.6274509803921569, 'no_speech_prob': 0.000984871294349432}, {'id': 688, 'seek': 349702, 'start': 3504.94, 'end': 3510.74, 'text': ' There are some school of thoughts, okay.', 'tokens': [50760, 821, 366, 512, 1395, 295, 4598, 11, 1392, 13, 51050], 'temperature': 0.0, 'avg_logprob': -0.1937551092594228, 'compression_ratio': 1.6274509803921569, 'no_speech_prob': 0.000984871294349432}, {'id': 689, 'seek': 349702, 'start': 3510.74, 'end': 3517.06, 'text': ' So we understand the transfer functions and we understand what we do at a meet, right?', 'tokens': [51050, 407, 321, 1223, 264, 5003, 6828, 293, 321, 1223, 437, 321, 360, 412, 257, 1677, 11, 558, 30, 51366], 'temperature': 0.0, 'avg_logprob': -0.1937551092594228, 'compression_ratio': 1.6274509803921569, 'no_speech_prob': 0.000984871294349432}, {'id': 690, 'seek': 349702, 'start': 3517.06, 'end': 3518.38, 'text': ' Any questions on this?', 'tokens': [51366, 2639, 1651, 322, 341, 30, 51432], 'temperature': 0.0, 'avg_logprob': -0.1937551092594228, 'compression_ratio': 1.6274509803921569, 'no_speech_prob': 0.000984871294349432}, {'id': 691, 'seek': 349702, 'start': 3518.38, 'end': 3519.38, 'text': ' No?', 'tokens': [51432, 883, 30, 51482], 'temperature': 0.0, 'avg_logprob': -0.1937551092594228, 'compression_ratio': 1.6274509803921569, 'no_speech_prob': 0.000984871294349432}, {'id': 692, 'seek': 349702, 'start': 3519.38, 'end': 3523.54, 'text': ' Okay, if not, we will take an example.', 'tokens': [51482, 1033, 11, 498, 406, 11, 321, 486, 747, 364, 1365, 13, 51690], 'temperature': 0.0, 'avg_logprob': -0.1937551092594228, 'compression_ratio': 1.6274509803921569, 'no_speech_prob': 0.000984871294349432}, {'id': 693, 'seek': 352354, 'start': 3523.54, 'end': 3533.54, 'text': ' So for this example, okay, we will do, what will you do?', 'tokens': [50364, 407, 337, 341, 1365, 11, 1392, 11, 321, 486, 360, 11, 437, 486, 291, 360, 30, 50864], 'temperature': 0.0, 'avg_logprob': -0.3077398935953776, 'compression_ratio': 1.2461538461538462, 'no_speech_prob': 0.01789432391524315}, {'id': 694, 'seek': 352354, 'start': 3533.54, 'end': 3536.1, 'text': ' Do constant propagation.', 'tokens': [50864, 1144, 5754, 38377, 13, 50992], 'temperature': 0.0, 'avg_logprob': -0.3077398935953776, 'compression_ratio': 1.2461538461538462, 'no_speech_prob': 0.01789432391524315}, {'id': 695, 'seek': 352354, 'start': 3536.1, 'end': 3538.1, 'text': ' What are my variables?', 'tokens': [50992, 708, 366, 452, 9102, 30, 51092], 'temperature': 0.0, 'avg_logprob': -0.3077398935953776, 'compression_ratio': 1.2461538461538462, 'no_speech_prob': 0.01789432391524315}, {'id': 696, 'seek': 352354, 'start': 3538.1, 'end': 3541.9, 'text': ' X, Y and Z.', 'tokens': [51092, 1783, 11, 398, 293, 1176, 13, 51282], 'temperature': 0.0, 'avg_logprob': -0.3077398935953776, 'compression_ratio': 1.2461538461538462, 'no_speech_prob': 0.01789432391524315}, {'id': 697, 'seek': 352354, 'start': 3541.9, 'end': 3551.06, 'text': ' And now we said we will start with the entry.', 'tokens': [51282, 400, 586, 321, 848, 321, 486, 722, 365, 264, 8729, 13, 51740], 'temperature': 0.0, 'avg_logprob': -0.3077398935953776, 'compression_ratio': 1.2461538461538462, 'no_speech_prob': 0.01789432391524315}, {'id': 698, 'seek': 355106, 'start': 3551.06, 'end': 3562.94, 'text': ' So the entry point, every variable has, is mapped to top, top, okay.', 'tokens': [50364, 407, 264, 8729, 935, 11, 633, 7006, 575, 11, 307, 33318, 281, 1192, 11, 1192, 11, 1392, 13, 50958], 'temperature': 0.0, 'avg_logprob': -0.27578548590342206, 'compression_ratio': 1.3257575757575757, 'no_speech_prob': 0.01394497137516737}, {'id': 699, 'seek': 355106, 'start': 3562.94, 'end': 3571.46, 'text': ' So what is the transfer function for this statement?', 'tokens': [50958, 407, 437, 307, 264, 5003, 2445, 337, 341, 5629, 30, 51384], 'temperature': 0.0, 'avg_logprob': -0.27578548590342206, 'compression_ratio': 1.3257575757575757, 'no_speech_prob': 0.01394497137516737}, {'id': 700, 'seek': 355106, 'start': 3571.46, 'end': 3577.06, 'text': ' It changes the value of X to the constant literal 10.', 'tokens': [51384, 467, 2962, 264, 2158, 295, 1783, 281, 264, 5754, 20411, 1266, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.27578548590342206, 'compression_ratio': 1.3257575757575757, 'no_speech_prob': 0.01394497137516737}, {'id': 701, 'seek': 357706, 'start': 3578.06, 'end': 3581.06, 'text': ' Y and Z, it does not change.', 'tokens': [50414, 398, 293, 1176, 11, 309, 775, 406, 1319, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.21887557689960185, 'compression_ratio': 1.627906976744186, 'no_speech_prob': 0.3329961597919464}, {'id': 702, 'seek': 357706, 'start': 3581.06, 'end': 3586.62, 'text': ' This statement changes the value of Y to 1.', 'tokens': [50564, 639, 5629, 2962, 264, 2158, 295, 398, 281, 502, 13, 50842], 'temperature': 0.0, 'avg_logprob': -0.21887557689960185, 'compression_ratio': 1.627906976744186, 'no_speech_prob': 0.3329961597919464}, {'id': 703, 'seek': 357706, 'start': 3586.62, 'end': 3587.62, 'text': ' This one?', 'tokens': [50842, 639, 472, 30, 50892], 'temperature': 0.0, 'avg_logprob': -0.21887557689960185, 'compression_ratio': 1.627906976744186, 'no_speech_prob': 0.3329961597919464}, {'id': 704, 'seek': 357706, 'start': 3587.62, 'end': 3590.14, 'text': ' Z to 5.', 'tokens': [50892, 1176, 281, 1025, 13, 51018], 'temperature': 0.0, 'avg_logprob': -0.21887557689960185, 'compression_ratio': 1.627906976744186, 'no_speech_prob': 0.3329961597919464}, {'id': 705, 'seek': 357706, 'start': 3590.14, 'end': 3596.82, 'text': ' This one will take the value of Y and the transfer function is like this.', 'tokens': [51018, 639, 472, 486, 747, 264, 2158, 295, 398, 293, 264, 5003, 2445, 307, 411, 341, 13, 51352], 'temperature': 0.0, 'avg_logprob': -0.21887557689960185, 'compression_ratio': 1.627906976744186, 'no_speech_prob': 0.3329961597919464}, {'id': 706, 'seek': 357706, 'start': 3596.82, 'end': 3600.44, 'text': ' The transfer function for that would be this.', 'tokens': [51352, 440, 5003, 2445, 337, 300, 576, 312, 341, 13, 51533], 'temperature': 0.0, 'avg_logprob': -0.21887557689960185, 'compression_ratio': 1.627906976744186, 'no_speech_prob': 0.3329961597919464}, {'id': 707, 'seek': 360044, 'start': 3600.44, 'end': 3603.4, 'text': ' Both are constants.', 'tokens': [50364, 6767, 366, 35870, 13, 50512], 'temperature': 0.0, 'avg_logprob': -0.289825928516877, 'compression_ratio': 1.608974358974359, 'no_speech_prob': 0.005775140598416328}, {'id': 708, 'seek': 360044, 'start': 3603.4, 'end': 3616.04, 'text': ' If M Y, sorry, if M Y and M Z, this is C 1 and M Z equal to C 2.', 'tokens': [50512, 759, 376, 398, 11, 2597, 11, 498, 376, 398, 293, 376, 1176, 11, 341, 307, 383, 502, 293, 376, 1176, 2681, 281, 383, 568, 13, 51144], 'temperature': 0.0, 'avg_logprob': -0.289825928516877, 'compression_ratio': 1.608974358974359, 'no_speech_prob': 0.005775140598416328}, {'id': 709, 'seek': 360044, 'start': 3616.04, 'end': 3618.12, 'text': ' Both are constants.', 'tokens': [51144, 6767, 366, 35870, 13, 51248], 'temperature': 0.0, 'avg_logprob': -0.289825928516877, 'compression_ratio': 1.608974358974359, 'no_speech_prob': 0.005775140598416328}, {'id': 710, 'seek': 360044, 'start': 3618.12, 'end': 3622.6, 'text': ' So the transfer function can be some code like this for this.', 'tokens': [51248, 407, 264, 5003, 2445, 393, 312, 512, 3089, 411, 341, 337, 341, 13, 51472], 'temperature': 0.0, 'avg_logprob': -0.289825928516877, 'compression_ratio': 1.608974358974359, 'no_speech_prob': 0.005775140598416328}, {'id': 711, 'seek': 360044, 'start': 3622.6, 'end': 3629.2400000000002, 'text': ' And transfer function for this would be if X is constant, then new value of X is C 1', 'tokens': [51472, 400, 5003, 2445, 337, 341, 576, 312, 498, 1783, 307, 5754, 11, 550, 777, 2158, 295, 1783, 307, 383, 502, 51804], 'temperature': 0.0, 'avg_logprob': -0.289825928516877, 'compression_ratio': 1.608974358974359, 'no_speech_prob': 0.005775140598416328}, {'id': 712, 'seek': 362924, 'start': 3629.24, 'end': 3634.12, 'text': ' minus 1, else bottom.', 'tokens': [50364, 3175, 502, 11, 1646, 2767, 13, 50608], 'temperature': 0.0, 'avg_logprob': -0.4234199523925781, 'compression_ratio': 1.5488721804511278, 'no_speech_prob': 0.014499546959996223}, {'id': 713, 'seek': 362924, 'start': 3634.12, 'end': 3646.2, 'text': ' Similarly here, transfer function for this.', 'tokens': [50608, 13157, 510, 11, 5003, 2445, 337, 341, 13, 51212], 'temperature': 0.0, 'avg_logprob': -0.4234199523925781, 'compression_ratio': 1.5488721804511278, 'no_speech_prob': 0.014499546959996223}, {'id': 714, 'seek': 362924, 'start': 3646.2, 'end': 3648.04, 'text': ' No that is meet here.', 'tokens': [51212, 883, 300, 307, 1677, 510, 13, 51304], 'temperature': 0.0, 'avg_logprob': -0.4234199523925781, 'compression_ratio': 1.5488721804511278, 'no_speech_prob': 0.014499546959996223}, {'id': 715, 'seek': 362924, 'start': 3648.04, 'end': 3650.0, 'text': ' Transfer function for print, nothing.', 'tokens': [51304, 35025, 2445, 337, 4482, 11, 1825, 13, 51402], 'temperature': 0.0, 'avg_logprob': -0.4234199523925781, 'compression_ratio': 1.5488721804511278, 'no_speech_prob': 0.014499546959996223}, {'id': 716, 'seek': 362924, 'start': 3650.0, 'end': 3654.3999999999996, 'text': ' It is not an assignment statement.', 'tokens': [51402, 467, 307, 406, 364, 15187, 5629, 13, 51622], 'temperature': 0.0, 'avg_logprob': -0.4234199523925781, 'compression_ratio': 1.5488721804511278, 'no_speech_prob': 0.014499546959996223}, {'id': 717, 'seek': 362924, 'start': 3654.3999999999996, 'end': 3656.62, 'text': ' We are only looking at assignment statements.', 'tokens': [51622, 492, 366, 787, 1237, 412, 15187, 12363, 13, 51733], 'temperature': 0.0, 'avg_logprob': -0.4234199523925781, 'compression_ratio': 1.5488721804511278, 'no_speech_prob': 0.014499546959996223}, {'id': 718, 'seek': 365662, 'start': 3656.62, 'end': 3659.7, 'text': ' So here we will just treat it as an identity function.', 'tokens': [50364, 407, 510, 321, 486, 445, 2387, 309, 382, 364, 6575, 2445, 13, 50518], 'temperature': 0.0, 'avg_logprob': -0.2459000451224191, 'compression_ratio': 1.4733333333333334, 'no_speech_prob': 0.10962797701358795}, {'id': 719, 'seek': 365662, 'start': 3659.7, 'end': 3666.62, 'text': ' It just takes an M and passes the same M down.', 'tokens': [50518, 467, 445, 2516, 364, 376, 293, 11335, 264, 912, 376, 760, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.2459000451224191, 'compression_ratio': 1.4733333333333334, 'no_speech_prob': 0.10962797701358795}, {'id': 720, 'seek': 365662, 'start': 3666.62, 'end': 3670.9, 'text': ' So now let us do constant propagation.', 'tokens': [50864, 407, 586, 718, 505, 360, 5754, 38377, 13, 51078], 'temperature': 0.0, 'avg_logprob': -0.2459000451224191, 'compression_ratio': 1.4733333333333334, 'no_speech_prob': 0.10962797701358795}, {'id': 721, 'seek': 365662, 'start': 3670.9, 'end': 3672.3399999999997, 'text': ' So I will start from here.', 'tokens': [51078, 407, 286, 486, 722, 490, 510, 13, 51150], 'temperature': 0.0, 'avg_logprob': -0.2459000451224191, 'compression_ratio': 1.4733333333333334, 'no_speech_prob': 0.10962797701358795}, {'id': 722, 'seek': 365662, 'start': 3672.3399999999997, 'end': 3678.1, 'text': ' I will start M. Let me do one thing.', 'tokens': [51150, 286, 486, 722, 376, 13, 961, 385, 360, 472, 551, 13, 51438], 'temperature': 0.0, 'avg_logprob': -0.2459000451224191, 'compression_ratio': 1.4733333333333334, 'no_speech_prob': 0.10962797701358795}, {'id': 723, 'seek': 365662, 'start': 3678.1, 'end': 3685.16, 'text': ' So what is my M?', 'tokens': [51438, 407, 437, 307, 452, 376, 30, 51791], 'temperature': 0.0, 'avg_logprob': -0.2459000451224191, 'compression_ratio': 1.4733333333333334, 'no_speech_prob': 0.10962797701358795}, {'id': 724, 'seek': 368516, 'start': 3685.7, 'end': 3693.12, 'text': ' So my M is X equal to top, Y equal to top, Z equal to top.', 'tokens': [50391, 407, 452, 376, 307, 1783, 2681, 281, 1192, 11, 398, 2681, 281, 1192, 11, 1176, 2681, 281, 1192, 13, 50762], 'temperature': 0.0, 'avg_logprob': -0.31939431599208284, 'compression_ratio': 1.380952380952381, 'no_speech_prob': 0.18670770525932312}, {'id': 725, 'seek': 368516, 'start': 3693.12, 'end': 3696.98, 'text': ' That is what I started with.', 'tokens': [50762, 663, 307, 437, 286, 1409, 365, 13, 50955], 'temperature': 0.0, 'avg_logprob': -0.31939431599208284, 'compression_ratio': 1.380952380952381, 'no_speech_prob': 0.18670770525932312}, {'id': 726, 'seek': 368516, 'start': 3696.98, 'end': 3700.7599999999998, 'text': ' I do not know at this time.', 'tokens': [50955, 286, 360, 406, 458, 412, 341, 565, 13, 51144], 'temperature': 0.0, 'avg_logprob': -0.31939431599208284, 'compression_ratio': 1.380952380952381, 'no_speech_prob': 0.18670770525932312}, {'id': 727, 'seek': 368516, 'start': 3700.7599999999998, 'end': 3705.08, 'text': ' And after processing the first statement, what will it be?', 'tokens': [51144, 400, 934, 9007, 264, 700, 5629, 11, 437, 486, 309, 312, 30, 51360], 'temperature': 0.0, 'avg_logprob': -0.31939431599208284, 'compression_ratio': 1.380952380952381, 'no_speech_prob': 0.18670770525932312}, {'id': 728, 'seek': 370508, 'start': 3705.08, 'end': 3715.4, 'text': ' It will be 10, right?', 'tokens': [50364, 467, 486, 312, 1266, 11, 558, 30, 50880], 'temperature': 0.0, 'avg_logprob': -0.2711146340441348, 'compression_ratio': 1.4028776978417266, 'no_speech_prob': 0.012804660014808178}, {'id': 729, 'seek': 370508, 'start': 3715.4, 'end': 3723.0, 'text': ' After processing the second statement, what will it be?', 'tokens': [50880, 2381, 9007, 264, 1150, 5629, 11, 437, 486, 309, 312, 30, 51260], 'temperature': 0.0, 'avg_logprob': -0.2711146340441348, 'compression_ratio': 1.4028776978417266, 'no_speech_prob': 0.012804660014808178}, {'id': 730, 'seek': 370508, 'start': 3723.0, 'end': 3724.0, 'text': ' What would X?', 'tokens': [51260, 708, 576, 1783, 30, 51310], 'temperature': 0.0, 'avg_logprob': -0.2711146340441348, 'compression_ratio': 1.4028776978417266, 'no_speech_prob': 0.012804660014808178}, {'id': 731, 'seek': 370508, 'start': 3724.0, 'end': 3725.0, 'text': ' 10.', 'tokens': [51310, 1266, 13, 51360], 'temperature': 0.0, 'avg_logprob': -0.2711146340441348, 'compression_ratio': 1.4028776978417266, 'no_speech_prob': 0.012804660014808178}, {'id': 732, 'seek': 370508, 'start': 3725.0, 'end': 3732.2799999999997, 'text': ' See it takes an M. It took an M of X equal to 10 and Y equal to top and changed it to', 'tokens': [51360, 3008, 309, 2516, 364, 376, 13, 467, 1890, 364, 376, 295, 1783, 2681, 281, 1266, 293, 398, 2681, 281, 1192, 293, 3105, 309, 281, 51724], 'temperature': 0.0, 'avg_logprob': -0.2711146340441348, 'compression_ratio': 1.4028776978417266, 'no_speech_prob': 0.012804660014808178}, {'id': 733, 'seek': 370508, 'start': 3732.2799999999997, 'end': 3734.6, 'text': ' Y equal to 1.', 'tokens': [51724, 398, 2681, 281, 502, 13, 51840], 'temperature': 0.0, 'avg_logprob': -0.2711146340441348, 'compression_ratio': 1.4028776978417266, 'no_speech_prob': 0.012804660014808178}, {'id': 734, 'seek': 373460, 'start': 3735.12, 'end': 3739.6, 'text': ' And then third one?', 'tokens': [50390, 400, 550, 2636, 472, 30, 50614], 'temperature': 0.0, 'avg_logprob': -0.3653428649902344, 'compression_ratio': 1.1428571428571428, 'no_speech_prob': 0.003591476008296013}, {'id': 735, 'seek': 373460, 'start': 3739.6, 'end': 3746.12, 'text': ' Z 5.', 'tokens': [50614, 1176, 1025, 13, 50940], 'temperature': 0.0, 'avg_logprob': -0.3653428649902344, 'compression_ratio': 1.1428571428571428, 'no_speech_prob': 0.003591476008296013}, {'id': 736, 'seek': 373460, 'start': 3746.12, 'end': 3752.88, 'text': ' Now I have if condition.', 'tokens': [50940, 823, 286, 362, 498, 4188, 13, 51278], 'temperature': 0.0, 'avg_logprob': -0.3653428649902344, 'compression_ratio': 1.1428571428571428, 'no_speech_prob': 0.003591476008296013}, {'id': 737, 'seek': 373460, 'start': 3752.88, 'end': 3758.36, 'text': ' So if you see it in the CFG style, I will take this M that I have, this X equal to 10,', 'tokens': [51278, 407, 498, 291, 536, 309, 294, 264, 21792, 38, 3758, 11, 286, 486, 747, 341, 376, 300, 286, 362, 11, 341, 1783, 2681, 281, 1266, 11, 51552], 'temperature': 0.0, 'avg_logprob': -0.3653428649902344, 'compression_ratio': 1.1428571428571428, 'no_speech_prob': 0.003591476008296013}, {'id': 738, 'seek': 375836, 'start': 3759.1200000000003, 'end': 3766.52, 'text': ' Z equal to 5 and pass it to both the branches.', 'tokens': [50402, 1176, 2681, 281, 1025, 293, 1320, 309, 281, 1293, 264, 14770, 13, 50772], 'temperature': 0.0, 'avg_logprob': -0.38575085004170734, 'compression_ratio': 0.9701492537313433, 'no_speech_prob': 0.6251662969589233}, {'id': 739, 'seek': 375836, 'start': 3766.52, 'end': 3788.08, 'text': ' So let me do that.', 'tokens': [50772, 407, 718, 385, 360, 300, 13, 51850], 'temperature': 0.0, 'avg_logprob': -0.38575085004170734, 'compression_ratio': 0.9701492537313433, 'no_speech_prob': 0.6251662969589233}, {'id': 740, 'seek': 378808, 'start': 3788.7999999999997, 'end': 3791.24, 'text': ' Now let me, which one should I handle now?', 'tokens': [50400, 823, 718, 385, 11, 597, 472, 820, 286, 4813, 586, 30, 50522], 'temperature': 0.0, 'avg_logprob': -0.2991184861692664, 'compression_ratio': 1.523489932885906, 'no_speech_prob': 0.005058339796960354}, {'id': 741, 'seek': 378808, 'start': 3791.24, 'end': 3792.24, 'text': ' Which one should I process?', 'tokens': [50522, 3013, 472, 820, 286, 1399, 30, 50572], 'temperature': 0.0, 'avg_logprob': -0.2991184861692664, 'compression_ratio': 1.523489932885906, 'no_speech_prob': 0.005058339796960354}, {'id': 742, 'seek': 378808, 'start': 3792.24, 'end': 3794.36, 'text': ' The then part or the else part?', 'tokens': [50572, 440, 550, 644, 420, 264, 1646, 644, 30, 50678], 'temperature': 0.0, 'avg_logprob': -0.2991184861692664, 'compression_ratio': 1.523489932885906, 'no_speech_prob': 0.005058339796960354}, {'id': 743, 'seek': 378808, 'start': 3794.36, 'end': 3800.3199999999997, 'text': ' Does not matter.', 'tokens': [50678, 4402, 406, 1871, 13, 50976], 'temperature': 0.0, 'avg_logprob': -0.2991184861692664, 'compression_ratio': 1.523489932885906, 'no_speech_prob': 0.005058339796960354}, {'id': 744, 'seek': 378808, 'start': 3800.3199999999997, 'end': 3804.4, 'text': ' So let us say I process the then part first.', 'tokens': [50976, 407, 718, 505, 584, 286, 1399, 264, 550, 644, 700, 13, 51180], 'temperature': 0.0, 'avg_logprob': -0.2991184861692664, 'compression_ratio': 1.523489932885906, 'no_speech_prob': 0.005058339796960354}, {'id': 745, 'seek': 378808, 'start': 3804.4, 'end': 3811.92, 'text': ' So after processing Y equal to Y by X, what will happen?', 'tokens': [51180, 407, 934, 9007, 398, 2681, 281, 398, 538, 1783, 11, 437, 486, 1051, 30, 51556], 'temperature': 0.0, 'avg_logprob': -0.2991184861692664, 'compression_ratio': 1.523489932885906, 'no_speech_prob': 0.005058339796960354}, {'id': 746, 'seek': 378808, 'start': 3811.92, 'end': 3816.22, 'text': ' Y is?', 'tokens': [51556, 398, 307, 30, 51771], 'temperature': 0.0, 'avg_logprob': -0.2991184861692664, 'compression_ratio': 1.523489932885906, 'no_speech_prob': 0.005058339796960354}, {'id': 747, 'seek': 381622, 'start': 3816.22, 'end': 3829.3399999999997, 'text': ' So it will take the old value of Y and old value of X and get me 0, right?', 'tokens': [50364, 407, 309, 486, 747, 264, 1331, 2158, 295, 398, 293, 1331, 2158, 295, 1783, 293, 483, 385, 1958, 11, 558, 30, 51020], 'temperature': 0.0, 'avg_logprob': -0.31353549299568967, 'compression_ratio': 1.319672131147541, 'no_speech_prob': 0.07576614618301392}, {'id': 748, 'seek': 381622, 'start': 3829.3399999999997, 'end': 3833.1, 'text': ' Integer division.', 'tokens': [51020, 5681, 30744, 10044, 13, 51208], 'temperature': 0.0, 'avg_logprob': -0.31353549299568967, 'compression_ratio': 1.319672131147541, 'no_speech_prob': 0.07576614618301392}, {'id': 749, 'seek': 381622, 'start': 3833.1, 'end': 3836.54, 'text': ' And then I have X equal to X minus 1.', 'tokens': [51208, 400, 550, 286, 362, 1783, 2681, 281, 1783, 3175, 502, 13, 51380], 'temperature': 0.0, 'avg_logprob': -0.31353549299568967, 'compression_ratio': 1.319672131147541, 'no_speech_prob': 0.07576614618301392}, {'id': 750, 'seek': 381622, 'start': 3836.54, 'end': 3839.9199999999996, 'text': ' What will it be?', 'tokens': [51380, 708, 486, 309, 312, 30, 51549], 'temperature': 0.0, 'avg_logprob': -0.31353549299568967, 'compression_ratio': 1.319672131147541, 'no_speech_prob': 0.07576614618301392}, {'id': 751, 'seek': 381622, 'start': 3839.9199999999996, 'end': 3842.9199999999996, 'text': ' X equal to 9.', 'tokens': [51549, 1783, 2681, 281, 1722, 13, 51699], 'temperature': 0.0, 'avg_logprob': -0.31353549299568967, 'compression_ratio': 1.319672131147541, 'no_speech_prob': 0.07576614618301392}, {'id': 752, 'seek': 384292, 'start': 3843.52, 'end': 3853.06, 'text': ' And then I will just see if I can.', 'tokens': [50394, 400, 550, 286, 486, 445, 536, 498, 286, 393, 13, 50871], 'temperature': 0.0, 'avg_logprob': -0.35727973937988283, 'compression_ratio': 1.2830188679245282, 'no_speech_prob': 0.03731722757220268}, {'id': 753, 'seek': 384292, 'start': 3853.06, 'end': 3856.1, 'text': ' And then Z equal to Z plus 1.', 'tokens': [50871, 400, 550, 1176, 2681, 281, 1176, 1804, 502, 13, 51023], 'temperature': 0.0, 'avg_logprob': -0.35727973937988283, 'compression_ratio': 1.2830188679245282, 'no_speech_prob': 0.03731722757220268}, {'id': 754, 'seek': 384292, 'start': 3856.1, 'end': 3863.32, 'text': ' It will become 6.', 'tokens': [51023, 467, 486, 1813, 1386, 13, 51384], 'temperature': 0.0, 'avg_logprob': -0.35727973937988283, 'compression_ratio': 1.2830188679245282, 'no_speech_prob': 0.03731722757220268}, {'id': 755, 'seek': 384292, 'start': 3863.32, 'end': 3866.48, 'text': ' And now I am doing Z equal to, in the else part, see.', 'tokens': [51384, 400, 586, 286, 669, 884, 1176, 2681, 281, 11, 294, 264, 1646, 644, 11, 536, 13, 51542], 'temperature': 0.0, 'avg_logprob': -0.35727973937988283, 'compression_ratio': 1.2830188679245282, 'no_speech_prob': 0.03731722757220268}, {'id': 756, 'seek': 386648, 'start': 3866.48, 'end': 3874.48, 'text': ' So at the end of the con, end of the then part of the con, I have X equal to 9, Y equal', 'tokens': [50364, 407, 412, 264, 917, 295, 264, 416, 11, 917, 295, 264, 550, 644, 295, 264, 416, 11, 286, 362, 1783, 2681, 281, 1722, 11, 398, 2681, 50764], 'temperature': 0.0, 'avg_logprob': -0.18558073043823242, 'compression_ratio': 1.5853658536585367, 'no_speech_prob': 0.02440095879137516}, {'id': 757, 'seek': 386648, 'start': 3874.48, 'end': 3878.78, 'text': ' to 0, Z equal to 6.', 'tokens': [50764, 281, 1958, 11, 1176, 2681, 281, 1386, 13, 50979], 'temperature': 0.0, 'avg_logprob': -0.18558073043823242, 'compression_ratio': 1.5853658536585367, 'no_speech_prob': 0.02440095879137516}, {'id': 758, 'seek': 386648, 'start': 3878.78, 'end': 3883.8, 'text': ' If you follow the algorithm, right, if you are careful, in my work list initially I had', 'tokens': [50979, 759, 291, 1524, 264, 9284, 11, 558, 11, 498, 291, 366, 5026, 11, 294, 452, 589, 1329, 9105, 286, 632, 51230], 'temperature': 0.0, 'avg_logprob': -0.18558073043823242, 'compression_ratio': 1.5853658536585367, 'no_speech_prob': 0.02440095879137516}, {'id': 759, 'seek': 386648, 'start': 3883.8, 'end': 3886.68, 'text': ' only the entry, which is at the top.', 'tokens': [51230, 787, 264, 8729, 11, 597, 307, 412, 264, 1192, 13, 51374], 'temperature': 0.0, 'avg_logprob': -0.18558073043823242, 'compression_ratio': 1.5853658536585367, 'no_speech_prob': 0.02440095879137516}, {'id': 760, 'seek': 386648, 'start': 3886.68, 'end': 3891.92, 'text': ' Then I added X equal to 10.', 'tokens': [51374, 1396, 286, 3869, 1783, 2681, 281, 1266, 13, 51636], 'temperature': 0.0, 'avg_logprob': -0.18558073043823242, 'compression_ratio': 1.5853658536585367, 'no_speech_prob': 0.02440095879137516}, {'id': 761, 'seek': 389192, 'start': 3891.92, 'end': 3898.34, 'text': ' As I process this, the X equal to 10, the m value has changed.', 'tokens': [50364, 1018, 286, 1399, 341, 11, 264, 1783, 2681, 281, 1266, 11, 264, 275, 2158, 575, 3105, 13, 50685], 'temperature': 0.0, 'avg_logprob': -0.33612391153971355, 'compression_ratio': 1.443661971830986, 'no_speech_prob': 0.030964452773332596}, {'id': 762, 'seek': 389192, 'start': 3898.34, 'end': 3901.6, 'text': ' So I added its successor.', 'tokens': [50685, 407, 286, 3869, 1080, 31864, 13, 50848], 'temperature': 0.0, 'avg_logprob': -0.33612391153971355, 'compression_ratio': 1.443661971830986, 'no_speech_prob': 0.030964452773332596}, {'id': 763, 'seek': 389192, 'start': 3901.6, 'end': 3909.32, 'text': ' Because I changed Y equal to something, next again the m value, what is the m value here', 'tokens': [50848, 1436, 286, 3105, 398, 2681, 281, 746, 11, 958, 797, 264, 275, 2158, 11, 437, 307, 264, 275, 2158, 510, 51234], 'temperature': 0.0, 'avg_logprob': -0.33612391153971355, 'compression_ratio': 1.443661971830986, 'no_speech_prob': 0.030964452773332596}, {'id': 764, 'seek': 389192, 'start': 3909.32, 'end': 3912.8, 'text': ' at this time, before print?', 'tokens': [51234, 412, 341, 565, 11, 949, 4482, 30, 51408], 'temperature': 0.0, 'avg_logprob': -0.33612391153971355, 'compression_ratio': 1.443661971830986, 'no_speech_prob': 0.030964452773332596}, {'id': 765, 'seek': 391280, 'start': 3912.8, 'end': 3922.76, 'text': ' No, initially it is initialized to top, top, top, right.', 'tokens': [50364, 883, 11, 9105, 309, 307, 5883, 1602, 281, 1192, 11, 1192, 11, 1192, 11, 558, 13, 50862], 'temperature': 0.0, 'avg_logprob': -0.25867213624896424, 'compression_ratio': 1.4451612903225806, 'no_speech_prob': 0.011988307349383831}, {'id': 766, 'seek': 391280, 'start': 3922.76, 'end': 3929.28, 'text': ' So technically after I process Z equal to Z plus 1, I will add to my work list its successor.', 'tokens': [50862, 407, 12120, 934, 286, 1399, 1176, 2681, 281, 1176, 1804, 502, 11, 286, 486, 909, 281, 452, 589, 1329, 1080, 31864, 13, 51188], 'temperature': 0.0, 'avg_logprob': -0.25867213624896424, 'compression_ratio': 1.4451612903225806, 'no_speech_prob': 0.011988307349383831}, {'id': 767, 'seek': 391280, 'start': 3929.28, 'end': 3932.28, 'text': ' Who is its successor?', 'tokens': [51188, 2102, 307, 1080, 31864, 30, 51338], 'temperature': 0.0, 'avg_logprob': -0.25867213624896424, 'compression_ratio': 1.4451612903225806, 'no_speech_prob': 0.011988307349383831}, {'id': 768, 'seek': 391280, 'start': 3932.28, 'end': 3938.88, 'text': ' Print, right, or rather the join point you can say.', 'tokens': [51338, 34439, 11, 558, 11, 420, 2831, 264, 3917, 935, 291, 393, 584, 13, 51668], 'temperature': 0.0, 'avg_logprob': -0.25867213624896424, 'compression_ratio': 1.4451612903225806, 'no_speech_prob': 0.011988307349383831}, {'id': 769, 'seek': 393888, 'start': 3938.96, 'end': 3944.08, 'text': ' So now if you say this print, which is the basic block, which has two predecessors.', 'tokens': [50368, 407, 586, 498, 291, 584, 341, 4482, 11, 597, 307, 264, 3875, 3461, 11, 597, 575, 732, 24874, 45700, 13, 50624], 'temperature': 0.0, 'avg_logprob': -0.18992226560350875, 'compression_ratio': 1.539877300613497, 'no_speech_prob': 0.060066208243370056}, {'id': 770, 'seek': 393888, 'start': 3944.08, 'end': 3949.82, 'text': ' One predecessor is this Y equal to 0, the other predecessor is Z equal to Z plus 1.', 'tokens': [50624, 1485, 34991, 307, 341, 398, 2681, 281, 1958, 11, 264, 661, 34991, 307, 1176, 2681, 281, 1176, 1804, 502, 13, 50911], 'temperature': 0.0, 'avg_logprob': -0.18992226560350875, 'compression_ratio': 1.539877300613497, 'no_speech_prob': 0.060066208243370056}, {'id': 771, 'seek': 393888, 'start': 3949.82, 'end': 3954.7200000000003, 'text': ' Now let us say I decide to process print.', 'tokens': [50911, 823, 718, 505, 584, 286, 4536, 281, 1399, 4482, 13, 51156], 'temperature': 0.0, 'avg_logprob': -0.18992226560350875, 'compression_ratio': 1.539877300613497, 'no_speech_prob': 0.060066208243370056}, {'id': 772, 'seek': 393888, 'start': 3954.7200000000003, 'end': 3962.7200000000003, 'text': ' Then what will be the value of my m here?', 'tokens': [51156, 1396, 437, 486, 312, 264, 2158, 295, 452, 275, 510, 30, 51556], 'temperature': 0.0, 'avg_logprob': -0.18992226560350875, 'compression_ratio': 1.539877300613497, 'no_speech_prob': 0.060066208243370056}, {'id': 773, 'seek': 396272, 'start': 3962.72, 'end': 3975.9199999999996, 'text': ' So I am taking a meat of top, top, top and X equal to 9, Y equal to 0, Z equal to 6.', 'tokens': [50364, 407, 286, 669, 1940, 257, 4615, 295, 1192, 11, 1192, 11, 1192, 293, 1783, 2681, 281, 1722, 11, 398, 2681, 281, 1958, 11, 1176, 2681, 281, 1386, 13, 51024], 'temperature': 0.0, 'avg_logprob': -0.19234995408491654, 'compression_ratio': 1.449438202247191, 'no_speech_prob': 0.04198344424366951}, {'id': 774, 'seek': 396272, 'start': 3975.9199999999996, 'end': 3980.9199999999996, 'text': ' And it will be 906.', 'tokens': [51024, 400, 309, 486, 312, 4289, 21, 13, 51274], 'temperature': 0.0, 'avg_logprob': -0.19234995408491654, 'compression_ratio': 1.449438202247191, 'no_speech_prob': 0.04198344424366951}, {'id': 775, 'seek': 396272, 'start': 3980.9199999999996, 'end': 3983.18, 'text': ' No problem, we are not done yet.', 'tokens': [51274, 883, 1154, 11, 321, 366, 406, 1096, 1939, 13, 51387], 'temperature': 0.0, 'avg_logprob': -0.19234995408491654, 'compression_ratio': 1.449438202247191, 'no_speech_prob': 0.04198344424366951}, {'id': 776, 'seek': 396272, 'start': 3983.18, 'end': 3984.8799999999997, 'text': ' Now what is there in my work list?', 'tokens': [51387, 823, 437, 307, 456, 294, 452, 589, 1329, 30, 51472], 'temperature': 0.0, 'avg_logprob': -0.19234995408491654, 'compression_ratio': 1.449438202247191, 'no_speech_prob': 0.04198344424366951}, {'id': 777, 'seek': 396272, 'start': 3984.8799999999997, 'end': 3991.08, 'text': ' So the out of this will be, if I add, since its m has changed, I can process this guy', 'tokens': [51472, 407, 264, 484, 295, 341, 486, 312, 11, 498, 286, 909, 11, 1670, 1080, 275, 575, 3105, 11, 286, 393, 1399, 341, 2146, 51782], 'temperature': 0.0, 'avg_logprob': -0.19234995408491654, 'compression_ratio': 1.449438202247191, 'no_speech_prob': 0.04198344424366951}, {'id': 778, 'seek': 399108, 'start': 3991.44, 'end': 4000.08, 'text': ' and its out will be same X equal to 9, Y equal to 0, Z equal to 6.', 'tokens': [50382, 293, 1080, 484, 486, 312, 912, 1783, 2681, 281, 1722, 11, 398, 2681, 281, 1958, 11, 1176, 2681, 281, 1386, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.2046652207007775, 'compression_ratio': 1.6864864864864866, 'no_speech_prob': 0.03730924054980278}, {'id': 779, 'seek': 399108, 'start': 4000.08, 'end': 4002.84, 'text': ' And now there is nothing more to add.', 'tokens': [50814, 400, 586, 456, 307, 1825, 544, 281, 909, 13, 50952], 'temperature': 0.0, 'avg_logprob': -0.2046652207007775, 'compression_ratio': 1.6864864864864866, 'no_speech_prob': 0.03730924054980278}, {'id': 780, 'seek': 399108, 'start': 4002.84, 'end': 4006.12, 'text': ' The print has no successors, it will not add nothing.', 'tokens': [50952, 440, 4482, 575, 572, 2245, 830, 11, 309, 486, 406, 909, 1825, 13, 51116], 'temperature': 0.0, 'avg_logprob': -0.2046652207007775, 'compression_ratio': 1.6864864864864866, 'no_speech_prob': 0.03730924054980278}, {'id': 781, 'seek': 399108, 'start': 4006.12, 'end': 4009.12, 'text': ' But what is there in my work list is Z equal to Z plus Y.', 'tokens': [51116, 583, 437, 307, 456, 294, 452, 589, 1329, 307, 1176, 2681, 281, 1176, 1804, 398, 13, 51266], 'temperature': 0.0, 'avg_logprob': -0.2046652207007775, 'compression_ratio': 1.6864864864864866, 'no_speech_prob': 0.03730924054980278}, {'id': 782, 'seek': 399108, 'start': 4009.12, 'end': 4011.24, 'text': ' Let me process that.', 'tokens': [51266, 961, 385, 1399, 300, 13, 51372], 'temperature': 0.0, 'avg_logprob': -0.2046652207007775, 'compression_ratio': 1.6864864864864866, 'no_speech_prob': 0.03730924054980278}, {'id': 783, 'seek': 399108, 'start': 4011.24, 'end': 4015.2799999999997, 'text': ' I will do X equal to 10, Y equal to 1, Z equal to 5.', 'tokens': [51372, 286, 486, 360, 1783, 2681, 281, 1266, 11, 398, 2681, 281, 502, 11, 1176, 2681, 281, 1025, 13, 51574], 'temperature': 0.0, 'avg_logprob': -0.2046652207007775, 'compression_ratio': 1.6864864864864866, 'no_speech_prob': 0.03730924054980278}, {'id': 784, 'seek': 399108, 'start': 4015.2799999999997, 'end': 4018.2799999999997, 'text': ' What will be the out?', 'tokens': [51574, 708, 486, 312, 264, 484, 30, 51724], 'temperature': 0.0, 'avg_logprob': -0.2046652207007775, 'compression_ratio': 1.6864864864864866, 'no_speech_prob': 0.03730924054980278}, {'id': 785, 'seek': 401828, 'start': 4018.48, 'end': 4024.82, 'text': ' Z will be equal to 6.', 'tokens': [50374, 1176, 486, 312, 2681, 281, 1386, 13, 50691], 'temperature': 0.0, 'avg_logprob': -0.20602740010907572, 'compression_ratio': 1.4473684210526316, 'no_speech_prob': 0.004132064525038004}, {'id': 786, 'seek': 401828, 'start': 4024.82, 'end': 4031.0, 'text': ' And then I am saying Y equal to 0.', 'tokens': [50691, 400, 550, 286, 669, 1566, 398, 2681, 281, 1958, 13, 51000], 'temperature': 0.0, 'avg_logprob': -0.20602740010907572, 'compression_ratio': 1.4473684210526316, 'no_speech_prob': 0.004132064525038004}, {'id': 787, 'seek': 401828, 'start': 4031.0, 'end': 4035.32, 'text': ' So what will be the out?', 'tokens': [51000, 407, 437, 486, 312, 264, 484, 30, 51216], 'temperature': 0.0, 'avg_logprob': -0.20602740010907572, 'compression_ratio': 1.4473684210526316, 'no_speech_prob': 0.004132064525038004}, {'id': 788, 'seek': 401828, 'start': 4035.32, 'end': 4038.8, 'text': ' X equal to 10, Y equal to 0.', 'tokens': [51216, 1783, 2681, 281, 1266, 11, 398, 2681, 281, 1958, 13, 51390], 'temperature': 0.0, 'avg_logprob': -0.20602740010907572, 'compression_ratio': 1.4473684210526316, 'no_speech_prob': 0.004132064525038004}, {'id': 789, 'seek': 401828, 'start': 4038.8, 'end': 4041.28, 'text': ' Now what is the successor of this Y equal to 0?', 'tokens': [51390, 823, 437, 307, 264, 31864, 295, 341, 398, 2681, 281, 1958, 30, 51514], 'temperature': 0.0, 'avg_logprob': -0.20602740010907572, 'compression_ratio': 1.4473684210526316, 'no_speech_prob': 0.004132064525038004}, {'id': 790, 'seek': 401828, 'start': 4041.28, 'end': 4042.28, 'text': ' Print.', 'tokens': [51514, 34439, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.20602740010907572, 'compression_ratio': 1.4473684210526316, 'no_speech_prob': 0.004132064525038004}, {'id': 791, 'seek': 404228, 'start': 4042.28, 'end': 4050.1600000000003, 'text': " Now for print, so the Y equal to 0's out has changed.", 'tokens': [50364, 823, 337, 4482, 11, 370, 264, 398, 2681, 281, 1958, 311, 484, 575, 3105, 13, 50758], 'temperature': 0.0, 'avg_logprob': -0.22270296907973017, 'compression_ratio': 1.7597402597402598, 'no_speech_prob': 0.0013588563306257129}, {'id': 792, 'seek': 404228, 'start': 4050.1600000000003, 'end': 4053.7200000000003, 'text': ' I will add its successor now.', 'tokens': [50758, 286, 486, 909, 1080, 31864, 586, 13, 50936], 'temperature': 0.0, 'avg_logprob': -0.22270296907973017, 'compression_ratio': 1.7597402597402598, 'no_speech_prob': 0.0013588563306257129}, {'id': 793, 'seek': 404228, 'start': 4053.7200000000003, 'end': 4059.1200000000003, 'text': ' I will add its successor.', 'tokens': [50936, 286, 486, 909, 1080, 31864, 13, 51206], 'temperature': 0.0, 'avg_logprob': -0.22270296907973017, 'compression_ratio': 1.7597402597402598, 'no_speech_prob': 0.0013588563306257129}, {'id': 794, 'seek': 404228, 'start': 4059.1200000000003, 'end': 4060.52, 'text': ' Now what is its successor?', 'tokens': [51206, 823, 437, 307, 1080, 31864, 30, 51276], 'temperature': 0.0, 'avg_logprob': -0.22270296907973017, 'compression_ratio': 1.7597402597402598, 'no_speech_prob': 0.0013588563306257129}, {'id': 795, 'seek': 404228, 'start': 4060.52, 'end': 4062.2000000000003, 'text': ' The print.', 'tokens': [51276, 440, 4482, 13, 51360], 'temperature': 0.0, 'avg_logprob': -0.22270296907973017, 'compression_ratio': 1.7597402597402598, 'no_speech_prob': 0.0013588563306257129}, {'id': 796, 'seek': 404228, 'start': 4062.2000000000003, 'end': 4067.2000000000003, 'text': ' So for processing print, I will take the meat of its predecessors.', 'tokens': [51360, 407, 337, 9007, 4482, 11, 286, 486, 747, 264, 4615, 295, 1080, 24874, 45700, 13, 51610], 'temperature': 0.0, 'avg_logprob': -0.22270296907973017, 'compression_ratio': 1.7597402597402598, 'no_speech_prob': 0.0013588563306257129}, {'id': 797, 'seek': 404228, 'start': 4067.2000000000003, 'end': 4070.36, 'text': ' So I will take a meat of Y, X equal to 10, X equal to 9.', 'tokens': [51610, 407, 286, 486, 747, 257, 4615, 295, 398, 11, 1783, 2681, 281, 1266, 11, 1783, 2681, 281, 1722, 13, 51768], 'temperature': 0.0, 'avg_logprob': -0.22270296907973017, 'compression_ratio': 1.7597402597402598, 'no_speech_prob': 0.0013588563306257129}, {'id': 798, 'seek': 407036, 'start': 4070.44, 'end': 4071.44, 'text': ' It will be bottom.', 'tokens': [50368, 467, 486, 312, 2767, 13, 50418], 'temperature': 0.0, 'avg_logprob': -0.24732002845177284, 'compression_ratio': 1.7411764705882353, 'no_speech_prob': 0.04936329647898674}, {'id': 799, 'seek': 407036, 'start': 4071.44, 'end': 4074.44, 'text': ' How do I write bottom?', 'tokens': [50418, 1012, 360, 286, 2464, 2767, 30, 50568], 'temperature': 0.0, 'avg_logprob': -0.24732002845177284, 'compression_ratio': 1.7411764705882353, 'no_speech_prob': 0.04936329647898674}, {'id': 800, 'seek': 407036, 'start': 4074.44, 'end': 4083.32, 'text': ' I will just write B. I do not have latex fonts here.', 'tokens': [50568, 286, 486, 445, 2464, 363, 13, 286, 360, 406, 362, 3469, 87, 35316, 510, 13, 51012], 'temperature': 0.0, 'avg_logprob': -0.24732002845177284, 'compression_ratio': 1.7411764705882353, 'no_speech_prob': 0.04936329647898674}, {'id': 801, 'seek': 407036, 'start': 4083.32, 'end': 4085.08, 'text': ' I could search and put it.', 'tokens': [51012, 286, 727, 3164, 293, 829, 309, 13, 51100], 'temperature': 0.0, 'avg_logprob': -0.24732002845177284, 'compression_ratio': 1.7411764705882353, 'no_speech_prob': 0.04936329647898674}, {'id': 802, 'seek': 407036, 'start': 4085.08, 'end': 4087.2000000000003, 'text': ' I am just writing B, B for bottom.', 'tokens': [51100, 286, 669, 445, 3579, 363, 11, 363, 337, 2767, 13, 51206], 'temperature': 0.0, 'avg_logprob': -0.24732002845177284, 'compression_ratio': 1.7411764705882353, 'no_speech_prob': 0.04936329647898674}, {'id': 803, 'seek': 407036, 'start': 4087.2000000000003, 'end': 4093.92, 'text': ' Then meat of Y equal to 0, Y equal to 0, Y equal to 0, Z equal to 6, Z equal to 6.', 'tokens': [51206, 1396, 4615, 295, 398, 2681, 281, 1958, 11, 398, 2681, 281, 1958, 11, 398, 2681, 281, 1958, 11, 1176, 2681, 281, 1386, 11, 1176, 2681, 281, 1386, 13, 51542], 'temperature': 0.0, 'avg_logprob': -0.24732002845177284, 'compression_ratio': 1.7411764705882353, 'no_speech_prob': 0.04936329647898674}, {'id': 804, 'seek': 407036, 'start': 4093.92, 'end': 4095.92, 'text': ' And then what will be the out of this?', 'tokens': [51542, 400, 550, 437, 486, 312, 264, 484, 295, 341, 30, 51642], 'temperature': 0.0, 'avg_logprob': -0.24732002845177284, 'compression_ratio': 1.7411764705882353, 'no_speech_prob': 0.04936329647898674}, {'id': 805, 'seek': 407036, 'start': 4095.92, 'end': 4098.32, 'text': ' Out of the print?', 'tokens': [51642, 5925, 295, 264, 4482, 30, 51762], 'temperature': 0.0, 'avg_logprob': -0.24732002845177284, 'compression_ratio': 1.7411764705882353, 'no_speech_prob': 0.04936329647898674}, {'id': 806, 'seek': 409832, 'start': 4099.28, 'end': 4101.84, 'text': ' X equal to B. Nothing has changed.', 'tokens': [50412, 1783, 2681, 281, 363, 13, 6693, 575, 3105, 13, 50540], 'temperature': 0.0, 'avg_logprob': -0.22885327524953075, 'compression_ratio': 1.75, 'no_speech_prob': 0.030969588086009026}, {'id': 807, 'seek': 409832, 'start': 4101.84, 'end': 4104.12, 'text': ' So I will stop here.', 'tokens': [50540, 407, 286, 486, 1590, 510, 13, 50654], 'temperature': 0.0, 'avg_logprob': -0.22885327524953075, 'compression_ratio': 1.75, 'no_speech_prob': 0.030969588086009026}, {'id': 808, 'seek': 409832, 'start': 4104.12, 'end': 4106.639999999999, 'text': ' And now what have I done?', 'tokens': [50654, 400, 586, 437, 362, 286, 1096, 30, 50780], 'temperature': 0.0, 'avg_logprob': -0.22885327524953075, 'compression_ratio': 1.75, 'no_speech_prob': 0.030969588086009026}, {'id': 809, 'seek': 409832, 'start': 4106.639999999999, 'end': 4110.08, 'text': ' I have identified the constants.', 'tokens': [50780, 286, 362, 9234, 264, 35870, 13, 50952], 'temperature': 0.0, 'avg_logprob': -0.22885327524953075, 'compression_ratio': 1.75, 'no_speech_prob': 0.030969588086009026}, {'id': 810, 'seek': 409832, 'start': 4110.08, 'end': 4114.639999999999, 'text': ' I have not done the constant replacement yet.', 'tokens': [50952, 286, 362, 406, 1096, 264, 5754, 14419, 1939, 13, 51180], 'temperature': 0.0, 'avg_logprob': -0.22885327524953075, 'compression_ratio': 1.75, 'no_speech_prob': 0.030969588086009026}, {'id': 811, 'seek': 409832, 'start': 4114.639999999999, 'end': 4118.12, 'text': ' I have not done the constant replacement yet.', 'tokens': [51180, 286, 362, 406, 1096, 264, 5754, 14419, 1939, 13, 51354], 'temperature': 0.0, 'avg_logprob': -0.22885327524953075, 'compression_ratio': 1.75, 'no_speech_prob': 0.030969588086009026}, {'id': 812, 'seek': 409832, 'start': 4118.12, 'end': 4119.12, 'text': ' Now what I will do?', 'tokens': [51354, 823, 437, 286, 486, 360, 30, 51404], 'temperature': 0.0, 'avg_logprob': -0.22885327524953075, 'compression_ratio': 1.75, 'no_speech_prob': 0.030969588086009026}, {'id': 813, 'seek': 409832, 'start': 4119.12, 'end': 4121.5199999999995, 'text': ' I will go over this code.', 'tokens': [51404, 286, 486, 352, 670, 341, 3089, 13, 51524], 'temperature': 0.0, 'avg_logprob': -0.22885327524953075, 'compression_ratio': 1.75, 'no_speech_prob': 0.030969588086009026}, {'id': 814, 'seek': 412152, 'start': 4121.72, 'end': 4130.88, 'text': ' On the right hand side, wherever there is an expression, I will take the constants from', 'tokens': [50374, 1282, 264, 558, 1011, 1252, 11, 8660, 456, 307, 364, 6114, 11, 286, 486, 747, 264, 35870, 490, 50832], 'temperature': 0.0, 'avg_logprob': -0.19156502485275267, 'compression_ratio': 1.821917808219178, 'no_speech_prob': 0.027158744633197784}, {'id': 815, 'seek': 412152, 'start': 4130.88, 'end': 4134.0, 'text': ' that map and replace.', 'tokens': [50832, 300, 4471, 293, 7406, 13, 50988], 'temperature': 0.0, 'avg_logprob': -0.19156502485275267, 'compression_ratio': 1.821917808219178, 'no_speech_prob': 0.027158744633197784}, {'id': 816, 'seek': 412152, 'start': 4134.0, 'end': 4138.080000000001, 'text': ' So this will become Y equal to 0.', 'tokens': [50988, 407, 341, 486, 1813, 398, 2681, 281, 1958, 13, 51192], 'temperature': 0.0, 'avg_logprob': -0.19156502485275267, 'compression_ratio': 1.821917808219178, 'no_speech_prob': 0.027158744633197784}, {'id': 817, 'seek': 412152, 'start': 4138.080000000001, 'end': 4139.4400000000005, 'text': ' This will become X equal to 9.', 'tokens': [51192, 639, 486, 1813, 1783, 2681, 281, 1722, 13, 51260], 'temperature': 0.0, 'avg_logprob': -0.19156502485275267, 'compression_ratio': 1.821917808219178, 'no_speech_prob': 0.027158744633197784}, {'id': 818, 'seek': 412152, 'start': 4139.4400000000005, 'end': 4144.240000000001, 'text': ' This will become Z equal to 6.', 'tokens': [51260, 639, 486, 1813, 1176, 2681, 281, 1386, 13, 51500], 'temperature': 0.0, 'avg_logprob': -0.19156502485275267, 'compression_ratio': 1.821917808219178, 'no_speech_prob': 0.027158744633197784}, {'id': 819, 'seek': 412152, 'start': 4144.240000000001, 'end': 4145.84, 'text': ' This will become Z equal to 6.', 'tokens': [51500, 639, 486, 1813, 1176, 2681, 281, 1386, 13, 51580], 'temperature': 0.0, 'avg_logprob': -0.19156502485275267, 'compression_ratio': 1.821917808219178, 'no_speech_prob': 0.027158744633197784}, {'id': 820, 'seek': 412152, 'start': 4145.84, 'end': 4149.68, 'text': ' This is already Y equal to 0.', 'tokens': [51580, 639, 307, 1217, 398, 2681, 281, 1958, 13, 51772], 'temperature': 0.0, 'avg_logprob': -0.19156502485275267, 'compression_ratio': 1.821917808219178, 'no_speech_prob': 0.027158744633197784}, {'id': 821, 'seek': 414968, 'start': 4149.84, 'end': 4161.280000000001, 'text': ' And this will become print X plus, not B plus, not bottom plus, X plus 0 plus 6.', 'tokens': [50372, 400, 341, 486, 1813, 4482, 1783, 1804, 11, 406, 363, 1804, 11, 406, 2767, 1804, 11, 1783, 1804, 1958, 1804, 1386, 13, 50944], 'temperature': 0.0, 'avg_logprob': -0.21605090853534167, 'compression_ratio': 1.5421686746987953, 'no_speech_prob': 0.004127390682697296}, {'id': 822, 'seek': 414968, 'start': 4161.280000000001, 'end': 4164.4800000000005, 'text': ' But 0 plus 6 I can simplify to 6.', 'tokens': [50944, 583, 1958, 1804, 1386, 286, 393, 20460, 281, 1386, 13, 51104], 'temperature': 0.0, 'avg_logprob': -0.21605090853534167, 'compression_ratio': 1.5421686746987953, 'no_speech_prob': 0.004127390682697296}, {'id': 823, 'seek': 414968, 'start': 4164.4800000000005, 'end': 4168.360000000001, 'text': ' So it will be print X plus 6.', 'tokens': [51104, 407, 309, 486, 312, 4482, 1783, 1804, 1386, 13, 51298], 'temperature': 0.0, 'avg_logprob': -0.21605090853534167, 'compression_ratio': 1.5421686746987953, 'no_speech_prob': 0.004127390682697296}, {'id': 824, 'seek': 414968, 'start': 4168.360000000001, 'end': 4177.52, 'text': ' And now you can invoke your reaching definitions and find where does this X equal to 10 reach?', 'tokens': [51298, 400, 586, 291, 393, 41117, 428, 9906, 21988, 293, 915, 689, 775, 341, 1783, 2681, 281, 1266, 2524, 30, 51756], 'temperature': 0.0, 'avg_logprob': -0.21605090853534167, 'compression_ratio': 1.5421686746987953, 'no_speech_prob': 0.004127390682697296}, {'id': 825, 'seek': 414968, 'start': 4177.52, 'end': 4178.52, 'text': ' Nowhere.', 'tokens': [51756, 823, 6703, 13, 51806], 'temperature': 0.0, 'avg_logprob': -0.21605090853534167, 'compression_ratio': 1.5421686746987953, 'no_speech_prob': 0.004127390682697296}, {'id': 826, 'seek': 414968, 'start': 4178.52, 'end': 4179.52, 'text': ' Remove.', 'tokens': [51806, 18831, 13, 51856], 'temperature': 0.0, 'avg_logprob': -0.21605090853534167, 'compression_ratio': 1.5421686746987953, 'no_speech_prob': 0.004127390682697296}, {'id': 827, 'seek': 417952, 'start': 4180.360000000001, 'end': 4181.360000000001, 'text': ' Y equal to 1 reaches?', 'tokens': [50406, 398, 2681, 281, 502, 14235, 30, 50456], 'temperature': 0.0, 'avg_logprob': -0.25592869584278394, 'compression_ratio': 1.6159420289855073, 'no_speech_prob': 0.006180175114423037}, {'id': 828, 'seek': 417952, 'start': 4181.360000000001, 'end': 4182.360000000001, 'text': ' Nowhere.', 'tokens': [50456, 823, 6703, 13, 50506], 'temperature': 0.0, 'avg_logprob': -0.25592869584278394, 'compression_ratio': 1.6159420289855073, 'no_speech_prob': 0.006180175114423037}, {'id': 829, 'seek': 417952, 'start': 4182.360000000001, 'end': 4183.360000000001, 'text': ' Z equal to 5 reaches?', 'tokens': [50506, 1176, 2681, 281, 1025, 14235, 30, 50556], 'temperature': 0.0, 'avg_logprob': -0.25592869584278394, 'compression_ratio': 1.6159420289855073, 'no_speech_prob': 0.006180175114423037}, {'id': 830, 'seek': 417952, 'start': 4183.360000000001, 'end': 4184.360000000001, 'text': ' Nowhere.', 'tokens': [50556, 823, 6703, 13, 50606], 'temperature': 0.0, 'avg_logprob': -0.25592869584278394, 'compression_ratio': 1.6159420289855073, 'no_speech_prob': 0.006180175114423037}, {'id': 831, 'seek': 417952, 'start': 4184.360000000001, 'end': 4192.76, 'text': ' Oh sorry, sorry, sorry, sorry, sorry.', 'tokens': [50606, 876, 2597, 11, 2597, 11, 2597, 11, 2597, 11, 2597, 13, 51026], 'temperature': 0.0, 'avg_logprob': -0.25592869584278394, 'compression_ratio': 1.6159420289855073, 'no_speech_prob': 0.006180175114423037}, {'id': 832, 'seek': 417952, 'start': 4192.76, 'end': 4193.76, 'text': ' X reaches.', 'tokens': [51026, 1783, 14235, 13, 51076], 'temperature': 0.0, 'avg_logprob': -0.25592869584278394, 'compression_ratio': 1.6159420289855073, 'no_speech_prob': 0.006180175114423037}, {'id': 833, 'seek': 417952, 'start': 4193.76, 'end': 4195.46, 'text': ' So I have to keep the X. My bad, my bad.', 'tokens': [51076, 407, 286, 362, 281, 1066, 264, 1783, 13, 1222, 1578, 11, 452, 1578, 13, 51161], 'temperature': 0.0, 'avg_logprob': -0.25592869584278394, 'compression_ratio': 1.6159420289855073, 'no_speech_prob': 0.006180175114423037}, {'id': 834, 'seek': 417952, 'start': 4195.46, 'end': 4196.46, 'text': ' This X reaches.', 'tokens': [51161, 639, 1783, 14235, 13, 51211], 'temperature': 0.0, 'avg_logprob': -0.25592869584278394, 'compression_ratio': 1.6159420289855073, 'no_speech_prob': 0.006180175114423037}, {'id': 835, 'seek': 417952, 'start': 4196.46, 'end': 4198.56, 'text': ' Y and Z go away.', 'tokens': [51211, 398, 293, 1176, 352, 1314, 13, 51316], 'temperature': 0.0, 'avg_logprob': -0.25592869584278394, 'compression_ratio': 1.6159420289855073, 'no_speech_prob': 0.006180175114423037}, {'id': 836, 'seek': 417952, 'start': 4198.56, 'end': 4203.8, 'text': ' This Y, poof, this X remains.', 'tokens': [51316, 639, 398, 11, 714, 2670, 11, 341, 1783, 7023, 13, 51578], 'temperature': 0.0, 'avg_logprob': -0.25592869584278394, 'compression_ratio': 1.6159420289855073, 'no_speech_prob': 0.006180175114423037}, {'id': 837, 'seek': 417952, 'start': 4203.8, 'end': 4204.8, 'text': ' Does it?', 'tokens': [51578, 4402, 309, 30, 51628], 'temperature': 0.0, 'avg_logprob': -0.25592869584278394, 'compression_ratio': 1.6159420289855073, 'no_speech_prob': 0.006180175114423037}, {'id': 838, 'seek': 420480, 'start': 4204.8, 'end': 4208.4800000000005, 'text': ' Yeah, this is X equal to 9.', 'tokens': [50364, 865, 11, 341, 307, 1783, 2681, 281, 1722, 13, 50548], 'temperature': 0.0, 'avg_logprob': -0.3434421611282061, 'compression_ratio': 1.8271604938271604, 'no_speech_prob': 0.02591155841946602}, {'id': 839, 'seek': 420480, 'start': 4208.4800000000005, 'end': 4210.92, 'text': ' This is X equal to 9.', 'tokens': [50548, 639, 307, 1783, 2681, 281, 1722, 13, 50670], 'temperature': 0.0, 'avg_logprob': -0.3434421611282061, 'compression_ratio': 1.8271604938271604, 'no_speech_prob': 0.02591155841946602}, {'id': 840, 'seek': 420480, 'start': 4210.92, 'end': 4213.92, 'text': ' Why do I need this X equal to 10?', 'tokens': [50670, 1545, 360, 286, 643, 341, 1783, 2681, 281, 1266, 30, 50820], 'temperature': 0.0, 'avg_logprob': -0.3434421611282061, 'compression_ratio': 1.8271604938271604, 'no_speech_prob': 0.02591155841946602}, {'id': 841, 'seek': 420480, 'start': 4213.92, 'end': 4218.04, 'text': ' Oh this will go down here.', 'tokens': [50820, 876, 341, 486, 352, 760, 510, 13, 51026], 'temperature': 0.0, 'avg_logprob': -0.3434421611282061, 'compression_ratio': 1.8271604938271604, 'no_speech_prob': 0.02591155841946602}, {'id': 842, 'seek': 420480, 'start': 4218.04, 'end': 4219.04, 'text': " That's why.", 'tokens': [51026, 663, 311, 983, 13, 51076], 'temperature': 0.0, 'avg_logprob': -0.3434421611282061, 'compression_ratio': 1.8271604938271604, 'no_speech_prob': 0.02591155841946602}, {'id': 843, 'seek': 420480, 'start': 4219.04, 'end': 4220.64, 'text': ' There is a reaching definition.', 'tokens': [51076, 821, 307, 257, 9906, 7123, 13, 51156], 'temperature': 0.0, 'avg_logprob': -0.3434421611282061, 'compression_ratio': 1.8271604938271604, 'no_speech_prob': 0.02591155841946602}, {'id': 844, 'seek': 420480, 'start': 4220.64, 'end': 4223.6, 'text': ' This definition does reach.', 'tokens': [51156, 639, 7123, 775, 2524, 13, 51304], 'temperature': 0.0, 'avg_logprob': -0.3434421611282061, 'compression_ratio': 1.8271604938271604, 'no_speech_prob': 0.02591155841946602}, {'id': 845, 'seek': 420480, 'start': 4223.6, 'end': 4224.6, 'text': ' This X is equal to 9.', 'tokens': [51304, 639, 1783, 307, 2681, 281, 1722, 13, 51354], 'temperature': 0.0, 'avg_logprob': -0.3434421611282061, 'compression_ratio': 1.8271604938271604, 'no_speech_prob': 0.02591155841946602}, {'id': 846, 'seek': 420480, 'start': 4224.6, 'end': 4226.08, 'text': ' This may also reach.', 'tokens': [51354, 639, 815, 611, 2524, 13, 51428], 'temperature': 0.0, 'avg_logprob': -0.3434421611282061, 'compression_ratio': 1.8271604938271604, 'no_speech_prob': 0.02591155841946602}, {'id': 847, 'seek': 420480, 'start': 4226.08, 'end': 4229.360000000001, 'text': ' This guy poof, this guy poof, this guy poof.', 'tokens': [51428, 639, 2146, 714, 2670, 11, 341, 2146, 714, 2670, 11, 341, 2146, 714, 2670, 13, 51592], 'temperature': 0.0, 'avg_logprob': -0.3434421611282061, 'compression_ratio': 1.8271604938271604, 'no_speech_prob': 0.02591155841946602}, {'id': 848, 'seek': 420480, 'start': 4229.360000000001, 'end': 4232.8, 'text': ' So the else part is gone.', 'tokens': [51592, 407, 264, 1646, 644, 307, 2780, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.3434421611282061, 'compression_ratio': 1.8271604938271604, 'no_speech_prob': 0.02591155841946602}, {'id': 849, 'seek': 423280, 'start': 4233.8, 'end': 4238.84, 'text': ' So we did first pass, we propagated the constants.', 'tokens': [50414, 407, 321, 630, 700, 1320, 11, 321, 12425, 770, 264, 35870, 13, 50666], 'temperature': 0.0, 'avg_logprob': -0.3349480628967285, 'compression_ratio': 1.4137931034482758, 'no_speech_prob': 0.06364250928163528}, {'id': 850, 'seek': 423280, 'start': 4238.84, 'end': 4244.24, 'text': ' Second pass we replaced them and threw away unnecessary definition.', 'tokens': [50666, 5736, 1320, 321, 10772, 552, 293, 11918, 1314, 19350, 7123, 13, 50936], 'temperature': 0.0, 'avg_logprob': -0.3349480628967285, 'compression_ratio': 1.4137931034482758, 'no_speech_prob': 0.06364250928163528}, {'id': 851, 'seek': 423280, 'start': 4244.24, 'end': 4245.24, 'text': ' Right?', 'tokens': [50936, 1779, 30, 50986], 'temperature': 0.0, 'avg_logprob': -0.3349480628967285, 'compression_ratio': 1.4137931034482758, 'no_speech_prob': 0.06364250928163528}, {'id': 852, 'seek': 423280, 'start': 4245.24, 'end': 4248.88, 'text': ' All on the same page?', 'tokens': [50986, 1057, 322, 264, 912, 3028, 30, 51168], 'temperature': 0.0, 'avg_logprob': -0.3349480628967285, 'compression_ratio': 1.4137931034482758, 'no_speech_prob': 0.06364250928163528}, {'id': 853, 'seek': 423280, 'start': 4248.88, 'end': 4249.88, 'text': ' Any questions?', 'tokens': [51168, 2639, 1651, 30, 51218], 'temperature': 0.0, 'avg_logprob': -0.3349480628967285, 'compression_ratio': 1.4137931034482758, 'no_speech_prob': 0.06364250928163528}, {'id': 854, 'seek': 423280, 'start': 4249.88, 'end': 4250.88, 'text': ' Now?', 'tokens': [51218, 823, 30, 51268], 'temperature': 0.0, 'avg_logprob': -0.3349480628967285, 'compression_ratio': 1.4137931034482758, 'no_speech_prob': 0.06364250928163528}, {'id': 855, 'seek': 423280, 'start': 4250.88, 'end': 4251.88, 'text': ' Okay.', 'tokens': [51268, 1033, 13, 51318], 'temperature': 0.0, 'avg_logprob': -0.3349480628967285, 'compression_ratio': 1.4137931034482758, 'no_speech_prob': 0.06364250928163528}, {'id': 856, 'seek': 423280, 'start': 4251.88, 'end': 4252.88, 'text': ' If you look at.', 'tokens': [51318, 759, 291, 574, 412, 13, 51368], 'temperature': 0.0, 'avg_logprob': -0.3349480628967285, 'compression_ratio': 1.4137931034482758, 'no_speech_prob': 0.06364250928163528}, {'id': 857, 'seek': 423280, 'start': 4252.88, 'end': 4253.88, 'text': ' If you look at.', 'tokens': [51368, 759, 291, 574, 412, 13, 51418], 'temperature': 0.0, 'avg_logprob': -0.3349480628967285, 'compression_ratio': 1.4137931034482758, 'no_speech_prob': 0.06364250928163528}, {'id': 858, 'seek': 425388, 'start': 4253.96, 'end': 4271.92, 'text': ' Yeah, here the lattice is a skewed lattice.', 'tokens': [50368, 865, 11, 510, 264, 34011, 307, 257, 8756, 26896, 34011, 13, 51266], 'temperature': 0.0, 'avg_logprob': -0.4608058621806483, 'compression_ratio': 1.1125, 'no_speech_prob': 0.0694904774427414}, {'id': 859, 'seek': 425388, 'start': 4271.92, 'end': 4280.92, 'text': " I mean it's a kind of a flat, flat like this.", 'tokens': [51266, 286, 914, 309, 311, 257, 733, 295, 257, 4962, 11, 4962, 411, 341, 13, 51716], 'temperature': 0.0, 'avg_logprob': -0.4608058621806483, 'compression_ratio': 1.1125, 'no_speech_prob': 0.0694904774427414}, {'id': 860, 'seek': 428092, 'start': 4280.92, 'end': 4281.92, 'text': ' As in?', 'tokens': [50364, 1018, 294, 30, 50414], 'temperature': 0.2, 'avg_logprob': -0.3278780937194824, 'compression_ratio': 1.4516129032258065, 'no_speech_prob': 0.005300210323184729}, {'id': 861, 'seek': 428092, 'start': 4281.92, 'end': 4300.92, 'text': " No, no, no, no, no, we don't have to reach the top, do we?", 'tokens': [50414, 883, 11, 572, 11, 572, 11, 572, 11, 572, 11, 321, 500, 380, 362, 281, 2524, 264, 1192, 11, 360, 321, 30, 51364], 'temperature': 0.2, 'avg_logprob': -0.3278780937194824, 'compression_ratio': 1.4516129032258065, 'no_speech_prob': 0.005300210323184729}, {'id': 862, 'seek': 428092, 'start': 4300.92, 'end': 4304.4, 'text': ' In reaching definitions do we always reach a place where set of all definitions?', 'tokens': [51364, 682, 9906, 21988, 360, 321, 1009, 2524, 257, 1081, 689, 992, 295, 439, 21988, 30, 51538], 'temperature': 0.2, 'avg_logprob': -0.3278780937194824, 'compression_ratio': 1.4516129032258065, 'no_speech_prob': 0.005300210323184729}, {'id': 863, 'seek': 428092, 'start': 4304.4, 'end': 4305.4, 'text': ' No.', 'tokens': [51538, 883, 13, 51588], 'temperature': 0.2, 'avg_logprob': -0.3278780937194824, 'compression_ratio': 1.4516129032258065, 'no_speech_prob': 0.005300210323184729}, {'id': 864, 'seek': 428092, 'start': 4305.4, 'end': 4306.4, 'text': ' We stop somewhere in between.', 'tokens': [51588, 492, 1590, 4079, 294, 1296, 13, 51638], 'temperature': 0.2, 'avg_logprob': -0.3278780937194824, 'compression_ratio': 1.4516129032258065, 'no_speech_prob': 0.005300210323184729}, {'id': 865, 'seek': 430640, 'start': 4306.879999999999, 'end': 4315.879999999999, 'text': " Similarly when we did these dominators, we didn't say everybody is my dominator.", 'tokens': [50388, 13157, 562, 321, 630, 613, 8859, 3391, 11, 321, 994, 380, 584, 2201, 307, 452, 8859, 1639, 13, 50838], 'temperature': 0.0, 'avg_logprob': -0.27431657210640287, 'compression_ratio': 1.6816143497757847, 'no_speech_prob': 0.08026516437530518}, {'id': 866, 'seek': 430640, 'start': 4315.879999999999, 'end': 4316.879999999999, 'text': ' You may.', 'tokens': [50838, 509, 815, 13, 50888], 'temperature': 0.0, 'avg_logprob': -0.27431657210640287, 'compression_ratio': 1.6816143497757847, 'no_speech_prob': 0.08026516437530518}, {'id': 867, 'seek': 430640, 'start': 4316.879999999999, 'end': 4317.879999999999, 'text': ' Okay.', 'tokens': [50888, 1033, 13, 50938], 'temperature': 0.0, 'avg_logprob': -0.27431657210640287, 'compression_ratio': 1.6816143497757847, 'no_speech_prob': 0.08026516437530518}, {'id': 868, 'seek': 430640, 'start': 4317.879999999999, 'end': 4322.879999999999, 'text': " So what you are saying is when you take a meet, there you don't always go to the bottom.", 'tokens': [50938, 407, 437, 291, 366, 1566, 307, 562, 291, 747, 257, 1677, 11, 456, 291, 500, 380, 1009, 352, 281, 264, 2767, 13, 51188], 'temperature': 0.0, 'avg_logprob': -0.27431657210640287, 'compression_ratio': 1.6816143497757847, 'no_speech_prob': 0.08026516437530518}, {'id': 869, 'seek': 430640, 'start': 4322.879999999999, 'end': 4326.5599999999995, 'text': ' Here the moment you take a meet with anything other than you, you quickly fall onto the', 'tokens': [51188, 1692, 264, 1623, 291, 747, 257, 1677, 365, 1340, 661, 813, 291, 11, 291, 2661, 2100, 3911, 264, 51372], 'temperature': 0.0, 'avg_logprob': -0.27431657210640287, 'compression_ratio': 1.6816143497757847, 'no_speech_prob': 0.08026516437530518}, {'id': 870, 'seek': 430640, 'start': 4326.5599999999995, 'end': 4327.5599999999995, 'text': ' bottom.', 'tokens': [51372, 2767, 13, 51422], 'temperature': 0.0, 'avg_logprob': -0.27431657210640287, 'compression_ratio': 1.6816143497757847, 'no_speech_prob': 0.08026516437530518}, {'id': 871, 'seek': 430640, 'start': 4327.5599999999995, 'end': 4328.5599999999995, 'text': ' Yes.', 'tokens': [51422, 1079, 13, 51472], 'temperature': 0.0, 'avg_logprob': -0.27431657210640287, 'compression_ratio': 1.6816143497757847, 'no_speech_prob': 0.08026516437530518}, {'id': 872, 'seek': 430640, 'start': 4328.5599999999995, 'end': 4329.5599999999995, 'text': ' This is a, that way it is skewed.', 'tokens': [51472, 639, 307, 257, 11, 300, 636, 309, 307, 8756, 26896, 13, 51522], 'temperature': 0.0, 'avg_logprob': -0.27431657210640287, 'compression_ratio': 1.6816143497757847, 'no_speech_prob': 0.08026516437530518}, {'id': 873, 'seek': 430640, 'start': 4329.5599999999995, 'end': 4334.5599999999995, 'text': " It's kind of very, the height is only bottom top.", 'tokens': [51522, 467, 311, 733, 295, 588, 11, 264, 6681, 307, 787, 2767, 1192, 13, 51772], 'temperature': 0.0, 'avg_logprob': -0.27431657210640287, 'compression_ratio': 1.6816143497757847, 'no_speech_prob': 0.08026516437530518}, {'id': 874, 'seek': 430640, 'start': 4334.5599999999995, 'end': 4335.5599999999995, 'text': ' Okay.', 'tokens': [51772, 1033, 13, 51822], 'temperature': 0.0, 'avg_logprob': -0.27431657210640287, 'compression_ratio': 1.6816143497757847, 'no_speech_prob': 0.08026516437530518}, {'id': 875, 'seek': 433556, 'start': 4335.72, 'end': 4336.72, 'text': ' Okay.', 'tokens': [50372, 1033, 13, 50422], 'temperature': 0.0, 'avg_logprob': -0.45162534713745117, 'compression_ratio': 0.6875, 'no_speech_prob': 0.9856463074684143}, {'id': 876, 'seek': 433556, 'start': 4336.72, 'end': 4337.72, 'text': ' Okay.', 'tokens': [50422, 1033, 13, 50472], 'temperature': 0.0, 'avg_logprob': -0.45162534713745117, 'compression_ratio': 0.6875, 'no_speech_prob': 0.9856463074684143}]