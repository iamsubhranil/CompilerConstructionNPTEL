[{'id': 0, 'seek': 0, 'start': 0.0, 'end': 9.84, 'text': " Okay, so let's see what we are going to do.", 'tokens': [50364, 1033, 11, 370, 718, 311, 536, 437, 321, 366, 516, 281, 360, 13, 50856], 'temperature': 0.0, 'avg_logprob': -0.16549977590871412, 'compression_ratio': 1.5459183673469388, 'no_speech_prob': 0.03186952322721481}, {'id': 1, 'seek': 0, 'start': 9.84, 'end': 10.84, 'text': ' My name is Govind Rajan.', 'tokens': [50856, 1222, 1315, 307, 1037, 85, 471, 16745, 282, 13, 50906], 'temperature': 0.0, 'avg_logprob': -0.16549977590871412, 'compression_ratio': 1.5459183673469388, 'no_speech_prob': 0.03186952322721481}, {'id': 2, 'seek': 0, 'start': 10.84, 'end': 14.16, 'text': ' I am from Indian Institute of Science, Bangalore.', 'tokens': [50906, 286, 669, 490, 6427, 9446, 295, 8976, 11, 11538, 304, 418, 13, 51072], 'temperature': 0.0, 'avg_logprob': -0.16549977590871412, 'compression_ratio': 1.5459183673469388, 'no_speech_prob': 0.03186952322721481}, {'id': 3, 'seek': 0, 'start': 14.16, 'end': 18.76, 'text': ' My research work is primarily in computer architecture and compilers.', 'tokens': [51072, 1222, 2132, 589, 307, 10029, 294, 3820, 9482, 293, 715, 388, 433, 13, 51302], 'temperature': 0.0, 'avg_logprob': -0.16549977590871412, 'compression_ratio': 1.5459183673469388, 'no_speech_prob': 0.03186952322721481}, {'id': 4, 'seek': 0, 'start': 18.76, 'end': 22.72, 'text': ' And I do things which are pretty much in the backend of the compiler, what we call as the', 'tokens': [51302, 400, 286, 360, 721, 597, 366, 1238, 709, 294, 264, 38087, 295, 264, 31958, 11, 437, 321, 818, 382, 264, 51500], 'temperature': 0.0, 'avg_logprob': -0.16549977590871412, 'compression_ratio': 1.5459183673469388, 'no_speech_prob': 0.03186952322721481}, {'id': 5, 'seek': 0, 'start': 22.72, 'end': 24.92, 'text': ' backend of the compiler.', 'tokens': [51500, 38087, 295, 264, 31958, 13, 51610], 'temperature': 0.0, 'avg_logprob': -0.16549977590871412, 'compression_ratio': 1.5459183673469388, 'no_speech_prob': 0.03186952322721481}, {'id': 6, 'seek': 2492, 'start': 24.92, 'end': 29.92, 'text': ' And you would have seen a lot of things about the front end of the compiler in the last', 'tokens': [50364, 400, 291, 576, 362, 1612, 257, 688, 295, 721, 466, 264, 1868, 917, 295, 264, 31958, 294, 264, 1036, 50614], 'temperature': 0.0, 'avg_logprob': -0.22069383278871194, 'compression_ratio': 1.7991803278688525, 'no_speech_prob': 0.403594046831131}, {'id': 7, 'seek': 2492, 'start': 29.92, 'end': 32.32, 'text': ' 7, 8 days, correct?', 'tokens': [50614, 1614, 11, 1649, 1708, 11, 3006, 30, 50734], 'temperature': 0.0, 'avg_logprob': -0.22069383278871194, 'compression_ratio': 1.7991803278688525, 'no_speech_prob': 0.403594046831131}, {'id': 8, 'seek': 2492, 'start': 32.32, 'end': 36.32, 'text': ' So what all have been taught in the front end for you?', 'tokens': [50734, 407, 437, 439, 362, 668, 5928, 294, 264, 1868, 917, 337, 291, 30, 50934], 'temperature': 0.0, 'avg_logprob': -0.22069383278871194, 'compression_ratio': 1.7991803278688525, 'no_speech_prob': 0.403594046831131}, {'id': 9, 'seek': 2492, 'start': 36.32, 'end': 40.64, 'text': ' You have to keep this class interactive, right?', 'tokens': [50934, 509, 362, 281, 1066, 341, 1508, 15141, 11, 558, 30, 51150], 'temperature': 0.0, 'avg_logprob': -0.22069383278871194, 'compression_ratio': 1.7991803278688525, 'no_speech_prob': 0.403594046831131}, {'id': 10, 'seek': 2492, 'start': 40.64, 'end': 45.0, 'text': ' That way it will be useful and I get to know more from you and then you can also learn', 'tokens': [51150, 663, 636, 309, 486, 312, 4420, 293, 286, 483, 281, 458, 544, 490, 291, 293, 550, 291, 393, 611, 1466, 51368], 'temperature': 0.0, 'avg_logprob': -0.22069383278871194, 'compression_ratio': 1.7991803278688525, 'no_speech_prob': 0.403594046831131}, {'id': 11, 'seek': 2492, 'start': 45.0, 'end': 46.760000000000005, 'text': ' something from me.', 'tokens': [51368, 746, 490, 385, 13, 51456], 'temperature': 0.0, 'avg_logprob': -0.22069383278871194, 'compression_ratio': 1.7991803278688525, 'no_speech_prob': 0.403594046831131}, {'id': 12, 'seek': 2492, 'start': 46.760000000000005, 'end': 51.64, 'text': ' So you have been taught about the front end of the compiler like the lexical analysis', 'tokens': [51456, 407, 291, 362, 668, 5928, 466, 264, 1868, 917, 295, 264, 31958, 411, 264, 476, 87, 804, 5215, 51700], 'temperature': 0.0, 'avg_logprob': -0.22069383278871194, 'compression_ratio': 1.7991803278688525, 'no_speech_prob': 0.403594046831131}, {'id': 13, 'seek': 2492, 'start': 51.64, 'end': 53.84, 'text': ' and the semantic analysis and so on.', 'tokens': [51700, 293, 264, 47982, 5215, 293, 370, 322, 13, 51810], 'temperature': 0.0, 'avg_logprob': -0.22069383278871194, 'compression_ratio': 1.7991803278688525, 'no_speech_prob': 0.403594046831131}, {'id': 14, 'seek': 5384, 'start': 53.84, 'end': 59.56, 'text': ' Have you also been taught about data flow analysis, intermediate code representation?', 'tokens': [50364, 3560, 291, 611, 668, 5928, 466, 1412, 3095, 5215, 11, 19376, 3089, 10290, 30, 50650], 'temperature': 0.0, 'avg_logprob': -0.16431379879222197, 'compression_ratio': 1.6359223300970873, 'no_speech_prob': 0.013839990831911564}, {'id': 15, 'seek': 5384, 'start': 59.56, 'end': 65.72, 'text': ' Okay, so what we are going to see is probably more towards the backend of the compiler.', 'tokens': [50650, 1033, 11, 370, 437, 321, 366, 516, 281, 536, 307, 1391, 544, 3030, 264, 38087, 295, 264, 31958, 13, 50958], 'temperature': 0.0, 'avg_logprob': -0.16431379879222197, 'compression_ratio': 1.6359223300970873, 'no_speech_prob': 0.013839990831911564}, {'id': 16, 'seek': 5384, 'start': 65.72, 'end': 67.16, 'text': " So let's see what we are going to see.", 'tokens': [50958, 407, 718, 311, 536, 437, 321, 366, 516, 281, 536, 13, 51030], 'temperature': 0.0, 'avg_logprob': -0.16431379879222197, 'compression_ratio': 1.6359223300970873, 'no_speech_prob': 0.013839990831911564}, {'id': 17, 'seek': 5384, 'start': 67.16, 'end': 72.04, 'text': ' But before we see that backend of the compiler, so let me just tell you what is the overall', 'tokens': [51030, 583, 949, 321, 536, 300, 38087, 295, 264, 31958, 11, 370, 718, 385, 445, 980, 291, 437, 307, 264, 4787, 51274], 'temperature': 0.0, 'avg_logprob': -0.16431379879222197, 'compression_ratio': 1.6359223300970873, 'no_speech_prob': 0.013839990831911564}, {'id': 18, 'seek': 5384, 'start': 72.04, 'end': 78.56, 'text': ' plan for the next 3 days, right?', 'tokens': [51274, 1393, 337, 264, 958, 805, 1708, 11, 558, 30, 51600], 'temperature': 0.0, 'avg_logprob': -0.16431379879222197, 'compression_ratio': 1.6359223300970873, 'no_speech_prob': 0.013839990831911564}, {'id': 19, 'seek': 7856, 'start': 79.32000000000001, 'end': 83.8, 'text': ' So before we see many of the things which are relating to code generation and machine', 'tokens': [50402, 407, 949, 321, 536, 867, 295, 264, 721, 597, 366, 23968, 281, 3089, 5125, 293, 3479, 50626], 'temperature': 0.0, 'avg_logprob': -0.15757887259773587, 'compression_ratio': 1.743083003952569, 'no_speech_prob': 0.11101293563842773}, {'id': 20, 'seek': 7856, 'start': 83.8, 'end': 90.26, 'text': ' dependent optimizations, I would give you a little bit background on machine architecture.', 'tokens': [50626, 12334, 5028, 14455, 11, 286, 576, 976, 291, 257, 707, 857, 3678, 322, 3479, 9482, 13, 50949], 'temperature': 0.0, 'avg_logprob': -0.15757887259773587, 'compression_ratio': 1.743083003952569, 'no_speech_prob': 0.11101293563842773}, {'id': 21, 'seek': 7856, 'start': 90.26, 'end': 94.08, 'text': ' Most of you would have done a course on computer organization or computer architecture.', 'tokens': [50949, 4534, 295, 291, 576, 362, 1096, 257, 1164, 322, 3820, 4475, 420, 3820, 9482, 13, 51140], 'temperature': 0.0, 'avg_logprob': -0.15757887259773587, 'compression_ratio': 1.743083003952569, 'no_speech_prob': 0.11101293563842773}, {'id': 22, 'seek': 7856, 'start': 94.08, 'end': 100.12, 'text': ' I will try to kind of revisit or review some of these concepts which are needed from the', 'tokens': [51140, 286, 486, 853, 281, 733, 295, 32676, 420, 3131, 512, 295, 613, 10392, 597, 366, 2978, 490, 264, 51442], 'temperature': 0.0, 'avg_logprob': -0.15757887259773587, 'compression_ratio': 1.743083003952569, 'no_speech_prob': 0.11101293563842773}, {'id': 23, 'seek': 7856, 'start': 100.12, 'end': 104.6, 'text': ' purpose of the compiler because after all we are generating code for a specific machine', 'tokens': [51442, 4334, 295, 264, 31958, 570, 934, 439, 321, 366, 17746, 3089, 337, 257, 2685, 3479, 51666], 'temperature': 0.0, 'avg_logprob': -0.15757887259773587, 'compression_ratio': 1.743083003952569, 'no_speech_prob': 0.11101293563842773}, {'id': 24, 'seek': 10460, 'start': 104.64, 'end': 110.39999999999999, 'text': ' architecture and all the optimization that we are going to be talking about are optimizations', 'tokens': [50366, 9482, 293, 439, 264, 19618, 300, 321, 366, 516, 281, 312, 1417, 466, 366, 5028, 14455, 50654], 'temperature': 0.0, 'avg_logprob': -0.20011099589239692, 'compression_ratio': 1.852017937219731, 'no_speech_prob': 0.11335640400648117}, {'id': 25, 'seek': 10460, 'start': 110.39999999999999, 'end': 112.6, 'text': ' which are machine dependent.', 'tokens': [50654, 597, 366, 3479, 12334, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.20011099589239692, 'compression_ratio': 1.852017937219731, 'no_speech_prob': 0.11335640400648117}, {'id': 26, 'seek': 10460, 'start': 112.6, 'end': 116.28, 'text': ' So therefore we need to have a good idea of what this is.', 'tokens': [50764, 407, 4412, 321, 643, 281, 362, 257, 665, 1558, 295, 437, 341, 307, 13, 50948], 'temperature': 0.0, 'avg_logprob': -0.20011099589239692, 'compression_ratio': 1.852017937219731, 'no_speech_prob': 0.11335640400648117}, {'id': 27, 'seek': 10460, 'start': 116.28, 'end': 121.72, 'text': ' So the first lecture is going to be more on the machine architecture.', 'tokens': [50948, 407, 264, 700, 7991, 307, 516, 281, 312, 544, 322, 264, 3479, 9482, 13, 51220], 'temperature': 0.0, 'avg_logprob': -0.20011099589239692, 'compression_ratio': 1.852017937219731, 'no_speech_prob': 0.11335640400648117}, {'id': 28, 'seek': 10460, 'start': 121.72, 'end': 124.11999999999999, 'text': ' Subsequently I will talk about code generation, right?', 'tokens': [51220, 8511, 46027, 286, 486, 751, 466, 3089, 5125, 11, 558, 30, 51340], 'temperature': 0.0, 'avg_logprob': -0.20011099589239692, 'compression_ratio': 1.852017937219731, 'no_speech_prob': 0.11335640400648117}, {'id': 29, 'seek': 10460, 'start': 124.11999999999999, 'end': 127.39999999999999, 'text': ' How to generate actually the machine code.', 'tokens': [51340, 1012, 281, 8460, 767, 264, 3479, 3089, 13, 51504], 'temperature': 0.0, 'avg_logprob': -0.20011099589239692, 'compression_ratio': 1.852017937219731, 'no_speech_prob': 0.11335640400648117}, {'id': 30, 'seek': 10460, 'start': 127.39999999999999, 'end': 130.0, 'text': ' But we will not really talk about it as generating machine code.', 'tokens': [51504, 583, 321, 486, 406, 534, 751, 466, 309, 382, 17746, 3479, 3089, 13, 51634], 'temperature': 0.0, 'avg_logprob': -0.20011099589239692, 'compression_ratio': 1.852017937219731, 'no_speech_prob': 0.11335640400648117}, {'id': 31, 'seek': 13000, 'start': 130.4, 'end': 135.52, 'text': ' We will talk about it as generating assembly instructions for a specific machine.', 'tokens': [50384, 492, 486, 751, 466, 309, 382, 17746, 12103, 9415, 337, 257, 2685, 3479, 13, 50640], 'temperature': 0.0, 'avg_logprob': -0.2641414982257503, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.033316999673843384}, {'id': 32, 'seek': 13000, 'start': 135.52, 'end': 140.24, 'text': ' From assembly instructions to machine code, it would be done by the assembler, right?', 'tokens': [50640, 3358, 12103, 9415, 281, 3479, 3089, 11, 309, 576, 312, 1096, 538, 264, 8438, 1918, 11, 558, 30, 50876], 'temperature': 0.0, 'avg_logprob': -0.2641414982257503, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.033316999673843384}, {'id': 33, 'seek': 13000, 'start': 140.24, 'end': 144.52, 'text': ' How many of you have heard about an assembler?', 'tokens': [50876, 1012, 867, 295, 291, 362, 2198, 466, 364, 8438, 1918, 30, 51090], 'temperature': 0.0, 'avg_logprob': -0.2641414982257503, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.033316999673843384}, {'id': 34, 'seek': 13000, 'start': 144.52, 'end': 147.52, 'text': ' Have you written a part of the assembler?', 'tokens': [51090, 3560, 291, 3720, 257, 644, 295, 264, 8438, 1918, 30, 51240], 'temperature': 0.0, 'avg_logprob': -0.2641414982257503, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.033316999673843384}, {'id': 35, 'seek': 13000, 'start': 147.52, 'end': 148.52, 'text': ' Have you people?', 'tokens': [51240, 3560, 291, 561, 30, 51290], 'temperature': 0.0, 'avg_logprob': -0.2641414982257503, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.033316999673843384}, {'id': 36, 'seek': 13000, 'start': 148.52, 'end': 149.52, 'text': ' No.', 'tokens': [51290, 883, 13, 51340], 'temperature': 0.0, 'avg_logprob': -0.2641414982257503, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.033316999673843384}, {'id': 37, 'seek': 13000, 'start': 149.52, 'end': 150.52, 'text': ' No.', 'tokens': [51340, 883, 13, 51390], 'temperature': 0.0, 'avg_logprob': -0.2641414982257503, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.033316999673843384}, {'id': 38, 'seek': 13000, 'start': 150.52, 'end': 151.52, 'text': ' Okay.', 'tokens': [51390, 1033, 13, 51440], 'temperature': 0.0, 'avg_logprob': -0.2641414982257503, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.033316999673843384}, {'id': 39, 'seek': 13000, 'start': 151.52, 'end': 155.84, 'text': ' That is actually a simpler task, much simpler task compared to writing a compiler, okay?', 'tokens': [51440, 663, 307, 767, 257, 18587, 5633, 11, 709, 18587, 5633, 5347, 281, 3579, 257, 31958, 11, 1392, 30, 51656], 'temperature': 0.0, 'avg_logprob': -0.2641414982257503, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.033316999673843384}, {'id': 40, 'seek': 15584, 'start': 155.84, 'end': 160.52, 'text': ' So we will not really see how to write an assembler or how to do that part.', 'tokens': [50364, 407, 321, 486, 406, 534, 536, 577, 281, 2464, 364, 8438, 1918, 420, 577, 281, 360, 300, 644, 13, 50598], 'temperature': 0.0, 'avg_logprob': -0.13164202372233072, 'compression_ratio': 1.6956521739130435, 'no_speech_prob': 0.012866903096437454}, {'id': 41, 'seek': 15584, 'start': 160.52, 'end': 164.84, 'text': ' But let us assume that that can be done in a easy manner, okay?', 'tokens': [50598, 583, 718, 505, 6552, 300, 300, 393, 312, 1096, 294, 257, 1858, 9060, 11, 1392, 30, 50814], 'temperature': 0.0, 'avg_logprob': -0.13164202372233072, 'compression_ratio': 1.6956521739130435, 'no_speech_prob': 0.012866903096437454}, {'id': 42, 'seek': 15584, 'start': 164.84, 'end': 170.92000000000002, 'text': ' So what we are going to focus from the second lecture onwards, right, till about today evening', 'tokens': [50814, 407, 437, 321, 366, 516, 281, 1879, 490, 264, 1150, 7991, 34230, 11, 558, 11, 4288, 466, 965, 5634, 51118], 'temperature': 0.0, 'avg_logprob': -0.13164202372233072, 'compression_ratio': 1.6956521739130435, 'no_speech_prob': 0.012866903096437454}, {'id': 43, 'seek': 15584, 'start': 170.92000000000002, 'end': 176.28, 'text': ' or maybe some part of it even tomorrow is all about code generation.', 'tokens': [51118, 420, 1310, 512, 644, 295, 309, 754, 4153, 307, 439, 466, 3089, 5125, 13, 51386], 'temperature': 0.0, 'avg_logprob': -0.13164202372233072, 'compression_ratio': 1.6956521739130435, 'no_speech_prob': 0.012866903096437454}, {'id': 44, 'seek': 15584, 'start': 176.28, 'end': 181.28, 'text': ' Then after that as a part of code generation in fact we will also talk about how to do', 'tokens': [51386, 1396, 934, 300, 382, 257, 644, 295, 3089, 5125, 294, 1186, 321, 486, 611, 751, 466, 577, 281, 360, 51636], 'temperature': 0.0, 'avg_logprob': -0.13164202372233072, 'compression_ratio': 1.6956521739130435, 'no_speech_prob': 0.012866903096437454}, {'id': 45, 'seek': 18128, 'start': 181.92, 'end': 187.16, 'text': ' instruction selection because there are multiple ways in which a given intermediate code can', 'tokens': [50396, 10951, 9450, 570, 456, 366, 3866, 2098, 294, 597, 257, 2212, 19376, 3089, 393, 50658], 'temperature': 0.0, 'avg_logprob': -0.15086675459338772, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.07598069310188293}, {'id': 46, 'seek': 18128, 'start': 187.16, 'end': 191.92000000000002, 'text': ' be, a code for an intermediate code can be generated.', 'tokens': [50658, 312, 11, 257, 3089, 337, 364, 19376, 3089, 393, 312, 10833, 13, 50896], 'temperature': 0.0, 'avg_logprob': -0.15086675459338772, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.07598069310188293}, {'id': 47, 'seek': 18128, 'start': 191.92000000000002, 'end': 196.2, 'text': ' So we will see what is the best way to do it, how to do instruction selection for that,', 'tokens': [50896, 407, 321, 486, 536, 437, 307, 264, 1151, 636, 281, 360, 309, 11, 577, 281, 360, 10951, 9450, 337, 300, 11, 51110], 'temperature': 0.0, 'avg_logprob': -0.15086675459338772, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.07598069310188293}, {'id': 48, 'seek': 18128, 'start': 196.2, 'end': 201.24, 'text': ' what instructions are more appropriate than what other instructions and so on.', 'tokens': [51110, 437, 9415, 366, 544, 6854, 813, 437, 661, 9415, 293, 370, 322, 13, 51362], 'temperature': 0.0, 'avg_logprob': -0.15086675459338772, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.07598069310188293}, {'id': 49, 'seek': 18128, 'start': 201.24, 'end': 206.56, 'text': ' Then we are going to spend again another two or three lectures on what is called register', 'tokens': [51362, 1396, 321, 366, 516, 281, 3496, 797, 1071, 732, 420, 1045, 16564, 322, 437, 307, 1219, 7280, 51628], 'temperature': 0.0, 'avg_logprob': -0.15086675459338772, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.07598069310188293}, {'id': 50, 'seek': 18128, 'start': 206.56, 'end': 207.56, 'text': ' allocation.', 'tokens': [51628, 27599, 13, 51678], 'temperature': 0.0, 'avg_logprob': -0.15086675459338772, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.07598069310188293}, {'id': 51, 'seek': 20756, 'start': 207.56, 'end': 212.32, 'text': ' So this is an important phase in the later part of the compiler where in the machine', 'tokens': [50364, 407, 341, 307, 364, 1021, 5574, 294, 264, 1780, 644, 295, 264, 31958, 689, 294, 264, 3479, 50602], 'temperature': 0.0, 'avg_logprob': -0.19350081223707932, 'compression_ratio': 2.051948051948052, 'no_speech_prob': 0.44507884979248047}, {'id': 52, 'seek': 20756, 'start': 212.32, 'end': 215.48, 'text': ' code some instructions would use registers.', 'tokens': [50602, 3089, 512, 9415, 576, 764, 38351, 13, 50760], 'temperature': 0.0, 'avg_logprob': -0.19350081223707932, 'compression_ratio': 2.051948051948052, 'no_speech_prob': 0.44507884979248047}, {'id': 53, 'seek': 20756, 'start': 215.48, 'end': 219.72, 'text': ' If it is a RISC machine then all instructions would use registers.', 'tokens': [50760, 759, 309, 307, 257, 497, 2343, 34, 3479, 550, 439, 9415, 576, 764, 38351, 13, 50972], 'temperature': 0.0, 'avg_logprob': -0.19350081223707932, 'compression_ratio': 2.051948051948052, 'no_speech_prob': 0.44507884979248047}, {'id': 54, 'seek': 20756, 'start': 219.72, 'end': 224.2, 'text': ' But if it is a RISC machine then they can use registers or memory operands.', 'tokens': [50972, 583, 498, 309, 307, 257, 497, 2343, 34, 3479, 550, 436, 393, 764, 38351, 420, 4675, 2208, 2967, 13, 51196], 'temperature': 0.0, 'avg_logprob': -0.19350081223707932, 'compression_ratio': 2.051948051948052, 'no_speech_prob': 0.44507884979248047}, {'id': 55, 'seek': 20756, 'start': 224.2, 'end': 230.16, 'text': ' So we will have to see when they use register operands what registers are assigned to operands,', 'tokens': [51196, 407, 321, 486, 362, 281, 536, 562, 436, 764, 7280, 2208, 2967, 437, 38351, 366, 13279, 281, 2208, 2967, 11, 51494], 'temperature': 0.0, 'avg_logprob': -0.19350081223707932, 'compression_ratio': 2.051948051948052, 'no_speech_prob': 0.44507884979248047}, {'id': 56, 'seek': 20756, 'start': 230.16, 'end': 234.48000000000002, 'text': ' how are they assigned and what is the register allocation policy and so on.', 'tokens': [51494, 577, 366, 436, 13279, 293, 437, 307, 264, 7280, 27599, 3897, 293, 370, 322, 13, 51710], 'temperature': 0.0, 'avg_logprob': -0.19350081223707932, 'compression_ratio': 2.051948051948052, 'no_speech_prob': 0.44507884979248047}, {'id': 57, 'seek': 20756, 'start': 234.48000000000002, 'end': 236.92000000000002, 'text': ' So we will spend time on that.', 'tokens': [51710, 407, 321, 486, 3496, 565, 322, 300, 13, 51832], 'temperature': 0.0, 'avg_logprob': -0.19350081223707932, 'compression_ratio': 2.051948051948052, 'no_speech_prob': 0.44507884979248047}, {'id': 58, 'seek': 23692, 'start': 236.92, 'end': 241.64, 'text': ' Then subsequently we will also talk about instruction scheduling which is essentially', 'tokens': [50364, 1396, 26514, 321, 486, 611, 751, 466, 10951, 29055, 597, 307, 4476, 50600], 'temperature': 0.0, 'avg_logprob': -0.14793349348980447, 'compression_ratio': 2.0855855855855854, 'no_speech_prob': 0.007144476752728224}, {'id': 59, 'seek': 23692, 'start': 241.64, 'end': 244.51999999999998, 'text': ' reordering of machine instructions.', 'tokens': [50600, 319, 765, 1794, 295, 3479, 9415, 13, 50744], 'temperature': 0.0, 'avg_logprob': -0.14793349348980447, 'compression_ratio': 2.0855855855855854, 'no_speech_prob': 0.007144476752728224}, {'id': 60, 'seek': 23692, 'start': 244.51999999999998, 'end': 249.2, 'text': ' In fact in the compiler this instruction scheduling and register allocation phase are done the', 'tokens': [50744, 682, 1186, 294, 264, 31958, 341, 10951, 29055, 293, 7280, 27599, 5574, 366, 1096, 264, 50978], 'temperature': 0.0, 'avg_logprob': -0.14793349348980447, 'compression_ratio': 2.0855855855855854, 'no_speech_prob': 0.007144476752728224}, {'id': 61, 'seek': 23692, 'start': 249.2, 'end': 250.2, 'text': ' other way around.', 'tokens': [50978, 661, 636, 926, 13, 51028], 'temperature': 0.0, 'avg_logprob': -0.14793349348980447, 'compression_ratio': 2.0855855855855854, 'no_speech_prob': 0.007144476752728224}, {'id': 62, 'seek': 23692, 'start': 250.2, 'end': 254.79999999999998, 'text': ' First typically instruction scheduling is done then register allocation is done but', 'tokens': [51028, 2386, 5850, 10951, 29055, 307, 1096, 550, 7280, 27599, 307, 1096, 457, 51258], 'temperature': 0.0, 'avg_logprob': -0.14793349348980447, 'compression_ratio': 2.0855855855855854, 'no_speech_prob': 0.007144476752728224}, {'id': 63, 'seek': 23692, 'start': 254.79999999999998, 'end': 258.08, 'text': ' for the lectures we will actually see it the other way around.', 'tokens': [51258, 337, 264, 16564, 321, 486, 767, 536, 309, 264, 661, 636, 926, 13, 51422], 'temperature': 0.0, 'avg_logprob': -0.14793349348980447, 'compression_ratio': 2.0855855855855854, 'no_speech_prob': 0.007144476752728224}, {'id': 64, 'seek': 23692, 'start': 258.08, 'end': 262.84, 'text': ' Of course it is possible to do register allocation before instruction scheduling.', 'tokens': [51422, 2720, 1164, 309, 307, 1944, 281, 360, 7280, 27599, 949, 10951, 29055, 13, 51660], 'temperature': 0.0, 'avg_logprob': -0.14793349348980447, 'compression_ratio': 2.0855855855855854, 'no_speech_prob': 0.007144476752728224}, {'id': 65, 'seek': 26284, 'start': 262.84, 'end': 265.0, 'text': ' There are some pros and cons of that.', 'tokens': [50364, 821, 366, 512, 6267, 293, 1014, 295, 300, 13, 50472], 'temperature': 0.0, 'avg_logprob': -0.2337567166584294, 'compression_ratio': 1.6724890829694323, 'no_speech_prob': 0.3876939117908478}, {'id': 66, 'seek': 26284, 'start': 265.0, 'end': 269.88, 'text': ' We will also talk about that and we also talk about what is the interaction between register', 'tokens': [50472, 492, 486, 611, 751, 466, 300, 293, 321, 611, 751, 466, 437, 307, 264, 9285, 1296, 7280, 50716], 'temperature': 0.0, 'avg_logprob': -0.2337567166584294, 'compression_ratio': 1.6724890829694323, 'no_speech_prob': 0.3876939117908478}, {'id': 67, 'seek': 26284, 'start': 269.88, 'end': 272.08, 'text': ' allocation and instruction scheduling.', 'tokens': [50716, 27599, 293, 10951, 29055, 13, 50826], 'temperature': 0.0, 'avg_logprob': -0.2337567166584294, 'compression_ratio': 1.6724890829694323, 'no_speech_prob': 0.3876939117908478}, {'id': 68, 'seek': 26284, 'start': 272.08, 'end': 279.67999999999995, 'text': ' Lastly we will talk about certain machine specific optimizations, right?', 'tokens': [50826, 18072, 321, 486, 751, 466, 1629, 3479, 2685, 5028, 14455, 11, 558, 30, 51206], 'temperature': 0.0, 'avg_logprob': -0.2337567166584294, 'compression_ratio': 1.6724890829694323, 'no_speech_prob': 0.3876939117908478}, {'id': 69, 'seek': 26284, 'start': 279.67999999999995, 'end': 285.79999999999995, 'text': ' Something like optimizing for memory hierarchy or optimizing for vector parallelism that', 'tokens': [51206, 6595, 411, 40425, 337, 4675, 22333, 420, 40425, 337, 8062, 8952, 1434, 300, 51512], 'temperature': 0.0, 'avg_logprob': -0.2337567166584294, 'compression_ratio': 1.6724890829694323, 'no_speech_prob': 0.3876939117908478}, {'id': 70, 'seek': 26284, 'start': 285.79999999999995, 'end': 289.46, 'text': ' is available in your architecture and so on, right?', 'tokens': [51512, 307, 2435, 294, 428, 9482, 293, 370, 322, 11, 558, 30, 51695], 'temperature': 0.0, 'avg_logprob': -0.2337567166584294, 'compression_ratio': 1.6724890829694323, 'no_speech_prob': 0.3876939117908478}, {'id': 71, 'seek': 28946, 'start': 289.46, 'end': 294.02, 'text': ' This will be towards the end of this program, maybe towards the last one or one and half', 'tokens': [50364, 639, 486, 312, 3030, 264, 917, 295, 341, 1461, 11, 1310, 3030, 264, 1036, 472, 420, 472, 293, 1922, 50592], 'temperature': 0.0, 'avg_logprob': -0.21102301588336242, 'compression_ratio': 1.6234309623430963, 'no_speech_prob': 0.37498342990875244}, {'id': 72, 'seek': 28946, 'start': 294.02, 'end': 296.14, 'text': ' lectures on that, okay.', 'tokens': [50592, 16564, 322, 300, 11, 1392, 13, 50698], 'temperature': 0.0, 'avg_logprob': -0.21102301588336242, 'compression_ratio': 1.6234309623430963, 'no_speech_prob': 0.37498342990875244}, {'id': 73, 'seek': 28946, 'start': 296.14, 'end': 302.02, 'text': ' So that is really the plan for the next three days, right?', 'tokens': [50698, 407, 300, 307, 534, 264, 1393, 337, 264, 958, 1045, 1708, 11, 558, 30, 50992], 'temperature': 0.0, 'avg_logprob': -0.21102301588336242, 'compression_ratio': 1.6234309623430963, 'no_speech_prob': 0.37498342990875244}, {'id': 74, 'seek': 28946, 'start': 302.02, 'end': 308.02, 'text': ' And what I want to emphasize here is that please feel free to ask questions, right?', 'tokens': [50992, 400, 437, 286, 528, 281, 16078, 510, 307, 300, 1767, 841, 1737, 281, 1029, 1651, 11, 558, 30, 51292], 'temperature': 0.0, 'avg_logprob': -0.21102301588336242, 'compression_ratio': 1.6234309623430963, 'no_speech_prob': 0.37498342990875244}, {'id': 75, 'seek': 28946, 'start': 308.02, 'end': 313.62, 'text': ' The idea is not so much to cover the material, it is more to make sure that you understand', 'tokens': [51292, 440, 1558, 307, 406, 370, 709, 281, 2060, 264, 2527, 11, 309, 307, 544, 281, 652, 988, 300, 291, 1223, 51572], 'temperature': 0.0, 'avg_logprob': -0.21102301588336242, 'compression_ratio': 1.6234309623430963, 'no_speech_prob': 0.37498342990875244}, {'id': 76, 'seek': 28946, 'start': 313.62, 'end': 314.62, 'text': ' some parts of it.', 'tokens': [51572, 512, 3166, 295, 309, 13, 51622], 'temperature': 0.0, 'avg_logprob': -0.21102301588336242, 'compression_ratio': 1.6234309623430963, 'no_speech_prob': 0.37498342990875244}, {'id': 77, 'seek': 28946, 'start': 314.62, 'end': 316.46, 'text': ' That is very important.', 'tokens': [51622, 663, 307, 588, 1021, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.21102301588336242, 'compression_ratio': 1.6234309623430963, 'no_speech_prob': 0.37498342990875244}, {'id': 78, 'seek': 31646, 'start': 316.46, 'end': 321.9, 'text': ' So if there is any difficulty or trouble please feel free to stop me and then ask questions.', 'tokens': [50364, 407, 498, 456, 307, 604, 10360, 420, 5253, 1767, 841, 1737, 281, 1590, 385, 293, 550, 1029, 1651, 13, 50636], 'temperature': 0.0, 'avg_logprob': -0.22459264901968148, 'compression_ratio': 1.6103896103896105, 'no_speech_prob': 0.3615648150444031}, {'id': 79, 'seek': 31646, 'start': 321.9, 'end': 327.53999999999996, 'text': ' I may not be able to answer all the questions but at least we can try to sort it out one', 'tokens': [50636, 286, 815, 406, 312, 1075, 281, 1867, 439, 264, 1651, 457, 412, 1935, 321, 393, 853, 281, 1333, 309, 484, 472, 50918], 'temperature': 0.0, 'avg_logprob': -0.22459264901968148, 'compression_ratio': 1.6103896103896105, 'no_speech_prob': 0.3615648150444031}, {'id': 80, 'seek': 31646, 'start': 327.53999999999996, 'end': 329.62, 'text': ' way or the other, okay.', 'tokens': [50918, 636, 420, 264, 661, 11, 1392, 13, 51022], 'temperature': 0.0, 'avg_logprob': -0.22459264901968148, 'compression_ratio': 1.6103896103896105, 'no_speech_prob': 0.3615648150444031}, {'id': 81, 'seek': 31646, 'start': 329.62, 'end': 331.09999999999997, 'text': ' So that is really the idea.', 'tokens': [51022, 407, 300, 307, 534, 264, 1558, 13, 51096], 'temperature': 0.0, 'avg_logprob': -0.22459264901968148, 'compression_ratio': 1.6103896103896105, 'no_speech_prob': 0.3615648150444031}, {'id': 82, 'seek': 31646, 'start': 331.09999999999997, 'end': 333.09999999999997, 'text': ' Are you all comfortable?', 'tokens': [51096, 2014, 291, 439, 4619, 30, 51196], 'temperature': 0.0, 'avg_logprob': -0.22459264901968148, 'compression_ratio': 1.6103896103896105, 'no_speech_prob': 0.3615648150444031}, {'id': 83, 'seek': 31646, 'start': 333.09999999999997, 'end': 337.09999999999997, 'text': ' Okay, did you have a good sleep yesterday night?', 'tokens': [51196, 1033, 11, 630, 291, 362, 257, 665, 2817, 5186, 1818, 30, 51396], 'temperature': 0.0, 'avg_logprob': -0.22459264901968148, 'compression_ratio': 1.6103896103896105, 'no_speech_prob': 0.3615648150444031}, {'id': 84, 'seek': 31646, 'start': 337.09999999999997, 'end': 339.21999999999997, 'text': ' Right, okay, good.', 'tokens': [51396, 1779, 11, 1392, 11, 665, 13, 51502], 'temperature': 0.0, 'avg_logprob': -0.22459264901968148, 'compression_ratio': 1.6103896103896105, 'no_speech_prob': 0.3615648150444031}, {'id': 85, 'seek': 31646, 'start': 339.21999999999997, 'end': 344.74, 'text': ' So feel free to interact with me and discuss.', 'tokens': [51502, 407, 841, 1737, 281, 4648, 365, 385, 293, 2248, 13, 51778], 'temperature': 0.0, 'avg_logprob': -0.22459264901968148, 'compression_ratio': 1.6103896103896105, 'no_speech_prob': 0.3615648150444031}, {'id': 86, 'seek': 34474, 'start': 344.74, 'end': 347.46000000000004, 'text': ' So this is the overall plan for the three days.', 'tokens': [50364, 407, 341, 307, 264, 4787, 1393, 337, 264, 1045, 1708, 13, 50500], 'temperature': 0.0, 'avg_logprob': -0.1479524478577731, 'compression_ratio': 1.720472440944882, 'no_speech_prob': 0.21640154719352722}, {'id': 87, 'seek': 34474, 'start': 347.46000000000004, 'end': 353.02, 'text': ' What we are going to start off is start off with machine architecture, right?', 'tokens': [50500, 708, 321, 366, 516, 281, 722, 766, 307, 722, 766, 365, 3479, 9482, 11, 558, 30, 50778], 'temperature': 0.0, 'avg_logprob': -0.1479524478577731, 'compression_ratio': 1.720472440944882, 'no_speech_prob': 0.21640154719352722}, {'id': 88, 'seek': 34474, 'start': 353.02, 'end': 357.34000000000003, 'text': ' As I mentioned earlier this is the part of the machine that we want to understand so', 'tokens': [50778, 1018, 286, 2835, 3071, 341, 307, 264, 644, 295, 264, 3479, 300, 321, 528, 281, 1223, 370, 50994], 'temperature': 0.0, 'avg_logprob': -0.1479524478577731, 'compression_ratio': 1.720472440944882, 'no_speech_prob': 0.21640154719352722}, {'id': 89, 'seek': 34474, 'start': 357.34000000000003, 'end': 359.42, 'text': ' that we can generate code for that.', 'tokens': [50994, 300, 321, 393, 8460, 3089, 337, 300, 13, 51098], 'temperature': 0.0, 'avg_logprob': -0.1479524478577731, 'compression_ratio': 1.720472440944882, 'no_speech_prob': 0.21640154719352722}, {'id': 90, 'seek': 34474, 'start': 359.42, 'end': 363.62, 'text': ' I am sure all of you would have done what I am going to teach in the next 45 minutes', 'tokens': [51098, 286, 669, 988, 439, 295, 291, 576, 362, 1096, 437, 286, 669, 516, 281, 2924, 294, 264, 958, 6905, 2077, 51308], 'temperature': 0.0, 'avg_logprob': -0.1479524478577731, 'compression_ratio': 1.720472440944882, 'no_speech_prob': 0.21640154719352722}, {'id': 91, 'seek': 34474, 'start': 363.62, 'end': 365.5, 'text': ' to one hour, okay.', 'tokens': [51308, 281, 472, 1773, 11, 1392, 13, 51402], 'temperature': 0.0, 'avg_logprob': -0.1479524478577731, 'compression_ratio': 1.720472440944882, 'no_speech_prob': 0.21640154719352722}, {'id': 92, 'seek': 34474, 'start': 365.5, 'end': 371.06, 'text': ' But I am going to reemphasize or go through that one more time so that the terminology', 'tokens': [51402, 583, 286, 669, 516, 281, 319, 443, 7485, 1125, 420, 352, 807, 300, 472, 544, 565, 370, 300, 264, 27575, 51680], 'temperature': 0.0, 'avg_logprob': -0.1479524478577731, 'compression_ratio': 1.720472440944882, 'no_speech_prob': 0.21640154719352722}, {'id': 93, 'seek': 37106, 'start': 371.3, 'end': 374.74, 'text': ' that we are using is kind of well understood, right?', 'tokens': [50376, 300, 321, 366, 1228, 307, 733, 295, 731, 7320, 11, 558, 30, 50548], 'temperature': 0.0, 'avg_logprob': -0.1872442713323629, 'compression_ratio': 1.6908396946564885, 'no_speech_prob': 0.1784326285123825}, {'id': 94, 'seek': 37106, 'start': 374.74, 'end': 381.02, 'text': ' And there is no confusion on what we are talking about, okay.', 'tokens': [50548, 400, 456, 307, 572, 15075, 322, 437, 321, 366, 1417, 466, 11, 1392, 13, 50862], 'temperature': 0.0, 'avg_logprob': -0.1872442713323629, 'compression_ratio': 1.6908396946564885, 'no_speech_prob': 0.1784326285123825}, {'id': 95, 'seek': 37106, 'start': 381.02, 'end': 386.14, 'text': ' So as far as the machine architecture part is concerned I am going to do it in two modules,', 'tokens': [50862, 407, 382, 1400, 382, 264, 3479, 9482, 644, 307, 5922, 286, 669, 516, 281, 360, 309, 294, 732, 16679, 11, 51118], 'temperature': 0.0, 'avg_logprob': -0.1872442713323629, 'compression_ratio': 1.6908396946564885, 'no_speech_prob': 0.1784326285123825}, {'id': 96, 'seek': 37106, 'start': 386.14, 'end': 387.14, 'text': ' right?', 'tokens': [51118, 558, 30, 51168], 'temperature': 0.0, 'avg_logprob': -0.1872442713323629, 'compression_ratio': 1.6908396946564885, 'no_speech_prob': 0.1784326285123825}, {'id': 97, 'seek': 37106, 'start': 387.14, 'end': 391.78, 'text': ' One module I will do it today but this is the overall overview of both the modules.', 'tokens': [51168, 1485, 10088, 286, 486, 360, 309, 965, 457, 341, 307, 264, 4787, 12492, 295, 1293, 264, 16679, 13, 51400], 'temperature': 0.0, 'avg_logprob': -0.1872442713323629, 'compression_ratio': 1.6908396946564885, 'no_speech_prob': 0.1784326285123825}, {'id': 98, 'seek': 37106, 'start': 391.78, 'end': 393.7, 'text': ' I start off with some simple introduction.', 'tokens': [51400, 286, 722, 766, 365, 512, 2199, 9339, 13, 51496], 'temperature': 0.0, 'avg_logprob': -0.1872442713323629, 'compression_ratio': 1.6908396946564885, 'no_speech_prob': 0.1784326285123825}, {'id': 99, 'seek': 37106, 'start': 393.7, 'end': 399.42, 'text': ' Then I will talk about instruction set architecture because for generating code you need to understand', 'tokens': [51496, 1396, 286, 486, 751, 466, 10951, 992, 9482, 570, 337, 17746, 3089, 291, 643, 281, 1223, 51782], 'temperature': 0.0, 'avg_logprob': -0.1872442713323629, 'compression_ratio': 1.6908396946564885, 'no_speech_prob': 0.1784326285123825}, {'id': 100, 'seek': 39942, 'start': 399.42, 'end': 401.5, 'text': ' what is the instruction set architecture.', 'tokens': [50364, 437, 307, 264, 10951, 992, 9482, 13, 50468], 'temperature': 0.0, 'avg_logprob': -0.13343651789539265, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.008734500966966152}, {'id': 101, 'seek': 39942, 'start': 401.5, 'end': 403.58000000000004, 'text': ' That is your interface to the architecture.', 'tokens': [50468, 663, 307, 428, 9226, 281, 264, 9482, 13, 50572], 'temperature': 0.0, 'avg_logprob': -0.13343651789539265, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.008734500966966152}, {'id': 102, 'seek': 39942, 'start': 403.58000000000004, 'end': 405.18, 'text': ' So you need to understand that.', 'tokens': [50572, 407, 291, 643, 281, 1223, 300, 13, 50652], 'temperature': 0.0, 'avg_logprob': -0.13343651789539265, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.008734500966966152}, {'id': 103, 'seek': 39942, 'start': 405.18, 'end': 407.42, 'text': ' So let us talk about that.', 'tokens': [50652, 407, 718, 505, 751, 466, 300, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.13343651789539265, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.008734500966966152}, {'id': 104, 'seek': 39942, 'start': 407.42, 'end': 412.38, 'text': ' Then subsequently we will very briefly talk about processor data path and pipelining because', 'tokens': [50764, 1396, 26514, 321, 486, 588, 10515, 751, 466, 15321, 1412, 3100, 293, 8489, 338, 1760, 570, 51012], 'temperature': 0.0, 'avg_logprob': -0.13343651789539265, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.008734500966966152}, {'id': 105, 'seek': 39942, 'start': 412.38, 'end': 418.74, 'text': ' I want to introduce the notion of hazards in a pipeline and how compiler can help to', 'tokens': [51012, 286, 528, 281, 5366, 264, 10710, 295, 34516, 294, 257, 15517, 293, 577, 31958, 393, 854, 281, 51330], 'temperature': 0.0, 'avg_logprob': -0.13343651789539265, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.008734500966966152}, {'id': 106, 'seek': 39942, 'start': 418.74, 'end': 422.34000000000003, 'text': ' overcome or reduce the impact of these hazards.', 'tokens': [51330, 10473, 420, 5407, 264, 2712, 295, 613, 34516, 13, 51510], 'temperature': 0.0, 'avg_logprob': -0.13343651789539265, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.008734500966966152}, {'id': 107, 'seek': 39942, 'start': 422.34000000000003, 'end': 428.18, 'text': ' So we will talk about that briefly so that that concept is also understood, okay.', 'tokens': [51510, 407, 321, 486, 751, 466, 300, 10515, 370, 300, 300, 3410, 307, 611, 7320, 11, 1392, 13, 51802], 'temperature': 0.0, 'avg_logprob': -0.13343651789539265, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.008734500966966152}, {'id': 108, 'seek': 42818, 'start': 428.22, 'end': 432.3, 'text': ' And then subsequently I will talk about instruction level parallelism because when you talk about', 'tokens': [50366, 400, 550, 26514, 286, 486, 751, 466, 10951, 1496, 8952, 1434, 570, 562, 291, 751, 466, 50570], 'temperature': 0.0, 'avg_logprob': -0.14001100621324905, 'compression_ratio': 1.948051948051948, 'no_speech_prob': 0.009858885779976845}, {'id': 109, 'seek': 42818, 'start': 432.3, 'end': 437.62, 'text': ' instruction scheduling, instruction scheduling is essentially a technique to expose instruction', 'tokens': [50570, 10951, 29055, 11, 10951, 29055, 307, 4476, 257, 6532, 281, 19219, 10951, 50836], 'temperature': 0.0, 'avg_logprob': -0.14001100621324905, 'compression_ratio': 1.948051948051948, 'no_speech_prob': 0.009858885779976845}, {'id': 110, 'seek': 42818, 'start': 437.62, 'end': 440.14, 'text': ' level parallelism to the architecture.', 'tokens': [50836, 1496, 8952, 1434, 281, 264, 9482, 13, 50962], 'temperature': 0.0, 'avg_logprob': -0.14001100621324905, 'compression_ratio': 1.948051948051948, 'no_speech_prob': 0.009858885779976845}, {'id': 111, 'seek': 42818, 'start': 440.14, 'end': 445.02, 'text': ' So in order for us to understand that we will very briefly talk about instruction level', 'tokens': [50962, 407, 294, 1668, 337, 505, 281, 1223, 300, 321, 486, 588, 10515, 751, 466, 10951, 1496, 51206], 'temperature': 0.0, 'avg_logprob': -0.14001100621324905, 'compression_ratio': 1.948051948051948, 'no_speech_prob': 0.009858885779976845}, {'id': 112, 'seek': 42818, 'start': 445.02, 'end': 448.82, 'text': ' parallelism processors, right?', 'tokens': [51206, 8952, 1434, 27751, 11, 558, 30, 51396], 'temperature': 0.0, 'avg_logprob': -0.14001100621324905, 'compression_ratio': 1.948051948051948, 'no_speech_prob': 0.009858885779976845}, {'id': 113, 'seek': 42818, 'start': 448.82, 'end': 454.3, 'text': ' And I will stop with that for today, okay, as far as the machine architecture module', 'tokens': [51396, 400, 286, 486, 1590, 365, 300, 337, 965, 11, 1392, 11, 382, 1400, 382, 264, 3479, 9482, 10088, 51670], 'temperature': 0.0, 'avg_logprob': -0.14001100621324905, 'compression_ratio': 1.948051948051948, 'no_speech_prob': 0.009858885779976845}, {'id': 114, 'seek': 42818, 'start': 454.3, 'end': 455.46000000000004, 'text': ' is concerned.', 'tokens': [51670, 307, 5922, 13, 51728], 'temperature': 0.0, 'avg_logprob': -0.14001100621324905, 'compression_ratio': 1.948051948051948, 'no_speech_prob': 0.009858885779976845}, {'id': 115, 'seek': 45546, 'start': 455.46, 'end': 461.14, 'text': ' The next two topics I will probably take it up on Friday because they relate to optimization', 'tokens': [50364, 440, 958, 732, 8378, 286, 486, 1391, 747, 309, 493, 322, 6984, 570, 436, 10961, 281, 19618, 50648], 'temperature': 0.0, 'avg_logprob': -0.12661460994445173, 'compression_ratio': 1.7076923076923076, 'no_speech_prob': 0.007552451454102993}, {'id': 116, 'seek': 45546, 'start': 461.14, 'end': 463.53999999999996, 'text': ' that we are going to discuss on Friday.', 'tokens': [50648, 300, 321, 366, 516, 281, 2248, 322, 6984, 13, 50768], 'temperature': 0.0, 'avg_logprob': -0.12661460994445173, 'compression_ratio': 1.7076923076923076, 'no_speech_prob': 0.007552451454102993}, {'id': 117, 'seek': 45546, 'start': 463.53999999999996, 'end': 468.02, 'text': ' So I will probably put a pause after we finish instruction level parallelism and then do', 'tokens': [50768, 407, 286, 486, 1391, 829, 257, 10465, 934, 321, 2413, 10951, 1496, 8952, 1434, 293, 550, 360, 50992], 'temperature': 0.0, 'avg_logprob': -0.12661460994445173, 'compression_ratio': 1.7076923076923076, 'no_speech_prob': 0.007552451454102993}, {'id': 118, 'seek': 45546, 'start': 468.02, 'end': 471.7, 'text': ' memory hierarchy, right, on Friday.', 'tokens': [50992, 4675, 22333, 11, 558, 11, 322, 6984, 13, 51176], 'temperature': 0.0, 'avg_logprob': -0.12661460994445173, 'compression_ratio': 1.7076923076923076, 'no_speech_prob': 0.007552451454102993}, {'id': 119, 'seek': 45546, 'start': 471.7, 'end': 477.46, 'text': ' Again we want to understand how the cache architecture, right, works, how locality in', 'tokens': [51176, 3764, 321, 528, 281, 1223, 577, 264, 19459, 9482, 11, 558, 11, 1985, 11, 577, 1628, 1860, 294, 51464], 'temperature': 0.0, 'avg_logprob': -0.12661460994445173, 'compression_ratio': 1.7076923076923076, 'no_speech_prob': 0.007552451454102993}, {'id': 120, 'seek': 45546, 'start': 477.46, 'end': 482.94, 'text': ' cache architecture helps you to improve performance because sometimes you need to generate efficient', 'tokens': [51464, 19459, 9482, 3665, 291, 281, 3470, 3389, 570, 2171, 291, 643, 281, 8460, 7148, 51738], 'temperature': 0.0, 'avg_logprob': -0.12661460994445173, 'compression_ratio': 1.7076923076923076, 'no_speech_prob': 0.007552451454102993}, {'id': 121, 'seek': 48294, 'start': 482.94, 'end': 487.7, 'text': ' code, not sometimes you need to generate efficient code from the compiler which understands', 'tokens': [50364, 3089, 11, 406, 2171, 291, 643, 281, 8460, 7148, 3089, 490, 264, 31958, 597, 15146, 50602], 'temperature': 0.0, 'avg_logprob': -0.12225116873687168, 'compression_ratio': 1.8494208494208495, 'no_speech_prob': 0.09102864563465118}, {'id': 122, 'seek': 48294, 'start': 487.7, 'end': 490.5, 'text': ' the cache architecture and generates appropriate code.', 'tokens': [50602, 264, 19459, 9482, 293, 23815, 6854, 3089, 13, 50742], 'temperature': 0.0, 'avg_logprob': -0.12225116873687168, 'compression_ratio': 1.8494208494208495, 'no_speech_prob': 0.09102864563465118}, {'id': 123, 'seek': 48294, 'start': 490.5, 'end': 492.94, 'text': ' So what are the optimizations that are possible?', 'tokens': [50742, 407, 437, 366, 264, 5028, 14455, 300, 366, 1944, 30, 50864], 'temperature': 0.0, 'avg_logprob': -0.12225116873687168, 'compression_ratio': 1.8494208494208495, 'no_speech_prob': 0.09102864563465118}, {'id': 124, 'seek': 48294, 'start': 492.94, 'end': 496.7, 'text': ' We will talk about that and in order for us to talk about that we need to understand the', 'tokens': [50864, 492, 486, 751, 466, 300, 293, 294, 1668, 337, 505, 281, 751, 466, 300, 321, 643, 281, 1223, 264, 51052], 'temperature': 0.0, 'avg_logprob': -0.12225116873687168, 'compression_ratio': 1.8494208494208495, 'no_speech_prob': 0.09102864563465118}, {'id': 125, 'seek': 48294, 'start': 496.7, 'end': 498.22, 'text': ' memory hierarchy well.', 'tokens': [51052, 4675, 22333, 731, 13, 51128], 'temperature': 0.0, 'avg_logprob': -0.12225116873687168, 'compression_ratio': 1.8494208494208495, 'no_speech_prob': 0.09102864563465118}, {'id': 126, 'seek': 48294, 'start': 498.22, 'end': 504.06, 'text': ' So there is a very quick primer on memory hierarchy that we will do later on Friday', 'tokens': [51128, 407, 456, 307, 257, 588, 1702, 12595, 322, 4675, 22333, 300, 321, 486, 360, 1780, 322, 6984, 51420], 'temperature': 0.0, 'avg_logprob': -0.12225116873687168, 'compression_ratio': 1.8494208494208495, 'no_speech_prob': 0.09102864563465118}, {'id': 127, 'seek': 48294, 'start': 504.06, 'end': 509.18, 'text': ' and we will also talk very briefly about data parallelism so that we can understand how', 'tokens': [51420, 293, 321, 486, 611, 751, 588, 10515, 466, 1412, 8952, 1434, 370, 300, 321, 393, 1223, 577, 51676], 'temperature': 0.0, 'avg_logprob': -0.12225116873687168, 'compression_ratio': 1.8494208494208495, 'no_speech_prob': 0.09102864563465118}, {'id': 128, 'seek': 50918, 'start': 509.18, 'end': 513.3, 'text': ' to generate code for exploiting data parallelism, right.', 'tokens': [50364, 281, 8460, 3089, 337, 12382, 1748, 1412, 8952, 1434, 11, 558, 13, 50570], 'temperature': 0.0, 'avg_logprob': -0.16985866635344748, 'compression_ratio': 1.724890829694323, 'no_speech_prob': 0.2812502980232239}, {'id': 129, 'seek': 50918, 'start': 513.3, 'end': 518.0600000000001, 'text': ' So this is the overall overview of this module on machine architecture.', 'tokens': [50570, 407, 341, 307, 264, 4787, 12492, 295, 341, 10088, 322, 3479, 9482, 13, 50808], 'temperature': 0.0, 'avg_logprob': -0.16985866635344748, 'compression_ratio': 1.724890829694323, 'no_speech_prob': 0.2812502980232239}, {'id': 130, 'seek': 50918, 'start': 518.0600000000001, 'end': 525.1800000000001, 'text': ' We are going to cover the first five topics today and then put a pause on this, go to', 'tokens': [50808, 492, 366, 516, 281, 2060, 264, 700, 1732, 8378, 965, 293, 550, 829, 257, 10465, 322, 341, 11, 352, 281, 51164], 'temperature': 0.0, 'avg_logprob': -0.16985866635344748, 'compression_ratio': 1.724890829694323, 'no_speech_prob': 0.2812502980232239}, {'id': 131, 'seek': 50918, 'start': 525.1800000000001, 'end': 531.22, 'text': ' code generation, register allocation and then instruction scheduling and then after that', 'tokens': [51164, 3089, 5125, 11, 7280, 27599, 293, 550, 10951, 29055, 293, 550, 934, 300, 51466], 'temperature': 0.0, 'avg_logprob': -0.16985866635344748, 'compression_ratio': 1.724890829694323, 'no_speech_prob': 0.2812502980232239}, {'id': 132, 'seek': 50918, 'start': 531.22, 'end': 536.1800000000001, 'text': ' we will talk about memory hierarchy and data parallelism and then come back to optimization', 'tokens': [51466, 321, 486, 751, 466, 4675, 22333, 293, 1412, 8952, 1434, 293, 550, 808, 646, 281, 19618, 51714], 'temperature': 0.0, 'avg_logprob': -0.16985866635344748, 'compression_ratio': 1.724890829694323, 'no_speech_prob': 0.2812502980232239}, {'id': 133, 'seek': 53618, 'start': 536.18, 'end': 539.42, 'text': ' that the compiler can do for exploiting those things.', 'tokens': [50364, 300, 264, 31958, 393, 360, 337, 12382, 1748, 729, 721, 13, 50526], 'temperature': 0.0, 'avg_logprob': -0.3190458085801866, 'compression_ratio': 1.7041666666666666, 'no_speech_prob': 0.7120216488838196}, {'id': 134, 'seek': 53618, 'start': 539.42, 'end': 542.02, 'text': ' Is that plan okay with everybody?', 'tokens': [50526, 1119, 300, 1393, 1392, 365, 2201, 30, 50656], 'temperature': 0.0, 'avg_logprob': -0.3190458085801866, 'compression_ratio': 1.7041666666666666, 'no_speech_prob': 0.7120216488838196}, {'id': 135, 'seek': 53618, 'start': 542.02, 'end': 544.18, 'text': ' All of you are fine with that?', 'tokens': [50656, 1057, 295, 291, 366, 2489, 365, 300, 30, 50764], 'temperature': 0.0, 'avg_logprob': -0.3190458085801866, 'compression_ratio': 1.7041666666666666, 'no_speech_prob': 0.7120216488838196}, {'id': 136, 'seek': 53618, 'start': 544.18, 'end': 550.54, 'text': ' Okay so the next 45 minutes or so we are going to go into the details of machine architecture.', 'tokens': [50764, 1033, 370, 264, 958, 6905, 2077, 420, 370, 321, 366, 516, 281, 352, 666, 264, 4365, 295, 3479, 9482, 13, 51082], 'temperature': 0.0, 'avg_logprob': -0.3190458085801866, 'compression_ratio': 1.7041666666666666, 'no_speech_prob': 0.7120216488838196}, {'id': 137, 'seek': 53618, 'start': 550.54, 'end': 553.5799999999999, 'text': ' Bear with me if you all understand this well.', 'tokens': [51082, 19836, 365, 385, 498, 291, 439, 1223, 341, 731, 13, 51234], 'temperature': 0.0, 'avg_logprob': -0.3190458085801866, 'compression_ratio': 1.7041666666666666, 'no_speech_prob': 0.7120216488838196}, {'id': 138, 'seek': 53618, 'start': 553.5799999999999, 'end': 555.14, 'text': ' I am sure that you all do that.', 'tokens': [51234, 286, 669, 988, 300, 291, 439, 360, 300, 13, 51312], 'temperature': 0.0, 'avg_logprob': -0.3190458085801866, 'compression_ratio': 1.7041666666666666, 'no_speech_prob': 0.7120216488838196}, {'id': 139, 'seek': 53618, 'start': 555.14, 'end': 561.2199999999999, 'text': ' You are all, you must have all completed six semesters of your courses, right.', 'tokens': [51312, 509, 366, 439, 11, 291, 1633, 362, 439, 7365, 2309, 4361, 38561, 295, 428, 7712, 11, 558, 13, 51616], 'temperature': 0.0, 'avg_logprob': -0.3190458085801866, 'compression_ratio': 1.7041666666666666, 'no_speech_prob': 0.7120216488838196}, {'id': 140, 'seek': 53618, 'start': 561.2199999999999, 'end': 562.9399999999999, 'text': ' Everybody has completed six semesters.', 'tokens': [51616, 7646, 575, 7365, 2309, 4361, 38561, 13, 51702], 'temperature': 0.0, 'avg_logprob': -0.3190458085801866, 'compression_ratio': 1.7041666666666666, 'no_speech_prob': 0.7120216488838196}, {'id': 141, 'seek': 56294, 'start': 562.94, 'end': 565.7, 'text': ' Everybody has completed the BTEC?', 'tokens': [50364, 7646, 575, 7365, 264, 31144, 8140, 30, 50502], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 142, 'seek': 56294, 'start': 565.7, 'end': 568.0200000000001, 'text': ' No, right.', 'tokens': [50502, 883, 11, 558, 13, 50618], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 143, 'seek': 56294, 'start': 568.0200000000001, 'end': 575.1, 'text': ' Everybody is in the third year, right.', 'tokens': [50618, 7646, 307, 294, 264, 2636, 1064, 11, 558, 13, 50972], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 144, 'seek': 56294, 'start': 575.1, 'end': 576.9000000000001, 'text': ' Some people from Nvidia also, okay.', 'tokens': [50972, 2188, 561, 490, 46284, 611, 11, 1392, 13, 51062], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 145, 'seek': 56294, 'start': 576.9000000000001, 'end': 577.9000000000001, 'text': ' All right.', 'tokens': [51062, 1057, 558, 13, 51112], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 146, 'seek': 56294, 'start': 577.9000000000001, 'end': 579.22, 'text': ' So how many of you are from Nvidia?', 'tokens': [51112, 407, 577, 867, 295, 291, 366, 490, 46284, 30, 51178], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 147, 'seek': 56294, 'start': 579.22, 'end': 582.22, 'text': ' Be careful when I talk about Nvidia process.', 'tokens': [51178, 879, 5026, 562, 286, 751, 466, 46284, 1399, 13, 51328], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 148, 'seek': 56294, 'start': 582.22, 'end': 583.22, 'text': ' Okay.', 'tokens': [51328, 1033, 13, 51378], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 149, 'seek': 56294, 'start': 583.22, 'end': 584.22, 'text': ' I am just kidding.', 'tokens': [51378, 286, 669, 445, 9287, 13, 51428], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 150, 'seek': 56294, 'start': 584.22, 'end': 585.22, 'text': ' I am just kidding.', 'tokens': [51428, 286, 669, 445, 9287, 13, 51478], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 151, 'seek': 56294, 'start': 585.22, 'end': 586.22, 'text': ' Okay.', 'tokens': [51478, 1033, 13, 51528], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 152, 'seek': 56294, 'start': 586.22, 'end': 587.22, 'text': ' So three of you are from Nvidia.', 'tokens': [51528, 407, 1045, 295, 291, 366, 490, 46284, 13, 51578], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 153, 'seek': 56294, 'start': 587.22, 'end': 590.22, 'text': ' How many of you have completed your BTEC?', 'tokens': [51578, 1012, 867, 295, 291, 362, 7365, 428, 31144, 8140, 30, 51728], 'temperature': 0.0, 'avg_logprob': -0.36622539135294224, 'compression_ratio': 1.7872340425531914, 'no_speech_prob': 0.3023723363876343}, {'id': 154, 'seek': 59022, 'start': 590.22, 'end': 591.22, 'text': ' Oh, do not worry.', 'tokens': [50364, 876, 11, 360, 406, 3292, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.34092725118001305, 'compression_ratio': 1.5657370517928286, 'no_speech_prob': 0.016991764307022095}, {'id': 155, 'seek': 59022, 'start': 591.22, 'end': 594.9, 'text': ' I mean, of course, you can go on to this module.', 'tokens': [50414, 286, 914, 11, 295, 1164, 11, 291, 393, 352, 322, 281, 341, 10088, 13, 50598], 'temperature': 0.0, 'avg_logprob': -0.34092725118001305, 'compression_ratio': 1.5657370517928286, 'no_speech_prob': 0.016991764307022095}, {'id': 156, 'seek': 59022, 'start': 594.9, 'end': 595.9, 'text': ' Okay.', 'tokens': [50598, 1033, 13, 50648], 'temperature': 0.0, 'avg_logprob': -0.34092725118001305, 'compression_ratio': 1.5657370517928286, 'no_speech_prob': 0.016991764307022095}, {'id': 157, 'seek': 59022, 'start': 595.9, 'end': 596.9, 'text': ' So let us see.', 'tokens': [50648, 407, 718, 505, 536, 13, 50698], 'temperature': 0.0, 'avg_logprob': -0.34092725118001305, 'compression_ratio': 1.5657370517928286, 'no_speech_prob': 0.016991764307022095}, {'id': 158, 'seek': 59022, 'start': 596.9, 'end': 597.9, 'text': ' Okay.', 'tokens': [50698, 1033, 13, 50748], 'temperature': 0.0, 'avg_logprob': -0.34092725118001305, 'compression_ratio': 1.5657370517928286, 'no_speech_prob': 0.016991764307022095}, {'id': 159, 'seek': 59022, 'start': 597.9, 'end': 599.9, 'text': ' How many of you understand this diagram?', 'tokens': [50748, 1012, 867, 295, 291, 1223, 341, 10686, 30, 50848], 'temperature': 0.0, 'avg_logprob': -0.34092725118001305, 'compression_ratio': 1.5657370517928286, 'no_speech_prob': 0.016991764307022095}, {'id': 160, 'seek': 59022, 'start': 599.9, 'end': 602.5, 'text': ' I am sure that all of you should, right.', 'tokens': [50848, 286, 669, 988, 300, 439, 295, 291, 820, 11, 558, 13, 50978], 'temperature': 0.0, 'avg_logprob': -0.34092725118001305, 'compression_ratio': 1.5657370517928286, 'no_speech_prob': 0.016991764307022095}, {'id': 161, 'seek': 59022, 'start': 602.5, 'end': 604.78, 'text': ' You have no doubt on that, right.', 'tokens': [50978, 509, 362, 572, 6385, 322, 300, 11, 558, 13, 51092], 'temperature': 0.0, 'avg_logprob': -0.34092725118001305, 'compression_ratio': 1.5657370517928286, 'no_speech_prob': 0.016991764307022095}, {'id': 162, 'seek': 59022, 'start': 604.78, 'end': 610.6600000000001, 'text': ' But again, we will just quickly go through the various aspects of basic computer system.', 'tokens': [51092, 583, 797, 11, 321, 486, 445, 2661, 352, 807, 264, 3683, 7270, 295, 3875, 3820, 1185, 13, 51386], 'temperature': 0.0, 'avg_logprob': -0.34092725118001305, 'compression_ratio': 1.5657370517928286, 'no_speech_prob': 0.016991764307022095}, {'id': 163, 'seek': 59022, 'start': 610.6600000000001, 'end': 618.34, 'text': ' What you see on the left-hand side here is what we call as the central processing unit,', 'tokens': [51386, 708, 291, 536, 322, 264, 1411, 12, 5543, 1252, 510, 307, 437, 321, 818, 382, 264, 5777, 9007, 4985, 11, 51770], 'temperature': 0.0, 'avg_logprob': -0.34092725118001305, 'compression_ratio': 1.5657370517928286, 'no_speech_prob': 0.016991764307022095}, {'id': 164, 'seek': 59022, 'start': 618.34, 'end': 619.62, 'text': ' right.', 'tokens': [51770, 558, 13, 51834], 'temperature': 0.0, 'avg_logprob': -0.34092725118001305, 'compression_ratio': 1.5657370517928286, 'no_speech_prob': 0.016991764307022095}, {'id': 165, 'seek': 61962, 'start': 619.62, 'end': 625.54, 'text': ' And the central processing unit has an arithmetic and logic unit which is responsible for doing', 'tokens': [50364, 400, 264, 5777, 9007, 4985, 575, 364, 42973, 293, 9952, 4985, 597, 307, 6250, 337, 884, 50660], 'temperature': 0.0, 'avg_logprob': -0.16606820596230998, 'compression_ratio': 1.8808290155440415, 'no_speech_prob': 0.010512900538742542}, {'id': 166, 'seek': 61962, 'start': 625.54, 'end': 629.34, 'text': ' all the computation, right, arithmetic and logic operations.', 'tokens': [50660, 439, 264, 24903, 11, 558, 11, 42973, 293, 9952, 7705, 13, 50850], 'temperature': 0.0, 'avg_logprob': -0.16606820596230998, 'compression_ratio': 1.8808290155440415, 'no_speech_prob': 0.010512900538742542}, {'id': 167, 'seek': 61962, 'start': 629.34, 'end': 636.22, 'text': ' The control unit is responsible for controlling all the parts of the central processing unit.', 'tokens': [50850, 440, 1969, 4985, 307, 6250, 337, 14905, 439, 264, 3166, 295, 264, 5777, 9007, 4985, 13, 51194], 'temperature': 0.0, 'avg_logprob': -0.16606820596230998, 'compression_ratio': 1.8808290155440415, 'no_speech_prob': 0.010512900538742542}, {'id': 168, 'seek': 61962, 'start': 636.22, 'end': 638.5, 'text': ' You also have something called registers.', 'tokens': [51194, 509, 611, 362, 746, 1219, 38351, 13, 51308], 'temperature': 0.0, 'avg_logprob': -0.16606820596230998, 'compression_ratio': 1.8808290155440415, 'no_speech_prob': 0.010512900538742542}, {'id': 169, 'seek': 61962, 'start': 638.5, 'end': 644.22, 'text': ' Registers are temporary storage locations within the processor, right.', 'tokens': [51308, 4791, 7423, 366, 13413, 6725, 9253, 1951, 264, 15321, 11, 558, 13, 51594], 'temperature': 0.0, 'avg_logprob': -0.16606820596230998, 'compression_ratio': 1.8808290155440415, 'no_speech_prob': 0.010512900538742542}, {'id': 170, 'seek': 64422, 'start': 645.22, 'end': 649.6600000000001, 'text': ' And of course, you have memory and the processor accesses the memory through this bus.', 'tokens': [50414, 400, 295, 1164, 11, 291, 362, 4675, 293, 264, 15321, 2105, 279, 264, 4675, 807, 341, 1255, 13, 50636], 'temperature': 0.0, 'avg_logprob': -0.29980289574825403, 'compression_ratio': 1.5486725663716814, 'no_speech_prob': 0.3486265540122986}, {'id': 171, 'seek': 64422, 'start': 649.6600000000001, 'end': 654.86, 'text': ' There are also input-output devices which we do not really worry about in this lecture', 'tokens': [50636, 821, 366, 611, 4846, 12, 346, 2582, 5759, 597, 321, 360, 406, 534, 3292, 466, 294, 341, 7991, 50896], 'temperature': 0.0, 'avg_logprob': -0.29980289574825403, 'compression_ratio': 1.5486725663716814, 'no_speech_prob': 0.3486265540122986}, {'id': 172, 'seek': 64422, 'start': 654.86, 'end': 655.86, 'text': ' on compilers.', 'tokens': [50896, 322, 715, 388, 433, 13, 50946], 'temperature': 0.0, 'avg_logprob': -0.29980289574825403, 'compression_ratio': 1.5486725663716814, 'no_speech_prob': 0.3486265540122986}, {'id': 173, 'seek': 64422, 'start': 655.86, 'end': 661.1800000000001, 'text': ' What else is there on the CPU which I have not listed here?', 'tokens': [50946, 708, 1646, 307, 456, 322, 264, 13199, 597, 286, 362, 406, 10052, 510, 30, 51212], 'temperature': 0.0, 'avg_logprob': -0.29980289574825403, 'compression_ratio': 1.5486725663716814, 'no_speech_prob': 0.3486265540122986}, {'id': 174, 'seek': 64422, 'start': 661.1800000000001, 'end': 662.1800000000001, 'text': ' Yeah.', 'tokens': [51212, 865, 13, 51262], 'temperature': 0.0, 'avg_logprob': -0.29980289574825403, 'compression_ratio': 1.5486725663716814, 'no_speech_prob': 0.3486265540122986}, {'id': 175, 'seek': 64422, 'start': 662.1800000000001, 'end': 667.1800000000001, 'text': ' Feel free to talk loudly, right.', 'tokens': [51262, 14113, 1737, 281, 751, 22958, 11, 558, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.29980289574825403, 'compression_ratio': 1.5486725663716814, 'no_speech_prob': 0.3486265540122986}, {'id': 176, 'seek': 64422, 'start': 667.1800000000001, 'end': 669.78, 'text': ' There is nothing right, nothing wrong about.', 'tokens': [51512, 821, 307, 1825, 558, 11, 1825, 2085, 466, 13, 51642], 'temperature': 0.0, 'avg_logprob': -0.29980289574825403, 'compression_ratio': 1.5486725663716814, 'no_speech_prob': 0.3486265540122986}, {'id': 177, 'seek': 64422, 'start': 669.78, 'end': 670.78, 'text': ' Sorry?', 'tokens': [51642, 4919, 30, 51692], 'temperature': 0.0, 'avg_logprob': -0.29980289574825403, 'compression_ratio': 1.5486725663716814, 'no_speech_prob': 0.3486265540122986}, {'id': 178, 'seek': 64422, 'start': 670.78, 'end': 671.78, 'text': ' Power unit.', 'tokens': [51692, 7086, 4985, 13, 51742], 'temperature': 0.0, 'avg_logprob': -0.29980289574825403, 'compression_ratio': 1.5486725663716814, 'no_speech_prob': 0.3486265540122986}, {'id': 179, 'seek': 67178, 'start': 672.74, 'end': 673.74, 'text': ' Power unit, okay.', 'tokens': [50412, 7086, 4985, 11, 1392, 13, 50462], 'temperature': 0.0, 'avg_logprob': -0.341403106163288, 'compression_ratio': 1.923444976076555, 'no_speech_prob': 0.007153702899813652}, {'id': 180, 'seek': 67178, 'start': 673.74, 'end': 674.74, 'text': ' Power is somewhere outside.', 'tokens': [50462, 7086, 307, 4079, 2380, 13, 50512], 'temperature': 0.0, 'avg_logprob': -0.341403106163288, 'compression_ratio': 1.923444976076555, 'no_speech_prob': 0.007153702899813652}, {'id': 181, 'seek': 67178, 'start': 674.74, 'end': 679.1, 'text': ' It is not as a part of the CPU, right.', 'tokens': [50512, 467, 307, 406, 382, 257, 644, 295, 264, 13199, 11, 558, 13, 50730], 'temperature': 0.0, 'avg_logprob': -0.341403106163288, 'compression_ratio': 1.923444976076555, 'no_speech_prob': 0.007153702899813652}, {'id': 182, 'seek': 67178, 'start': 679.1, 'end': 680.1, 'text': ' Power comes into the CPU.', 'tokens': [50730, 7086, 1487, 666, 264, 13199, 13, 50780], 'temperature': 0.0, 'avg_logprob': -0.341403106163288, 'compression_ratio': 1.923444976076555, 'no_speech_prob': 0.007153702899813652}, {'id': 183, 'seek': 67178, 'start': 680.1, 'end': 681.1, 'text': ' What is the CPU?', 'tokens': [50780, 708, 307, 264, 13199, 30, 50830], 'temperature': 0.0, 'avg_logprob': -0.341403106163288, 'compression_ratio': 1.923444976076555, 'no_speech_prob': 0.007153702899813652}, {'id': 184, 'seek': 67178, 'start': 681.1, 'end': 684.1, 'text': ' You are talking about the whole CPU.', 'tokens': [50830, 509, 366, 1417, 466, 264, 1379, 13199, 13, 50980], 'temperature': 0.0, 'avg_logprob': -0.341403106163288, 'compression_ratio': 1.923444976076555, 'no_speech_prob': 0.007153702899813652}, {'id': 185, 'seek': 67178, 'start': 684.1, 'end': 688.38, 'text': ' Oh, no, within the CPU, within the CPU, central processing unit.', 'tokens': [50980, 876, 11, 572, 11, 1951, 264, 13199, 11, 1951, 264, 13199, 11, 5777, 9007, 4985, 13, 51194], 'temperature': 0.0, 'avg_logprob': -0.341403106163288, 'compression_ratio': 1.923444976076555, 'no_speech_prob': 0.007153702899813652}, {'id': 186, 'seek': 67178, 'start': 688.38, 'end': 691.4599999999999, 'text': ' So the central processing unit is the processor, right.', 'tokens': [51194, 407, 264, 5777, 9007, 4985, 307, 264, 15321, 11, 558, 13, 51348], 'temperature': 0.0, 'avg_logprob': -0.341403106163288, 'compression_ratio': 1.923444976076555, 'no_speech_prob': 0.007153702899813652}, {'id': 187, 'seek': 67178, 'start': 691.4599999999999, 'end': 694.98, 'text': ' So this is the x86 processor or whatever processor that you have.', 'tokens': [51348, 407, 341, 307, 264, 2031, 22193, 15321, 420, 2035, 15321, 300, 291, 362, 13, 51524], 'temperature': 0.0, 'avg_logprob': -0.341403106163288, 'compression_ratio': 1.923444976076555, 'no_speech_prob': 0.007153702899813652}, {'id': 188, 'seek': 67178, 'start': 694.98, 'end': 700.98, 'text': ' That is the one that you are talking about, right.', 'tokens': [51524, 663, 307, 264, 472, 300, 291, 366, 1417, 466, 11, 558, 13, 51824], 'temperature': 0.0, 'avg_logprob': -0.341403106163288, 'compression_ratio': 1.923444976076555, 'no_speech_prob': 0.007153702899813652}, {'id': 189, 'seek': 70098, 'start': 701.98, 'end': 702.98, 'text': ' What about caches?', 'tokens': [50414, 708, 466, 269, 13272, 30, 50464], 'temperature': 0.0, 'avg_logprob': -0.22247478809762508, 'compression_ratio': 1.6243654822335025, 'no_speech_prob': 0.004071818199008703}, {'id': 190, 'seek': 70098, 'start': 702.98, 'end': 705.98, 'text': ' Where are they?', 'tokens': [50464, 2305, 366, 436, 30, 50614], 'temperature': 0.0, 'avg_logprob': -0.22247478809762508, 'compression_ratio': 1.6243654822335025, 'no_speech_prob': 0.004071818199008703}, {'id': 191, 'seek': 70098, 'start': 705.98, 'end': 706.98, 'text': ' Right.', 'tokens': [50614, 1779, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.22247478809762508, 'compression_ratio': 1.6243654822335025, 'no_speech_prob': 0.004071818199008703}, {'id': 192, 'seek': 70098, 'start': 706.98, 'end': 710.98, 'text': ' They also have to be inside that, okay.', 'tokens': [50664, 814, 611, 362, 281, 312, 1854, 300, 11, 1392, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.22247478809762508, 'compression_ratio': 1.6243654822335025, 'no_speech_prob': 0.004071818199008703}, {'id': 193, 'seek': 70098, 'start': 710.98, 'end': 713.98, 'text': ' Yeah, sorry, one too many, okay.', 'tokens': [50864, 865, 11, 2597, 11, 472, 886, 867, 11, 1392, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.22247478809762508, 'compression_ratio': 1.6243654822335025, 'no_speech_prob': 0.004071818199008703}, {'id': 194, 'seek': 70098, 'start': 713.98, 'end': 715.98, 'text': ' So you see the caches there.', 'tokens': [51014, 407, 291, 536, 264, 269, 13272, 456, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.22247478809762508, 'compression_ratio': 1.6243654822335025, 'no_speech_prob': 0.004071818199008703}, {'id': 195, 'seek': 70098, 'start': 715.98, 'end': 719.98, 'text': ' And what is this MMU which is the memory management unit?', 'tokens': [51114, 400, 437, 307, 341, 34191, 52, 597, 307, 264, 4675, 4592, 4985, 30, 51314], 'temperature': 0.0, 'avg_logprob': -0.22247478809762508, 'compression_ratio': 1.6243654822335025, 'no_speech_prob': 0.004071818199008703}, {'id': 196, 'seek': 70098, 'start': 719.98, 'end': 722.98, 'text': ' What is the memory management unit used for?', 'tokens': [51314, 708, 307, 264, 4675, 4592, 4985, 1143, 337, 30, 51464], 'temperature': 0.0, 'avg_logprob': -0.22247478809762508, 'compression_ratio': 1.6243654822335025, 'no_speech_prob': 0.004071818199008703}, {'id': 197, 'seek': 70098, 'start': 722.98, 'end': 727.98, 'text': ' Logical address to physical address, address translation purposes, right.', 'tokens': [51464, 10824, 804, 2985, 281, 4001, 2985, 11, 2985, 12853, 9932, 11, 558, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.22247478809762508, 'compression_ratio': 1.6243654822335025, 'no_speech_prob': 0.004071818199008703}, {'id': 198, 'seek': 72798, 'start': 727.98, 'end': 731.98, 'text': ' Again from a compiler perspective, this may not be very relevant, okay.', 'tokens': [50364, 3764, 490, 257, 31958, 4585, 11, 341, 815, 406, 312, 588, 7340, 11, 1392, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.09203673972458136, 'compression_ratio': 1.7470355731225296, 'no_speech_prob': 0.023064186796545982}, {'id': 199, 'seek': 72798, 'start': 731.98, 'end': 738.98, 'text': ' But these three components are very relevant, the arithmetic and logic unit, the registers', 'tokens': [50564, 583, 613, 1045, 6677, 366, 588, 7340, 11, 264, 42973, 293, 9952, 4985, 11, 264, 38351, 50914], 'temperature': 0.0, 'avg_logprob': -0.09203673972458136, 'compression_ratio': 1.7470355731225296, 'no_speech_prob': 0.023064186796545982}, {'id': 200, 'seek': 72798, 'start': 738.98, 'end': 740.98, 'text': ' and the cache, okay.', 'tokens': [50914, 293, 264, 19459, 11, 1392, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.09203673972458136, 'compression_ratio': 1.7470355731225296, 'no_speech_prob': 0.023064186796545982}, {'id': 201, 'seek': 72798, 'start': 740.98, 'end': 745.98, 'text': ' Again, cache, we are going to see it as a part of the memory hierarchy because you typically', 'tokens': [51014, 3764, 11, 19459, 11, 321, 366, 516, 281, 536, 309, 382, 257, 644, 295, 264, 4675, 22333, 570, 291, 5850, 51264], 'temperature': 0.0, 'avg_logprob': -0.09203673972458136, 'compression_ratio': 1.7470355731225296, 'no_speech_prob': 0.023064186796545982}, {'id': 202, 'seek': 72798, 'start': 745.98, 'end': 750.98, 'text': ' have an L1, L2 or L1, L2, L3 caches before you could go to the memory.', 'tokens': [51264, 362, 364, 441, 16, 11, 441, 17, 420, 441, 16, 11, 441, 17, 11, 441, 18, 269, 13272, 949, 291, 727, 352, 281, 264, 4675, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.09203673972458136, 'compression_ratio': 1.7470355731225296, 'no_speech_prob': 0.023064186796545982}, {'id': 203, 'seek': 72798, 'start': 750.98, 'end': 756.98, 'text': ' So the code that you generate should essentially make use of these L1, L2, L3 caches in a very', 'tokens': [51514, 407, 264, 3089, 300, 291, 8460, 820, 4476, 652, 764, 295, 613, 441, 16, 11, 441, 17, 11, 441, 18, 269, 13272, 294, 257, 588, 51814], 'temperature': 0.0, 'avg_logprob': -0.09203673972458136, 'compression_ratio': 1.7470355731225296, 'no_speech_prob': 0.023064186796545982}, {'id': 204, 'seek': 75698, 'start': 756.98, 'end': 759.98, 'text': ' effective way, right.', 'tokens': [50364, 4942, 636, 11, 558, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.12348924200218844, 'compression_ratio': 1.577319587628866, 'no_speech_prob': 0.004412357229739428}, {'id': 205, 'seek': 75698, 'start': 759.98, 'end': 761.98, 'text': ' And of course you see these registers.', 'tokens': [50514, 400, 295, 1164, 291, 536, 613, 38351, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.12348924200218844, 'compression_ratio': 1.577319587628866, 'no_speech_prob': 0.004412357229739428}, {'id': 206, 'seek': 75698, 'start': 761.98, 'end': 765.98, 'text': ' Where are we going to talk about that in the compiler course?', 'tokens': [50614, 2305, 366, 321, 516, 281, 751, 466, 300, 294, 264, 31958, 1164, 30, 50814], 'temperature': 0.0, 'avg_logprob': -0.12348924200218844, 'compression_ratio': 1.577319587628866, 'no_speech_prob': 0.004412357229739428}, {'id': 207, 'seek': 75698, 'start': 765.98, 'end': 768.98, 'text': ' Register allocation, right.', 'tokens': [50814, 43167, 27599, 11, 558, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.12348924200218844, 'compression_ratio': 1.577319587628866, 'no_speech_prob': 0.004412357229739428}, {'id': 208, 'seek': 75698, 'start': 768.98, 'end': 772.98, 'text': ' Okay, so many of you have done the computer organization course.', 'tokens': [50964, 1033, 11, 370, 867, 295, 291, 362, 1096, 264, 3820, 4475, 1164, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.12348924200218844, 'compression_ratio': 1.577319587628866, 'no_speech_prob': 0.004412357229739428}, {'id': 209, 'seek': 75698, 'start': 772.98, 'end': 778.98, 'text': ' So you at least have a rough idea of how the caches work, correct.', 'tokens': [51164, 407, 291, 412, 1935, 362, 257, 5903, 1558, 295, 577, 264, 269, 13272, 589, 11, 3006, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.12348924200218844, 'compression_ratio': 1.577319587628866, 'no_speech_prob': 0.004412357229739428}, {'id': 210, 'seek': 75698, 'start': 778.98, 'end': 781.98, 'text': ' Who manages the caches?', 'tokens': [51464, 2102, 22489, 264, 269, 13272, 30, 51614], 'temperature': 0.0, 'avg_logprob': -0.12348924200218844, 'compression_ratio': 1.577319587628866, 'no_speech_prob': 0.004412357229739428}, {'id': 211, 'seek': 78198, 'start': 781.98, 'end': 788.98, 'text': ' You as the programmer or compiler, operating system.', 'tokens': [50364, 509, 382, 264, 32116, 420, 31958, 11, 7447, 1185, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.10488272301944686, 'compression_ratio': 1.6885245901639345, 'no_speech_prob': 0.0315278135240078}, {'id': 212, 'seek': 78198, 'start': 788.98, 'end': 793.98, 'text': ' Somebody said hardware, yeah, right.', 'tokens': [50714, 13463, 848, 8837, 11, 1338, 11, 558, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.10488272301944686, 'compression_ratio': 1.6885245901639345, 'no_speech_prob': 0.0315278135240078}, {'id': 213, 'seek': 78198, 'start': 793.98, 'end': 796.98, 'text': ' How many of you think it is operating system?', 'tokens': [50964, 1012, 867, 295, 291, 519, 309, 307, 7447, 1185, 30, 51114], 'temperature': 0.0, 'avg_logprob': -0.10488272301944686, 'compression_ratio': 1.6885245901639345, 'no_speech_prob': 0.0315278135240078}, {'id': 214, 'seek': 78198, 'start': 796.98, 'end': 799.98, 'text': ' Okay, no, right.', 'tokens': [51114, 1033, 11, 572, 11, 558, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.10488272301944686, 'compression_ratio': 1.6885245901639345, 'no_speech_prob': 0.0315278135240078}, {'id': 215, 'seek': 78198, 'start': 799.98, 'end': 804.98, 'text': ' The caches are not managed by the operating system in the sense that operating system', 'tokens': [51264, 440, 269, 13272, 366, 406, 6453, 538, 264, 7447, 1185, 294, 264, 2020, 300, 7447, 1185, 51514], 'temperature': 0.0, 'avg_logprob': -0.10488272301944686, 'compression_ratio': 1.6885245901639345, 'no_speech_prob': 0.0315278135240078}, {'id': 216, 'seek': 78198, 'start': 804.98, 'end': 809.98, 'text': ' is not the one which intervenes and puts the data in the cache, right.', 'tokens': [51514, 307, 406, 264, 472, 597, 17104, 279, 293, 8137, 264, 1412, 294, 264, 19459, 11, 558, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.10488272301944686, 'compression_ratio': 1.6885245901639345, 'no_speech_prob': 0.0315278135240078}, {'id': 217, 'seek': 80998, 'start': 809.98, 'end': 815.98, 'text': ' It is the hardware that given an address, it automatically fetches the data and puts', 'tokens': [50364, 467, 307, 264, 8837, 300, 2212, 364, 2985, 11, 309, 6772, 15136, 3781, 264, 1412, 293, 8137, 50664], 'temperature': 0.0, 'avg_logprob': -0.10122016352466029, 'compression_ratio': 1.6872727272727273, 'no_speech_prob': 0.03590528294444084}, {'id': 218, 'seek': 80998, 'start': 815.98, 'end': 818.98, 'text': ' it into the cache, okay.', 'tokens': [50664, 309, 666, 264, 19459, 11, 1392, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.10122016352466029, 'compression_ratio': 1.6872727272727273, 'no_speech_prob': 0.03590528294444084}, {'id': 219, 'seek': 80998, 'start': 818.98, 'end': 822.98, 'text': ' Again we will talk a little bit more about this when we talk about the memory hierarchy,', 'tokens': [50814, 3764, 321, 486, 751, 257, 707, 857, 544, 466, 341, 562, 321, 751, 466, 264, 4675, 22333, 11, 51014], 'temperature': 0.0, 'avg_logprob': -0.10122016352466029, 'compression_ratio': 1.6872727272727273, 'no_speech_prob': 0.03590528294444084}, {'id': 220, 'seek': 80998, 'start': 822.98, 'end': 823.98, 'text': ' right.', 'tokens': [51014, 558, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.10122016352466029, 'compression_ratio': 1.6872727272727273, 'no_speech_prob': 0.03590528294444084}, {'id': 221, 'seek': 80998, 'start': 823.98, 'end': 828.98, 'text': ' The reason I ask this question and I am trying to go over this is essentially to make sure', 'tokens': [51064, 440, 1778, 286, 1029, 341, 1168, 293, 286, 669, 1382, 281, 352, 670, 341, 307, 4476, 281, 652, 988, 51314], 'temperature': 0.0, 'avg_logprob': -0.10122016352466029, 'compression_ratio': 1.6872727272727273, 'no_speech_prob': 0.03590528294444084}, {'id': 222, 'seek': 80998, 'start': 828.98, 'end': 831.98, 'text': ' that there is no misunderstanding of some of these things.', 'tokens': [51314, 300, 456, 307, 572, 29227, 295, 512, 295, 613, 721, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.10122016352466029, 'compression_ratio': 1.6872727272727273, 'no_speech_prob': 0.03590528294444084}, {'id': 223, 'seek': 80998, 'start': 831.98, 'end': 832.98, 'text': ' So do not feel bad, okay.', 'tokens': [51464, 407, 360, 406, 841, 1578, 11, 1392, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.10122016352466029, 'compression_ratio': 1.6872727272727273, 'no_speech_prob': 0.03590528294444084}, {'id': 224, 'seek': 80998, 'start': 832.98, 'end': 837.98, 'text': ' Those wrong answers in fact clear out the doubts of some of the other people also.', 'tokens': [51514, 3950, 2085, 6338, 294, 1186, 1850, 484, 264, 22618, 295, 512, 295, 264, 661, 561, 611, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.10122016352466029, 'compression_ratio': 1.6872727272727273, 'no_speech_prob': 0.03590528294444084}, {'id': 225, 'seek': 83798, 'start': 837.98, 'end': 839.98, 'text': ' So nothing wrong about it, okay.', 'tokens': [50364, 407, 1825, 2085, 466, 309, 11, 1392, 13, 50464], 'temperature': 0.0, 'avg_logprob': -0.34098063982450044, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.06854259967803955}, {'id': 226, 'seek': 83798, 'start': 839.98, 'end': 842.98, 'text': ' It is better that we clear our understanding, okay.', 'tokens': [50464, 467, 307, 1101, 300, 321, 1850, 527, 3701, 11, 1392, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.34098063982450044, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.06854259967803955}, {'id': 227, 'seek': 83798, 'start': 842.98, 'end': 850.98, 'text': ' So this cache, essentially the data movement from memory to cache is controlled by the', 'tokens': [50614, 407, 341, 19459, 11, 4476, 264, 1412, 3963, 490, 4675, 281, 19459, 307, 10164, 538, 264, 51014], 'temperature': 0.0, 'avg_logprob': -0.34098063982450044, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.06854259967803955}, {'id': 228, 'seek': 83798, 'start': 850.98, 'end': 851.98, 'text': ' hardware.', 'tokens': [51014, 8837, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.34098063982450044, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.06854259967803955}, {'id': 229, 'seek': 83798, 'start': 851.98, 'end': 852.98, 'text': ' Yes sir.', 'tokens': [51064, 1079, 4735, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.34098063982450044, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.06854259967803955}, {'id': 230, 'seek': 83798, 'start': 852.98, 'end': 857.98, 'text': ' Sir, how does some part of the area of cache and therefore the memory can be created for', 'tokens': [51114, 6144, 11, 577, 775, 512, 644, 295, 264, 1859, 295, 19459, 293, 4412, 264, 4675, 393, 312, 2942, 337, 51364], 'temperature': 0.0, 'avg_logprob': -0.34098063982450044, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.06854259967803955}, {'id': 231, 'seek': 83798, 'start': 857.98, 'end': 859.98, 'text': ' the cache?', 'tokens': [51364, 264, 19459, 30, 51464], 'temperature': 0.0, 'avg_logprob': -0.34098063982450044, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.06854259967803955}, {'id': 232, 'seek': 83798, 'start': 859.98, 'end': 861.98, 'text': ' Sure, sure.', 'tokens': [51464, 4894, 11, 988, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.34098063982450044, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.06854259967803955}, {'id': 233, 'seek': 83798, 'start': 861.98, 'end': 865.98, 'text': ' Sometimes when certain things are being flashed, it instructs the hardware to clear some parts', 'tokens': [51564, 4803, 562, 1629, 721, 366, 885, 7319, 292, 11, 309, 7232, 82, 264, 8837, 281, 1850, 512, 3166, 51764], 'temperature': 0.0, 'avg_logprob': -0.34098063982450044, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.06854259967803955}, {'id': 234, 'seek': 86598, 'start': 865.98, 'end': 866.98, 'text': ' of the cache.', 'tokens': [50364, 295, 264, 19459, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.09363422610542992, 'compression_ratio': 1.7580645161290323, 'no_speech_prob': 0.09222135692834854}, {'id': 235, 'seek': 86598, 'start': 866.98, 'end': 873.98, 'text': ' All I am talking about is that who manages the data transfer between the memory to the', 'tokens': [50414, 1057, 286, 669, 1417, 466, 307, 300, 567, 22489, 264, 1412, 5003, 1296, 264, 4675, 281, 264, 50764], 'temperature': 0.0, 'avg_logprob': -0.09363422610542992, 'compression_ratio': 1.7580645161290323, 'no_speech_prob': 0.09222135692834854}, {'id': 236, 'seek': 86598, 'start': 873.98, 'end': 876.98, 'text': ' cache, right, when a program is executing.', 'tokens': [50764, 19459, 11, 558, 11, 562, 257, 1461, 307, 32368, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.09363422610542992, 'compression_ratio': 1.7580645161290323, 'no_speech_prob': 0.09222135692834854}, {'id': 237, 'seek': 86598, 'start': 876.98, 'end': 880.98, 'text': ' It is primarily the hardware, okay.', 'tokens': [50914, 467, 307, 10029, 264, 8837, 11, 1392, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.09363422610542992, 'compression_ratio': 1.7580645161290323, 'no_speech_prob': 0.09222135692834854}, {'id': 238, 'seek': 86598, 'start': 880.98, 'end': 886.98, 'text': ' What about the data transfer from memory or cache to the registers?', 'tokens': [51114, 708, 466, 264, 1412, 5003, 490, 4675, 420, 19459, 281, 264, 38351, 30, 51414], 'temperature': 0.0, 'avg_logprob': -0.09363422610542992, 'compression_ratio': 1.7580645161290323, 'no_speech_prob': 0.09222135692834854}, {'id': 239, 'seek': 86598, 'start': 886.98, 'end': 888.98, 'text': ' Who manages it?', 'tokens': [51414, 2102, 22489, 309, 30, 51514], 'temperature': 0.0, 'avg_logprob': -0.09363422610542992, 'compression_ratio': 1.7580645161290323, 'no_speech_prob': 0.09222135692834854}, {'id': 240, 'seek': 86598, 'start': 888.98, 'end': 891.98, 'text': ' Is it explicit in your program?', 'tokens': [51514, 1119, 309, 13691, 294, 428, 1461, 30, 51664], 'temperature': 0.0, 'avg_logprob': -0.09363422610542992, 'compression_ratio': 1.7580645161290323, 'no_speech_prob': 0.09222135692834854}, {'id': 241, 'seek': 86598, 'start': 891.98, 'end': 893.98, 'text': ' Is it implicit in your program?', 'tokens': [51664, 1119, 309, 26947, 294, 428, 1461, 30, 51764], 'temperature': 0.0, 'avg_logprob': -0.09363422610542992, 'compression_ratio': 1.7580645161290323, 'no_speech_prob': 0.09222135692834854}, {'id': 242, 'seek': 89398, 'start': 893.98, 'end': 899.98, 'text': ' See for example, transfer from memory to cache is implicit in your program.', 'tokens': [50364, 3008, 337, 1365, 11, 5003, 490, 4675, 281, 19459, 307, 26947, 294, 428, 1461, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.09059447542243047, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.010700332000851631}, {'id': 243, 'seek': 89398, 'start': 899.98, 'end': 904.98, 'text': ' You as a programmer do not necessarily say this stays in the cache or this does not stay', 'tokens': [50664, 509, 382, 257, 32116, 360, 406, 4725, 584, 341, 10834, 294, 264, 19459, 420, 341, 775, 406, 1754, 50914], 'temperature': 0.0, 'avg_logprob': -0.09059447542243047, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.010700332000851631}, {'id': 244, 'seek': 89398, 'start': 904.98, 'end': 907.98, 'text': ' in the cache to a large extent, correct.', 'tokens': [50914, 294, 264, 19459, 281, 257, 2416, 8396, 11, 3006, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.09059447542243047, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.010700332000851631}, {'id': 245, 'seek': 89398, 'start': 907.98, 'end': 911.98, 'text': ' You do not necessarily say move this data from the memory to the cache.', 'tokens': [51064, 509, 360, 406, 4725, 584, 1286, 341, 1412, 490, 264, 4675, 281, 264, 19459, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.09059447542243047, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.010700332000851631}, {'id': 246, 'seek': 89398, 'start': 911.98, 'end': 913.98, 'text': ' You do not do that, right.', 'tokens': [51264, 509, 360, 406, 360, 300, 11, 558, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.09059447542243047, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.010700332000851631}, {'id': 247, 'seek': 89398, 'start': 913.98, 'end': 916.98, 'text': ' Whereas what happens with regard to the registers?', 'tokens': [51364, 13813, 437, 2314, 365, 3843, 281, 264, 38351, 30, 51514], 'temperature': 0.0, 'avg_logprob': -0.09059447542243047, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.010700332000851631}, {'id': 248, 'seek': 89398, 'start': 916.98, 'end': 918.98, 'text': ' It has to be explicit.', 'tokens': [51514, 467, 575, 281, 312, 13691, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.09059447542243047, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.010700332000851631}, {'id': 249, 'seek': 89398, 'start': 918.98, 'end': 920.98, 'text': ' It has to be a part of your program.', 'tokens': [51614, 467, 575, 281, 312, 257, 644, 295, 428, 1461, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.09059447542243047, 'compression_ratio': 1.9036697247706422, 'no_speech_prob': 0.010700332000851631}, {'id': 250, 'seek': 92098, 'start': 920.98, 'end': 926.98, 'text': ' Well, it is not a part of your high level program, but it is a part of your lower level', 'tokens': [50364, 1042, 11, 309, 307, 406, 257, 644, 295, 428, 1090, 1496, 1461, 11, 457, 309, 307, 257, 644, 295, 428, 3126, 1496, 50664], 'temperature': 0.0, 'avg_logprob': -0.06617703880231406, 'compression_ratio': 1.8177570093457944, 'no_speech_prob': 0.23277047276496887}, {'id': 251, 'seek': 92098, 'start': 926.98, 'end': 929.98, 'text': ' assembly level program or machine code, correct.', 'tokens': [50664, 12103, 1496, 1461, 420, 3479, 3089, 11, 3006, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.06617703880231406, 'compression_ratio': 1.8177570093457944, 'no_speech_prob': 0.23277047276496887}, {'id': 252, 'seek': 92098, 'start': 929.98, 'end': 936.98, 'text': ' That means that the compiler is the one which is responsible for doing this data transfer.', 'tokens': [50814, 663, 1355, 300, 264, 31958, 307, 264, 472, 597, 307, 6250, 337, 884, 341, 1412, 5003, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.06617703880231406, 'compression_ratio': 1.8177570093457944, 'no_speech_prob': 0.23277047276496887}, {'id': 253, 'seek': 92098, 'start': 936.98, 'end': 940.98, 'text': ' So this part is going to be orchestrated by the compiler.', 'tokens': [51164, 407, 341, 644, 307, 516, 281, 312, 14161, 5468, 538, 264, 31958, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.06617703880231406, 'compression_ratio': 1.8177570093457944, 'no_speech_prob': 0.23277047276496887}, {'id': 254, 'seek': 92098, 'start': 940.98, 'end': 947.98, 'text': ' Movement of data from the memory or caches to the register is being orchestrated by the', 'tokens': [51364, 26523, 295, 1412, 490, 264, 4675, 420, 269, 13272, 281, 264, 7280, 307, 885, 14161, 5468, 538, 264, 51714], 'temperature': 0.0, 'avg_logprob': -0.06617703880231406, 'compression_ratio': 1.8177570093457944, 'no_speech_prob': 0.23277047276496887}, {'id': 255, 'seek': 92098, 'start': 947.98, 'end': 949.98, 'text': ' compiler, okay.', 'tokens': [51714, 31958, 11, 1392, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.06617703880231406, 'compression_ratio': 1.8177570093457944, 'no_speech_prob': 0.23277047276496887}, {'id': 256, 'seek': 94998, 'start': 949.98, 'end': 950.98, 'text': ' All right.', 'tokens': [50364, 1057, 558, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.09986150741577149, 'compression_ratio': 1.9953271028037383, 'no_speech_prob': 0.004026882816106081}, {'id': 257, 'seek': 94998, 'start': 950.98, 'end': 955.98, 'text': ' So again when you talk about registers, there are two types of registers.', 'tokens': [50414, 407, 797, 562, 291, 751, 466, 38351, 11, 456, 366, 732, 3467, 295, 38351, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.09986150741577149, 'compression_ratio': 1.9953271028037383, 'no_speech_prob': 0.004026882816106081}, {'id': 258, 'seek': 94998, 'start': 955.98, 'end': 960.98, 'text': ' Integer registers for storing integer values, floating point registers for storing floating', 'tokens': [50664, 5681, 30744, 38351, 337, 26085, 24922, 4190, 11, 12607, 935, 38351, 337, 26085, 12607, 50914], 'temperature': 0.0, 'avg_logprob': -0.09986150741577149, 'compression_ratio': 1.9953271028037383, 'no_speech_prob': 0.004026882816106081}, {'id': 259, 'seek': 94998, 'start': 960.98, 'end': 961.98, 'text': ' point values.', 'tokens': [50914, 935, 4190, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.09986150741577149, 'compression_ratio': 1.9953271028037383, 'no_speech_prob': 0.004026882816106081}, {'id': 260, 'seek': 94998, 'start': 961.98, 'end': 966.98, 'text': ' In addition to that, there are also some special purpose registers, right.', 'tokens': [50964, 682, 4500, 281, 300, 11, 456, 366, 611, 512, 2121, 4334, 38351, 11, 558, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.09986150741577149, 'compression_ratio': 1.9953271028037383, 'no_speech_prob': 0.004026882816106081}, {'id': 261, 'seek': 94998, 'start': 966.98, 'end': 973.98, 'text': ' And you as a programmer or a program may not have, may not use these things as general', 'tokens': [51214, 400, 291, 382, 257, 32116, 420, 257, 1461, 815, 406, 362, 11, 815, 406, 764, 613, 721, 382, 2674, 51564], 'temperature': 0.0, 'avg_logprob': -0.09986150741577149, 'compression_ratio': 1.9953271028037383, 'no_speech_prob': 0.004026882816106081}, {'id': 262, 'seek': 94998, 'start': 973.98, 'end': 974.98, 'text': ' purpose registers.', 'tokens': [51564, 4334, 38351, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.09986150741577149, 'compression_ratio': 1.9953271028037383, 'no_speech_prob': 0.004026882816106081}, {'id': 263, 'seek': 94998, 'start': 974.98, 'end': 977.98, 'text': ' That is why these are called special purpose registers.', 'tokens': [51614, 663, 307, 983, 613, 366, 1219, 2121, 4334, 38351, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.09986150741577149, 'compression_ratio': 1.9953271028037383, 'no_speech_prob': 0.004026882816106081}, {'id': 264, 'seek': 97798, 'start': 977.98, 'end': 982.98, 'text': ' An example of this is the program counter, right.', 'tokens': [50364, 1107, 1365, 295, 341, 307, 264, 1461, 5682, 11, 558, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.07555322647094727, 'compression_ratio': 1.8963963963963963, 'no_speech_prob': 0.056947022676467896}, {'id': 265, 'seek': 97798, 'start': 982.98, 'end': 988.98, 'text': ' Program counter is the one which points to the next instruction that has to be executed,', 'tokens': [50614, 8338, 5682, 307, 264, 472, 597, 2793, 281, 264, 958, 10951, 300, 575, 281, 312, 17577, 11, 50914], 'temperature': 0.0, 'avg_logprob': -0.07555322647094727, 'compression_ratio': 1.8963963963963963, 'no_speech_prob': 0.056947022676467896}, {'id': 266, 'seek': 97798, 'start': 988.98, 'end': 989.98, 'text': ' right.', 'tokens': [50914, 558, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.07555322647094727, 'compression_ratio': 1.8963963963963963, 'no_speech_prob': 0.056947022676467896}, {'id': 267, 'seek': 97798, 'start': 989.98, 'end': 994.98, 'text': ' And similarly instruction register is the one which holds the instruction which is being', 'tokens': [50964, 400, 14138, 10951, 7280, 307, 264, 472, 597, 9190, 264, 10951, 597, 307, 885, 51214], 'temperature': 0.0, 'avg_logprob': -0.07555322647094727, 'compression_ratio': 1.8963963963963963, 'no_speech_prob': 0.056947022676467896}, {'id': 268, 'seek': 97798, 'start': 994.98, 'end': 995.98, 'text': ' executed.', 'tokens': [51214, 17577, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.07555322647094727, 'compression_ratio': 1.8963963963963963, 'no_speech_prob': 0.056947022676467896}, {'id': 269, 'seek': 97798, 'start': 995.98, 'end': 1001.98, 'text': ' There could also be other registers like stack point, frame point and so on and so forth.', 'tokens': [51264, 821, 727, 611, 312, 661, 38351, 411, 8630, 935, 11, 3920, 935, 293, 370, 322, 293, 370, 5220, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.07555322647094727, 'compression_ratio': 1.8963963963963963, 'no_speech_prob': 0.056947022676467896}, {'id': 270, 'seek': 97798, 'start': 1001.98, 'end': 1006.98, 'text': ' Or those registers again depending on the architecture could take one of those general', 'tokens': [51564, 1610, 729, 38351, 797, 5413, 322, 264, 9482, 727, 747, 472, 295, 729, 2674, 51814], 'temperature': 0.0, 'avg_logprob': -0.07555322647094727, 'compression_ratio': 1.8963963963963963, 'no_speech_prob': 0.056947022676467896}, {'id': 271, 'seek': 100698, 'start': 1006.98, 'end': 1011.98, 'text': ' purpose registers and specifically use it for that particular purpose, okay.', 'tokens': [50364, 4334, 38351, 293, 4682, 764, 309, 337, 300, 1729, 4334, 11, 1392, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.0803404224729075, 'compression_ratio': 1.8105726872246697, 'no_speech_prob': 0.009309397079050541}, {'id': 272, 'seek': 100698, 'start': 1011.98, 'end': 1017.98, 'text': ' So essentially we have a set of registers, some of which may have a specific usage, some', 'tokens': [50614, 407, 4476, 321, 362, 257, 992, 295, 38351, 11, 512, 295, 597, 815, 362, 257, 2685, 14924, 11, 512, 50914], 'temperature': 0.0, 'avg_logprob': -0.0803404224729075, 'compression_ratio': 1.8105726872246697, 'no_speech_prob': 0.009309397079050541}, {'id': 273, 'seek': 100698, 'start': 1017.98, 'end': 1019.98, 'text': ' of which is general purpose.', 'tokens': [50914, 295, 597, 307, 2674, 4334, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.0803404224729075, 'compression_ratio': 1.8105726872246697, 'no_speech_prob': 0.009309397079050541}, {'id': 274, 'seek': 100698, 'start': 1019.98, 'end': 1024.98, 'text': ' When you say it is general purpose, what it means is that you can load any temporary value', 'tokens': [51014, 1133, 291, 584, 309, 307, 2674, 4334, 11, 437, 309, 1355, 307, 300, 291, 393, 3677, 604, 13413, 2158, 51264], 'temperature': 0.0, 'avg_logprob': -0.0803404224729075, 'compression_ratio': 1.8105726872246697, 'no_speech_prob': 0.009309397079050541}, {'id': 275, 'seek': 100698, 'start': 1024.98, 'end': 1027.98, 'text': ' to one of those registers and you can access it from.', 'tokens': [51264, 281, 472, 295, 729, 38351, 293, 291, 393, 2105, 309, 490, 13, 51414], 'temperature': 0.0, 'avg_logprob': -0.0803404224729075, 'compression_ratio': 1.8105726872246697, 'no_speech_prob': 0.009309397079050541}, {'id': 276, 'seek': 100698, 'start': 1027.98, 'end': 1029.98, 'text': ' That is really what it is, right.', 'tokens': [51414, 663, 307, 534, 437, 309, 307, 11, 558, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.0803404224729075, 'compression_ratio': 1.8105726872246697, 'no_speech_prob': 0.009309397079050541}, {'id': 277, 'seek': 100698, 'start': 1029.98, 'end': 1032.98, 'text': ' How is this loading going to be done?', 'tokens': [51514, 1012, 307, 341, 15114, 516, 281, 312, 1096, 30, 51664], 'temperature': 0.0, 'avg_logprob': -0.0803404224729075, 'compression_ratio': 1.8105726872246697, 'no_speech_prob': 0.009309397079050541}, {'id': 278, 'seek': 103298, 'start': 1032.98, 'end': 1037.98, 'text': ' Compiler will generate a code which will make sure that the data is being loaded into the', 'tokens': [50364, 6620, 5441, 486, 8460, 257, 3089, 597, 486, 652, 988, 300, 264, 1412, 307, 885, 13210, 666, 264, 50614], 'temperature': 0.0, 'avg_logprob': -0.1431757609049479, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.5823162794113159}, {'id': 279, 'seek': 103298, 'start': 1037.98, 'end': 1039.98, 'text': ' registers and is being accessed, okay.', 'tokens': [50614, 38351, 293, 307, 885, 34211, 11, 1392, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.1431757609049479, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.5823162794113159}, {'id': 280, 'seek': 103298, 'start': 1039.98, 'end': 1040.98, 'text': ' All right.', 'tokens': [50714, 1057, 558, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.1431757609049479, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.5823162794113159}, {'id': 281, 'seek': 103298, 'start': 1040.98, 'end': 1044.98, 'text': ' So why do we talk about registers, caches and memory?', 'tokens': [50764, 407, 983, 360, 321, 751, 466, 38351, 11, 269, 13272, 293, 4675, 30, 50964], 'temperature': 0.0, 'avg_logprob': -0.1431757609049479, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.5823162794113159}, {'id': 282, 'seek': 103298, 'start': 1044.98, 'end': 1047.98, 'text': ' These are all storage places.', 'tokens': [50964, 1981, 366, 439, 6725, 3190, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.1431757609049479, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.5823162794113159}, {'id': 283, 'seek': 103298, 'start': 1047.98, 'end': 1050.98, 'text': ' What is the difference between them?', 'tokens': [51114, 708, 307, 264, 2649, 1296, 552, 30, 51264], 'temperature': 0.0, 'avg_logprob': -0.1431757609049479, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.5823162794113159}, {'id': 284, 'seek': 103298, 'start': 1050.98, 'end': 1054.98, 'text': ' Access, access time, correct, right.', 'tokens': [51264, 17166, 11, 2105, 565, 11, 3006, 11, 558, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.1431757609049479, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.5823162794113159}, {'id': 285, 'seek': 103298, 'start': 1054.98, 'end': 1057.98, 'text': ' So registers are very very fast, right.', 'tokens': [51464, 407, 38351, 366, 588, 588, 2370, 11, 558, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.1431757609049479, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.5823162794113159}, {'id': 286, 'seek': 103298, 'start': 1057.98, 'end': 1060.98, 'text': ' They are sub cycle access time, right.', 'tokens': [51614, 814, 366, 1422, 6586, 2105, 565, 11, 558, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.1431757609049479, 'compression_ratio': 1.7168949771689497, 'no_speech_prob': 0.5823162794113159}, {'id': 287, 'seek': 106098, 'start': 1060.98, 'end': 1064.98, 'text': ' So the cache again depending on the level it could be from one cycle to ten cycles to', 'tokens': [50364, 407, 264, 19459, 797, 5413, 322, 264, 1496, 309, 727, 312, 490, 472, 6586, 281, 2064, 17796, 281, 50564], 'temperature': 0.0, 'avg_logprob': -0.15710617571460958, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.0545230358839035}, {'id': 288, 'seek': 106098, 'start': 1064.98, 'end': 1067.98, 'text': ' twenty cycles, processor cycles.', 'tokens': [50564, 7699, 17796, 11, 15321, 17796, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.15710617571460958, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.0545230358839035}, {'id': 289, 'seek': 106098, 'start': 1067.98, 'end': 1070.98, 'text': ' Memory could be hundreds of cycles, right.', 'tokens': [50714, 38203, 727, 312, 6779, 295, 17796, 11, 558, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.15710617571460958, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.0545230358839035}, {'id': 290, 'seek': 106098, 'start': 1070.98, 'end': 1072.98, 'text': ' So that is a memory hierarchy.', 'tokens': [50864, 407, 300, 307, 257, 4675, 22333, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.15710617571460958, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.0545230358839035}, {'id': 291, 'seek': 106098, 'start': 1072.98, 'end': 1077.98, 'text': ' Again we will talk more about this when we talk about the memory hierarchy, okay.', 'tokens': [50964, 3764, 321, 486, 751, 544, 466, 341, 562, 321, 751, 466, 264, 4675, 22333, 11, 1392, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.15710617571460958, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.0545230358839035}, {'id': 292, 'seek': 106098, 'start': 1077.98, 'end': 1083.98, 'text': ' So is this understanding of basic computer systems good enough for us?', 'tokens': [51214, 407, 307, 341, 3701, 295, 3875, 3820, 3652, 665, 1547, 337, 505, 30, 51514], 'temperature': 0.0, 'avg_logprob': -0.15710617571460958, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.0545230358839035}, {'id': 293, 'seek': 106098, 'start': 1083.98, 'end': 1084.98, 'text': ' Yeah.', 'tokens': [51514, 865, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.15710617571460958, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.0545230358839035}, {'id': 294, 'seek': 106098, 'start': 1084.98, 'end': 1087.98, 'text': ' What is the function of instruction register?', 'tokens': [51564, 708, 307, 264, 2445, 295, 10951, 7280, 30, 51714], 'temperature': 0.0, 'avg_logprob': -0.15710617571460958, 'compression_ratio': 1.6822033898305084, 'no_speech_prob': 0.0545230358839035}, {'id': 295, 'seek': 108798, 'start': 1087.98, 'end': 1091.98, 'text': ' Instruction register I will explain to you in the next slide is the one which is going', 'tokens': [50364, 2730, 3826, 7280, 286, 486, 2903, 281, 291, 294, 264, 958, 4137, 307, 264, 472, 597, 307, 516, 50564], 'temperature': 0.0, 'avg_logprob': -0.071007398848838, 'compression_ratio': 1.9723502304147464, 'no_speech_prob': 0.0843060165643692}, {'id': 296, 'seek': 108798, 'start': 1091.98, 'end': 1097.98, 'text': ' to hold the instruction which is currently being executed, okay.', 'tokens': [50564, 281, 1797, 264, 10951, 597, 307, 4362, 885, 17577, 11, 1392, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.071007398848838, 'compression_ratio': 1.9723502304147464, 'no_speech_prob': 0.0843060165643692}, {'id': 297, 'seek': 108798, 'start': 1097.98, 'end': 1102.98, 'text': ' And you need to hold that instruction because you need to understand the different fields', 'tokens': [50864, 400, 291, 643, 281, 1797, 300, 10951, 570, 291, 643, 281, 1223, 264, 819, 7909, 51114], 'temperature': 0.0, 'avg_logprob': -0.071007398848838, 'compression_ratio': 1.9723502304147464, 'no_speech_prob': 0.0843060165643692}, {'id': 298, 'seek': 108798, 'start': 1102.98, 'end': 1106.98, 'text': ' of the instruction and accordingly perform the different operations or the processor', 'tokens': [51114, 295, 264, 10951, 293, 19717, 2042, 264, 819, 7705, 420, 264, 15321, 51314], 'temperature': 0.0, 'avg_logprob': -0.071007398848838, 'compression_ratio': 1.9723502304147464, 'no_speech_prob': 0.0843060165643692}, {'id': 299, 'seek': 108798, 'start': 1106.98, 'end': 1109.98, 'text': ' has to perform the different operations, right.', 'tokens': [51314, 575, 281, 2042, 264, 819, 7705, 11, 558, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.071007398848838, 'compression_ratio': 1.9723502304147464, 'no_speech_prob': 0.0843060165643692}, {'id': 300, 'seek': 108798, 'start': 1109.98, 'end': 1114.98, 'text': ' So it holds the current instruction, all right.', 'tokens': [51464, 407, 309, 9190, 264, 2190, 10951, 11, 439, 558, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.071007398848838, 'compression_ratio': 1.9723502304147464, 'no_speech_prob': 0.0843060165643692}, {'id': 301, 'seek': 108798, 'start': 1114.98, 'end': 1115.98, 'text': ' Okay.', 'tokens': [51714, 1033, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.071007398848838, 'compression_ratio': 1.9723502304147464, 'no_speech_prob': 0.0843060165643692}, {'id': 302, 'seek': 111598, 'start': 1115.98, 'end': 1120.98, 'text': ' So let us very briefly talk about main memory and there are certain concepts of main memory', 'tokens': [50364, 407, 718, 505, 588, 10515, 751, 466, 2135, 4675, 293, 456, 366, 1629, 10392, 295, 2135, 4675, 50614], 'temperature': 0.0, 'avg_logprob': -0.07479716770684541, 'compression_ratio': 1.7282608695652173, 'no_speech_prob': 0.017724506556987762}, {'id': 303, 'seek': 111598, 'start': 1120.98, 'end': 1127.98, 'text': ' that we want to understand so that when we talk about either the instruction set architecture', 'tokens': [50614, 300, 321, 528, 281, 1223, 370, 300, 562, 321, 751, 466, 2139, 264, 10951, 992, 9482, 50964], 'temperature': 0.0, 'avg_logprob': -0.07479716770684541, 'compression_ratio': 1.7282608695652173, 'no_speech_prob': 0.017724506556987762}, {'id': 304, 'seek': 111598, 'start': 1127.98, 'end': 1133.98, 'text': ' or generating code this understanding is very important or useful.', 'tokens': [50964, 420, 17746, 3089, 341, 3701, 307, 588, 1021, 420, 4420, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.07479716770684541, 'compression_ratio': 1.7282608695652173, 'no_speech_prob': 0.017724506556987762}, {'id': 305, 'seek': 111598, 'start': 1133.98, 'end': 1137.98, 'text': ' Main memory is the one which holds instruction and data, correct.', 'tokens': [51264, 12383, 4675, 307, 264, 472, 597, 9190, 10951, 293, 1412, 11, 3006, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.07479716770684541, 'compression_ratio': 1.7282608695652173, 'no_speech_prob': 0.017724506556987762}, {'id': 306, 'seek': 113798, 'start': 1138.98, 'end': 1146.98, 'text': ' always access the main memory to access your instruction or data and this main memory is', 'tokens': [50414, 1009, 2105, 264, 2135, 4675, 281, 2105, 428, 10951, 420, 1412, 293, 341, 2135, 4675, 307, 50814], 'temperature': 0.0, 'avg_logprob': -0.11730364710092545, 'compression_ratio': 1.7455621301775148, 'no_speech_prob': 0.36799487471580505}, {'id': 307, 'seek': 113798, 'start': 1146.98, 'end': 1151.98, 'text': ' actually is organized as a sequence of locations.', 'tokens': [50814, 767, 307, 9983, 382, 257, 8310, 295, 9253, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.11730364710092545, 'compression_ratio': 1.7455621301775148, 'no_speech_prob': 0.36799487471580505}, {'id': 308, 'seek': 113798, 'start': 1151.98, 'end': 1155.98, 'text': ' Each location is capable of storing some amount of information.', 'tokens': [51064, 6947, 4914, 307, 8189, 295, 26085, 512, 2372, 295, 1589, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.11730364710092545, 'compression_ratio': 1.7455621301775148, 'no_speech_prob': 0.36799487471580505}, {'id': 309, 'seek': 113798, 'start': 1155.98, 'end': 1164.98, 'text': ' Typically each location is capable of storing one byte of information that is 8 bits, right.', 'tokens': [51264, 23129, 1184, 4914, 307, 8189, 295, 26085, 472, 40846, 295, 1589, 300, 307, 1649, 9239, 11, 558, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.11730364710092545, 'compression_ratio': 1.7455621301775148, 'no_speech_prob': 0.36799487471580505}, {'id': 310, 'seek': 116498, 'start': 1164.98, 'end': 1170.98, 'text': ' And the memory itself can be accessed or referenced by an address which is what we', 'tokens': [50364, 400, 264, 4675, 2564, 393, 312, 34211, 420, 32734, 538, 364, 2985, 597, 307, 437, 321, 50664], 'temperature': 0.0, 'avg_logprob': -0.06124967336654663, 'compression_ratio': 1.8472906403940887, 'no_speech_prob': 0.030120346695184708}, {'id': 311, 'seek': 116498, 'start': 1170.98, 'end': 1173.98, 'text': ' call as the memory address, right.', 'tokens': [50664, 818, 382, 264, 4675, 2985, 11, 558, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.06124967336654663, 'compression_ratio': 1.8472906403940887, 'no_speech_prob': 0.030120346695184708}, {'id': 312, 'seek': 116498, 'start': 1173.98, 'end': 1177.98, 'text': ' So when you talk about a physical address somebody talked about conversion from logical', 'tokens': [50814, 407, 562, 291, 751, 466, 257, 4001, 2985, 2618, 2825, 466, 14298, 490, 14978, 51014], 'temperature': 0.0, 'avg_logprob': -0.06124967336654663, 'compression_ratio': 1.8472906403940887, 'no_speech_prob': 0.030120346695184708}, {'id': 313, 'seek': 116498, 'start': 1177.98, 'end': 1182.98, 'text': ' address to physical address that address that you are talking about refers to a specific', 'tokens': [51014, 2985, 281, 4001, 2985, 300, 2985, 300, 291, 366, 1417, 466, 14942, 281, 257, 2685, 51264], 'temperature': 0.0, 'avg_logprob': -0.06124967336654663, 'compression_ratio': 1.8472906403940887, 'no_speech_prob': 0.030120346695184708}, {'id': 314, 'seek': 116498, 'start': 1182.98, 'end': 1190.98, 'text': ' location in memory and that location may contain one byte of information, right.', 'tokens': [51264, 4914, 294, 4675, 293, 300, 4914, 815, 5304, 472, 40846, 295, 1589, 11, 558, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.06124967336654663, 'compression_ratio': 1.8472906403940887, 'no_speech_prob': 0.030120346695184708}, {'id': 315, 'seek': 119098, 'start': 1190.98, 'end': 1197.98, 'text': ' If each location contains one byte of information then we call this memory as byte addressable,', 'tokens': [50364, 759, 1184, 4914, 8306, 472, 40846, 295, 1589, 550, 321, 818, 341, 4675, 382, 40846, 2985, 712, 11, 50714], 'temperature': 0.0, 'avg_logprob': -0.0789343181409334, 'compression_ratio': 1.8283261802575108, 'no_speech_prob': 0.03286982327699661}, {'id': 316, 'seek': 119098, 'start': 1197.98, 'end': 1198.98, 'text': ' okay.', 'tokens': [50714, 1392, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.0789343181409334, 'compression_ratio': 1.8283261802575108, 'no_speech_prob': 0.03286982327699661}, {'id': 317, 'seek': 119098, 'start': 1198.98, 'end': 1203.98, 'text': ' And this is the minimum amount of memory that you can access or modify, right.', 'tokens': [50764, 400, 341, 307, 264, 7285, 2372, 295, 4675, 300, 291, 393, 2105, 420, 16927, 11, 558, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.0789343181409334, 'compression_ratio': 1.8283261802575108, 'no_speech_prob': 0.03286982327699661}, {'id': 318, 'seek': 119098, 'start': 1203.98, 'end': 1209.98, 'text': ' So if a location consists of 8 bits, right, then you can take out all the 8 bits, put', 'tokens': [51014, 407, 498, 257, 4914, 14689, 295, 1649, 9239, 11, 558, 11, 550, 291, 393, 747, 484, 439, 264, 1649, 9239, 11, 829, 51314], 'temperature': 0.0, 'avg_logprob': -0.0789343181409334, 'compression_ratio': 1.8283261802575108, 'no_speech_prob': 0.03286982327699661}, {'id': 319, 'seek': 119098, 'start': 1209.98, 'end': 1211.98, 'text': ' back all the 8 bits.', 'tokens': [51314, 646, 439, 264, 1649, 9239, 13, 51414], 'temperature': 0.0, 'avg_logprob': -0.0789343181409334, 'compression_ratio': 1.8283261802575108, 'no_speech_prob': 0.03286982327699661}, {'id': 320, 'seek': 119098, 'start': 1211.98, 'end': 1214.98, 'text': ' You cannot just say, okay, I want to toggle one bit.', 'tokens': [51414, 509, 2644, 445, 584, 11, 1392, 11, 286, 528, 281, 31225, 472, 857, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.0789343181409334, 'compression_ratio': 1.8283261802575108, 'no_speech_prob': 0.03286982327699661}, {'id': 321, 'seek': 119098, 'start': 1214.98, 'end': 1218.98, 'text': ' Well if you want to toggle one bit you take out the entire thing, toggle that one bit', 'tokens': [51564, 1042, 498, 291, 528, 281, 31225, 472, 857, 291, 747, 484, 264, 2302, 551, 11, 31225, 300, 472, 857, 51764], 'temperature': 0.0, 'avg_logprob': -0.0789343181409334, 'compression_ratio': 1.8283261802575108, 'no_speech_prob': 0.03286982327699661}, {'id': 322, 'seek': 121898, 'start': 1218.98, 'end': 1220.98, 'text': ' and write back that entire 8 bits.', 'tokens': [50364, 293, 2464, 646, 300, 2302, 1649, 9239, 13, 50464], 'temperature': 0.0, 'avg_logprob': -0.09564825845143152, 'compression_ratio': 2.075221238938053, 'no_speech_prob': 0.10604788362979889}, {'id': 323, 'seek': 121898, 'start': 1220.98, 'end': 1223.98, 'text': ' That is really how you have to do it, okay.', 'tokens': [50464, 663, 307, 534, 577, 291, 362, 281, 360, 309, 11, 1392, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.09564825845143152, 'compression_ratio': 2.075221238938053, 'no_speech_prob': 0.10604788362979889}, {'id': 324, 'seek': 121898, 'start': 1223.98, 'end': 1226.98, 'text': ' That is the minimum amount, that is the minimum value, right.', 'tokens': [50614, 663, 307, 264, 7285, 2372, 11, 300, 307, 264, 7285, 2158, 11, 558, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.09564825845143152, 'compression_ratio': 2.075221238938053, 'no_speech_prob': 0.10604788362979889}, {'id': 325, 'seek': 121898, 'start': 1226.98, 'end': 1230.98, 'text': ' It is like what is the smallest change that you can get.', 'tokens': [50764, 467, 307, 411, 437, 307, 264, 16998, 1319, 300, 291, 393, 483, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.09564825845143152, 'compression_ratio': 2.075221238938053, 'no_speech_prob': 0.10604788362979889}, {'id': 326, 'seek': 121898, 'start': 1230.98, 'end': 1235.98, 'text': ' Today the smallest change you can get is probably what, 1 rupee, 2 rupees, right.', 'tokens': [50964, 2692, 264, 16998, 1319, 291, 393, 483, 307, 1391, 437, 11, 502, 5420, 39544, 11, 568, 24638, 11, 558, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.09564825845143152, 'compression_ratio': 2.075221238938053, 'no_speech_prob': 0.10604788362979889}, {'id': 327, 'seek': 121898, 'start': 1235.98, 'end': 1238.98, 'text': ' So that is the minimum denomination that you are talking about.', 'tokens': [51214, 407, 300, 307, 264, 7285, 1441, 46970, 300, 291, 366, 1417, 466, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.09564825845143152, 'compression_ratio': 2.075221238938053, 'no_speech_prob': 0.10604788362979889}, {'id': 328, 'seek': 121898, 'start': 1238.98, 'end': 1245.98, 'text': ' So you can think of byte as the minimum denomination, right, smallest amount of value that you can', 'tokens': [51364, 407, 291, 393, 519, 295, 40846, 382, 264, 7285, 1441, 46970, 11, 558, 11, 16998, 2372, 295, 2158, 300, 291, 393, 51714], 'temperature': 0.0, 'avg_logprob': -0.09564825845143152, 'compression_ratio': 2.075221238938053, 'no_speech_prob': 0.10604788362979889}, {'id': 329, 'seek': 121898, 'start': 1245.98, 'end': 1247.98, 'text': ' fetch or write back, okay.', 'tokens': [51714, 23673, 420, 2464, 646, 11, 1392, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.09564825845143152, 'compression_ratio': 2.075221238938053, 'no_speech_prob': 0.10604788362979889}, {'id': 330, 'seek': 124798, 'start': 1247.98, 'end': 1254.98, 'text': ' If your very location consists of only 1 byte, how do I talk about integers which are probably', 'tokens': [50364, 759, 428, 588, 4914, 14689, 295, 787, 502, 40846, 11, 577, 360, 286, 751, 466, 41674, 597, 366, 1391, 50714], 'temperature': 0.0, 'avg_logprob': -0.08583798673417833, 'compression_ratio': 1.576086956521739, 'no_speech_prob': 0.01114555262029171}, {'id': 331, 'seek': 124798, 'start': 1254.98, 'end': 1260.98, 'text': ' 4 bytes long or floating point numbers, right, single precision is 4 byte, double precision', 'tokens': [50714, 1017, 36088, 938, 420, 12607, 935, 3547, 11, 558, 11, 2167, 18356, 307, 1017, 40846, 11, 3834, 18356, 51014], 'temperature': 0.0, 'avg_logprob': -0.08583798673417833, 'compression_ratio': 1.576086956521739, 'no_speech_prob': 0.01114555262029171}, {'id': 332, 'seek': 124798, 'start': 1260.98, 'end': 1264.98, 'text': ' is 8 byte and so on, right.', 'tokens': [51014, 307, 1649, 40846, 293, 370, 322, 11, 558, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.08583798673417833, 'compression_ratio': 1.576086956521739, 'no_speech_prob': 0.01114555262029171}, {'id': 333, 'seek': 124798, 'start': 1264.98, 'end': 1271.98, 'text': ' So that you can essentially talk about it as a sequence of location, right.', 'tokens': [51214, 407, 300, 291, 393, 4476, 751, 466, 309, 382, 257, 8310, 295, 4914, 11, 558, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.08583798673417833, 'compression_ratio': 1.576086956521739, 'no_speech_prob': 0.01114555262029171}, {'id': 334, 'seek': 127198, 'start': 1271.98, 'end': 1278.98, 'text': ' You can say a sequence of 4 locations is 1 word, right and that 1 word could be an integer.', 'tokens': [50364, 509, 393, 584, 257, 8310, 295, 1017, 9253, 307, 502, 1349, 11, 558, 293, 300, 502, 1349, 727, 312, 364, 24922, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.1232156753540039, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.060876522213220596}, {'id': 335, 'seek': 127198, 'start': 1278.98, 'end': 1286.98, 'text': ' A sequence of 8 locations is 2 words, right and that 2 words could be a float, sorry,', 'tokens': [50714, 316, 8310, 295, 1649, 9253, 307, 568, 2283, 11, 558, 293, 300, 568, 2283, 727, 312, 257, 15706, 11, 2597, 11, 51114], 'temperature': 0.0, 'avg_logprob': -0.1232156753540039, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.060876522213220596}, {'id': 336, 'seek': 127198, 'start': 1286.98, 'end': 1293.98, 'text': ' double precision floating point number, right or you can talk about a sequence of 2 locations,', 'tokens': [51114, 3834, 18356, 12607, 935, 1230, 11, 558, 420, 291, 393, 751, 466, 257, 8310, 295, 568, 9253, 11, 51464], 'temperature': 0.0, 'avg_logprob': -0.1232156753540039, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.060876522213220596}, {'id': 337, 'seek': 127198, 'start': 1293.98, 'end': 1294.98, 'text': ' 2 bytes.', 'tokens': [51464, 568, 36088, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.1232156753540039, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.060876522213220596}, {'id': 338, 'seek': 127198, 'start': 1294.98, 'end': 1295.98, 'text': ' What is that?', 'tokens': [51514, 708, 307, 300, 30, 51564], 'temperature': 0.0, 'avg_logprob': -0.1232156753540039, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.060876522213220596}, {'id': 339, 'seek': 127198, 'start': 1295.98, 'end': 1300.98, 'text': ' You have come across that in C, short integer, short, right.', 'tokens': [51564, 509, 362, 808, 2108, 300, 294, 383, 11, 2099, 24922, 11, 2099, 11, 558, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.1232156753540039, 'compression_ratio': 1.797979797979798, 'no_speech_prob': 0.060876522213220596}, {'id': 340, 'seek': 130098, 'start': 1300.98, 'end': 1306.98, 'text': ' You have seen short, right and 1 byte is character, okay.', 'tokens': [50364, 509, 362, 1612, 2099, 11, 558, 293, 502, 40846, 307, 2517, 11, 1392, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.1669523836386324, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.0075287786312401295}, {'id': 341, 'seek': 130098, 'start': 1306.98, 'end': 1308.98, 'text': ' So, everything falls in place, right.', 'tokens': [50664, 407, 11, 1203, 8804, 294, 1081, 11, 558, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.1669523836386324, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.0075287786312401295}, {'id': 342, 'seek': 130098, 'start': 1308.98, 'end': 1311.98, 'text': ' So, think about it that way, right.', 'tokens': [50764, 407, 11, 519, 466, 309, 300, 636, 11, 558, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.1669523836386324, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.0075287786312401295}, {'id': 343, 'seek': 130098, 'start': 1311.98, 'end': 1315.98, 'text': ' So, the memory is organized as a byte addressable memory.', 'tokens': [50914, 407, 11, 264, 4675, 307, 9983, 382, 257, 40846, 2985, 712, 4675, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.1669523836386324, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.0075287786312401295}, {'id': 344, 'seek': 130098, 'start': 1315.98, 'end': 1321.98, 'text': ' Each location of the memory has an address by which it is referenced to, correct and', 'tokens': [51114, 6947, 4914, 295, 264, 4675, 575, 364, 2985, 538, 597, 309, 307, 32734, 281, 11, 3006, 293, 51414], 'temperature': 0.0, 'avg_logprob': -0.1669523836386324, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.0075287786312401295}, {'id': 345, 'seek': 130098, 'start': 1321.98, 'end': 1328.98, 'text': ' every location has 8 bits, alright and a sequence of 2, 4 or 8 essentially is a byte addressable', 'tokens': [51414, 633, 4914, 575, 1649, 9239, 11, 5845, 293, 257, 8310, 295, 568, 11, 1017, 420, 1649, 4476, 307, 257, 40846, 2985, 712, 51764], 'temperature': 0.0, 'avg_logprob': -0.1669523836386324, 'compression_ratio': 1.7175925925925926, 'no_speech_prob': 0.0075287786312401295}, {'id': 346, 'seek': 132898, 'start': 1328.98, 'end': 1336.98, 'text': ' memory or 8 essentially forms a short word, I mean 4 bytes is word and 8 bytes is double', 'tokens': [50364, 4675, 420, 1649, 4476, 6422, 257, 2099, 1349, 11, 286, 914, 1017, 36088, 307, 1349, 293, 1649, 36088, 307, 3834, 50764], 'temperature': 0.0, 'avg_logprob': -0.13513829973008898, 'compression_ratio': 1.634703196347032, 'no_speech_prob': 0.06501742452383041}, {'id': 347, 'seek': 132898, 'start': 1336.98, 'end': 1337.98, 'text': ' word, okay.', 'tokens': [50764, 1349, 11, 1392, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.13513829973008898, 'compression_ratio': 1.634703196347032, 'no_speech_prob': 0.06501742452383041}, {'id': 348, 'seek': 132898, 'start': 1337.98, 'end': 1339.98, 'text': ' That is really what it is.', 'tokens': [50814, 663, 307, 534, 437, 309, 307, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.13513829973008898, 'compression_ratio': 1.634703196347032, 'no_speech_prob': 0.06501742452383041}, {'id': 349, 'seek': 132898, 'start': 1339.98, 'end': 1344.98, 'text': ' Okay, let us see an example of this in the next slide, okay.', 'tokens': [50914, 1033, 11, 718, 505, 536, 364, 1365, 295, 341, 294, 264, 958, 4137, 11, 1392, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.13513829973008898, 'compression_ratio': 1.634703196347032, 'no_speech_prob': 0.06501742452383041}, {'id': 350, 'seek': 132898, 'start': 1344.98, 'end': 1348.98, 'text': ' So, you can now think of this memory as this, okay.', 'tokens': [51164, 407, 11, 291, 393, 586, 519, 295, 341, 4675, 382, 341, 11, 1392, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.13513829973008898, 'compression_ratio': 1.634703196347032, 'no_speech_prob': 0.06501742452383041}, {'id': 351, 'seek': 132898, 'start': 1348.98, 'end': 1352.98, 'text': ' Each location consists of 1 byte of information.', 'tokens': [51364, 6947, 4914, 14689, 295, 502, 40846, 295, 1589, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.13513829973008898, 'compression_ratio': 1.634703196347032, 'no_speech_prob': 0.06501742452383041}, {'id': 352, 'seek': 132898, 'start': 1352.98, 'end': 1355.98, 'text': ' You can see 2 hexadecimal digits there, right.', 'tokens': [51564, 509, 393, 536, 568, 23291, 762, 66, 10650, 27011, 456, 11, 558, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.13513829973008898, 'compression_ratio': 1.634703196347032, 'no_speech_prob': 0.06501742452383041}, {'id': 353, 'seek': 132898, 'start': 1355.98, 'end': 1357.98, 'text': ' That is 8 bits, okay.', 'tokens': [51714, 663, 307, 1649, 9239, 11, 1392, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.13513829973008898, 'compression_ratio': 1.634703196347032, 'no_speech_prob': 0.06501742452383041}, {'id': 354, 'seek': 135798, 'start': 1357.98, 'end': 1363.98, 'text': ' And here I have taken some address starting from 400 onwards, right.', 'tokens': [50364, 400, 510, 286, 362, 2726, 512, 2985, 2891, 490, 8423, 34230, 11, 558, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.05310524772195255, 'compression_ratio': 1.6789473684210525, 'no_speech_prob': 0.006566945929080248}, {'id': 355, 'seek': 135798, 'start': 1363.98, 'end': 1367.98, 'text': ' What is stored in the memory is only the data.', 'tokens': [50664, 708, 307, 12187, 294, 264, 4675, 307, 787, 264, 1412, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.05310524772195255, 'compression_ratio': 1.6789473684210525, 'no_speech_prob': 0.006566945929080248}, {'id': 356, 'seek': 135798, 'start': 1367.98, 'end': 1370.98, 'text': ' Address is never stored there, correct.', 'tokens': [50864, 5349, 735, 307, 1128, 12187, 456, 11, 3006, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.05310524772195255, 'compression_ratio': 1.6789473684210525, 'no_speech_prob': 0.006566945929080248}, {'id': 357, 'seek': 135798, 'start': 1370.98, 'end': 1372.98, 'text': ' That is something that we have to be very clear about.', 'tokens': [51014, 663, 307, 746, 300, 321, 362, 281, 312, 588, 1850, 466, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.05310524772195255, 'compression_ratio': 1.6789473684210525, 'no_speech_prob': 0.006566945929080248}, {'id': 358, 'seek': 135798, 'start': 1372.98, 'end': 1374.98, 'text': ' Address is not stored anywhere.', 'tokens': [51114, 5349, 735, 307, 406, 12187, 4992, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.05310524772195255, 'compression_ratio': 1.6789473684210525, 'no_speech_prob': 0.006566945929080248}, {'id': 359, 'seek': 135798, 'start': 1374.98, 'end': 1379.98, 'text': ' You use the address, you decode the address to go to that location, correct.', 'tokens': [51214, 509, 764, 264, 2985, 11, 291, 979, 1429, 264, 2985, 281, 352, 281, 300, 4914, 11, 3006, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.05310524772195255, 'compression_ratio': 1.6789473684210525, 'no_speech_prob': 0.006566945929080248}, {'id': 360, 'seek': 137998, 'start': 1380.98, 'end': 1385.98, 'text': ' So, when I say 400, the byte in 400 is 1A.', 'tokens': [50414, 407, 11, 562, 286, 584, 8423, 11, 264, 40846, 294, 8423, 307, 502, 32, 13, 50664], 'temperature': 0.0, 'avg_logprob': -0.11080008188883464, 'compression_ratio': 1.5730337078651686, 'no_speech_prob': 0.06463511288166046}, {'id': 361, 'seek': 137998, 'start': 1385.98, 'end': 1391.98, 'text': ' The byte which is stored in 400, location 400 is 1A, right.', 'tokens': [50664, 440, 40846, 597, 307, 12187, 294, 8423, 11, 4914, 8423, 307, 502, 32, 11, 558, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.11080008188883464, 'compression_ratio': 1.5730337078651686, 'no_speech_prob': 0.06463511288166046}, {'id': 362, 'seek': 137998, 'start': 1391.98, 'end': 1401.98, 'text': ' Okay, now if I want to access an integer at location 400, as I mentioned earlier it should', 'tokens': [50964, 1033, 11, 586, 498, 286, 528, 281, 2105, 364, 24922, 412, 4914, 8423, 11, 382, 286, 2835, 3071, 309, 820, 51464], 'temperature': 0.0, 'avg_logprob': -0.11080008188883464, 'compression_ratio': 1.5730337078651686, 'no_speech_prob': 0.06463511288166046}, {'id': 363, 'seek': 137998, 'start': 1401.98, 'end': 1406.98, 'text': ' be a sequence of consecutive locations and by convention we will say consecutive means', 'tokens': [51464, 312, 257, 8310, 295, 30497, 9253, 293, 538, 10286, 321, 486, 584, 30497, 1355, 51714], 'temperature': 0.0, 'avg_logprob': -0.11080008188883464, 'compression_ratio': 1.5730337078651686, 'no_speech_prob': 0.06463511288166046}, {'id': 364, 'seek': 140698, 'start': 1406.98, 'end': 1409.98, 'text': ' increasing address, correct.', 'tokens': [50364, 5662, 2985, 11, 3006, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.09243107453370705, 'compression_ratio': 1.6842105263157894, 'no_speech_prob': 0.02062232233583927}, {'id': 365, 'seek': 140698, 'start': 1409.98, 'end': 1414.98, 'text': ' 400, 401, 402 and 402, right.', 'tokens': [50514, 8423, 11, 37510, 11, 3356, 17, 293, 3356, 17, 11, 558, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.09243107453370705, 'compression_ratio': 1.6842105263157894, 'no_speech_prob': 0.02062232233583927}, {'id': 366, 'seek': 140698, 'start': 1414.98, 'end': 1421.98, 'text': ' That means we are talking about an integer which is this, correct.', 'tokens': [50764, 663, 1355, 321, 366, 1417, 466, 364, 24922, 597, 307, 341, 11, 3006, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.09243107453370705, 'compression_ratio': 1.6842105263157894, 'no_speech_prob': 0.02062232233583927}, {'id': 367, 'seek': 140698, 'start': 1421.98, 'end': 1428.98, 'text': ' Now, again we have to have one more convention to say of these 4 bytes, which one is the', 'tokens': [51114, 823, 11, 797, 321, 362, 281, 362, 472, 544, 10286, 281, 584, 295, 613, 1017, 36088, 11, 597, 472, 307, 264, 51464], 'temperature': 0.0, 'avg_logprob': -0.09243107453370705, 'compression_ratio': 1.6842105263157894, 'no_speech_prob': 0.02062232233583927}, {'id': 368, 'seek': 140698, 'start': 1428.98, 'end': 1434.98, 'text': ' most significant byte and which one is the least significant byte, right.', 'tokens': [51464, 881, 4776, 40846, 293, 597, 472, 307, 264, 1935, 4776, 40846, 11, 558, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.09243107453370705, 'compression_ratio': 1.6842105263157894, 'no_speech_prob': 0.02062232233583927}, {'id': 369, 'seek': 143498, 'start': 1434.98, 'end': 1438.98, 'text': ' We are all used to reading from left to right.', 'tokens': [50364, 492, 366, 439, 1143, 281, 3760, 490, 1411, 281, 558, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.0977972377430309, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.03232406824827194}, {'id': 370, 'seek': 143498, 'start': 1438.98, 'end': 1443.98, 'text': ' So, we will say that I like this to be my most significant byte, okay.', 'tokens': [50564, 407, 11, 321, 486, 584, 300, 286, 411, 341, 281, 312, 452, 881, 4776, 40846, 11, 1392, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.0977972377430309, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.03232406824827194}, {'id': 371, 'seek': 143498, 'start': 1443.98, 'end': 1446.98, 'text': ' But computers do not care, right.', 'tokens': [50814, 583, 10807, 360, 406, 1127, 11, 558, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.0977972377430309, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.03232406824827194}, {'id': 372, 'seek': 143498, 'start': 1446.98, 'end': 1448.98, 'text': ' They are both left handed and right handed.', 'tokens': [50964, 814, 366, 1293, 1411, 16013, 293, 558, 16013, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.0977972377430309, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.03232406824827194}, {'id': 373, 'seek': 143498, 'start': 1448.98, 'end': 1453.98, 'text': ' I mean they can be both left handed and right handed if you want it to be, okay.', 'tokens': [51064, 286, 914, 436, 393, 312, 1293, 1411, 16013, 293, 558, 16013, 498, 291, 528, 309, 281, 312, 11, 1392, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.0977972377430309, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.03232406824827194}, {'id': 374, 'seek': 143498, 'start': 1453.98, 'end': 1461.98, 'text': ' So, if you say it is a big ndn byte ordering convention, right, the end is at the higher', 'tokens': [51314, 407, 11, 498, 291, 584, 309, 307, 257, 955, 220, 273, 77, 40846, 21739, 10286, 11, 558, 11, 264, 917, 307, 412, 264, 2946, 51714], 'temperature': 0.0, 'avg_logprob': -0.0977972377430309, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.03232406824827194}, {'id': 375, 'seek': 143498, 'start': 1461.98, 'end': 1462.98, 'text': ' address, okay.', 'tokens': [51714, 2985, 11, 1392, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.0977972377430309, 'compression_ratio': 1.7592592592592593, 'no_speech_prob': 0.03232406824827194}, {'id': 376, 'seek': 146298, 'start': 1462.98, 'end': 1471.98, 'text': ' So, 1a is the most significant byte, okay, c8, b2 and then 46 is the least significant', 'tokens': [50364, 407, 11, 502, 64, 307, 264, 881, 4776, 40846, 11, 1392, 11, 269, 23, 11, 272, 17, 293, 550, 17835, 307, 264, 1935, 4776, 50814], 'temperature': 0.0, 'avg_logprob': -0.10904384189181858, 'compression_ratio': 1.9215686274509804, 'no_speech_prob': 0.04798102378845215}, {'id': 377, 'seek': 146298, 'start': 1471.98, 'end': 1472.98, 'text': ' byte, okay.', 'tokens': [50814, 40846, 11, 1392, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.10904384189181858, 'compression_ratio': 1.9215686274509804, 'no_speech_prob': 0.04798102378845215}, {'id': 378, 'seek': 146298, 'start': 1472.98, 'end': 1477.98, 'text': ' This is what we call as the big ndn convention.', 'tokens': [50864, 639, 307, 437, 321, 818, 382, 264, 955, 220, 273, 77, 10286, 13, 51114], 'temperature': 0.0, 'avg_logprob': -0.10904384189181858, 'compression_ratio': 1.9215686274509804, 'no_speech_prob': 0.04798102378845215}, {'id': 379, 'seek': 146298, 'start': 1477.98, 'end': 1482.98, 'text': ' The little ndn convention is the other way around, okay.', 'tokens': [51114, 440, 707, 220, 273, 77, 10286, 307, 264, 661, 636, 926, 11, 1392, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.10904384189181858, 'compression_ratio': 1.9215686274509804, 'no_speech_prob': 0.04798102378845215}, {'id': 380, 'seek': 146298, 'start': 1482.98, 'end': 1490.98, 'text': ' 46 is the most significant byte and of course, b2, c8 and then 1a is the least significant', 'tokens': [51364, 17835, 307, 264, 881, 4776, 40846, 293, 295, 1164, 11, 272, 17, 11, 269, 23, 293, 550, 502, 64, 307, 264, 1935, 4776, 51764], 'temperature': 0.0, 'avg_logprob': -0.10904384189181858, 'compression_ratio': 1.9215686274509804, 'no_speech_prob': 0.04798102378845215}, {'id': 381, 'seek': 149098, 'start': 1490.98, 'end': 1492.98, 'text': ' byte, okay.', 'tokens': [50364, 40846, 11, 1392, 13, 50464], 'temperature': 0.0, 'avg_logprob': -0.1275235319559553, 'compression_ratio': 1.7216494845360826, 'no_speech_prob': 0.09294808655977249}, {'id': 382, 'seek': 149098, 'start': 1492.98, 'end': 1498.98, 'text': ' So, each computer is going to follow one or the other, right.', 'tokens': [50464, 407, 11, 1184, 3820, 307, 516, 281, 1524, 472, 420, 264, 661, 11, 558, 13, 50764], 'temperature': 0.0, 'avg_logprob': -0.1275235319559553, 'compression_ratio': 1.7216494845360826, 'no_speech_prob': 0.09294808655977249}, {'id': 383, 'seek': 149098, 'start': 1498.98, 'end': 1502.98, 'text': ' Do you know which one your computer follows, big ndn?', 'tokens': [50764, 1144, 291, 458, 597, 472, 428, 3820, 10002, 11, 955, 220, 273, 77, 30, 50964], 'temperature': 0.0, 'avg_logprob': -0.1275235319559553, 'compression_ratio': 1.7216494845360826, 'no_speech_prob': 0.09294808655977249}, {'id': 384, 'seek': 149098, 'start': 1502.98, 'end': 1503.98, 'text': ' Can you find that out?', 'tokens': [50964, 1664, 291, 915, 300, 484, 30, 51014], 'temperature': 0.0, 'avg_logprob': -0.1275235319559553, 'compression_ratio': 1.7216494845360826, 'no_speech_prob': 0.09294808655977249}, {'id': 385, 'seek': 149098, 'start': 1503.98, 'end': 1506.98, 'text': ' Can you write a program, C program to find that out?', 'tokens': [51014, 1664, 291, 2464, 257, 1461, 11, 383, 1461, 281, 915, 300, 484, 30, 51164], 'temperature': 0.0, 'avg_logprob': -0.1275235319559553, 'compression_ratio': 1.7216494845360826, 'no_speech_prob': 0.09294808655977249}, {'id': 386, 'seek': 149098, 'start': 1506.98, 'end': 1507.98, 'text': ' Just think of it.', 'tokens': [51164, 1449, 519, 295, 309, 13, 51214], 'temperature': 0.0, 'avg_logprob': -0.1275235319559553, 'compression_ratio': 1.7216494845360826, 'no_speech_prob': 0.09294808655977249}, {'id': 387, 'seek': 149098, 'start': 1507.98, 'end': 1508.98, 'text': ' Can I write a C program?', 'tokens': [51214, 1664, 286, 2464, 257, 383, 1461, 30, 51264], 'temperature': 0.0, 'avg_logprob': -0.1275235319559553, 'compression_ratio': 1.7216494845360826, 'no_speech_prob': 0.09294808655977249}, {'id': 388, 'seek': 149098, 'start': 1508.98, 'end': 1509.98, 'text': ' Do not write it, okay.', 'tokens': [51264, 1144, 406, 2464, 309, 11, 1392, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.1275235319559553, 'compression_ratio': 1.7216494845360826, 'no_speech_prob': 0.09294808655977249}, {'id': 389, 'seek': 149098, 'start': 1509.98, 'end': 1514.98, 'text': ' No, no, do not, not that fast, okay.', 'tokens': [51314, 883, 11, 572, 11, 360, 406, 11, 406, 300, 2370, 11, 1392, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.1275235319559553, 'compression_ratio': 1.7216494845360826, 'no_speech_prob': 0.09294808655977249}, {'id': 390, 'seek': 149098, 'start': 1514.98, 'end': 1518.98, 'text': ' Is it possible to write it?', 'tokens': [51564, 1119, 309, 1944, 281, 2464, 309, 30, 51764], 'temperature': 0.0, 'avg_logprob': -0.1275235319559553, 'compression_ratio': 1.7216494845360826, 'no_speech_prob': 0.09294808655977249}, {'id': 391, 'seek': 151898, 'start': 1518.98, 'end': 1521.98, 'text': ' What is the idea?', 'tokens': [50364, 708, 307, 264, 1558, 30, 50514], 'temperature': 0.0, 'avg_logprob': -0.20411816196165222, 'compression_ratio': 1.4025157232704402, 'no_speech_prob': 0.08126063644886017}, {'id': 392, 'seek': 151898, 'start': 1521.98, 'end': 1529.98, 'text': ' Read the mass each one as a character and then do that.', 'tokens': [50514, 17604, 264, 2758, 1184, 472, 382, 257, 2517, 293, 550, 360, 300, 13, 50914], 'temperature': 0.0, 'avg_logprob': -0.20411816196165222, 'compression_ratio': 1.4025157232704402, 'no_speech_prob': 0.08126063644886017}, {'id': 393, 'seek': 151898, 'start': 1529.98, 'end': 1530.98, 'text': ' C allows you to do that.', 'tokens': [50914, 383, 4045, 291, 281, 360, 300, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.20411816196165222, 'compression_ratio': 1.4025157232704402, 'no_speech_prob': 0.08126063644886017}, {'id': 394, 'seek': 151898, 'start': 1530.98, 'end': 1536.98, 'text': ' So, it should be possible to figure out whether your computer follows big ndn or little ndn.', 'tokens': [50964, 407, 11, 309, 820, 312, 1944, 281, 2573, 484, 1968, 428, 3820, 10002, 955, 220, 273, 77, 420, 707, 220, 273, 77, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.20411816196165222, 'compression_ratio': 1.4025157232704402, 'no_speech_prob': 0.08126063644886017}, {'id': 395, 'seek': 151898, 'start': 1536.98, 'end': 1545.98, 'text': ' Very simple, right, okay, fine.', 'tokens': [51264, 4372, 2199, 11, 558, 11, 1392, 11, 2489, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.20411816196165222, 'compression_ratio': 1.4025157232704402, 'no_speech_prob': 0.08126063644886017}, {'id': 396, 'seek': 154598, 'start': 1545.98, 'end': 1552.98, 'text': ' You will not really see it.', 'tokens': [50364, 509, 486, 406, 534, 536, 309, 13, 50714], 'temperature': 0.0, 'avg_logprob': -0.12926566449901725, 'compression_ratio': 1.6058823529411765, 'no_speech_prob': 0.44214287400245667}, {'id': 397, 'seek': 154598, 'start': 1552.98, 'end': 1559.98, 'text': ' The processor is going to give you in a way that it is from the, if it gives you as 1a,', 'tokens': [50714, 440, 15321, 307, 516, 281, 976, 291, 294, 257, 636, 300, 309, 307, 490, 264, 11, 498, 309, 2709, 291, 382, 502, 64, 11, 51064], 'temperature': 0.0, 'avg_logprob': -0.12926566449901725, 'compression_ratio': 1.6058823529411765, 'no_speech_prob': 0.44214287400245667}, {'id': 398, 'seek': 154598, 'start': 1559.98, 'end': 1568.98, 'text': ' correct, then 0001, the first 0 as the most significant bit in that particular byte, okay,', 'tokens': [51064, 3006, 11, 550, 13711, 16, 11, 264, 700, 1958, 382, 264, 881, 4776, 857, 294, 300, 1729, 40846, 11, 1392, 11, 51514], 'temperature': 0.0, 'avg_logprob': -0.12926566449901725, 'compression_ratio': 1.6058823529411765, 'no_speech_prob': 0.44214287400245667}, {'id': 399, 'seek': 154598, 'start': 1568.98, 'end': 1573.98, 'text': ' and then a which is 1010, the last 0 as the least significant bit.', 'tokens': [51514, 293, 550, 257, 597, 307, 1266, 3279, 11, 264, 1036, 1958, 382, 264, 1935, 4776, 857, 13, 51764], 'temperature': 0.0, 'avg_logprob': -0.12926566449901725, 'compression_ratio': 1.6058823529411765, 'no_speech_prob': 0.44214287400245667}, {'id': 400, 'seek': 157398, 'start': 1573.98, 'end': 1576.98, 'text': ' How exactly it is stored in the memory you are not really going to see.', 'tokens': [50364, 1012, 2293, 309, 307, 12187, 294, 264, 4675, 291, 366, 406, 534, 516, 281, 536, 13, 50514], 'temperature': 0.0, 'avg_logprob': -0.10445737838745117, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.01864904724061489}, {'id': 401, 'seek': 157398, 'start': 1576.98, 'end': 1577.98, 'text': ' So, it does not really matter.', 'tokens': [50514, 407, 11, 309, 775, 406, 534, 1871, 13, 50564], 'temperature': 0.0, 'avg_logprob': -0.10445737838745117, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.01864904724061489}, {'id': 402, 'seek': 157398, 'start': 1577.98, 'end': 1583.98, 'text': ' We will not talk about it, right, okay.', 'tokens': [50564, 492, 486, 406, 751, 466, 309, 11, 558, 11, 1392, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.10445737838745117, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.01864904724061489}, {'id': 403, 'seek': 157398, 'start': 1583.98, 'end': 1584.98, 'text': ' Convincing?', 'tokens': [50864, 2656, 4796, 2175, 30, 50914], 'temperature': 0.0, 'avg_logprob': -0.10445737838745117, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.01864904724061489}, {'id': 404, 'seek': 157398, 'start': 1584.98, 'end': 1585.98, 'text': ' Okay.', 'tokens': [50914, 1033, 13, 50964], 'temperature': 0.0, 'avg_logprob': -0.10445737838745117, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.01864904724061489}, {'id': 405, 'seek': 157398, 'start': 1585.98, 'end': 1591.98, 'text': ' We need to also see a little bit more details about words alignment and so on.', 'tokens': [50964, 492, 643, 281, 611, 536, 257, 707, 857, 544, 4365, 466, 2283, 18515, 293, 370, 322, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.10445737838745117, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.01864904724061489}, {'id': 406, 'seek': 157398, 'start': 1591.98, 'end': 1594.98, 'text': ' Let us talk about that, okay.', 'tokens': [51264, 961, 505, 751, 466, 300, 11, 1392, 13, 51414], 'temperature': 0.0, 'avg_logprob': -0.10445737838745117, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.01864904724061489}, {'id': 407, 'seek': 157398, 'start': 1594.98, 'end': 1602.98, 'text': ' So, typically we access an integer or a float and things like that which are 4 bytes long,', 'tokens': [51414, 407, 11, 5850, 321, 2105, 364, 24922, 420, 257, 15706, 293, 721, 411, 300, 597, 366, 1017, 36088, 938, 11, 51814], 'temperature': 0.0, 'avg_logprob': -0.10445737838745117, 'compression_ratio': 1.5789473684210527, 'no_speech_prob': 0.01864904724061489}, {'id': 408, 'seek': 160298, 'start': 1602.98, 'end': 1603.98, 'text': ' right.', 'tokens': [50364, 558, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.13681100957533893, 'compression_ratio': 1.64, 'no_speech_prob': 0.033891238272190094}, {'id': 409, 'seek': 160298, 'start': 1603.98, 'end': 1607.98, 'text': ' In the computer what we are going to say is that anything which is like 4 bytes long we', 'tokens': [50414, 682, 264, 3820, 437, 321, 366, 516, 281, 584, 307, 300, 1340, 597, 307, 411, 1017, 36088, 938, 321, 50614], 'temperature': 0.0, 'avg_logprob': -0.13681100957533893, 'compression_ratio': 1.64, 'no_speech_prob': 0.033891238272190094}, {'id': 410, 'seek': 160298, 'start': 1607.98, 'end': 1612.98, 'text': ' are going to call that as a word, right.', 'tokens': [50614, 366, 516, 281, 818, 300, 382, 257, 1349, 11, 558, 13, 50864], 'temperature': 0.0, 'avg_logprob': -0.13681100957533893, 'compression_ratio': 1.64, 'no_speech_prob': 0.033891238272190094}, {'id': 411, 'seek': 160298, 'start': 1612.98, 'end': 1622.98, 'text': ' And, okay, did I talk about, let me just go back a couple of slides here, then see whether', 'tokens': [50864, 400, 11, 1392, 11, 630, 286, 751, 466, 11, 718, 385, 445, 352, 646, 257, 1916, 295, 9788, 510, 11, 550, 536, 1968, 51364], 'temperature': 0.0, 'avg_logprob': -0.13681100957533893, 'compression_ratio': 1.64, 'no_speech_prob': 0.033891238272190094}, {'id': 412, 'seek': 160298, 'start': 1622.98, 'end': 1631.98, 'text': ' I did talk about, yeah, okay, I did not talk about it, okay.', 'tokens': [51364, 286, 630, 751, 466, 11, 1338, 11, 1392, 11, 286, 630, 406, 751, 466, 309, 11, 1392, 13, 51814], 'temperature': 0.0, 'avg_logprob': -0.13681100957533893, 'compression_ratio': 1.64, 'no_speech_prob': 0.033891238272190094}, {'id': 413, 'seek': 163198, 'start': 1631.98, 'end': 1641.98, 'text': ' So, we talked about what is the minimum amount of data that you can access from the memory', 'tokens': [50364, 407, 11, 321, 2825, 466, 437, 307, 264, 7285, 2372, 295, 1412, 300, 291, 393, 2105, 490, 264, 4675, 50864], 'temperature': 0.0, 'avg_logprob': -0.11076244266553857, 'compression_ratio': 1.6019417475728155, 'no_speech_prob': 0.0021546517964452505}, {'id': 414, 'seek': 163198, 'start': 1641.98, 'end': 1644.98, 'text': ' which is what we call as byte addressable, okay.', 'tokens': [50864, 597, 307, 437, 321, 818, 382, 40846, 2985, 712, 11, 1392, 13, 51014], 'temperature': 0.0, 'avg_logprob': -0.11076244266553857, 'compression_ratio': 1.6019417475728155, 'no_speech_prob': 0.0021546517964452505}, {'id': 415, 'seek': 163198, 'start': 1644.98, 'end': 1650.38, 'text': ' Then, in a single fetch how much of data can you access?', 'tokens': [51014, 1396, 11, 294, 257, 2167, 23673, 577, 709, 295, 1412, 393, 291, 2105, 30, 51284], 'temperature': 0.0, 'avg_logprob': -0.11076244266553857, 'compression_ratio': 1.6019417475728155, 'no_speech_prob': 0.0021546517964452505}, {'id': 416, 'seek': 163198, 'start': 1650.38, 'end': 1653.98, 'text': ' That is what is called the word length, right.', 'tokens': [51284, 663, 307, 437, 307, 1219, 264, 1349, 4641, 11, 558, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.11076244266553857, 'compression_ratio': 1.6019417475728155, 'no_speech_prob': 0.0021546517964452505}, {'id': 417, 'seek': 163198, 'start': 1653.98, 'end': 1660.94, 'text': ' So, even though each location may consist of only 1 byte, a computer in a single fetch', 'tokens': [51464, 407, 11, 754, 1673, 1184, 4914, 815, 4603, 295, 787, 502, 40846, 11, 257, 3820, 294, 257, 2167, 23673, 51812], 'temperature': 0.0, 'avg_logprob': -0.11076244266553857, 'compression_ratio': 1.6019417475728155, 'no_speech_prob': 0.0021546517964452505}, {'id': 418, 'seek': 166094, 'start': 1660.94, 'end': 1664.9, 'text': ' can possibly get up to 4 bytes together.', 'tokens': [50364, 393, 6264, 483, 493, 281, 1017, 36088, 1214, 13, 50562], 'temperature': 0.0, 'avg_logprob': -0.20977420806884767, 'compression_ratio': 1.7067307692307692, 'no_speech_prob': 0.04281870275735855}, {'id': 419, 'seek': 166094, 'start': 1664.9, 'end': 1669.94, 'text': ' That is what is typically called the word length, right, the maximum amount of data', 'tokens': [50562, 663, 307, 437, 307, 5850, 1219, 264, 1349, 4641, 11, 558, 11, 264, 6674, 2372, 295, 1412, 50814], 'temperature': 0.0, 'avg_logprob': -0.20977420806884767, 'compression_ratio': 1.7067307692307692, 'no_speech_prob': 0.04281870275735855}, {'id': 420, 'seek': 166094, 'start': 1669.94, 'end': 1674.7, 'text': ' which can be fetched in a single location, right.', 'tokens': [50814, 597, 393, 312, 23673, 292, 294, 257, 2167, 4914, 11, 558, 13, 51052], 'temperature': 0.0, 'avg_logprob': -0.20977420806884767, 'compression_ratio': 1.7067307692307692, 'no_speech_prob': 0.04281870275735855}, {'id': 421, 'seek': 166094, 'start': 1674.7, 'end': 1680.3400000000001, 'text': ' And then because of the way in which the memory is organized, right, and the accesses happen,', 'tokens': [51052, 400, 550, 570, 295, 264, 636, 294, 597, 264, 4675, 307, 9983, 11, 558, 11, 293, 264, 2105, 279, 1051, 11, 51334], 'temperature': 0.0, 'avg_logprob': -0.20977420806884767, 'compression_ratio': 1.7067307692307692, 'no_speech_prob': 0.04281870275735855}, {'id': 422, 'seek': 166094, 'start': 1680.3400000000001, 'end': 1686.7, 'text': ' etcetera, etcetera, right, typically these 4 bytes that you try to access, right, will', 'tokens': [51334, 22066, 11, 22066, 11, 558, 11, 5850, 613, 1017, 36088, 300, 291, 853, 281, 2105, 11, 558, 11, 486, 51652], 'temperature': 0.0, 'avg_logprob': -0.20977420806884767, 'compression_ratio': 1.7067307692307692, 'no_speech_prob': 0.04281870275735855}, {'id': 423, 'seek': 168670, 'start': 1687.7, 'end': 1697.1000000000001, 'text': ' as 4 consecutive bytes only if it is starting from an address which is divisible by 4, right.', 'tokens': [50414, 382, 1017, 30497, 36088, 787, 498, 309, 307, 2891, 490, 364, 2985, 597, 307, 25974, 964, 538, 1017, 11, 558, 13, 50884], 'temperature': 0.0, 'avg_logprob': -0.17093536853790284, 'compression_ratio': 1.8860759493670887, 'no_speech_prob': 0.5513002872467041}, {'id': 424, 'seek': 168670, 'start': 1697.1000000000001, 'end': 1704.1000000000001, 'text': ' By that what I mean is if you say fetch me 4 bytes starting from 400, right, it will', 'tokens': [50884, 3146, 300, 437, 286, 914, 307, 498, 291, 584, 23673, 385, 1017, 36088, 2891, 490, 8423, 11, 558, 11, 309, 486, 51234], 'temperature': 0.0, 'avg_logprob': -0.17093536853790284, 'compression_ratio': 1.8860759493670887, 'no_speech_prob': 0.5513002872467041}, {'id': 425, 'seek': 168670, 'start': 1704.1000000000001, 'end': 1708.3400000000001, 'text': ' fetch these 4 bytes, okay.', 'tokens': [51234, 23673, 613, 1017, 36088, 11, 1392, 13, 51446], 'temperature': 0.0, 'avg_logprob': -0.17093536853790284, 'compression_ratio': 1.8860759493670887, 'no_speech_prob': 0.5513002872467041}, {'id': 426, 'seek': 168670, 'start': 1708.3400000000001, 'end': 1714.42, 'text': ' But if you say fetch me 4 bytes starting from 402 which is an address which is not divisible', 'tokens': [51446, 583, 498, 291, 584, 23673, 385, 1017, 36088, 2891, 490, 3356, 17, 597, 307, 364, 2985, 597, 307, 406, 25974, 964, 51750], 'temperature': 0.0, 'avg_logprob': -0.17093536853790284, 'compression_ratio': 1.8860759493670887, 'no_speech_prob': 0.5513002872467041}, {'id': 427, 'seek': 171442, 'start': 1714.42, 'end': 1721.42, 'text': ' by 4, right, depending on how the processor is, most of the process today can actually', 'tokens': [50364, 538, 1017, 11, 558, 11, 5413, 322, 577, 264, 15321, 307, 11, 881, 295, 264, 1399, 965, 393, 767, 50714], 'temperature': 0.0, 'avg_logprob': -0.16063715219497682, 'compression_ratio': 1.668421052631579, 'no_speech_prob': 0.023574348539114}, {'id': 428, 'seek': 171442, 'start': 1721.9, 'end': 1727.66, 'text': ' access this 4 bytes of information starting from 402.', 'tokens': [50738, 2105, 341, 1017, 36088, 295, 1589, 2891, 490, 3356, 17, 13, 51026], 'temperature': 0.0, 'avg_logprob': -0.16063715219497682, 'compression_ratio': 1.668421052631579, 'no_speech_prob': 0.023574348539114}, {'id': 429, 'seek': 171442, 'start': 1727.66, 'end': 1732.8600000000001, 'text': ' But what it is going to do is that whenever it makes an access, the 4 bytes that come', 'tokens': [51026, 583, 437, 309, 307, 516, 281, 360, 307, 300, 5699, 309, 1669, 364, 2105, 11, 264, 1017, 36088, 300, 808, 51286], 'temperature': 0.0, 'avg_logprob': -0.16063715219497682, 'compression_ratio': 1.668421052631579, 'no_speech_prob': 0.023574348539114}, {'id': 430, 'seek': 171442, 'start': 1732.8600000000001, 'end': 1739.8600000000001, 'text': ' together will always be these 4 bytes or those 4 bytes, okay, never these 4 bytes, can you', 'tokens': [51286, 1214, 486, 1009, 312, 613, 1017, 36088, 420, 729, 1017, 36088, 11, 1392, 11, 1128, 613, 1017, 36088, 11, 393, 291, 51636], 'temperature': 0.0, 'avg_logprob': -0.16063715219497682, 'compression_ratio': 1.668421052631579, 'no_speech_prob': 0.023574348539114}, {'id': 431, 'seek': 174442, 'start': 1744.42, 'end': 1745.42, 'text': ' understand, correct.', 'tokens': [50364, 1223, 11, 3006, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.24600840162956852, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.010386945679783821}, {'id': 432, 'seek': 174442, 'start': 1745.42, 'end': 1751.7, 'text': ' That means that if you want to access 4 bytes of information from 402, the processor says', 'tokens': [50414, 663, 1355, 300, 498, 291, 528, 281, 2105, 1017, 36088, 295, 1589, 490, 3356, 17, 11, 264, 15321, 1619, 50728], 'temperature': 0.0, 'avg_logprob': -0.24600840162956852, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.010386945679783821}, {'id': 433, 'seek': 174442, 'start': 1751.7, 'end': 1758.42, 'text': ' okay I want to access 4 bytes of information, but I will split this as 2 accesses, right,', 'tokens': [50728, 1392, 286, 528, 281, 2105, 1017, 36088, 295, 1589, 11, 457, 286, 486, 7472, 341, 382, 568, 2105, 279, 11, 558, 11, 51064], 'temperature': 0.0, 'avg_logprob': -0.24600840162956852, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.010386945679783821}, {'id': 434, 'seek': 174442, 'start': 1758.42, 'end': 1765.18, 'text': ' one access with these 4 bytes and another access with those 4 bytes and then I rearrange', 'tokens': [51064, 472, 2105, 365, 613, 1017, 36088, 293, 1071, 2105, 365, 729, 1017, 36088, 293, 550, 286, 39568, 51402], 'temperature': 0.0, 'avg_logprob': -0.24600840162956852, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.010386945679783821}, {'id': 435, 'seek': 174442, 'start': 1765.18, 'end': 1768.7, 'text': ' them to give you the 4 bytes that you want, okay.', 'tokens': [51402, 552, 281, 976, 291, 264, 1017, 36088, 300, 291, 528, 11, 1392, 13, 51578], 'temperature': 0.0, 'avg_logprob': -0.24600840162956852, 'compression_ratio': 1.8225806451612903, 'no_speech_prob': 0.010386945679783821}, {'id': 436, 'seek': 176870, 'start': 1769.3400000000001, 'end': 1775.74, 'text': ' So that is the importance of word alignment, right.', 'tokens': [50396, 407, 300, 307, 264, 7379, 295, 1349, 18515, 11, 558, 13, 50716], 'temperature': 0.0, 'avg_logprob': -0.16600773884699896, 'compression_ratio': 1.6483516483516483, 'no_speech_prob': 0.028602100908756256}, {'id': 437, 'seek': 176870, 'start': 1775.74, 'end': 1780.74, 'text': ' So that is captured in the next slide, let us talk about that, okay.', 'tokens': [50716, 407, 300, 307, 11828, 294, 264, 958, 4137, 11, 718, 505, 751, 466, 300, 11, 1392, 13, 50966], 'temperature': 0.0, 'avg_logprob': -0.16600773884699896, 'compression_ratio': 1.6483516483516483, 'no_speech_prob': 0.028602100908756256}, {'id': 438, 'seek': 176870, 'start': 1780.74, 'end': 1787.74, 'text': ' A variable, an integer variable which is 4 bytes long is said to be aligned, word aligned', 'tokens': [50966, 316, 7006, 11, 364, 24922, 7006, 597, 307, 1017, 36088, 938, 307, 848, 281, 312, 17962, 11, 1349, 17962, 51316], 'temperature': 0.0, 'avg_logprob': -0.16600773884699896, 'compression_ratio': 1.6483516483516483, 'no_speech_prob': 0.028602100908756256}, {'id': 439, 'seek': 176870, 'start': 1788.8400000000001, 'end': 1795.46, 'text': ' if it starts from an address which is divisible by 4 because if it is divisible by 4 that', 'tokens': [51371, 498, 309, 3719, 490, 364, 2985, 597, 307, 25974, 964, 538, 1017, 570, 498, 309, 307, 25974, 964, 538, 1017, 300, 51702], 'temperature': 0.0, 'avg_logprob': -0.16600773884699896, 'compression_ratio': 1.6483516483516483, 'no_speech_prob': 0.028602100908756256}, {'id': 440, 'seek': 179546, 'start': 1795.46, 'end': 1798.5, 'text': ' word can be accessed in a single fetch.', 'tokens': [50364, 1349, 393, 312, 34211, 294, 257, 2167, 23673, 13, 50516], 'temperature': 0.0, 'avg_logprob': -0.22274197169712612, 'compression_ratio': 1.668103448275862, 'no_speech_prob': 0.005672693718224764}, {'id': 441, 'seek': 179546, 'start': 1798.5, 'end': 1803.82, 'text': ' If it is not divisible by 4, it will still fetch it and give it to you, but it might', 'tokens': [50516, 759, 309, 307, 406, 25974, 964, 538, 1017, 11, 309, 486, 920, 23673, 309, 293, 976, 309, 281, 291, 11, 457, 309, 1062, 50782], 'temperature': 0.0, 'avg_logprob': -0.22274197169712612, 'compression_ratio': 1.668103448275862, 'no_speech_prob': 0.005672693718224764}, {'id': 442, 'seek': 179546, 'start': 1803.82, 'end': 1806.18, 'text': ' take multiple accesses.', 'tokens': [50782, 747, 3866, 2105, 279, 13, 50900], 'temperature': 0.0, 'avg_logprob': -0.22274197169712612, 'compression_ratio': 1.668103448275862, 'no_speech_prob': 0.005672693718224764}, {'id': 443, 'seek': 179546, 'start': 1806.18, 'end': 1808.02, 'text': ' What is the problem with multiple accesses?', 'tokens': [50900, 708, 307, 264, 1154, 365, 3866, 2105, 279, 30, 50992], 'temperature': 0.0, 'avg_logprob': -0.22274197169712612, 'compression_ratio': 1.668103448275862, 'no_speech_prob': 0.005672693718224764}, {'id': 444, 'seek': 179546, 'start': 1808.02, 'end': 1813.8600000000001, 'text': ' More time, right, it is going to take more time to get that data.', 'tokens': [50992, 5048, 565, 11, 558, 11, 309, 307, 516, 281, 747, 544, 565, 281, 483, 300, 1412, 13, 51284], 'temperature': 0.0, 'avg_logprob': -0.22274197169712612, 'compression_ratio': 1.668103448275862, 'no_speech_prob': 0.005672693718224764}, {'id': 445, 'seek': 179546, 'start': 1813.8600000000001, 'end': 1817.46, 'text': ' Therefore, you want your data to be word aligned, okay.', 'tokens': [51284, 7504, 11, 291, 528, 428, 1412, 281, 312, 1349, 17962, 11, 1392, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.22274197169712612, 'compression_ratio': 1.668103448275862, 'no_speech_prob': 0.005672693718224764}, {'id': 446, 'seek': 179546, 'start': 1817.46, 'end': 1820.94, 'text': ' Is there anything that the compiler needs to worry about word alignment?', 'tokens': [51464, 1119, 456, 1340, 300, 264, 31958, 2203, 281, 3292, 466, 1349, 18515, 30, 51638], 'temperature': 0.0, 'avg_logprob': -0.22274197169712612, 'compression_ratio': 1.668103448275862, 'no_speech_prob': 0.005672693718224764}, {'id': 447, 'seek': 182094, 'start': 1821.9, 'end': 1825.8200000000002, 'text': ' Immediately that is what the question is, this entire lecture is on compilers.', 'tokens': [50412, 34457, 300, 307, 437, 264, 1168, 307, 11, 341, 2302, 7991, 307, 322, 715, 388, 433, 13, 50608], 'temperature': 0.0, 'avg_logprob': -0.2592300552505631, 'compression_ratio': 1.6937269372693726, 'no_speech_prob': 0.03878004848957062}, {'id': 448, 'seek': 182094, 'start': 1825.8200000000002, 'end': 1830.38, 'text': ' So anything and everything that we talk about should be somewhat related to compiler.', 'tokens': [50608, 407, 1340, 293, 1203, 300, 321, 751, 466, 820, 312, 8344, 4077, 281, 31958, 13, 50836], 'temperature': 0.0, 'avg_logprob': -0.2592300552505631, 'compression_ratio': 1.6937269372693726, 'no_speech_prob': 0.03878004848957062}, {'id': 449, 'seek': 182094, 'start': 1830.38, 'end': 1834.42, 'text': ' Otherwise you can say that I am wasting my time doing something else.', 'tokens': [50836, 10328, 291, 393, 584, 300, 286, 669, 20457, 452, 565, 884, 746, 1646, 13, 51038], 'temperature': 0.0, 'avg_logprob': -0.2592300552505631, 'compression_ratio': 1.6937269372693726, 'no_speech_prob': 0.03878004848957062}, {'id': 450, 'seek': 182094, 'start': 1834.42, 'end': 1835.42, 'text': ' Sorry?', 'tokens': [51038, 4919, 30, 51088], 'temperature': 0.0, 'avg_logprob': -0.2592300552505631, 'compression_ratio': 1.6937269372693726, 'no_speech_prob': 0.03878004848957062}, {'id': 451, 'seek': 182094, 'start': 1835.42, 'end': 1839.42, 'text': ' It will require more registers.', 'tokens': [51088, 467, 486, 3651, 544, 38351, 13, 51288], 'temperature': 0.0, 'avg_logprob': -0.2592300552505631, 'compression_ratio': 1.6937269372693726, 'no_speech_prob': 0.03878004848957062}, {'id': 452, 'seek': 182094, 'start': 1839.42, 'end': 1842.7, 'text': ' No, we will come to that register part little later.', 'tokens': [51288, 883, 11, 321, 486, 808, 281, 300, 7280, 644, 707, 1780, 13, 51452], 'temperature': 0.0, 'avg_logprob': -0.2592300552505631, 'compression_ratio': 1.6937269372693726, 'no_speech_prob': 0.03878004848957062}, {'id': 453, 'seek': 182094, 'start': 1842.7, 'end': 1845.3, 'text': ' This is from an allocation point of view.', 'tokens': [51452, 639, 307, 490, 364, 27599, 935, 295, 1910, 13, 51582], 'temperature': 0.0, 'avg_logprob': -0.2592300552505631, 'compression_ratio': 1.6937269372693726, 'no_speech_prob': 0.03878004848957062}, {'id': 454, 'seek': 182094, 'start': 1845.3, 'end': 1850.8600000000001, 'text': ' So whenever you allocate a word, right, the compiler has to make sure that this allocation', 'tokens': [51582, 407, 5699, 291, 35713, 257, 1349, 11, 558, 11, 264, 31958, 575, 281, 652, 988, 300, 341, 27599, 51860], 'temperature': 0.0, 'avg_logprob': -0.2592300552505631, 'compression_ratio': 1.6937269372693726, 'no_speech_prob': 0.03878004848957062}, {'id': 455, 'seek': 185086, 'start': 1850.86, 'end': 1857.78, 'text': ' is in an address which starts from an address which is divisible by 4, okay.', 'tokens': [50364, 307, 294, 364, 2985, 597, 3719, 490, 364, 2985, 597, 307, 25974, 964, 538, 1017, 11, 1392, 13, 50710], 'temperature': 0.0, 'avg_logprob': -0.2914514026126346, 'compression_ratio': 1.6453488372093024, 'no_speech_prob': 0.01335147675126791}, {'id': 456, 'seek': 185086, 'start': 1857.78, 'end': 1862.78, 'text': ' We talked about allocation of variables, right.', 'tokens': [50710, 492, 2825, 466, 27599, 295, 9102, 11, 558, 13, 50960], 'temperature': 0.0, 'avg_logprob': -0.2914514026126346, 'compression_ratio': 1.6453488372093024, 'no_speech_prob': 0.01335147675126791}, {'id': 457, 'seek': 185086, 'start': 1862.78, 'end': 1866.1399999999999, 'text': ' So all of you are familiar with C program, correct.', 'tokens': [50960, 407, 439, 295, 291, 366, 4963, 365, 383, 1461, 11, 3006, 13, 51128], 'temperature': 0.0, 'avg_logprob': -0.2914514026126346, 'compression_ratio': 1.6453488372093024, 'no_speech_prob': 0.01335147675126791}, {'id': 458, 'seek': 185086, 'start': 1866.1399999999999, 'end': 1869.74, 'text': ' So where are your local variables stored?', 'tokens': [51128, 407, 689, 366, 428, 2654, 9102, 12187, 30, 51308], 'temperature': 0.0, 'avg_logprob': -0.2914514026126346, 'compression_ratio': 1.6453488372093024, 'no_speech_prob': 0.01335147675126791}, {'id': 459, 'seek': 185086, 'start': 1869.74, 'end': 1875.86, 'text': ' Stack, right, local variables.', 'tokens': [51308, 37649, 11, 558, 11, 2654, 9102, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.2914514026126346, 'compression_ratio': 1.6453488372093024, 'no_speech_prob': 0.01335147675126791}, {'id': 460, 'seek': 185086, 'start': 1875.86, 'end': 1878.9799999999998, 'text': ' What about your global variables?', 'tokens': [51614, 708, 466, 428, 4338, 9102, 30, 51770], 'temperature': 0.0, 'avg_logprob': -0.2914514026126346, 'compression_ratio': 1.6453488372093024, 'no_speech_prob': 0.01335147675126791}, {'id': 461, 'seek': 187898, 'start': 1878.98, 'end': 1884.26, 'text': ' Data, somebody said data, who said data?', 'tokens': [50364, 11888, 11, 2618, 848, 1412, 11, 567, 848, 1412, 30, 50628], 'temperature': 0.0, 'avg_logprob': -0.26907381693522137, 'compression_ratio': 1.6204819277108433, 'no_speech_prob': 0.01105803344398737}, {'id': 462, 'seek': 187898, 'start': 1884.26, 'end': 1891.46, 'text': ' Yeah, I said data segment, right, data segment, okay.', 'tokens': [50628, 865, 11, 286, 848, 1412, 9469, 11, 558, 11, 1412, 9469, 11, 1392, 13, 50988], 'temperature': 0.0, 'avg_logprob': -0.26907381693522137, 'compression_ratio': 1.6204819277108433, 'no_speech_prob': 0.01105803344398737}, {'id': 463, 'seek': 187898, 'start': 1891.46, 'end': 1895.6200000000001, 'text': ' Heap, what is stored in the heap?', 'tokens': [50988, 634, 569, 11, 437, 307, 12187, 294, 264, 33591, 30, 51196], 'temperature': 0.0, 'avg_logprob': -0.26907381693522137, 'compression_ratio': 1.6204819277108433, 'no_speech_prob': 0.01105803344398737}, {'id': 464, 'seek': 187898, 'start': 1895.6200000000001, 'end': 1899.14, 'text': ' Dynamically allocated variables, okay, right.', 'tokens': [51196, 22947, 984, 29772, 9102, 11, 1392, 11, 558, 13, 51372], 'temperature': 0.0, 'avg_logprob': -0.26907381693522137, 'compression_ratio': 1.6204819277108433, 'no_speech_prob': 0.01105803344398737}, {'id': 465, 'seek': 187898, 'start': 1899.14, 'end': 1908.02, 'text': ' So let us particularly look at the data segment and the stack, okay, and these two are largely', 'tokens': [51372, 407, 718, 505, 4098, 574, 412, 264, 1412, 9469, 293, 264, 8630, 11, 1392, 11, 293, 613, 732, 366, 11611, 51816], 'temperature': 0.0, 'avg_logprob': -0.26907381693522137, 'compression_ratio': 1.6204819277108433, 'no_speech_prob': 0.01105803344398737}, {'id': 466, 'seek': 190802, 'start': 1908.02, 'end': 1910.3, 'text': ' controlled by the compiler, right.', 'tokens': [50364, 10164, 538, 264, 31958, 11, 558, 13, 50478], 'temperature': 0.0, 'avg_logprob': -0.20666060286961244, 'compression_ratio': 1.6395939086294415, 'no_speech_prob': 0.09187354147434235}, {'id': 467, 'seek': 190802, 'start': 1910.3, 'end': 1916.66, 'text': ' So when you declare, let us say, an array of integers, let us say, right, in an integer', 'tokens': [50478, 407, 562, 291, 19710, 11, 718, 505, 584, 11, 364, 10225, 295, 41674, 11, 718, 505, 584, 11, 558, 11, 294, 364, 24922, 50796], 'temperature': 0.0, 'avg_logprob': -0.20666060286961244, 'compression_ratio': 1.6395939086294415, 'no_speech_prob': 0.09187354147434235}, {'id': 468, 'seek': 190802, 'start': 1916.66, 'end': 1921.62, 'text': ' array a 100, right, that means that there are 100 elements in the array, each element', 'tokens': [50796, 10225, 257, 2319, 11, 558, 11, 300, 1355, 300, 456, 366, 2319, 4959, 294, 264, 10225, 11, 1184, 4478, 51044], 'temperature': 0.0, 'avg_logprob': -0.20666060286961244, 'compression_ratio': 1.6395939086294415, 'no_speech_prob': 0.09187354147434235}, {'id': 469, 'seek': 190802, 'start': 1921.62, 'end': 1924.62, 'text': ' is 4 byte long, correct.', 'tokens': [51044, 307, 1017, 40846, 938, 11, 3006, 13, 51194], 'temperature': 0.0, 'avg_logprob': -0.20666060286961244, 'compression_ratio': 1.6395939086294415, 'no_speech_prob': 0.09187354147434235}, {'id': 470, 'seek': 190802, 'start': 1924.62, 'end': 1930.9, 'text': ' If it starts this array in an address which is not divisible by 4, then every one of that', 'tokens': [51194, 759, 309, 3719, 341, 10225, 294, 364, 2985, 597, 307, 406, 25974, 964, 538, 1017, 11, 550, 633, 472, 295, 300, 51508], 'temperature': 0.0, 'avg_logprob': -0.20666060286961244, 'compression_ratio': 1.6395939086294415, 'no_speech_prob': 0.09187354147434235}, {'id': 471, 'seek': 193090, 'start': 1931.9, 'end': 1938.5, 'text': ' right, is going to be, when it is accessed, is going to incur additional cost.', 'tokens': [50414, 558, 11, 307, 516, 281, 312, 11, 562, 309, 307, 34211, 11, 307, 516, 281, 35774, 4497, 2063, 13, 50744], 'temperature': 0.0, 'avg_logprob': -0.16519127269782644, 'compression_ratio': 1.751131221719457, 'no_speech_prob': 0.1349629908800125}, {'id': 472, 'seek': 193090, 'start': 1938.5, 'end': 1943.66, 'text': ' So the compiler would be clever enough to start this array, right, from a location which', 'tokens': [50744, 407, 264, 31958, 576, 312, 13494, 1547, 281, 722, 341, 10225, 11, 558, 11, 490, 257, 4914, 597, 51002], 'temperature': 0.0, 'avg_logprob': -0.16519127269782644, 'compression_ratio': 1.751131221719457, 'no_speech_prob': 0.1349629908800125}, {'id': 473, 'seek': 193090, 'start': 1943.66, 'end': 1948.38, 'text': ' is an address which is divisible by 4, right.', 'tokens': [51002, 307, 364, 2985, 597, 307, 25974, 964, 538, 1017, 11, 558, 13, 51238], 'temperature': 0.0, 'avg_logprob': -0.16519127269782644, 'compression_ratio': 1.751131221719457, 'no_speech_prob': 0.1349629908800125}, {'id': 474, 'seek': 193090, 'start': 1948.38, 'end': 1953.18, 'text': ' But if I do everything divisible by 4, there should not be a problem at all, right.', 'tokens': [51238, 583, 498, 286, 360, 1203, 25974, 964, 538, 1017, 11, 456, 820, 406, 312, 257, 1154, 412, 439, 11, 558, 13, 51478], 'temperature': 0.0, 'avg_logprob': -0.16519127269782644, 'compression_ratio': 1.751131221719457, 'no_speech_prob': 0.1349629908800125}, {'id': 475, 'seek': 193090, 'start': 1953.18, 'end': 1959.74, 'text': ' But in between I could have a variable which is short or character, right, and that could', 'tokens': [51478, 583, 294, 1296, 286, 727, 362, 257, 7006, 597, 307, 2099, 420, 2517, 11, 558, 11, 293, 300, 727, 51806], 'temperature': 0.0, 'avg_logprob': -0.16519127269782644, 'compression_ratio': 1.751131221719457, 'no_speech_prob': 0.1349629908800125}, {'id': 476, 'seek': 195974, 'start': 1959.74, 'end': 1964.28, 'text': ' throw off what comes later, right.', 'tokens': [50364, 3507, 766, 437, 1487, 1780, 11, 558, 13, 50591], 'temperature': 0.0, 'avg_logprob': -0.18268938153703637, 'compression_ratio': 1.7449392712550607, 'no_speech_prob': 0.025221768766641617}, {'id': 477, 'seek': 195974, 'start': 1964.28, 'end': 1968.46, 'text': ' So whenever it says, okay, I am going to declare a large array or I am going to declare a set', 'tokens': [50591, 407, 5699, 309, 1619, 11, 1392, 11, 286, 669, 516, 281, 19710, 257, 2416, 10225, 420, 286, 669, 516, 281, 19710, 257, 992, 50800], 'temperature': 0.0, 'avg_logprob': -0.18268938153703637, 'compression_ratio': 1.7449392712550607, 'no_speech_prob': 0.025221768766641617}, {'id': 478, 'seek': 195974, 'start': 1968.46, 'end': 1974.06, 'text': ' of integers, the compiler should necessarily make sure that they start from an address', 'tokens': [50800, 295, 41674, 11, 264, 31958, 820, 4725, 652, 988, 300, 436, 722, 490, 364, 2985, 51080], 'temperature': 0.0, 'avg_logprob': -0.18268938153703637, 'compression_ratio': 1.7449392712550607, 'no_speech_prob': 0.025221768766641617}, {'id': 479, 'seek': 195974, 'start': 1974.06, 'end': 1975.06, 'text': ' which is aligned.', 'tokens': [51080, 597, 307, 17962, 13, 51130], 'temperature': 0.0, 'avg_logprob': -0.18268938153703637, 'compression_ratio': 1.7449392712550607, 'no_speech_prob': 0.025221768766641617}, {'id': 480, 'seek': 195974, 'start': 1975.06, 'end': 1979.54, 'text': ' So it will actually do certain things so that it gets aligned, right.', 'tokens': [51130, 407, 309, 486, 767, 360, 1629, 721, 370, 300, 309, 2170, 17962, 11, 558, 13, 51354], 'temperature': 0.0, 'avg_logprob': -0.18268938153703637, 'compression_ratio': 1.7449392712550607, 'no_speech_prob': 0.025221768766641617}, {'id': 481, 'seek': 195974, 'start': 1979.54, 'end': 1982.5, 'text': ' So that is the importance of that, okay.', 'tokens': [51354, 407, 300, 307, 264, 7379, 295, 300, 11, 1392, 13, 51502], 'temperature': 0.0, 'avg_logprob': -0.18268938153703637, 'compression_ratio': 1.7449392712550607, 'no_speech_prob': 0.025221768766641617}, {'id': 482, 'seek': 195974, 'start': 1982.5, 'end': 1987.6200000000001, 'text': ' When you do dynamic allocation, you ask for certain amount of memory location and then', 'tokens': [51502, 1133, 291, 360, 8546, 27599, 11, 291, 1029, 337, 1629, 2372, 295, 4675, 4914, 293, 550, 51758], 'temperature': 0.0, 'avg_logprob': -0.18268938153703637, 'compression_ratio': 1.7449392712550607, 'no_speech_prob': 0.025221768766641617}, {'id': 483, 'seek': 198762, 'start': 1987.6599999999999, 'end': 1992.58, 'text': ' again depending on what it is, the compiler would say that, okay, ask this as 4 consecutive', 'tokens': [50366, 797, 5413, 322, 437, 309, 307, 11, 264, 31958, 576, 584, 300, 11, 1392, 11, 1029, 341, 382, 1017, 30497, 50612], 'temperature': 0.0, 'avg_logprob': -0.4403261184692383, 'compression_ratio': 1.6891385767790261, 'no_speech_prob': 0.180624857544899}, {'id': 484, 'seek': 198762, 'start': 1992.58, 'end': 1995.58, 'text': ' bytes or whatever, okay.', 'tokens': [50612, 36088, 420, 2035, 11, 1392, 13, 50762], 'temperature': 0.0, 'avg_logprob': -0.4403261184692383, 'compression_ratio': 1.6891385767790261, 'no_speech_prob': 0.180624857544899}, {'id': 485, 'seek': 198762, 'start': 1995.58, 'end': 1996.8999999999999, 'text': ' All right.', 'tokens': [50762, 1057, 558, 13, 50828], 'temperature': 0.0, 'avg_logprob': -0.4403261184692383, 'compression_ratio': 1.6891385767790261, 'no_speech_prob': 0.180624857544899}, {'id': 486, 'seek': 198762, 'start': 1996.8999999999999, 'end': 2001.9799999999998, 'text': ' So we talked about the word size which is the maximum amount of data, yes.', 'tokens': [50828, 407, 321, 2825, 466, 264, 1349, 2744, 597, 307, 264, 6674, 2372, 295, 1412, 11, 2086, 13, 51082], 'temperature': 0.0, 'avg_logprob': -0.4403261184692383, 'compression_ratio': 1.6891385767790261, 'no_speech_prob': 0.180624857544899}, {'id': 487, 'seek': 198762, 'start': 2001.9799999999998, 'end': 2008.9799999999998, 'text': ' Sir, you mentioned that it would always try to find out addresses which are starting from', 'tokens': [51082, 6144, 11, 291, 2835, 300, 309, 576, 1009, 853, 281, 915, 484, 16862, 597, 366, 2891, 490, 51432], 'temperature': 0.0, 'avg_logprob': -0.4403261184692383, 'compression_ratio': 1.6891385767790261, 'no_speech_prob': 0.180624857544899}, {'id': 488, 'seek': 198762, 'start': 2008.9799999999998, 'end': 2009.9799999999998, 'text': ' which are equal to the address.', 'tokens': [51432, 597, 366, 2681, 281, 264, 2985, 13, 51482], 'temperature': 0.0, 'avg_logprob': -0.4403261184692383, 'compression_ratio': 1.6891385767790261, 'no_speech_prob': 0.180624857544899}, {'id': 489, 'seek': 198762, 'start': 2009.9799999999998, 'end': 2010.9799999999998, 'text': " So wouldn't there be memory which is the first?", 'tokens': [51482, 407, 2759, 380, 456, 312, 4675, 597, 307, 264, 700, 30, 51532], 'temperature': 0.0, 'avg_logprob': -0.4403261184692383, 'compression_ratio': 1.6891385767790261, 'no_speech_prob': 0.180624857544899}, {'id': 490, 'seek': 198762, 'start': 2010.9799999999998, 'end': 2012.3799999999999, 'text': ' Absolutely, okay.', 'tokens': [51532, 7021, 11, 1392, 13, 51602], 'temperature': 0.0, 'avg_logprob': -0.4403261184692383, 'compression_ratio': 1.6891385767790261, 'no_speech_prob': 0.180624857544899}, {'id': 491, 'seek': 198762, 'start': 2012.3799999999999, 'end': 2016.26, 'text': ' So let us try that you try to do the following thing, right.', 'tokens': [51602, 407, 718, 505, 853, 300, 291, 853, 281, 360, 264, 3480, 551, 11, 558, 13, 51796], 'temperature': 0.0, 'avg_logprob': -0.4403261184692383, 'compression_ratio': 1.6891385767790261, 'no_speech_prob': 0.180624857544899}, {'id': 492, 'seek': 201626, 'start': 2016.26, 'end': 2022.34, 'text': ' You write a program in which either in your local variable or in your global variable,', 'tokens': [50364, 509, 2464, 257, 1461, 294, 597, 2139, 294, 428, 2654, 7006, 420, 294, 428, 4338, 7006, 11, 50668], 'temperature': 0.0, 'avg_logprob': -0.1498566699284379, 'compression_ratio': 2.0208333333333335, 'no_speech_prob': 0.05685122311115265}, {'id': 493, 'seek': 201626, 'start': 2022.34, 'end': 2029.06, 'text': ' you declare one short integer followed by one array of integers, again a short integer', 'tokens': [50668, 291, 19710, 472, 2099, 24922, 6263, 538, 472, 10225, 295, 41674, 11, 797, 257, 2099, 24922, 51004], 'temperature': 0.0, 'avg_logprob': -0.1498566699284379, 'compression_ratio': 2.0208333333333335, 'no_speech_prob': 0.05685122311115265}, {'id': 494, 'seek': 201626, 'start': 2029.06, 'end': 2034.26, 'text': ' followed by an array of integers, short integer followed by an array of integers.', 'tokens': [51004, 6263, 538, 364, 10225, 295, 41674, 11, 2099, 24922, 6263, 538, 364, 10225, 295, 41674, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.1498566699284379, 'compression_ratio': 2.0208333333333335, 'no_speech_prob': 0.05685122311115265}, {'id': 495, 'seek': 201626, 'start': 2034.26, 'end': 2040.22, 'text': ' Between every short integer and the array of integers, it will waste 2 bytes, okay.', 'tokens': [51264, 18967, 633, 2099, 24922, 293, 264, 10225, 295, 41674, 11, 309, 486, 5964, 568, 36088, 11, 1392, 13, 51562], 'temperature': 0.0, 'avg_logprob': -0.1498566699284379, 'compression_ratio': 2.0208333333333335, 'no_speech_prob': 0.05685122311115265}, {'id': 496, 'seek': 201626, 'start': 2040.22, 'end': 2043.1, 'text': ' Do we really care about it?', 'tokens': [51562, 1144, 321, 534, 1127, 466, 309, 30, 51706], 'temperature': 0.0, 'avg_logprob': -0.1498566699284379, 'compression_ratio': 2.0208333333333335, 'no_speech_prob': 0.05685122311115265}, {'id': 497, 'seek': 201626, 'start': 2043.1, 'end': 2044.94, 'text': ' Probably not, right.', 'tokens': [51706, 9210, 406, 11, 558, 13, 51798], 'temperature': 0.0, 'avg_logprob': -0.1498566699284379, 'compression_ratio': 2.0208333333333335, 'no_speech_prob': 0.05685122311115265}, {'id': 498, 'seek': 204494, 'start': 2044.94, 'end': 2052.06, 'text': ' Because you have 2 power 32 or 2 power 40 locations, right.', 'tokens': [50364, 1436, 291, 362, 568, 1347, 8858, 420, 568, 1347, 3356, 9253, 11, 558, 13, 50720], 'temperature': 0.0, 'avg_logprob': -0.3068273899167083, 'compression_ratio': 1.7551020408163265, 'no_speech_prob': 0.28819185495376587}, {'id': 499, 'seek': 204494, 'start': 2052.06, 'end': 2053.66, 'text': ' Two locations does not really matter.', 'tokens': [50720, 4453, 9253, 775, 406, 534, 1871, 13, 50800], 'temperature': 0.0, 'avg_logprob': -0.3068273899167083, 'compression_ratio': 1.7551020408163265, 'no_speech_prob': 0.28819185495376587}, {'id': 500, 'seek': 204494, 'start': 2053.66, 'end': 2057.62, 'text': ' Two locations in 2 billion locations does not really matter, right.', 'tokens': [50800, 4453, 9253, 294, 568, 5218, 9253, 775, 406, 534, 1871, 11, 558, 13, 50998], 'temperature': 0.0, 'avg_logprob': -0.3068273899167083, 'compression_ratio': 1.7551020408163265, 'no_speech_prob': 0.28819185495376587}, {'id': 501, 'seek': 204494, 'start': 2057.62, 'end': 2060.5, 'text': ' The efficiency of access is important, right.', 'tokens': [50998, 440, 10493, 295, 2105, 307, 1021, 11, 558, 13, 51142], 'temperature': 0.0, 'avg_logprob': -0.3068273899167083, 'compression_ratio': 1.7551020408163265, 'no_speech_prob': 0.28819185495376587}, {'id': 502, 'seek': 204494, 'start': 2060.5, 'end': 2064.46, 'text': ' Good, good, good question, right.', 'tokens': [51142, 2205, 11, 665, 11, 665, 1168, 11, 558, 13, 51340], 'temperature': 0.0, 'avg_logprob': -0.3068273899167083, 'compression_ratio': 1.7551020408163265, 'no_speech_prob': 0.28819185495376587}, {'id': 503, 'seek': 204494, 'start': 2064.46, 'end': 2065.46, 'text': ' Okay.', 'tokens': [51340, 1033, 13, 51390], 'temperature': 0.0, 'avg_logprob': -0.3068273899167083, 'compression_ratio': 1.7551020408163265, 'no_speech_prob': 0.28819185495376587}, {'id': 504, 'seek': 204494, 'start': 2065.46, 'end': 2073.94, 'text': ' So word alignment essentially refers to words which are aligned to the quad word boundaries,', 'tokens': [51390, 407, 1349, 18515, 4476, 14942, 281, 2283, 597, 366, 17962, 281, 264, 10787, 1349, 13180, 11, 51814], 'temperature': 0.0, 'avg_logprob': -0.3068273899167083, 'compression_ratio': 1.7551020408163265, 'no_speech_prob': 0.28819185495376587}, {'id': 505, 'seek': 207394, 'start': 2074.54, 'end': 2075.54, 'text': ' okay.', 'tokens': [50394, 1392, 13, 50444], 'temperature': 0.0, 'avg_logprob': -0.23353946639830808, 'compression_ratio': 1.5327102803738317, 'no_speech_prob': 0.009109335020184517}, {'id': 506, 'seek': 207394, 'start': 2075.54, 'end': 2082.54, 'text': ' That is very quickly what we want to talk about basic computer systems and organization', 'tokens': [50444, 663, 307, 588, 2661, 437, 321, 528, 281, 751, 466, 3875, 3820, 3652, 293, 4475, 50794], 'temperature': 0.0, 'avg_logprob': -0.23353946639830808, 'compression_ratio': 1.5327102803738317, 'no_speech_prob': 0.009109335020184517}, {'id': 507, 'seek': 207394, 'start': 2082.54, 'end': 2086.34, 'text': ' because this understanding is important for all of us.', 'tokens': [50794, 570, 341, 3701, 307, 1021, 337, 439, 295, 505, 13, 50984], 'temperature': 0.0, 'avg_logprob': -0.23353946639830808, 'compression_ratio': 1.5327102803738317, 'no_speech_prob': 0.009109335020184517}, {'id': 508, 'seek': 207394, 'start': 2086.34, 'end': 2090.3, 'text': ' Sometimes you know all of these things but would not have studied it in the formal course,', 'tokens': [50984, 4803, 291, 458, 439, 295, 613, 721, 457, 576, 406, 362, 9454, 309, 294, 264, 9860, 1164, 11, 51182], 'temperature': 0.0, 'avg_logprob': -0.23353946639830808, 'compression_ratio': 1.5327102803738317, 'no_speech_prob': 0.009109335020184517}, {'id': 509, 'seek': 207394, 'start': 2090.3, 'end': 2091.3, 'text': ' right.', 'tokens': [51182, 558, 13, 51232], 'temperature': 0.0, 'avg_logprob': -0.23353946639830808, 'compression_ratio': 1.5327102803738317, 'no_speech_prob': 0.009109335020184517}, {'id': 510, 'seek': 207394, 'start': 2091.3, 'end': 2096.3, 'text': ' So I thought that I would at least repeat some of those things, okay.', 'tokens': [51232, 407, 286, 1194, 300, 286, 576, 412, 1935, 7149, 512, 295, 729, 721, 11, 1392, 13, 51482], 'temperature': 0.0, 'avg_logprob': -0.23353946639830808, 'compression_ratio': 1.5327102803738317, 'no_speech_prob': 0.009109335020184517}, {'id': 511, 'seek': 207394, 'start': 2096.3, 'end': 2099.06, 'text': ' Let us see.', 'tokens': [51482, 961, 505, 536, 13, 51620], 'temperature': 0.0, 'avg_logprob': -0.23353946639830808, 'compression_ratio': 1.5327102803738317, 'no_speech_prob': 0.009109335020184517}, {'id': 512, 'seek': 209906, 'start': 2099.06, 'end': 2105.94, 'text': ' The next thing that we are going to talk about is instruction set architecture, okay.', 'tokens': [50364, 440, 958, 551, 300, 321, 366, 516, 281, 751, 466, 307, 10951, 992, 9482, 11, 1392, 13, 50708], 'temperature': 0.0, 'avg_logprob': -0.12769069454886697, 'compression_ratio': 2.041025641025641, 'no_speech_prob': 0.029820702970027924}, {'id': 513, 'seek': 209906, 'start': 2105.94, 'end': 2111.58, 'text': ' So instruction set architecture is essentially the view of the computer to the programmer', 'tokens': [50708, 407, 10951, 992, 9482, 307, 4476, 264, 1910, 295, 264, 3820, 281, 264, 32116, 50990], 'temperature': 0.0, 'avg_logprob': -0.12769069454886697, 'compression_ratio': 2.041025641025641, 'no_speech_prob': 0.029820702970027924}, {'id': 514, 'seek': 209906, 'start': 2111.58, 'end': 2117.06, 'text': ' or the view of the hardware to the programmer or the compiler, right.', 'tokens': [50990, 420, 264, 1910, 295, 264, 8837, 281, 264, 32116, 420, 264, 31958, 11, 558, 13, 51264], 'temperature': 0.0, 'avg_logprob': -0.12769069454886697, 'compression_ratio': 2.041025641025641, 'no_speech_prob': 0.029820702970027924}, {'id': 515, 'seek': 209906, 'start': 2117.06, 'end': 2122.02, 'text': ' And you can talk about two different kinds of instruction set architecture, one called', 'tokens': [51264, 400, 291, 393, 751, 466, 732, 819, 3685, 295, 10951, 992, 9482, 11, 472, 1219, 51512], 'temperature': 0.0, 'avg_logprob': -0.12769069454886697, 'compression_ratio': 2.041025641025641, 'no_speech_prob': 0.029820702970027924}, {'id': 516, 'seek': 209906, 'start': 2122.02, 'end': 2126.62, 'text': ' the CISC architecture and the other called the RISC architecture.', 'tokens': [51512, 264, 383, 2343, 34, 9482, 293, 264, 661, 1219, 264, 497, 2343, 34, 9482, 13, 51742], 'temperature': 0.0, 'avg_logprob': -0.12769069454886697, 'compression_ratio': 2.041025641025641, 'no_speech_prob': 0.029820702970027924}, {'id': 517, 'seek': 212662, 'start': 2126.62, 'end': 2132.58, 'text': ' RISC stands for complex instruction set computer and RISC stands for reduced instruction set', 'tokens': [50364, 497, 2343, 34, 7382, 337, 3997, 10951, 992, 3820, 293, 497, 2343, 34, 7382, 337, 9212, 10951, 992, 50662], 'temperature': 0.0, 'avg_logprob': -0.18990559175790075, 'compression_ratio': 1.9838709677419355, 'no_speech_prob': 0.0665113627910614}, {'id': 518, 'seek': 212662, 'start': 2132.58, 'end': 2134.7, 'text': ' computer, right.', 'tokens': [50662, 3820, 11, 558, 13, 50768], 'temperature': 0.0, 'avg_logprob': -0.18990559175790075, 'compression_ratio': 1.9838709677419355, 'no_speech_prob': 0.0665113627910614}, {'id': 519, 'seek': 212662, 'start': 2134.7, 'end': 2140.38, 'text': ' In a complex instruction set computer as the name suggests, right, it can host complex', 'tokens': [50768, 682, 257, 3997, 10951, 992, 3820, 382, 264, 1315, 13409, 11, 558, 11, 309, 393, 3975, 3997, 51052], 'temperature': 0.0, 'avg_logprob': -0.18990559175790075, 'compression_ratio': 1.9838709677419355, 'no_speech_prob': 0.0665113627910614}, {'id': 520, 'seek': 212662, 'start': 2140.38, 'end': 2141.38, 'text': ' operations, right.', 'tokens': [51052, 7705, 11, 558, 13, 51102], 'temperature': 0.0, 'avg_logprob': -0.18990559175790075, 'compression_ratio': 1.9838709677419355, 'no_speech_prob': 0.0665113627910614}, {'id': 521, 'seek': 212662, 'start': 2141.38, 'end': 2147.5, 'text': ' Typically it will host operations which will involve operands from memory and registers', 'tokens': [51102, 23129, 309, 486, 3975, 7705, 597, 486, 9494, 2208, 2967, 490, 4675, 293, 38351, 51408], 'temperature': 0.0, 'avg_logprob': -0.18990559175790075, 'compression_ratio': 1.9838709677419355, 'no_speech_prob': 0.0665113627910614}, {'id': 522, 'seek': 212662, 'start': 2147.5, 'end': 2152.14, 'text': ' or memory and memory depending on how complex the instruction is.', 'tokens': [51408, 420, 4675, 293, 4675, 5413, 322, 577, 3997, 264, 10951, 307, 13, 51640], 'temperature': 0.0, 'avg_logprob': -0.18990559175790075, 'compression_ratio': 1.9838709677419355, 'no_speech_prob': 0.0665113627910614}, {'id': 523, 'seek': 215214, 'start': 2152.14, 'end': 2157.14, 'text': ' Whereas in a reduced instruction set architecture, all arithmetic operations, arithmetic and', 'tokens': [50364, 13813, 294, 257, 9212, 10951, 992, 9482, 11, 439, 42973, 7705, 11, 42973, 293, 50614], 'temperature': 0.0, 'avg_logprob': -0.1751409889995188, 'compression_ratio': 1.8491620111731844, 'no_speech_prob': 0.14627651870250702}, {'id': 524, 'seek': 215214, 'start': 2157.14, 'end': 2162.66, 'text': ' logic operations can only have register operands, right.', 'tokens': [50614, 9952, 7705, 393, 787, 362, 7280, 2208, 2967, 11, 558, 13, 50890], 'temperature': 0.0, 'avg_logprob': -0.1751409889995188, 'compression_ratio': 1.8491620111731844, 'no_speech_prob': 0.14627651870250702}, {'id': 525, 'seek': 215214, 'start': 2162.66, 'end': 2166.02, 'text': ' Only load and store instructions can have memory operands.', 'tokens': [50890, 5686, 3677, 293, 3531, 9415, 393, 362, 4675, 2208, 2967, 13, 51058], 'temperature': 0.0, 'avg_logprob': -0.1751409889995188, 'compression_ratio': 1.8491620111731844, 'no_speech_prob': 0.14627651870250702}, {'id': 526, 'seek': 215214, 'start': 2166.02, 'end': 2172.66, 'text': ' There is certain advantage of designing a computer or designing a processor as a reduced', 'tokens': [51058, 821, 307, 1629, 5002, 295, 14685, 257, 3820, 420, 14685, 257, 15321, 382, 257, 9212, 51390], 'temperature': 0.0, 'avg_logprob': -0.1751409889995188, 'compression_ratio': 1.8491620111731844, 'no_speech_prob': 0.14627651870250702}, {'id': 527, 'seek': 215214, 'start': 2172.66, 'end': 2175.94, 'text': ' instruction set processor, right.', 'tokens': [51390, 10951, 992, 15321, 11, 558, 13, 51554], 'temperature': 0.0, 'avg_logprob': -0.1751409889995188, 'compression_ratio': 1.8491620111731844, 'no_speech_prob': 0.14627651870250702}, {'id': 528, 'seek': 217594, 'start': 2175.94, 'end': 2182.02, 'text': ' And in this reduced instruction set processor, instructions, okay, like add instruction or', 'tokens': [50364, 400, 294, 341, 9212, 10951, 992, 15321, 11, 9415, 11, 1392, 11, 411, 909, 10951, 420, 50668], 'temperature': 0.0, 'avg_logprob': -0.15186540116655065, 'compression_ratio': 1.8663793103448276, 'no_speech_prob': 0.13887463510036469}, {'id': 529, 'seek': 217594, 'start': 2182.02, 'end': 2186.26, 'text': ' subtract instruction, etcetera, would only use register operands.', 'tokens': [50668, 16390, 10951, 11, 22066, 11, 576, 787, 764, 7280, 2208, 2967, 13, 50880], 'temperature': 0.0, 'avg_logprob': -0.15186540116655065, 'compression_ratio': 1.8663793103448276, 'no_speech_prob': 0.13887463510036469}, {'id': 530, 'seek': 217594, 'start': 2186.26, 'end': 2191.02, 'text': ' That means it will only operate on values which are already available in the register.', 'tokens': [50880, 663, 1355, 309, 486, 787, 9651, 322, 4190, 597, 366, 1217, 2435, 294, 264, 7280, 13, 51118], 'temperature': 0.0, 'avg_logprob': -0.15186540116655065, 'compression_ratio': 1.8663793103448276, 'no_speech_prob': 0.13887463510036469}, {'id': 531, 'seek': 217594, 'start': 2191.02, 'end': 2196.14, 'text': ' And therefore in this architecture, it is again very important that the register allocation', 'tokens': [51118, 400, 4412, 294, 341, 9482, 11, 309, 307, 797, 588, 1021, 300, 264, 7280, 27599, 51374], 'temperature': 0.0, 'avg_logprob': -0.15186540116655065, 'compression_ratio': 1.8663793103448276, 'no_speech_prob': 0.13887463510036469}, {'id': 532, 'seek': 217594, 'start': 2196.14, 'end': 2198.86, 'text': ' is done very well, right.', 'tokens': [51374, 307, 1096, 588, 731, 11, 558, 13, 51510], 'temperature': 0.0, 'avg_logprob': -0.15186540116655065, 'compression_ratio': 1.8663793103448276, 'no_speech_prob': 0.13887463510036469}, {'id': 533, 'seek': 217594, 'start': 2198.86, 'end': 2203.66, 'text': ' In the reduced instruction set architecture, one operand can be memory.', 'tokens': [51510, 682, 264, 9212, 10951, 992, 9482, 11, 472, 2208, 474, 393, 312, 4675, 13, 51750], 'temperature': 0.0, 'avg_logprob': -0.15186540116655065, 'compression_ratio': 1.8663793103448276, 'no_speech_prob': 0.13887463510036469}, {'id': 534, 'seek': 220366, 'start': 2203.66, 'end': 2205.5, 'text': ' This is typically what it is.', 'tokens': [50364, 639, 307, 5850, 437, 309, 307, 13, 50456], 'temperature': 0.0, 'avg_logprob': -0.1910419676038954, 'compression_ratio': 2.103960396039604, 'no_speech_prob': 0.14542266726493835}, {'id': 535, 'seek': 220366, 'start': 2205.5, 'end': 2210.18, 'text': ' Although in olden day architecture, even both operands can be in memory.', 'tokens': [50456, 5780, 294, 1331, 268, 786, 9482, 11, 754, 1293, 2208, 2967, 393, 312, 294, 4675, 13, 50690], 'temperature': 0.0, 'avg_logprob': -0.1910419676038954, 'compression_ratio': 2.103960396039604, 'no_speech_prob': 0.14542266726493835}, {'id': 536, 'seek': 220366, 'start': 2210.18, 'end': 2218.22, 'text': ' These days complex instruction set architecture support only one instruction in memory, okay.', 'tokens': [50690, 1981, 1708, 3997, 10951, 992, 9482, 1406, 787, 472, 10951, 294, 4675, 11, 1392, 13, 51092], 'temperature': 0.0, 'avg_logprob': -0.1910419676038954, 'compression_ratio': 2.103960396039604, 'no_speech_prob': 0.14542266726493835}, {'id': 537, 'seek': 220366, 'start': 2218.22, 'end': 2224.2599999999998, 'text': ' The other instruction can be in or should be in the register and you have fewer registers', 'tokens': [51092, 440, 661, 10951, 393, 312, 294, 420, 820, 312, 294, 264, 7280, 293, 291, 362, 13366, 38351, 51394], 'temperature': 0.0, 'avg_logprob': -0.1910419676038954, 'compression_ratio': 2.103960396039604, 'no_speech_prob': 0.14542266726493835}, {'id': 538, 'seek': 220366, 'start': 2224.2599999999998, 'end': 2226.3799999999997, 'text': ' in the complex instruction set architecture.', 'tokens': [51394, 294, 264, 3997, 10951, 992, 9482, 13, 51500], 'temperature': 0.0, 'avg_logprob': -0.1910419676038954, 'compression_ratio': 2.103960396039604, 'no_speech_prob': 0.14542266726493835}, {'id': 539, 'seek': 220366, 'start': 2226.3799999999997, 'end': 2230.74, 'text': ' You have more registers in the reduced instruction set architecture but fewer instructions in', 'tokens': [51500, 509, 362, 544, 38351, 294, 264, 9212, 10951, 992, 9482, 457, 13366, 9415, 294, 51718], 'temperature': 0.0, 'avg_logprob': -0.1910419676038954, 'compression_ratio': 2.103960396039604, 'no_speech_prob': 0.14542266726493835}, {'id': 540, 'seek': 223074, 'start': 2230.74, 'end': 2233.62, 'text': ' the complex instruction set architecture.', 'tokens': [50364, 264, 3997, 10951, 992, 9482, 13, 50508], 'temperature': 0.0, 'avg_logprob': -0.1886891009760838, 'compression_ratio': 1.894736842105263, 'no_speech_prob': 0.38428694009780884}, {'id': 541, 'seek': 223074, 'start': 2233.62, 'end': 2238.9799999999996, 'text': ' And therefore there also it is very important that the registers are judiciously used.', 'tokens': [50508, 400, 4412, 456, 611, 309, 307, 588, 1021, 300, 264, 38351, 366, 3747, 3784, 356, 1143, 13, 50776], 'temperature': 0.0, 'avg_logprob': -0.1886891009760838, 'compression_ratio': 1.894736842105263, 'no_speech_prob': 0.38428694009780884}, {'id': 542, 'seek': 223074, 'start': 2238.9799999999996, 'end': 2245.4599999999996, 'text': ' So register allocation is essential and important in both of these architectures, okay.', 'tokens': [50776, 407, 7280, 27599, 307, 7115, 293, 1021, 294, 1293, 295, 613, 6331, 1303, 11, 1392, 13, 51100], 'temperature': 0.0, 'avg_logprob': -0.1886891009760838, 'compression_ratio': 1.894736842105263, 'no_speech_prob': 0.38428694009780884}, {'id': 543, 'seek': 223074, 'start': 2245.4599999999996, 'end': 2250.14, 'text': ' But here we are going to see more about the instruction set architecture and instruction', 'tokens': [51100, 583, 510, 321, 366, 516, 281, 536, 544, 466, 264, 10951, 992, 9482, 293, 10951, 51334], 'temperature': 0.0, 'avg_logprob': -0.1886891009760838, 'compression_ratio': 1.894736842105263, 'no_speech_prob': 0.38428694009780884}, {'id': 544, 'seek': 223074, 'start': 2250.14, 'end': 2252.7, 'text': ' set architecture essentially deals with, right.', 'tokens': [51334, 992, 9482, 4476, 11215, 365, 11, 558, 13, 51462], 'temperature': 0.0, 'avg_logprob': -0.1886891009760838, 'compression_ratio': 1.894736842105263, 'no_speech_prob': 0.38428694009780884}, {'id': 545, 'seek': 223074, 'start': 2252.7, 'end': 2257.62, 'text': ' As I mentioned earlier, it is a description of the machine from the view of the programmer', 'tokens': [51462, 1018, 286, 2835, 3071, 11, 309, 307, 257, 3855, 295, 264, 3479, 490, 264, 1910, 295, 264, 32116, 51708], 'temperature': 0.0, 'avg_logprob': -0.1886891009760838, 'compression_ratio': 1.894736842105263, 'no_speech_prob': 0.38428694009780884}, {'id': 546, 'seek': 223074, 'start': 2257.62, 'end': 2260.4199999999996, 'text': ' or the compiler, right.', 'tokens': [51708, 420, 264, 31958, 11, 558, 13, 51848], 'temperature': 0.0, 'avg_logprob': -0.1886891009760838, 'compression_ratio': 1.894736842105263, 'no_speech_prob': 0.38428694009780884}, {'id': 547, 'seek': 226042, 'start': 2260.42, 'end': 2266.02, 'text': ' If I am a programmer and I do not want to know anything about the hardware, right and', 'tokens': [50364, 759, 286, 669, 257, 32116, 293, 286, 360, 406, 528, 281, 458, 1340, 466, 264, 8837, 11, 558, 293, 50644], 'temperature': 0.0, 'avg_logprob': -0.15425362988053082, 'compression_ratio': 1.9710743801652892, 'no_speech_prob': 0.010484079830348492}, {'id': 548, 'seek': 226042, 'start': 2266.02, 'end': 2270.86, 'text': ' if I have to program in assembly language, then minimally I need to know about the instruction', 'tokens': [50644, 498, 286, 362, 281, 1461, 294, 12103, 2856, 11, 550, 4464, 379, 286, 643, 281, 458, 466, 264, 10951, 50886], 'temperature': 0.0, 'avg_logprob': -0.15425362988053082, 'compression_ratio': 1.9710743801652892, 'no_speech_prob': 0.010484079830348492}, {'id': 549, 'seek': 226042, 'start': 2270.86, 'end': 2271.86, 'text': ' set architecture.', 'tokens': [50886, 992, 9482, 13, 50936], 'temperature': 0.0, 'avg_logprob': -0.15425362988053082, 'compression_ratio': 1.9710743801652892, 'no_speech_prob': 0.010484079830348492}, {'id': 550, 'seek': 226042, 'start': 2271.86, 'end': 2277.7400000000002, 'text': ' If I am a compiler writer, right but I do not want to really understand how the processor', 'tokens': [50936, 759, 286, 669, 257, 31958, 9936, 11, 558, 457, 286, 360, 406, 528, 281, 534, 1223, 577, 264, 15321, 51230], 'temperature': 0.0, 'avg_logprob': -0.15425362988053082, 'compression_ratio': 1.9710743801652892, 'no_speech_prob': 0.010484079830348492}, {'id': 551, 'seek': 226042, 'start': 2277.7400000000002, 'end': 2284.3, 'text': ' works but still generate code, I still need to understand the instruction set architecture.', 'tokens': [51230, 1985, 457, 920, 8460, 3089, 11, 286, 920, 643, 281, 1223, 264, 10951, 992, 9482, 13, 51558], 'temperature': 0.0, 'avg_logprob': -0.15425362988053082, 'compression_ratio': 1.9710743801652892, 'no_speech_prob': 0.010484079830348492}, {'id': 552, 'seek': 226042, 'start': 2284.3, 'end': 2290.26, 'text': ' It essentially includes the set of all instructions which are supported in the processor, right.', 'tokens': [51558, 467, 4476, 5974, 264, 992, 295, 439, 9415, 597, 366, 8104, 294, 264, 15321, 11, 558, 13, 51856], 'temperature': 0.0, 'avg_logprob': -0.15425362988053082, 'compression_ratio': 1.9710743801652892, 'no_speech_prob': 0.010484079830348492}, {'id': 553, 'seek': 229026, 'start': 2290.9, 'end': 2295.82, 'text': ' And in each of these instructions, how the operands are being specified, that is another', 'tokens': [50396, 400, 294, 1184, 295, 613, 9415, 11, 577, 264, 2208, 2967, 366, 885, 22206, 11, 300, 307, 1071, 50642], 'temperature': 0.0, 'avg_logprob': -0.17484529813130698, 'compression_ratio': 1.776, 'no_speech_prob': 0.0035820475313812494}, {'id': 554, 'seek': 229026, 'start': 2295.82, 'end': 2301.6600000000003, 'text': ' important part which is what is called the addressing mode, okay.', 'tokens': [50642, 1021, 644, 597, 307, 437, 307, 1219, 264, 14329, 4391, 11, 1392, 13, 50934], 'temperature': 0.0, 'avg_logprob': -0.17484529813130698, 'compression_ratio': 1.776, 'no_speech_prob': 0.0035820475313812494}, {'id': 555, 'seek': 229026, 'start': 2301.6600000000003, 'end': 2307.1000000000004, 'text': ' And of course there is something called instruction encoding which is only required if you are', 'tokens': [50934, 400, 295, 1164, 456, 307, 746, 1219, 10951, 43430, 597, 307, 787, 4739, 498, 291, 366, 51206], 'temperature': 0.0, 'avg_logprob': -0.17484529813130698, 'compression_ratio': 1.776, 'no_speech_prob': 0.0035820475313812494}, {'id': 556, 'seek': 229026, 'start': 2307.1000000000004, 'end': 2312.82, 'text': ' going to take these instructions in the assembly language and going to convert it into machine', 'tokens': [51206, 516, 281, 747, 613, 9415, 294, 264, 12103, 2856, 293, 516, 281, 7620, 309, 666, 3479, 51492], 'temperature': 0.0, 'avg_logprob': -0.17484529813130698, 'compression_ratio': 1.776, 'no_speech_prob': 0.0035820475313812494}, {'id': 557, 'seek': 229026, 'start': 2312.82, 'end': 2313.82, 'text': ' code.', 'tokens': [51492, 3089, 13, 51542], 'temperature': 0.0, 'avg_logprob': -0.17484529813130698, 'compression_ratio': 1.776, 'no_speech_prob': 0.0035820475313812494}, {'id': 558, 'seek': 229026, 'start': 2313.82, 'end': 2318.6600000000003, 'text': ' This instruction format also helps you to understand how instruction execution happens,', 'tokens': [51542, 639, 10951, 7877, 611, 3665, 291, 281, 1223, 577, 10951, 15058, 2314, 11, 51784], 'temperature': 0.0, 'avg_logprob': -0.17484529813130698, 'compression_ratio': 1.776, 'no_speech_prob': 0.0035820475313812494}, {'id': 559, 'seek': 229026, 'start': 2318.6600000000003, 'end': 2319.6600000000003, 'text': ' okay.', 'tokens': [51784, 1392, 13, 51834], 'temperature': 0.0, 'avg_logprob': -0.17484529813130698, 'compression_ratio': 1.776, 'no_speech_prob': 0.0035820475313812494}, {'id': 560, 'seek': 231966, 'start': 2320.06, 'end': 2321.42, 'text': ' That is essentially what it is.', 'tokens': [50384, 663, 307, 4476, 437, 309, 307, 13, 50452], 'temperature': 0.0, 'avg_logprob': -0.14932422103168808, 'compression_ratio': 2.0205761316872426, 'no_speech_prob': 0.00231978390365839}, {'id': 561, 'seek': 231966, 'start': 2321.42, 'end': 2326.46, 'text': ' So instruction set architecture essentially comprises of the set of all instructions', 'tokens': [50452, 407, 10951, 992, 9482, 4476, 16802, 3598, 295, 264, 992, 295, 439, 9415, 50704], 'temperature': 0.0, 'avg_logprob': -0.14932422103168808, 'compression_ratio': 2.0205761316872426, 'no_speech_prob': 0.00231978390365839}, {'id': 562, 'seek': 231966, 'start': 2326.46, 'end': 2331.94, 'text': ' that are supported by the processor, the addressing modes that are supported by the processor', 'tokens': [50704, 300, 366, 8104, 538, 264, 15321, 11, 264, 14329, 14068, 300, 366, 8104, 538, 264, 15321, 50978], 'temperature': 0.0, 'avg_logprob': -0.14932422103168808, 'compression_ratio': 2.0205761316872426, 'no_speech_prob': 0.00231978390365839}, {'id': 563, 'seek': 231966, 'start': 2331.94, 'end': 2336.5, 'text': ' and also how the instructions are being encoded, right.', 'tokens': [50978, 293, 611, 577, 264, 9415, 366, 885, 2058, 12340, 11, 558, 13, 51206], 'temperature': 0.0, 'avg_logprob': -0.14932422103168808, 'compression_ratio': 2.0205761316872426, 'no_speech_prob': 0.00231978390365839}, {'id': 564, 'seek': 231966, 'start': 2336.5, 'end': 2341.54, 'text': ' So this is the separation or the so called interface between the hardware and the software', 'tokens': [51206, 407, 341, 307, 264, 14634, 420, 264, 370, 1219, 9226, 1296, 264, 8837, 293, 264, 4722, 51458], 'temperature': 0.0, 'avg_logprob': -0.14932422103168808, 'compression_ratio': 2.0205761316872426, 'no_speech_prob': 0.00231978390365839}, {'id': 565, 'seek': 231966, 'start': 2341.54, 'end': 2344.2599999999998, 'text': ' or the hardware and the compiler, right.', 'tokens': [51458, 420, 264, 8837, 293, 264, 31958, 11, 558, 13, 51594], 'temperature': 0.0, 'avg_logprob': -0.14932422103168808, 'compression_ratio': 2.0205761316872426, 'no_speech_prob': 0.00231978390365839}, {'id': 566, 'seek': 231966, 'start': 2344.2599999999998, 'end': 2349.58, 'text': ' If the compiler does not want to know anything more about hardware, minimally it should know', 'tokens': [51594, 759, 264, 31958, 775, 406, 528, 281, 458, 1340, 544, 466, 8837, 11, 4464, 379, 309, 820, 458, 51860], 'temperature': 0.0, 'avg_logprob': -0.14932422103168808, 'compression_ratio': 2.0205761316872426, 'no_speech_prob': 0.00231978390365839}, {'id': 567, 'seek': 234958, 'start': 2349.58, 'end': 2355.8199999999997, 'text': ' about these things without which it cannot necessarily generate the instructions, okay,', 'tokens': [50364, 466, 613, 721, 1553, 597, 309, 2644, 4725, 8460, 264, 9415, 11, 1392, 11, 50676], 'temperature': 0.0, 'avg_logprob': -0.2927715539932251, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.0006405988242477179}, {'id': 568, 'seek': 234958, 'start': 2355.8199999999997, 'end': 2357.94, 'text': ' generate the code, yeah.', 'tokens': [50676, 8460, 264, 3089, 11, 1338, 13, 50782], 'temperature': 0.0, 'avg_logprob': -0.2927715539932251, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.0006405988242477179}, {'id': 569, 'seek': 234958, 'start': 2357.94, 'end': 2362.14, 'text': ' Why there are less instructions?', 'tokens': [50782, 1545, 456, 366, 1570, 9415, 30, 50992], 'temperature': 0.0, 'avg_logprob': -0.2927715539932251, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.0006405988242477179}, {'id': 570, 'seek': 234958, 'start': 2362.14, 'end': 2366.1, 'text': ' Why there are less instructions?', 'tokens': [50992, 1545, 456, 366, 1570, 9415, 30, 51190], 'temperature': 0.0, 'avg_logprob': -0.2927715539932251, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.0006405988242477179}, {'id': 571, 'seek': 234958, 'start': 2366.1, 'end': 2372.74, 'text': ' Typically CISC instruction set architecture has a lot of complex control and other things.', 'tokens': [51190, 23129, 383, 2343, 34, 10951, 992, 9482, 575, 257, 688, 295, 3997, 1969, 293, 661, 721, 13, 51522], 'temperature': 0.0, 'avg_logprob': -0.2927715539932251, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.0006405988242477179}, {'id': 572, 'seek': 234958, 'start': 2372.74, 'end': 2379.22, 'text': ' So the space that is available and they want to utilize for registers is actually limited.', 'tokens': [51522, 407, 264, 1901, 300, 307, 2435, 293, 436, 528, 281, 16117, 337, 38351, 307, 767, 5567, 13, 51846], 'temperature': 0.0, 'avg_logprob': -0.2927715539932251, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.0006405988242477179}, {'id': 573, 'seek': 237922, 'start': 2379.22, 'end': 2386.06, 'text': ' And second thing is that again when I say limited you do not think of one having tens', 'tokens': [50364, 400, 1150, 551, 307, 300, 797, 562, 286, 584, 5567, 291, 360, 406, 519, 295, 472, 1419, 10688, 50706], 'temperature': 0.0, 'avg_logprob': -0.193951648214589, 'compression_ratio': 1.6296296296296295, 'no_speech_prob': 0.0015511044766753912}, {'id': 574, 'seek': 237922, 'start': 2386.06, 'end': 2390.06, 'text': ' of registers and another having millions of registers, no, right.', 'tokens': [50706, 295, 38351, 293, 1071, 1419, 6803, 295, 38351, 11, 572, 11, 558, 13, 50906], 'temperature': 0.0, 'avg_logprob': -0.193951648214589, 'compression_ratio': 1.6296296296296295, 'no_speech_prob': 0.0015511044766753912}, {'id': 575, 'seek': 237922, 'start': 2390.06, 'end': 2395.5, 'text': ' In a CISC architecture you typically have anywhere between 8 to 16 registers or maybe', 'tokens': [50906, 682, 257, 383, 2343, 34, 9482, 291, 5850, 362, 4992, 1296, 1649, 281, 3165, 38351, 420, 1310, 51178], 'temperature': 0.0, 'avg_logprob': -0.193951648214589, 'compression_ratio': 1.6296296296296295, 'no_speech_prob': 0.0015511044766753912}, {'id': 576, 'seek': 237922, 'start': 2395.5, 'end': 2397.2799999999997, 'text': ' 32 registers.', 'tokens': [51178, 8858, 38351, 13, 51267], 'temperature': 0.0, 'avg_logprob': -0.193951648214589, 'compression_ratio': 1.6296296296296295, 'no_speech_prob': 0.0015511044766753912}, {'id': 577, 'seek': 237922, 'start': 2397.2799999999997, 'end': 2401.3799999999997, 'text': ' In a RISC architecture you will have 32 to 64 or maybe 128.', 'tokens': [51267, 682, 257, 497, 2343, 34, 9482, 291, 486, 362, 8858, 281, 12145, 420, 1310, 29810, 13, 51472], 'temperature': 0.0, 'avg_logprob': -0.193951648214589, 'compression_ratio': 1.6296296296296295, 'no_speech_prob': 0.0015511044766753912}, {'id': 578, 'seek': 237922, 'start': 2401.3799999999997, 'end': 2405.3799999999997, 'text': ' We are talking about a factor of 2 or 4.', 'tokens': [51472, 492, 366, 1417, 466, 257, 5952, 295, 568, 420, 1017, 13, 51672], 'temperature': 0.0, 'avg_logprob': -0.193951648214589, 'compression_ratio': 1.6296296296296295, 'no_speech_prob': 0.0015511044766753912}, {'id': 579, 'seek': 240538, 'start': 2405.42, 'end': 2411.06, 'text': ' But that is essentially the difference and this is again depending on the available silicon', 'tokens': [50366, 583, 300, 307, 4476, 264, 2649, 293, 341, 307, 797, 5413, 322, 264, 2435, 22848, 50648], 'temperature': 0.0, 'avg_logprob': -0.17218597118671125, 'compression_ratio': 1.8189655172413792, 'no_speech_prob': 0.34729599952697754}, {'id': 580, 'seek': 240538, 'start': 2411.06, 'end': 2414.98, 'text': ' space and also based on the requirement.', 'tokens': [50648, 1901, 293, 611, 2361, 322, 264, 11695, 13, 50844], 'temperature': 0.0, 'avg_logprob': -0.17218597118671125, 'compression_ratio': 1.8189655172413792, 'no_speech_prob': 0.34729599952697754}, {'id': 581, 'seek': 240538, 'start': 2414.98, 'end': 2422.58, 'text': ' Okay, interestingly when we talk about code generation, right, many of the old books in', 'tokens': [50844, 1033, 11, 25873, 562, 321, 751, 466, 3089, 5125, 11, 558, 11, 867, 295, 264, 1331, 3642, 294, 51224], 'temperature': 0.0, 'avg_logprob': -0.17218597118671125, 'compression_ratio': 1.8189655172413792, 'no_speech_prob': 0.34729599952697754}, {'id': 582, 'seek': 240538, 'start': 2422.58, 'end': 2426.2200000000003, 'text': ' compilers do talk about code generation for CISC machines.', 'tokens': [51224, 715, 388, 433, 360, 751, 466, 3089, 5125, 337, 383, 2343, 34, 8379, 13, 51406], 'temperature': 0.0, 'avg_logprob': -0.17218597118671125, 'compression_ratio': 1.8189655172413792, 'no_speech_prob': 0.34729599952697754}, {'id': 583, 'seek': 240538, 'start': 2426.2200000000003, 'end': 2429.86, 'text': ' So we are going to talk about code generation really for CISC machines.', 'tokens': [51406, 407, 321, 366, 516, 281, 751, 466, 3089, 5125, 534, 337, 383, 2343, 34, 8379, 13, 51588], 'temperature': 0.0, 'avg_logprob': -0.17218597118671125, 'compression_ratio': 1.8189655172413792, 'no_speech_prob': 0.34729599952697754}, {'id': 584, 'seek': 240538, 'start': 2429.86, 'end': 2431.48, 'text': ' But the concept is general.', 'tokens': [51588, 583, 264, 3410, 307, 2674, 13, 51669], 'temperature': 0.0, 'avg_logprob': -0.17218597118671125, 'compression_ratio': 1.8189655172413792, 'no_speech_prob': 0.34729599952697754}, {'id': 585, 'seek': 240538, 'start': 2431.48, 'end': 2434.96, 'text': ' It can also be extended for RISC machines.', 'tokens': [51669, 467, 393, 611, 312, 10913, 337, 497, 2343, 34, 8379, 13, 51843], 'temperature': 0.0, 'avg_logprob': -0.17218597118671125, 'compression_ratio': 1.8189655172413792, 'no_speech_prob': 0.34729599952697754}, {'id': 586, 'seek': 243496, 'start': 2434.96, 'end': 2440.52, 'text': ' But all the examples that we are going to see are code generated for CISC machines,', 'tokens': [50364, 583, 439, 264, 5110, 300, 321, 366, 516, 281, 536, 366, 3089, 10833, 337, 383, 2343, 34, 8379, 11, 50642], 'temperature': 0.0, 'avg_logprob': -0.26507211700687566, 'compression_ratio': 1.7738095238095237, 'no_speech_prob': 0.026395127177238464}, {'id': 587, 'seek': 243496, 'start': 2440.52, 'end': 2441.52, 'text': ' okay.', 'tokens': [50642, 1392, 13, 50692], 'temperature': 0.0, 'avg_logprob': -0.26507211700687566, 'compression_ratio': 1.7738095238095237, 'no_speech_prob': 0.026395127177238464}, {'id': 588, 'seek': 243496, 'start': 2441.52, 'end': 2446.68, 'text': ' But if you think that someday somebody is going to build a CISC machine with, today', 'tokens': [50692, 583, 498, 291, 519, 300, 19412, 2618, 307, 516, 281, 1322, 257, 383, 2343, 34, 3479, 365, 11, 965, 50950], 'temperature': 0.0, 'avg_logprob': -0.26507211700687566, 'compression_ratio': 1.7738095238095237, 'no_speech_prob': 0.026395127177238464}, {'id': 589, 'seek': 243496, 'start': 2446.68, 'end': 2449.68, 'text': ' actually CISC machines have up to 32 registers.', 'tokens': [50950, 767, 383, 2343, 34, 8379, 362, 493, 281, 8858, 38351, 13, 51100], 'temperature': 0.0, 'avg_logprob': -0.26507211700687566, 'compression_ratio': 1.7738095238095237, 'no_speech_prob': 0.026395127177238464}, {'id': 590, 'seek': 243496, 'start': 2449.68, 'end': 2453.84, 'text': ' But if you want 64 or 128 registers, it is not that it is not doable, right.', 'tokens': [51100, 583, 498, 291, 528, 12145, 420, 29810, 38351, 11, 309, 307, 406, 300, 309, 307, 406, 41183, 11, 558, 13, 51308], 'temperature': 0.0, 'avg_logprob': -0.26507211700687566, 'compression_ratio': 1.7738095238095237, 'no_speech_prob': 0.026395127177238464}, {'id': 591, 'seek': 243496, 'start': 2453.84, 'end': 2456.0, 'text': ' It is not significantly difficult.', 'tokens': [51308, 467, 307, 406, 10591, 2252, 13, 51416], 'temperature': 0.0, 'avg_logprob': -0.26507211700687566, 'compression_ratio': 1.7738095238095237, 'no_speech_prob': 0.026395127177238464}, {'id': 592, 'seek': 243496, 'start': 2456.0, 'end': 2459.8, 'text': ' It is doable but maybe it does not have that much utility.', 'tokens': [51416, 467, 307, 41183, 457, 1310, 309, 775, 406, 362, 300, 709, 14877, 13, 51606], 'temperature': 0.0, 'avg_logprob': -0.26507211700687566, 'compression_ratio': 1.7738095238095237, 'no_speech_prob': 0.026395127177238464}, {'id': 593, 'seek': 243496, 'start': 2459.8, 'end': 2464.8, 'text': ' That is the reason why they do not do it, okay, right.', 'tokens': [51606, 663, 307, 264, 1778, 983, 436, 360, 406, 360, 309, 11, 1392, 11, 558, 13, 51856], 'temperature': 0.0, 'avg_logprob': -0.26507211700687566, 'compression_ratio': 1.7738095238095237, 'no_speech_prob': 0.026395127177238464}, {'id': 594, 'seek': 246480, 'start': 2464.8, 'end': 2469.28, 'text': ' Okay, let us move forward.', 'tokens': [50364, 1033, 11, 718, 505, 1286, 2128, 13, 50588], 'temperature': 0.0, 'avg_logprob': -0.22969426737203227, 'compression_ratio': 1.8, 'no_speech_prob': 0.006984281819313765}, {'id': 595, 'seek': 246480, 'start': 2469.28, 'end': 2476.44, 'text': ' Okay, so as far as the set of instructions are concerned, we can divide them in terms', 'tokens': [50588, 1033, 11, 370, 382, 1400, 382, 264, 992, 295, 9415, 366, 5922, 11, 321, 393, 9845, 552, 294, 2115, 50946], 'temperature': 0.0, 'avg_logprob': -0.22969426737203227, 'compression_ratio': 1.8, 'no_speech_prob': 0.006984281819313765}, {'id': 596, 'seek': 246480, 'start': 2476.44, 'end': 2479.2400000000002, 'text': ' of arithmetic and logic operations.', 'tokens': [50946, 295, 42973, 293, 9952, 7705, 13, 51086], 'temperature': 0.0, 'avg_logprob': -0.22969426737203227, 'compression_ratio': 1.8, 'no_speech_prob': 0.006984281819313765}, {'id': 597, 'seek': 246480, 'start': 2479.2400000000002, 'end': 2484.1200000000003, 'text': ' We can divide them in terms of data transfer operations where you try to move the data', 'tokens': [51086, 492, 393, 9845, 552, 294, 2115, 295, 1412, 5003, 7705, 689, 291, 853, 281, 1286, 264, 1412, 51330], 'temperature': 0.0, 'avg_logprob': -0.22969426737203227, 'compression_ratio': 1.8, 'no_speech_prob': 0.006984281819313765}, {'id': 598, 'seek': 246480, 'start': 2484.1200000000003, 'end': 2490.78, 'text': ' from memory to register or from register to memory or you talk about control operations.', 'tokens': [51330, 490, 4675, 281, 7280, 420, 490, 7280, 281, 4675, 420, 291, 751, 466, 1969, 7705, 13, 51663], 'temperature': 0.0, 'avg_logprob': -0.22969426737203227, 'compression_ratio': 1.8, 'no_speech_prob': 0.006984281819313765}, {'id': 599, 'seek': 249078, 'start': 2491.38, 'end': 2496.7400000000002, 'text': ' Control operations are essentially jump instructions, branch instructions, conditional branch instructions', 'tokens': [50394, 12912, 7705, 366, 4476, 3012, 9415, 11, 9819, 9415, 11, 27708, 9819, 9415, 50662], 'temperature': 0.0, 'avg_logprob': -0.24419483857996324, 'compression_ratio': 1.7695852534562213, 'no_speech_prob': 0.3321476876735687}, {'id': 600, 'seek': 249078, 'start': 2496.7400000000002, 'end': 2501.6600000000003, 'text': ' or function call instructions and so on and so forth, right.', 'tokens': [50662, 420, 2445, 818, 9415, 293, 370, 322, 293, 370, 5220, 11, 558, 13, 50908], 'temperature': 0.0, 'avg_logprob': -0.24419483857996324, 'compression_ratio': 1.7695852534562213, 'no_speech_prob': 0.3321476876735687}, {'id': 601, 'seek': 249078, 'start': 2501.6600000000003, 'end': 2507.1800000000003, 'text': ' Of course you have other kinds of instructions like ALT ALT, right.', 'tokens': [50908, 2720, 1164, 291, 362, 661, 3685, 295, 9415, 411, 7056, 51, 7056, 51, 11, 558, 13, 51184], 'temperature': 0.0, 'avg_logprob': -0.24419483857996324, 'compression_ratio': 1.7695852534562213, 'no_speech_prob': 0.3321476876735687}, {'id': 602, 'seek': 249078, 'start': 2507.1800000000003, 'end': 2513.42, 'text': ' Okay, so let us see specifically an example of this instruction set little later when', 'tokens': [51184, 1033, 11, 370, 718, 505, 536, 4682, 364, 1365, 295, 341, 10951, 992, 707, 1780, 562, 51496], 'temperature': 0.0, 'avg_logprob': -0.24419483857996324, 'compression_ratio': 1.7695852534562213, 'no_speech_prob': 0.3321476876735687}, {'id': 603, 'seek': 249078, 'start': 2513.42, 'end': 2518.86, 'text': ' we talk about the instruction set for the RISC-V architecture.', 'tokens': [51496, 321, 751, 466, 264, 10951, 992, 337, 264, 497, 2343, 34, 12, 53, 9482, 13, 51768], 'temperature': 0.0, 'avg_logprob': -0.24419483857996324, 'compression_ratio': 1.7695852534562213, 'no_speech_prob': 0.3321476876735687}, {'id': 604, 'seek': 251886, 'start': 2518.86, 'end': 2523.54, 'text': ' But before that let us just talk a little bit about operand addressing modes because', 'tokens': [50364, 583, 949, 300, 718, 505, 445, 751, 257, 707, 857, 466, 2208, 474, 14329, 14068, 570, 50598], 'temperature': 0.0, 'avg_logprob': -0.1703939261259856, 'compression_ratio': 1.9482758620689655, 'no_speech_prob': 0.006286723539233208}, {'id': 605, 'seek': 251886, 'start': 2523.54, 'end': 2526.1800000000003, 'text': ' all instructions are going to have operands.', 'tokens': [50598, 439, 9415, 366, 516, 281, 362, 2208, 2967, 13, 50730], 'temperature': 0.0, 'avg_logprob': -0.1703939261259856, 'compression_ratio': 1.9482758620689655, 'no_speech_prob': 0.006286723539233208}, {'id': 606, 'seek': 251886, 'start': 2526.1800000000003, 'end': 2529.5, 'text': ' Operands are the ones in which these operations are going to be performed.', 'tokens': [50730, 12480, 2967, 366, 264, 2306, 294, 597, 613, 7705, 366, 516, 281, 312, 10332, 13, 50896], 'temperature': 0.0, 'avg_logprob': -0.1703939261259856, 'compression_ratio': 1.9482758620689655, 'no_speech_prob': 0.006286723539233208}, {'id': 607, 'seek': 251886, 'start': 2529.5, 'end': 2534.38, 'text': ' So how do you specify these operands as a part of your instruction, right.', 'tokens': [50896, 407, 577, 360, 291, 16500, 613, 2208, 2967, 382, 257, 644, 295, 428, 10951, 11, 558, 13, 51140], 'temperature': 0.0, 'avg_logprob': -0.1703939261259856, 'compression_ratio': 1.9482758620689655, 'no_speech_prob': 0.006286723539233208}, {'id': 608, 'seek': 251886, 'start': 2534.38, 'end': 2538.9, 'text': ' So that is essentially what is addressing mode, okay, addressing mode specifies how', 'tokens': [51140, 407, 300, 307, 4476, 437, 307, 14329, 4391, 11, 1392, 11, 14329, 4391, 1608, 11221, 577, 51366], 'temperature': 0.0, 'avg_logprob': -0.1703939261259856, 'compression_ratio': 1.9482758620689655, 'no_speech_prob': 0.006286723539233208}, {'id': 609, 'seek': 251886, 'start': 2538.9, 'end': 2540.82, 'text': ' to specify these operands.', 'tokens': [51366, 281, 16500, 613, 2208, 2967, 13, 51462], 'temperature': 0.0, 'avg_logprob': -0.1703939261259856, 'compression_ratio': 1.9482758620689655, 'no_speech_prob': 0.006286723539233208}, {'id': 610, 'seek': 251886, 'start': 2540.82, 'end': 2544.9, 'text': ' You have both source operands and destination operand, right.', 'tokens': [51462, 509, 362, 1293, 4009, 2208, 2967, 293, 12236, 2208, 474, 11, 558, 13, 51666], 'temperature': 0.0, 'avg_logprob': -0.1703939261259856, 'compression_ratio': 1.9482758620689655, 'no_speech_prob': 0.006286723539233208}, {'id': 611, 'seek': 254490, 'start': 2545.34, 'end': 2550.14, 'text': ' There could be one or two source operands and typically there is a single destination', 'tokens': [50386, 821, 727, 312, 472, 420, 732, 4009, 2208, 2967, 293, 5850, 456, 307, 257, 2167, 12236, 50626], 'temperature': 0.0, 'avg_logprob': -0.12840999774078823, 'compression_ratio': 1.5917159763313609, 'no_speech_prob': 0.031317587941884995}, {'id': 612, 'seek': 254490, 'start': 2550.14, 'end': 2553.42, 'text': ' operand, okay.', 'tokens': [50626, 2208, 474, 11, 1392, 13, 50790], 'temperature': 0.0, 'avg_logprob': -0.12840999774078823, 'compression_ratio': 1.5917159763313609, 'no_speech_prob': 0.031317587941884995}, {'id': 613, 'seek': 254490, 'start': 2553.42, 'end': 2562.14, 'text': ' So as I mentioned earlier addressing mode is essentially how do you specify the operand', 'tokens': [50790, 407, 382, 286, 2835, 3071, 14329, 4391, 307, 4476, 577, 360, 291, 16500, 264, 2208, 474, 51226], 'temperature': 0.0, 'avg_logprob': -0.12840999774078823, 'compression_ratio': 1.5917159763313609, 'no_speech_prob': 0.031317587941884995}, {'id': 614, 'seek': 254490, 'start': 2562.14, 'end': 2571.3, 'text': ' and the operand itself can be in a register or it could be in the memory, right.', 'tokens': [51226, 293, 264, 2208, 474, 2564, 393, 312, 294, 257, 7280, 420, 309, 727, 312, 294, 264, 4675, 11, 558, 13, 51684], 'temperature': 0.0, 'avg_logprob': -0.12840999774078823, 'compression_ratio': 1.5917159763313609, 'no_speech_prob': 0.031317587941884995}, {'id': 615, 'seek': 257130, 'start': 2571.3, 'end': 2576.1800000000003, 'text': ' The first one is we are going to see little bit more detail of when it is in the memory', 'tokens': [50364, 440, 700, 472, 307, 321, 366, 516, 281, 536, 707, 857, 544, 2607, 295, 562, 309, 307, 294, 264, 4675, 50608], 'temperature': 0.0, 'avg_logprob': -0.16578334674500583, 'compression_ratio': 1.661596958174905, 'no_speech_prob': 0.01959943398833275}, {'id': 616, 'seek': 257130, 'start': 2576.1800000000003, 'end': 2579.1000000000004, 'text': ' how do I specify the operand.', 'tokens': [50608, 577, 360, 286, 16500, 264, 2208, 474, 13, 50754], 'temperature': 0.0, 'avg_logprob': -0.16578334674500583, 'compression_ratio': 1.661596958174905, 'no_speech_prob': 0.01959943398833275}, {'id': 617, 'seek': 257130, 'start': 2579.1000000000004, 'end': 2584.2200000000003, 'text': ' If it is in the register of course I can specify the register number that itself is in R. There', 'tokens': [50754, 759, 309, 307, 294, 264, 7280, 295, 1164, 286, 393, 16500, 264, 7280, 1230, 300, 2564, 307, 294, 497, 13, 821, 51010], 'temperature': 0.0, 'avg_logprob': -0.16578334674500583, 'compression_ratio': 1.661596958174905, 'no_speech_prob': 0.01959943398833275}, {'id': 618, 'seek': 257130, 'start': 2584.2200000000003, 'end': 2588.1800000000003, 'text': ' is something which is in between which actually typically falls in this in memory kind of', 'tokens': [51010, 307, 746, 597, 307, 294, 1296, 597, 767, 5850, 8804, 294, 341, 294, 4675, 733, 295, 51208], 'temperature': 0.0, 'avg_logprob': -0.16578334674500583, 'compression_ratio': 1.661596958174905, 'no_speech_prob': 0.01959943398833275}, {'id': 619, 'seek': 257130, 'start': 2588.1800000000003, 'end': 2589.1800000000003, 'text': ' a thing.', 'tokens': [51208, 257, 551, 13, 51258], 'temperature': 0.0, 'avg_logprob': -0.16578334674500583, 'compression_ratio': 1.661596958174905, 'no_speech_prob': 0.01959943398833275}, {'id': 620, 'seek': 257130, 'start': 2589.1800000000003, 'end': 2594.98, 'text': ' For example you could have small constants as a part of your instruction, right.', 'tokens': [51258, 1171, 1365, 291, 727, 362, 1359, 35870, 382, 257, 644, 295, 428, 10951, 11, 558, 13, 51548], 'temperature': 0.0, 'avg_logprob': -0.16578334674500583, 'compression_ratio': 1.661596958174905, 'no_speech_prob': 0.01959943398833275}, {'id': 621, 'seek': 257130, 'start': 2594.98, 'end': 2600.2200000000003, 'text': ' Add R1 with 1, right or subtract 4 from R2.', 'tokens': [51548, 5349, 497, 16, 365, 502, 11, 558, 420, 16390, 1017, 490, 497, 17, 13, 51810], 'temperature': 0.0, 'avg_logprob': -0.16578334674500583, 'compression_ratio': 1.661596958174905, 'no_speech_prob': 0.01959943398833275}, {'id': 622, 'seek': 260022, 'start': 2600.22, 'end': 2603.06, 'text': ' Those are all small constants, right.', 'tokens': [50364, 3950, 366, 439, 1359, 35870, 11, 558, 13, 50506], 'temperature': 0.0, 'avg_logprob': -0.14369117264199047, 'compression_ratio': 2.013100436681223, 'no_speech_prob': 0.009487997740507126}, {'id': 623, 'seek': 260022, 'start': 2603.06, 'end': 2607.3799999999997, 'text': ' That constant is called immediate constant and that is a part of the instruction and', 'tokens': [50506, 663, 5754, 307, 1219, 11629, 5754, 293, 300, 307, 257, 644, 295, 264, 10951, 293, 50722], 'temperature': 0.0, 'avg_logprob': -0.14369117264199047, 'compression_ratio': 2.013100436681223, 'no_speech_prob': 0.009487997740507126}, {'id': 624, 'seek': 260022, 'start': 2607.3799999999997, 'end': 2611.8199999999997, 'text': ' since it is a part of the instruction, instruction is in the memory, it is actually in memory.', 'tokens': [50722, 1670, 309, 307, 257, 644, 295, 264, 10951, 11, 10951, 307, 294, 264, 4675, 11, 309, 307, 767, 294, 4675, 13, 50944], 'temperature': 0.0, 'avg_logprob': -0.14369117264199047, 'compression_ratio': 2.013100436681223, 'no_speech_prob': 0.009487997740507126}, {'id': 625, 'seek': 260022, 'start': 2611.8199999999997, 'end': 2614.7, 'text': ' It is a part of the instruction but it is in memory.', 'tokens': [50944, 467, 307, 257, 644, 295, 264, 10951, 457, 309, 307, 294, 4675, 13, 51088], 'temperature': 0.0, 'avg_logprob': -0.14369117264199047, 'compression_ratio': 2.013100436681223, 'no_speech_prob': 0.009487997740507126}, {'id': 626, 'seek': 260022, 'start': 2614.7, 'end': 2619.8599999999997, 'text': ' So we will also talk about those things as we talk about operands, okay.', 'tokens': [51088, 407, 321, 486, 611, 751, 466, 729, 721, 382, 321, 751, 466, 2208, 2967, 11, 1392, 13, 51346], 'temperature': 0.0, 'avg_logprob': -0.14369117264199047, 'compression_ratio': 2.013100436681223, 'no_speech_prob': 0.009487997740507126}, {'id': 627, 'seek': 260022, 'start': 2619.8599999999997, 'end': 2622.7, 'text': ' Now the last thing is also very important.', 'tokens': [51346, 823, 264, 1036, 551, 307, 611, 588, 1021, 13, 51488], 'temperature': 0.0, 'avg_logprob': -0.14369117264199047, 'compression_ratio': 2.013100436681223, 'no_speech_prob': 0.009487997740507126}, {'id': 628, 'seek': 260022, 'start': 2622.7, 'end': 2627.56, 'text': ' We are also very important from the perspective of code generation, right.', 'tokens': [51488, 492, 366, 611, 588, 1021, 490, 264, 4585, 295, 3089, 5125, 11, 558, 13, 51731], 'temperature': 0.0, 'avg_logprob': -0.14369117264199047, 'compression_ratio': 2.013100436681223, 'no_speech_prob': 0.009487997740507126}, {'id': 629, 'seek': 262756, 'start': 2627.56, 'end': 2635.32, 'text': ' Some machines use a 2 address format, some machines use a 3 address format, okay.', 'tokens': [50364, 2188, 8379, 764, 257, 568, 2985, 7877, 11, 512, 8379, 764, 257, 805, 2985, 7877, 11, 1392, 13, 50752], 'temperature': 0.0, 'avg_logprob': -0.19514098218692247, 'compression_ratio': 1.6717948717948719, 'no_speech_prob': 0.25878334045410156}, {'id': 630, 'seek': 262756, 'start': 2635.32, 'end': 2638.7999999999997, 'text': ' Typically RISC machines use what is called a 3 address format.', 'tokens': [50752, 23129, 497, 2343, 34, 8379, 764, 437, 307, 1219, 257, 805, 2985, 7877, 13, 50926], 'temperature': 0.0, 'avg_logprob': -0.19514098218692247, 'compression_ratio': 1.6717948717948719, 'no_speech_prob': 0.25878334045410156}, {'id': 631, 'seek': 262756, 'start': 2638.7999999999997, 'end': 2641.44, 'text': ' Here you can see examples, right.', 'tokens': [50926, 1692, 291, 393, 536, 5110, 11, 558, 13, 51058], 'temperature': 0.0, 'avg_logprob': -0.19514098218692247, 'compression_ratio': 1.6717948717948719, 'no_speech_prob': 0.25878334045410156}, {'id': 632, 'seek': 262756, 'start': 2641.44, 'end': 2647.98, 'text': ' For example when I say add R1, R2, R3, right again the meaning of this instruction is that', 'tokens': [51058, 1171, 1365, 562, 286, 584, 909, 497, 16, 11, 497, 17, 11, 497, 18, 11, 558, 797, 264, 3620, 295, 341, 10951, 307, 300, 51385], 'temperature': 0.0, 'avg_logprob': -0.19514098218692247, 'compression_ratio': 1.6717948717948719, 'no_speech_prob': 0.25878334045410156}, {'id': 633, 'seek': 262756, 'start': 2647.98, 'end': 2653.16, 'text': ' add the contents of R2 with R3 and put the result in R1.', 'tokens': [51385, 909, 264, 15768, 295, 497, 17, 365, 497, 18, 293, 829, 264, 1874, 294, 497, 16, 13, 51644], 'temperature': 0.0, 'avg_logprob': -0.19514098218692247, 'compression_ratio': 1.6717948717948719, 'no_speech_prob': 0.25878334045410156}, {'id': 634, 'seek': 265316, 'start': 2653.16, 'end': 2660.3199999999997, 'text': ' So I specify the destination and the two source operands explicitly in my program or in my', 'tokens': [50364, 407, 286, 16500, 264, 12236, 293, 264, 732, 4009, 2208, 2967, 20803, 294, 452, 1461, 420, 294, 452, 50722], 'temperature': 0.0, 'avg_logprob': -0.2245818837483724, 'compression_ratio': 1.69364161849711, 'no_speech_prob': 0.023194249719381332}, {'id': 635, 'seek': 265316, 'start': 2660.3199999999997, 'end': 2661.3199999999997, 'text': ' instruction, okay.', 'tokens': [50722, 10951, 11, 1392, 13, 50772], 'temperature': 0.0, 'avg_logprob': -0.2245818837483724, 'compression_ratio': 1.69364161849711, 'no_speech_prob': 0.023194249719381332}, {'id': 636, 'seek': 265316, 'start': 2661.3199999999997, 'end': 2670.3599999999997, 'text': ' Whereas in a 2 address format, okay, I only specify two operands, okay.', 'tokens': [50772, 13813, 294, 257, 568, 2985, 7877, 11, 1392, 11, 286, 787, 16500, 732, 2208, 2967, 11, 1392, 13, 51224], 'temperature': 0.0, 'avg_logprob': -0.2245818837483724, 'compression_ratio': 1.69364161849711, 'no_speech_prob': 0.023194249719381332}, {'id': 637, 'seek': 265316, 'start': 2670.3599999999997, 'end': 2673.72, 'text': ' One of them is the source as well as the destination.', 'tokens': [51224, 1485, 295, 552, 307, 264, 4009, 382, 731, 382, 264, 12236, 13, 51392], 'temperature': 0.0, 'avg_logprob': -0.2245818837483724, 'compression_ratio': 1.69364161849711, 'no_speech_prob': 0.023194249719381332}, {'id': 638, 'seek': 265316, 'start': 2673.72, 'end': 2677.7599999999998, 'text': ' Which one is the source and destination is by convention.', 'tokens': [51392, 3013, 472, 307, 264, 4009, 293, 12236, 307, 538, 10286, 13, 51594], 'temperature': 0.0, 'avg_logprob': -0.2245818837483724, 'compression_ratio': 1.69364161849711, 'no_speech_prob': 0.023194249719381332}, {'id': 639, 'seek': 267776, 'start': 2677.76, 'end': 2685.1600000000003, 'text': ' Typically we will assume that when I specify subtract R2, R1 it is R2 minus R1 going back', 'tokens': [50364, 23129, 321, 486, 6552, 300, 562, 286, 16500, 16390, 497, 17, 11, 497, 16, 309, 307, 497, 17, 3175, 497, 16, 516, 646, 50734], 'temperature': 0.0, 'avg_logprob': -0.21118009466873972, 'compression_ratio': 1.5446428571428572, 'no_speech_prob': 0.484335720539093}, {'id': 640, 'seek': 267776, 'start': 2685.1600000000003, 'end': 2687.84, 'text': ' into R2.', 'tokens': [50734, 666, 497, 17, 13, 50868], 'temperature': 0.0, 'avg_logprob': -0.21118009466873972, 'compression_ratio': 1.5446428571428572, 'no_speech_prob': 0.484335720539093}, {'id': 641, 'seek': 267776, 'start': 2687.84, 'end': 2690.88, 'text': ' Sometimes you can also say R1 minus R2 going into R1.', 'tokens': [50868, 4803, 291, 393, 611, 584, 497, 16, 3175, 497, 17, 516, 666, 497, 16, 13, 51020], 'temperature': 0.0, 'avg_logprob': -0.21118009466873972, 'compression_ratio': 1.5446428571428572, 'no_speech_prob': 0.484335720539093}, {'id': 642, 'seek': 267776, 'start': 2690.88, 'end': 2691.88, 'text': ' It does not matter.', 'tokens': [51020, 467, 775, 406, 1871, 13, 51070], 'temperature': 0.0, 'avg_logprob': -0.21118009466873972, 'compression_ratio': 1.5446428571428572, 'no_speech_prob': 0.484335720539093}, {'id': 643, 'seek': 267776, 'start': 2691.88, 'end': 2698.1200000000003, 'text': ' It is a convention and depends on the processor which way it is being written, right.', 'tokens': [51070, 467, 307, 257, 10286, 293, 5946, 322, 264, 15321, 597, 636, 309, 307, 885, 3720, 11, 558, 13, 51382], 'temperature': 0.0, 'avg_logprob': -0.21118009466873972, 'compression_ratio': 1.5446428571428572, 'no_speech_prob': 0.484335720539093}, {'id': 644, 'seek': 267776, 'start': 2698.1200000000003, 'end': 2702.82, 'text': ' But the main difference here is that here you explicitly specify all the three operands', 'tokens': [51382, 583, 264, 2135, 2649, 510, 307, 300, 510, 291, 20803, 16500, 439, 264, 1045, 2208, 2967, 51617], 'temperature': 0.0, 'avg_logprob': -0.21118009466873972, 'compression_ratio': 1.5446428571428572, 'no_speech_prob': 0.484335720539093}, {'id': 645, 'seek': 270282, 'start': 2702.82, 'end': 2706.96, 'text': ' whereas here you specify only two operands.', 'tokens': [50364, 9735, 510, 291, 16500, 787, 732, 2208, 2967, 13, 50571], 'temperature': 0.0, 'avg_logprob': -0.2328387669154576, 'compression_ratio': 1.7795698924731183, 'no_speech_prob': 0.28086140751838684}, {'id': 646, 'seek': 270282, 'start': 2706.96, 'end': 2711.82, 'text': ' One of them is the source as well as the destination, right.', 'tokens': [50571, 1485, 295, 552, 307, 264, 4009, 382, 731, 382, 264, 12236, 11, 558, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.2328387669154576, 'compression_ratio': 1.7795698924731183, 'no_speech_prob': 0.28086140751838684}, {'id': 647, 'seek': 270282, 'start': 2711.82, 'end': 2716.26, 'text': ' Sys instructions are typically of this form.', 'tokens': [50814, 318, 749, 9415, 366, 5850, 295, 341, 1254, 13, 51036], 'temperature': 0.0, 'avg_logprob': -0.2328387669154576, 'compression_ratio': 1.7795698924731183, 'no_speech_prob': 0.28086140751838684}, {'id': 648, 'seek': 270282, 'start': 2716.26, 'end': 2721.1800000000003, 'text': ' Risk instructions are typically of this form, okay.', 'tokens': [51036, 45892, 9415, 366, 5850, 295, 341, 1254, 11, 1392, 13, 51282], 'temperature': 0.0, 'avg_logprob': -0.2328387669154576, 'compression_ratio': 1.7795698924731183, 'no_speech_prob': 0.28086140751838684}, {'id': 649, 'seek': 270282, 'start': 2721.1800000000003, 'end': 2727.1400000000003, 'text': ' And in a Sys machine you could also have memory operands as a part of your instruction or', 'tokens': [51282, 400, 294, 257, 318, 749, 3479, 291, 727, 611, 362, 4675, 2208, 2967, 382, 257, 644, 295, 428, 10951, 420, 51580], 'temperature': 0.0, 'avg_logprob': -0.2328387669154576, 'compression_ratio': 1.7795698924731183, 'no_speech_prob': 0.28086140751838684}, {'id': 650, 'seek': 270282, 'start': 2727.1400000000003, 'end': 2729.46, 'text': ' as a part of your arithmetic operation.', 'tokens': [51580, 382, 257, 644, 295, 428, 42973, 6916, 13, 51696], 'temperature': 0.0, 'avg_logprob': -0.2328387669154576, 'compression_ratio': 1.7795698924731183, 'no_speech_prob': 0.28086140751838684}, {'id': 651, 'seek': 272946, 'start': 2729.46, 'end': 2736.42, 'text': ' So for example here this says subtract the contents of the memory location A from R1', 'tokens': [50364, 407, 337, 1365, 510, 341, 1619, 16390, 264, 15768, 295, 264, 4675, 4914, 316, 490, 497, 16, 50712], 'temperature': 0.0, 'avg_logprob': -0.20809840211773864, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.03125036880373955}, {'id': 652, 'seek': 272946, 'start': 2736.42, 'end': 2740.98, 'text': ' and then put the result back into R1, right.', 'tokens': [50712, 293, 550, 829, 264, 1874, 646, 666, 497, 16, 11, 558, 13, 50940], 'temperature': 0.0, 'avg_logprob': -0.20809840211773864, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.03125036880373955}, {'id': 653, 'seek': 272946, 'start': 2740.98, 'end': 2742.66, 'text': ' That is what it says.', 'tokens': [50940, 663, 307, 437, 309, 1619, 13, 51024], 'temperature': 0.0, 'avg_logprob': -0.20809840211773864, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.03125036880373955}, {'id': 654, 'seek': 272946, 'start': 2742.66, 'end': 2747.7400000000002, 'text': ' Again when you talk about a specific processor we will specify whether this is the destination', 'tokens': [51024, 3764, 562, 291, 751, 466, 257, 2685, 15321, 321, 486, 16500, 1968, 341, 307, 264, 12236, 51278], 'temperature': 0.0, 'avg_logprob': -0.20809840211773864, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.03125036880373955}, {'id': 655, 'seek': 272946, 'start': 2747.7400000000002, 'end': 2750.02, 'text': ' or this is the destination, okay.', 'tokens': [51278, 420, 341, 307, 264, 12236, 11, 1392, 13, 51392], 'temperature': 0.0, 'avg_logprob': -0.20809840211773864, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.03125036880373955}, {'id': 656, 'seek': 272946, 'start': 2750.02, 'end': 2752.58, 'text': ' That is a convention of that particular processor.', 'tokens': [51392, 663, 307, 257, 10286, 295, 300, 1729, 15321, 13, 51520], 'temperature': 0.0, 'avg_logprob': -0.20809840211773864, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.03125036880373955}, {'id': 657, 'seek': 272946, 'start': 2752.58, 'end': 2753.58, 'text': ' We can always follow that.', 'tokens': [51520, 492, 393, 1009, 1524, 300, 13, 51570], 'temperature': 0.0, 'avg_logprob': -0.20809840211773864, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.03125036880373955}, {'id': 658, 'seek': 272946, 'start': 2753.58, 'end': 2757.7, 'text': ' We have to follow that consistently, right.', 'tokens': [51570, 492, 362, 281, 1524, 300, 14961, 11, 558, 13, 51776], 'temperature': 0.0, 'avg_logprob': -0.20809840211773864, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.03125036880373955}, {'id': 659, 'seek': 275770, 'start': 2757.7, 'end': 2764.8199999999997, 'text': ' And then when you have operands like subtract which are not commutative it is also important', 'tokens': [50364, 400, 550, 562, 291, 362, 2208, 2967, 411, 16390, 597, 366, 406, 800, 325, 1166, 309, 307, 611, 1021, 50720], 'temperature': 0.0, 'avg_logprob': -0.13656151528451957, 'compression_ratio': 1.8918918918918919, 'no_speech_prob': 0.022944895550608635}, {'id': 660, 'seek': 275770, 'start': 2764.8199999999997, 'end': 2768.3799999999997, 'text': ' which is the first operand and which is the second operand, right.', 'tokens': [50720, 597, 307, 264, 700, 2208, 474, 293, 597, 307, 264, 1150, 2208, 474, 11, 558, 13, 50898], 'temperature': 0.0, 'avg_logprob': -0.13656151528451957, 'compression_ratio': 1.8918918918918919, 'no_speech_prob': 0.022944895550608635}, {'id': 661, 'seek': 275770, 'start': 2768.3799999999997, 'end': 2774.9399999999996, 'text': ' So when I talk about the instruction set architecture I will use the risk instruction set architecture.', 'tokens': [50898, 407, 562, 286, 751, 466, 264, 10951, 992, 9482, 286, 486, 764, 264, 3148, 10951, 992, 9482, 13, 51226], 'temperature': 0.0, 'avg_logprob': -0.13656151528451957, 'compression_ratio': 1.8918918918918919, 'no_speech_prob': 0.022944895550608635}, {'id': 662, 'seek': 275770, 'start': 2774.9399999999996, 'end': 2781.74, 'text': ' I will typically talk about this and there we will say that R1 is my destination register,', 'tokens': [51226, 286, 486, 5850, 751, 466, 341, 293, 456, 321, 486, 584, 300, 497, 16, 307, 452, 12236, 7280, 11, 51566], 'temperature': 0.0, 'avg_logprob': -0.13656151528451957, 'compression_ratio': 1.8918918918918919, 'no_speech_prob': 0.022944895550608635}, {'id': 663, 'seek': 275770, 'start': 2781.74, 'end': 2786.62, 'text': ' R2 is my first source operand and R3 is my second source operand.', 'tokens': [51566, 497, 17, 307, 452, 700, 4009, 2208, 474, 293, 497, 18, 307, 452, 1150, 4009, 2208, 474, 13, 51810], 'temperature': 0.0, 'avg_logprob': -0.13656151528451957, 'compression_ratio': 1.8918918918918919, 'no_speech_prob': 0.022944895550608635}, {'id': 664, 'seek': 278662, 'start': 2787.3399999999997, 'end': 2793.42, 'text': ' When I talk about this construction I will use either one of these formats, okay and', 'tokens': [50400, 1133, 286, 751, 466, 341, 6435, 286, 486, 764, 2139, 472, 295, 613, 25879, 11, 1392, 293, 50704], 'temperature': 0.0, 'avg_logprob': -0.33339038491249084, 'compression_ratio': 1.4294478527607362, 'no_speech_prob': 0.006149003282189369}, {'id': 665, 'seek': 278662, 'start': 2793.42, 'end': 2802.42, 'text': ' typically say that the register is my destination operand, okay.', 'tokens': [50704, 5850, 584, 300, 264, 7280, 307, 452, 12236, 2208, 474, 11, 1392, 13, 51154], 'temperature': 0.0, 'avg_logprob': -0.33339038491249084, 'compression_ratio': 1.4294478527607362, 'no_speech_prob': 0.006149003282189369}, {'id': 666, 'seek': 278662, 'start': 2802.42, 'end': 2803.42, 'text': ' Any questions?', 'tokens': [51154, 2639, 1651, 30, 51204], 'temperature': 0.0, 'avg_logprob': -0.33339038491249084, 'compression_ratio': 1.4294478527607362, 'no_speech_prob': 0.006149003282189369}, {'id': 667, 'seek': 278662, 'start': 2803.42, 'end': 2804.42, 'text': ' Good so far.', 'tokens': [51204, 2205, 370, 1400, 13, 51254], 'temperature': 0.0, 'avg_logprob': -0.33339038491249084, 'compression_ratio': 1.4294478527607362, 'no_speech_prob': 0.006149003282189369}, {'id': 668, 'seek': 278662, 'start': 2804.42, 'end': 2805.42, 'text': ' Okay.', 'tokens': [51254, 1033, 13, 51304], 'temperature': 0.0, 'avg_logprob': -0.33339038491249084, 'compression_ratio': 1.4294478527607362, 'no_speech_prob': 0.006149003282189369}, {'id': 669, 'seek': 278662, 'start': 2805.42, 'end': 2811.8199999999997, 'text': ' So let us talk about the addressing modes, right.', 'tokens': [51304, 407, 718, 505, 751, 466, 264, 14329, 14068, 11, 558, 13, 51624], 'temperature': 0.0, 'avg_logprob': -0.33339038491249084, 'compression_ratio': 1.4294478527607362, 'no_speech_prob': 0.006149003282189369}, {'id': 670, 'seek': 281182, 'start': 2811.82, 'end': 2813.38, 'text': ' There are several addressing modes.', 'tokens': [50364, 821, 366, 2940, 14329, 14068, 13, 50442], 'temperature': 0.0, 'avg_logprob': -0.15489136377970378, 'compression_ratio': 1.8603351955307263, 'no_speech_prob': 0.06951972097158432}, {'id': 671, 'seek': 281182, 'start': 2813.38, 'end': 2820.34, 'text': ' Again a processor may support a subset of these addressing modes, okay.', 'tokens': [50442, 3764, 257, 15321, 815, 1406, 257, 25993, 295, 613, 14329, 14068, 11, 1392, 13, 50790], 'temperature': 0.0, 'avg_logprob': -0.15489136377970378, 'compression_ratio': 1.8603351955307263, 'no_speech_prob': 0.06951972097158432}, {'id': 672, 'seek': 281182, 'start': 2820.34, 'end': 2822.2200000000003, 'text': ' Now let us see some of these addressing modes.', 'tokens': [50790, 823, 718, 505, 536, 512, 295, 613, 14329, 14068, 13, 50884], 'temperature': 0.0, 'avg_logprob': -0.15489136377970378, 'compression_ratio': 1.8603351955307263, 'no_speech_prob': 0.06951972097158432}, {'id': 673, 'seek': 281182, 'start': 2822.2200000000003, 'end': 2825.7000000000003, 'text': ' The first one is the register direct addressing mode.', 'tokens': [50884, 440, 700, 472, 307, 264, 7280, 2047, 14329, 4391, 13, 51058], 'temperature': 0.0, 'avg_logprob': -0.15489136377970378, 'compression_ratio': 1.8603351955307263, 'no_speech_prob': 0.06951972097158432}, {'id': 674, 'seek': 281182, 'start': 2825.7000000000003, 'end': 2831.3, 'text': ' In the register direct addressing mode the operand is in the register, okay.', 'tokens': [51058, 682, 264, 7280, 2047, 14329, 4391, 264, 2208, 474, 307, 294, 264, 7280, 11, 1392, 13, 51338], 'temperature': 0.0, 'avg_logprob': -0.15489136377970378, 'compression_ratio': 1.8603351955307263, 'no_speech_prob': 0.06951972097158432}, {'id': 675, 'seek': 281182, 'start': 2831.3, 'end': 2832.92, 'text': ' So here is the example.', 'tokens': [51338, 407, 510, 307, 264, 1365, 13, 51419], 'temperature': 0.0, 'avg_logprob': -0.15489136377970378, 'compression_ratio': 1.8603351955307263, 'no_speech_prob': 0.06951972097158432}, {'id': 676, 'seek': 281182, 'start': 2832.92, 'end': 2835.6200000000003, 'text': ' You say add R1, R2, R3.', 'tokens': [51419, 509, 584, 909, 497, 16, 11, 497, 17, 11, 497, 18, 13, 51554], 'temperature': 0.0, 'avg_logprob': -0.15489136377970378, 'compression_ratio': 1.8603351955307263, 'no_speech_prob': 0.06951972097158432}, {'id': 677, 'seek': 283562, 'start': 2835.62, 'end': 2846.46, 'text': ' The contents of R2 is added with the contents of R3 and is being stored in R1, okay.', 'tokens': [50364, 440, 15768, 295, 497, 17, 307, 3869, 365, 264, 15768, 295, 497, 18, 293, 307, 885, 12187, 294, 497, 16, 11, 1392, 13, 50906], 'temperature': 0.0, 'avg_logprob': -0.2968536206145785, 'compression_ratio': 1.4666666666666666, 'no_speech_prob': 0.10286296159029007}, {'id': 678, 'seek': 283562, 'start': 2846.46, 'end': 2851.2999999999997, 'text': ' The two source operands and the destination operands, okay.', 'tokens': [50906, 440, 732, 4009, 2208, 2967, 293, 264, 12236, 2208, 2967, 11, 1392, 13, 51148], 'temperature': 0.0, 'avg_logprob': -0.2968536206145785, 'compression_ratio': 1.4666666666666666, 'no_speech_prob': 0.10286296159029007}, {'id': 679, 'seek': 283562, 'start': 2851.2999999999997, 'end': 2853.66, 'text': ' So here is an example.', 'tokens': [51148, 407, 510, 307, 364, 1365, 13, 51266], 'temperature': 0.0, 'avg_logprob': -0.2968536206145785, 'compression_ratio': 1.4666666666666666, 'no_speech_prob': 0.10286296159029007}, {'id': 680, 'seek': 283562, 'start': 2853.66, 'end': 2857.2599999999998, 'text': ' It actually goes through.', 'tokens': [51266, 467, 767, 1709, 807, 13, 51446], 'temperature': 0.0, 'avg_logprob': -0.2968536206145785, 'compression_ratio': 1.4666666666666666, 'no_speech_prob': 0.10286296159029007}, {'id': 681, 'seek': 283562, 'start': 2857.2599999999998, 'end': 2860.58, 'text': ' So what should go into R1?', 'tokens': [51446, 407, 437, 820, 352, 666, 497, 16, 30, 51612], 'temperature': 0.0, 'avg_logprob': -0.2968536206145785, 'compression_ratio': 1.4666666666666666, 'no_speech_prob': 0.10286296159029007}, {'id': 682, 'seek': 286058, 'start': 2860.58, 'end': 2867.8199999999997, 'text': ' So if you assume that these are decimal numbers then it should be 59.', 'tokens': [50364, 407, 498, 291, 6552, 300, 613, 366, 26601, 3547, 550, 309, 820, 312, 24624, 13, 50726], 'temperature': 0.0, 'avg_logprob': -0.26152325798483456, 'compression_ratio': 1.52020202020202, 'no_speech_prob': 0.00823808554559946}, {'id': 683, 'seek': 286058, 'start': 2867.8199999999997, 'end': 2869.86, 'text': ' I hope it goes there, okay.', 'tokens': [50726, 286, 1454, 309, 1709, 456, 11, 1392, 13, 50828], 'temperature': 0.0, 'avg_logprob': -0.26152325798483456, 'compression_ratio': 1.52020202020202, 'no_speech_prob': 0.00823808554559946}, {'id': 684, 'seek': 286058, 'start': 2869.86, 'end': 2870.86, 'text': ' Sounds good, right.', 'tokens': [50828, 14576, 665, 11, 558, 13, 50878], 'temperature': 0.0, 'avg_logprob': -0.26152325798483456, 'compression_ratio': 1.52020202020202, 'no_speech_prob': 0.00823808554559946}, {'id': 685, 'seek': 286058, 'start': 2870.86, 'end': 2877.86, 'text': ' But of course all of this is going to be stored in hexadecimal, okay or binary.', 'tokens': [50878, 583, 295, 1164, 439, 295, 341, 307, 516, 281, 312, 12187, 294, 23291, 762, 66, 10650, 11, 1392, 420, 17434, 13, 51228], 'temperature': 0.0, 'avg_logprob': -0.26152325798483456, 'compression_ratio': 1.52020202020202, 'no_speech_prob': 0.00823808554559946}, {'id': 686, 'seek': 286058, 'start': 2877.86, 'end': 2878.86, 'text': ' Okay.', 'tokens': [51228, 1033, 13, 51278], 'temperature': 0.0, 'avg_logprob': -0.26152325798483456, 'compression_ratio': 1.52020202020202, 'no_speech_prob': 0.00823808554559946}, {'id': 687, 'seek': 286058, 'start': 2878.86, 'end': 2884.1, 'text': ' Let us talk about the next addressing mode which is what is called the immediate addressing', 'tokens': [51278, 961, 505, 751, 466, 264, 958, 14329, 4391, 597, 307, 437, 307, 1219, 264, 11629, 14329, 51540], 'temperature': 0.0, 'avg_logprob': -0.26152325798483456, 'compression_ratio': 1.52020202020202, 'no_speech_prob': 0.00823808554559946}, {'id': 688, 'seek': 286058, 'start': 2884.1, 'end': 2885.1, 'text': ' mode.', 'tokens': [51540, 4391, 13, 51590], 'temperature': 0.0, 'avg_logprob': -0.26152325798483456, 'compression_ratio': 1.52020202020202, 'no_speech_prob': 0.00823808554559946}, {'id': 689, 'seek': 288510, 'start': 2885.1, 'end': 2891.74, 'text': ' In the immediate addressing mode the operand is a small constant and is typically available', 'tokens': [50364, 682, 264, 11629, 14329, 4391, 264, 2208, 474, 307, 257, 1359, 5754, 293, 307, 5850, 2435, 50696], 'temperature': 0.0, 'avg_logprob': -0.19295564098892926, 'compression_ratio': 1.6420233463035019, 'no_speech_prob': 0.09188469499349594}, {'id': 690, 'seek': 288510, 'start': 2891.74, 'end': 2893.22, 'text': ' as a part of the instruction.', 'tokens': [50696, 382, 257, 644, 295, 264, 10951, 13, 50770], 'temperature': 0.0, 'avg_logprob': -0.19295564098892926, 'compression_ratio': 1.6420233463035019, 'no_speech_prob': 0.09188469499349594}, {'id': 691, 'seek': 288510, 'start': 2893.22, 'end': 2897.9, 'text': ' Either you write it just like a number like this or you put a hash sign and then write', 'tokens': [50770, 13746, 291, 2464, 309, 445, 411, 257, 1230, 411, 341, 420, 291, 829, 257, 22019, 1465, 293, 550, 2464, 51004], 'temperature': 0.0, 'avg_logprob': -0.19295564098892926, 'compression_ratio': 1.6420233463035019, 'no_speech_prob': 0.09188469499349594}, {'id': 692, 'seek': 288510, 'start': 2897.9, 'end': 2898.9, 'text': ' the number.', 'tokens': [51004, 264, 1230, 13, 51054], 'temperature': 0.0, 'avg_logprob': -0.19295564098892926, 'compression_ratio': 1.6420233463035019, 'no_speech_prob': 0.09188469499349594}, {'id': 693, 'seek': 288510, 'start': 2898.9, 'end': 2903.14, 'text': ' Again depending on the convention that is followed in the particular assembly language,', 'tokens': [51054, 3764, 5413, 322, 264, 10286, 300, 307, 6263, 294, 264, 1729, 12103, 2856, 11, 51266], 'temperature': 0.0, 'avg_logprob': -0.19295564098892926, 'compression_ratio': 1.6420233463035019, 'no_speech_prob': 0.09188469499349594}, {'id': 694, 'seek': 288510, 'start': 2903.14, 'end': 2904.14, 'text': ' right.', 'tokens': [51266, 558, 13, 51316], 'temperature': 0.0, 'avg_logprob': -0.19295564098892926, 'compression_ratio': 1.6420233463035019, 'no_speech_prob': 0.09188469499349594}, {'id': 695, 'seek': 288510, 'start': 2904.14, 'end': 2909.5, 'text': ' And the idea here is that you add the contents of R2 with the value 1 and put the result', 'tokens': [51316, 400, 264, 1558, 510, 307, 300, 291, 909, 264, 15768, 295, 497, 17, 365, 264, 2158, 502, 293, 829, 264, 1874, 51584], 'temperature': 0.0, 'avg_logprob': -0.19295564098892926, 'compression_ratio': 1.6420233463035019, 'no_speech_prob': 0.09188469499349594}, {'id': 696, 'seek': 288510, 'start': 2909.5, 'end': 2912.18, 'text': ' back in R1, okay.', 'tokens': [51584, 646, 294, 497, 16, 11, 1392, 13, 51718], 'temperature': 0.0, 'avg_logprob': -0.19295564098892926, 'compression_ratio': 1.6420233463035019, 'no_speech_prob': 0.09188469499349594}, {'id': 697, 'seek': 291218, 'start': 2912.18, 'end': 2917.06, 'text': ' Let us look at the register indirect addressing mode.', 'tokens': [50364, 961, 505, 574, 412, 264, 7280, 19523, 14329, 4391, 13, 50608], 'temperature': 0.0, 'avg_logprob': -0.1727035496685956, 'compression_ratio': 1.7567567567567568, 'no_speech_prob': 0.07419929653406143}, {'id': 698, 'seek': 291218, 'start': 2917.06, 'end': 2922.94, 'text': ' In the register indirect addressing mode the operand is in the memory and the address of', 'tokens': [50608, 682, 264, 7280, 19523, 14329, 4391, 264, 2208, 474, 307, 294, 264, 4675, 293, 264, 2985, 295, 50902], 'temperature': 0.0, 'avg_logprob': -0.1727035496685956, 'compression_ratio': 1.7567567567567568, 'no_speech_prob': 0.07419929653406143}, {'id': 699, 'seek': 291218, 'start': 2922.94, 'end': 2927.24, 'text': ' the operand is in the register, correct, okay.', 'tokens': [50902, 264, 2208, 474, 307, 294, 264, 7280, 11, 3006, 11, 1392, 13, 51117], 'temperature': 0.0, 'avg_logprob': -0.1727035496685956, 'compression_ratio': 1.7567567567567568, 'no_speech_prob': 0.07419929653406143}, {'id': 700, 'seek': 291218, 'start': 2927.24, 'end': 2932.22, 'text': ' So here is an example, right.', 'tokens': [51117, 407, 510, 307, 364, 1365, 11, 558, 13, 51366], 'temperature': 0.0, 'avg_logprob': -0.1727035496685956, 'compression_ratio': 1.7567567567567568, 'no_speech_prob': 0.07419929653406143}, {'id': 701, 'seek': 291218, 'start': 2932.22, 'end': 2937.02, 'text': ' So we say R1 hash 32, R2 hash 100, okay.', 'tokens': [51366, 407, 321, 584, 497, 16, 22019, 8858, 11, 497, 17, 22019, 2319, 11, 1392, 13, 51606], 'temperature': 0.0, 'avg_logprob': -0.1727035496685956, 'compression_ratio': 1.7567567567567568, 'no_speech_prob': 0.07419929653406143}, {'id': 702, 'seek': 293702, 'start': 2937.02, 'end': 2944.34, 'text': ' And you have the values in various memory locations starting from 196 onwards, okay.', 'tokens': [50364, 400, 291, 362, 264, 4190, 294, 3683, 4675, 9253, 2891, 490, 7998, 34230, 11, 1392, 13, 50730], 'temperature': 0.0, 'avg_logprob': -0.21722723848076278, 'compression_ratio': 1.5819672131147542, 'no_speech_prob': 0.22049038112163544}, {'id': 703, 'seek': 293702, 'start': 2944.34, 'end': 2946.58, 'text': ' Here you are performing an operation.', 'tokens': [50730, 1692, 291, 366, 10205, 364, 6916, 13, 50842], 'temperature': 0.0, 'avg_logprob': -0.21722723848076278, 'compression_ratio': 1.5819672131147542, 'no_speech_prob': 0.22049038112163544}, {'id': 704, 'seek': 293702, 'start': 2946.58, 'end': 2951.48, 'text': ' Of course this is not typically what you see in a RISC machine because RISC machine cannot', 'tokens': [50842, 2720, 1164, 341, 307, 406, 5850, 437, 291, 536, 294, 257, 497, 2343, 34, 3479, 570, 497, 2343, 34, 3479, 2644, 51087], 'temperature': 0.0, 'avg_logprob': -0.21722723848076278, 'compression_ratio': 1.5819672131147542, 'no_speech_prob': 0.22049038112163544}, {'id': 705, 'seek': 293702, 'start': 2951.48, 'end': 2954.78, 'text': ' have arithmetic instructions with memory operands.', 'tokens': [51087, 362, 42973, 9415, 365, 4675, 2208, 2967, 13, 51252], 'temperature': 0.0, 'avg_logprob': -0.21722723848076278, 'compression_ratio': 1.5819672131147542, 'no_speech_prob': 0.22049038112163544}, {'id': 706, 'seek': 293702, 'start': 2954.78, 'end': 2958.68, 'text': ' But just for the sake of example let us see what this means.', 'tokens': [51252, 583, 445, 337, 264, 9717, 295, 1365, 718, 505, 536, 437, 341, 1355, 13, 51447], 'temperature': 0.0, 'avg_logprob': -0.21722723848076278, 'compression_ratio': 1.5819672131147542, 'no_speech_prob': 0.22049038112163544}, {'id': 707, 'seek': 293702, 'start': 2958.68, 'end': 2963.46, 'text': ' This essentially means taking the, oh it already went, okay.', 'tokens': [51447, 639, 4476, 1355, 1940, 264, 11, 1954, 309, 1217, 1437, 11, 1392, 13, 51686], 'temperature': 0.0, 'avg_logprob': -0.21722723848076278, 'compression_ratio': 1.5819672131147542, 'no_speech_prob': 0.22049038112163544}, {'id': 708, 'seek': 296346, 'start': 2963.46, 'end': 2970.98, 'text': ' So taking the contents pointed by R2 which is here, okay.', 'tokens': [50364, 407, 1940, 264, 15768, 10932, 538, 497, 17, 597, 307, 510, 11, 1392, 13, 50740], 'temperature': 0.0, 'avg_logprob': -0.20291481461635855, 'compression_ratio': 1.5737704918032787, 'no_speech_prob': 0.059211425483226776}, {'id': 709, 'seek': 296346, 'start': 2970.98, 'end': 2976.66, 'text': ' Let us say that in the 4 bytes you have a value 10 and you want to add it with R1 which', 'tokens': [50740, 961, 505, 584, 300, 294, 264, 1017, 36088, 291, 362, 257, 2158, 1266, 293, 291, 528, 281, 909, 309, 365, 497, 16, 597, 51024], 'temperature': 0.0, 'avg_logprob': -0.20291481461635855, 'compression_ratio': 1.5737704918032787, 'no_speech_prob': 0.059211425483226776}, {'id': 710, 'seek': 296346, 'start': 2976.66, 'end': 2979.94, 'text': ' is 32 and put the result back in R1.', 'tokens': [51024, 307, 8858, 293, 829, 264, 1874, 646, 294, 497, 16, 13, 51188], 'temperature': 0.0, 'avg_logprob': -0.20291481461635855, 'compression_ratio': 1.5737704918032787, 'no_speech_prob': 0.059211425483226776}, {'id': 711, 'seek': 296346, 'start': 2979.94, 'end': 2983.7400000000002, 'text': ' So 32 plus 10 which is 42, correct.', 'tokens': [51188, 407, 8858, 1804, 1266, 597, 307, 14034, 11, 3006, 13, 51378], 'temperature': 0.0, 'avg_logprob': -0.20291481461635855, 'compression_ratio': 1.5737704918032787, 'no_speech_prob': 0.059211425483226776}, {'id': 712, 'seek': 296346, 'start': 2983.7400000000002, 'end': 2989.2200000000003, 'text': ' So the location that is being accessed is 100 which is pointed by R2.', 'tokens': [51378, 407, 264, 4914, 300, 307, 885, 34211, 307, 2319, 597, 307, 10932, 538, 497, 17, 13, 51652], 'temperature': 0.0, 'avg_logprob': -0.20291481461635855, 'compression_ratio': 1.5737704918032787, 'no_speech_prob': 0.059211425483226776}, {'id': 713, 'seek': 298922, 'start': 2989.98, 'end': 2993.8199999999997, 'text': ' Where is this addressing mode useful in C programming?', 'tokens': [50402, 2305, 307, 341, 14329, 4391, 4420, 294, 383, 9410, 30, 50594], 'temperature': 0.0, 'avg_logprob': -0.18284536361694337, 'compression_ratio': 1.9708333333333334, 'no_speech_prob': 0.10908032953739166}, {'id': 714, 'seek': 298922, 'start': 2993.8199999999997, 'end': 2997.8999999999996, 'text': ' Typically pointers but all memory locations are going to be accessed in this mode in some', 'tokens': [50594, 23129, 44548, 457, 439, 4675, 9253, 366, 516, 281, 312, 34211, 294, 341, 4391, 294, 512, 50798], 'temperature': 0.0, 'avg_logprob': -0.18284536361694337, 'compression_ratio': 1.9708333333333334, 'no_speech_prob': 0.10908032953739166}, {'id': 715, 'seek': 298922, 'start': 2997.8999999999996, 'end': 3001.18, 'text': ' sense or the other, right, okay.', 'tokens': [50798, 2020, 420, 264, 661, 11, 558, 11, 1392, 13, 50962], 'temperature': 0.0, 'avg_logprob': -0.18284536361694337, 'compression_ratio': 1.9708333333333334, 'no_speech_prob': 0.10908032953739166}, {'id': 716, 'seek': 298922, 'start': 3001.18, 'end': 3005.2999999999997, 'text': ' Let us talk about another addressing mode which is a slight variant of the register', 'tokens': [50962, 961, 505, 751, 466, 1071, 14329, 4391, 597, 307, 257, 4036, 17501, 295, 264, 7280, 51168], 'temperature': 0.0, 'avg_logprob': -0.18284536361694337, 'compression_ratio': 1.9708333333333334, 'no_speech_prob': 0.10908032953739166}, {'id': 717, 'seek': 298922, 'start': 3005.2999999999997, 'end': 3009.8199999999997, 'text': ' indirect addressing mode which is what is called the displacement addressing mode or', 'tokens': [51168, 19523, 14329, 4391, 597, 307, 437, 307, 1219, 264, 21899, 14329, 4391, 420, 51394], 'temperature': 0.0, 'avg_logprob': -0.18284536361694337, 'compression_ratio': 1.9708333333333334, 'no_speech_prob': 0.10908032953739166}, {'id': 718, 'seek': 298922, 'start': 3009.8199999999997, 'end': 3012.66, 'text': ' the base displacement addressing mode.', 'tokens': [51394, 264, 3096, 21899, 14329, 4391, 13, 51536], 'temperature': 0.0, 'avg_logprob': -0.18284536361694337, 'compression_ratio': 1.9708333333333334, 'no_speech_prob': 0.10908032953739166}, {'id': 719, 'seek': 298922, 'start': 3012.66, 'end': 3018.3399999999997, 'text': ' This mode is very similar to the register indirect addressing mode except that you also', 'tokens': [51536, 639, 4391, 307, 588, 2531, 281, 264, 7280, 19523, 14329, 4391, 3993, 300, 291, 611, 51820], 'temperature': 0.0, 'avg_logprob': -0.18284536361694337, 'compression_ratio': 1.9708333333333334, 'no_speech_prob': 0.10908032953739166}, {'id': 720, 'seek': 301834, 'start': 3018.46, 'end': 3027.34, 'text': ' have, let us see, my animation is slightly out of phase, okay, there you go, right.', 'tokens': [50370, 362, 11, 718, 505, 536, 11, 452, 9603, 307, 4748, 484, 295, 5574, 11, 1392, 11, 456, 291, 352, 11, 558, 13, 50814], 'temperature': 0.0, 'avg_logprob': -0.22176063060760498, 'compression_ratio': 1.6363636363636365, 'no_speech_prob': 0.007627689279615879}, {'id': 721, 'seek': 301834, 'start': 3027.34, 'end': 3032.9, 'text': ' So except that it is an indirect addressing mode but there is a small offset which is', 'tokens': [50814, 407, 3993, 300, 309, 307, 364, 19523, 14329, 4391, 457, 456, 307, 257, 1359, 18687, 597, 307, 51092], 'temperature': 0.0, 'avg_logprob': -0.22176063060760498, 'compression_ratio': 1.6363636363636365, 'no_speech_prob': 0.007627689279615879}, {'id': 722, 'seek': 301834, 'start': 3032.9, 'end': 3034.34, 'text': ' also there.', 'tokens': [51092, 611, 456, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.22176063060760498, 'compression_ratio': 1.6363636363636365, 'no_speech_prob': 0.007627689279615879}, {'id': 723, 'seek': 301834, 'start': 3034.34, 'end': 3040.38, 'text': ' So in this case the memory location which is being accessed is the one which is pointed', 'tokens': [51164, 407, 294, 341, 1389, 264, 4675, 4914, 597, 307, 885, 34211, 307, 264, 472, 597, 307, 10932, 51466], 'temperature': 0.0, 'avg_logprob': -0.22176063060760498, 'compression_ratio': 1.6363636363636365, 'no_speech_prob': 0.007627689279615879}, {'id': 724, 'seek': 301834, 'start': 3040.38, 'end': 3043.02, 'text': ' by this but offset by the thumb out.', 'tokens': [51466, 538, 341, 457, 18687, 538, 264, 9298, 484, 13, 51598], 'temperature': 0.0, 'avg_logprob': -0.22176063060760498, 'compression_ratio': 1.6363636363636365, 'no_speech_prob': 0.007627689279615879}, {'id': 725, 'seek': 304302, 'start': 3043.7, 'end': 3048.54, 'text': ' That means that you have to add the contents of R2 with this offset value and whatever', 'tokens': [50398, 663, 1355, 300, 291, 362, 281, 909, 264, 15768, 295, 497, 17, 365, 341, 18687, 2158, 293, 2035, 50640], 'temperature': 0.0, 'avg_logprob': -0.1889115420254794, 'compression_ratio': 1.831858407079646, 'no_speech_prob': 0.10754402726888657}, {'id': 726, 'seek': 304302, 'start': 3048.54, 'end': 3052.22, 'text': ' is the location that is the location from which you will fetch.', 'tokens': [50640, 307, 264, 4914, 300, 307, 264, 4914, 490, 597, 291, 486, 23673, 13, 50824], 'temperature': 0.0, 'avg_logprob': -0.1889115420254794, 'compression_ratio': 1.831858407079646, 'no_speech_prob': 0.10754402726888657}, {'id': 727, 'seek': 304302, 'start': 3052.22, 'end': 3058.98, 'text': ' So if R2 is 100 and the offset is 4, 100 plus 4 is 104 and the contents of that location', 'tokens': [50824, 407, 498, 497, 17, 307, 2319, 293, 264, 18687, 307, 1017, 11, 2319, 1804, 1017, 307, 47757, 293, 264, 15768, 295, 300, 4914, 51162], 'temperature': 0.0, 'avg_logprob': -0.1889115420254794, 'compression_ratio': 1.831858407079646, 'no_speech_prob': 0.10754402726888657}, {'id': 728, 'seek': 304302, 'start': 3058.98, 'end': 3065.06, 'text': ' is 35, that value is going to be taken with whatever value that was there previously which', 'tokens': [51162, 307, 6976, 11, 300, 2158, 307, 516, 281, 312, 2726, 365, 2035, 2158, 300, 390, 456, 8046, 597, 51466], 'temperature': 0.0, 'avg_logprob': -0.1889115420254794, 'compression_ratio': 1.831858407079646, 'no_speech_prob': 0.10754402726888657}, {'id': 729, 'seek': 304302, 'start': 3065.06, 'end': 3070.14, 'text': ' is 32, right, 32 plus 35 is 67, okay.', 'tokens': [51466, 307, 8858, 11, 558, 11, 8858, 1804, 6976, 307, 23879, 11, 1392, 13, 51720], 'temperature': 0.0, 'avg_logprob': -0.1889115420254794, 'compression_ratio': 1.831858407079646, 'no_speech_prob': 0.10754402726888657}, {'id': 730, 'seek': 304302, 'start': 3070.14, 'end': 3072.98, 'text': ' That is really what is being put there, okay.', 'tokens': [51720, 663, 307, 534, 437, 307, 885, 829, 456, 11, 1392, 13, 51862], 'temperature': 0.0, 'avg_logprob': -0.1889115420254794, 'compression_ratio': 1.831858407079646, 'no_speech_prob': 0.10754402726888657}, {'id': 731, 'seek': 307298, 'start': 3073.94, 'end': 3077.9, 'text': ' So what is that this offset value can be both positive or negative.', 'tokens': [50412, 407, 437, 307, 300, 341, 18687, 2158, 393, 312, 1293, 3353, 420, 3671, 13, 50610], 'temperature': 0.0, 'avg_logprob': -0.2709204694058033, 'compression_ratio': 1.6726457399103138, 'no_speech_prob': 0.010257906280457973}, {'id': 732, 'seek': 307298, 'start': 3077.9, 'end': 3084.26, 'text': ' It could be or it need not have to be.', 'tokens': [50610, 467, 727, 312, 420, 309, 643, 406, 362, 281, 312, 13, 50928], 'temperature': 0.0, 'avg_logprob': -0.2709204694058033, 'compression_ratio': 1.6726457399103138, 'no_speech_prob': 0.010257906280457973}, {'id': 733, 'seek': 307298, 'start': 3084.26, 'end': 3088.9, 'text': ' If I am accessing a character, if I am accessing something else, right, depending on that it', 'tokens': [50928, 759, 286, 669, 26440, 257, 2517, 11, 498, 286, 669, 26440, 746, 1646, 11, 558, 11, 5413, 322, 300, 309, 51160], 'temperature': 0.0, 'avg_logprob': -0.2709204694058033, 'compression_ratio': 1.6726457399103138, 'no_speech_prob': 0.010257906280457973}, {'id': 734, 'seek': 307298, 'start': 3088.9, 'end': 3091.78, 'text': ' could be anywhere, right.', 'tokens': [51160, 727, 312, 4992, 11, 558, 13, 51304], 'temperature': 0.0, 'avg_logprob': -0.2709204694058033, 'compression_ratio': 1.6726457399103138, 'no_speech_prob': 0.010257906280457973}, {'id': 735, 'seek': 307298, 'start': 3091.78, 'end': 3097.26, 'text': ' Do not always assume that you are going to access integers all the time.', 'tokens': [51304, 1144, 406, 1009, 6552, 300, 291, 366, 516, 281, 2105, 41674, 439, 264, 565, 13, 51578], 'temperature': 0.0, 'avg_logprob': -0.2709204694058033, 'compression_ratio': 1.6726457399103138, 'no_speech_prob': 0.010257906280457973}, {'id': 736, 'seek': 307298, 'start': 3097.26, 'end': 3101.86, 'text': ' You have characters, strings and may various other things in your program.', 'tokens': [51578, 509, 362, 4342, 11, 13985, 293, 815, 3683, 661, 721, 294, 428, 1461, 13, 51808], 'temperature': 0.0, 'avg_logprob': -0.2709204694058033, 'compression_ratio': 1.6726457399103138, 'no_speech_prob': 0.010257906280457973}, {'id': 737, 'seek': 310186, 'start': 3101.86, 'end': 3107.1, 'text': ' String is basically array of characters but yes, right, short integers which are two bytes', 'tokens': [50364, 745, 2937, 307, 1936, 10225, 295, 4342, 457, 2086, 11, 558, 11, 2099, 41674, 597, 366, 732, 36088, 50626], 'temperature': 0.0, 'avg_logprob': -0.28103140288708256, 'compression_ratio': 1.5532786885245902, 'no_speech_prob': 0.005976553075015545}, {'id': 738, 'seek': 310186, 'start': 3107.1, 'end': 3108.7000000000003, 'text': ' long so.', 'tokens': [50626, 938, 370, 13, 50706], 'temperature': 0.0, 'avg_logprob': -0.28103140288708256, 'compression_ratio': 1.5532786885245902, 'no_speech_prob': 0.005976553075015545}, {'id': 739, 'seek': 310186, 'start': 3108.7000000000003, 'end': 3114.7000000000003, 'text': ' So the offset can be any value positive or negative but it is typically a small constant.', 'tokens': [50706, 407, 264, 18687, 393, 312, 604, 2158, 3353, 420, 3671, 457, 309, 307, 5850, 257, 1359, 5754, 13, 51006], 'temperature': 0.0, 'avg_logprob': -0.28103140288708256, 'compression_ratio': 1.5532786885245902, 'no_speech_prob': 0.005976553075015545}, {'id': 740, 'seek': 310186, 'start': 3114.7000000000003, 'end': 3120.26, 'text': ' In some machines like the MIPS architecture it is 16 bits long, 16 bits to complement', 'tokens': [51006, 682, 512, 8379, 411, 264, 13696, 6273, 9482, 309, 307, 3165, 9239, 938, 11, 3165, 9239, 281, 17103, 51284], 'temperature': 0.0, 'avg_logprob': -0.28103140288708256, 'compression_ratio': 1.5532786885245902, 'no_speech_prob': 0.005976553075015545}, {'id': 741, 'seek': 310186, 'start': 3120.26, 'end': 3121.6200000000003, 'text': ' representation.', 'tokens': [51284, 10290, 13, 51352], 'temperature': 0.0, 'avg_logprob': -0.28103140288708256, 'compression_ratio': 1.5532786885245902, 'no_speech_prob': 0.005976553075015545}, {'id': 742, 'seek': 310186, 'start': 3121.6200000000003, 'end': 3124.02, 'text': ' In the RISC it is actually a little less than that.', 'tokens': [51352, 682, 264, 497, 2343, 34, 309, 307, 767, 257, 707, 1570, 813, 300, 13, 51472], 'temperature': 0.0, 'avg_logprob': -0.28103140288708256, 'compression_ratio': 1.5532786885245902, 'no_speech_prob': 0.005976553075015545}, {'id': 743, 'seek': 310186, 'start': 3124.02, 'end': 3127.94, 'text': ' You will see what it, RISC 5, okay.', 'tokens': [51472, 509, 486, 536, 437, 309, 11, 497, 2343, 34, 1025, 11, 1392, 13, 51668], 'temperature': 0.0, 'avg_logprob': -0.28103140288708256, 'compression_ratio': 1.5532786885245902, 'no_speech_prob': 0.005976553075015545}, {'id': 744, 'seek': 312794, 'start': 3128.9, 'end': 3134.46, 'text': ' Before I move forward, can anybody recognize where this will be useful, offset plus register', 'tokens': [50412, 4546, 286, 1286, 2128, 11, 393, 4472, 5521, 689, 341, 486, 312, 4420, 11, 18687, 1804, 7280, 50690], 'temperature': 0.0, 'avg_logprob': -0.30236669540405275, 'compression_ratio': 1.6194331983805668, 'no_speech_prob': 0.033173851668834686}, {'id': 745, 'seek': 312794, 'start': 3134.46, 'end': 3135.94, 'text': ' in your C program?', 'tokens': [50690, 294, 428, 383, 1461, 30, 50764], 'temperature': 0.0, 'avg_logprob': -0.30236669540405275, 'compression_ratio': 1.6194331983805668, 'no_speech_prob': 0.033173851668834686}, {'id': 746, 'seek': 312794, 'start': 3135.94, 'end': 3141.94, 'text': ' Array, array is one but there is something else also, structures, right.', 'tokens': [50764, 1587, 3458, 11, 10225, 307, 472, 457, 456, 307, 746, 1646, 611, 11, 9227, 11, 558, 13, 51064], 'temperature': 0.0, 'avg_logprob': -0.30236669540405275, 'compression_ratio': 1.6194331983805668, 'no_speech_prob': 0.033173851668834686}, {'id': 747, 'seek': 312794, 'start': 3141.94, 'end': 3145.18, 'text': ' Structures of various fields, right.', 'tokens': [51064, 745, 44513, 295, 3683, 7909, 11, 558, 13, 51226], 'temperature': 0.0, 'avg_logprob': -0.30236669540405275, 'compression_ratio': 1.6194331983805668, 'no_speech_prob': 0.033173851668834686}, {'id': 748, 'seek': 312794, 'start': 3145.18, 'end': 3148.14, 'text': ' Each field can be offset by certain amount.', 'tokens': [51226, 6947, 2519, 393, 312, 18687, 538, 1629, 2372, 13, 51374], 'temperature': 0.0, 'avg_logprob': -0.30236669540405275, 'compression_ratio': 1.6194331983805668, 'no_speech_prob': 0.033173851668834686}, {'id': 749, 'seek': 312794, 'start': 3148.14, 'end': 3151.34, 'text': ' That is the place where this would be more useful.', 'tokens': [51374, 663, 307, 264, 1081, 689, 341, 576, 312, 544, 4420, 13, 51534], 'temperature': 0.0, 'avg_logprob': -0.30236669540405275, 'compression_ratio': 1.6194331983805668, 'no_speech_prob': 0.033173851668834686}, {'id': 750, 'seek': 312794, 'start': 3151.34, 'end': 3157.86, 'text': ' Arrays typically you do this register indirect and then keep incrementing it, okay.', 'tokens': [51534, 1587, 36212, 5850, 291, 360, 341, 7280, 19523, 293, 550, 1066, 26200, 278, 309, 11, 1392, 13, 51860], 'temperature': 0.0, 'avg_logprob': -0.30236669540405275, 'compression_ratio': 1.6194331983805668, 'no_speech_prob': 0.033173851668834686}, {'id': 751, 'seek': 315786, 'start': 3158.02, 'end': 3162.02, 'text': ' There is a special addressing mode which is called the auto increment addressing mode', 'tokens': [50372, 821, 307, 257, 2121, 14329, 4391, 597, 307, 1219, 264, 8399, 26200, 14329, 4391, 50572], 'temperature': 0.0, 'avg_logprob': -0.1477007243944251, 'compression_ratio': 1.9464285714285714, 'no_speech_prob': 0.003475744975730777}, {'id': 752, 'seek': 315786, 'start': 3162.02, 'end': 3168.46, 'text': ' which yes over here which is typically used for accessing arrays if that addressing mode', 'tokens': [50572, 597, 2086, 670, 510, 597, 307, 5850, 1143, 337, 26440, 41011, 498, 300, 14329, 4391, 50894], 'temperature': 0.0, 'avg_logprob': -0.1477007243944251, 'compression_ratio': 1.9464285714285714, 'no_speech_prob': 0.003475744975730777}, {'id': 753, 'seek': 315786, 'start': 3168.46, 'end': 3169.46, 'text': ' is supported.', 'tokens': [50894, 307, 8104, 13, 50944], 'temperature': 0.0, 'avg_logprob': -0.1477007243944251, 'compression_ratio': 1.9464285714285714, 'no_speech_prob': 0.003475744975730777}, {'id': 754, 'seek': 315786, 'start': 3169.46, 'end': 3175.78, 'text': ' Otherwise it is the indirect mode and then you increment it or you decrement it, okay.', 'tokens': [50944, 10328, 309, 307, 264, 19523, 4391, 293, 550, 291, 26200, 309, 420, 291, 6853, 518, 309, 11, 1392, 13, 51260], 'temperature': 0.0, 'avg_logprob': -0.1477007243944251, 'compression_ratio': 1.9464285714285714, 'no_speech_prob': 0.003475744975730777}, {'id': 755, 'seek': 315786, 'start': 3175.78, 'end': 3181.1, 'text': ' The other addressing modes are something like absolute addressing mode in which the address', 'tokens': [51260, 440, 661, 14329, 14068, 366, 746, 411, 8236, 14329, 4391, 294, 597, 264, 2985, 51526], 'temperature': 0.0, 'avg_logprob': -0.1477007243944251, 'compression_ratio': 1.9464285714285714, 'no_speech_prob': 0.003475744975730777}, {'id': 756, 'seek': 315786, 'start': 3181.1, 'end': 3185.1800000000003, 'text': ' of that location is actually specified as a part of the instruction.', 'tokens': [51526, 295, 300, 4914, 307, 767, 22206, 382, 257, 644, 295, 264, 10951, 13, 51730], 'temperature': 0.0, 'avg_logprob': -0.1477007243944251, 'compression_ratio': 1.9464285714285714, 'no_speech_prob': 0.003475744975730777}, {'id': 757, 'seek': 318518, 'start': 3185.18, 'end': 3188.4199999999996, 'text': ' This typically happens only in CISC architecture.', 'tokens': [50364, 639, 5850, 2314, 787, 294, 383, 2343, 34, 9482, 13, 50526], 'temperature': 0.0, 'avg_logprob': -0.11885140673948986, 'compression_ratio': 1.9272727272727272, 'no_speech_prob': 0.006733101326972246}, {'id': 758, 'seek': 318518, 'start': 3188.4199999999996, 'end': 3193.98, 'text': ' In CISC architecture you can actually have instructions whose length is variable.', 'tokens': [50526, 682, 383, 2343, 34, 9482, 291, 393, 767, 362, 9415, 6104, 4641, 307, 7006, 13, 50804], 'temperature': 0.0, 'avg_logprob': -0.11885140673948986, 'compression_ratio': 1.9272727272727272, 'no_speech_prob': 0.006733101326972246}, {'id': 759, 'seek': 318518, 'start': 3193.98, 'end': 3199.18, 'text': ' So some instructions are 2 bytes long, some instructions are 4 bytes long, some are 8', 'tokens': [50804, 407, 512, 9415, 366, 568, 36088, 938, 11, 512, 9415, 366, 1017, 36088, 938, 11, 512, 366, 1649, 51064], 'temperature': 0.0, 'avg_logprob': -0.11885140673948986, 'compression_ratio': 1.9272727272727272, 'no_speech_prob': 0.006733101326972246}, {'id': 760, 'seek': 318518, 'start': 3199.18, 'end': 3204.2599999999998, 'text': ' bytes long, some are 12 bytes long and so on and so forth and they can afford to have', 'tokens': [51064, 36088, 938, 11, 512, 366, 2272, 36088, 938, 293, 370, 322, 293, 370, 5220, 293, 436, 393, 6157, 281, 362, 51318], 'temperature': 0.0, 'avg_logprob': -0.11885140673948986, 'compression_ratio': 1.9272727272727272, 'no_speech_prob': 0.006733101326972246}, {'id': 761, 'seek': 318518, 'start': 3204.2599999999998, 'end': 3208.58, 'text': ' even the address of the memory location as a part of the instruction.', 'tokens': [51318, 754, 264, 2985, 295, 264, 4675, 4914, 382, 257, 644, 295, 264, 10951, 13, 51534], 'temperature': 0.0, 'avg_logprob': -0.11885140673948986, 'compression_ratio': 1.9272727272727272, 'no_speech_prob': 0.006733101326972246}, {'id': 762, 'seek': 318518, 'start': 3208.58, 'end': 3213.7, 'text': ' So this is called absolute addressing mode, right.', 'tokens': [51534, 407, 341, 307, 1219, 8236, 14329, 4391, 11, 558, 13, 51790], 'temperature': 0.0, 'avg_logprob': -0.11885140673948986, 'compression_ratio': 1.9272727272727272, 'no_speech_prob': 0.006733101326972246}, {'id': 763, 'seek': 321370, 'start': 3213.7, 'end': 3219.98, 'text': ' Then you could actually have a combination of registers, right, R3 plus R4.', 'tokens': [50364, 1396, 291, 727, 767, 362, 257, 6562, 295, 38351, 11, 558, 11, 497, 18, 1804, 497, 19, 13, 50678], 'temperature': 0.0, 'avg_logprob': -0.17647670470562177, 'compression_ratio': 1.757847533632287, 'no_speech_prob': 0.010338488034904003}, {'id': 764, 'seek': 321370, 'start': 3219.98, 'end': 3224.06, 'text': ' That is also possible that stores the address of the location.', 'tokens': [50678, 663, 307, 611, 1944, 300, 9512, 264, 2985, 295, 264, 4914, 13, 50882], 'temperature': 0.0, 'avg_logprob': -0.17647670470562177, 'compression_ratio': 1.757847533632287, 'no_speech_prob': 0.010338488034904003}, {'id': 765, 'seek': 321370, 'start': 3224.06, 'end': 3228.46, 'text': ' The added value, right, is the address of the location from where the operand is going', 'tokens': [50882, 440, 3869, 2158, 11, 558, 11, 307, 264, 2985, 295, 264, 4914, 490, 689, 264, 2208, 474, 307, 516, 51102], 'temperature': 0.0, 'avg_logprob': -0.17647670470562177, 'compression_ratio': 1.757847533632287, 'no_speech_prob': 0.010338488034904003}, {'id': 766, 'seek': 321370, 'start': 3228.46, 'end': 3229.46, 'text': ' to be fetched.', 'tokens': [51102, 281, 312, 23673, 292, 13, 51152], 'temperature': 0.0, 'avg_logprob': -0.17647670470562177, 'compression_ratio': 1.757847533632287, 'no_speech_prob': 0.010338488034904003}, {'id': 767, 'seek': 321370, 'start': 3229.46, 'end': 3233.62, 'text': ' These are all more and more complex addressing modes.', 'tokens': [51152, 1981, 366, 439, 544, 293, 544, 3997, 14329, 14068, 13, 51360], 'temperature': 0.0, 'avg_logprob': -0.17647670470562177, 'compression_ratio': 1.757847533632287, 'no_speech_prob': 0.010338488034904003}, {'id': 768, 'seek': 321370, 'start': 3233.62, 'end': 3241.58, 'text': ' Typically a CISC machine would support, right, the register direct addressing mode, the immediate', 'tokens': [51360, 23129, 257, 383, 2343, 34, 3479, 576, 1406, 11, 558, 11, 264, 7280, 2047, 14329, 4391, 11, 264, 11629, 51758], 'temperature': 0.0, 'avg_logprob': -0.17647670470562177, 'compression_ratio': 1.757847533632287, 'no_speech_prob': 0.010338488034904003}, {'id': 769, 'seek': 324158, 'start': 3242.22, 'end': 3248.2599999999998, 'text': ' addressing mode and the base displacement addressing mode, only 3 addressing modes.', 'tokens': [50396, 14329, 4391, 293, 264, 3096, 21899, 14329, 4391, 11, 787, 805, 14329, 14068, 13, 50698], 'temperature': 0.0, 'avg_logprob': -0.22597622049265895, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.11637619137763977}, {'id': 770, 'seek': 324158, 'start': 3248.2599999999998, 'end': 3255.2599999999998, 'text': ' Whereas a CISC architecture might support this, this and maybe all of this, okay.', 'tokens': [50698, 13813, 257, 383, 2343, 34, 9482, 1062, 1406, 341, 11, 341, 293, 1310, 439, 295, 341, 11, 1392, 13, 51048], 'temperature': 0.0, 'avg_logprob': -0.22597622049265895, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.11637619137763977}, {'id': 771, 'seek': 324158, 'start': 3256.9, 'end': 3260.58, 'text': ' That is what a CISC architecture may support, right.', 'tokens': [51130, 663, 307, 437, 257, 383, 2343, 34, 9482, 815, 1406, 11, 558, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.22597622049265895, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.11637619137763977}, {'id': 772, 'seek': 324158, 'start': 3260.58, 'end': 3265.06, 'text': ' And if these modes are supported then when you are doing code generation you have to', 'tokens': [51314, 400, 498, 613, 14068, 366, 8104, 550, 562, 291, 366, 884, 3089, 5125, 291, 362, 281, 51538], 'temperature': 0.0, 'avg_logprob': -0.22597622049265895, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.11637619137763977}, {'id': 773, 'seek': 324158, 'start': 3265.06, 'end': 3269.18, 'text': ' be aware of this and you have to generate an appropriate code.', 'tokens': [51538, 312, 3650, 295, 341, 293, 291, 362, 281, 8460, 364, 6854, 3089, 13, 51744], 'temperature': 0.0, 'avg_logprob': -0.22597622049265895, 'compression_ratio': 1.7853658536585366, 'no_speech_prob': 0.11637619137763977}, {'id': 774, 'seek': 326918, 'start': 3269.18, 'end': 3273.58, 'text': ' And when I say appropriate code I mean efficient code, right.', 'tokens': [50364, 400, 562, 286, 584, 6854, 3089, 286, 914, 7148, 3089, 11, 558, 13, 50584], 'temperature': 0.0, 'avg_logprob': -0.24729591909081045, 'compression_ratio': 1.5757575757575757, 'no_speech_prob': 0.0805509090423584}, {'id': 775, 'seek': 326918, 'start': 3273.58, 'end': 3274.94, 'text': ' That is important, okay.', 'tokens': [50584, 663, 307, 1021, 11, 1392, 13, 50652], 'temperature': 0.0, 'avg_logprob': -0.24729591909081045, 'compression_ratio': 1.5757575757575757, 'no_speech_prob': 0.0805509090423584}, {'id': 776, 'seek': 326918, 'start': 3274.94, 'end': 3277.02, 'text': ' We will see what efficiency is.', 'tokens': [50652, 492, 486, 536, 437, 10493, 307, 13, 50756], 'temperature': 0.0, 'avg_logprob': -0.24729591909081045, 'compression_ratio': 1.5757575757575757, 'no_speech_prob': 0.0805509090423584}, {'id': 777, 'seek': 326918, 'start': 3277.02, 'end': 3283.02, 'text': ' Efficiency is in terms of the generated code being able to execute in fewer number of cycles,', 'tokens': [50756, 462, 49086, 307, 294, 2115, 295, 264, 10833, 3089, 885, 1075, 281, 14483, 294, 13366, 1230, 295, 17796, 11, 51056], 'temperature': 0.0, 'avg_logprob': -0.24729591909081045, 'compression_ratio': 1.5757575757575757, 'no_speech_prob': 0.0805509090423584}, {'id': 778, 'seek': 326918, 'start': 3283.02, 'end': 3284.02, 'text': ' okay.', 'tokens': [51056, 1392, 13, 51106], 'temperature': 0.0, 'avg_logprob': -0.24729591909081045, 'compression_ratio': 1.5757575757575757, 'no_speech_prob': 0.0805509090423584}, {'id': 779, 'seek': 326918, 'start': 3284.02, 'end': 3286.3399999999997, 'text': ' That is really what we want to look at.', 'tokens': [51106, 663, 307, 534, 437, 321, 528, 281, 574, 412, 13, 51222], 'temperature': 0.0, 'avg_logprob': -0.24729591909081045, 'compression_ratio': 1.5757575757575757, 'no_speech_prob': 0.0805509090423584}, {'id': 780, 'seek': 326918, 'start': 3286.3399999999997, 'end': 3291.02, 'text': ' Any questions on the addressing modes?', 'tokens': [51222, 2639, 1651, 322, 264, 14329, 14068, 30, 51456], 'temperature': 0.0, 'avg_logprob': -0.24729591909081045, 'compression_ratio': 1.5757575757575757, 'no_speech_prob': 0.0805509090423584}, {'id': 781, 'seek': 326918, 'start': 3291.02, 'end': 3292.98, 'text': ' What are all supported by risk?', 'tokens': [51456, 708, 366, 439, 8104, 538, 3148, 30, 51554], 'temperature': 0.0, 'avg_logprob': -0.24729591909081045, 'compression_ratio': 1.5757575757575757, 'no_speech_prob': 0.0805509090423584}, {'id': 782, 'seek': 326918, 'start': 3292.98, 'end': 3295.3799999999997, 'text': ' Risk is a generic category, right.', 'tokens': [51554, 45892, 307, 257, 19577, 7719, 11, 558, 13, 51674], 'temperature': 0.0, 'avg_logprob': -0.24729591909081045, 'compression_ratio': 1.5757575757575757, 'no_speech_prob': 0.0805509090423584}, {'id': 783, 'seek': 329538, 'start': 3295.38, 'end': 3297.1800000000003, 'text': ' So you should not be asking the question.', 'tokens': [50364, 407, 291, 820, 406, 312, 3365, 264, 1168, 13, 50454], 'temperature': 0.0, 'avg_logprob': -0.23266050356243728, 'compression_ratio': 1.796078431372549, 'no_speech_prob': 0.01206415519118309}, {'id': 784, 'seek': 329538, 'start': 3297.1800000000003, 'end': 3303.42, 'text': ' In that way you should ask what are the instructions supported by let us say my power 9 processor', 'tokens': [50454, 682, 300, 636, 291, 820, 1029, 437, 366, 264, 9415, 8104, 538, 718, 505, 584, 452, 1347, 1722, 15321, 50766], 'temperature': 0.0, 'avg_logprob': -0.23266050356243728, 'compression_ratio': 1.796078431372549, 'no_speech_prob': 0.01206415519118309}, {'id': 785, 'seek': 329538, 'start': 3303.42, 'end': 3308.9, 'text': ' or what are the instruction sets that are supported by let us say the MIPS or 10,000', 'tokens': [50766, 420, 437, 366, 264, 10951, 6352, 300, 366, 8104, 538, 718, 505, 584, 264, 13696, 6273, 420, 1266, 11, 1360, 51040], 'temperature': 0.0, 'avg_logprob': -0.23266050356243728, 'compression_ratio': 1.796078431372549, 'no_speech_prob': 0.01206415519118309}, {'id': 786, 'seek': 329538, 'start': 3308.9, 'end': 3309.9, 'text': ' processor, okay.', 'tokens': [51040, 15321, 11, 1392, 13, 51090], 'temperature': 0.0, 'avg_logprob': -0.23266050356243728, 'compression_ratio': 1.796078431372549, 'no_speech_prob': 0.01206415519118309}, {'id': 787, 'seek': 329538, 'start': 3309.9, 'end': 3311.54, 'text': ' Answer is very simple.', 'tokens': [51090, 24545, 307, 588, 2199, 13, 51172], 'temperature': 0.0, 'avg_logprob': -0.23266050356243728, 'compression_ratio': 1.796078431372549, 'no_speech_prob': 0.01206415519118309}, {'id': 788, 'seek': 329538, 'start': 3311.54, 'end': 3312.54, 'text': ' Go and check in the website.', 'tokens': [51172, 1037, 293, 1520, 294, 264, 3144, 13, 51222], 'temperature': 0.0, 'avg_logprob': -0.23266050356243728, 'compression_ratio': 1.796078431372549, 'no_speech_prob': 0.01206415519118309}, {'id': 789, 'seek': 329538, 'start': 3312.54, 'end': 3317.46, 'text': ' Go and check in the internet you will be able to figure that out.', 'tokens': [51222, 1037, 293, 1520, 294, 264, 4705, 291, 486, 312, 1075, 281, 2573, 300, 484, 13, 51468], 'temperature': 0.0, 'avg_logprob': -0.23266050356243728, 'compression_ratio': 1.796078431372549, 'no_speech_prob': 0.01206415519118309}, {'id': 790, 'seek': 329538, 'start': 3317.46, 'end': 3323.58, 'text': ' Typically all risk architecture support register direct displacement, base displacement addressing', 'tokens': [51468, 23129, 439, 3148, 9482, 1406, 7280, 2047, 21899, 11, 3096, 21899, 14329, 51774], 'temperature': 0.0, 'avg_logprob': -0.23266050356243728, 'compression_ratio': 1.796078431372549, 'no_speech_prob': 0.01206415519118309}, {'id': 791, 'seek': 332358, 'start': 3323.58, 'end': 3327.42, 'text': ' mode and immediate addressing only three, okay.', 'tokens': [50364, 4391, 293, 11629, 14329, 787, 1045, 11, 1392, 13, 50556], 'temperature': 0.0, 'avg_logprob': -0.21150965881347655, 'compression_ratio': 1.7870722433460076, 'no_speech_prob': 0.06507252901792526}, {'id': 792, 'seek': 332358, 'start': 3327.42, 'end': 3329.54, 'text': ' That is what MIPS support.', 'tokens': [50556, 663, 307, 437, 13696, 6273, 1406, 13, 50662], 'temperature': 0.0, 'avg_logprob': -0.21150965881347655, 'compression_ratio': 1.7870722433460076, 'no_speech_prob': 0.06507252901792526}, {'id': 793, 'seek': 332358, 'start': 3329.54, 'end': 3332.9, 'text': ' Risk five you will see what it supports, okay.', 'tokens': [50662, 45892, 1732, 291, 486, 536, 437, 309, 9346, 11, 1392, 13, 50830], 'temperature': 0.0, 'avg_logprob': -0.21150965881347655, 'compression_ratio': 1.7870722433460076, 'no_speech_prob': 0.06507252901792526}, {'id': 794, 'seek': 332358, 'start': 3332.9, 'end': 3339.8199999999997, 'text': ' But in general if you want to know for a processor like power 9 processor you should go and check', 'tokens': [50830, 583, 294, 2674, 498, 291, 528, 281, 458, 337, 257, 15321, 411, 1347, 1722, 15321, 291, 820, 352, 293, 1520, 51176], 'temperature': 0.0, 'avg_logprob': -0.21150965881347655, 'compression_ratio': 1.7870722433460076, 'no_speech_prob': 0.06507252901792526}, {'id': 795, 'seek': 332358, 'start': 3339.8199999999997, 'end': 3341.2599999999998, 'text': ' the manual of power 9.', 'tokens': [51176, 264, 9688, 295, 1347, 1722, 13, 51248], 'temperature': 0.0, 'avg_logprob': -0.21150965881347655, 'compression_ratio': 1.7870722433460076, 'no_speech_prob': 0.06507252901792526}, {'id': 796, 'seek': 332358, 'start': 3341.2599999999998, 'end': 3342.2599999999998, 'text': ' That will tell you, right.', 'tokens': [51248, 663, 486, 980, 291, 11, 558, 13, 51298], 'temperature': 0.0, 'avg_logprob': -0.21150965881347655, 'compression_ratio': 1.7870722433460076, 'no_speech_prob': 0.06507252901792526}, {'id': 797, 'seek': 332358, 'start': 3342.2599999999998, 'end': 3347.5, 'text': ' Say if tomorrow you have to generate code for power 9 all you need to do is to go and', 'tokens': [51298, 6463, 498, 4153, 291, 362, 281, 8460, 3089, 337, 1347, 1722, 439, 291, 643, 281, 360, 307, 281, 352, 293, 51560], 'temperature': 0.0, 'avg_logprob': -0.21150965881347655, 'compression_ratio': 1.7870722433460076, 'no_speech_prob': 0.06507252901792526}, {'id': 798, 'seek': 332358, 'start': 3347.5, 'end': 3350.46, 'text': ' then get the instruction manual for power 9.', 'tokens': [51560, 550, 483, 264, 10951, 9688, 337, 1347, 1722, 13, 51708], 'temperature': 0.0, 'avg_logprob': -0.21150965881347655, 'compression_ratio': 1.7870722433460076, 'no_speech_prob': 0.06507252901792526}, {'id': 799, 'seek': 332358, 'start': 3350.46, 'end': 3351.94, 'text': ' Look at what are the addressing modes?', 'tokens': [51708, 2053, 412, 437, 366, 264, 14329, 14068, 30, 51782], 'temperature': 0.0, 'avg_logprob': -0.21150965881347655, 'compression_ratio': 1.7870722433460076, 'no_speech_prob': 0.06507252901792526}, {'id': 800, 'seek': 332358, 'start': 3351.94, 'end': 3353.42, 'text': ' What are the instruction sets?', 'tokens': [51782, 708, 366, 264, 10951, 6352, 30, 51856], 'temperature': 0.0, 'avg_logprob': -0.21150965881347655, 'compression_ratio': 1.7870722433460076, 'no_speech_prob': 0.06507252901792526}, {'id': 801, 'seek': 335342, 'start': 3354.26, 'end': 3358.94, 'text': ' Blah blah blah and then understand that generate code for that architecture.', 'tokens': [50406, 2177, 545, 12288, 12288, 293, 550, 1223, 300, 8460, 3089, 337, 300, 9482, 13, 50640], 'temperature': 0.0, 'avg_logprob': -0.23777075873480902, 'compression_ratio': 1.7731481481481481, 'no_speech_prob': 0.002391636138781905}, {'id': 802, 'seek': 335342, 'start': 3358.94, 'end': 3369.5, 'text': ' What about x86 architecture, right, which is what we are all familiar with, right.', 'tokens': [50640, 708, 466, 2031, 22193, 9482, 11, 558, 11, 597, 307, 437, 321, 366, 439, 4963, 365, 11, 558, 13, 51168], 'temperature': 0.0, 'avg_logprob': -0.23777075873480902, 'compression_ratio': 1.7731481481481481, 'no_speech_prob': 0.002391636138781905}, {'id': 803, 'seek': 335342, 'start': 3369.5, 'end': 3373.98, 'text': ' It will support it is a complex instruction set architecture, right.', 'tokens': [51168, 467, 486, 1406, 309, 307, 257, 3997, 10951, 992, 9482, 11, 558, 13, 51392], 'temperature': 0.0, 'avg_logprob': -0.23777075873480902, 'compression_ratio': 1.7731481481481481, 'no_speech_prob': 0.002391636138781905}, {'id': 804, 'seek': 335342, 'start': 3373.98, 'end': 3376.34, 'text': ' It will support some of these addressing modes as well.', 'tokens': [51392, 467, 486, 1406, 512, 295, 613, 14329, 14068, 382, 731, 13, 51510], 'temperature': 0.0, 'avg_logprob': -0.23777075873480902, 'compression_ratio': 1.7731481481481481, 'no_speech_prob': 0.002391636138781905}, {'id': 805, 'seek': 335342, 'start': 3376.34, 'end': 3380.46, 'text': ' You should again look into the instruction manual and then figure out what all it supports,', 'tokens': [51510, 509, 820, 797, 574, 666, 264, 10951, 9688, 293, 550, 2573, 484, 437, 439, 309, 9346, 11, 51716], 'temperature': 0.0, 'avg_logprob': -0.23777075873480902, 'compression_ratio': 1.7731481481481481, 'no_speech_prob': 0.002391636138781905}, {'id': 806, 'seek': 335342, 'start': 3380.46, 'end': 3381.46, 'text': ' right.', 'tokens': [51716, 558, 13, 51766], 'temperature': 0.0, 'avg_logprob': -0.23777075873480902, 'compression_ratio': 1.7731481481481481, 'no_speech_prob': 0.002391636138781905}, {'id': 807, 'seek': 338146, 'start': 3381.5, 'end': 3387.66, 'text': ' It is fairly complicated and hopefully we do not have to look at that but let us see.', 'tokens': [50366, 467, 307, 6457, 6179, 293, 4696, 321, 360, 406, 362, 281, 574, 412, 300, 457, 718, 505, 536, 13, 50674], 'temperature': 0.0, 'avg_logprob': -0.29309146404266356, 'compression_ratio': 1.5446009389671362, 'no_speech_prob': 0.22850266098976135}, {'id': 808, 'seek': 338146, 'start': 3387.66, 'end': 3389.02, 'text': ' But nothing scary about it.', 'tokens': [50674, 583, 1825, 6958, 466, 309, 13, 50742], 'temperature': 0.0, 'avg_logprob': -0.29309146404266356, 'compression_ratio': 1.5446009389671362, 'no_speech_prob': 0.22850266098976135}, {'id': 809, 'seek': 338146, 'start': 3389.02, 'end': 3392.66, 'text': ' Okay there is also another interesting addressing mode called PC relative.', 'tokens': [50742, 1033, 456, 307, 611, 1071, 1880, 14329, 4391, 1219, 6465, 4972, 13, 50924], 'temperature': 0.0, 'avg_logprob': -0.29309146404266356, 'compression_ratio': 1.5446009389671362, 'no_speech_prob': 0.22850266098976135}, {'id': 810, 'seek': 338146, 'start': 3392.66, 'end': 3397.14, 'text': ' Can anybody tell me what this PC relative is?', 'tokens': [50924, 1664, 4472, 980, 385, 437, 341, 6465, 4972, 307, 30, 51148], 'temperature': 0.0, 'avg_logprob': -0.29309146404266356, 'compression_ratio': 1.5446009389671362, 'no_speech_prob': 0.22850266098976135}, {'id': 811, 'seek': 338146, 'start': 3397.14, 'end': 3399.5, 'text': ' Absolute.', 'tokens': [51148, 43965, 1169, 13, 51266], 'temperature': 0.0, 'avg_logprob': -0.29309146404266356, 'compression_ratio': 1.5446009389671362, 'no_speech_prob': 0.22850266098976135}, {'id': 812, 'seek': 338146, 'start': 3399.5, 'end': 3408.02, 'text': ' It is a part of the program or code where the data is available preferably following', 'tokens': [51266, 467, 307, 257, 644, 295, 264, 1461, 420, 3089, 689, 264, 1412, 307, 2435, 45916, 3480, 51692], 'temperature': 0.0, 'avg_logprob': -0.29309146404266356, 'compression_ratio': 1.5446009389671362, 'no_speech_prob': 0.22850266098976135}, {'id': 813, 'seek': 340802, 'start': 3408.02, 'end': 3413.9, 'text': ' the instruction, okay, right.', 'tokens': [50364, 264, 10951, 11, 1392, 11, 558, 13, 50658], 'temperature': 0.0, 'avg_logprob': -0.22358992160894933, 'compression_ratio': 1.620879120879121, 'no_speech_prob': 0.03114268183708191}, {'id': 814, 'seek': 340802, 'start': 3413.9, 'end': 3420.82, 'text': ' An immediate constant the data is available as a part of the instruction, correct.', 'tokens': [50658, 1107, 11629, 5754, 264, 1412, 307, 2435, 382, 257, 644, 295, 264, 10951, 11, 3006, 13, 51004], 'temperature': 0.0, 'avg_logprob': -0.22358992160894933, 'compression_ratio': 1.620879120879121, 'no_speech_prob': 0.03114268183708191}, {'id': 815, 'seek': 340802, 'start': 3420.82, 'end': 3427.7, 'text': ' So some 16 bits of the instruction is the operand, right.', 'tokens': [51004, 407, 512, 3165, 9239, 295, 264, 10951, 307, 264, 2208, 474, 11, 558, 13, 51348], 'temperature': 0.0, 'avg_logprob': -0.22358992160894933, 'compression_ratio': 1.620879120879121, 'no_speech_prob': 0.03114268183708191}, {'id': 816, 'seek': 340802, 'start': 3427.7, 'end': 3432.38, 'text': ' The case of a PC relative addressing mode I can say that the operand is in the next', 'tokens': [51348, 440, 1389, 295, 257, 6465, 4972, 14329, 4391, 286, 393, 584, 300, 264, 2208, 474, 307, 294, 264, 958, 51582], 'temperature': 0.0, 'avg_logprob': -0.22358992160894933, 'compression_ratio': 1.620879120879121, 'no_speech_prob': 0.03114268183708191}, {'id': 817, 'seek': 340802, 'start': 3432.38, 'end': 3436.66, 'text': ' four locations that is PC plus 4, right.', 'tokens': [51582, 1451, 9253, 300, 307, 6465, 1804, 1017, 11, 558, 13, 51796], 'temperature': 0.0, 'avg_logprob': -0.22358992160894933, 'compression_ratio': 1.620879120879121, 'no_speech_prob': 0.03114268183708191}, {'id': 818, 'seek': 343666, 'start': 3437.2999999999997, 'end': 3440.22, 'text': ' That is possible.', 'tokens': [50396, 663, 307, 1944, 13, 50542], 'temperature': 0.0, 'avg_logprob': -0.23565787457405252, 'compression_ratio': 1.8265306122448979, 'no_speech_prob': 0.0043577104806900024}, {'id': 819, 'seek': 343666, 'start': 3440.22, 'end': 3445.3799999999997, 'text': ' Again only CISC machine support these kinds of addressing modes.', 'tokens': [50542, 3764, 787, 383, 2343, 34, 3479, 1406, 613, 3685, 295, 14329, 14068, 13, 50800], 'temperature': 0.0, 'avg_logprob': -0.23565787457405252, 'compression_ratio': 1.8265306122448979, 'no_speech_prob': 0.0043577104806900024}, {'id': 820, 'seek': 343666, 'start': 3445.3799999999997, 'end': 3450.7799999999997, 'text': ' Now let us look at the RISC-V instruction set architecture, okay.', 'tokens': [50800, 823, 718, 505, 574, 412, 264, 497, 2343, 34, 12, 53, 10951, 992, 9482, 11, 1392, 13, 51070], 'temperature': 0.0, 'avg_logprob': -0.23565787457405252, 'compression_ratio': 1.8265306122448979, 'no_speech_prob': 0.0043577104806900024}, {'id': 821, 'seek': 343666, 'start': 3450.7799999999997, 'end': 3455.8199999999997, 'text': ' RISC-V instruction set architecture first of all it has 32, there are multiple versions', 'tokens': [51070, 497, 2343, 34, 12, 53, 10951, 992, 9482, 700, 295, 439, 309, 575, 8858, 11, 456, 366, 3866, 9606, 51322], 'temperature': 0.0, 'avg_logprob': -0.23565787457405252, 'compression_ratio': 1.8265306122448979, 'no_speech_prob': 0.0043577104806900024}, {'id': 822, 'seek': 343666, 'start': 3455.8199999999997, 'end': 3457.7799999999997, 'text': ' of the RISC-V instruction set architecture.', 'tokens': [51322, 295, 264, 497, 2343, 34, 12, 53, 10951, 992, 9482, 13, 51420], 'temperature': 0.0, 'avg_logprob': -0.23565787457405252, 'compression_ratio': 1.8265306122448979, 'no_speech_prob': 0.0043577104806900024}, {'id': 823, 'seek': 343666, 'start': 3457.7799999999997, 'end': 3462.58, 'text': ' We are going to talk about the integer instruction set version of that, okay.', 'tokens': [51420, 492, 366, 516, 281, 751, 466, 264, 24922, 10951, 992, 3037, 295, 300, 11, 1392, 13, 51660], 'temperature': 0.0, 'avg_logprob': -0.23565787457405252, 'compression_ratio': 1.8265306122448979, 'no_speech_prob': 0.0043577104806900024}, {'id': 824, 'seek': 346258, 'start': 3463.06, 'end': 3467.74, 'text': ' It is what is called 32I or something like that.', 'tokens': [50388, 467, 307, 437, 307, 1219, 8858, 40, 420, 746, 411, 300, 13, 50622], 'temperature': 0.0, 'avg_logprob': -0.17515094981474036, 'compression_ratio': 1.5307262569832403, 'no_speech_prob': 0.22610406577587128}, {'id': 825, 'seek': 346258, 'start': 3467.74, 'end': 3477.38, 'text': ' So this has 32, 32 bit general purpose registers R0 to R31 and R0 always has a value 0.', 'tokens': [50622, 407, 341, 575, 8858, 11, 8858, 857, 2674, 4334, 38351, 497, 15, 281, 497, 12967, 293, 497, 15, 1009, 575, 257, 2158, 1958, 13, 51104], 'temperature': 0.0, 'avg_logprob': -0.17515094981474036, 'compression_ratio': 1.5307262569832403, 'no_speech_prob': 0.22610406577587128}, {'id': 826, 'seek': 346258, 'start': 3477.38, 'end': 3481.04, 'text': ' It means that no value can be written into it.', 'tokens': [51104, 467, 1355, 300, 572, 2158, 393, 312, 3720, 666, 309, 13, 51287], 'temperature': 0.0, 'avg_logprob': -0.17515094981474036, 'compression_ratio': 1.5307262569832403, 'no_speech_prob': 0.22610406577587128}, {'id': 827, 'seek': 346258, 'start': 3481.04, 'end': 3484.74, 'text': ' If you want to get 0 as a value then you can read R0.', 'tokens': [51287, 759, 291, 528, 281, 483, 1958, 382, 257, 2158, 550, 291, 393, 1401, 497, 15, 13, 51472], 'temperature': 0.0, 'avg_logprob': -0.17515094981474036, 'compression_ratio': 1.5307262569832403, 'no_speech_prob': 0.22610406577587128}, {'id': 828, 'seek': 346258, 'start': 3484.74, 'end': 3487.94, 'text': ' It will give you the value 0, right.', 'tokens': [51472, 467, 486, 976, 291, 264, 2158, 1958, 11, 558, 13, 51632], 'temperature': 0.0, 'avg_logprob': -0.17515094981474036, 'compression_ratio': 1.5307262569832403, 'no_speech_prob': 0.22610406577587128}, {'id': 829, 'seek': 348794, 'start': 3487.94, 'end': 3495.46, 'text': ' Many of the RISC architectures have a hardwired 0 register for various purposes, okay.', 'tokens': [50364, 5126, 295, 264, 497, 2343, 34, 6331, 1303, 362, 257, 1152, 86, 1824, 1958, 7280, 337, 3683, 9932, 11, 1392, 13, 50740], 'temperature': 0.0, 'avg_logprob': -0.24384723239474826, 'compression_ratio': 1.4455958549222798, 'no_speech_prob': 0.06561194360256195}, {'id': 830, 'seek': 348794, 'start': 3495.46, 'end': 3500.5, 'text': ' They may not have a MOV instruction, MOV from one register to another but then if you do', 'tokens': [50740, 814, 815, 406, 362, 257, 19290, 53, 10951, 11, 19290, 53, 490, 472, 7280, 281, 1071, 457, 550, 498, 291, 360, 50992], 'temperature': 0.0, 'avg_logprob': -0.24384723239474826, 'compression_ratio': 1.4455958549222798, 'no_speech_prob': 0.06561194360256195}, {'id': 831, 'seek': 348794, 'start': 3500.5, 'end': 3506.7400000000002, 'text': ' ADD with this R0 register that is like a MOV, right.', 'tokens': [50992, 9135, 35, 365, 341, 497, 15, 7280, 300, 307, 411, 257, 19290, 53, 11, 558, 13, 51304], 'temperature': 0.0, 'avg_logprob': -0.24384723239474826, 'compression_ratio': 1.4455958549222798, 'no_speech_prob': 0.06561194360256195}, {'id': 832, 'seek': 348794, 'start': 3506.7400000000002, 'end': 3512.46, 'text': ' ADD R3, R2, R1, R2 is being copied into R2, right.', 'tokens': [51304, 9135, 35, 497, 18, 11, 497, 17, 11, 497, 16, 11, 497, 17, 307, 885, 25365, 666, 497, 17, 11, 558, 13, 51590], 'temperature': 0.0, 'avg_logprob': -0.24384723239474826, 'compression_ratio': 1.4455958549222798, 'no_speech_prob': 0.06561194360256195}, {'id': 833, 'seek': 351246, 'start': 3513.46, 'end': 3518.82, 'text': ' That is the reason that is one way by which this 0 register is being used, okay.', 'tokens': [50414, 663, 307, 264, 1778, 300, 307, 472, 636, 538, 597, 341, 1958, 7280, 307, 885, 1143, 11, 1392, 13, 50682], 'temperature': 0.0, 'avg_logprob': -0.23150476595250571, 'compression_ratio': 1.5169082125603865, 'no_speech_prob': 0.0501156747341156}, {'id': 834, 'seek': 351246, 'start': 3518.82, 'end': 3521.7, 'text': ' Also for comparison purposes and so on.', 'tokens': [50682, 2743, 337, 9660, 9932, 293, 370, 322, 13, 50826], 'temperature': 0.0, 'avg_logprob': -0.23150476595250571, 'compression_ratio': 1.5169082125603865, 'no_speech_prob': 0.0501156747341156}, {'id': 835, 'seek': 351246, 'start': 3521.7, 'end': 3528.06, 'text': ' The addressing mode supported by it are only these three, this PC relative is only for', 'tokens': [50826, 440, 14329, 4391, 8104, 538, 309, 366, 787, 613, 1045, 11, 341, 6465, 4972, 307, 787, 337, 51144], 'temperature': 0.0, 'avg_logprob': -0.23150476595250571, 'compression_ratio': 1.5169082125603865, 'no_speech_prob': 0.0501156747341156}, {'id': 836, 'seek': 351246, 'start': 3528.06, 'end': 3530.38, 'text': ' branches, okay.', 'tokens': [51144, 14770, 11, 1392, 13, 51260], 'temperature': 0.0, 'avg_logprob': -0.23150476595250571, 'compression_ratio': 1.5169082125603865, 'no_speech_prob': 0.0501156747341156}, {'id': 837, 'seek': 351246, 'start': 3530.38, 'end': 3536.06, 'text': ' So immediate, register direct and base displacement, okay.', 'tokens': [51260, 407, 11629, 11, 7280, 2047, 293, 3096, 21899, 11, 1392, 13, 51544], 'temperature': 0.0, 'avg_logprob': -0.23150476595250571, 'compression_ratio': 1.5169082125603865, 'no_speech_prob': 0.0501156747341156}, {'id': 838, 'seek': 351246, 'start': 3536.06, 'end': 3537.9, 'text': ' This is a RISC instruction set.', 'tokens': [51544, 639, 307, 257, 497, 2343, 34, 10951, 992, 13, 51636], 'temperature': 0.0, 'avg_logprob': -0.23150476595250571, 'compression_ratio': 1.5169082125603865, 'no_speech_prob': 0.0501156747341156}, {'id': 839, 'seek': 353790, 'start': 3537.9, 'end': 3542.58, 'text': ' So all arithmetic instruction should only have register operands or immediate operands,', 'tokens': [50364, 407, 439, 42973, 10951, 820, 787, 362, 7280, 2208, 2967, 420, 11629, 2208, 2967, 11, 50598], 'temperature': 0.0, 'avg_logprob': -0.21408070909216048, 'compression_ratio': 1.7253218884120172, 'no_speech_prob': 0.018993908539414406}, {'id': 840, 'seek': 353790, 'start': 3542.58, 'end': 3545.1800000000003, 'text': ' R register and immediate operands.', 'tokens': [50598, 497, 7280, 293, 11629, 2208, 2967, 13, 50728], 'temperature': 0.0, 'avg_logprob': -0.21408070909216048, 'compression_ratio': 1.7253218884120172, 'no_speech_prob': 0.018993908539414406}, {'id': 841, 'seek': 353790, 'start': 3545.1800000000003, 'end': 3548.62, 'text': ' And load store instruction should have the base displacement.', 'tokens': [50728, 400, 3677, 3531, 10951, 820, 362, 264, 3096, 21899, 13, 50900], 'temperature': 0.0, 'avg_logprob': -0.21408070909216048, 'compression_ratio': 1.7253218884120172, 'no_speech_prob': 0.018993908539414406}, {'id': 842, 'seek': 353790, 'start': 3548.62, 'end': 3552.86, 'text': ' We will see examples of these instructions as we go by.', 'tokens': [50900, 492, 486, 536, 5110, 295, 613, 9415, 382, 321, 352, 538, 13, 51112], 'temperature': 0.0, 'avg_logprob': -0.21408070909216048, 'compression_ratio': 1.7253218884120172, 'no_speech_prob': 0.018993908539414406}, {'id': 843, 'seek': 353790, 'start': 3552.86, 'end': 3556.58, 'text': ' Then for branches it is PC relative, okay.', 'tokens': [51112, 1396, 337, 14770, 309, 307, 6465, 4972, 11, 1392, 13, 51298], 'temperature': 0.0, 'avg_logprob': -0.21408070909216048, 'compression_ratio': 1.7253218884120172, 'no_speech_prob': 0.018993908539414406}, {'id': 844, 'seek': 353790, 'start': 3556.58, 'end': 3561.46, 'text': ' That is whenever I do a jump or a branch or conditional branch it is with respect to the', 'tokens': [51298, 663, 307, 5699, 286, 360, 257, 3012, 420, 257, 9819, 420, 27708, 9819, 309, 307, 365, 3104, 281, 264, 51542], 'temperature': 0.0, 'avg_logprob': -0.21408070909216048, 'compression_ratio': 1.7253218884120172, 'no_speech_prob': 0.018993908539414406}, {'id': 845, 'seek': 353790, 'start': 3561.46, 'end': 3563.84, 'text': ' current program counter wire.', 'tokens': [51542, 2190, 1461, 5682, 6234, 13, 51661], 'temperature': 0.0, 'avg_logprob': -0.21408070909216048, 'compression_ratio': 1.7253218884120172, 'no_speech_prob': 0.018993908539414406}, {'id': 846, 'seek': 356384, 'start': 3563.84, 'end': 3568.6400000000003, 'text': ' So what we are going to see is what is called the RV32I instruction set.', 'tokens': [50364, 407, 437, 321, 366, 516, 281, 536, 307, 437, 307, 1219, 264, 28314, 11440, 40, 10951, 992, 13, 50604], 'temperature': 0.0, 'avg_logprob': -0.3012614802310341, 'compression_ratio': 1.471502590673575, 'no_speech_prob': 0.054293833673000336}, {'id': 847, 'seek': 356384, 'start': 3568.6400000000003, 'end': 3570.1200000000003, 'text': ' There are different versions of this.', 'tokens': [50604, 821, 366, 819, 9606, 295, 341, 13, 50678], 'temperature': 0.0, 'avg_logprob': -0.3012614802310341, 'compression_ratio': 1.471502590673575, 'no_speech_prob': 0.054293833673000336}, {'id': 848, 'seek': 356384, 'start': 3570.1200000000003, 'end': 3571.56, 'text': ' By the way what is RISC-Pi?', 'tokens': [50678, 3146, 264, 636, 437, 307, 497, 2343, 34, 12, 47, 72, 30, 50750], 'temperature': 0.0, 'avg_logprob': -0.3012614802310341, 'compression_ratio': 1.471502590673575, 'no_speech_prob': 0.054293833673000336}, {'id': 849, 'seek': 356384, 'start': 3571.56, 'end': 3574.48, 'text': ' How many of you know about RISC-Pi?', 'tokens': [50750, 1012, 867, 295, 291, 458, 466, 497, 2343, 34, 12, 47, 72, 30, 50896], 'temperature': 0.0, 'avg_logprob': -0.3012614802310341, 'compression_ratio': 1.471502590673575, 'no_speech_prob': 0.054293833673000336}, {'id': 850, 'seek': 356384, 'start': 3574.48, 'end': 3576.44, 'text': ' One.', 'tokens': [50896, 1485, 13, 50994], 'temperature': 0.0, 'avg_logprob': -0.3012614802310341, 'compression_ratio': 1.471502590673575, 'no_speech_prob': 0.054293833673000336}, {'id': 851, 'seek': 356384, 'start': 3576.44, 'end': 3577.44, 'text': ' What is it?', 'tokens': [50994, 708, 307, 309, 30, 51044], 'temperature': 0.0, 'avg_logprob': -0.3012614802310341, 'compression_ratio': 1.471502590673575, 'no_speech_prob': 0.054293833673000336}, {'id': 852, 'seek': 356384, 'start': 3577.44, 'end': 3586.2000000000003, 'text': ' It is a open architecture, right, okay.', 'tokens': [51044, 467, 307, 257, 1269, 9482, 11, 558, 11, 1392, 13, 51482], 'temperature': 0.0, 'avg_logprob': -0.3012614802310341, 'compression_ratio': 1.471502590673575, 'no_speech_prob': 0.054293833673000336}, {'id': 853, 'seek': 356384, 'start': 3586.2000000000003, 'end': 3589.6000000000004, 'text': ' And it has multiple versions that are defined, okay.', 'tokens': [51482, 400, 309, 575, 3866, 9606, 300, 366, 7642, 11, 1392, 13, 51652], 'temperature': 0.0, 'avg_logprob': -0.3012614802310341, 'compression_ratio': 1.471502590673575, 'no_speech_prob': 0.054293833673000336}, {'id': 854, 'seek': 358960, 'start': 3589.6, 'end': 3594.6, 'text': ' So we will talk about the R32I version, okay.', 'tokens': [50364, 407, 321, 486, 751, 466, 264, 497, 11440, 40, 3037, 11, 1392, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.18857461838495163, 'compression_ratio': 1.5974025974025974, 'no_speech_prob': 0.20578612387180328}, {'id': 855, 'seek': 358960, 'start': 3594.6, 'end': 3596.3199999999997, 'text': ' Of course this is the 32-bit version.', 'tokens': [50614, 2720, 1164, 341, 307, 264, 8858, 12, 5260, 3037, 13, 50700], 'temperature': 0.0, 'avg_logprob': -0.18857461838495163, 'compression_ratio': 1.5974025974025974, 'no_speech_prob': 0.20578612387180328}, {'id': 856, 'seek': 358960, 'start': 3596.3199999999997, 'end': 3599.72, 'text': ' The corresponding 64-bit version is also there.', 'tokens': [50700, 440, 11760, 12145, 12, 5260, 3037, 307, 611, 456, 13, 50870], 'temperature': 0.0, 'avg_logprob': -0.18857461838495163, 'compression_ratio': 1.5974025974025974, 'no_speech_prob': 0.20578612387180328}, {'id': 857, 'seek': 358960, 'start': 3599.72, 'end': 3605.6, 'text': ' And there are also many other variants as well, okay.', 'tokens': [50870, 400, 456, 366, 611, 867, 661, 21669, 382, 731, 11, 1392, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.18857461838495163, 'compression_ratio': 1.5974025974025974, 'no_speech_prob': 0.20578612387180328}, {'id': 858, 'seek': 358960, 'start': 3605.6, 'end': 3610.08, 'text': ' So in RV32I each register is 32 bits long.', 'tokens': [51164, 407, 294, 28314, 11440, 40, 1184, 7280, 307, 8858, 9239, 938, 13, 51388], 'temperature': 0.0, 'avg_logprob': -0.18857461838495163, 'compression_ratio': 1.5974025974025974, 'no_speech_prob': 0.20578612387180328}, {'id': 859, 'seek': 358960, 'start': 3610.08, 'end': 3611.08, 'text': ' That is what we saw.', 'tokens': [51388, 663, 307, 437, 321, 1866, 13, 51438], 'temperature': 0.0, 'avg_logprob': -0.18857461838495163, 'compression_ratio': 1.5974025974025974, 'no_speech_prob': 0.20578612387180328}, {'id': 860, 'seek': 358960, 'start': 3611.08, 'end': 3612.8199999999997, 'text': ' It is a load store architecture.', 'tokens': [51438, 467, 307, 257, 3677, 3531, 9482, 13, 51525], 'temperature': 0.0, 'avg_logprob': -0.18857461838495163, 'compression_ratio': 1.5974025974025974, 'no_speech_prob': 0.20578612387180328}, {'id': 861, 'seek': 358960, 'start': 3612.8199999999997, 'end': 3618.36, 'text': ' That means only, I mean load and store are the only instructions which can have memory', 'tokens': [51525, 663, 1355, 787, 11, 286, 914, 3677, 293, 3531, 366, 264, 787, 9415, 597, 393, 362, 4675, 51802], 'temperature': 0.0, 'avg_logprob': -0.18857461838495163, 'compression_ratio': 1.5974025974025974, 'no_speech_prob': 0.20578612387180328}, {'id': 862, 'seek': 361836, 'start': 3618.36, 'end': 3622.2400000000002, 'text': ' operands, okay.', 'tokens': [50364, 2208, 2967, 11, 1392, 13, 50558], 'temperature': 0.0, 'avg_logprob': -0.26678765786660685, 'compression_ratio': 1.5689655172413792, 'no_speech_prob': 0.15756848454475403}, {'id': 863, 'seek': 361836, 'start': 3622.2400000000002, 'end': 3623.96, 'text': ' And again we use the same terminology.', 'tokens': [50558, 400, 797, 321, 764, 264, 912, 27575, 13, 50644], 'temperature': 0.0, 'avg_logprob': -0.26678765786660685, 'compression_ratio': 1.5689655172413792, 'no_speech_prob': 0.15756848454475403}, {'id': 864, 'seek': 361836, 'start': 3623.96, 'end': 3625.96, 'text': ' 32-bit means a word.', 'tokens': [50644, 8858, 12, 5260, 1355, 257, 1349, 13, 50744], 'temperature': 0.0, 'avg_logprob': -0.26678765786660685, 'compression_ratio': 1.5689655172413792, 'no_speech_prob': 0.15756848454475403}, {'id': 865, 'seek': 361836, 'start': 3625.96, 'end': 3628.76, 'text': ' 16 bits is a half word or a short.', 'tokens': [50744, 3165, 9239, 307, 257, 1922, 1349, 420, 257, 2099, 13, 50884], 'temperature': 0.0, 'avg_logprob': -0.26678765786660685, 'compression_ratio': 1.5689655172413792, 'no_speech_prob': 0.15756848454475403}, {'id': 866, 'seek': 361836, 'start': 3628.76, 'end': 3632.0, 'text': ' 8 bits is a byte, okay.', 'tokens': [50884, 1649, 9239, 307, 257, 40846, 11, 1392, 13, 51046], 'temperature': 0.0, 'avg_logprob': -0.26678765786660685, 'compression_ratio': 1.5689655172413792, 'no_speech_prob': 0.15756848454475403}, {'id': 867, 'seek': 361836, 'start': 3632.0, 'end': 3633.44, 'text': ' Because why do we need these things?', 'tokens': [51046, 1436, 983, 360, 321, 643, 613, 721, 30, 51118], 'temperature': 0.0, 'avg_logprob': -0.26678765786660685, 'compression_ratio': 1.5689655172413792, 'no_speech_prob': 0.15756848454475403}, {'id': 868, 'seek': 361836, 'start': 3633.44, 'end': 3637.76, 'text': ' Because your instructions when they are moving data you have to specify on how much of data', 'tokens': [51118, 1436, 428, 9415, 562, 436, 366, 2684, 1412, 291, 362, 281, 16500, 322, 577, 709, 295, 1412, 51334], 'temperature': 0.0, 'avg_logprob': -0.26678765786660685, 'compression_ratio': 1.5689655172413792, 'no_speech_prob': 0.15756848454475403}, {'id': 869, 'seek': 361836, 'start': 3637.76, 'end': 3641.36, 'text': ' it is getting operated on, okay.', 'tokens': [51334, 309, 307, 1242, 20826, 322, 11, 1392, 13, 51514], 'temperature': 0.0, 'avg_logprob': -0.26678765786660685, 'compression_ratio': 1.5689655172413792, 'no_speech_prob': 0.15756848454475403}, {'id': 870, 'seek': 361836, 'start': 3641.36, 'end': 3642.36, 'text': ' That is the reason.', 'tokens': [51514, 663, 307, 264, 1778, 13, 51564], 'temperature': 0.0, 'avg_logprob': -0.26678765786660685, 'compression_ratio': 1.5689655172413792, 'no_speech_prob': 0.15756848454475403}, {'id': 871, 'seek': 361836, 'start': 3642.36, 'end': 3646.32, 'text': ' We will see examples of this as we go by, okay.', 'tokens': [51564, 492, 486, 536, 5110, 295, 341, 382, 321, 352, 538, 11, 1392, 13, 51762], 'temperature': 0.0, 'avg_logprob': -0.26678765786660685, 'compression_ratio': 1.5689655172413792, 'no_speech_prob': 0.15756848454475403}, {'id': 872, 'seek': 364632, 'start': 3646.32, 'end': 3652.28, 'text': ' As I mentioned earlier displacement and immediate, okay, in this architecture can have varying', 'tokens': [50364, 1018, 286, 2835, 3071, 21899, 293, 11629, 11, 1392, 11, 294, 341, 9482, 393, 362, 22984, 50662], 'temperature': 0.0, 'avg_logprob': -0.24452077425443208, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.2225896567106247}, {'id': 873, 'seek': 364632, 'start': 3652.28, 'end': 3653.28, 'text': ' size.', 'tokens': [50662, 2744, 13, 50712], 'temperature': 0.0, 'avg_logprob': -0.24452077425443208, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.2225896567106247}, {'id': 874, 'seek': 364632, 'start': 3653.28, 'end': 3658.0800000000004, 'text': ' That means depending on the instruction format it can have a 10-bit or 12-bits or whatever', 'tokens': [50712, 663, 1355, 5413, 322, 264, 10951, 7877, 309, 393, 362, 257, 1266, 12, 5260, 420, 2272, 12, 34010, 420, 2035, 50952], 'temperature': 0.0, 'avg_logprob': -0.24452077425443208, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.2225896567106247}, {'id': 875, 'seek': 364632, 'start': 3658.0800000000004, 'end': 3659.0800000000004, 'text': ' it is.', 'tokens': [50952, 309, 307, 13, 51002], 'temperature': 0.0, 'avg_logprob': -0.24452077425443208, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.2225896567106247}, {'id': 876, 'seek': 364632, 'start': 3659.0800000000004, 'end': 3661.6000000000004, 'text': ' You will see examples of this as we go, okay.', 'tokens': [51002, 509, 486, 536, 5110, 295, 341, 382, 321, 352, 11, 1392, 13, 51128], 'temperature': 0.0, 'avg_logprob': -0.24452077425443208, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.2225896567106247}, {'id': 877, 'seek': 364632, 'start': 3661.6000000000004, 'end': 3667.2000000000003, 'text': ' So the load and store instructions which are what we call as the data transfer instructions,', 'tokens': [51128, 407, 264, 3677, 293, 3531, 9415, 597, 366, 437, 321, 818, 382, 264, 1412, 5003, 9415, 11, 51408], 'temperature': 0.0, 'avg_logprob': -0.24452077425443208, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.2225896567106247}, {'id': 878, 'seek': 364632, 'start': 3667.2000000000003, 'end': 3669.0800000000004, 'text': ' okay.', 'tokens': [51408, 1392, 13, 51502], 'temperature': 0.0, 'avg_logprob': -0.24452077425443208, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.2225896567106247}, {'id': 879, 'seek': 364632, 'start': 3669.0800000000004, 'end': 3674.0800000000004, 'text': ' They typically, sorry, they typically have a format something like this.', 'tokens': [51502, 814, 5850, 11, 2597, 11, 436, 5850, 362, 257, 7877, 746, 411, 341, 13, 51752], 'temperature': 0.0, 'avg_logprob': -0.24452077425443208, 'compression_ratio': 1.6979591836734693, 'no_speech_prob': 0.2225896567106247}, {'id': 880, 'seek': 367408, 'start': 3674.72, 'end': 3681.72, 'text': ' It is either a load byte or a load byte unsigned, load half word, load half word unsigned or', 'tokens': [50396, 467, 307, 2139, 257, 3677, 40846, 420, 257, 3677, 40846, 2693, 16690, 11, 3677, 1922, 1349, 11, 3677, 1922, 1349, 2693, 16690, 420, 50746], 'temperature': 0.0, 'avg_logprob': -0.2785729102368625, 'compression_ratio': 1.971264367816092, 'no_speech_prob': 0.159986674785614}, {'id': 881, 'seek': 367408, 'start': 3682.52, 'end': 3686.72, 'text': ' load unsigned immediate or a load word, one of this.', 'tokens': [50786, 3677, 2693, 16690, 11629, 420, 257, 3677, 1349, 11, 472, 295, 341, 13, 50996], 'temperature': 0.0, 'avg_logprob': -0.2785729102368625, 'compression_ratio': 1.971264367816092, 'no_speech_prob': 0.159986674785614}, {'id': 882, 'seek': 367408, 'start': 3686.72, 'end': 3688.92, 'text': ' So when you say a load word it is typically 4 bytes.', 'tokens': [50996, 407, 562, 291, 584, 257, 3677, 1349, 309, 307, 5850, 1017, 36088, 13, 51106], 'temperature': 0.0, 'avg_logprob': -0.2785729102368625, 'compression_ratio': 1.971264367816092, 'no_speech_prob': 0.159986674785614}, {'id': 883, 'seek': 367408, 'start': 3688.92, 'end': 3689.92, 'text': ' It is always 4 bytes.', 'tokens': [51106, 467, 307, 1009, 1017, 36088, 13, 51156], 'temperature': 0.0, 'avg_logprob': -0.2785729102368625, 'compression_ratio': 1.971264367816092, 'no_speech_prob': 0.159986674785614}, {'id': 884, 'seek': 367408, 'start': 3689.92, 'end': 3694.04, 'text': ' If you say a load half word it is 2 bytes.', 'tokens': [51156, 759, 291, 584, 257, 3677, 1922, 1349, 309, 307, 568, 36088, 13, 51362], 'temperature': 0.0, 'avg_logprob': -0.2785729102368625, 'compression_ratio': 1.971264367816092, 'no_speech_prob': 0.159986674785614}, {'id': 885, 'seek': 367408, 'start': 3694.04, 'end': 3695.92, 'text': ' And the instruction has a format.', 'tokens': [51362, 400, 264, 10951, 575, 257, 7877, 13, 51456], 'temperature': 0.0, 'avg_logprob': -0.2785729102368625, 'compression_ratio': 1.971264367816092, 'no_speech_prob': 0.159986674785614}, {'id': 886, 'seek': 367408, 'start': 3695.92, 'end': 3698.3199999999997, 'text': ' This x2 is a register.', 'tokens': [51456, 639, 2031, 17, 307, 257, 7280, 13, 51576], 'temperature': 0.0, 'avg_logprob': -0.2785729102368625, 'compression_ratio': 1.971264367816092, 'no_speech_prob': 0.159986674785614}, {'id': 887, 'seek': 367408, 'start': 3698.3199999999997, 'end': 3700.3199999999997, 'text': ' x3 is also a register.', 'tokens': [51576, 2031, 18, 307, 611, 257, 7280, 13, 51676], 'temperature': 0.0, 'avg_logprob': -0.2785729102368625, 'compression_ratio': 1.971264367816092, 'no_speech_prob': 0.159986674785614}, {'id': 888, 'seek': 370032, 'start': 3700.32, 'end': 3704.6800000000003, 'text': ' The address is available in x3 with an offset of 4.', 'tokens': [50364, 440, 2985, 307, 2435, 294, 2031, 18, 365, 364, 18687, 295, 1017, 13, 50582], 'temperature': 0.0, 'avg_logprob': -0.11988755394430721, 'compression_ratio': 1.6631016042780749, 'no_speech_prob': 0.02915116772055626}, {'id': 889, 'seek': 370032, 'start': 3704.6800000000003, 'end': 3710.48, 'text': ' So x3 plus 4 is the address of the memory location that is being accessed and put into', 'tokens': [50582, 407, 2031, 18, 1804, 1017, 307, 264, 2985, 295, 264, 4675, 4914, 300, 307, 885, 34211, 293, 829, 666, 50872], 'temperature': 0.0, 'avg_logprob': -0.11988755394430721, 'compression_ratio': 1.6631016042780749, 'no_speech_prob': 0.02915116772055626}, {'id': 890, 'seek': 370032, 'start': 3710.48, 'end': 3712.48, 'text': ' x2, okay.', 'tokens': [50872, 2031, 17, 11, 1392, 13, 50972], 'temperature': 0.0, 'avg_logprob': -0.11988755394430721, 'compression_ratio': 1.6631016042780749, 'no_speech_prob': 0.02915116772055626}, {'id': 891, 'seek': 370032, 'start': 3712.48, 'end': 3719.36, 'text': ' Similarly for the store instructions, right, in this case x4 minus 8 is the address of', 'tokens': [50972, 13157, 337, 264, 3531, 9415, 11, 558, 11, 294, 341, 1389, 2031, 19, 3175, 1649, 307, 264, 2985, 295, 51316], 'temperature': 0.0, 'avg_logprob': -0.11988755394430721, 'compression_ratio': 1.6631016042780749, 'no_speech_prob': 0.02915116772055626}, {'id': 892, 'seek': 370032, 'start': 3719.36, 'end': 3726.84, 'text': ' the location to which the value available in x2 is being copied into, okay.', 'tokens': [51316, 264, 4914, 281, 597, 264, 2158, 2435, 294, 2031, 17, 307, 885, 25365, 666, 11, 1392, 13, 51690], 'temperature': 0.0, 'avg_logprob': -0.11988755394430721, 'compression_ratio': 1.6631016042780749, 'no_speech_prob': 0.02915116772055626}, {'id': 893, 'seek': 372684, 'start': 3726.84, 'end': 3732.36, 'text': ' Similarly you can think of what the load byte or load half byte, half word would be,', 'tokens': [50364, 13157, 291, 393, 519, 295, 437, 264, 3677, 40846, 420, 3677, 1922, 40846, 11, 1922, 1349, 576, 312, 11, 50640], 'temperature': 0.0, 'avg_logprob': -0.16957703377436667, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.06983136385679245}, {'id': 894, 'seek': 372684, 'start': 3732.36, 'end': 3733.36, 'text': ' okay.', 'tokens': [50640, 1392, 13, 50690], 'temperature': 0.0, 'avg_logprob': -0.16957703377436667, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.06983136385679245}, {'id': 895, 'seek': 372684, 'start': 3733.36, 'end': 3738.2000000000003, 'text': ' It is either 2 bytes, 1 byte or 2 bytes, okay.', 'tokens': [50690, 467, 307, 2139, 568, 36088, 11, 502, 40846, 420, 568, 36088, 11, 1392, 13, 50932], 'temperature': 0.0, 'avg_logprob': -0.16957703377436667, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.06983136385679245}, {'id': 896, 'seek': 372684, 'start': 3738.2000000000003, 'end': 3740.36, 'text': ' Arithmetic instructions, okay.', 'tokens': [50932, 1587, 41179, 9415, 11, 1392, 13, 51040], 'temperature': 0.0, 'avg_logprob': -0.16957703377436667, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.06983136385679245}, {'id': 897, 'seek': 372684, 'start': 3740.36, 'end': 3742.32, 'text': ' These are the arithmetic instructions.', 'tokens': [51040, 1981, 366, 264, 42973, 9415, 13, 51138], 'temperature': 0.0, 'avg_logprob': -0.16957703377436667, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.06983136385679245}, {'id': 898, 'seek': 372684, 'start': 3742.32, 'end': 3744.88, 'text': ' Arithmetic instructions operate on register.', 'tokens': [51138, 1587, 41179, 9415, 9651, 322, 7280, 13, 51266], 'temperature': 0.0, 'avg_logprob': -0.16957703377436667, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.06983136385679245}, {'id': 899, 'seek': 372684, 'start': 3744.88, 'end': 3748.84, 'text': ' That means the entire 32 bits, okay.', 'tokens': [51266, 663, 1355, 264, 2302, 8858, 9239, 11, 1392, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.16957703377436667, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.06983136385679245}, {'id': 900, 'seek': 372684, 'start': 3748.84, 'end': 3755.6400000000003, 'text': ' And you can have add, add unsigned, add immediate, add immediate with unsigned and so on.', 'tokens': [51464, 400, 291, 393, 362, 909, 11, 909, 2693, 16690, 11, 909, 11629, 11, 909, 11629, 365, 2693, 16690, 293, 370, 322, 13, 51804], 'temperature': 0.0, 'avg_logprob': -0.16957703377436667, 'compression_ratio': 1.8762376237623761, 'no_speech_prob': 0.06983136385679245}, {'id': 901, 'seek': 375564, 'start': 3755.64, 'end': 3758.72, 'text': ' Similarly for subtract logical operations and so on and so forth.', 'tokens': [50364, 13157, 337, 16390, 14978, 7705, 293, 370, 322, 293, 370, 5220, 13, 50518], 'temperature': 0.0, 'avg_logprob': -0.20065620489287794, 'compression_ratio': 1.715481171548117, 'no_speech_prob': 0.029007861390709877}, {'id': 902, 'seek': 375564, 'start': 3758.72, 'end': 3762.2799999999997, 'text': ' I will not go into all of these operations, okay.', 'tokens': [50518, 286, 486, 406, 352, 666, 439, 295, 613, 7705, 11, 1392, 13, 50696], 'temperature': 0.0, 'avg_logprob': -0.20065620489287794, 'compression_ratio': 1.715481171548117, 'no_speech_prob': 0.029007861390709877}, {'id': 903, 'seek': 375564, 'start': 3762.2799999999997, 'end': 3768.12, 'text': ' But again you can see that when you write add x1, x2, x3, contents of x2 and x3 are', 'tokens': [50696, 583, 797, 291, 393, 536, 300, 562, 291, 2464, 909, 2031, 16, 11, 2031, 17, 11, 2031, 18, 11, 15768, 295, 2031, 17, 293, 2031, 18, 366, 50988], 'temperature': 0.0, 'avg_logprob': -0.20065620489287794, 'compression_ratio': 1.715481171548117, 'no_speech_prob': 0.029007861390709877}, {'id': 904, 'seek': 375564, 'start': 3768.12, 'end': 3771.08, 'text': ' added and put into x1.', 'tokens': [50988, 3869, 293, 829, 666, 2031, 16, 13, 51136], 'temperature': 0.0, 'avg_logprob': -0.20065620489287794, 'compression_ratio': 1.715481171548117, 'no_speech_prob': 0.029007861390709877}, {'id': 905, 'seek': 375564, 'start': 3771.08, 'end': 3776.3599999999997, 'text': ' Similarly if you can do a logical ORing or you can do a shift, okay, and you can specify', 'tokens': [51136, 13157, 498, 291, 393, 360, 257, 14978, 19654, 278, 420, 291, 393, 360, 257, 5513, 11, 1392, 11, 293, 291, 393, 16500, 51400], 'temperature': 0.0, 'avg_logprob': -0.20065620489287794, 'compression_ratio': 1.715481171548117, 'no_speech_prob': 0.029007861390709877}, {'id': 906, 'seek': 375564, 'start': 3776.3599999999997, 'end': 3782.6, 'text': ' the shift amount and which register is being shifted and where is the destination register,', 'tokens': [51400, 264, 5513, 2372, 293, 597, 7280, 307, 885, 18892, 293, 689, 307, 264, 12236, 7280, 11, 51712], 'temperature': 0.0, 'avg_logprob': -0.20065620489287794, 'compression_ratio': 1.715481171548117, 'no_speech_prob': 0.029007861390709877}, {'id': 907, 'seek': 375564, 'start': 3782.6, 'end': 3783.6, 'text': ' right.', 'tokens': [51712, 558, 13, 51762], 'temperature': 0.0, 'avg_logprob': -0.20065620489287794, 'compression_ratio': 1.715481171548117, 'no_speech_prob': 0.029007861390709877}, {'id': 908, 'seek': 378360, 'start': 3783.88, 'end': 3788.72, 'text': ' These are comparison operations, comparison operations compared to operands, okay.', 'tokens': [50378, 1981, 366, 9660, 7705, 11, 9660, 7705, 5347, 281, 2208, 2967, 11, 1392, 13, 50620], 'temperature': 0.0, 'avg_logprob': -0.27062239298006385, 'compression_ratio': 1.621761658031088, 'no_speech_prob': 0.03650533780455589}, {'id': 909, 'seek': 378360, 'start': 3788.72, 'end': 3795.88, 'text': ' And then depending on that set the destination register either to 1 or a 0, right.', 'tokens': [50620, 400, 550, 5413, 322, 300, 992, 264, 12236, 7280, 2139, 281, 502, 420, 257, 1958, 11, 558, 13, 50978], 'temperature': 0.0, 'avg_logprob': -0.27062239298006385, 'compression_ratio': 1.621761658031088, 'no_speech_prob': 0.03650533780455589}, {'id': 910, 'seek': 378360, 'start': 3795.88, 'end': 3796.88, 'text': ' Any questions?', 'tokens': [50978, 2639, 1651, 30, 51028], 'temperature': 0.0, 'avg_logprob': -0.27062239298006385, 'compression_ratio': 1.621761658031088, 'no_speech_prob': 0.03650533780455589}, {'id': 911, 'seek': 378360, 'start': 3796.88, 'end': 3805.72, 'text': ' What is the difference between unsigned and normal, okay.', 'tokens': [51028, 708, 307, 264, 2649, 1296, 2693, 16690, 293, 2710, 11, 1392, 13, 51470], 'temperature': 0.0, 'avg_logprob': -0.27062239298006385, 'compression_ratio': 1.621761658031088, 'no_speech_prob': 0.03650533780455589}, {'id': 912, 'seek': 378360, 'start': 3805.72, 'end': 3806.72, 'text': ' Very good.', 'tokens': [51470, 4372, 665, 13, 51520], 'temperature': 0.0, 'avg_logprob': -0.27062239298006385, 'compression_ratio': 1.621761658031088, 'no_speech_prob': 0.03650533780455589}, {'id': 913, 'seek': 378360, 'start': 3806.72, 'end': 3809.96, 'text': ' So you are a C programmer, right.', 'tokens': [51520, 407, 291, 366, 257, 383, 32116, 11, 558, 13, 51682], 'temperature': 0.0, 'avg_logprob': -0.27062239298006385, 'compression_ratio': 1.621761658031088, 'no_speech_prob': 0.03650533780455589}, {'id': 914, 'seek': 378360, 'start': 3809.96, 'end': 3811.3199999999997, 'text': ' Do you use unsigned anywhere?', 'tokens': [51682, 1144, 291, 764, 2693, 16690, 4992, 30, 51750], 'temperature': 0.0, 'avg_logprob': -0.27062239298006385, 'compression_ratio': 1.621761658031088, 'no_speech_prob': 0.03650533780455589}, {'id': 915, 'seek': 381132, 'start': 3811.44, 'end': 3815.6800000000003, 'text': ' Certain variables can only have positive values, right.', 'tokens': [50370, 13407, 9102, 393, 787, 362, 3353, 4190, 11, 558, 13, 50582], 'temperature': 0.0, 'avg_logprob': -0.21269403654953528, 'compression_ratio': 1.7473118279569892, 'no_speech_prob': 0.07043032348155975}, {'id': 916, 'seek': 381132, 'start': 3815.6800000000003, 'end': 3820.92, 'text': ' They are declared as unsigned and they are unsigned, right.', 'tokens': [50582, 814, 366, 15489, 382, 2693, 16690, 293, 436, 366, 2693, 16690, 11, 558, 13, 50844], 'temperature': 0.0, 'avg_logprob': -0.21269403654953528, 'compression_ratio': 1.7473118279569892, 'no_speech_prob': 0.07043032348155975}, {'id': 917, 'seek': 381132, 'start': 3820.92, 'end': 3828.2000000000003, 'text': ' And when you do arithmetic in unsigned, there are certain things that you follow, right.', 'tokens': [50844, 400, 562, 291, 360, 42973, 294, 2693, 16690, 11, 456, 366, 1629, 721, 300, 291, 1524, 11, 558, 13, 51208], 'temperature': 0.0, 'avg_logprob': -0.21269403654953528, 'compression_ratio': 1.7473118279569892, 'no_speech_prob': 0.07043032348155975}, {'id': 918, 'seek': 381132, 'start': 3828.2000000000003, 'end': 3830.36, 'text': ' As simple as that.', 'tokens': [51208, 1018, 2199, 382, 300, 13, 51316], 'temperature': 0.0, 'avg_logprob': -0.21269403654953528, 'compression_ratio': 1.7473118279569892, 'no_speech_prob': 0.07043032348155975}, {'id': 919, 'seek': 381132, 'start': 3830.36, 'end': 3831.52, 'text': ' You need to support unsigned.', 'tokens': [51316, 509, 643, 281, 1406, 2693, 16690, 13, 51374], 'temperature': 0.0, 'avg_logprob': -0.21269403654953528, 'compression_ratio': 1.7473118279569892, 'no_speech_prob': 0.07043032348155975}, {'id': 920, 'seek': 381132, 'start': 3831.52, 'end': 3836.44, 'text': ' All addresses are unsigned, correct.', 'tokens': [51374, 1057, 16862, 366, 2693, 16690, 11, 3006, 13, 51620], 'temperature': 0.0, 'avg_logprob': -0.21269403654953528, 'compression_ratio': 1.7473118279569892, 'no_speech_prob': 0.07043032348155975}, {'id': 921, 'seek': 381132, 'start': 3836.44, 'end': 3838.36, 'text': ' All addresses have to be unsigned.', 'tokens': [51620, 1057, 16862, 362, 281, 312, 2693, 16690, 13, 51716], 'temperature': 0.0, 'avg_logprob': -0.21269403654953528, 'compression_ratio': 1.7473118279569892, 'no_speech_prob': 0.07043032348155975}, {'id': 922, 'seek': 383836, 'start': 3838.36, 'end': 3839.36, 'text': ' Oh, okay.', 'tokens': [50364, 876, 11, 1392, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.29251741681780136, 'compression_ratio': 1.5205479452054795, 'no_speech_prob': 0.010277329944074154}, {'id': 923, 'seek': 383836, 'start': 3839.36, 'end': 3846.4, 'text': ' Let us say that, yeah, let us look at.', 'tokens': [50414, 961, 505, 584, 300, 11, 1338, 11, 718, 505, 574, 412, 13, 50766], 'temperature': 0.0, 'avg_logprob': -0.29251741681780136, 'compression_ratio': 1.5205479452054795, 'no_speech_prob': 0.010277329944074154}, {'id': 924, 'seek': 383836, 'start': 3846.4, 'end': 3851.6400000000003, 'text': ' See you see this unsigned only for bytes and half words, right.', 'tokens': [50766, 3008, 291, 536, 341, 2693, 16690, 787, 337, 36088, 293, 1922, 2283, 11, 558, 13, 51028], 'temperature': 0.0, 'avg_logprob': -0.29251741681780136, 'compression_ratio': 1.5205479452054795, 'no_speech_prob': 0.010277329944074154}, {'id': 925, 'seek': 383836, 'start': 3851.6400000000003, 'end': 3856.2400000000002, 'text': ' There is no unsigned for this fellow, right.', 'tokens': [51028, 821, 307, 572, 2693, 16690, 337, 341, 7177, 11, 558, 13, 51258], 'temperature': 0.0, 'avg_logprob': -0.29251741681780136, 'compression_ratio': 1.5205479452054795, 'no_speech_prob': 0.010277329944074154}, {'id': 926, 'seek': 383836, 'start': 3856.2400000000002, 'end': 3864.36, 'text': ' So when you take a byte and then load it into a register, right.', 'tokens': [51258, 407, 562, 291, 747, 257, 40846, 293, 550, 3677, 309, 666, 257, 7280, 11, 558, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.29251741681780136, 'compression_ratio': 1.5205479452054795, 'no_speech_prob': 0.010277329944074154}, {'id': 927, 'seek': 386436, 'start': 3864.36, 'end': 3870.08, 'text': ' So 1 byte 8 bit of information is being loaded in, right.', 'tokens': [50364, 407, 502, 40846, 1649, 857, 295, 1589, 307, 885, 13210, 294, 11, 558, 13, 50650], 'temperature': 0.0, 'avg_logprob': -0.18343294712535121, 'compression_ratio': 1.4605263157894737, 'no_speech_prob': 0.07816453278064728}, {'id': 928, 'seek': 386436, 'start': 3870.08, 'end': 3879.92, 'text': ' And if you say it is an ordinary load, then that most significant bit in that byte represents', 'tokens': [50650, 400, 498, 291, 584, 309, 307, 364, 10547, 3677, 11, 550, 300, 881, 4776, 857, 294, 300, 40846, 8855, 51142], 'temperature': 0.0, 'avg_logprob': -0.18343294712535121, 'compression_ratio': 1.4605263157894737, 'no_speech_prob': 0.07816453278064728}, {'id': 929, 'seek': 386436, 'start': 3879.92, 'end': 3887.76, 'text': ' a sign and the number is sign extended to your 32 bit register, right.', 'tokens': [51142, 257, 1465, 293, 264, 1230, 307, 1465, 10913, 281, 428, 8858, 857, 7280, 11, 558, 13, 51534], 'temperature': 0.0, 'avg_logprob': -0.18343294712535121, 'compression_ratio': 1.4605263157894737, 'no_speech_prob': 0.07816453278064728}, {'id': 930, 'seek': 388776, 'start': 3887.76, 'end': 3895.5600000000004, 'text': ' If it is an unsigned, then it is 0 extended in your register, got it.', 'tokens': [50364, 759, 309, 307, 364, 2693, 16690, 11, 550, 309, 307, 1958, 10913, 294, 428, 7280, 11, 658, 309, 13, 50754], 'temperature': 0.0, 'avg_logprob': -0.30043174743652346, 'compression_ratio': 1.4976525821596245, 'no_speech_prob': 0.08293691277503967}, {'id': 931, 'seek': 388776, 'start': 3895.5600000000004, 'end': 3899.0400000000004, 'text': ' How many of you understood that?', 'tokens': [50754, 1012, 867, 295, 291, 7320, 300, 30, 50928], 'temperature': 0.0, 'avg_logprob': -0.30043174743652346, 'compression_ratio': 1.4976525821596245, 'no_speech_prob': 0.08293691277503967}, {'id': 932, 'seek': 388776, 'start': 3899.0400000000004, 'end': 3900.0400000000004, 'text': ' Yeah.', 'tokens': [50928, 865, 13, 50978], 'temperature': 0.0, 'avg_logprob': -0.30043174743652346, 'compression_ratio': 1.4976525821596245, 'no_speech_prob': 0.08293691277503967}, {'id': 933, 'seek': 388776, 'start': 3900.0400000000004, 'end': 3903.4, 'text': ' Any trouble in that?', 'tokens': [50978, 2639, 5253, 294, 300, 30, 51146], 'temperature': 0.0, 'avg_logprob': -0.30043174743652346, 'compression_ratio': 1.4976525821596245, 'no_speech_prob': 0.08293691277503967}, {'id': 934, 'seek': 388776, 'start': 3903.4, 'end': 3905.5200000000004, 'text': ' Okay.', 'tokens': [51146, 1033, 13, 51252], 'temperature': 0.0, 'avg_logprob': -0.30043174743652346, 'compression_ratio': 1.4976525821596245, 'no_speech_prob': 0.08293691277503967}, {'id': 935, 'seek': 388776, 'start': 3905.5200000000004, 'end': 3912.2400000000002, 'text': ' So the thing is that when you load a value, let us say an 8 bit value into a 32 bit register,', 'tokens': [51252, 407, 264, 551, 307, 300, 562, 291, 3677, 257, 2158, 11, 718, 505, 584, 364, 1649, 857, 2158, 666, 257, 8858, 857, 7280, 11, 51588], 'temperature': 0.0, 'avg_logprob': -0.30043174743652346, 'compression_ratio': 1.4976525821596245, 'no_speech_prob': 0.08293691277503967}, {'id': 936, 'seek': 388776, 'start': 3912.2400000000002, 'end': 3913.88, 'text': ' the 8 bits are copied as it is.', 'tokens': [51588, 264, 1649, 9239, 366, 25365, 382, 309, 307, 13, 51670], 'temperature': 0.0, 'avg_logprob': -0.30043174743652346, 'compression_ratio': 1.4976525821596245, 'no_speech_prob': 0.08293691277503967}, {'id': 937, 'seek': 388776, 'start': 3913.88, 'end': 3914.88, 'text': ' There is no problem.', 'tokens': [51670, 821, 307, 572, 1154, 13, 51720], 'temperature': 0.0, 'avg_logprob': -0.30043174743652346, 'compression_ratio': 1.4976525821596245, 'no_speech_prob': 0.08293691277503967}, {'id': 938, 'seek': 388776, 'start': 3914.88, 'end': 3917.5600000000004, 'text': ' Is this number positive or negative?', 'tokens': [51720, 1119, 341, 1230, 3353, 420, 3671, 30, 51854], 'temperature': 0.0, 'avg_logprob': -0.30043174743652346, 'compression_ratio': 1.4976525821596245, 'no_speech_prob': 0.08293691277503967}, {'id': 939, 'seek': 391756, 'start': 3917.56, 'end': 3923.52, 'text': ' Because you are talking about an 8 bit quantity to define whether the number is positive or', 'tokens': [50364, 1436, 291, 366, 1417, 466, 364, 1649, 857, 11275, 281, 6964, 1968, 264, 1230, 307, 3353, 420, 50662], 'temperature': 0.0, 'avg_logprob': -0.16237920244163442, 'compression_ratio': 1.6612903225806452, 'no_speech_prob': 0.0011317837052047253}, {'id': 940, 'seek': 391756, 'start': 3923.52, 'end': 3928.16, 'text': ' negative, you should look at the most significant bit in that 8 bits, correct.', 'tokens': [50662, 3671, 11, 291, 820, 574, 412, 264, 881, 4776, 857, 294, 300, 1649, 9239, 11, 3006, 13, 50894], 'temperature': 0.0, 'avg_logprob': -0.16237920244163442, 'compression_ratio': 1.6612903225806452, 'no_speech_prob': 0.0011317837052047253}, {'id': 941, 'seek': 391756, 'start': 3928.16, 'end': 3933.2799999999997, 'text': ' If that is 1, right, then it is a negative number.', 'tokens': [50894, 759, 300, 307, 502, 11, 558, 11, 550, 309, 307, 257, 3671, 1230, 13, 51150], 'temperature': 0.0, 'avg_logprob': -0.16237920244163442, 'compression_ratio': 1.6612903225806452, 'no_speech_prob': 0.0011317837052047253}, {'id': 942, 'seek': 391756, 'start': 3933.2799999999997, 'end': 3938.44, 'text': ' Now if you copy it into a 32 bit register, only copying those 8 bits and keeping the', 'tokens': [51150, 823, 498, 291, 5055, 309, 666, 257, 8858, 857, 7280, 11, 787, 27976, 729, 1649, 9239, 293, 5145, 264, 51408], 'temperature': 0.0, 'avg_logprob': -0.16237920244163442, 'compression_ratio': 1.6612903225806452, 'no_speech_prob': 0.0011317837052047253}, {'id': 943, 'seek': 391756, 'start': 3938.44, 'end': 3944.7599999999998, 'text': ' remaining 24 bits as 0, then what happens to the number?', 'tokens': [51408, 8877, 4022, 9239, 382, 1958, 11, 550, 437, 2314, 281, 264, 1230, 30, 51724], 'temperature': 0.0, 'avg_logprob': -0.16237920244163442, 'compression_ratio': 1.6612903225806452, 'no_speech_prob': 0.0011317837052047253}, {'id': 944, 'seek': 391756, 'start': 3944.7599999999998, 'end': 3945.7599999999998, 'text': ' It has become positive.', 'tokens': [51724, 467, 575, 1813, 3353, 13, 51774], 'temperature': 0.0, 'avg_logprob': -0.16237920244163442, 'compression_ratio': 1.6612903225806452, 'no_speech_prob': 0.0011317837052047253}, {'id': 945, 'seek': 391756, 'start': 3945.7599999999998, 'end': 3946.7599999999998, 'text': ' Is that what you wanted?', 'tokens': [51774, 1119, 300, 437, 291, 1415, 30, 51824], 'temperature': 0.0, 'avg_logprob': -0.16237920244163442, 'compression_ratio': 1.6612903225806452, 'no_speech_prob': 0.0011317837052047253}, {'id': 946, 'seek': 394676, 'start': 3946.76, 'end': 3949.84, 'text': ' Probably not, right.', 'tokens': [50364, 9210, 406, 11, 558, 13, 50518], 'temperature': 0.0, 'avg_logprob': -0.22948230581080659, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.009097201749682426}, {'id': 947, 'seek': 394676, 'start': 3949.84, 'end': 3957.6200000000003, 'text': ' So if you want all of the leading bits to be 0s, then you should load it as unsigned.', 'tokens': [50518, 407, 498, 291, 528, 439, 295, 264, 5775, 9239, 281, 312, 1958, 82, 11, 550, 291, 820, 3677, 309, 382, 2693, 16690, 13, 50907], 'temperature': 0.0, 'avg_logprob': -0.22948230581080659, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.009097201749682426}, {'id': 948, 'seek': 394676, 'start': 3957.6200000000003, 'end': 3961.5600000000004, 'text': ' If you want all of those things to be 0 or 1 depending on whether the original number', 'tokens': [50907, 759, 291, 528, 439, 295, 729, 721, 281, 312, 1958, 420, 502, 5413, 322, 1968, 264, 3380, 1230, 51104], 'temperature': 0.0, 'avg_logprob': -0.22948230581080659, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.009097201749682426}, {'id': 949, 'seek': 394676, 'start': 3961.5600000000004, 'end': 3967.6800000000003, 'text': ' was positive or negative, then you should load it as byte, okay.', 'tokens': [51104, 390, 3353, 420, 3671, 11, 550, 291, 820, 3677, 309, 382, 40846, 11, 1392, 13, 51410], 'temperature': 0.0, 'avg_logprob': -0.22948230581080659, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.009097201749682426}, {'id': 950, 'seek': 394676, 'start': 3967.6800000000003, 'end': 3970.6800000000003, 'text': ' That is the difference, right.', 'tokens': [51410, 663, 307, 264, 2649, 11, 558, 13, 51560], 'temperature': 0.0, 'avg_logprob': -0.22948230581080659, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.009097201749682426}, {'id': 951, 'seek': 394676, 'start': 3970.6800000000003, 'end': 3971.6800000000003, 'text': ' Comfortable?', 'tokens': [51560, 2432, 10124, 30, 51610], 'temperature': 0.0, 'avg_logprob': -0.22948230581080659, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.009097201749682426}, {'id': 952, 'seek': 394676, 'start': 3971.6800000000003, 'end': 3972.6800000000003, 'text': ' Move forward.', 'tokens': [51610, 10475, 2128, 13, 51660], 'temperature': 0.0, 'avg_logprob': -0.22948230581080659, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.009097201749682426}, {'id': 953, 'seek': 394676, 'start': 3972.6800000000003, 'end': 3973.6800000000003, 'text': ' Okay.', 'tokens': [51660, 1033, 13, 51710], 'temperature': 0.0, 'avg_logprob': -0.22948230581080659, 'compression_ratio': 1.6294416243654823, 'no_speech_prob': 0.009097201749682426}, {'id': 954, 'seek': 397368, 'start': 3974.64, 'end': 3978.7999999999997, 'text': ' Again, I have listed some of them and I have given some examples, but if you go through', 'tokens': [50412, 3764, 11, 286, 362, 10052, 512, 295, 552, 293, 286, 362, 2212, 512, 5110, 11, 457, 498, 291, 352, 807, 50620], 'temperature': 0.0, 'avg_logprob': -0.2250899921764027, 'compression_ratio': 1.6978723404255318, 'no_speech_prob': 0.26642289757728577}, {'id': 955, 'seek': 397368, 'start': 3978.7999999999997, 'end': 3979.7999999999997, 'text': ' that you will find out.', 'tokens': [50620, 300, 291, 486, 915, 484, 13, 50670], 'temperature': 0.0, 'avg_logprob': -0.2250899921764027, 'compression_ratio': 1.6978723404255318, 'no_speech_prob': 0.26642289757728577}, {'id': 956, 'seek': 397368, 'start': 3979.7999999999997, 'end': 3982.96, 'text': ' For example, this is a shift write instruction.', 'tokens': [50670, 1171, 1365, 11, 341, 307, 257, 5513, 2464, 10951, 13, 50828], 'temperature': 0.0, 'avg_logprob': -0.2250899921764027, 'compression_ratio': 1.6978723404255318, 'no_speech_prob': 0.26642289757728577}, {'id': 957, 'seek': 397368, 'start': 3982.96, 'end': 3988.68, 'text': ' So the contents of x2 is being shifted right, okay, sorry, I am sorry, right is that way,', 'tokens': [50828, 407, 264, 15768, 295, 2031, 17, 307, 885, 18892, 558, 11, 1392, 11, 2597, 11, 286, 669, 2597, 11, 558, 307, 300, 636, 11, 51114], 'temperature': 0.0, 'avg_logprob': -0.2250899921764027, 'compression_ratio': 1.6978723404255318, 'no_speech_prob': 0.26642289757728577}, {'id': 958, 'seek': 397368, 'start': 3988.68, 'end': 3995.72, 'text': ' shifted right, okay, and 4 bits are thrown out and in that place, 0s are being introduced,', 'tokens': [51114, 18892, 558, 11, 1392, 11, 293, 1017, 9239, 366, 11732, 484, 293, 294, 300, 1081, 11, 1958, 82, 366, 885, 7268, 11, 51466], 'temperature': 0.0, 'avg_logprob': -0.2250899921764027, 'compression_ratio': 1.6978723404255318, 'no_speech_prob': 0.26642289757728577}, {'id': 959, 'seek': 397368, 'start': 3995.72, 'end': 3996.72, 'text': ' okay.', 'tokens': [51466, 1392, 13, 51516], 'temperature': 0.0, 'avg_logprob': -0.2250899921764027, 'compression_ratio': 1.6978723404255318, 'no_speech_prob': 0.26642289757728577}, {'id': 960, 'seek': 397368, 'start': 3996.72, 'end': 3999.66, 'text': ' That is essentially what is being specified in here.', 'tokens': [51516, 663, 307, 4476, 437, 307, 885, 22206, 294, 510, 13, 51663], 'temperature': 0.0, 'avg_logprob': -0.2250899921764027, 'compression_ratio': 1.6978723404255318, 'no_speech_prob': 0.26642289757728577}, {'id': 961, 'seek': 399966, 'start': 3999.66, 'end': 4008.8999999999996, 'text': ' You can see that you know bit 4 to 31 are kept, right, and 4 bits are being added, blah,', 'tokens': [50364, 509, 393, 536, 300, 291, 458, 857, 1017, 281, 10353, 366, 4305, 11, 558, 11, 293, 1017, 9239, 366, 885, 3869, 11, 12288, 11, 50826], 'temperature': 0.0, 'avg_logprob': -0.28042047479179466, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.06123846769332886}, {'id': 962, 'seek': 399966, 'start': 4008.8999999999996, 'end': 4009.8999999999996, 'text': ' blah, blah.', 'tokens': [50826, 12288, 11, 12288, 13, 50876], 'temperature': 0.0, 'avg_logprob': -0.28042047479179466, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.06123846769332886}, {'id': 963, 'seek': 399966, 'start': 4009.8999999999996, 'end': 4017.22, 'text': ' Right, that this is a shift, right, okay, fine.', 'tokens': [50876, 1779, 11, 300, 341, 307, 257, 5513, 11, 558, 11, 1392, 11, 2489, 13, 51242], 'temperature': 0.0, 'avg_logprob': -0.28042047479179466, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.06123846769332886}, {'id': 964, 'seek': 399966, 'start': 4017.22, 'end': 4022.22, 'text': ' Let us move on to the next set of instructions which are the control transfer instructions,', 'tokens': [51242, 961, 505, 1286, 322, 281, 264, 958, 992, 295, 9415, 597, 366, 264, 1969, 5003, 9415, 11, 51492], 'temperature': 0.0, 'avg_logprob': -0.28042047479179466, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.06123846769332886}, {'id': 965, 'seek': 399966, 'start': 4022.22, 'end': 4023.22, 'text': ' right.', 'tokens': [51492, 558, 13, 51542], 'temperature': 0.0, 'avg_logprob': -0.28042047479179466, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.06123846769332886}, {'id': 966, 'seek': 399966, 'start': 4023.22, 'end': 4028.66, 'text': ' Control transfer instructions are required to implement jumps, okay, conditional jumps,', 'tokens': [51542, 12912, 5003, 9415, 366, 4739, 281, 4445, 16704, 11, 1392, 11, 27708, 16704, 11, 51814], 'temperature': 0.0, 'avg_logprob': -0.28042047479179466, 'compression_ratio': 1.7179487179487178, 'no_speech_prob': 0.06123846769332886}, {'id': 967, 'seek': 402866, 'start': 4028.66, 'end': 4032.7, 'text': ' error jumps, okay, procedure calls and so on, okay.', 'tokens': [50364, 6713, 16704, 11, 1392, 11, 10747, 5498, 293, 370, 322, 11, 1392, 13, 50566], 'temperature': 0.0, 'avg_logprob': -0.17471529986407305, 'compression_ratio': 1.8063063063063063, 'no_speech_prob': 0.009161487221717834}, {'id': 968, 'seek': 402866, 'start': 4032.7, 'end': 4037.7999999999997, 'text': ' So typically these are branch equal, branch not equal, branch less than, greater than,', 'tokens': [50566, 407, 5850, 613, 366, 9819, 2681, 11, 9819, 406, 2681, 11, 9819, 1570, 813, 11, 5044, 813, 11, 50821], 'temperature': 0.0, 'avg_logprob': -0.17471529986407305, 'compression_ratio': 1.8063063063063063, 'no_speech_prob': 0.009161487221717834}, {'id': 969, 'seek': 402866, 'start': 4037.7999999999997, 'end': 4043.14, 'text': ' blah, blah, blah, and the meaning of this is that for example, if I write branch less', 'tokens': [50821, 12288, 11, 12288, 11, 12288, 11, 293, 264, 3620, 295, 341, 307, 300, 337, 1365, 11, 498, 286, 2464, 9819, 1570, 51088], 'temperature': 0.0, 'avg_logprob': -0.17471529986407305, 'compression_ratio': 1.8063063063063063, 'no_speech_prob': 0.009161487221717834}, {'id': 970, 'seek': 402866, 'start': 4043.14, 'end': 4050.74, 'text': ' than x2, x3 immediate, then if x2 is less than x3, then I have to branch.', 'tokens': [51088, 813, 2031, 17, 11, 2031, 18, 11629, 11, 550, 498, 2031, 17, 307, 1570, 813, 2031, 18, 11, 550, 286, 362, 281, 9819, 13, 51468], 'temperature': 0.0, 'avg_logprob': -0.17471529986407305, 'compression_ratio': 1.8063063063063063, 'no_speech_prob': 0.009161487221717834}, {'id': 971, 'seek': 402866, 'start': 4050.74, 'end': 4055.58, 'text': ' At that point in time, a program counter has to be my program counter value plus this immediate', 'tokens': [51468, 1711, 300, 935, 294, 565, 11, 257, 1461, 5682, 575, 281, 312, 452, 1461, 5682, 2158, 1804, 341, 11629, 51710], 'temperature': 0.0, 'avg_logprob': -0.17471529986407305, 'compression_ratio': 1.8063063063063063, 'no_speech_prob': 0.009161487221717834}, {'id': 972, 'seek': 402866, 'start': 4055.58, 'end': 4056.58, 'text': ' value.', 'tokens': [51710, 2158, 13, 51760], 'temperature': 0.0, 'avg_logprob': -0.17471529986407305, 'compression_ratio': 1.8063063063063063, 'no_speech_prob': 0.009161487221717834}, {'id': 973, 'seek': 405658, 'start': 4056.58, 'end': 4060.94, 'text': ' But typically this program counter value plus 4 plus immediate value.', 'tokens': [50364, 583, 5850, 341, 1461, 5682, 2158, 1804, 1017, 1804, 11629, 2158, 13, 50582], 'temperature': 0.0, 'avg_logprob': -0.1992208224076491, 'compression_ratio': 1.9437229437229437, 'no_speech_prob': 0.14394892752170563}, {'id': 974, 'seek': 405658, 'start': 4060.94, 'end': 4062.7, 'text': ' Why is it?', 'tokens': [50582, 1545, 307, 309, 30, 50670], 'temperature': 0.0, 'avg_logprob': -0.1992208224076491, 'compression_ratio': 1.9437229437229437, 'no_speech_prob': 0.14394892752170563}, {'id': 975, 'seek': 405658, 'start': 4062.7, 'end': 4066.98, 'text': ' Because every time as soon as the instruction is fetched, the program counter is going to', 'tokens': [50670, 1436, 633, 565, 382, 2321, 382, 264, 10951, 307, 23673, 292, 11, 264, 1461, 5682, 307, 516, 281, 50884], 'temperature': 0.0, 'avg_logprob': -0.1992208224076491, 'compression_ratio': 1.9437229437229437, 'no_speech_prob': 0.14394892752170563}, {'id': 976, 'seek': 405658, 'start': 4066.98, 'end': 4069.5, 'text': ' be incremented to the next instruction.', 'tokens': [50884, 312, 1946, 14684, 281, 264, 958, 10951, 13, 51010], 'temperature': 0.0, 'avg_logprob': -0.1992208224076491, 'compression_ratio': 1.9437229437229437, 'no_speech_prob': 0.14394892752170563}, {'id': 977, 'seek': 405658, 'start': 4069.5, 'end': 4073.34, 'text': ' The next instruction is always 4 by, each instruction is 4 by its long.', 'tokens': [51010, 440, 958, 10951, 307, 1009, 1017, 538, 11, 1184, 10951, 307, 1017, 538, 1080, 938, 13, 51202], 'temperature': 0.0, 'avg_logprob': -0.1992208224076491, 'compression_ratio': 1.9437229437229437, 'no_speech_prob': 0.14394892752170563}, {'id': 978, 'seek': 405658, 'start': 4073.34, 'end': 4077.74, 'text': ' So the next instruction will be 4 locations away from the current location.', 'tokens': [51202, 407, 264, 958, 10951, 486, 312, 1017, 9253, 1314, 490, 264, 2190, 4914, 13, 51422], 'temperature': 0.0, 'avg_logprob': -0.1992208224076491, 'compression_ratio': 1.9437229437229437, 'no_speech_prob': 0.14394892752170563}, {'id': 979, 'seek': 405658, 'start': 4077.74, 'end': 4082.42, 'text': ' Therefore it is PC plus 4 which is the next instruction plus that immediate constant value', 'tokens': [51422, 7504, 309, 307, 6465, 1804, 1017, 597, 307, 264, 958, 10951, 1804, 300, 11629, 5754, 2158, 51656], 'temperature': 0.0, 'avg_logprob': -0.1992208224076491, 'compression_ratio': 1.9437229437229437, 'no_speech_prob': 0.14394892752170563}, {'id': 980, 'seek': 408242, 'start': 4082.5, 'end': 4086.78, 'text': ' which is being added that tells you the new program counter value.', 'tokens': [50368, 597, 307, 885, 3869, 300, 5112, 291, 264, 777, 1461, 5682, 2158, 13, 50582], 'temperature': 0.0, 'avg_logprob': -0.22412918353902883, 'compression_ratio': 1.6859903381642511, 'no_speech_prob': 0.23643958568572998}, {'id': 981, 'seek': 408242, 'start': 4086.78, 'end': 4089.62, 'text': ' And that value is taken only if this condition is true.', 'tokens': [50582, 400, 300, 2158, 307, 2726, 787, 498, 341, 4188, 307, 2074, 13, 50724], 'temperature': 0.0, 'avg_logprob': -0.22412918353902883, 'compression_ratio': 1.6859903381642511, 'no_speech_prob': 0.23643958568572998}, {'id': 982, 'seek': 408242, 'start': 4089.62, 'end': 4094.1, 'text': ' If the condition is not true, it will only be PC plus 4.', 'tokens': [50724, 759, 264, 4188, 307, 406, 2074, 11, 309, 486, 787, 312, 6465, 1804, 1017, 13, 50948], 'temperature': 0.0, 'avg_logprob': -0.22412918353902883, 'compression_ratio': 1.6859903381642511, 'no_speech_prob': 0.23643958568572998}, {'id': 983, 'seek': 408242, 'start': 4094.1, 'end': 4096.5, 'text': ' That is a conditional branch instruction.', 'tokens': [50948, 663, 307, 257, 27708, 9819, 10951, 13, 51068], 'temperature': 0.0, 'avg_logprob': -0.22412918353902883, 'compression_ratio': 1.6859903381642511, 'no_speech_prob': 0.23643958568572998}, {'id': 984, 'seek': 408242, 'start': 4096.5, 'end': 4099.56, 'text': ' This instruction is a jump and link instruction.', 'tokens': [51068, 639, 10951, 307, 257, 3012, 293, 2113, 10951, 13, 51221], 'temperature': 0.0, 'avg_logprob': -0.22412918353902883, 'compression_ratio': 1.6859903381642511, 'no_speech_prob': 0.23643958568572998}, {'id': 985, 'seek': 408242, 'start': 4099.56, 'end': 4106.32, 'text': ' This is meant for, sorry somebody said something, yeah, function calls, right.', 'tokens': [51221, 639, 307, 4140, 337, 11, 2597, 2618, 848, 746, 11, 1338, 11, 2445, 5498, 11, 558, 13, 51559], 'temperature': 0.0, 'avg_logprob': -0.22412918353902883, 'compression_ratio': 1.6859903381642511, 'no_speech_prob': 0.23643958568572998}, {'id': 986, 'seek': 410632, 'start': 4106.32, 'end': 4113.639999999999, 'text': ' So RISC-V supports two jump and link instruction, one called jump and link, other one called', 'tokens': [50364, 407, 497, 2343, 34, 12, 53, 9346, 732, 3012, 293, 2113, 10951, 11, 472, 1219, 3012, 293, 2113, 11, 661, 472, 1219, 50730], 'temperature': 0.0, 'avg_logprob': -0.1825385846589741, 'compression_ratio': 2.027906976744186, 'no_speech_prob': 0.13769316673278809}, {'id': 987, 'seek': 410632, 'start': 4113.639999999999, 'end': 4114.88, 'text': ' jump and link register.', 'tokens': [50730, 3012, 293, 2113, 7280, 13, 50792], 'temperature': 0.0, 'avg_logprob': -0.1825385846589741, 'compression_ratio': 2.027906976744186, 'no_speech_prob': 0.13769316673278809}, {'id': 988, 'seek': 410632, 'start': 4114.88, 'end': 4117.92, 'text': ' They have slightly different semantics.', 'tokens': [50792, 814, 362, 4748, 819, 4361, 45298, 13, 50944], 'temperature': 0.0, 'avg_logprob': -0.1825385846589741, 'compression_ratio': 2.027906976744186, 'no_speech_prob': 0.13769316673278809}, {'id': 989, 'seek': 410632, 'start': 4117.92, 'end': 4119.799999999999, 'text': ' So look at them carefully.', 'tokens': [50944, 407, 574, 412, 552, 7500, 13, 51038], 'temperature': 0.0, 'avg_logprob': -0.1825385846589741, 'compression_ratio': 2.027906976744186, 'no_speech_prob': 0.13769316673278809}, {'id': 990, 'seek': 410632, 'start': 4119.799999999999, 'end': 4125.719999999999, 'text': ' If you are using the jump and link instruction, you are going to jump to the location which', 'tokens': [51038, 759, 291, 366, 1228, 264, 3012, 293, 2113, 10951, 11, 291, 366, 516, 281, 3012, 281, 264, 4914, 597, 51334], 'temperature': 0.0, 'avg_logprob': -0.1825385846589741, 'compression_ratio': 2.027906976744186, 'no_speech_prob': 0.13769316673278809}, {'id': 991, 'seek': 410632, 'start': 4125.719999999999, 'end': 4127.44, 'text': ' is PC plus immediate.', 'tokens': [51334, 307, 6465, 1804, 11629, 13, 51420], 'temperature': 0.0, 'avg_logprob': -0.1825385846589741, 'compression_ratio': 2.027906976744186, 'no_speech_prob': 0.13769316673278809}, {'id': 992, 'seek': 410632, 'start': 4127.44, 'end': 4130.96, 'text': ' That is where the called function is, right.', 'tokens': [51420, 663, 307, 689, 264, 1219, 2445, 307, 11, 558, 13, 51596], 'temperature': 0.0, 'avg_logprob': -0.1825385846589741, 'compression_ratio': 2.027906976744186, 'no_speech_prob': 0.13769316673278809}, {'id': 993, 'seek': 410632, 'start': 4130.96, 'end': 4134.08, 'text': ' The called function is in PC plus immediate location.', 'tokens': [51596, 440, 1219, 2445, 307, 294, 6465, 1804, 11629, 4914, 13, 51752], 'temperature': 0.0, 'avg_logprob': -0.1825385846589741, 'compression_ratio': 2.027906976744186, 'no_speech_prob': 0.13769316673278809}, {'id': 994, 'seek': 410632, 'start': 4134.08, 'end': 4135.9, 'text': ' That is where you are going to jump to.', 'tokens': [51752, 663, 307, 689, 291, 366, 516, 281, 3012, 281, 13, 51843], 'temperature': 0.0, 'avg_logprob': -0.1825385846589741, 'compression_ratio': 2.027906976744186, 'no_speech_prob': 0.13769316673278809}, {'id': 995, 'seek': 413590, 'start': 4135.9, 'end': 4143.08, 'text': ' But before you jump, you save the address of the next instruction.', 'tokens': [50364, 583, 949, 291, 3012, 11, 291, 3155, 264, 2985, 295, 264, 958, 10951, 13, 50723], 'temperature': 0.0, 'avg_logprob': -0.19590087164015996, 'compression_ratio': 1.6479591836734695, 'no_speech_prob': 0.009561415761709213}, {'id': 996, 'seek': 413590, 'start': 4143.08, 'end': 4144.08, 'text': ' What is that address?', 'tokens': [50723, 708, 307, 300, 2985, 30, 50773], 'temperature': 0.0, 'avg_logprob': -0.19590087164015996, 'compression_ratio': 1.6479591836734695, 'no_speech_prob': 0.009561415761709213}, {'id': 997, 'seek': 413590, 'start': 4144.08, 'end': 4147.58, 'text': ' It is a return address, right.', 'tokens': [50773, 467, 307, 257, 2736, 2985, 11, 558, 13, 50948], 'temperature': 0.0, 'avg_logprob': -0.19590087164015996, 'compression_ratio': 1.6479591836734695, 'no_speech_prob': 0.009561415761709213}, {'id': 998, 'seek': 413590, 'start': 4147.58, 'end': 4150.62, 'text': ' After the function call, you are supposed to come back there.', 'tokens': [50948, 2381, 264, 2445, 818, 11, 291, 366, 3442, 281, 808, 646, 456, 13, 51100], 'temperature': 0.0, 'avg_logprob': -0.19590087164015996, 'compression_ratio': 1.6479591836734695, 'no_speech_prob': 0.009561415761709213}, {'id': 999, 'seek': 413590, 'start': 4150.62, 'end': 4154.639999999999, 'text': ' That you save it in this register, okay.', 'tokens': [51100, 663, 291, 3155, 309, 294, 341, 7280, 11, 1392, 13, 51301], 'temperature': 0.0, 'avg_logprob': -0.19590087164015996, 'compression_ratio': 1.6479591836734695, 'no_speech_prob': 0.009561415761709213}, {'id': 1000, 'seek': 413590, 'start': 4154.639999999999, 'end': 4161.66, 'text': ' So you save the return address in this particular register and you jump to PC plus 4 plus immediate.', 'tokens': [51301, 407, 291, 3155, 264, 2736, 2985, 294, 341, 1729, 7280, 293, 291, 3012, 281, 6465, 1804, 1017, 1804, 11629, 13, 51652], 'temperature': 0.0, 'avg_logprob': -0.19590087164015996, 'compression_ratio': 1.6479591836734695, 'no_speech_prob': 0.009561415761709213}, {'id': 1001, 'seek': 416166, 'start': 4161.66, 'end': 4166.34, 'text': ' Sorry, actually here it says PC plus immediate to that location, right.', 'tokens': [50364, 4919, 11, 767, 510, 309, 1619, 6465, 1804, 11629, 281, 300, 4914, 11, 558, 13, 50598], 'temperature': 0.0, 'avg_logprob': -0.24035032999884223, 'compression_ratio': 1.7013574660633484, 'no_speech_prob': 0.1407545804977417}, {'id': 1002, 'seek': 416166, 'start': 4166.34, 'end': 4168.46, 'text': ' That is really very good.', 'tokens': [50598, 663, 307, 534, 588, 665, 13, 50704], 'temperature': 0.0, 'avg_logprob': -0.24035032999884223, 'compression_ratio': 1.7013574660633484, 'no_speech_prob': 0.1407545804977417}, {'id': 1003, 'seek': 416166, 'start': 4168.46, 'end': 4176.139999999999, 'text': ' If it is a jump and link register instruction, right, then it is actually X3 plus immediate,', 'tokens': [50704, 759, 309, 307, 257, 3012, 293, 2113, 7280, 10951, 11, 558, 11, 550, 309, 307, 767, 1783, 18, 1804, 11629, 11, 51088], 'temperature': 0.0, 'avg_logprob': -0.24035032999884223, 'compression_ratio': 1.7013574660633484, 'no_speech_prob': 0.1407545804977417}, {'id': 1004, 'seek': 416166, 'start': 4176.139999999999, 'end': 4180.76, 'text': ' okay, where X3 is one of your registers.', 'tokens': [51088, 1392, 11, 689, 1783, 18, 307, 472, 295, 428, 38351, 13, 51319], 'temperature': 0.0, 'avg_logprob': -0.24035032999884223, 'compression_ratio': 1.7013574660633484, 'no_speech_prob': 0.1407545804977417}, {'id': 1005, 'seek': 416166, 'start': 4180.76, 'end': 4183.3, 'text': ' That is your location to which you are going to jump to.', 'tokens': [51319, 663, 307, 428, 4914, 281, 597, 291, 366, 516, 281, 3012, 281, 13, 51446], 'temperature': 0.0, 'avg_logprob': -0.24035032999884223, 'compression_ratio': 1.7013574660633484, 'no_speech_prob': 0.1407545804977417}, {'id': 1006, 'seek': 416166, 'start': 4183.3, 'end': 4188.22, 'text': ' That means that the function which is being called could be far away and its address is', 'tokens': [51446, 663, 1355, 300, 264, 2445, 597, 307, 885, 1219, 727, 312, 1400, 1314, 293, 1080, 2985, 307, 51692], 'temperature': 0.0, 'avg_logprob': -0.24035032999884223, 'compression_ratio': 1.7013574660633484, 'no_speech_prob': 0.1407545804977417}, {'id': 1007, 'seek': 418822, 'start': 4188.22, 'end': 4194.06, 'text': ' available in X3 register, okay, plus an offset which is an immediate constant, okay.', 'tokens': [50364, 2435, 294, 1783, 18, 7280, 11, 1392, 11, 1804, 364, 18687, 597, 307, 364, 11629, 5754, 11, 1392, 13, 50656], 'temperature': 0.0, 'avg_logprob': -0.24665972081626333, 'compression_ratio': 1.5851063829787233, 'no_speech_prob': 0.3432535231113434}, {'id': 1008, 'seek': 418822, 'start': 4194.06, 'end': 4197.46, 'text': ' That is really what it is.', 'tokens': [50656, 663, 307, 534, 437, 309, 307, 13, 50826], 'temperature': 0.0, 'avg_logprob': -0.24665972081626333, 'compression_ratio': 1.5851063829787233, 'no_speech_prob': 0.3432535231113434}, {'id': 1009, 'seek': 418822, 'start': 4197.46, 'end': 4204.26, 'text': ' And of course, as before PC plus 4 is which is the return address is saved in X2 register,', 'tokens': [50826, 400, 295, 1164, 11, 382, 949, 6465, 1804, 1017, 307, 597, 307, 264, 2736, 2985, 307, 6624, 294, 1783, 17, 7280, 11, 51166], 'temperature': 0.0, 'avg_logprob': -0.24665972081626333, 'compression_ratio': 1.5851063829787233, 'no_speech_prob': 0.3432535231113434}, {'id': 1010, 'seek': 418822, 'start': 4204.26, 'end': 4205.26, 'text': ' okay.', 'tokens': [51166, 1392, 13, 51216], 'temperature': 0.0, 'avg_logprob': -0.24665972081626333, 'compression_ratio': 1.5851063829787233, 'no_speech_prob': 0.3432535231113434}, {'id': 1011, 'seek': 418822, 'start': 4205.26, 'end': 4213.780000000001, 'text': ' This part of it is essentially to say that the least significant bit is reset to 0, okay.', 'tokens': [51216, 639, 644, 295, 309, 307, 4476, 281, 584, 300, 264, 1935, 4776, 857, 307, 14322, 281, 1958, 11, 1392, 13, 51642], 'temperature': 0.0, 'avg_logprob': -0.24665972081626333, 'compression_ratio': 1.5851063829787233, 'no_speech_prob': 0.3432535231113434}, {'id': 1012, 'seek': 421378, 'start': 4213.78, 'end': 4220.78, 'text': ' It is because in RISC-V, each instruction can be minimally 2 bytes, but most of the', 'tokens': [50364, 467, 307, 570, 294, 497, 2343, 34, 12, 53, 11, 1184, 10951, 393, 312, 4464, 379, 568, 36088, 11, 457, 881, 295, 264, 50714], 'temperature': 0.0, 'avg_logprob': -0.2892017131898461, 'compression_ratio': 1.4887640449438202, 'no_speech_prob': 0.1355617791414261}, {'id': 1013, 'seek': 421378, 'start': 4220.78, 'end': 4223.0599999999995, 'text': ' time it is 4 bytes, okay.', 'tokens': [50714, 565, 309, 307, 1017, 36088, 11, 1392, 13, 50828], 'temperature': 0.0, 'avg_logprob': -0.2892017131898461, 'compression_ratio': 1.4887640449438202, 'no_speech_prob': 0.1355617791414261}, {'id': 1014, 'seek': 421378, 'start': 4223.0599999999995, 'end': 4226.3, 'text': ' So it always sets the least significant bit to 0.', 'tokens': [50828, 407, 309, 1009, 6352, 264, 1935, 4776, 857, 281, 1958, 13, 50990], 'temperature': 0.0, 'avg_logprob': -0.2892017131898461, 'compression_ratio': 1.4887640449438202, 'no_speech_prob': 0.1355617791414261}, {'id': 1015, 'seek': 421378, 'start': 4226.3, 'end': 4230.98, 'text': ' Does that make sense?', 'tokens': [50990, 4402, 300, 652, 2020, 30, 51224], 'temperature': 0.0, 'avg_logprob': -0.2892017131898461, 'compression_ratio': 1.4887640449438202, 'no_speech_prob': 0.1355617791414261}, {'id': 1016, 'seek': 421378, 'start': 4230.98, 'end': 4232.78, 'text': ' Why?', 'tokens': [51224, 1545, 30, 51314], 'temperature': 0.0, 'avg_logprob': -0.2892017131898461, 'compression_ratio': 1.4887640449438202, 'no_speech_prob': 0.1355617791414261}, {'id': 1017, 'seek': 421378, 'start': 4232.78, 'end': 4241.9, 'text': ' If each instruction is 4 bytes long, what do you expect the last 2 bits to be?', 'tokens': [51314, 759, 1184, 10951, 307, 1017, 36088, 938, 11, 437, 360, 291, 2066, 264, 1036, 568, 9239, 281, 312, 30, 51770], 'temperature': 0.0, 'avg_logprob': -0.2892017131898461, 'compression_ratio': 1.4887640449438202, 'no_speech_prob': 0.1355617791414261}, {'id': 1018, 'seek': 424190, 'start': 4241.9, 'end': 4244.5199999999995, 'text': ' Each instruction is 4 bytes long.', 'tokens': [50364, 6947, 10951, 307, 1017, 36088, 938, 13, 50495], 'temperature': 0.0, 'avg_logprob': -0.21942262871320858, 'compression_ratio': 1.603448275862069, 'no_speech_prob': 0.23087076842784882}, {'id': 1019, 'seek': 424190, 'start': 4244.5199999999995, 'end': 4248.219999999999, 'text': ' Each instruction is a word, right.', 'tokens': [50495, 6947, 10951, 307, 257, 1349, 11, 558, 13, 50680], 'temperature': 0.0, 'avg_logprob': -0.21942262871320858, 'compression_ratio': 1.603448275862069, 'no_speech_prob': 0.23087076842784882}, {'id': 1020, 'seek': 424190, 'start': 4248.219999999999, 'end': 4256.219999999999, 'text': ' So what would be PC, PC plus 4, PC plus 8, PC plus 16, etc.', 'tokens': [50680, 407, 437, 576, 312, 6465, 11, 6465, 1804, 1017, 11, 6465, 1804, 1649, 11, 6465, 1804, 3165, 11, 5183, 13, 51080], 'temperature': 0.0, 'avg_logprob': -0.21942262871320858, 'compression_ratio': 1.603448275862069, 'no_speech_prob': 0.23087076842784882}, {'id': 1021, 'seek': 424190, 'start': 4256.219999999999, 'end': 4260.339999999999, 'text': ' What would the last 2 bits of that address be?', 'tokens': [51080, 708, 576, 264, 1036, 568, 9239, 295, 300, 2985, 312, 30, 51286], 'temperature': 0.0, 'avg_logprob': -0.21942262871320858, 'compression_ratio': 1.603448275862069, 'no_speech_prob': 0.23087076842784882}, {'id': 1022, 'seek': 424190, 'start': 4260.339999999999, 'end': 4262.54, 'text': ' It is word aligned.', 'tokens': [51286, 467, 307, 1349, 17962, 13, 51396], 'temperature': 0.0, 'avg_logprob': -0.21942262871320858, 'compression_ratio': 1.603448275862069, 'no_speech_prob': 0.23087076842784882}, {'id': 1023, 'seek': 424190, 'start': 4262.54, 'end': 4271.62, 'text': ' Word aligned means divisible by 4, which means last 2 bits should be 0, 0, correct.', 'tokens': [51396, 8725, 17962, 1355, 25974, 964, 538, 1017, 11, 597, 1355, 1036, 568, 9239, 820, 312, 1958, 11, 1958, 11, 3006, 13, 51850], 'temperature': 0.0, 'avg_logprob': -0.21942262871320858, 'compression_ratio': 1.603448275862069, 'no_speech_prob': 0.23087076842784882}, {'id': 1024, 'seek': 427162, 'start': 4271.62, 'end': 4281.34, 'text': ' Yes, you can quickly write down what is the binary representation for 4, 8, 12, 16, 20', 'tokens': [50364, 1079, 11, 291, 393, 2661, 2464, 760, 437, 307, 264, 17434, 10290, 337, 1017, 11, 1649, 11, 2272, 11, 3165, 11, 945, 50850], 'temperature': 0.0, 'avg_logprob': -0.21984465916951498, 'compression_ratio': 1.519047619047619, 'no_speech_prob': 0.008886430412530899}, {'id': 1025, 'seek': 427162, 'start': 4281.34, 'end': 4283.46, 'text': ' and so on, right.', 'tokens': [50850, 293, 370, 322, 11, 558, 13, 50956], 'temperature': 0.0, 'avg_logprob': -0.21984465916951498, 'compression_ratio': 1.519047619047619, 'no_speech_prob': 0.008886430412530899}, {'id': 1026, 'seek': 427162, 'start': 4283.46, 'end': 4284.46, 'text': ' What would they be?', 'tokens': [50956, 708, 576, 436, 312, 30, 51006], 'temperature': 0.0, 'avg_logprob': -0.21984465916951498, 'compression_ratio': 1.519047619047619, 'no_speech_prob': 0.008886430412530899}, {'id': 1027, 'seek': 427162, 'start': 4284.46, 'end': 4290.5, 'text': ' The last 2 bits will always be 0, 0, correct.', 'tokens': [51006, 440, 1036, 568, 9239, 486, 1009, 312, 1958, 11, 1958, 11, 3006, 13, 51308], 'temperature': 0.0, 'avg_logprob': -0.21984465916951498, 'compression_ratio': 1.519047619047619, 'no_speech_prob': 0.008886430412530899}, {'id': 1028, 'seek': 427162, 'start': 4290.5, 'end': 4296.9, 'text': ' Similarly if it is 16 bytes, sorry 2 bytes or 16 bits long, the last bit alone has to', 'tokens': [51308, 13157, 498, 309, 307, 3165, 36088, 11, 2597, 568, 36088, 420, 3165, 9239, 938, 11, 264, 1036, 857, 3312, 575, 281, 51628], 'temperature': 0.0, 'avg_logprob': -0.21984465916951498, 'compression_ratio': 1.519047619047619, 'no_speech_prob': 0.008886430412530899}, {'id': 1029, 'seek': 427162, 'start': 4296.9, 'end': 4301.38, 'text': ' be 0 and that is why essentially it is resetting the last bit.', 'tokens': [51628, 312, 1958, 293, 300, 307, 983, 4476, 309, 307, 14322, 783, 264, 1036, 857, 13, 51852], 'temperature': 0.0, 'avg_logprob': -0.21984465916951498, 'compression_ratio': 1.519047619047619, 'no_speech_prob': 0.008886430412530899}, {'id': 1030, 'seek': 430138, 'start': 4302.14, 'end': 4303.14, 'text': ' Okay, yeah.', 'tokens': [50402, 1033, 11, 1338, 13, 50452], 'temperature': 0.0, 'avg_logprob': -0.41443303166603557, 'compression_ratio': 1.2459016393442623, 'no_speech_prob': 0.06516381353139877}, {'id': 1031, 'seek': 430138, 'start': 4303.14, 'end': 4304.14, 'text': ' Sorry.', 'tokens': [50452, 4919, 13, 50502], 'temperature': 0.0, 'avg_logprob': -0.41443303166603557, 'compression_ratio': 1.2459016393442623, 'no_speech_prob': 0.06516381353139877}, {'id': 1032, 'seek': 430138, 'start': 4304.14, 'end': 4318.9400000000005, 'text': ' PC plus 4 has the address of the next instruction to be executed, right.', 'tokens': [50502, 6465, 1804, 1017, 575, 264, 2985, 295, 264, 958, 10951, 281, 312, 17577, 11, 558, 13, 51242], 'temperature': 0.0, 'avg_logprob': -0.41443303166603557, 'compression_ratio': 1.2459016393442623, 'no_speech_prob': 0.06516381353139877}, {'id': 1033, 'seek': 430138, 'start': 4318.9400000000005, 'end': 4328.54, 'text': ' PC plus 4, I am not able to hear you, could you talk louder?', 'tokens': [51242, 6465, 1804, 1017, 11, 286, 669, 406, 1075, 281, 1568, 291, 11, 727, 291, 751, 22717, 30, 51722], 'temperature': 0.0, 'avg_logprob': -0.41443303166603557, 'compression_ratio': 1.2459016393442623, 'no_speech_prob': 0.06516381353139877}, {'id': 1034, 'seek': 432854, 'start': 4328.54, 'end': 4339.18, 'text': ' Okay, PC stores the address of the next instruction to be fetched, okay.', 'tokens': [50364, 1033, 11, 6465, 9512, 264, 2985, 295, 264, 958, 10951, 281, 312, 23673, 292, 11, 1392, 13, 50896], 'temperature': 0.0, 'avg_logprob': -0.24795235527886283, 'compression_ratio': 1.5572916666666667, 'no_speech_prob': 0.023931706324219704}, {'id': 1035, 'seek': 432854, 'start': 4339.18, 'end': 4346.86, 'text': ' So as soon as it fetches, it will get incremented.', 'tokens': [50896, 407, 382, 2321, 382, 309, 15136, 3781, 11, 309, 486, 483, 1946, 14684, 13, 51280], 'temperature': 0.0, 'avg_logprob': -0.24795235527886283, 'compression_ratio': 1.5572916666666667, 'no_speech_prob': 0.023931706324219704}, {'id': 1036, 'seek': 432854, 'start': 4346.86, 'end': 4349.94, 'text': ' The return address should be PC plus 4, okay.', 'tokens': [51280, 440, 2736, 2985, 820, 312, 6465, 1804, 1017, 11, 1392, 13, 51434], 'temperature': 0.0, 'avg_logprob': -0.24795235527886283, 'compression_ratio': 1.5572916666666667, 'no_speech_prob': 0.023931706324219704}, {'id': 1037, 'seek': 432854, 'start': 4349.94, 'end': 4355.54, 'text': ' Well, actually this happens in the sense that after this happens only the PC value is getting', 'tokens': [51434, 1042, 11, 767, 341, 2314, 294, 264, 2020, 300, 934, 341, 2314, 787, 264, 6465, 2158, 307, 1242, 51714], 'temperature': 0.0, 'avg_logprob': -0.24795235527886283, 'compression_ratio': 1.5572916666666667, 'no_speech_prob': 0.023931706324219704}, {'id': 1038, 'seek': 432854, 'start': 4355.54, 'end': 4358.42, 'text': ' modified, that is the reason, okay.', 'tokens': [51714, 15873, 11, 300, 307, 264, 1778, 11, 1392, 13, 51858], 'temperature': 0.0, 'avg_logprob': -0.24795235527886283, 'compression_ratio': 1.5572916666666667, 'no_speech_prob': 0.023931706324219704}, {'id': 1039, 'seek': 435842, 'start': 4358.42, 'end': 4363.82, 'text': ' So, the idea is the same, okay.', 'tokens': [50364, 407, 11, 264, 1558, 307, 264, 912, 11, 1392, 13, 50634], 'temperature': 0.0, 'avg_logprob': -0.27146458044284727, 'compression_ratio': 1.7339901477832513, 'no_speech_prob': 0.005855225026607513}, {'id': 1040, 'seek': 435842, 'start': 4363.82, 'end': 4369.38, 'text': ' Now we talked about these instructions having these operands and other things.', 'tokens': [50634, 823, 321, 2825, 466, 613, 9415, 1419, 613, 2208, 2967, 293, 661, 721, 13, 50912], 'temperature': 0.0, 'avg_logprob': -0.27146458044284727, 'compression_ratio': 1.7339901477832513, 'no_speech_prob': 0.005855225026607513}, {'id': 1041, 'seek': 435842, 'start': 4369.38, 'end': 4374.34, 'text': ' When you write it as an assembly instruction, you write something like this, right.', 'tokens': [50912, 1133, 291, 2464, 309, 382, 364, 12103, 10951, 11, 291, 2464, 746, 411, 341, 11, 558, 13, 51160], 'temperature': 0.0, 'avg_logprob': -0.27146458044284727, 'compression_ratio': 1.7339901477832513, 'no_speech_prob': 0.005855225026607513}, {'id': 1042, 'seek': 435842, 'start': 4374.34, 'end': 4379.74, 'text': ' But when this goes as a machine code and how the machine understands this instruction,', 'tokens': [51160, 583, 562, 341, 1709, 382, 257, 3479, 3089, 293, 577, 264, 3479, 15146, 341, 10951, 11, 51430], 'temperature': 0.0, 'avg_logprob': -0.27146458044284727, 'compression_ratio': 1.7339901477832513, 'no_speech_prob': 0.005855225026607513}, {'id': 1043, 'seek': 435842, 'start': 4379.74, 'end': 4385.02, 'text': ' that essentially is what we call as the instruction formatting, right.', 'tokens': [51430, 300, 4476, 307, 437, 321, 818, 382, 264, 10951, 39366, 11, 558, 13, 51694], 'temperature': 0.0, 'avg_logprob': -0.27146458044284727, 'compression_ratio': 1.7339901477832513, 'no_speech_prob': 0.005855225026607513}, {'id': 1044, 'seek': 438502, 'start': 4385.02, 'end': 4389.34, 'text': ' So, RISC-V for example supports these various formats.', 'tokens': [50364, 407, 11, 497, 2343, 34, 12, 53, 337, 1365, 9346, 613, 3683, 25879, 13, 50580], 'temperature': 0.0, 'avg_logprob': -0.26743766784667966, 'compression_ratio': 1.5826086956521739, 'no_speech_prob': 0.04675762727856636}, {'id': 1045, 'seek': 438502, 'start': 4389.34, 'end': 4394.18, 'text': ' We will not spend time trying to understand each of these formats, but let us just quickly', 'tokens': [50580, 492, 486, 406, 3496, 565, 1382, 281, 1223, 1184, 295, 613, 25879, 11, 457, 718, 505, 445, 2661, 50822], 'temperature': 0.0, 'avg_logprob': -0.26743766784667966, 'compression_ratio': 1.5826086956521739, 'no_speech_prob': 0.04675762727856636}, {'id': 1046, 'seek': 438502, 'start': 4394.18, 'end': 4397.3, 'text': ' look at in the R type format, okay.', 'tokens': [50822, 574, 412, 294, 264, 497, 2010, 7877, 11, 1392, 13, 50978], 'temperature': 0.0, 'avg_logprob': -0.26743766784667966, 'compression_ratio': 1.5826086956521739, 'no_speech_prob': 0.04675762727856636}, {'id': 1047, 'seek': 438502, 'start': 4397.3, 'end': 4402.820000000001, 'text': ' There are three registers, RS1 is the first source, RS2 which is the second source and', 'tokens': [50978, 821, 366, 1045, 38351, 11, 25855, 16, 307, 264, 700, 4009, 11, 25855, 17, 597, 307, 264, 1150, 4009, 293, 51254], 'temperature': 0.0, 'avg_logprob': -0.26743766784667966, 'compression_ratio': 1.5826086956521739, 'no_speech_prob': 0.04675762727856636}, {'id': 1048, 'seek': 438502, 'start': 4402.820000000001, 'end': 4405.540000000001, 'text': ' RD which is the third source.', 'tokens': [51254, 49488, 597, 307, 264, 2636, 4009, 13, 51390], 'temperature': 0.0, 'avg_logprob': -0.26743766784667966, 'compression_ratio': 1.5826086956521739, 'no_speech_prob': 0.04675762727856636}, {'id': 1049, 'seek': 438502, 'start': 4405.540000000001, 'end': 4410.38, 'text': ' Each source or each register operand is 5 bits long.', 'tokens': [51390, 6947, 4009, 420, 1184, 7280, 2208, 474, 307, 1025, 9239, 938, 13, 51632], 'temperature': 0.0, 'avg_logprob': -0.26743766784667966, 'compression_ratio': 1.5826086956521739, 'no_speech_prob': 0.04675762727856636}, {'id': 1050, 'seek': 438502, 'start': 4410.38, 'end': 4414.3, 'text': ' Why because?', 'tokens': [51632, 1545, 570, 30, 51828], 'temperature': 0.0, 'avg_logprob': -0.26743766784667966, 'compression_ratio': 1.5826086956521739, 'no_speech_prob': 0.04675762727856636}, {'id': 1051, 'seek': 441430, 'start': 4414.3, 'end': 4416.7, 'text': ' Because it has 32 registers.', 'tokens': [50364, 1436, 309, 575, 8858, 38351, 13, 50484], 'temperature': 0.0, 'avg_logprob': -0.20539089164348565, 'compression_ratio': 1.663677130044843, 'no_speech_prob': 0.019503755494952202}, {'id': 1052, 'seek': 441430, 'start': 4416.7, 'end': 4422.46, 'text': ' So you have to specify each one of those registers, you need 32, okay.', 'tokens': [50484, 407, 291, 362, 281, 16500, 1184, 472, 295, 729, 38351, 11, 291, 643, 8858, 11, 1392, 13, 50772], 'temperature': 0.0, 'avg_logprob': -0.20539089164348565, 'compression_ratio': 1.663677130044843, 'no_speech_prob': 0.019503755494952202}, {'id': 1053, 'seek': 441430, 'start': 4422.46, 'end': 4427.58, 'text': ' So everywhere where you have a register operand, it is 5 bits long, okay.', 'tokens': [50772, 407, 5315, 689, 291, 362, 257, 7280, 2208, 474, 11, 309, 307, 1025, 9239, 938, 11, 1392, 13, 51028], 'temperature': 0.0, 'avg_logprob': -0.20539089164348565, 'compression_ratio': 1.663677130044843, 'no_speech_prob': 0.019503755494952202}, {'id': 1054, 'seek': 441430, 'start': 4427.58, 'end': 4433.54, 'text': ' In the I type, I stands for immediate, you can see that there is one source operand,', 'tokens': [51028, 682, 264, 286, 2010, 11, 286, 7382, 337, 11629, 11, 291, 393, 536, 300, 456, 307, 472, 4009, 2208, 474, 11, 51326], 'temperature': 0.0, 'avg_logprob': -0.20539089164348565, 'compression_ratio': 1.663677130044843, 'no_speech_prob': 0.019503755494952202}, {'id': 1055, 'seek': 441430, 'start': 4433.54, 'end': 4439.18, 'text': ' one destination operand and 12 bits of immediate constant, right.', 'tokens': [51326, 472, 12236, 2208, 474, 293, 2272, 9239, 295, 11629, 5754, 11, 558, 13, 51608], 'temperature': 0.0, 'avg_logprob': -0.20539089164348565, 'compression_ratio': 1.663677130044843, 'no_speech_prob': 0.019503755494952202}, {'id': 1056, 'seek': 441430, 'start': 4439.18, 'end': 4441.38, 'text': ' This is the small offset that we talked about.', 'tokens': [51608, 639, 307, 264, 1359, 18687, 300, 321, 2825, 466, 13, 51718], 'temperature': 0.0, 'avg_logprob': -0.20539089164348565, 'compression_ratio': 1.663677130044843, 'no_speech_prob': 0.019503755494952202}, {'id': 1057, 'seek': 444138, 'start': 4442.02, 'end': 4448.3, 'text': ' 12 bits is 4 kilobytes, 4k locations, right.', 'tokens': [50396, 2272, 9239, 307, 1017, 5128, 996, 43673, 11, 1017, 74, 9253, 11, 558, 13, 50710], 'temperature': 0.0, 'avg_logprob': -0.1767298380533854, 'compression_ratio': 1.6995515695067265, 'no_speech_prob': 0.3626221716403961}, {'id': 1058, 'seek': 444138, 'start': 4448.3, 'end': 4454.22, 'text': ' Again in the case of S type, there is an immediate operand which is again 12 bits, but only thing', 'tokens': [50710, 3764, 294, 264, 1389, 295, 318, 2010, 11, 456, 307, 364, 11629, 2208, 474, 597, 307, 797, 2272, 9239, 11, 457, 787, 551, 51006], 'temperature': 0.0, 'avg_logprob': -0.1767298380533854, 'compression_ratio': 1.6995515695067265, 'no_speech_prob': 0.3626221716403961}, {'id': 1059, 'seek': 444138, 'start': 4454.22, 'end': 4459.22, 'text': ' is it is stored in two places, split, okay, for whatever reason.', 'tokens': [51006, 307, 309, 307, 12187, 294, 732, 3190, 11, 7472, 11, 1392, 11, 337, 2035, 1778, 13, 51256], 'temperature': 0.0, 'avg_logprob': -0.1767298380533854, 'compression_ratio': 1.6995515695067265, 'no_speech_prob': 0.3626221716403961}, {'id': 1060, 'seek': 444138, 'start': 4459.22, 'end': 4465.82, 'text': ' Here you can see that the immediate is 13 bits in the B type operation, right.', 'tokens': [51256, 1692, 291, 393, 536, 300, 264, 11629, 307, 3705, 9239, 294, 264, 363, 2010, 6916, 11, 558, 13, 51586], 'temperature': 0.0, 'avg_logprob': -0.1767298380533854, 'compression_ratio': 1.6995515695067265, 'no_speech_prob': 0.3626221716403961}, {'id': 1061, 'seek': 444138, 'start': 4465.82, 'end': 4470.74, 'text': ' And again you can see that some parts of the bits 1 to 4 is stored here, blah blah is stored', 'tokens': [51586, 400, 797, 291, 393, 536, 300, 512, 3166, 295, 264, 9239, 502, 281, 1017, 307, 12187, 510, 11, 12288, 12288, 307, 12187, 51832], 'temperature': 0.0, 'avg_logprob': -0.1767298380533854, 'compression_ratio': 1.6995515695067265, 'no_speech_prob': 0.3626221716403961}, {'id': 1062, 'seek': 447074, 'start': 4471.7, 'end': 4473.98, 'text': ' here and blah blah is stored there.', 'tokens': [50412, 510, 293, 12288, 12288, 307, 12187, 456, 13, 50526], 'temperature': 0.0, 'avg_logprob': -0.1719911275816358, 'compression_ratio': 1.7885462555066078, 'no_speech_prob': 0.007472360040992498}, {'id': 1063, 'seek': 447074, 'start': 4473.98, 'end': 4477.5, 'text': ' You can see that immediate 0 is not there anywhere, right.', 'tokens': [50526, 509, 393, 536, 300, 11629, 1958, 307, 406, 456, 4992, 11, 558, 13, 50702], 'temperature': 0.0, 'avg_logprob': -0.1719911275816358, 'compression_ratio': 1.7885462555066078, 'no_speech_prob': 0.007472360040992498}, {'id': 1064, 'seek': 447074, 'start': 4477.5, 'end': 4478.5, 'text': ' So what is it going to be?', 'tokens': [50702, 407, 437, 307, 309, 516, 281, 312, 30, 50752], 'temperature': 0.0, 'avg_logprob': -0.1719911275816358, 'compression_ratio': 1.7885462555066078, 'no_speech_prob': 0.007472360040992498}, {'id': 1065, 'seek': 447074, 'start': 4478.5, 'end': 4482.58, 'text': ' When it is not there, it is implicitly 0.', 'tokens': [50752, 1133, 309, 307, 406, 456, 11, 309, 307, 26947, 356, 1958, 13, 50956], 'temperature': 0.0, 'avg_logprob': -0.1719911275816358, 'compression_ratio': 1.7885462555066078, 'no_speech_prob': 0.007472360040992498}, {'id': 1066, 'seek': 447074, 'start': 4482.58, 'end': 4486.0199999999995, 'text': ' So it will add that 0 to it, okay.', 'tokens': [50956, 407, 309, 486, 909, 300, 1958, 281, 309, 11, 1392, 13, 51128], 'temperature': 0.0, 'avg_logprob': -0.1719911275816358, 'compression_ratio': 1.7885462555066078, 'no_speech_prob': 0.007472360040992498}, {'id': 1067, 'seek': 447074, 'start': 4486.0199999999995, 'end': 4491.099999999999, 'text': ' Here in this case, U type instruction has, right, you can see that it has 20 bits of', 'tokens': [51128, 1692, 294, 341, 1389, 11, 624, 2010, 10951, 575, 11, 558, 11, 291, 393, 536, 300, 309, 575, 945, 9239, 295, 51382], 'temperature': 0.0, 'avg_logprob': -0.1719911275816358, 'compression_ratio': 1.7885462555066078, 'no_speech_prob': 0.007472360040992498}, {'id': 1068, 'seek': 447074, 'start': 4491.099999999999, 'end': 4496.74, 'text': ' immediate constant and it does not specify the first 11 bits or first 12 bits rather,', 'tokens': [51382, 11629, 5754, 293, 309, 775, 406, 16500, 264, 700, 2975, 9239, 420, 700, 2272, 9239, 2831, 11, 51664], 'temperature': 0.0, 'avg_logprob': -0.1719911275816358, 'compression_ratio': 1.7885462555066078, 'no_speech_prob': 0.007472360040992498}, {'id': 1069, 'seek': 447074, 'start': 4496.74, 'end': 4497.74, 'text': ' right.', 'tokens': [51664, 558, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.1719911275816358, 'compression_ratio': 1.7885462555066078, 'no_speech_prob': 0.007472360040992498}, {'id': 1070, 'seek': 447074, 'start': 4497.74, 'end': 4499.62, 'text': ' 0 to 11, it does not specify.', 'tokens': [51714, 1958, 281, 2975, 11, 309, 775, 406, 16500, 13, 51808], 'temperature': 0.0, 'avg_logprob': -0.1719911275816358, 'compression_ratio': 1.7885462555066078, 'no_speech_prob': 0.007472360040992498}, {'id': 1071, 'seek': 449962, 'start': 4499.62, 'end': 4503.98, 'text': ' That will be taken from the current program counter or that will be taken from some place.', 'tokens': [50364, 663, 486, 312, 2726, 490, 264, 2190, 1461, 5682, 420, 300, 486, 312, 2726, 490, 512, 1081, 13, 50582], 'temperature': 0.0, 'avg_logprob': -0.16685100666527608, 'compression_ratio': 1.852, 'no_speech_prob': 0.044928599148988724}, {'id': 1072, 'seek': 449962, 'start': 4503.98, 'end': 4508.48, 'text': ' Again it depends on which instruction uses and what exactly is being done.', 'tokens': [50582, 3764, 309, 5946, 322, 597, 10951, 4960, 293, 437, 2293, 307, 885, 1096, 13, 50807], 'temperature': 0.0, 'avg_logprob': -0.16685100666527608, 'compression_ratio': 1.852, 'no_speech_prob': 0.044928599148988724}, {'id': 1073, 'seek': 449962, 'start': 4508.48, 'end': 4512.0599999999995, 'text': ' So this is how the instructions are encoded, right.', 'tokens': [50807, 407, 341, 307, 577, 264, 9415, 366, 2058, 12340, 11, 558, 13, 50986], 'temperature': 0.0, 'avg_logprob': -0.16685100666527608, 'compression_ratio': 1.852, 'no_speech_prob': 0.044928599148988724}, {'id': 1074, 'seek': 449962, 'start': 4512.0599999999995, 'end': 4517.66, 'text': ' And the assembly language instruction when it is converted into machine code, it is going', 'tokens': [50986, 400, 264, 12103, 2856, 10951, 562, 309, 307, 16424, 666, 3479, 3089, 11, 309, 307, 516, 51266], 'temperature': 0.0, 'avg_logprob': -0.16685100666527608, 'compression_ratio': 1.852, 'no_speech_prob': 0.044928599148988724}, {'id': 1075, 'seek': 449962, 'start': 4517.66, 'end': 4522.58, 'text': ' to be converted using one of these types depending on what that instruction is and each one of', 'tokens': [51266, 281, 312, 16424, 1228, 472, 295, 613, 3467, 5413, 322, 437, 300, 10951, 307, 293, 1184, 472, 295, 51512], 'temperature': 0.0, 'avg_logprob': -0.16685100666527608, 'compression_ratio': 1.852, 'no_speech_prob': 0.044928599148988724}, {'id': 1076, 'seek': 449962, 'start': 4522.58, 'end': 4525.26, 'text': ' those fields are going to be appropriately specified, right.', 'tokens': [51512, 729, 7909, 366, 516, 281, 312, 23505, 22206, 11, 558, 13, 51646], 'temperature': 0.0, 'avg_logprob': -0.16685100666527608, 'compression_ratio': 1.852, 'no_speech_prob': 0.044928599148988724}, {'id': 1077, 'seek': 452526, 'start': 4526.26, 'end': 4532.42, 'text': ' So we do not worry about this part in our code generation because we assume that the', 'tokens': [50414, 407, 321, 360, 406, 3292, 466, 341, 644, 294, 527, 3089, 5125, 570, 321, 6552, 300, 264, 50722], 'temperature': 0.0, 'avg_logprob': -0.1580183882462351, 'compression_ratio': 1.5647668393782384, 'no_speech_prob': 0.20910288393497467}, {'id': 1078, 'seek': 452526, 'start': 4532.42, 'end': 4536.02, 'text': ' assembler is going to take care of, right.', 'tokens': [50722, 8438, 1918, 307, 516, 281, 747, 1127, 295, 11, 558, 13, 50902], 'temperature': 0.0, 'avg_logprob': -0.1580183882462351, 'compression_ratio': 1.5647668393782384, 'no_speech_prob': 0.20910288393497467}, {'id': 1079, 'seek': 452526, 'start': 4536.02, 'end': 4543.14, 'text': ' But still kind of quickly we call this structure in order for us to understand how instruction', 'tokens': [50902, 583, 920, 733, 295, 2661, 321, 818, 341, 3877, 294, 1668, 337, 505, 281, 1223, 577, 10951, 51258], 'temperature': 0.0, 'avg_logprob': -0.1580183882462351, 'compression_ratio': 1.5647668393782384, 'no_speech_prob': 0.20910288393497467}, {'id': 1080, 'seek': 452526, 'start': 4543.14, 'end': 4544.14, 'text': ' execution happens, okay.', 'tokens': [51258, 15058, 2314, 11, 1392, 13, 51308], 'temperature': 0.0, 'avg_logprob': -0.1580183882462351, 'compression_ratio': 1.5647668393782384, 'no_speech_prob': 0.20910288393497467}, {'id': 1081, 'seek': 452526, 'start': 4544.14, 'end': 4548.34, 'text': ' That is the next thing that we are going to see, okay.', 'tokens': [51308, 663, 307, 264, 958, 551, 300, 321, 366, 516, 281, 536, 11, 1392, 13, 51518], 'temperature': 0.0, 'avg_logprob': -0.1580183882462351, 'compression_ratio': 1.5647668393782384, 'no_speech_prob': 0.20910288393497467}, {'id': 1082, 'seek': 454834, 'start': 4548.34, 'end': 4557.18, 'text': ' I have a very quick example of a C code and a corresponding assembly code for that, okay.', 'tokens': [50364, 286, 362, 257, 588, 1702, 1365, 295, 257, 383, 3089, 293, 257, 11760, 12103, 3089, 337, 300, 11, 1392, 13, 50806], 'temperature': 0.0, 'avg_logprob': -0.22966103221094886, 'compression_ratio': 1.5778894472361809, 'no_speech_prob': 0.20623145997524261}, {'id': 1083, 'seek': 454834, 'start': 4557.18, 'end': 4562.68, 'text': ' Just to say that it is not very difficult to read the assembly code, right.', 'tokens': [50806, 1449, 281, 584, 300, 309, 307, 406, 588, 2252, 281, 1401, 264, 12103, 3089, 11, 558, 13, 51081], 'temperature': 0.0, 'avg_logprob': -0.22966103221094886, 'compression_ratio': 1.5778894472361809, 'no_speech_prob': 0.20623145997524261}, {'id': 1084, 'seek': 454834, 'start': 4562.68, 'end': 4564.5, 'text': ' So what does this code do?', 'tokens': [51081, 407, 437, 775, 341, 3089, 360, 30, 51172], 'temperature': 0.0, 'avg_logprob': -0.22966103221094886, 'compression_ratio': 1.5778894472361809, 'no_speech_prob': 0.20623145997524261}, {'id': 1085, 'seek': 454834, 'start': 4564.5, 'end': 4566.92, 'text': ' GCD, right.', 'tokens': [51172, 460, 16508, 11, 558, 13, 51293], 'temperature': 0.0, 'avg_logprob': -0.22966103221094886, 'compression_ratio': 1.5778894472361809, 'no_speech_prob': 0.20623145997524261}, {'id': 1086, 'seek': 454834, 'start': 4566.92, 'end': 4572.62, 'text': ' So essentially finds a bigger number, subtracts the smaller number from it, okay and keeps', 'tokens': [51293, 407, 4476, 10704, 257, 3801, 1230, 11, 16390, 82, 264, 4356, 1230, 490, 309, 11, 1392, 293, 5965, 51578], 'temperature': 0.0, 'avg_logprob': -0.22966103221094886, 'compression_ratio': 1.5778894472361809, 'no_speech_prob': 0.20623145997524261}, {'id': 1087, 'seek': 454834, 'start': 4572.62, 'end': 4574.5, 'text': ' doing that, right.', 'tokens': [51578, 884, 300, 11, 558, 13, 51672], 'temperature': 0.0, 'avg_logprob': -0.22966103221094886, 'compression_ratio': 1.5778894472361809, 'no_speech_prob': 0.20623145997524261}, {'id': 1088, 'seek': 457450, 'start': 4574.5, 'end': 4579.78, 'text': ' And in the end whatever is the remaining thing, non-zero number that is CGCD, correct.', 'tokens': [50364, 400, 294, 264, 917, 2035, 307, 264, 8877, 551, 11, 2107, 12, 32226, 1230, 300, 307, 38007, 16508, 11, 3006, 13, 50628], 'temperature': 0.0, 'avg_logprob': -0.23716155687967935, 'compression_ratio': 1.6932270916334662, 'no_speech_prob': 0.12964078783988953}, {'id': 1089, 'seek': 457450, 'start': 4579.78, 'end': 4582.02, 'text': ' So let us look at the code, assembly code.', 'tokens': [50628, 407, 718, 505, 574, 412, 264, 3089, 11, 12103, 3089, 13, 50740], 'temperature': 0.0, 'avg_logprob': -0.23716155687967935, 'compression_ratio': 1.6932270916334662, 'no_speech_prob': 0.12964078783988953}, {'id': 1090, 'seek': 457450, 'start': 4582.02, 'end': 4586.02, 'text': ' It is only as big as the C code in this particular case.', 'tokens': [50740, 467, 307, 787, 382, 955, 382, 264, 383, 3089, 294, 341, 1729, 1389, 13, 50940], 'temperature': 0.0, 'avg_logprob': -0.23716155687967935, 'compression_ratio': 1.6932270916334662, 'no_speech_prob': 0.12964078783988953}, {'id': 1091, 'seek': 457450, 'start': 4586.02, 'end': 4590.22, 'text': ' In other cases of course it could be much bigger but at least this one is something', 'tokens': [50940, 682, 661, 3331, 295, 1164, 309, 727, 312, 709, 3801, 457, 412, 1935, 341, 472, 307, 746, 51150], 'temperature': 0.0, 'avg_logprob': -0.23716155687967935, 'compression_ratio': 1.6932270916334662, 'no_speech_prob': 0.12964078783988953}, {'id': 1092, 'seek': 457450, 'start': 4590.22, 'end': 4591.94, 'text': ' that we can easily understand.', 'tokens': [51150, 300, 321, 393, 3612, 1223, 13, 51236], 'temperature': 0.0, 'avg_logprob': -0.23716155687967935, 'compression_ratio': 1.6932270916334662, 'no_speech_prob': 0.12964078783988953}, {'id': 1093, 'seek': 457450, 'start': 4591.94, 'end': 4593.5, 'text': ' Let us look at what happens.', 'tokens': [51236, 961, 505, 574, 412, 437, 2314, 13, 51314], 'temperature': 0.0, 'avg_logprob': -0.23716155687967935, 'compression_ratio': 1.6932270916334662, 'no_speech_prob': 0.12964078783988953}, {'id': 1094, 'seek': 457450, 'start': 4593.5, 'end': 4601.14, 'text': ' Let us assume that initially A is in register X1, B is in register X2 and T is in register', 'tokens': [51314, 961, 505, 6552, 300, 9105, 316, 307, 294, 7280, 1783, 16, 11, 363, 307, 294, 7280, 1783, 17, 293, 314, 307, 294, 7280, 51696], 'temperature': 0.0, 'avg_logprob': -0.23716155687967935, 'compression_ratio': 1.6932270916334662, 'no_speech_prob': 0.12964078783988953}, {'id': 1095, 'seek': 457450, 'start': 4601.14, 'end': 4602.96, 'text': ' X3.', 'tokens': [51696, 1783, 18, 13, 51787], 'temperature': 0.0, 'avg_logprob': -0.23716155687967935, 'compression_ratio': 1.6932270916334662, 'no_speech_prob': 0.12964078783988953}, {'id': 1096, 'seek': 460296, 'start': 4602.96, 'end': 4607.6, 'text': ' That means that you must have done some instructions to move the contents of A into X1, contents', 'tokens': [50364, 663, 1355, 300, 291, 1633, 362, 1096, 512, 9415, 281, 1286, 264, 15768, 295, 316, 666, 1783, 16, 11, 15768, 50596], 'temperature': 0.0, 'avg_logprob': -0.15639288448592992, 'compression_ratio': 1.661904761904762, 'no_speech_prob': 0.03817310184240341}, {'id': 1097, 'seek': 460296, 'start': 4607.6, 'end': 4609.28, 'text': ' of B into X2 and so on, right.', 'tokens': [50596, 295, 363, 666, 1783, 17, 293, 370, 322, 11, 558, 13, 50680], 'temperature': 0.0, 'avg_logprob': -0.15639288448592992, 'compression_ratio': 1.661904761904762, 'no_speech_prob': 0.03817310184240341}, {'id': 1098, 'seek': 460296, 'start': 4609.28, 'end': 4611.0, 'text': ' Let us not worry about that.', 'tokens': [50680, 961, 505, 406, 3292, 466, 300, 13, 50766], 'temperature': 0.0, 'avg_logprob': -0.15639288448592992, 'compression_ratio': 1.661904761904762, 'no_speech_prob': 0.03817310184240341}, {'id': 1099, 'seek': 460296, 'start': 4611.0, 'end': 4614.32, 'text': ' Let us look at the interesting part, right.', 'tokens': [50766, 961, 505, 574, 412, 264, 1880, 644, 11, 558, 13, 50932], 'temperature': 0.0, 'avg_logprob': -0.15639288448592992, 'compression_ratio': 1.661904761904762, 'no_speech_prob': 0.03817310184240341}, {'id': 1100, 'seek': 460296, 'start': 4614.32, 'end': 4621.4800000000005, 'text': ' You look at if X1 is 0 that means that you are done, right.', 'tokens': [50932, 509, 574, 412, 498, 1783, 16, 307, 1958, 300, 1355, 300, 291, 366, 1096, 11, 558, 13, 51290], 'temperature': 0.0, 'avg_logprob': -0.15639288448592992, 'compression_ratio': 1.661904761904762, 'no_speech_prob': 0.03817310184240341}, {'id': 1101, 'seek': 460296, 'start': 4621.4800000000005, 'end': 4628.4, 'text': ' One of the two operands is 0, the other one has the GCD, greatest common divisor, right.', 'tokens': [51290, 1485, 295, 264, 732, 2208, 2967, 307, 1958, 11, 264, 661, 472, 575, 264, 460, 16508, 11, 6636, 2689, 25974, 284, 11, 558, 13, 51636], 'temperature': 0.0, 'avg_logprob': -0.15639288448592992, 'compression_ratio': 1.661904761904762, 'no_speech_prob': 0.03817310184240341}, {'id': 1102, 'seek': 462840, 'start': 4628.4, 'end': 4631.099999999999, 'text': ' So this is the branch instruction which essentially does that.', 'tokens': [50364, 407, 341, 307, 264, 9819, 10951, 597, 4476, 775, 300, 13, 50499], 'temperature': 0.0, 'avg_logprob': -0.26879273473688986, 'compression_ratio': 1.6990740740740742, 'no_speech_prob': 0.08800122141838074}, {'id': 1103, 'seek': 462840, 'start': 4631.099999999999, 'end': 4634.0599999999995, 'text': ' If X1 is 0, you go to done.', 'tokens': [50499, 759, 1783, 16, 307, 1958, 11, 291, 352, 281, 1096, 13, 50647], 'temperature': 0.0, 'avg_logprob': -0.26879273473688986, 'compression_ratio': 1.6990740740740742, 'no_speech_prob': 0.08800122141838074}, {'id': 1104, 'seek': 462840, 'start': 4634.0599999999995, 'end': 4637.82, 'text': ' Otherwise you come here, right.', 'tokens': [50647, 10328, 291, 808, 510, 11, 558, 13, 50835], 'temperature': 0.0, 'avg_logprob': -0.26879273473688986, 'compression_ratio': 1.6990740740740742, 'no_speech_prob': 0.08800122141838074}, {'id': 1105, 'seek': 462840, 'start': 4637.82, 'end': 4642.12, 'text': ' You find out which of these two numbers is bigger, right.', 'tokens': [50835, 509, 915, 484, 597, 295, 613, 732, 3547, 307, 3801, 11, 558, 13, 51050], 'temperature': 0.0, 'avg_logprob': -0.26879273473688986, 'compression_ratio': 1.6990740740740742, 'no_speech_prob': 0.08800122141838074}, {'id': 1106, 'seek': 462840, 'start': 4642.12, 'end': 4645.46, 'text': ' If A is bigger, you continue in this stream.', 'tokens': [51050, 759, 316, 307, 3801, 11, 291, 2354, 294, 341, 4309, 13, 51217], 'temperature': 0.0, 'avg_logprob': -0.26879273473688986, 'compression_ratio': 1.6990740740740742, 'no_speech_prob': 0.08800122141838074}, {'id': 1107, 'seek': 462840, 'start': 4645.46, 'end': 4648.219999999999, 'text': ' If B is bigger, you jump here, okay.', 'tokens': [51217, 759, 363, 307, 3801, 11, 291, 3012, 510, 11, 1392, 13, 51355], 'temperature': 0.0, 'avg_logprob': -0.26879273473688986, 'compression_ratio': 1.6990740740740742, 'no_speech_prob': 0.08800122141838074}, {'id': 1108, 'seek': 462840, 'start': 4648.219999999999, 'end': 4651.139999999999, 'text': ' So you are essentially comparing X1, X2.', 'tokens': [51355, 407, 291, 366, 4476, 15763, 1783, 16, 11, 1783, 17, 13, 51501], 'temperature': 0.0, 'avg_logprob': -0.26879273473688986, 'compression_ratio': 1.6990740740740742, 'no_speech_prob': 0.08800122141838074}, {'id': 1109, 'seek': 462840, 'start': 4651.139999999999, 'end': 4656.46, 'text': ' If X1 is greater than X2, right, sorry, it is less than, sorry.', 'tokens': [51501, 759, 1783, 16, 307, 5044, 813, 1783, 17, 11, 558, 11, 2597, 11, 309, 307, 1570, 813, 11, 2597, 13, 51767], 'temperature': 0.0, 'avg_logprob': -0.26879273473688986, 'compression_ratio': 1.6990740740740742, 'no_speech_prob': 0.08800122141838074}, {'id': 1110, 'seek': 465646, 'start': 4656.46, 'end': 4662.08, 'text': ' If X1 is less than X2, then you go to this label, okay.', 'tokens': [50364, 759, 1783, 16, 307, 1570, 813, 1783, 17, 11, 550, 291, 352, 281, 341, 7645, 11, 1392, 13, 50645], 'temperature': 0.0, 'avg_logprob': -0.10187108700092022, 'compression_ratio': 1.6929824561403508, 'no_speech_prob': 0.2640265226364136}, {'id': 1111, 'seek': 465646, 'start': 4662.08, 'end': 4667.5, 'text': ' So when this code is being assembled, right, this label part is going to be replaced by', 'tokens': [50645, 407, 562, 341, 3089, 307, 885, 24204, 11, 558, 11, 341, 7645, 644, 307, 516, 281, 312, 10772, 538, 50916], 'temperature': 0.0, 'avg_logprob': -0.10187108700092022, 'compression_ratio': 1.6929824561403508, 'no_speech_prob': 0.2640265226364136}, {'id': 1112, 'seek': 465646, 'start': 4667.5, 'end': 4673.32, 'text': ' an offset which corresponds to the distance between these two instructions, right.', 'tokens': [50916, 364, 18687, 597, 23249, 281, 264, 4560, 1296, 613, 732, 9415, 11, 558, 13, 51207], 'temperature': 0.0, 'avg_logprob': -0.10187108700092022, 'compression_ratio': 1.6929824561403508, 'no_speech_prob': 0.2640265226364136}, {'id': 1113, 'seek': 465646, 'start': 4673.32, 'end': 4677.18, 'text': ' So typically there are two instructions in between, right.', 'tokens': [51207, 407, 5850, 456, 366, 732, 9415, 294, 1296, 11, 558, 13, 51400], 'temperature': 0.0, 'avg_logprob': -0.10187108700092022, 'compression_ratio': 1.6929824561403508, 'no_speech_prob': 0.2640265226364136}, {'id': 1114, 'seek': 465646, 'start': 4677.18, 'end': 4681.18, 'text': ' So it is PC plus 4 plus, sorry, PC plus 8.', 'tokens': [51400, 407, 309, 307, 6465, 1804, 1017, 1804, 11, 2597, 11, 6465, 1804, 1649, 13, 51600], 'temperature': 0.0, 'avg_logprob': -0.10187108700092022, 'compression_ratio': 1.6929824561403508, 'no_speech_prob': 0.2640265226364136}, {'id': 1115, 'seek': 465646, 'start': 4681.18, 'end': 4685.4800000000005, 'text': ' So we already know that the offset is added to PC plus 4.', 'tokens': [51600, 407, 321, 1217, 458, 300, 264, 18687, 307, 3869, 281, 6465, 1804, 1017, 13, 51815], 'temperature': 0.0, 'avg_logprob': -0.10187108700092022, 'compression_ratio': 1.6929824561403508, 'no_speech_prob': 0.2640265226364136}, {'id': 1116, 'seek': 468548, 'start': 4685.48, 'end': 4688.719999999999, 'text': ' So this offset has to be only 4 if you want to get PC plus 8.', 'tokens': [50364, 407, 341, 18687, 575, 281, 312, 787, 1017, 498, 291, 528, 281, 483, 6465, 1804, 1649, 13, 50526], 'temperature': 0.0, 'avg_logprob': -0.1606745325533071, 'compression_ratio': 1.744, 'no_speech_prob': 0.007682255934923887}, {'id': 1117, 'seek': 468548, 'start': 4688.719999999999, 'end': 4691.259999999999, 'text': ' So the offset is being computed, correct.', 'tokens': [50526, 407, 264, 18687, 307, 885, 40610, 11, 3006, 13, 50653], 'temperature': 0.0, 'avg_logprob': -0.1606745325533071, 'compression_ratio': 1.744, 'no_speech_prob': 0.007682255934923887}, {'id': 1118, 'seek': 468548, 'start': 4691.259999999999, 'end': 4695.219999999999, 'text': ' So if X1 is less than X2, then you have to jump.', 'tokens': [50653, 407, 498, 1783, 16, 307, 1570, 813, 1783, 17, 11, 550, 291, 362, 281, 3012, 13, 50851], 'temperature': 0.0, 'avg_logprob': -0.1606745325533071, 'compression_ratio': 1.744, 'no_speech_prob': 0.007682255934923887}, {'id': 1119, 'seek': 468548, 'start': 4695.219999999999, 'end': 4699.839999999999, 'text': ' That means that you have to add this offset to the current PC plus 4 value and that means', 'tokens': [50851, 663, 1355, 300, 291, 362, 281, 909, 341, 18687, 281, 264, 2190, 6465, 1804, 1017, 2158, 293, 300, 1355, 51082], 'temperature': 0.0, 'avg_logprob': -0.1606745325533071, 'compression_ratio': 1.744, 'no_speech_prob': 0.007682255934923887}, {'id': 1120, 'seek': 468548, 'start': 4699.839999999999, 'end': 4701.48, 'text': ' that new PC will be here.', 'tokens': [51082, 300, 777, 6465, 486, 312, 510, 13, 51164], 'temperature': 0.0, 'avg_logprob': -0.1606745325533071, 'compression_ratio': 1.744, 'no_speech_prob': 0.007682255934923887}, {'id': 1121, 'seek': 468548, 'start': 4701.48, 'end': 4707.0, 'text': ' If X1 is greater than or equal to X2, then you perform this step, right.', 'tokens': [51164, 759, 1783, 16, 307, 5044, 813, 420, 2681, 281, 1783, 17, 11, 550, 291, 2042, 341, 1823, 11, 558, 13, 51440], 'temperature': 0.0, 'avg_logprob': -0.1606745325533071, 'compression_ratio': 1.744, 'no_speech_prob': 0.007682255934923887}, {'id': 1122, 'seek': 468548, 'start': 4707.0, 'end': 4711.759999999999, 'text': ' Subtract X1 from X2 and put the value back in X1 and then you go back.', 'tokens': [51440, 8511, 83, 1897, 1783, 16, 490, 1783, 17, 293, 829, 264, 2158, 646, 294, 1783, 16, 293, 550, 291, 352, 646, 13, 51678], 'temperature': 0.0, 'avg_logprob': -0.1606745325533071, 'compression_ratio': 1.744, 'no_speech_prob': 0.007682255934923887}, {'id': 1123, 'seek': 468548, 'start': 4711.759999999999, 'end': 4713.12, 'text': ' You continue like that.', 'tokens': [51678, 509, 2354, 411, 300, 13, 51746], 'temperature': 0.0, 'avg_logprob': -0.1606745325533071, 'compression_ratio': 1.744, 'no_speech_prob': 0.007682255934923887}, {'id': 1124, 'seek': 471312, 'start': 4713.12, 'end': 4719.48, 'text': ' If X1 is less than X2, you jump here and then this essentially, right, and we do not have', 'tokens': [50364, 759, 1783, 16, 307, 1570, 813, 1783, 17, 11, 291, 3012, 510, 293, 550, 341, 4476, 11, 558, 11, 293, 321, 360, 406, 362, 50682], 'temperature': 0.0, 'avg_logprob': -0.2055826187133789, 'compression_ratio': 1.6569037656903767, 'no_speech_prob': 0.043658941984176636}, {'id': 1125, 'seek': 471312, 'start': 4719.48, 'end': 4720.92, 'text': ' a move instruction.', 'tokens': [50682, 257, 1286, 10951, 13, 50754], 'temperature': 0.0, 'avg_logprob': -0.2055826187133789, 'compression_ratio': 1.6569037656903767, 'no_speech_prob': 0.043658941984176636}, {'id': 1126, 'seek': 471312, 'start': 4720.92, 'end': 4722.5599999999995, 'text': ' Instead what we do?', 'tokens': [50754, 7156, 437, 321, 360, 30, 50836], 'temperature': 0.0, 'avg_logprob': -0.2055826187133789, 'compression_ratio': 1.6569037656903767, 'no_speech_prob': 0.043658941984176636}, {'id': 1127, 'seek': 471312, 'start': 4722.5599999999995, 'end': 4725.44, 'text': ' You add X2 to X0 and put it in X1.', 'tokens': [50836, 509, 909, 1783, 17, 281, 1783, 15, 293, 829, 309, 294, 1783, 16, 13, 50980], 'temperature': 0.0, 'avg_logprob': -0.2055826187133789, 'compression_ratio': 1.6569037656903767, 'no_speech_prob': 0.043658941984176636}, {'id': 1128, 'seek': 471312, 'start': 4725.44, 'end': 4728.88, 'text': ' That is essentially moving X2 to X1.', 'tokens': [50980, 663, 307, 4476, 2684, 1783, 17, 281, 1783, 16, 13, 51152], 'temperature': 0.0, 'avg_logprob': -0.2055826187133789, 'compression_ratio': 1.6569037656903767, 'no_speech_prob': 0.043658941984176636}, {'id': 1129, 'seek': 471312, 'start': 4728.88, 'end': 4732.84, 'text': ' Remember that X0 is a hardwired 0 register, right.', 'tokens': [51152, 5459, 300, 1783, 15, 307, 257, 1152, 86, 1824, 1958, 7280, 11, 558, 13, 51350], 'temperature': 0.0, 'avg_logprob': -0.2055826187133789, 'compression_ratio': 1.6569037656903767, 'no_speech_prob': 0.043658941984176636}, {'id': 1130, 'seek': 471312, 'start': 4732.84, 'end': 4737.5599999999995, 'text': ' If you write something to X1, that is equivalent to doing nothing, right.', 'tokens': [51350, 759, 291, 2464, 746, 281, 1783, 16, 11, 300, 307, 10344, 281, 884, 1825, 11, 558, 13, 51586], 'temperature': 0.0, 'avg_logprob': -0.2055826187133789, 'compression_ratio': 1.6569037656903767, 'no_speech_prob': 0.043658941984176636}, {'id': 1131, 'seek': 471312, 'start': 4737.5599999999995, 'end': 4742.5599999999995, 'text': ' Even if you write a value 20 to X1, it will still remain as 0, right.', 'tokens': [51586, 2754, 498, 291, 2464, 257, 2158, 945, 281, 1783, 16, 11, 309, 486, 920, 6222, 382, 1958, 11, 558, 13, 51836], 'temperature': 0.0, 'avg_logprob': -0.2055826187133789, 'compression_ratio': 1.6569037656903767, 'no_speech_prob': 0.043658941984176636}, {'id': 1132, 'seek': 474256, 'start': 4742.56, 'end': 4746.360000000001, 'text': ' So that is a dummy operation, okay.', 'tokens': [50364, 407, 300, 307, 257, 35064, 6916, 11, 1392, 13, 50554], 'temperature': 0.0, 'avg_logprob': -0.25308531457251243, 'compression_ratio': 1.532994923857868, 'no_speech_prob': 0.013941694982349873}, {'id': 1133, 'seek': 474256, 'start': 4746.360000000001, 'end': 4750.120000000001, 'text': ' After this, we jump, okay.', 'tokens': [50554, 2381, 341, 11, 321, 3012, 11, 1392, 13, 50742], 'temperature': 0.0, 'avg_logprob': -0.25308531457251243, 'compression_ratio': 1.532994923857868, 'no_speech_prob': 0.013941694982349873}, {'id': 1134, 'seek': 474256, 'start': 4750.120000000001, 'end': 4754.64, 'text': ' So is this code easy enough to understand, right?', 'tokens': [50742, 407, 307, 341, 3089, 1858, 1547, 281, 1223, 11, 558, 30, 50968], 'temperature': 0.0, 'avg_logprob': -0.25308531457251243, 'compression_ratio': 1.532994923857868, 'no_speech_prob': 0.013941694982349873}, {'id': 1135, 'seek': 474256, 'start': 4754.64, 'end': 4756.64, 'text': ' Not very difficult, right.', 'tokens': [50968, 1726, 588, 2252, 11, 558, 13, 51068], 'temperature': 0.0, 'avg_logprob': -0.25308531457251243, 'compression_ratio': 1.532994923857868, 'no_speech_prob': 0.013941694982349873}, {'id': 1136, 'seek': 474256, 'start': 4756.64, 'end': 4757.64, 'text': ' Not scary.', 'tokens': [51068, 1726, 6958, 13, 51118], 'temperature': 0.0, 'avg_logprob': -0.25308531457251243, 'compression_ratio': 1.532994923857868, 'no_speech_prob': 0.013941694982349873}, {'id': 1137, 'seek': 474256, 'start': 4757.64, 'end': 4763.88, 'text': ' Well, you will see scary assembly code as you go by, but if you take one step at a time,', 'tokens': [51118, 1042, 11, 291, 486, 536, 6958, 12103, 3089, 382, 291, 352, 538, 11, 457, 498, 291, 747, 472, 1823, 412, 257, 565, 11, 51430], 'temperature': 0.0, 'avg_logprob': -0.25308531457251243, 'compression_ratio': 1.532994923857868, 'no_speech_prob': 0.013941694982349873}, {'id': 1138, 'seek': 474256, 'start': 4763.88, 'end': 4766.120000000001, 'text': ' you can actually understand things, okay.', 'tokens': [51430, 291, 393, 767, 1223, 721, 11, 1392, 13, 51542], 'temperature': 0.0, 'avg_logprob': -0.25308531457251243, 'compression_ratio': 1.532994923857868, 'no_speech_prob': 0.013941694982349873}, {'id': 1139, 'seek': 474256, 'start': 4766.120000000001, 'end': 4769.0, 'text': ' Let us move forward.', 'tokens': [51542, 961, 505, 1286, 2128, 13, 51686], 'temperature': 0.0, 'avg_logprob': -0.25308531457251243, 'compression_ratio': 1.532994923857868, 'no_speech_prob': 0.013941694982349873}, {'id': 1140, 'seek': 476900, 'start': 4769.0, 'end': 4773.16, 'text': ' The next thing that we want to see is processor data path and pipelining.', 'tokens': [50364, 440, 958, 551, 300, 321, 528, 281, 536, 307, 15321, 1412, 3100, 293, 8489, 338, 1760, 13, 50572], 'temperature': 0.0, 'avg_logprob': -0.20170713062128745, 'compression_ratio': 1.8016194331983806, 'no_speech_prob': 0.3663816452026367}, {'id': 1141, 'seek': 476900, 'start': 4773.16, 'end': 4776.52, 'text': ' How many of the things that we have discussed so far, you have already seen and you would', 'tokens': [50572, 1012, 867, 295, 264, 721, 300, 321, 362, 7152, 370, 1400, 11, 291, 362, 1217, 1612, 293, 291, 576, 50740], 'temperature': 0.0, 'avg_logprob': -0.20170713062128745, 'compression_ratio': 1.8016194331983806, 'no_speech_prob': 0.3663816452026367}, {'id': 1142, 'seek': 476900, 'start': 4776.52, 'end': 4779.24, 'text': ' have preferred me not doing it here.', 'tokens': [50740, 362, 16494, 385, 406, 884, 309, 510, 13, 50876], 'temperature': 0.0, 'avg_logprob': -0.20170713062128745, 'compression_ratio': 1.8016194331983806, 'no_speech_prob': 0.3663816452026367}, {'id': 1143, 'seek': 476900, 'start': 4779.24, 'end': 4783.96, 'text': ' How many of you have seen whatever we have discussed so far in some form or the other?', 'tokens': [50876, 1012, 867, 295, 291, 362, 1612, 2035, 321, 362, 7152, 370, 1400, 294, 512, 1254, 420, 264, 661, 30, 51112], 'temperature': 0.0, 'avg_logprob': -0.20170713062128745, 'compression_ratio': 1.8016194331983806, 'no_speech_prob': 0.3663816452026367}, {'id': 1144, 'seek': 476900, 'start': 4783.96, 'end': 4785.36, 'text': ' All of you have.', 'tokens': [51112, 1057, 295, 291, 362, 13, 51182], 'temperature': 0.0, 'avg_logprob': -0.20170713062128745, 'compression_ratio': 1.8016194331983806, 'no_speech_prob': 0.3663816452026367}, {'id': 1145, 'seek': 476900, 'start': 4785.36, 'end': 4788.72, 'text': ' How many of you are very clear about it even before this class?', 'tokens': [51182, 1012, 867, 295, 291, 366, 588, 1850, 466, 309, 754, 949, 341, 1508, 30, 51350], 'temperature': 0.0, 'avg_logprob': -0.20170713062128745, 'compression_ratio': 1.8016194331983806, 'no_speech_prob': 0.3663816452026367}, {'id': 1146, 'seek': 476900, 'start': 4788.72, 'end': 4789.72, 'text': ' Okay.', 'tokens': [51350, 1033, 13, 51400], 'temperature': 0.0, 'avg_logprob': -0.20170713062128745, 'compression_ratio': 1.8016194331983806, 'no_speech_prob': 0.3663816452026367}, {'id': 1147, 'seek': 476900, 'start': 4789.72, 'end': 4792.48, 'text': ' You people are being very nice, extremely nice to me.', 'tokens': [51400, 509, 561, 366, 885, 588, 1481, 11, 4664, 1481, 281, 385, 13, 51538], 'temperature': 0.0, 'avg_logprob': -0.20170713062128745, 'compression_ratio': 1.8016194331983806, 'no_speech_prob': 0.3663816452026367}, {'id': 1148, 'seek': 476900, 'start': 4792.48, 'end': 4794.48, 'text': ' Thank you, okay.', 'tokens': [51538, 1044, 291, 11, 1392, 13, 51638], 'temperature': 0.0, 'avg_logprob': -0.20170713062128745, 'compression_ratio': 1.8016194331983806, 'no_speech_prob': 0.3663816452026367}, {'id': 1149, 'seek': 479448, 'start': 4794.48, 'end': 4799.599999999999, 'text': ' So if that has kind of cleared your understanding, I am happy about it, okay.', 'tokens': [50364, 407, 498, 300, 575, 733, 295, 19725, 428, 3701, 11, 286, 669, 2055, 466, 309, 11, 1392, 13, 50620], 'temperature': 0.0, 'avg_logprob': -0.19636183977127075, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.7452685832977295}, {'id': 1150, 'seek': 479448, 'start': 4799.599999999999, 'end': 4804.599999999999, 'text': ' But if you think that I have wasted your time, please do let me know so that at least tomorrow', 'tokens': [50620, 583, 498, 291, 519, 300, 286, 362, 19496, 428, 565, 11, 1767, 360, 718, 385, 458, 370, 300, 412, 1935, 4153, 50870], 'temperature': 0.0, 'avg_logprob': -0.19636183977127075, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.7452685832977295}, {'id': 1151, 'seek': 479448, 'start': 4804.599999999999, 'end': 4807.839999999999, 'text': ' I can, you know, skip certain slides and then move forward.', 'tokens': [50870, 286, 393, 11, 291, 458, 11, 10023, 1629, 9788, 293, 550, 1286, 2128, 13, 51032], 'temperature': 0.0, 'avg_logprob': -0.19636183977127075, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.7452685832977295}, {'id': 1152, 'seek': 479448, 'start': 4807.839999999999, 'end': 4810.78, 'text': ' That is the reason why I keep asking that question.', 'tokens': [51032, 663, 307, 264, 1778, 983, 286, 1066, 3365, 300, 1168, 13, 51179], 'temperature': 0.0, 'avg_logprob': -0.19636183977127075, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.7452685832977295}, {'id': 1153, 'seek': 479448, 'start': 4810.78, 'end': 4813.719999999999, 'text': ' Not that I want to see you to be very nice to me, okay.', 'tokens': [51179, 1726, 300, 286, 528, 281, 536, 291, 281, 312, 588, 1481, 281, 385, 11, 1392, 13, 51326], 'temperature': 0.0, 'avg_logprob': -0.19636183977127075, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.7452685832977295}, {'id': 1154, 'seek': 479448, 'start': 4813.719999999999, 'end': 4816.16, 'text': ' That is really not the purpose, right.', 'tokens': [51326, 663, 307, 534, 406, 264, 4334, 11, 558, 13, 51448], 'temperature': 0.0, 'avg_logprob': -0.19636183977127075, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.7452685832977295}, {'id': 1155, 'seek': 479448, 'start': 4816.16, 'end': 4818.5199999999995, 'text': ' It is for your benefit.', 'tokens': [51448, 467, 307, 337, 428, 5121, 13, 51566], 'temperature': 0.0, 'avg_logprob': -0.19636183977127075, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.7452685832977295}, {'id': 1156, 'seek': 479448, 'start': 4818.5199999999995, 'end': 4823.679999999999, 'text': ' So I should deliver what you need, not what I know, right.', 'tokens': [51566, 407, 286, 820, 4239, 437, 291, 643, 11, 406, 437, 286, 458, 11, 558, 13, 51824], 'temperature': 0.0, 'avg_logprob': -0.19636183977127075, 'compression_ratio': 1.6923076923076923, 'no_speech_prob': 0.7452685832977295}, {'id': 1157, 'seek': 482368, 'start': 4823.68, 'end': 4825.12, 'text': ' Okay, all right.', 'tokens': [50364, 1033, 11, 439, 558, 13, 50436], 'temperature': 0.0, 'avg_logprob': -0.2831151017518801, 'compression_ratio': 1.708, 'no_speech_prob': 0.4841506779193878}, {'id': 1158, 'seek': 482368, 'start': 4825.12, 'end': 4830.360000000001, 'text': ' Let us quickly see what about processor, data path and other things.', 'tokens': [50436, 961, 505, 2661, 536, 437, 466, 15321, 11, 1412, 3100, 293, 661, 721, 13, 50698], 'temperature': 0.0, 'avg_logprob': -0.2831151017518801, 'compression_ratio': 1.708, 'no_speech_prob': 0.4841506779193878}, {'id': 1159, 'seek': 482368, 'start': 4830.360000000001, 'end': 4835.04, 'text': ' So we are going to talk about pipelined execution and in pipelined execution, you will see that', 'tokens': [50698, 407, 321, 366, 516, 281, 751, 466, 8489, 338, 2001, 15058, 293, 294, 8489, 338, 2001, 15058, 11, 291, 486, 536, 300, 50932], 'temperature': 0.0, 'avg_logprob': -0.2831151017518801, 'compression_ratio': 1.708, 'no_speech_prob': 0.4841506779193878}, {'id': 1160, 'seek': 482368, 'start': 4835.04, 'end': 4842.08, 'text': ' the instruction execution is divided into five phases, instruction fetch, decode, right,', 'tokens': [50932, 264, 10951, 15058, 307, 6666, 666, 1732, 18764, 11, 10951, 23673, 11, 979, 1429, 11, 558, 11, 51284], 'temperature': 0.0, 'avg_logprob': -0.2831151017518801, 'compression_ratio': 1.708, 'no_speech_prob': 0.4841506779193878}, {'id': 1161, 'seek': 482368, 'start': 4842.08, 'end': 4844.72, 'text': ' execute memory and write back.', 'tokens': [51284, 14483, 4675, 293, 2464, 646, 13, 51416], 'temperature': 0.0, 'avg_logprob': -0.2831151017518801, 'compression_ratio': 1.708, 'no_speech_prob': 0.4841506779193878}, {'id': 1162, 'seek': 482368, 'start': 4844.72, 'end': 4846.4800000000005, 'text': ' Why do we do pipelined execution?', 'tokens': [51416, 1545, 360, 321, 360, 8489, 338, 2001, 15058, 30, 51504], 'temperature': 0.0, 'avg_logprob': -0.2831151017518801, 'compression_ratio': 1.708, 'no_speech_prob': 0.4841506779193878}, {'id': 1163, 'seek': 482368, 'start': 4846.4800000000005, 'end': 4852.08, 'text': ' It is because we want to improve the throughput and the stages which can do while one stage', 'tokens': [51504, 467, 307, 570, 321, 528, 281, 3470, 264, 44629, 293, 264, 10232, 597, 393, 360, 1339, 472, 3233, 51784], 'temperature': 0.0, 'avg_logprob': -0.2831151017518801, 'compression_ratio': 1.708, 'no_speech_prob': 0.4841506779193878}, {'id': 1164, 'seek': 485208, 'start': 4852.08, 'end': 4857.5599999999995, 'text': ' is doing decode, the other stage can do instruction fetch of the next instruction and another', 'tokens': [50364, 307, 884, 979, 1429, 11, 264, 661, 3233, 393, 360, 10951, 23673, 295, 264, 958, 10951, 293, 1071, 50638], 'temperature': 0.0, 'avg_logprob': -0.14821478525797527, 'compression_ratio': 1.8872549019607843, 'no_speech_prob': 0.05606083571910858}, {'id': 1165, 'seek': 485208, 'start': 4857.5599999999995, 'end': 4862.8, 'text': ' stage can do the execute of the previous instruction and so on and so forth, okay.', 'tokens': [50638, 3233, 393, 360, 264, 14483, 295, 264, 3894, 10951, 293, 370, 322, 293, 370, 5220, 11, 1392, 13, 50900], 'temperature': 0.0, 'avg_logprob': -0.14821478525797527, 'compression_ratio': 1.8872549019607843, 'no_speech_prob': 0.05606083571910858}, {'id': 1166, 'seek': 485208, 'start': 4862.8, 'end': 4868.0, 'text': ' Let us just quickly look at how the processor pipeline would look like and what it does', 'tokens': [50900, 961, 505, 445, 2661, 574, 412, 577, 264, 15321, 15517, 576, 574, 411, 293, 437, 309, 775, 51160], 'temperature': 0.0, 'avg_logprob': -0.14821478525797527, 'compression_ratio': 1.8872549019607843, 'no_speech_prob': 0.05606083571910858}, {'id': 1167, 'seek': 485208, 'start': 4868.0, 'end': 4872.48, 'text': ' in each one of these stages, right.', 'tokens': [51160, 294, 1184, 472, 295, 613, 10232, 11, 558, 13, 51384], 'temperature': 0.0, 'avg_logprob': -0.14821478525797527, 'compression_ratio': 1.8872549019607843, 'no_speech_prob': 0.05606083571910858}, {'id': 1168, 'seek': 485208, 'start': 4872.48, 'end': 4877.68, 'text': ' In the instruction fetch phase, right, you are essentially fetching the instruction.', 'tokens': [51384, 682, 264, 10951, 23673, 5574, 11, 558, 11, 291, 366, 4476, 23673, 278, 264, 10951, 13, 51644], 'temperature': 0.0, 'avg_logprob': -0.14821478525797527, 'compression_ratio': 1.8872549019607843, 'no_speech_prob': 0.05606083571910858}, {'id': 1169, 'seek': 487768, 'start': 4877.68, 'end': 4883.240000000001, 'text': ' As we mentioned earlier, PC cast the next instruction which has to be fetched.', 'tokens': [50364, 1018, 321, 2835, 3071, 11, 6465, 4193, 264, 958, 10951, 597, 575, 281, 312, 23673, 292, 13, 50642], 'temperature': 0.0, 'avg_logprob': -0.1624279735244323, 'compression_ratio': 1.9823008849557522, 'no_speech_prob': 0.13472086191177368}, {'id': 1170, 'seek': 487768, 'start': 4883.240000000001, 'end': 4890.08, 'text': ' So use the contents of PC, access the memory and fetch the instruction.', 'tokens': [50642, 407, 764, 264, 15768, 295, 6465, 11, 2105, 264, 4675, 293, 23673, 264, 10951, 13, 50984], 'temperature': 0.0, 'avg_logprob': -0.1624279735244323, 'compression_ratio': 1.9823008849557522, 'no_speech_prob': 0.13472086191177368}, {'id': 1171, 'seek': 487768, 'start': 4890.08, 'end': 4894.52, 'text': ' The instruction that is going to be fetched is going to be put into one of these buffers', 'tokens': [50984, 440, 10951, 300, 307, 516, 281, 312, 23673, 292, 307, 516, 281, 312, 829, 666, 472, 295, 613, 9204, 433, 51206], 'temperature': 0.0, 'avg_logprob': -0.1624279735244323, 'compression_ratio': 1.9823008849557522, 'no_speech_prob': 0.13472086191177368}, {'id': 1172, 'seek': 487768, 'start': 4894.52, 'end': 4900.52, 'text': ' which is there in this set of buffers which is called the instruction register, right.', 'tokens': [51206, 597, 307, 456, 294, 341, 992, 295, 9204, 433, 597, 307, 1219, 264, 10951, 7280, 11, 558, 13, 51506], 'temperature': 0.0, 'avg_logprob': -0.1624279735244323, 'compression_ratio': 1.9823008849557522, 'no_speech_prob': 0.13472086191177368}, {'id': 1173, 'seek': 487768, 'start': 4900.52, 'end': 4905.4400000000005, 'text': ' So if you fetch the memory location pointed by the program counter, that is actually the', 'tokens': [51506, 407, 498, 291, 23673, 264, 4675, 4914, 10932, 538, 264, 1461, 5682, 11, 300, 307, 767, 264, 51752], 'temperature': 0.0, 'avg_logprob': -0.1624279735244323, 'compression_ratio': 1.9823008849557522, 'no_speech_prob': 0.13472086191177368}, {'id': 1174, 'seek': 487768, 'start': 4905.4400000000005, 'end': 4906.92, 'text': ' next instruction to be executed.', 'tokens': [51752, 958, 10951, 281, 312, 17577, 13, 51826], 'temperature': 0.0, 'avg_logprob': -0.1624279735244323, 'compression_ratio': 1.9823008849557522, 'no_speech_prob': 0.13472086191177368}, {'id': 1175, 'seek': 490692, 'start': 4907.4800000000005, 'end': 4912.84, 'text': ' It could be an add instruction or it could be a jump instruction or it could be a subtract', 'tokens': [50392, 467, 727, 312, 364, 909, 10951, 420, 309, 727, 312, 257, 3012, 10951, 420, 309, 727, 312, 257, 16390, 50660], 'temperature': 0.0, 'avg_logprob': -0.18261160453160605, 'compression_ratio': 1.9585253456221199, 'no_speech_prob': 0.006248709745705128}, {'id': 1176, 'seek': 490692, 'start': 4912.84, 'end': 4917.88, 'text': ' instruction or whatever it is, that instruction that you have fetched is being put into the', 'tokens': [50660, 10951, 420, 2035, 309, 307, 11, 300, 10951, 300, 291, 362, 23673, 292, 307, 885, 829, 666, 264, 50912], 'temperature': 0.0, 'avg_logprob': -0.18261160453160605, 'compression_ratio': 1.9585253456221199, 'no_speech_prob': 0.006248709745705128}, {'id': 1177, 'seek': 490692, 'start': 4917.88, 'end': 4921.6, 'text': ' instruction register and you are going to execute that instruction.', 'tokens': [50912, 10951, 7280, 293, 291, 366, 516, 281, 14483, 300, 10951, 13, 51098], 'temperature': 0.0, 'avg_logprob': -0.18261160453160605, 'compression_ratio': 1.9585253456221199, 'no_speech_prob': 0.006248709745705128}, {'id': 1178, 'seek': 490692, 'start': 4921.6, 'end': 4929.04, 'text': ' But at the same time, you take the program counter value incremented by 4, right, and', 'tokens': [51098, 583, 412, 264, 912, 565, 11, 291, 747, 264, 1461, 5682, 2158, 1946, 14684, 538, 1017, 11, 558, 11, 293, 51470], 'temperature': 0.0, 'avg_logprob': -0.18261160453160605, 'compression_ratio': 1.9585253456221199, 'no_speech_prob': 0.006248709745705128}, {'id': 1179, 'seek': 490692, 'start': 4929.04, 'end': 4935.32, 'text': ' this might eventually go back into the program counter or something else can go into the', 'tokens': [51470, 341, 1062, 4728, 352, 646, 666, 264, 1461, 5682, 420, 746, 1646, 393, 352, 666, 264, 51784], 'temperature': 0.0, 'avg_logprob': -0.18261160453160605, 'compression_ratio': 1.9585253456221199, 'no_speech_prob': 0.006248709745705128}, {'id': 1180, 'seek': 493532, 'start': 4935.32, 'end': 4937.84, 'text': ' program counter, right.', 'tokens': [50364, 1461, 5682, 11, 558, 13, 50490], 'temperature': 0.0, 'avg_logprob': -0.18146117140607135, 'compression_ratio': 1.7628865979381443, 'no_speech_prob': 0.024238869547843933}, {'id': 1181, 'seek': 493532, 'start': 4937.84, 'end': 4939.88, 'text': ' So this is a multiplexer.', 'tokens': [50490, 407, 341, 307, 257, 3311, 2021, 260, 13, 50592], 'temperature': 0.0, 'avg_logprob': -0.18146117140607135, 'compression_ratio': 1.7628865979381443, 'no_speech_prob': 0.024238869547843933}, {'id': 1182, 'seek': 493532, 'start': 4939.88, 'end': 4945.759999999999, 'text': ' The multiplexer is either going to take PC plus 4 or something else and then put that', 'tokens': [50592, 440, 3311, 2021, 260, 307, 2139, 516, 281, 747, 6465, 1804, 1017, 420, 746, 1646, 293, 550, 829, 300, 50886], 'temperature': 0.0, 'avg_logprob': -0.18146117140607135, 'compression_ratio': 1.7628865979381443, 'no_speech_prob': 0.024238869547843933}, {'id': 1183, 'seek': 493532, 'start': 4945.759999999999, 'end': 4949.5599999999995, 'text': ' value back into the program counter, right.', 'tokens': [50886, 2158, 646, 666, 264, 1461, 5682, 11, 558, 13, 51076], 'temperature': 0.0, 'avg_logprob': -0.18146117140607135, 'compression_ratio': 1.7628865979381443, 'no_speech_prob': 0.024238869547843933}, {'id': 1184, 'seek': 493532, 'start': 4949.5599999999995, 'end': 4956.5599999999995, 'text': ' That something plus, sorry, that something could be for branch instructions or control', 'tokens': [51076, 663, 746, 1804, 11, 2597, 11, 300, 746, 727, 312, 337, 9819, 9415, 420, 1969, 51426], 'temperature': 0.0, 'avg_logprob': -0.18146117140607135, 'compression_ratio': 1.7628865979381443, 'no_speech_prob': 0.024238869547843933}, {'id': 1185, 'seek': 493532, 'start': 4956.5599999999995, 'end': 4961.62, 'text': ' transfer instructions where the program counter is getting affected, right.', 'tokens': [51426, 5003, 9415, 689, 264, 1461, 5682, 307, 1242, 8028, 11, 558, 13, 51679], 'temperature': 0.0, 'avg_logprob': -0.18146117140607135, 'compression_ratio': 1.7628865979381443, 'no_speech_prob': 0.024238869547843933}, {'id': 1186, 'seek': 496162, 'start': 4961.62, 'end': 4967.34, 'text': ' So we saw that in the case of a branch instruction, PC plus 4 is added with something, right.', 'tokens': [50364, 407, 321, 1866, 300, 294, 264, 1389, 295, 257, 9819, 10951, 11, 6465, 1804, 1017, 307, 3869, 365, 746, 11, 558, 13, 50650], 'temperature': 0.0, 'avg_logprob': -0.1281830406188965, 'compression_ratio': 1.7167381974248928, 'no_speech_prob': 0.022069666534662247}, {'id': 1187, 'seek': 496162, 'start': 4967.34, 'end': 4971.46, 'text': ' So that might happen, okay.', 'tokens': [50650, 407, 300, 1062, 1051, 11, 1392, 13, 50856], 'temperature': 0.0, 'avg_logprob': -0.1281830406188965, 'compression_ratio': 1.7167381974248928, 'no_speech_prob': 0.022069666534662247}, {'id': 1188, 'seek': 496162, 'start': 4971.46, 'end': 4972.46, 'text': ' Let us skip that.', 'tokens': [50856, 961, 505, 10023, 300, 13, 50906], 'temperature': 0.0, 'avg_logprob': -0.1281830406188965, 'compression_ratio': 1.7167381974248928, 'no_speech_prob': 0.022069666534662247}, {'id': 1189, 'seek': 496162, 'start': 4972.46, 'end': 4974.3, 'text': ' Let us go to this side.', 'tokens': [50906, 961, 505, 352, 281, 341, 1252, 13, 50998], 'temperature': 0.0, 'avg_logprob': -0.1281830406188965, 'compression_ratio': 1.7167381974248928, 'no_speech_prob': 0.022069666534662247}, {'id': 1190, 'seek': 496162, 'start': 4974.3, 'end': 4977.94, 'text': ' So typically in an instruction fetch, these two activities happen.', 'tokens': [50998, 407, 5850, 294, 364, 10951, 23673, 11, 613, 732, 5354, 1051, 13, 51180], 'temperature': 0.0, 'avg_logprob': -0.1281830406188965, 'compression_ratio': 1.7167381974248928, 'no_speech_prob': 0.022069666534662247}, {'id': 1191, 'seek': 496162, 'start': 4977.94, 'end': 4983.3, 'text': ' That means that you fetch the instruction, you increment the program counter, right.', 'tokens': [51180, 663, 1355, 300, 291, 23673, 264, 10951, 11, 291, 26200, 264, 1461, 5682, 11, 558, 13, 51448], 'temperature': 0.0, 'avg_logprob': -0.1281830406188965, 'compression_ratio': 1.7167381974248928, 'no_speech_prob': 0.022069666534662247}, {'id': 1192, 'seek': 496162, 'start': 4983.3, 'end': 4987.86, 'text': ' That incremented value of program counter is also available in a small register over', 'tokens': [51448, 663, 1946, 14684, 2158, 295, 1461, 5682, 307, 611, 2435, 294, 257, 1359, 7280, 670, 51676], 'temperature': 0.0, 'avg_logprob': -0.1281830406188965, 'compression_ratio': 1.7167381974248928, 'no_speech_prob': 0.022069666534662247}, {'id': 1193, 'seek': 498786, 'start': 4988.099999999999, 'end': 4993.9, 'text': ' here, internal register over here in the buffer and we will call that as the next program', 'tokens': [50376, 510, 11, 6920, 7280, 670, 510, 294, 264, 21762, 293, 321, 486, 818, 300, 382, 264, 958, 1461, 50666], 'temperature': 0.0, 'avg_logprob': -0.2606672907984534, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.11488272994756699}, {'id': 1194, 'seek': 498786, 'start': 4993.9, 'end': 4996.9, 'text': ' counter, NPC, okay.', 'tokens': [50666, 5682, 11, 28787, 11, 1392, 13, 50816], 'temperature': 0.0, 'avg_logprob': -0.2606672907984534, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.11488272994756699}, {'id': 1195, 'seek': 498786, 'start': 4996.9, 'end': 4999.9, 'text': ' All right, okay.', 'tokens': [50816, 1057, 558, 11, 1392, 13, 50966], 'temperature': 0.0, 'avg_logprob': -0.2606672907984534, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.11488272994756699}, {'id': 1196, 'seek': 498786, 'start': 4999.9, 'end': 5002.9, 'text': ' Let us see.', 'tokens': [50966, 961, 505, 536, 13, 51116], 'temperature': 0.0, 'avg_logprob': -0.2606672907984534, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.11488272994756699}, {'id': 1197, 'seek': 498786, 'start': 5002.9, 'end': 5009.42, 'text': ' Then depending on what your instruction is, you use certain fields of that instruction', 'tokens': [51116, 1396, 5413, 322, 437, 428, 10951, 307, 11, 291, 764, 1629, 7909, 295, 300, 10951, 51442], 'temperature': 0.0, 'avg_logprob': -0.2606672907984534, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.11488272994756699}, {'id': 1198, 'seek': 498786, 'start': 5009.42, 'end': 5015.5, 'text': ' and then use them to read your first source operand, second source operand and so on,', 'tokens': [51442, 293, 550, 764, 552, 281, 1401, 428, 700, 4009, 2208, 474, 11, 1150, 4009, 2208, 474, 293, 370, 322, 11, 51746], 'temperature': 0.0, 'avg_logprob': -0.2606672907984534, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.11488272994756699}, {'id': 1199, 'seek': 498786, 'start': 5015.5, 'end': 5016.5, 'text': ' right.', 'tokens': [51746, 558, 13, 51796], 'temperature': 0.0, 'avg_logprob': -0.2606672907984534, 'compression_ratio': 1.5820895522388059, 'no_speech_prob': 0.11488272994756699}, {'id': 1200, 'seek': 501650, 'start': 5017.14, 'end': 5023.7, 'text': ' And thus source operands are going to be read and put it into some buffer over there.', 'tokens': [50396, 400, 8807, 4009, 2208, 2967, 366, 516, 281, 312, 1401, 293, 829, 309, 666, 512, 21762, 670, 456, 13, 50724], 'temperature': 0.0, 'avg_logprob': -0.1701117924281529, 'compression_ratio': 1.8232558139534885, 'no_speech_prob': 0.0009895042749121785}, {'id': 1201, 'seek': 501650, 'start': 5023.7, 'end': 5029.3, 'text': ' If your instruction has an immediate constant, that immediate constant, some fields of your', 'tokens': [50724, 759, 428, 10951, 575, 364, 11629, 5754, 11, 300, 11629, 5754, 11, 512, 7909, 295, 428, 51004], 'temperature': 0.0, 'avg_logprob': -0.1701117924281529, 'compression_ratio': 1.8232558139534885, 'no_speech_prob': 0.0009895042749121785}, {'id': 1202, 'seek': 501650, 'start': 5029.3, 'end': 5034.82, 'text': ' instruction, which is again taken from your instruction register is going to be taken', 'tokens': [51004, 10951, 11, 597, 307, 797, 2726, 490, 428, 10951, 7280, 307, 516, 281, 312, 2726, 51280], 'temperature': 0.0, 'avg_logprob': -0.1701117924281529, 'compression_ratio': 1.8232558139534885, 'no_speech_prob': 0.0009895042749121785}, {'id': 1203, 'seek': 501650, 'start': 5034.82, 'end': 5037.86, 'text': ' and then sign extended, okay.', 'tokens': [51280, 293, 550, 1465, 10913, 11, 1392, 13, 51432], 'temperature': 0.0, 'avg_logprob': -0.1701117924281529, 'compression_ratio': 1.8232558139534885, 'no_speech_prob': 0.0009895042749121785}, {'id': 1204, 'seek': 501650, 'start': 5037.86, 'end': 5042.86, 'text': ' Now during the execution phase, you are going to take these as operands and perform the', 'tokens': [51432, 823, 1830, 264, 15058, 5574, 11, 291, 366, 516, 281, 747, 613, 382, 2208, 2967, 293, 2042, 264, 51682], 'temperature': 0.0, 'avg_logprob': -0.1701117924281529, 'compression_ratio': 1.8232558139534885, 'no_speech_prob': 0.0009895042749121785}, {'id': 1205, 'seek': 501650, 'start': 5042.86, 'end': 5043.86, 'text': ' operation.', 'tokens': [51682, 6916, 13, 51732], 'temperature': 0.0, 'avg_logprob': -0.1701117924281529, 'compression_ratio': 1.8232558139534885, 'no_speech_prob': 0.0009895042749121785}, {'id': 1206, 'seek': 504386, 'start': 5044.219999999999, 'end': 5049.38, 'text': ' So if it is an arithmetic and logic instruction, then you perform either register 1 plus register', 'tokens': [50382, 407, 498, 309, 307, 364, 42973, 293, 9952, 10951, 11, 550, 291, 2042, 2139, 7280, 502, 1804, 7280, 50640], 'temperature': 0.0, 'avg_logprob': -0.15567369584913376, 'compression_ratio': 1.8090452261306533, 'no_speech_prob': 0.0043012225069105625}, {'id': 1207, 'seek': 504386, 'start': 5049.38, 'end': 5056.0199999999995, 'text': ' 2 or you perform register 1 plus immediate constant, that kind of an operation.', 'tokens': [50640, 568, 420, 291, 2042, 7280, 502, 1804, 11629, 5754, 11, 300, 733, 295, 364, 6916, 13, 50972], 'temperature': 0.0, 'avg_logprob': -0.15567369584913376, 'compression_ratio': 1.8090452261306533, 'no_speech_prob': 0.0043012225069105625}, {'id': 1208, 'seek': 504386, 'start': 5056.0199999999995, 'end': 5061.74, 'text': ' So depending on what your instruction is, you perform that operation with the appropriate', 'tokens': [50972, 407, 5413, 322, 437, 428, 10951, 307, 11, 291, 2042, 300, 6916, 365, 264, 6854, 51258], 'temperature': 0.0, 'avg_logprob': -0.15567369584913376, 'compression_ratio': 1.8090452261306533, 'no_speech_prob': 0.0043012225069105625}, {'id': 1209, 'seek': 504386, 'start': 5061.74, 'end': 5068.86, 'text': ' operands which are available as small registers, internal registers in these buffers, right.', 'tokens': [51258, 2208, 2967, 597, 366, 2435, 382, 1359, 38351, 11, 6920, 38351, 294, 613, 9204, 433, 11, 558, 13, 51614], 'temperature': 0.0, 'avg_logprob': -0.15567369584913376, 'compression_ratio': 1.8090452261306533, 'no_speech_prob': 0.0043012225069105625}, {'id': 1210, 'seek': 506886, 'start': 5068.86, 'end': 5070.54, 'text': ' So once again let me repeat.', 'tokens': [50364, 407, 1564, 797, 718, 385, 7149, 13, 50448], 'temperature': 0.0, 'avg_logprob': -0.1325479641295316, 'compression_ratio': 1.9872881355932204, 'no_speech_prob': 0.02233515866100788}, {'id': 1211, 'seek': 506886, 'start': 5070.54, 'end': 5075.74, 'text': ' In the instruction decode and operand fetch phase, the instruction is already available', 'tokens': [50448, 682, 264, 10951, 979, 1429, 293, 2208, 474, 23673, 5574, 11, 264, 10951, 307, 1217, 2435, 50708], 'temperature': 0.0, 'avg_logprob': -0.1325479641295316, 'compression_ratio': 1.9872881355932204, 'no_speech_prob': 0.02233515866100788}, {'id': 1212, 'seek': 506886, 'start': 5075.74, 'end': 5077.62, 'text': ' in the instruction register.', 'tokens': [50708, 294, 264, 10951, 7280, 13, 50802], 'temperature': 0.0, 'avg_logprob': -0.1325479641295316, 'compression_ratio': 1.9872881355932204, 'no_speech_prob': 0.02233515866100788}, {'id': 1213, 'seek': 506886, 'start': 5077.62, 'end': 5080.54, 'text': ' From there you find out what is the first source operand.', 'tokens': [50802, 3358, 456, 291, 915, 484, 437, 307, 264, 700, 4009, 2208, 474, 13, 50948], 'temperature': 0.0, 'avg_logprob': -0.1325479641295316, 'compression_ratio': 1.9872881355932204, 'no_speech_prob': 0.02233515866100788}, {'id': 1214, 'seek': 506886, 'start': 5080.54, 'end': 5084.94, 'text': ' You can actually fetch the contents of the first source operand, right, that particular', 'tokens': [50948, 509, 393, 767, 23673, 264, 15768, 295, 264, 700, 4009, 2208, 474, 11, 558, 11, 300, 1729, 51168], 'temperature': 0.0, 'avg_logprob': -0.1325479641295316, 'compression_ratio': 1.9872881355932204, 'no_speech_prob': 0.02233515866100788}, {'id': 1215, 'seek': 506886, 'start': 5084.94, 'end': 5088.54, 'text': ' register, put it into another internal register over here.', 'tokens': [51168, 7280, 11, 829, 309, 666, 1071, 6920, 7280, 670, 510, 13, 51348], 'temperature': 0.0, 'avg_logprob': -0.1325479641295316, 'compression_ratio': 1.9872881355932204, 'no_speech_prob': 0.02233515866100788}, {'id': 1216, 'seek': 506886, 'start': 5088.54, 'end': 5093.46, 'text': ' If you have a second register, second source operand, you can fetch that register, put', 'tokens': [51348, 759, 291, 362, 257, 1150, 7280, 11, 1150, 4009, 2208, 474, 11, 291, 393, 23673, 300, 7280, 11, 829, 51594], 'temperature': 0.0, 'avg_logprob': -0.1325479641295316, 'compression_ratio': 1.9872881355932204, 'no_speech_prob': 0.02233515866100788}, {'id': 1217, 'seek': 506886, 'start': 5093.46, 'end': 5095.339999999999, 'text': ' it as an internal operand here.', 'tokens': [51594, 309, 382, 364, 6920, 2208, 474, 510, 13, 51688], 'temperature': 0.0, 'avg_logprob': -0.1325479641295316, 'compression_ratio': 1.9872881355932204, 'no_speech_prob': 0.02233515866100788}, {'id': 1218, 'seek': 509534, 'start': 5095.34, 'end': 5100.06, 'text': ' If you do not have a second source operand but an immediate constant that is sign extended,', 'tokens': [50364, 759, 291, 360, 406, 362, 257, 1150, 4009, 2208, 474, 457, 364, 11629, 5754, 300, 307, 1465, 10913, 11, 50600], 'temperature': 0.0, 'avg_logprob': -0.15961489470108695, 'compression_ratio': 1.8807692307692307, 'no_speech_prob': 0.0062948670238256454}, {'id': 1219, 'seek': 509534, 'start': 5100.06, 'end': 5103.16, 'text': ' put as a register over here, internal register over here.', 'tokens': [50600, 829, 382, 257, 7280, 670, 510, 11, 6920, 7280, 670, 510, 13, 50755], 'temperature': 0.0, 'avg_logprob': -0.15961489470108695, 'compression_ratio': 1.8807692307692307, 'no_speech_prob': 0.0062948670238256454}, {'id': 1220, 'seek': 509534, 'start': 5103.16, 'end': 5109.54, 'text': ' So the operands for your operation are now available in these internal registers in this', 'tokens': [50755, 407, 264, 2208, 2967, 337, 428, 6916, 366, 586, 2435, 294, 613, 6920, 38351, 294, 341, 51074], 'temperature': 0.0, 'avg_logprob': -0.15961489470108695, 'compression_ratio': 1.8807692307692307, 'no_speech_prob': 0.0062948670238256454}, {'id': 1221, 'seek': 509534, 'start': 5109.54, 'end': 5111.5, 'text': ' buffer, correct.', 'tokens': [51074, 21762, 11, 3006, 13, 51172], 'temperature': 0.0, 'avg_logprob': -0.15961489470108695, 'compression_ratio': 1.8807692307692307, 'no_speech_prob': 0.0062948670238256454}, {'id': 1222, 'seek': 509534, 'start': 5111.5, 'end': 5116.14, 'text': ' And those operands are going to be used and you perform the necessary operations over', 'tokens': [51172, 400, 729, 2208, 2967, 366, 516, 281, 312, 1143, 293, 291, 2042, 264, 4818, 7705, 670, 51404], 'temperature': 0.0, 'avg_logprob': -0.15961489470108695, 'compression_ratio': 1.8807692307692307, 'no_speech_prob': 0.0062948670238256454}, {'id': 1223, 'seek': 509534, 'start': 5116.14, 'end': 5117.14, 'text': ' there.', 'tokens': [51404, 456, 13, 51454], 'temperature': 0.0, 'avg_logprob': -0.15961489470108695, 'compression_ratio': 1.8807692307692307, 'no_speech_prob': 0.0062948670238256454}, {'id': 1224, 'seek': 509534, 'start': 5117.14, 'end': 5119.74, 'text': ' This is in case of arithmetic and logic operations.', 'tokens': [51454, 639, 307, 294, 1389, 295, 42973, 293, 9952, 7705, 13, 51584], 'temperature': 0.0, 'avg_logprob': -0.15961489470108695, 'compression_ratio': 1.8807692307692307, 'no_speech_prob': 0.0062948670238256454}, {'id': 1225, 'seek': 509534, 'start': 5119.74, 'end': 5125.22, 'text': ' If you have a load store instruction, for example, in a load store instruction, remember', 'tokens': [51584, 759, 291, 362, 257, 3677, 3531, 10951, 11, 337, 1365, 11, 294, 257, 3677, 3531, 10951, 11, 1604, 51858], 'temperature': 0.0, 'avg_logprob': -0.15961489470108695, 'compression_ratio': 1.8807692307692307, 'no_speech_prob': 0.0062948670238256454}, {'id': 1226, 'seek': 512522, 'start': 5125.22, 'end': 5129.42, 'text': ' that your operand is in memory.', 'tokens': [50364, 300, 428, 2208, 474, 307, 294, 4675, 13, 50574], 'temperature': 0.0, 'avg_logprob': -0.1738524003462358, 'compression_ratio': 2.1082474226804124, 'no_speech_prob': 0.006655847653746605}, {'id': 1227, 'seek': 512522, 'start': 5129.42, 'end': 5133.14, 'text': ' And for that you need to compute the address of that memory location.', 'tokens': [50574, 400, 337, 300, 291, 643, 281, 14722, 264, 2985, 295, 300, 4675, 4914, 13, 50760], 'temperature': 0.0, 'avg_logprob': -0.1738524003462358, 'compression_ratio': 2.1082474226804124, 'no_speech_prob': 0.006655847653746605}, {'id': 1228, 'seek': 512522, 'start': 5133.14, 'end': 5138.860000000001, 'text': ' Address of that memory location is specified in the displacement addressing mode.', 'tokens': [50760, 5349, 735, 295, 300, 4675, 4914, 307, 22206, 294, 264, 21899, 14329, 4391, 13, 51046], 'temperature': 0.0, 'avg_logprob': -0.1738524003462358, 'compression_ratio': 2.1082474226804124, 'no_speech_prob': 0.006655847653746605}, {'id': 1229, 'seek': 512522, 'start': 5138.860000000001, 'end': 5144.18, 'text': ' And in the displacement addressing mode you need to take the value of a register and add', 'tokens': [51046, 400, 294, 264, 21899, 14329, 4391, 291, 643, 281, 747, 264, 2158, 295, 257, 7280, 293, 909, 51312], 'temperature': 0.0, 'avg_logprob': -0.1738524003462358, 'compression_ratio': 2.1082474226804124, 'no_speech_prob': 0.006655847653746605}, {'id': 1230, 'seek': 512522, 'start': 5144.18, 'end': 5146.7, 'text': ' the offset value to it.', 'tokens': [51312, 264, 18687, 2158, 281, 309, 13, 51438], 'temperature': 0.0, 'avg_logprob': -0.1738524003462358, 'compression_ratio': 2.1082474226804124, 'no_speech_prob': 0.006655847653746605}, {'id': 1231, 'seek': 512522, 'start': 5146.7, 'end': 5150.14, 'text': ' The value of the register is available as one of the source operand.', 'tokens': [51438, 440, 2158, 295, 264, 7280, 307, 2435, 382, 472, 295, 264, 4009, 2208, 474, 13, 51610], 'temperature': 0.0, 'avg_logprob': -0.1738524003462358, 'compression_ratio': 2.1082474226804124, 'no_speech_prob': 0.006655847653746605}, {'id': 1232, 'seek': 512522, 'start': 5150.14, 'end': 5153.9400000000005, 'text': ' The offset is available as a constant here.', 'tokens': [51610, 440, 18687, 307, 2435, 382, 257, 5754, 510, 13, 51800], 'temperature': 0.0, 'avg_logprob': -0.1738524003462358, 'compression_ratio': 2.1082474226804124, 'no_speech_prob': 0.006655847653746605}, {'id': 1233, 'seek': 515394, 'start': 5153.94, 'end': 5158.5, 'text': ' You add them up, that gives you the contents, the address of the memory location, not the', 'tokens': [50364, 509, 909, 552, 493, 11, 300, 2709, 291, 264, 15768, 11, 264, 2985, 295, 264, 4675, 4914, 11, 406, 264, 50592], 'temperature': 0.0, 'avg_logprob': -0.17765489688589553, 'compression_ratio': 1.9571984435797665, 'no_speech_prob': 0.2242593914270401}, {'id': 1234, 'seek': 515394, 'start': 5158.5, 'end': 5162.139999999999, 'text': ' content, the address of that memory location, right.', 'tokens': [50592, 2701, 11, 264, 2985, 295, 300, 4675, 4914, 11, 558, 13, 50774], 'temperature': 0.0, 'avg_logprob': -0.17765489688589553, 'compression_ratio': 1.9571984435797665, 'no_speech_prob': 0.2242593914270401}, {'id': 1235, 'seek': 515394, 'start': 5162.139999999999, 'end': 5167.0599999999995, 'text': ' If it is a branch instruction, conditional branch instruction, correct, you are going', 'tokens': [50774, 759, 309, 307, 257, 9819, 10951, 11, 27708, 9819, 10951, 11, 3006, 11, 291, 366, 516, 51020], 'temperature': 0.0, 'avg_logprob': -0.17765489688589553, 'compression_ratio': 1.9571984435797665, 'no_speech_prob': 0.2242593914270401}, {'id': 1236, 'seek': 515394, 'start': 5167.0599999999995, 'end': 5171.9, 'text': ' to check whether a is greater than b or a is less than b, okay.', 'tokens': [51020, 281, 1520, 1968, 257, 307, 5044, 813, 272, 420, 257, 307, 1570, 813, 272, 11, 1392, 13, 51262], 'temperature': 0.0, 'avg_logprob': -0.17765489688589553, 'compression_ratio': 1.9571984435797665, 'no_speech_prob': 0.2242593914270401}, {'id': 1237, 'seek': 515394, 'start': 5171.9, 'end': 5175.74, 'text': ' That needs to be done in arithmetic and logic unit but for the time being let us not worry', 'tokens': [51262, 663, 2203, 281, 312, 1096, 294, 42973, 293, 9952, 4985, 457, 337, 264, 565, 885, 718, 505, 406, 3292, 51454], 'temperature': 0.0, 'avg_logprob': -0.17765489688589553, 'compression_ratio': 1.9571984435797665, 'no_speech_prob': 0.2242593914270401}, {'id': 1238, 'seek': 515394, 'start': 5175.74, 'end': 5178.46, 'text': ' how exactly it is being done.', 'tokens': [51454, 577, 2293, 309, 307, 885, 1096, 13, 51590], 'temperature': 0.0, 'avg_logprob': -0.17765489688589553, 'compression_ratio': 1.9571984435797665, 'no_speech_prob': 0.2242593914270401}, {'id': 1239, 'seek': 515394, 'start': 5178.46, 'end': 5183.179999999999, 'text': ' Additionally if it is a conditional branch instruction, you need to calculate what should', 'tokens': [51590, 19927, 498, 309, 307, 257, 27708, 9819, 10951, 11, 291, 643, 281, 8873, 437, 820, 51826], 'temperature': 0.0, 'avg_logprob': -0.17765489688589553, 'compression_ratio': 1.9571984435797665, 'no_speech_prob': 0.2242593914270401}, {'id': 1240, 'seek': 518318, 'start': 5183.18, 'end': 5189.02, 'text': ' be the target location to which you have to jump to, that is PC plus immediate constant.', 'tokens': [50364, 312, 264, 3779, 4914, 281, 597, 291, 362, 281, 3012, 281, 11, 300, 307, 6465, 1804, 11629, 5754, 13, 50656], 'temperature': 0.0, 'avg_logprob': -0.13878861392836972, 'compression_ratio': 1.8125, 'no_speech_prob': 0.1434459090232849}, {'id': 1241, 'seek': 518318, 'start': 5189.02, 'end': 5195.46, 'text': ' So the value of PC, next PC which is available over here and the value of the immediate constant', 'tokens': [50656, 407, 264, 2158, 295, 6465, 11, 958, 6465, 597, 307, 2435, 670, 510, 293, 264, 2158, 295, 264, 11629, 5754, 50978], 'temperature': 0.0, 'avg_logprob': -0.13878861392836972, 'compression_ratio': 1.8125, 'no_speech_prob': 0.1434459090232849}, {'id': 1242, 'seek': 518318, 'start': 5195.46, 'end': 5202.9800000000005, 'text': ' which is available over there can be added and that value can be passed on over there', 'tokens': [50978, 597, 307, 2435, 670, 456, 393, 312, 3869, 293, 300, 2158, 393, 312, 4678, 322, 670, 456, 51354], 'temperature': 0.0, 'avg_logprob': -0.13878861392836972, 'compression_ratio': 1.8125, 'no_speech_prob': 0.1434459090232849}, {'id': 1243, 'seek': 518318, 'start': 5202.9800000000005, 'end': 5208.02, 'text': ' and that can again be stored into your PC if the condition is true, correct.', 'tokens': [51354, 293, 300, 393, 797, 312, 12187, 666, 428, 6465, 498, 264, 4188, 307, 2074, 11, 3006, 13, 51606], 'temperature': 0.0, 'avg_logprob': -0.13878861392836972, 'compression_ratio': 1.8125, 'no_speech_prob': 0.1434459090232849}, {'id': 1244, 'seek': 520802, 'start': 5208.02, 'end': 5212.580000000001, 'text': ' So now you see how that PC plus 4 plus that immediate constant thing is working.', 'tokens': [50364, 407, 586, 291, 536, 577, 300, 6465, 1804, 1017, 1804, 300, 11629, 5754, 551, 307, 1364, 13, 50592], 'temperature': 0.0, 'avg_logprob': -0.13227876595088414, 'compression_ratio': 2.039473684210526, 'no_speech_prob': 0.10906744003295898}, {'id': 1245, 'seek': 520802, 'start': 5212.580000000001, 'end': 5219.06, 'text': ' PC plus 4 is computed here, that immediate constant is being added over here and that', 'tokens': [50592, 6465, 1804, 1017, 307, 40610, 510, 11, 300, 11629, 5754, 307, 885, 3869, 670, 510, 293, 300, 50916], 'temperature': 0.0, 'avg_logprob': -0.13227876595088414, 'compression_ratio': 2.039473684210526, 'no_speech_prob': 0.10906744003295898}, {'id': 1246, 'seek': 520802, 'start': 5219.06, 'end': 5221.42, 'text': ' value is being put back in there, right.', 'tokens': [50916, 2158, 307, 885, 829, 646, 294, 456, 11, 558, 13, 51034], 'temperature': 0.0, 'avg_logprob': -0.13227876595088414, 'compression_ratio': 2.039473684210526, 'no_speech_prob': 0.10906744003295898}, {'id': 1247, 'seek': 520802, 'start': 5221.42, 'end': 5226.200000000001, 'text': ' That is why we always say it is PC plus 4 plus immediate constant, right.', 'tokens': [51034, 663, 307, 983, 321, 1009, 584, 309, 307, 6465, 1804, 1017, 1804, 11629, 5754, 11, 558, 13, 51273], 'temperature': 0.0, 'avg_logprob': -0.13227876595088414, 'compression_ratio': 2.039473684210526, 'no_speech_prob': 0.10906744003295898}, {'id': 1248, 'seek': 520802, 'start': 5226.200000000001, 'end': 5232.240000000001, 'text': ' So in the case of a branch instruction, this is where the target location is being computed.', 'tokens': [51273, 407, 294, 264, 1389, 295, 257, 9819, 10951, 11, 341, 307, 689, 264, 3779, 4914, 307, 885, 40610, 13, 51575], 'temperature': 0.0, 'avg_logprob': -0.13227876595088414, 'compression_ratio': 2.039473684210526, 'no_speech_prob': 0.10906744003295898}, {'id': 1249, 'seek': 520802, 'start': 5232.240000000001, 'end': 5236.9800000000005, 'text': ' In the case of a load store instruction, this is where the address of that memory location', 'tokens': [51575, 682, 264, 1389, 295, 257, 3677, 3531, 10951, 11, 341, 307, 689, 264, 2985, 295, 300, 4675, 4914, 51812], 'temperature': 0.0, 'avg_logprob': -0.13227876595088414, 'compression_ratio': 2.039473684210526, 'no_speech_prob': 0.10906744003295898}, {'id': 1250, 'seek': 523698, 'start': 5236.98, 'end': 5238.419999999999, 'text': ' is being computed.', 'tokens': [50364, 307, 885, 40610, 13, 50436], 'temperature': 0.0, 'avg_logprob': -0.17874385833740233, 'compression_ratio': 1.8728070175438596, 'no_speech_prob': 0.0545789897441864}, {'id': 1251, 'seek': 523698, 'start': 5238.419999999999, 'end': 5242.099999999999, 'text': ' In the case of an arithmetic instruction, this is where the arithmetic operation is', 'tokens': [50436, 682, 264, 1389, 295, 364, 42973, 10951, 11, 341, 307, 689, 264, 42973, 6916, 307, 50620], 'temperature': 0.0, 'avg_logprob': -0.17874385833740233, 'compression_ratio': 1.8728070175438596, 'no_speech_prob': 0.0545789897441864}, {'id': 1252, 'seek': 523698, 'start': 5242.099999999999, 'end': 5243.44, 'text': ' being performed.', 'tokens': [50620, 885, 10332, 13, 50687], 'temperature': 0.0, 'avg_logprob': -0.17874385833740233, 'compression_ratio': 1.8728070175438596, 'no_speech_prob': 0.0545789897441864}, {'id': 1253, 'seek': 523698, 'start': 5243.44, 'end': 5247.5, 'text': ' That is why this is called the execute state, correct.', 'tokens': [50687, 663, 307, 983, 341, 307, 1219, 264, 14483, 1785, 11, 3006, 13, 50890], 'temperature': 0.0, 'avg_logprob': -0.17874385833740233, 'compression_ratio': 1.8728070175438596, 'no_speech_prob': 0.0545789897441864}, {'id': 1254, 'seek': 523698, 'start': 5247.5, 'end': 5252.459999999999, 'text': ' If it is an arithmetic operation, then at the end of this stage you have the value which', 'tokens': [50890, 759, 309, 307, 364, 42973, 6916, 11, 550, 412, 264, 917, 295, 341, 3233, 291, 362, 264, 2158, 597, 51138], 'temperature': 0.0, 'avg_logprob': -0.17874385833740233, 'compression_ratio': 1.8728070175438596, 'no_speech_prob': 0.0545789897441864}, {'id': 1255, 'seek': 523698, 'start': 5252.459999999999, 'end': 5254.379999999999, 'text': ' is available.', 'tokens': [51138, 307, 2435, 13, 51234], 'temperature': 0.0, 'avg_logprob': -0.17874385833740233, 'compression_ratio': 1.8728070175438596, 'no_speech_prob': 0.0545789897441864}, {'id': 1256, 'seek': 523698, 'start': 5254.379999999999, 'end': 5259.9, 'text': ' That value is actually going to be written into the destination location.', 'tokens': [51234, 663, 2158, 307, 767, 516, 281, 312, 3720, 666, 264, 12236, 4914, 13, 51510], 'temperature': 0.0, 'avg_logprob': -0.17874385833740233, 'compression_ratio': 1.8728070175438596, 'no_speech_prob': 0.0545789897441864}, {'id': 1257, 'seek': 523698, 'start': 5259.9, 'end': 5263.98, 'text': ' The destination register you know what it is from the instruction register.', 'tokens': [51510, 440, 12236, 7280, 291, 458, 437, 309, 307, 490, 264, 10951, 7280, 13, 51714], 'temperature': 0.0, 'avg_logprob': -0.17874385833740233, 'compression_ratio': 1.8728070175438596, 'no_speech_prob': 0.0545789897441864}, {'id': 1258, 'seek': 526398, 'start': 5263.98, 'end': 5268.16, 'text': ' So you know the place where you have to write and you know the value that you want to write,', 'tokens': [50364, 407, 291, 458, 264, 1081, 689, 291, 362, 281, 2464, 293, 291, 458, 264, 2158, 300, 291, 528, 281, 2464, 11, 50573], 'temperature': 0.0, 'avg_logprob': -0.15441792151507208, 'compression_ratio': 1.8972332015810276, 'no_speech_prob': 0.08691241592168808}, {'id': 1259, 'seek': 526398, 'start': 5268.16, 'end': 5269.16, 'text': ' you can write it down, right.', 'tokens': [50573, 291, 393, 2464, 309, 760, 11, 558, 13, 50623], 'temperature': 0.0, 'avg_logprob': -0.15441792151507208, 'compression_ratio': 1.8972332015810276, 'no_speech_prob': 0.08691241592168808}, {'id': 1260, 'seek': 526398, 'start': 5269.16, 'end': 5274.62, 'text': ' So if it is an arithmetic instruction add R1, R2, R3, I have fetched the contents of', 'tokens': [50623, 407, 498, 309, 307, 364, 42973, 10951, 909, 497, 16, 11, 497, 17, 11, 497, 18, 11, 286, 362, 23673, 292, 264, 15768, 295, 50896], 'temperature': 0.0, 'avg_logprob': -0.15441792151507208, 'compression_ratio': 1.8972332015810276, 'no_speech_prob': 0.08691241592168808}, {'id': 1261, 'seek': 526398, 'start': 5274.62, 'end': 5279.959999999999, 'text': ' R2, R3 here, I have added them up and that value is coming, I want to go and write it', 'tokens': [50896, 497, 17, 11, 497, 18, 510, 11, 286, 362, 3869, 552, 493, 293, 300, 2158, 307, 1348, 11, 286, 528, 281, 352, 293, 2464, 309, 51163], 'temperature': 0.0, 'avg_logprob': -0.15441792151507208, 'compression_ratio': 1.8972332015810276, 'no_speech_prob': 0.08691241592168808}, {'id': 1262, 'seek': 526398, 'start': 5279.959999999999, 'end': 5280.959999999999, 'text': ' back into R1.', 'tokens': [51163, 646, 666, 497, 16, 13, 51213], 'temperature': 0.0, 'avg_logprob': -0.15441792151507208, 'compression_ratio': 1.8972332015810276, 'no_speech_prob': 0.08691241592168808}, {'id': 1263, 'seek': 526398, 'start': 5280.959999999999, 'end': 5285.98, 'text': ' That is how instruction execution takes place, right.', 'tokens': [51213, 663, 307, 577, 10951, 15058, 2516, 1081, 11, 558, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.15441792151507208, 'compression_ratio': 1.8972332015810276, 'no_speech_prob': 0.08691241592168808}, {'id': 1264, 'seek': 526398, 'start': 5285.98, 'end': 5290.919999999999, 'text': ' If it is a load instruction, I have calculated the address of the memory location that can', 'tokens': [51464, 759, 309, 307, 257, 3677, 10951, 11, 286, 362, 15598, 264, 2985, 295, 264, 4675, 4914, 300, 393, 51711], 'temperature': 0.0, 'avg_logprob': -0.15441792151507208, 'compression_ratio': 1.8972332015810276, 'no_speech_prob': 0.08691241592168808}, {'id': 1265, 'seek': 526398, 'start': 5290.919999999999, 'end': 5293.419999999999, 'text': ' now be given to the memory.', 'tokens': [51711, 586, 312, 2212, 281, 264, 4675, 13, 51836], 'temperature': 0.0, 'avg_logprob': -0.15441792151507208, 'compression_ratio': 1.8972332015810276, 'no_speech_prob': 0.08691241592168808}, {'id': 1266, 'seek': 529342, 'start': 5293.42, 'end': 5300.5, 'text': ' I can fetch the contents of that memory location that has to go into the destination register.', 'tokens': [50364, 286, 393, 23673, 264, 15768, 295, 300, 4675, 4914, 300, 575, 281, 352, 666, 264, 12236, 7280, 13, 50718], 'temperature': 0.0, 'avg_logprob': -0.32051838403460625, 'compression_ratio': 1.7185929648241205, 'no_speech_prob': 0.013379287905991077}, {'id': 1267, 'seek': 529342, 'start': 5300.5, 'end': 5306.3, 'text': ' So fetching the memory happens in the memory stage, writing that value into the destination', 'tokens': [50718, 407, 23673, 278, 264, 4675, 2314, 294, 264, 4675, 3233, 11, 3579, 300, 2158, 666, 264, 12236, 51008], 'temperature': 0.0, 'avg_logprob': -0.32051838403460625, 'compression_ratio': 1.7185929648241205, 'no_speech_prob': 0.013379287905991077}, {'id': 1268, 'seek': 529342, 'start': 5306.3, 'end': 5310.54, 'text': ' register happens in the write back page, okay.', 'tokens': [51008, 7280, 2314, 294, 264, 2464, 646, 3028, 11, 1392, 13, 51220], 'temperature': 0.0, 'avg_logprob': -0.32051838403460625, 'compression_ratio': 1.7185929648241205, 'no_speech_prob': 0.013379287905991077}, {'id': 1269, 'seek': 529342, 'start': 5310.54, 'end': 5311.54, 'text': ' Question yeah.', 'tokens': [51220, 14464, 1338, 13, 51270], 'temperature': 0.0, 'avg_logprob': -0.32051838403460625, 'compression_ratio': 1.7185929648241205, 'no_speech_prob': 0.013379287905991077}, {'id': 1270, 'seek': 529342, 'start': 5311.54, 'end': 5317.86, 'text': ' Can you, people have to talk a little louder, sorry.', 'tokens': [51270, 1664, 291, 11, 561, 362, 281, 751, 257, 707, 22717, 11, 2597, 13, 51586], 'temperature': 0.0, 'avg_logprob': -0.32051838403460625, 'compression_ratio': 1.7185929648241205, 'no_speech_prob': 0.013379287905991077}, {'id': 1271, 'seek': 529342, 'start': 5317.86, 'end': 5321.9800000000005, 'text': ' Opcode, where does the opcode go, right.', 'tokens': [51586, 12011, 22332, 11, 689, 775, 264, 999, 22332, 352, 11, 558, 13, 51792], 'temperature': 0.0, 'avg_logprob': -0.32051838403460625, 'compression_ratio': 1.7185929648241205, 'no_speech_prob': 0.013379287905991077}, {'id': 1272, 'seek': 532198, 'start': 5321.98, 'end': 5322.98, 'text': ' That is a very good question.', 'tokens': [50364, 663, 307, 257, 588, 665, 1168, 13, 50414], 'temperature': 0.0, 'avg_logprob': -0.3153808264084804, 'compression_ratio': 1.6302083333333333, 'no_speech_prob': 0.10017973929643631}, {'id': 1273, 'seek': 532198, 'start': 5322.98, 'end': 5327.98, 'text': ' So let us see, what does this say?', 'tokens': [50414, 407, 718, 505, 536, 11, 437, 775, 341, 584, 30, 50664], 'temperature': 0.0, 'avg_logprob': -0.3153808264084804, 'compression_ratio': 1.6302083333333333, 'no_speech_prob': 0.10017973929643631}, {'id': 1274, 'seek': 532198, 'start': 5327.98, 'end': 5337.099999999999, 'text': ' Decode, what do we understand by decode?', 'tokens': [50664, 12427, 1429, 11, 437, 360, 321, 1223, 538, 979, 1429, 30, 51120], 'temperature': 0.0, 'avg_logprob': -0.3153808264084804, 'compression_ratio': 1.6302083333333333, 'no_speech_prob': 0.10017973929643631}, {'id': 1275, 'seek': 532198, 'start': 5337.099999999999, 'end': 5343.459999999999, 'text': ' One is identifying the different parts of that instruction and doing whatever that is', 'tokens': [51120, 1485, 307, 16696, 264, 819, 3166, 295, 300, 10951, 293, 884, 2035, 300, 307, 51438], 'temperature': 0.0, 'avg_logprob': -0.3153808264084804, 'compression_ratio': 1.6302083333333333, 'no_speech_prob': 0.10017973929643631}, {'id': 1276, 'seek': 532198, 'start': 5343.459999999999, 'end': 5347.5, 'text': ' necessary but then what do you do with the opcode part?', 'tokens': [51438, 4818, 457, 550, 437, 360, 291, 360, 365, 264, 999, 22332, 644, 30, 51640], 'temperature': 0.0, 'avg_logprob': -0.3153808264084804, 'compression_ratio': 1.6302083333333333, 'no_speech_prob': 0.10017973929643631}, {'id': 1277, 'seek': 532198, 'start': 5347.5, 'end': 5350.74, 'text': ' Opcode part essentially tells you what operation to be performed.', 'tokens': [51640, 12011, 22332, 644, 4476, 5112, 291, 437, 6916, 281, 312, 10332, 13, 51802], 'temperature': 0.0, 'avg_logprob': -0.3153808264084804, 'compression_ratio': 1.6302083333333333, 'no_speech_prob': 0.10017973929643631}, {'id': 1278, 'seek': 535074, 'start': 5350.74, 'end': 5361.86, 'text': ' Actually the control unit takes that and then figures out what needs to be done in each', 'tokens': [50364, 5135, 264, 1969, 4985, 2516, 300, 293, 550, 9624, 484, 437, 2203, 281, 312, 1096, 294, 1184, 50920], 'temperature': 0.0, 'avg_logprob': -0.13997493139127407, 'compression_ratio': 1.5990338164251208, 'no_speech_prob': 0.003962715156376362}, {'id': 1279, 'seek': 535074, 'start': 5361.86, 'end': 5363.34, 'text': ' one of these stages.', 'tokens': [50920, 472, 295, 613, 10232, 13, 50994], 'temperature': 0.0, 'avg_logprob': -0.13997493139127407, 'compression_ratio': 1.5990338164251208, 'no_speech_prob': 0.003962715156376362}, {'id': 1280, 'seek': 535074, 'start': 5363.34, 'end': 5370.099999999999, 'text': ' Remember everywhere you could see this kind of multiplexers, correct.', 'tokens': [50994, 5459, 5315, 291, 727, 536, 341, 733, 295, 3311, 2021, 433, 11, 3006, 13, 51332], 'temperature': 0.0, 'avg_logprob': -0.13997493139127407, 'compression_ratio': 1.5990338164251208, 'no_speech_prob': 0.003962715156376362}, {'id': 1281, 'seek': 535074, 'start': 5370.099999999999, 'end': 5374.82, 'text': ' You need to know whether you should take this operand or this operand, right.', 'tokens': [51332, 509, 643, 281, 458, 1968, 291, 820, 747, 341, 2208, 474, 420, 341, 2208, 474, 11, 558, 13, 51568], 'temperature': 0.0, 'avg_logprob': -0.13997493139127407, 'compression_ratio': 1.5990338164251208, 'no_speech_prob': 0.003962715156376362}, {'id': 1282, 'seek': 535074, 'start': 5374.82, 'end': 5379.88, 'text': ' That depends on whether it is an R instruction or an I instruction, right.', 'tokens': [51568, 663, 5946, 322, 1968, 309, 307, 364, 497, 10951, 420, 364, 286, 10951, 11, 558, 13, 51821], 'temperature': 0.0, 'avg_logprob': -0.13997493139127407, 'compression_ratio': 1.5990338164251208, 'no_speech_prob': 0.003962715156376362}, {'id': 1283, 'seek': 537988, 'start': 5379.88, 'end': 5384.36, 'text': ' You need to know whether you need to perform an add or subtract or multiply or whatever.', 'tokens': [50364, 509, 643, 281, 458, 1968, 291, 643, 281, 2042, 364, 909, 420, 16390, 420, 12972, 420, 2035, 13, 50588], 'temperature': 0.0, 'avg_logprob': -0.1437058136841961, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.032696548849344254}, {'id': 1284, 'seek': 537988, 'start': 5384.36, 'end': 5387.4400000000005, 'text': ' That depends on your opcode, correct.', 'tokens': [50588, 663, 5946, 322, 428, 999, 22332, 11, 3006, 13, 50742], 'temperature': 0.0, 'avg_logprob': -0.1437058136841961, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.032696548849344254}, {'id': 1285, 'seek': 537988, 'start': 5387.4400000000005, 'end': 5392.28, 'text': ' And if it is a branch instruction then this has to be an add because you want to compute', 'tokens': [50742, 400, 498, 309, 307, 257, 9819, 10951, 550, 341, 575, 281, 312, 364, 909, 570, 291, 528, 281, 14722, 50984], 'temperature': 0.0, 'avg_logprob': -0.1437058136841961, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.032696548849344254}, {'id': 1286, 'seek': 537988, 'start': 5392.28, 'end': 5393.28, 'text': ' the target location.', 'tokens': [50984, 264, 3779, 4914, 13, 51034], 'temperature': 0.0, 'avg_logprob': -0.1437058136841961, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.032696548849344254}, {'id': 1287, 'seek': 537988, 'start': 5393.28, 'end': 5397.4800000000005, 'text': ' If it is a load instruction you want to compute the effective address.', 'tokens': [51034, 759, 309, 307, 257, 3677, 10951, 291, 528, 281, 14722, 264, 4942, 2985, 13, 51244], 'temperature': 0.0, 'avg_logprob': -0.1437058136841961, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.032696548849344254}, {'id': 1288, 'seek': 537988, 'start': 5397.4800000000005, 'end': 5399.52, 'text': ' So you want to again do an add.', 'tokens': [51244, 407, 291, 528, 281, 797, 360, 364, 909, 13, 51346], 'temperature': 0.0, 'avg_logprob': -0.1437058136841961, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.032696548849344254}, {'id': 1289, 'seek': 537988, 'start': 5399.52, 'end': 5406.4400000000005, 'text': ' So in other words that opcode is taken by the control unit and that control unit sends', 'tokens': [51346, 407, 294, 661, 2283, 300, 999, 22332, 307, 2726, 538, 264, 1969, 4985, 293, 300, 1969, 4985, 14790, 51692], 'temperature': 0.0, 'avg_logprob': -0.1437058136841961, 'compression_ratio': 1.805084745762712, 'no_speech_prob': 0.032696548849344254}, {'id': 1290, 'seek': 540644, 'start': 5406.44, 'end': 5411.639999999999, 'text': ' the necessary signals to all of these things at the appropriate point in time so that the', 'tokens': [50364, 264, 4818, 12354, 281, 439, 295, 613, 721, 412, 264, 6854, 935, 294, 565, 370, 300, 264, 50624], 'temperature': 0.0, 'avg_logprob': -0.16968832397460937, 'compression_ratio': 1.8199233716475096, 'no_speech_prob': 0.4897941052913666}, {'id': 1291, 'seek': 540644, 'start': 5411.639999999999, 'end': 5413.879999999999, 'text': ' appropriate action can take place.', 'tokens': [50624, 6854, 3069, 393, 747, 1081, 13, 50736], 'temperature': 0.0, 'avg_logprob': -0.16968832397460937, 'compression_ratio': 1.8199233716475096, 'no_speech_prob': 0.4897941052913666}, {'id': 1292, 'seek': 540644, 'start': 5413.879999999999, 'end': 5417.599999999999, 'text': ' That is why we did not talk about the opcode part, right.', 'tokens': [50736, 663, 307, 983, 321, 630, 406, 751, 466, 264, 999, 22332, 644, 11, 558, 13, 50922], 'temperature': 0.0, 'avg_logprob': -0.16968832397460937, 'compression_ratio': 1.8199233716475096, 'no_speech_prob': 0.4897941052913666}, {'id': 1293, 'seek': 540644, 'start': 5417.599999999999, 'end': 5423.28, 'text': ' But now you see that the RS1 part, the RS2 part, the RD part, the immediate part, everything', 'tokens': [50922, 583, 586, 291, 536, 300, 264, 25855, 16, 644, 11, 264, 25855, 17, 644, 11, 264, 49488, 644, 11, 264, 11629, 644, 11, 1203, 51206], 'temperature': 0.0, 'avg_logprob': -0.16968832397460937, 'compression_ratio': 1.8199233716475096, 'no_speech_prob': 0.4897941052913666}, {'id': 1294, 'seek': 540644, 'start': 5423.28, 'end': 5426.179999999999, 'text': ' is being taken at some place or the other, right.', 'tokens': [51206, 307, 885, 2726, 412, 512, 1081, 420, 264, 661, 11, 558, 13, 51351], 'temperature': 0.0, 'avg_logprob': -0.16968832397460937, 'compression_ratio': 1.8199233716475096, 'no_speech_prob': 0.4897941052913666}, {'id': 1295, 'seek': 540644, 'start': 5426.179999999999, 'end': 5427.179999999999, 'text': ' Everything is being used, right.', 'tokens': [51351, 5471, 307, 885, 1143, 11, 558, 13, 51401], 'temperature': 0.0, 'avg_logprob': -0.16968832397460937, 'compression_ratio': 1.8199233716475096, 'no_speech_prob': 0.4897941052913666}, {'id': 1296, 'seek': 540644, 'start': 5427.179999999999, 'end': 5428.179999999999, 'text': ' Good, we have almost covered.', 'tokens': [51401, 2205, 11, 321, 362, 1920, 5343, 13, 51451], 'temperature': 0.0, 'avg_logprob': -0.16968832397460937, 'compression_ratio': 1.8199233716475096, 'no_speech_prob': 0.4897941052913666}, {'id': 1297, 'seek': 540644, 'start': 5428.179999999999, 'end': 5435.4, 'text': ' So if it is a branch instruction this computes the target location where it has to go.', 'tokens': [51451, 407, 498, 309, 307, 257, 9819, 10951, 341, 715, 1819, 264, 3779, 4914, 689, 309, 575, 281, 352, 13, 51812], 'temperature': 0.0, 'avg_logprob': -0.16968832397460937, 'compression_ratio': 1.8199233716475096, 'no_speech_prob': 0.4897941052913666}, {'id': 1298, 'seek': 543540, 'start': 5435.4, 'end': 5439.5599999999995, 'text': ' This part of it computes whether the branch condition is true or false.', 'tokens': [50364, 639, 644, 295, 309, 715, 1819, 1968, 264, 9819, 4188, 307, 2074, 420, 7908, 13, 50572], 'temperature': 0.0, 'avg_logprob': -0.1130983829498291, 'compression_ratio': 1.8805309734513274, 'no_speech_prob': 0.059654705226421356}, {'id': 1299, 'seek': 543540, 'start': 5439.5599999999995, 'end': 5444.759999999999, 'text': ' If it is true then you will take the target location and that is what you are going to', 'tokens': [50572, 759, 309, 307, 2074, 550, 291, 486, 747, 264, 3779, 4914, 293, 300, 307, 437, 291, 366, 516, 281, 50832], 'temperature': 0.0, 'avg_logprob': -0.1130983829498291, 'compression_ratio': 1.8805309734513274, 'no_speech_prob': 0.059654705226421356}, {'id': 1300, 'seek': 543540, 'start': 5444.759999999999, 'end': 5446.9, 'text': ' set it into the program counter.', 'tokens': [50832, 992, 309, 666, 264, 1461, 5682, 13, 50939], 'temperature': 0.0, 'avg_logprob': -0.1130983829498291, 'compression_ratio': 1.8805309734513274, 'no_speech_prob': 0.059654705226421356}, {'id': 1301, 'seek': 543540, 'start': 5446.9, 'end': 5452.48, 'text': ' If it is false you are going to take PC plus 4 and you are going to set that into the target,', 'tokens': [50939, 759, 309, 307, 7908, 291, 366, 516, 281, 747, 6465, 1804, 1017, 293, 291, 366, 516, 281, 992, 300, 666, 264, 3779, 11, 51218], 'temperature': 0.0, 'avg_logprob': -0.1130983829498291, 'compression_ratio': 1.8805309734513274, 'no_speech_prob': 0.059654705226421356}, {'id': 1302, 'seek': 543540, 'start': 5452.48, 'end': 5453.48, 'text': ' okay.', 'tokens': [51218, 1392, 13, 51268], 'temperature': 0.0, 'avg_logprob': -0.1130983829498291, 'compression_ratio': 1.8805309734513274, 'no_speech_prob': 0.059654705226421356}, {'id': 1303, 'seek': 543540, 'start': 5453.48, 'end': 5459.08, 'text': ' So roughly this is what that happens during instruction execution or this is how instruction', 'tokens': [51268, 407, 9810, 341, 307, 437, 300, 2314, 1830, 10951, 15058, 420, 341, 307, 577, 10951, 51548], 'temperature': 0.0, 'avg_logprob': -0.1130983829498291, 'compression_ratio': 1.8805309734513274, 'no_speech_prob': 0.059654705226421356}, {'id': 1304, 'seek': 543540, 'start': 5459.08, 'end': 5463.16, 'text': ' execution takes place in this processor.', 'tokens': [51548, 15058, 2516, 1081, 294, 341, 15321, 13, 51752], 'temperature': 0.0, 'avg_logprob': -0.1130983829498291, 'compression_ratio': 1.8805309734513274, 'no_speech_prob': 0.059654705226421356}, {'id': 1305, 'seek': 546316, 'start': 5463.16, 'end': 5468.04, 'text': ' Each stage of the processor is pipelined that means that when the ith instruction is in', 'tokens': [50364, 6947, 3233, 295, 264, 15321, 307, 8489, 338, 2001, 300, 1355, 300, 562, 264, 309, 71, 10951, 307, 294, 50608], 'temperature': 0.0, 'avg_logprob': -0.19433116912841797, 'compression_ratio': 2.1551724137931036, 'no_speech_prob': 0.21334430575370789}, {'id': 1306, 'seek': 546316, 'start': 5468.04, 'end': 5472.44, 'text': ' this stage, i plus 1th instruction will be in this stage, i plus second instruction will', 'tokens': [50608, 341, 3233, 11, 741, 1804, 502, 392, 10951, 486, 312, 294, 341, 3233, 11, 741, 1804, 1150, 10951, 486, 50828], 'temperature': 0.0, 'avg_logprob': -0.19433116912841797, 'compression_ratio': 2.1551724137931036, 'no_speech_prob': 0.21334430575370789}, {'id': 1307, 'seek': 546316, 'start': 5472.44, 'end': 5477.16, 'text': ' be in this stage, i minus 1th instruction will be in this stage and i minus second instruction', 'tokens': [50828, 312, 294, 341, 3233, 11, 741, 3175, 502, 392, 10951, 486, 312, 294, 341, 3233, 293, 741, 3175, 1150, 10951, 51064], 'temperature': 0.0, 'avg_logprob': -0.19433116912841797, 'compression_ratio': 2.1551724137931036, 'no_speech_prob': 0.21334430575370789}, {'id': 1308, 'seek': 546316, 'start': 5477.16, 'end': 5480.08, 'text': ' will be in that stage and so on, okay.', 'tokens': [51064, 486, 312, 294, 300, 3233, 293, 370, 322, 11, 1392, 13, 51210], 'temperature': 0.0, 'avg_logprob': -0.19433116912841797, 'compression_ratio': 2.1551724137931036, 'no_speech_prob': 0.21334430575370789}, {'id': 1309, 'seek': 546316, 'start': 5480.08, 'end': 5481.08, 'text': ' That is really what happened.', 'tokens': [51210, 663, 307, 534, 437, 2011, 13, 51260], 'temperature': 0.0, 'avg_logprob': -0.19433116912841797, 'compression_ratio': 2.1551724137931036, 'no_speech_prob': 0.21334430575370789}, {'id': 1310, 'seek': 546316, 'start': 5481.08, 'end': 5482.44, 'text': ' There are a lot of complications.', 'tokens': [51260, 821, 366, 257, 688, 295, 26566, 13, 51328], 'temperature': 0.0, 'avg_logprob': -0.19433116912841797, 'compression_ratio': 2.1551724137931036, 'no_speech_prob': 0.21334430575370789}, {'id': 1311, 'seek': 546316, 'start': 5482.44, 'end': 5484.72, 'text': ' I have not gone into the details of this.', 'tokens': [51328, 286, 362, 406, 2780, 666, 264, 4365, 295, 341, 13, 51442], 'temperature': 0.0, 'avg_logprob': -0.19433116912841797, 'compression_ratio': 2.1551724137931036, 'no_speech_prob': 0.21334430575370789}, {'id': 1312, 'seek': 546316, 'start': 5484.72, 'end': 5491.2, 'text': ' In fact processor data path and pipelined execution we take about 3 to 4 classes to', 'tokens': [51442, 682, 1186, 15321, 1412, 3100, 293, 8489, 338, 2001, 15058, 321, 747, 466, 805, 281, 1017, 5359, 281, 51766], 'temperature': 0.0, 'avg_logprob': -0.19433116912841797, 'compression_ratio': 2.1551724137931036, 'no_speech_prob': 0.21334430575370789}, {'id': 1313, 'seek': 549120, 'start': 5491.24, 'end': 5496.96, 'text': ' complete the discussion whereas we are describing it in less than 15 minutes, okay.', 'tokens': [50366, 3566, 264, 5017, 9735, 321, 366, 16141, 309, 294, 1570, 813, 2119, 2077, 11, 1392, 13, 50652], 'temperature': 0.0, 'avg_logprob': -0.15042492059560922, 'compression_ratio': 1.75, 'no_speech_prob': 0.09691854566335678}, {'id': 1314, 'seek': 549120, 'start': 5496.96, 'end': 5501.5599999999995, 'text': ' So obviously we have not talked about all the complications but this gives you an idea', 'tokens': [50652, 407, 2745, 321, 362, 406, 2825, 466, 439, 264, 26566, 457, 341, 2709, 291, 364, 1558, 50882], 'temperature': 0.0, 'avg_logprob': -0.15042492059560922, 'compression_ratio': 1.75, 'no_speech_prob': 0.09691854566335678}, {'id': 1315, 'seek': 549120, 'start': 5501.5599999999995, 'end': 5505.92, 'text': ' of how exactly instruction execution is taking, okay.', 'tokens': [50882, 295, 577, 2293, 10951, 15058, 307, 1940, 11, 1392, 13, 51100], 'temperature': 0.0, 'avg_logprob': -0.15042492059560922, 'compression_ratio': 1.75, 'no_speech_prob': 0.09691854566335678}, {'id': 1316, 'seek': 549120, 'start': 5505.92, 'end': 5510.74, 'text': ' So next thing we are going to talk about is pipelined execution, right.', 'tokens': [51100, 407, 958, 551, 321, 366, 516, 281, 751, 466, 307, 8489, 338, 2001, 15058, 11, 558, 13, 51341], 'temperature': 0.0, 'avg_logprob': -0.15042492059560922, 'compression_ratio': 1.75, 'no_speech_prob': 0.09691854566335678}, {'id': 1317, 'seek': 549120, 'start': 5510.74, 'end': 5516.94, 'text': ' In pipelined execution as I mentioned earlier each phase, right, is going to operate on', 'tokens': [51341, 682, 8489, 338, 2001, 15058, 382, 286, 2835, 3071, 1184, 5574, 11, 558, 11, 307, 516, 281, 9651, 322, 51651], 'temperature': 0.0, 'avg_logprob': -0.15042492059560922, 'compression_ratio': 1.75, 'no_speech_prob': 0.09691854566335678}, {'id': 1318, 'seek': 549120, 'start': 5516.94, 'end': 5520.599999999999, 'text': ' a different instruction in a given point in time, right.', 'tokens': [51651, 257, 819, 10951, 294, 257, 2212, 935, 294, 565, 11, 558, 13, 51834], 'temperature': 0.0, 'avg_logprob': -0.15042492059560922, 'compression_ratio': 1.75, 'no_speech_prob': 0.09691854566335678}, {'id': 1319, 'seek': 552060, 'start': 5520.6, 'end': 5526.84, 'text': ' For example when the ith instruction, i1th instruction is going there, this next instruction,', 'tokens': [50364, 1171, 1365, 562, 264, 309, 71, 10951, 11, 741, 16, 392, 10951, 307, 516, 456, 11, 341, 958, 10951, 11, 50676], 'temperature': 0.0, 'avg_logprob': -0.18480706214904785, 'compression_ratio': 2.198019801980198, 'no_speech_prob': 0.04558302089571953}, {'id': 1320, 'seek': 552060, 'start': 5526.84, 'end': 5533.320000000001, 'text': ' instruction, right, is going to do the fetch when this instruction is doing the decode,', 'tokens': [50676, 10951, 11, 558, 11, 307, 516, 281, 360, 264, 23673, 562, 341, 10951, 307, 884, 264, 979, 1429, 11, 51000], 'temperature': 0.0, 'avg_logprob': -0.18480706214904785, 'compression_ratio': 2.198019801980198, 'no_speech_prob': 0.04558302089571953}, {'id': 1321, 'seek': 552060, 'start': 5533.320000000001, 'end': 5534.320000000001, 'text': ' right.', 'tokens': [51000, 558, 13, 51050], 'temperature': 0.0, 'avg_logprob': -0.18480706214904785, 'compression_ratio': 2.198019801980198, 'no_speech_prob': 0.04558302089571953}, {'id': 1322, 'seek': 552060, 'start': 5534.320000000001, 'end': 5539.0, 'text': ' And then in the next cycle you take the next instruction, third instruction and that is', 'tokens': [51050, 400, 550, 294, 264, 958, 6586, 291, 747, 264, 958, 10951, 11, 2636, 10951, 293, 300, 307, 51284], 'temperature': 0.0, 'avg_logprob': -0.18480706214904785, 'compression_ratio': 2.198019801980198, 'no_speech_prob': 0.04558302089571953}, {'id': 1323, 'seek': 552060, 'start': 5539.0, 'end': 5544.0, 'text': ' going to go into the fetch phase and so on and so forth, right.', 'tokens': [51284, 516, 281, 352, 666, 264, 23673, 5574, 293, 370, 322, 293, 370, 5220, 11, 558, 13, 51534], 'temperature': 0.0, 'avg_logprob': -0.18480706214904785, 'compression_ratio': 2.198019801980198, 'no_speech_prob': 0.04558302089571953}, {'id': 1324, 'seek': 552060, 'start': 5544.0, 'end': 5550.04, 'text': ' So at a given point in time when the ith instruction is in the write back phase, i plus 1th instruction', 'tokens': [51534, 407, 412, 257, 2212, 935, 294, 565, 562, 264, 309, 71, 10951, 307, 294, 264, 2464, 646, 5574, 11, 741, 1804, 502, 392, 10951, 51836], 'temperature': 0.0, 'avg_logprob': -0.18480706214904785, 'compression_ratio': 2.198019801980198, 'no_speech_prob': 0.04558302089571953}, {'id': 1325, 'seek': 555004, 'start': 5550.04, 'end': 5554.4, 'text': ' would be in the memory phase, i plus second instruction will be in the execute phase and', 'tokens': [50364, 576, 312, 294, 264, 4675, 5574, 11, 741, 1804, 1150, 10951, 486, 312, 294, 264, 14483, 5574, 293, 50582], 'temperature': 0.0, 'avg_logprob': -0.1576747027310458, 'compression_ratio': 1.7488372093023257, 'no_speech_prob': 0.009418901056051254}, {'id': 1326, 'seek': 555004, 'start': 5554.4, 'end': 5555.4, 'text': ' so on and so forth.', 'tokens': [50582, 370, 322, 293, 370, 5220, 13, 50632], 'temperature': 0.0, 'avg_logprob': -0.1576747027310458, 'compression_ratio': 1.7488372093023257, 'no_speech_prob': 0.009418901056051254}, {'id': 1327, 'seek': 555004, 'start': 5555.4, 'end': 5557.44, 'text': ' This is a very idealistic view, right.', 'tokens': [50632, 639, 307, 257, 588, 7157, 3142, 1910, 11, 558, 13, 50734], 'temperature': 0.0, 'avg_logprob': -0.1576747027310458, 'compression_ratio': 1.7488372093023257, 'no_speech_prob': 0.009418901056051254}, {'id': 1328, 'seek': 555004, 'start': 5557.44, 'end': 5564.72, 'text': ' This may not be exactly how it happens in practice but this is something that happens', 'tokens': [50734, 639, 815, 406, 312, 2293, 577, 309, 2314, 294, 3124, 457, 341, 307, 746, 300, 2314, 51098], 'temperature': 0.0, 'avg_logprob': -0.1576747027310458, 'compression_ratio': 1.7488372093023257, 'no_speech_prob': 0.009418901056051254}, {'id': 1329, 'seek': 555004, 'start': 5564.72, 'end': 5566.96, 'text': ' in a very ideal situation.', 'tokens': [51098, 294, 257, 588, 7157, 2590, 13, 51210], 'temperature': 0.0, 'avg_logprob': -0.1576747027310458, 'compression_ratio': 1.7488372093023257, 'no_speech_prob': 0.009418901056051254}, {'id': 1330, 'seek': 555004, 'start': 5566.96, 'end': 5570.76, 'text': ' So now if you observe in the end what do you see?', 'tokens': [51210, 407, 586, 498, 291, 11441, 294, 264, 917, 437, 360, 291, 536, 30, 51400], 'temperature': 0.0, 'avg_logprob': -0.1576747027310458, 'compression_ratio': 1.7488372093023257, 'no_speech_prob': 0.009418901056051254}, {'id': 1331, 'seek': 555004, 'start': 5570.76, 'end': 5576.48, 'text': ' At the end of each cycle you see one instruction complete, right.', 'tokens': [51400, 1711, 264, 917, 295, 1184, 6586, 291, 536, 472, 10951, 3566, 11, 558, 13, 51686], 'temperature': 0.0, 'avg_logprob': -0.1576747027310458, 'compression_ratio': 1.7488372093023257, 'no_speech_prob': 0.009418901056051254}, {'id': 1332, 'seek': 557648, 'start': 5576.48, 'end': 5583.719999999999, 'text': ' If you did not have the pipelined execution, right, where will the next instruction start?', 'tokens': [50364, 759, 291, 630, 406, 362, 264, 8489, 338, 2001, 15058, 11, 558, 11, 689, 486, 264, 958, 10951, 722, 30, 50726], 'temperature': 0.0, 'avg_logprob': -0.13472335854756465, 'compression_ratio': 2.045918367346939, 'no_speech_prob': 0.06922625005245209}, {'id': 1333, 'seek': 557648, 'start': 5583.719999999999, 'end': 5588.759999999999, 'text': ' The next instruction can only start here after 5 cycles and then the next instruction can', 'tokens': [50726, 440, 958, 10951, 393, 787, 722, 510, 934, 1025, 17796, 293, 550, 264, 958, 10951, 393, 50978], 'temperature': 0.0, 'avg_logprob': -0.13472335854756465, 'compression_ratio': 2.045918367346939, 'no_speech_prob': 0.06922625005245209}, {'id': 1334, 'seek': 557648, 'start': 5588.759999999999, 'end': 5591.16, 'text': ' only start after 5 cycles.', 'tokens': [50978, 787, 722, 934, 1025, 17796, 13, 51098], 'temperature': 0.0, 'avg_logprob': -0.13472335854756465, 'compression_ratio': 2.045918367346939, 'no_speech_prob': 0.06922625005245209}, {'id': 1335, 'seek': 557648, 'start': 5591.16, 'end': 5597.48, 'text': ' So in a non-pipelined execution you take 5 cycles because of the 5 stages to complete', 'tokens': [51098, 407, 294, 257, 2107, 12, 79, 647, 338, 2001, 15058, 291, 747, 1025, 17796, 570, 295, 264, 1025, 10232, 281, 3566, 51414], 'temperature': 0.0, 'avg_logprob': -0.13472335854756465, 'compression_ratio': 2.045918367346939, 'no_speech_prob': 0.06922625005245209}, {'id': 1336, 'seek': 557648, 'start': 5597.48, 'end': 5598.48, 'text': ' this instruction.', 'tokens': [51414, 341, 10951, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.13472335854756465, 'compression_ratio': 2.045918367346939, 'no_speech_prob': 0.06922625005245209}, {'id': 1337, 'seek': 557648, 'start': 5598.48, 'end': 5605.959999999999, 'text': ' Whereas in the pipelined execution you still take 5 cycles to execute but your throughput', 'tokens': [51464, 13813, 294, 264, 8489, 338, 2001, 15058, 291, 920, 747, 1025, 17796, 281, 14483, 457, 428, 44629, 51838], 'temperature': 0.0, 'avg_logprob': -0.13472335854756465, 'compression_ratio': 2.045918367346939, 'no_speech_prob': 0.06922625005245209}, {'id': 1338, 'seek': 560596, 'start': 5606.44, 'end': 5610.64, 'text': ' in such a way that every cycle you get a new instruction, right.', 'tokens': [50388, 294, 1270, 257, 636, 300, 633, 6586, 291, 483, 257, 777, 10951, 11, 558, 13, 50598], 'temperature': 0.0, 'avg_logprob': -0.38361810537484975, 'compression_ratio': 1.4787878787878788, 'no_speech_prob': 0.43517205119132996}, {'id': 1339, 'seek': 560596, 'start': 5610.64, 'end': 5614.0, 'text': ' That is really the advantage that you have.', 'tokens': [50598, 663, 307, 534, 264, 5002, 300, 291, 362, 13, 50766], 'temperature': 0.0, 'avg_logprob': -0.38361810537484975, 'compression_ratio': 1.4787878787878788, 'no_speech_prob': 0.43517205119132996}, {'id': 1340, 'seek': 560596, 'start': 5614.0, 'end': 5619.88, 'text': ' Okay, execution time is still 5 cycles but throughput is improved to 1 instruction per', 'tokens': [50766, 1033, 11, 15058, 565, 307, 920, 1025, 17796, 457, 44629, 307, 9689, 281, 502, 10951, 680, 51060], 'temperature': 0.0, 'avg_logprob': -0.38361810537484975, 'compression_ratio': 1.4787878787878788, 'no_speech_prob': 0.43517205119132996}, {'id': 1341, 'seek': 560596, 'start': 5619.88, 'end': 5620.88, 'text': ' cycle.', 'tokens': [51060, 6586, 13, 51110], 'temperature': 0.0, 'avg_logprob': -0.38361810537484975, 'compression_ratio': 1.4787878787878788, 'no_speech_prob': 0.43517205119132996}, {'id': 1342, 'seek': 560596, 'start': 5620.88, 'end': 5621.88, 'text': ' Yeah.', 'tokens': [51110, 865, 13, 51160], 'temperature': 0.0, 'avg_logprob': -0.38361810537484975, 'compression_ratio': 1.4787878787878788, 'no_speech_prob': 0.43517205119132996}, {'id': 1343, 'seek': 560596, 'start': 5621.88, 'end': 5630.76, 'text': ' So can you elaborate that question?', 'tokens': [51160, 407, 393, 291, 20945, 300, 1168, 30, 51604], 'temperature': 0.0, 'avg_logprob': -0.38361810537484975, 'compression_ratio': 1.4787878787878788, 'no_speech_prob': 0.43517205119132996}, {'id': 1344, 'seek': 563076, 'start': 5630.76, 'end': 5639.280000000001, 'text': ' Maybe you will give me the answer also.', 'tokens': [50364, 2704, 291, 486, 976, 385, 264, 1867, 611, 13, 50790], 'temperature': 0.0, 'avg_logprob': -0.19461030051821754, 'compression_ratio': 1.8351063829787233, 'no_speech_prob': 0.37117472290992737}, {'id': 1345, 'seek': 563076, 'start': 5639.280000000001, 'end': 5645.8, 'text': ' All instruction, the entire instruction execution for all instructions are pipelined, okay.', 'tokens': [50790, 1057, 10951, 11, 264, 2302, 10951, 15058, 337, 439, 9415, 366, 8489, 338, 2001, 11, 1392, 13, 51116], 'temperature': 0.0, 'avg_logprob': -0.19461030051821754, 'compression_ratio': 1.8351063829787233, 'no_speech_prob': 0.37117472290992737}, {'id': 1346, 'seek': 563076, 'start': 5645.8, 'end': 5650.4800000000005, 'text': ' So if your question is that if I am doing a load instruction and then I am doing an', 'tokens': [51116, 407, 498, 428, 1168, 307, 300, 498, 286, 669, 884, 257, 3677, 10951, 293, 550, 286, 669, 884, 364, 51350], 'temperature': 0.0, 'avg_logprob': -0.19461030051821754, 'compression_ratio': 1.8351063829787233, 'no_speech_prob': 0.37117472290992737}, {'id': 1347, 'seek': 563076, 'start': 5650.4800000000005, 'end': 5655.68, 'text': ' add instruction and I am doing let us say a conditional branch instruction, do all of', 'tokens': [51350, 909, 10951, 293, 286, 669, 884, 718, 505, 584, 257, 27708, 9819, 10951, 11, 360, 439, 295, 51610], 'temperature': 0.0, 'avg_logprob': -0.19461030051821754, 'compression_ratio': 1.8351063829787233, 'no_speech_prob': 0.37117472290992737}, {'id': 1348, 'seek': 563076, 'start': 5655.68, 'end': 5659.72, 'text': ' them go through all of these stages, right.', 'tokens': [51610, 552, 352, 807, 439, 295, 613, 10232, 11, 558, 13, 51812], 'temperature': 0.0, 'avg_logprob': -0.19461030051821754, 'compression_ratio': 1.8351063829787233, 'no_speech_prob': 0.37117472290992737}, {'id': 1349, 'seek': 565972, 'start': 5659.72, 'end': 5663.92, 'text': ' They all go through all of these stages, some instructions will have some activities', 'tokens': [50364, 814, 439, 352, 807, 439, 295, 613, 10232, 11, 512, 9415, 486, 362, 512, 5354, 50574], 'temperature': 0.0, 'avg_logprob': -0.15273499720304914, 'compression_ratio': 1.9188034188034189, 'no_speech_prob': 0.007695279084146023}, {'id': 1350, 'seek': 565972, 'start': 5663.92, 'end': 5667.76, 'text': ' to perform in some stage, some instructions may not have.', 'tokens': [50574, 281, 2042, 294, 512, 3233, 11, 512, 9415, 815, 406, 362, 13, 50766], 'temperature': 0.0, 'avg_logprob': -0.15273499720304914, 'compression_ratio': 1.9188034188034189, 'no_speech_prob': 0.007695279084146023}, {'id': 1351, 'seek': 565972, 'start': 5667.76, 'end': 5670.68, 'text': ' For example, you take the memory stage.', 'tokens': [50766, 1171, 1365, 11, 291, 747, 264, 4675, 3233, 13, 50912], 'temperature': 0.0, 'avg_logprob': -0.15273499720304914, 'compression_ratio': 1.9188034188034189, 'no_speech_prob': 0.007695279084146023}, {'id': 1352, 'seek': 565972, 'start': 5670.68, 'end': 5674.84, 'text': ' The memory stage is useful only for load and store instruction because it is accessing', 'tokens': [50912, 440, 4675, 3233, 307, 4420, 787, 337, 3677, 293, 3531, 10951, 570, 309, 307, 26440, 51120], 'temperature': 0.0, 'avg_logprob': -0.15273499720304914, 'compression_ratio': 1.9188034188034189, 'no_speech_prob': 0.007695279084146023}, {'id': 1353, 'seek': 565972, 'start': 5674.84, 'end': 5678.240000000001, 'text': ' the memory, right.', 'tokens': [51120, 264, 4675, 11, 558, 13, 51290], 'temperature': 0.0, 'avg_logprob': -0.15273499720304914, 'compression_ratio': 1.9188034188034189, 'no_speech_prob': 0.007695279084146023}, {'id': 1354, 'seek': 565972, 'start': 5678.240000000001, 'end': 5684.240000000001, 'text': ' All other instructions and all other instruction types do nothing during the memory stage.', 'tokens': [51290, 1057, 661, 9415, 293, 439, 661, 10951, 3467, 360, 1825, 1830, 264, 4675, 3233, 13, 51590], 'temperature': 0.0, 'avg_logprob': -0.15273499720304914, 'compression_ratio': 1.9188034188034189, 'no_speech_prob': 0.007695279084146023}, {'id': 1355, 'seek': 565972, 'start': 5684.240000000001, 'end': 5688.4400000000005, 'text': ' That means that they simply wait for one cycle, go to the next stage.', 'tokens': [51590, 663, 1355, 300, 436, 2935, 1699, 337, 472, 6586, 11, 352, 281, 264, 958, 3233, 13, 51800], 'temperature': 0.0, 'avg_logprob': -0.15273499720304914, 'compression_ratio': 1.9188034188034189, 'no_speech_prob': 0.007695279084146023}, {'id': 1356, 'seek': 568844, 'start': 5688.44, 'end': 5690.799999999999, 'text': ' I mean, is not it a waste of time?', 'tokens': [50364, 286, 914, 11, 307, 406, 309, 257, 5964, 295, 565, 30, 50482], 'temperature': 0.0, 'avg_logprob': -0.22753534645869813, 'compression_ratio': 1.7182539682539681, 'no_speech_prob': 0.18195147812366486}, {'id': 1357, 'seek': 568844, 'start': 5690.799999999999, 'end': 5691.799999999999, 'text': ' Yes.', 'tokens': [50482, 1079, 13, 50532], 'temperature': 0.0, 'avg_logprob': -0.22753534645869813, 'compression_ratio': 1.7182539682539681, 'no_speech_prob': 0.18195147812366486}, {'id': 1358, 'seek': 568844, 'start': 5691.799999999999, 'end': 5696.2, 'text': ' But then I have simplified my logic so that everybody follows the same path, right.', 'tokens': [50532, 583, 550, 286, 362, 26335, 452, 9952, 370, 300, 2201, 10002, 264, 912, 3100, 11, 558, 13, 50752], 'temperature': 0.0, 'avg_logprob': -0.22753534645869813, 'compression_ratio': 1.7182539682539681, 'no_speech_prob': 0.18195147812366486}, {'id': 1359, 'seek': 568844, 'start': 5696.2, 'end': 5701.44, 'text': ' Let us say you walk through a food counter, right, the different kinds of foods that are', 'tokens': [50752, 961, 505, 584, 291, 1792, 807, 257, 1755, 5682, 11, 558, 11, 264, 819, 3685, 295, 8656, 300, 366, 51014], 'temperature': 0.0, 'avg_logprob': -0.22753534645869813, 'compression_ratio': 1.7182539682539681, 'no_speech_prob': 0.18195147812366486}, {'id': 1360, 'seek': 568844, 'start': 5701.44, 'end': 5703.24, 'text': ' being kept there.', 'tokens': [51014, 885, 4305, 456, 13, 51104], 'temperature': 0.0, 'avg_logprob': -0.22753534645869813, 'compression_ratio': 1.7182539682539681, 'no_speech_prob': 0.18195147812366486}, {'id': 1361, 'seek': 568844, 'start': 5703.24, 'end': 5708.099999999999, 'text': ' You follow the previous person, who follows the previous person and so on and so forth.', 'tokens': [51104, 509, 1524, 264, 3894, 954, 11, 567, 10002, 264, 3894, 954, 293, 370, 322, 293, 370, 5220, 13, 51347], 'temperature': 0.0, 'avg_logprob': -0.22753534645869813, 'compression_ratio': 1.7182539682539681, 'no_speech_prob': 0.18195147812366486}, {'id': 1362, 'seek': 568844, 'start': 5708.099999999999, 'end': 5710.44, 'text': ' Everybody goes through each one of these stages.', 'tokens': [51347, 7646, 1709, 807, 1184, 472, 295, 613, 10232, 13, 51464], 'temperature': 0.0, 'avg_logprob': -0.22753534645869813, 'compression_ratio': 1.7182539682539681, 'no_speech_prob': 0.18195147812366486}, {'id': 1363, 'seek': 568844, 'start': 5710.44, 'end': 5712.5599999999995, 'text': ' You may not like all the items that are there.', 'tokens': [51464, 509, 815, 406, 411, 439, 264, 4754, 300, 366, 456, 13, 51570], 'temperature': 0.0, 'avg_logprob': -0.22753534645869813, 'compression_ratio': 1.7182539682539681, 'no_speech_prob': 0.18195147812366486}, {'id': 1364, 'seek': 568844, 'start': 5712.5599999999995, 'end': 5714.379999999999, 'text': ' You may skip some.', 'tokens': [51570, 509, 815, 10023, 512, 13, 51661], 'temperature': 0.0, 'avg_logprob': -0.22753534645869813, 'compression_ratio': 1.7182539682539681, 'no_speech_prob': 0.18195147812366486}, {'id': 1365, 'seek': 571438, 'start': 5715.38, 'end': 5717.54, 'text': ' pipeline to it, correct.', 'tokens': [50414, 15517, 281, 309, 11, 3006, 13, 50522], 'temperature': 0.0, 'avg_logprob': -0.2118464270941645, 'compression_ratio': 1.901098901098901, 'no_speech_prob': 0.6561955213546753}, {'id': 1366, 'seek': 571438, 'start': 5717.54, 'end': 5721.02, 'text': ' Because after each step, one person comes out of the queue.', 'tokens': [50522, 1436, 934, 1184, 1823, 11, 472, 954, 1487, 484, 295, 264, 18639, 13, 50696], 'temperature': 0.0, 'avg_logprob': -0.2118464270941645, 'compression_ratio': 1.901098901098901, 'no_speech_prob': 0.6561955213546753}, {'id': 1367, 'seek': 571438, 'start': 5721.02, 'end': 5724.900000000001, 'text': ' If I hold everybody in the queue and then say until the first person finishes taking', 'tokens': [50696, 759, 286, 1797, 2201, 294, 264, 18639, 293, 550, 584, 1826, 264, 700, 954, 23615, 1940, 50890], 'temperature': 0.0, 'avg_logprob': -0.2118464270941645, 'compression_ratio': 1.901098901098901, 'no_speech_prob': 0.6561955213546753}, {'id': 1368, 'seek': 571438, 'start': 5724.900000000001, 'end': 5729.42, 'text': ' all the food items, the next person cannot go, then you are going to wait for a very', 'tokens': [50890, 439, 264, 1755, 4754, 11, 264, 958, 954, 2644, 352, 11, 550, 291, 366, 516, 281, 1699, 337, 257, 588, 51116], 'temperature': 0.0, 'avg_logprob': -0.2118464270941645, 'compression_ratio': 1.901098901098901, 'no_speech_prob': 0.6561955213546753}, {'id': 1369, 'seek': 571438, 'start': 5729.42, 'end': 5732.5, 'text': ' long time and you are going to be hungry, correct.', 'tokens': [51116, 938, 565, 293, 291, 366, 516, 281, 312, 8067, 11, 3006, 13, 51270], 'temperature': 0.0, 'avg_logprob': -0.2118464270941645, 'compression_ratio': 1.901098901098901, 'no_speech_prob': 0.6561955213546753}, {'id': 1370, 'seek': 571438, 'start': 5732.5, 'end': 5734.900000000001, 'text': ' So I allow you to go in a pipeline way.', 'tokens': [51270, 407, 286, 2089, 291, 281, 352, 294, 257, 15517, 636, 13, 51390], 'temperature': 0.0, 'avg_logprob': -0.2118464270941645, 'compression_ratio': 1.901098901098901, 'no_speech_prob': 0.6561955213546753}, {'id': 1371, 'seek': 571438, 'start': 5734.900000000001, 'end': 5738.3, 'text': ' Each step one person goes through one of those items.', 'tokens': [51390, 6947, 1823, 472, 954, 1709, 807, 472, 295, 729, 4754, 13, 51560], 'temperature': 0.0, 'avg_logprob': -0.2118464270941645, 'compression_ratio': 1.901098901098901, 'no_speech_prob': 0.6561955213546753}, {'id': 1372, 'seek': 571438, 'start': 5738.3, 'end': 5741.9800000000005, 'text': ' Whether he takes it or not or whether she takes it or not, does not matter.', 'tokens': [51560, 8503, 415, 2516, 309, 420, 406, 420, 1968, 750, 2516, 309, 420, 406, 11, 775, 406, 1871, 13, 51744], 'temperature': 0.0, 'avg_logprob': -0.2118464270941645, 'compression_ratio': 1.901098901098901, 'no_speech_prob': 0.6561955213546753}, {'id': 1373, 'seek': 571438, 'start': 5741.9800000000005, 'end': 5742.9800000000005, 'text': ' They go through that.', 'tokens': [51744, 814, 352, 807, 300, 13, 51794], 'temperature': 0.0, 'avg_logprob': -0.2118464270941645, 'compression_ratio': 1.901098901098901, 'no_speech_prob': 0.6561955213546753}, {'id': 1374, 'seek': 571438, 'start': 5742.9800000000005, 'end': 5743.9800000000005, 'text': ' They go through that.', 'tokens': [51794, 814, 352, 807, 300, 13, 51844], 'temperature': 0.0, 'avg_logprob': -0.2118464270941645, 'compression_ratio': 1.901098901098901, 'no_speech_prob': 0.6561955213546753}, {'id': 1375, 'seek': 574398, 'start': 5743.98, 'end': 5748.66, 'text': ' Like that every instruction goes through all the stages, right.', 'tokens': [50364, 1743, 300, 633, 10951, 1709, 807, 439, 264, 10232, 11, 558, 13, 50598], 'temperature': 0.0, 'avg_logprob': -0.2561879029145112, 'compression_ratio': 1.71900826446281, 'no_speech_prob': 0.007429544348269701}, {'id': 1376, 'seek': 574398, 'start': 5748.66, 'end': 5751.9, 'text': ' I think that is probably what you wanted to ask, right.', 'tokens': [50598, 286, 519, 300, 307, 1391, 437, 291, 1415, 281, 1029, 11, 558, 13, 50760], 'temperature': 0.0, 'avg_logprob': -0.2561879029145112, 'compression_ratio': 1.71900826446281, 'no_speech_prob': 0.007429544348269701}, {'id': 1377, 'seek': 574398, 'start': 5751.9, 'end': 5753.139999999999, 'text': ' That is exactly what happened.', 'tokens': [50760, 663, 307, 2293, 437, 2011, 13, 50822], 'temperature': 0.0, 'avg_logprob': -0.2561879029145112, 'compression_ratio': 1.71900826446281, 'no_speech_prob': 0.007429544348269701}, {'id': 1378, 'seek': 574398, 'start': 5753.139999999999, 'end': 5754.139999999999, 'text': ' Okay.', 'tokens': [50822, 1033, 13, 50872], 'temperature': 0.0, 'avg_logprob': -0.2561879029145112, 'compression_ratio': 1.71900826446281, 'no_speech_prob': 0.007429544348269701}, {'id': 1379, 'seek': 574398, 'start': 5754.139999999999, 'end': 5759.9, 'text': ' There are lots of things that I have simplified and I have not really talked about because', 'tokens': [50872, 821, 366, 3195, 295, 721, 300, 286, 362, 26335, 293, 286, 362, 406, 534, 2825, 466, 570, 51160], 'temperature': 0.0, 'avg_logprob': -0.2561879029145112, 'compression_ratio': 1.71900826446281, 'no_speech_prob': 0.007429544348269701}, {'id': 1380, 'seek': 574398, 'start': 5759.9, 'end': 5764.58, 'text': ' they may not be directly relevant for our discussion, right.', 'tokens': [51160, 436, 815, 406, 312, 3838, 7340, 337, 527, 5017, 11, 558, 13, 51394], 'temperature': 0.0, 'avg_logprob': -0.2561879029145112, 'compression_ratio': 1.71900826446281, 'no_speech_prob': 0.007429544348269701}, {'id': 1381, 'seek': 574398, 'start': 5764.58, 'end': 5767.9, 'text': ' I can talk about it for, believe me, I can talk about it for two weeks.', 'tokens': [51394, 286, 393, 751, 466, 309, 337, 11, 1697, 385, 11, 286, 393, 751, 466, 309, 337, 732, 3259, 13, 51560], 'temperature': 0.0, 'avg_logprob': -0.2561879029145112, 'compression_ratio': 1.71900826446281, 'no_speech_prob': 0.007429544348269701}, {'id': 1382, 'seek': 574398, 'start': 5767.9, 'end': 5770.9, 'text': ' Let us not do that over here.', 'tokens': [51560, 961, 505, 406, 360, 300, 670, 510, 13, 51710], 'temperature': 0.0, 'avg_logprob': -0.2561879029145112, 'compression_ratio': 1.71900826446281, 'no_speech_prob': 0.007429544348269701}, {'id': 1383, 'seek': 574398, 'start': 5770.9, 'end': 5771.9, 'text': ' Okay.', 'tokens': [51710, 1033, 13, 51760], 'temperature': 0.0, 'avg_logprob': -0.2561879029145112, 'compression_ratio': 1.71900826446281, 'no_speech_prob': 0.007429544348269701}, {'id': 1384, 'seek': 577190, 'start': 5771.9, 'end': 5779.66, 'text': ' Now, given that all processors today pipeline their execution, right, what are the problems', 'tokens': [50364, 823, 11, 2212, 300, 439, 27751, 965, 15517, 641, 15058, 11, 558, 11, 437, 366, 264, 2740, 50752], 'temperature': 0.0, 'avg_logprob': -0.2054218623949134, 'compression_ratio': 1.6329588014981273, 'no_speech_prob': 0.05603685602545738}, {'id': 1385, 'seek': 577190, 'start': 5779.66, 'end': 5781.82, 'text': ' that come up with and how do we handle that.', 'tokens': [50752, 300, 808, 493, 365, 293, 577, 360, 321, 4813, 300, 13, 50860], 'temperature': 0.0, 'avg_logprob': -0.2054218623949134, 'compression_ratio': 1.6329588014981273, 'no_speech_prob': 0.05603685602545738}, {'id': 1386, 'seek': 577190, 'start': 5781.82, 'end': 5783.46, 'text': ' That is really what we want to do.', 'tokens': [50860, 663, 307, 534, 437, 321, 528, 281, 360, 13, 50942], 'temperature': 0.0, 'avg_logprob': -0.2054218623949134, 'compression_ratio': 1.6329588014981273, 'no_speech_prob': 0.05603685602545738}, {'id': 1387, 'seek': 577190, 'start': 5783.46, 'end': 5785.42, 'text': ' We are going to take a break at 11, right.', 'tokens': [50942, 492, 366, 516, 281, 747, 257, 1821, 412, 2975, 11, 558, 13, 51040], 'temperature': 0.0, 'avg_logprob': -0.2054218623949134, 'compression_ratio': 1.6329588014981273, 'no_speech_prob': 0.05603685602545738}, {'id': 1388, 'seek': 577190, 'start': 5785.42, 'end': 5786.42, 'text': ' Okay.', 'tokens': [51040, 1033, 13, 51090], 'temperature': 0.0, 'avg_logprob': -0.2054218623949134, 'compression_ratio': 1.6329588014981273, 'no_speech_prob': 0.05603685602545738}, {'id': 1389, 'seek': 577190, 'start': 5786.42, 'end': 5788.42, 'text': ' So we have another 15 minutes or so.', 'tokens': [51090, 407, 321, 362, 1071, 2119, 2077, 420, 370, 13, 51190], 'temperature': 0.0, 'avg_logprob': -0.2054218623949134, 'compression_ratio': 1.6329588014981273, 'no_speech_prob': 0.05603685602545738}, {'id': 1390, 'seek': 577190, 'start': 5788.42, 'end': 5790.7, 'text': ' Let us see what this is.', 'tokens': [51190, 961, 505, 536, 437, 341, 307, 13, 51304], 'temperature': 0.0, 'avg_logprob': -0.2054218623949134, 'compression_ratio': 1.6329588014981273, 'no_speech_prob': 0.05603685602545738}, {'id': 1391, 'seek': 577190, 'start': 5790.7, 'end': 5794.7, 'text': ' So the picture that I have projected in the earlier slide that everybody goes through', 'tokens': [51304, 407, 264, 3036, 300, 286, 362, 26231, 294, 264, 3071, 4137, 300, 2201, 1709, 807, 51504], 'temperature': 0.0, 'avg_logprob': -0.2054218623949134, 'compression_ratio': 1.6329588014981273, 'no_speech_prob': 0.05603685602545738}, {'id': 1392, 'seek': 577190, 'start': 5794.7, 'end': 5798.62, 'text': ' each stage and things move very smoothly is a very ideal situation.', 'tokens': [51504, 1184, 3233, 293, 721, 1286, 588, 19565, 307, 257, 588, 7157, 2590, 13, 51700], 'temperature': 0.0, 'avg_logprob': -0.2054218623949134, 'compression_ratio': 1.6329588014981273, 'no_speech_prob': 0.05603685602545738}, {'id': 1393, 'seek': 579862, 'start': 5799.34, 'end': 5802.38, 'text': ' There are several reasons why this may not always happen.', 'tokens': [50400, 821, 366, 2940, 4112, 983, 341, 815, 406, 1009, 1051, 13, 50552], 'temperature': 0.0, 'avg_logprob': -0.1911894183292567, 'compression_ratio': 1.9705882352941178, 'no_speech_prob': 0.26490098237991333}, {'id': 1394, 'seek': 579862, 'start': 5802.38, 'end': 5808.86, 'text': ' It is because of things like structural hazard or things because of dependencies, data and', 'tokens': [50552, 467, 307, 570, 295, 721, 411, 15067, 20790, 420, 721, 570, 295, 36606, 11, 1412, 293, 50876], 'temperature': 0.0, 'avg_logprob': -0.1911894183292567, 'compression_ratio': 1.9705882352941178, 'no_speech_prob': 0.26490098237991333}, {'id': 1395, 'seek': 579862, 'start': 5808.86, 'end': 5809.86, 'text': ' control dependencies.', 'tokens': [50876, 1969, 36606, 13, 50926], 'temperature': 0.0, 'avg_logprob': -0.1911894183292567, 'compression_ratio': 1.9705882352941178, 'no_speech_prob': 0.26490098237991333}, {'id': 1396, 'seek': 579862, 'start': 5809.86, 'end': 5811.82, 'text': ' So let us see those examples.', 'tokens': [50926, 407, 718, 505, 536, 729, 5110, 13, 51024], 'temperature': 0.0, 'avg_logprob': -0.1911894183292567, 'compression_ratio': 1.9705882352941178, 'no_speech_prob': 0.26490098237991333}, {'id': 1397, 'seek': 579862, 'start': 5811.82, 'end': 5817.46, 'text': ' The case of a structural hazard, it happens because more than one unit want to access', 'tokens': [51024, 440, 1389, 295, 257, 15067, 20790, 11, 309, 2314, 570, 544, 813, 472, 4985, 528, 281, 2105, 51306], 'temperature': 0.0, 'avg_logprob': -0.1911894183292567, 'compression_ratio': 1.9705882352941178, 'no_speech_prob': 0.26490098237991333}, {'id': 1398, 'seek': 579862, 'start': 5817.46, 'end': 5822.46, 'text': ' the same resource at the same time, more than one instruction want to have access to the', 'tokens': [51306, 264, 912, 7684, 412, 264, 912, 565, 11, 544, 813, 472, 10951, 528, 281, 362, 2105, 281, 264, 51556], 'temperature': 0.0, 'avg_logprob': -0.1911894183292567, 'compression_ratio': 1.9705882352941178, 'no_speech_prob': 0.26490098237991333}, {'id': 1399, 'seek': 579862, 'start': 5822.46, 'end': 5828.46, 'text': ' same resource at the same time and that resource can only service one person at a given time.', 'tokens': [51556, 912, 7684, 412, 264, 912, 565, 293, 300, 7684, 393, 787, 2643, 472, 954, 412, 257, 2212, 565, 13, 51856], 'temperature': 0.0, 'avg_logprob': -0.1911894183292567, 'compression_ratio': 1.9705882352941178, 'no_speech_prob': 0.26490098237991333}, {'id': 1400, 'seek': 582846, 'start': 5829.3, 'end': 5830.3, 'text': ' In which case you will have a hazard.', 'tokens': [50406, 682, 597, 1389, 291, 486, 362, 257, 20790, 13, 50456], 'temperature': 0.0, 'avg_logprob': -0.1695533241193319, 'compression_ratio': 1.8977777777777778, 'no_speech_prob': 0.0022666577715426683}, {'id': 1401, 'seek': 582846, 'start': 5830.3, 'end': 5833.3, 'text': ' I will give you examples of that.', 'tokens': [50456, 286, 486, 976, 291, 5110, 295, 300, 13, 50606], 'temperature': 0.0, 'avg_logprob': -0.1695533241193319, 'compression_ratio': 1.8977777777777778, 'no_speech_prob': 0.0022666577715426683}, {'id': 1402, 'seek': 582846, 'start': 5833.3, 'end': 5837.3, 'text': ' The other one is that whenever you have a dependency between two instructions, this', 'tokens': [50606, 440, 661, 472, 307, 300, 5699, 291, 362, 257, 33621, 1296, 732, 9415, 11, 341, 50806], 'temperature': 0.0, 'avg_logprob': -0.1695533241193319, 'compression_ratio': 1.8977777777777778, 'no_speech_prob': 0.0022666577715426683}, {'id': 1403, 'seek': 582846, 'start': 5837.3, 'end': 5838.86, 'text': ' is more important for us.', 'tokens': [50806, 307, 544, 1021, 337, 505, 13, 50884], 'temperature': 0.0, 'avg_logprob': -0.1695533241193319, 'compression_ratio': 1.8977777777777778, 'no_speech_prob': 0.0022666577715426683}, {'id': 1404, 'seek': 582846, 'start': 5838.86, 'end': 5842.9, 'text': ' Whenever you have a dependency between two instructions, the second instruction cannot', 'tokens': [50884, 14159, 291, 362, 257, 33621, 1296, 732, 9415, 11, 264, 1150, 10951, 2644, 51086], 'temperature': 0.0, 'avg_logprob': -0.1695533241193319, 'compression_ratio': 1.8977777777777778, 'no_speech_prob': 0.0022666577715426683}, {'id': 1405, 'seek': 582846, 'start': 5842.9, 'end': 5848.46, 'text': ' be executed until the first instruction has finished producing that value.', 'tokens': [51086, 312, 17577, 1826, 264, 700, 10951, 575, 4335, 10501, 300, 2158, 13, 51364], 'temperature': 0.0, 'avg_logprob': -0.1695533241193319, 'compression_ratio': 1.8977777777777778, 'no_speech_prob': 0.0022666577715426683}, {'id': 1406, 'seek': 582846, 'start': 5848.46, 'end': 5853.82, 'text': ' So this is an important one and if this happens then we have to stall the pipeline.', 'tokens': [51364, 407, 341, 307, 364, 1021, 472, 293, 498, 341, 2314, 550, 321, 362, 281, 19633, 264, 15517, 13, 51632], 'temperature': 0.0, 'avg_logprob': -0.1695533241193319, 'compression_ratio': 1.8977777777777778, 'no_speech_prob': 0.0022666577715426683}, {'id': 1407, 'seek': 585382, 'start': 5854.179999999999, 'end': 5855.74, 'text': ' The third thing is control hazards.', 'tokens': [50382, 440, 2636, 551, 307, 1969, 34516, 13, 50460], 'temperature': 0.0, 'avg_logprob': -0.19263464663209034, 'compression_ratio': 1.978902953586498, 'no_speech_prob': 0.014236880466341972}, {'id': 1408, 'seek': 585382, 'start': 5855.74, 'end': 5860.62, 'text': ' When you have branch instructions, you have to jump to a different location and then start', 'tokens': [50460, 1133, 291, 362, 9819, 9415, 11, 291, 362, 281, 3012, 281, 257, 819, 4914, 293, 550, 722, 50704], 'temperature': 0.0, 'avg_logprob': -0.19263464663209034, 'compression_ratio': 1.978902953586498, 'no_speech_prob': 0.014236880466341972}, {'id': 1409, 'seek': 585382, 'start': 5860.62, 'end': 5861.62, 'text': ' fetching from that.', 'tokens': [50704, 23673, 278, 490, 300, 13, 50754], 'temperature': 0.0, 'avg_logprob': -0.19263464663209034, 'compression_ratio': 1.978902953586498, 'no_speech_prob': 0.014236880466341972}, {'id': 1410, 'seek': 585382, 'start': 5861.62, 'end': 5865.86, 'text': ' Typically, you will fetch instruction, the next instruction, the next instruction and', 'tokens': [50754, 23129, 11, 291, 486, 23673, 10951, 11, 264, 958, 10951, 11, 264, 958, 10951, 293, 50966], 'temperature': 0.0, 'avg_logprob': -0.19263464663209034, 'compression_ratio': 1.978902953586498, 'no_speech_prob': 0.014236880466341972}, {'id': 1411, 'seek': 585382, 'start': 5865.86, 'end': 5866.9, 'text': ' so on.', 'tokens': [50966, 370, 322, 13, 51018], 'temperature': 0.0, 'avg_logprob': -0.19263464663209034, 'compression_ratio': 1.978902953586498, 'no_speech_prob': 0.014236880466341972}, {'id': 1412, 'seek': 585382, 'start': 5866.9, 'end': 5871.66, 'text': ' But then if I have a branch less than or branch greater than instruction, the next instruction', 'tokens': [51018, 583, 550, 498, 286, 362, 257, 9819, 1570, 813, 420, 9819, 5044, 813, 10951, 11, 264, 958, 10951, 51256], 'temperature': 0.0, 'avg_logprob': -0.19263464663209034, 'compression_ratio': 1.978902953586498, 'no_speech_prob': 0.014236880466341972}, {'id': 1413, 'seek': 585382, 'start': 5871.66, 'end': 5876.0599999999995, 'text': ' I have to fetch might be at a far off place and I do not even know where that far off', 'tokens': [51256, 286, 362, 281, 23673, 1062, 312, 412, 257, 1400, 766, 1081, 293, 286, 360, 406, 754, 458, 689, 300, 1400, 766, 51476], 'temperature': 0.0, 'avg_logprob': -0.19263464663209034, 'compression_ratio': 1.978902953586498, 'no_speech_prob': 0.014236880466341972}, {'id': 1414, 'seek': 585382, 'start': 5876.0599999999995, 'end': 5877.0599999999995, 'text': ' place is.', 'tokens': [51476, 1081, 307, 13, 51526], 'temperature': 0.0, 'avg_logprob': -0.19263464663209034, 'compression_ratio': 1.978902953586498, 'no_speech_prob': 0.014236880466341972}, {'id': 1415, 'seek': 585382, 'start': 5877.0599999999995, 'end': 5878.94, 'text': ' Need not have to be very very far off.', 'tokens': [51526, 16984, 406, 362, 281, 312, 588, 588, 1400, 766, 13, 51620], 'temperature': 0.0, 'avg_logprob': -0.19263464663209034, 'compression_ratio': 1.978902953586498, 'no_speech_prob': 0.014236880466341972}, {'id': 1416, 'seek': 587894, 'start': 5879.0599999999995, 'end': 5883.94, 'text': ' Even if it is few instructions away, I still do not know what that address is.', 'tokens': [50370, 2754, 498, 309, 307, 1326, 9415, 1314, 11, 286, 920, 360, 406, 458, 437, 300, 2985, 307, 13, 50614], 'temperature': 0.0, 'avg_logprob': -0.1962078130133798, 'compression_ratio': 1.742063492063492, 'no_speech_prob': 0.16061273217201233}, {'id': 1417, 'seek': 587894, 'start': 5883.94, 'end': 5888.379999999999, 'text': ' So I cannot do instruction fetch until I figure out whether the branch has to be taken or', 'tokens': [50614, 407, 286, 2644, 360, 10951, 23673, 1826, 286, 2573, 484, 1968, 264, 9819, 575, 281, 312, 2726, 420, 50836], 'temperature': 0.0, 'avg_logprob': -0.1962078130133798, 'compression_ratio': 1.742063492063492, 'no_speech_prob': 0.16061273217201233}, {'id': 1418, 'seek': 587894, 'start': 5888.379999999999, 'end': 5890.259999999999, 'text': ' not taken.', 'tokens': [50836, 406, 2726, 13, 50930], 'temperature': 0.0, 'avg_logprob': -0.1962078130133798, 'compression_ratio': 1.742063492063492, 'no_speech_prob': 0.16061273217201233}, {'id': 1419, 'seek': 587894, 'start': 5890.259999999999, 'end': 5895.179999999999, 'text': ' So these are the situations which cause hazards and because of these hazards what happened', 'tokens': [50930, 407, 613, 366, 264, 6851, 597, 3082, 34516, 293, 570, 295, 613, 34516, 437, 2011, 51176], 'temperature': 0.0, 'avg_logprob': -0.1962078130133798, 'compression_ratio': 1.742063492063492, 'no_speech_prob': 0.16061273217201233}, {'id': 1420, 'seek': 587894, 'start': 5895.179999999999, 'end': 5897.74, 'text': ' is that you will have stalls in the pipeline.', 'tokens': [51176, 307, 300, 291, 486, 362, 50248, 294, 264, 15517, 13, 51304], 'temperature': 0.0, 'avg_logprob': -0.1962078130133798, 'compression_ratio': 1.742063492063492, 'no_speech_prob': 0.16061273217201233}, {'id': 1421, 'seek': 587894, 'start': 5897.74, 'end': 5899.9, 'text': ' We will explain that in the next few slides.', 'tokens': [51304, 492, 486, 2903, 300, 294, 264, 958, 1326, 9788, 13, 51412], 'temperature': 0.0, 'avg_logprob': -0.1962078130133798, 'compression_ratio': 1.742063492063492, 'no_speech_prob': 0.16061273217201233}, {'id': 1422, 'seek': 587894, 'start': 5899.9, 'end': 5906.9, 'text': ' Structural hazard, let us look at a specific instruction, a specific example.', 'tokens': [51412, 745, 1757, 1807, 20790, 11, 718, 505, 574, 412, 257, 2685, 10951, 11, 257, 2685, 1365, 13, 51762], 'temperature': 0.0, 'avg_logprob': -0.1962078130133798, 'compression_ratio': 1.742063492063492, 'no_speech_prob': 0.16061273217201233}, {'id': 1423, 'seek': 590690, 'start': 5907.86, 'end': 5909.74, 'text': ' Let us say the ith instruction is a load word instruction.', 'tokens': [50412, 961, 505, 584, 264, 309, 71, 10951, 307, 257, 3677, 1349, 10951, 13, 50506], 'temperature': 0.0, 'avg_logprob': -0.22217079688762797, 'compression_ratio': 1.7857142857142858, 'no_speech_prob': 0.009238735772669315}, {'id': 1424, 'seek': 590690, 'start': 5909.74, 'end': 5911.78, 'text': ' So what is it going to do?', 'tokens': [50506, 407, 437, 307, 309, 516, 281, 360, 30, 50608], 'temperature': 0.0, 'avg_logprob': -0.22217079688762797, 'compression_ratio': 1.7857142857142858, 'no_speech_prob': 0.009238735772669315}, {'id': 1425, 'seek': 590690, 'start': 5911.78, 'end': 5920.259999999999, 'text': ' It is going to fetch the contents of R2 plus 8 and load it into R3.', 'tokens': [50608, 467, 307, 516, 281, 23673, 264, 15768, 295, 497, 17, 1804, 1649, 293, 3677, 309, 666, 497, 18, 13, 51032], 'temperature': 0.0, 'avg_logprob': -0.22217079688762797, 'compression_ratio': 1.7857142857142858, 'no_speech_prob': 0.009238735772669315}, {'id': 1426, 'seek': 590690, 'start': 5920.259999999999, 'end': 5928.94, 'text': ' When is it going to actually do the computation of R2 plus 8 in the execution stage?', 'tokens': [51032, 1133, 307, 309, 516, 281, 767, 360, 264, 24903, 295, 497, 17, 1804, 1649, 294, 264, 15058, 3233, 30, 51466], 'temperature': 0.0, 'avg_logprob': -0.22217079688762797, 'compression_ratio': 1.7857142857142858, 'no_speech_prob': 0.009238735772669315}, {'id': 1427, 'seek': 590690, 'start': 5928.94, 'end': 5933.0199999999995, 'text': ' When is it going to fetch the memory location?', 'tokens': [51466, 1133, 307, 309, 516, 281, 23673, 264, 4675, 4914, 30, 51670], 'temperature': 0.0, 'avg_logprob': -0.22217079688762797, 'compression_ratio': 1.7857142857142858, 'no_speech_prob': 0.009238735772669315}, {'id': 1428, 'seek': 590690, 'start': 5933.0199999999995, 'end': 5934.0199999999995, 'text': ' In the memory.', 'tokens': [51670, 682, 264, 4675, 13, 51720], 'temperature': 0.0, 'avg_logprob': -0.22217079688762797, 'compression_ratio': 1.7857142857142858, 'no_speech_prob': 0.009238735772669315}, {'id': 1429, 'seek': 593402, 'start': 5934.14, 'end': 5940.3, 'text': ' For now we are making a very simplified assumption that any operation that we specify in any', 'tokens': [50370, 1171, 586, 321, 366, 1455, 257, 588, 26335, 15302, 300, 604, 6916, 300, 321, 16500, 294, 604, 50678], 'temperature': 0.0, 'avg_logprob': -0.19818755701968543, 'compression_ratio': 1.6446280991735538, 'no_speech_prob': 0.014535377733409405}, {'id': 1430, 'seek': 593402, 'start': 5940.3, 'end': 5943.3, 'text': ' of these phases can be completed in one cycle.', 'tokens': [50678, 295, 613, 18764, 393, 312, 7365, 294, 472, 6586, 13, 50828], 'temperature': 0.0, 'avg_logprob': -0.19818755701968543, 'compression_ratio': 1.6446280991735538, 'no_speech_prob': 0.014535377733409405}, {'id': 1431, 'seek': 593402, 'start': 5943.3, 'end': 5948.860000000001, 'text': ' Particularly when I say that the contents of the memory location R2 plus 8 has to be', 'tokens': [50828, 32281, 562, 286, 584, 300, 264, 15768, 295, 264, 4675, 4914, 497, 17, 1804, 1649, 575, 281, 312, 51106], 'temperature': 0.0, 'avg_logprob': -0.19818755701968543, 'compression_ratio': 1.6446280991735538, 'no_speech_prob': 0.014535377733409405}, {'id': 1432, 'seek': 593402, 'start': 5948.860000000001, 'end': 5953.860000000001, 'text': ' fetched from memory, I am saying that it is going to be done in one cycle.', 'tokens': [51106, 23673, 292, 490, 4675, 11, 286, 669, 1566, 300, 309, 307, 516, 281, 312, 1096, 294, 472, 6586, 13, 51356], 'temperature': 0.0, 'avg_logprob': -0.19818755701968543, 'compression_ratio': 1.6446280991735538, 'no_speech_prob': 0.014535377733409405}, {'id': 1433, 'seek': 593402, 'start': 5953.860000000001, 'end': 5960.900000000001, 'text': ' It may be an unreasonable expectation because I said memory is several hundred cycles access', 'tokens': [51356, 467, 815, 312, 364, 41730, 14334, 570, 286, 848, 4675, 307, 2940, 3262, 17796, 2105, 51708], 'temperature': 0.0, 'avg_logprob': -0.19818755701968543, 'compression_ratio': 1.6446280991735538, 'no_speech_prob': 0.014535377733409405}, {'id': 1434, 'seek': 593402, 'start': 5960.900000000001, 'end': 5961.900000000001, 'text': ' time.', 'tokens': [51708, 565, 13, 51758], 'temperature': 0.0, 'avg_logprob': -0.19818755701968543, 'compression_ratio': 1.6446280991735538, 'no_speech_prob': 0.014535377733409405}, {'id': 1435, 'seek': 596190, 'start': 5962.78, 'end': 5966.7, 'text': ' So how is it going to be accessed in one cycle?', 'tokens': [50408, 407, 577, 307, 309, 516, 281, 312, 34211, 294, 472, 6586, 30, 50604], 'temperature': 0.0, 'avg_logprob': -0.17249090531293085, 'compression_ratio': 1.8838383838383839, 'no_speech_prob': 0.004454048350453377}, {'id': 1436, 'seek': 596190, 'start': 5966.7, 'end': 5967.7, 'text': ' We do not know.', 'tokens': [50604, 492, 360, 406, 458, 13, 50654], 'temperature': 0.0, 'avg_logprob': -0.17249090531293085, 'compression_ratio': 1.8838383838383839, 'no_speech_prob': 0.004454048350453377}, {'id': 1437, 'seek': 596190, 'start': 5967.7, 'end': 5971.379999999999, 'text': ' But for the time being let us assume that it is going to be accessed in one cycle.', 'tokens': [50654, 583, 337, 264, 565, 885, 718, 505, 6552, 300, 309, 307, 516, 281, 312, 34211, 294, 472, 6586, 13, 50838], 'temperature': 0.0, 'avg_logprob': -0.17249090531293085, 'compression_ratio': 1.8838383838383839, 'no_speech_prob': 0.004454048350453377}, {'id': 1438, 'seek': 596190, 'start': 5971.379999999999, 'end': 5974.219999999999, 'text': ' Maybe the value is available in your cache.', 'tokens': [50838, 2704, 264, 2158, 307, 2435, 294, 428, 19459, 13, 50980], 'temperature': 0.0, 'avg_logprob': -0.17249090531293085, 'compression_ratio': 1.8838383838383839, 'no_speech_prob': 0.004454048350453377}, {'id': 1439, 'seek': 596190, 'start': 5974.219999999999, 'end': 5980.0199999999995, 'text': ' Therefore you can access it in one cycle.', 'tokens': [50980, 7504, 291, 393, 2105, 309, 294, 472, 6586, 13, 51270], 'temperature': 0.0, 'avg_logprob': -0.17249090531293085, 'compression_ratio': 1.8838383838383839, 'no_speech_prob': 0.004454048350453377}, {'id': 1440, 'seek': 596190, 'start': 5980.0199999999995, 'end': 5984.82, 'text': ' So we are going to assume that memory access is going to take place and is going to take', 'tokens': [51270, 407, 321, 366, 516, 281, 6552, 300, 4675, 2105, 307, 516, 281, 747, 1081, 293, 307, 516, 281, 747, 51510], 'temperature': 0.0, 'avg_logprob': -0.17249090531293085, 'compression_ratio': 1.8838383838383839, 'no_speech_prob': 0.004454048350453377}, {'id': 1441, 'seek': 596190, 'start': 5984.82, 'end': 5986.62, 'text': ' one cycle.', 'tokens': [51510, 472, 6586, 13, 51600], 'temperature': 0.0, 'avg_logprob': -0.17249090531293085, 'compression_ratio': 1.8838383838383839, 'no_speech_prob': 0.004454048350453377}, {'id': 1442, 'seek': 596190, 'start': 5986.62, 'end': 5990.92, 'text': ' What did we say about instruction fetch?', 'tokens': [51600, 708, 630, 321, 584, 466, 10951, 23673, 30, 51815], 'temperature': 0.0, 'avg_logprob': -0.17249090531293085, 'compression_ratio': 1.8838383838383839, 'no_speech_prob': 0.004454048350453377}, {'id': 1443, 'seek': 599092, 'start': 5990.9400000000005, 'end': 5998.6, 'text': ' The memory location pointed by the PC program counter is fetched and that is the instruction', 'tokens': [50365, 440, 4675, 4914, 10932, 538, 264, 6465, 1461, 5682, 307, 23673, 292, 293, 300, 307, 264, 10951, 50748], 'temperature': 0.0, 'avg_logprob': -0.1792060744087651, 'compression_ratio': 1.892018779342723, 'no_speech_prob': 0.009281708858907223}, {'id': 1444, 'seek': 599092, 'start': 5998.6, 'end': 6000.64, 'text': ' that you want to execute.', 'tokens': [50748, 300, 291, 528, 281, 14483, 13, 50850], 'temperature': 0.0, 'avg_logprob': -0.1792060744087651, 'compression_ratio': 1.892018779342723, 'no_speech_prob': 0.009281708858907223}, {'id': 1445, 'seek': 599092, 'start': 6000.64, 'end': 6004.08, 'text': ' Again we said that that is going to happen in the instruction fetch phase.', 'tokens': [50850, 3764, 321, 848, 300, 300, 307, 516, 281, 1051, 294, 264, 10951, 23673, 5574, 13, 51022], 'temperature': 0.0, 'avg_logprob': -0.1792060744087651, 'compression_ratio': 1.892018779342723, 'no_speech_prob': 0.009281708858907223}, {'id': 1446, 'seek': 599092, 'start': 6004.08, 'end': 6005.56, 'text': ' We are fetching a memory location.', 'tokens': [51022, 492, 366, 23673, 278, 257, 4675, 4914, 13, 51096], 'temperature': 0.0, 'avg_logprob': -0.1792060744087651, 'compression_ratio': 1.892018779342723, 'no_speech_prob': 0.009281708858907223}, {'id': 1447, 'seek': 599092, 'start': 6005.56, 'end': 6009.04, 'text': ' We are saying that it is going to take one cycle.', 'tokens': [51096, 492, 366, 1566, 300, 309, 307, 516, 281, 747, 472, 6586, 13, 51270], 'temperature': 0.0, 'avg_logprob': -0.1792060744087651, 'compression_ratio': 1.892018779342723, 'no_speech_prob': 0.009281708858907223}, {'id': 1448, 'seek': 599092, 'start': 6009.04, 'end': 6013.2, 'text': ' Again maybe we will assume that it is in the instruction cache and we are able to access', 'tokens': [51270, 3764, 1310, 321, 486, 6552, 300, 309, 307, 294, 264, 10951, 19459, 293, 321, 366, 1075, 281, 2105, 51478], 'temperature': 0.0, 'avg_logprob': -0.1792060744087651, 'compression_ratio': 1.892018779342723, 'no_speech_prob': 0.009281708858907223}, {'id': 1449, 'seek': 599092, 'start': 6013.2, 'end': 6015.24, 'text': ' it in one cycle.', 'tokens': [51478, 309, 294, 472, 6586, 13, 51580], 'temperature': 0.0, 'avg_logprob': -0.1792060744087651, 'compression_ratio': 1.892018779342723, 'no_speech_prob': 0.009281708858907223}, {'id': 1450, 'seek': 599092, 'start': 6015.24, 'end': 6016.24, 'text': ' No problem.', 'tokens': [51580, 883, 1154, 13, 51630], 'temperature': 0.0, 'avg_logprob': -0.1792060744087651, 'compression_ratio': 1.892018779342723, 'no_speech_prob': 0.009281708858907223}, {'id': 1451, 'seek': 599092, 'start': 6016.24, 'end': 6017.24, 'text': ' Right?', 'tokens': [51630, 1779, 30, 51680], 'temperature': 0.0, 'avg_logprob': -0.1792060744087651, 'compression_ratio': 1.892018779342723, 'no_speech_prob': 0.009281708858907223}, {'id': 1452, 'seek': 601724, 'start': 6017.48, 'end': 6022.2, 'text': ' But even if I assume all of these things, what is going to happen?', 'tokens': [50376, 583, 754, 498, 286, 6552, 439, 295, 613, 721, 11, 437, 307, 516, 281, 1051, 30, 50612], 'temperature': 0.0, 'avg_logprob': -0.20952050582222317, 'compression_ratio': 1.732620320855615, 'no_speech_prob': 0.05269023776054382}, {'id': 1453, 'seek': 601724, 'start': 6022.2, 'end': 6025.28, 'text': ' Let us see.', 'tokens': [50612, 961, 505, 536, 13, 50766], 'temperature': 0.0, 'avg_logprob': -0.20952050582222317, 'compression_ratio': 1.732620320855615, 'no_speech_prob': 0.05269023776054382}, {'id': 1454, 'seek': 601724, 'start': 6025.28, 'end': 6030.94, 'text': ' So I have instruction i, i plus 1, i plus 2 and when instruction i plus 3 has to be', 'tokens': [50766, 407, 286, 362, 10951, 741, 11, 741, 1804, 502, 11, 741, 1804, 568, 293, 562, 10951, 741, 1804, 805, 575, 281, 312, 51049], 'temperature': 0.0, 'avg_logprob': -0.20952050582222317, 'compression_ratio': 1.732620320855615, 'no_speech_prob': 0.05269023776054382}, {'id': 1455, 'seek': 601724, 'start': 6030.94, 'end': 6037.0, 'text': ' fetched, it has to be fetched from the memory.', 'tokens': [51049, 23673, 292, 11, 309, 575, 281, 312, 23673, 292, 490, 264, 4675, 13, 51352], 'temperature': 0.0, 'avg_logprob': -0.20952050582222317, 'compression_ratio': 1.732620320855615, 'no_speech_prob': 0.05269023776054382}, {'id': 1456, 'seek': 601724, 'start': 6037.0, 'end': 6044.44, 'text': ' At the same time my ith instruction which is a load instruction is also trying to fetch', 'tokens': [51352, 1711, 264, 912, 565, 452, 309, 71, 10951, 597, 307, 257, 3677, 10951, 307, 611, 1382, 281, 23673, 51724], 'temperature': 0.0, 'avg_logprob': -0.20952050582222317, 'compression_ratio': 1.732620320855615, 'no_speech_prob': 0.05269023776054382}, {'id': 1457, 'seek': 601724, 'start': 6044.44, 'end': 6045.44, 'text': ' something from the memory.', 'tokens': [51724, 746, 490, 264, 4675, 13, 51774], 'temperature': 0.0, 'avg_logprob': -0.20952050582222317, 'compression_ratio': 1.732620320855615, 'no_speech_prob': 0.05269023776054382}, {'id': 1458, 'seek': 604544, 'start': 6045.639999999999, 'end': 6048.32, 'text': ' Here you are trying to fetch some data value from the memory.', 'tokens': [50374, 1692, 291, 366, 1382, 281, 23673, 512, 1412, 2158, 490, 264, 4675, 13, 50508], 'temperature': 0.0, 'avg_logprob': -0.22233889801333648, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.011248119175434113}, {'id': 1459, 'seek': 604544, 'start': 6048.32, 'end': 6052.12, 'text': ' Here you are trying to fetch a instruction from the memory.', 'tokens': [50508, 1692, 291, 366, 1382, 281, 23673, 257, 10951, 490, 264, 4675, 13, 50698], 'temperature': 0.0, 'avg_logprob': -0.22233889801333648, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.011248119175434113}, {'id': 1460, 'seek': 604544, 'start': 6052.12, 'end': 6060.339999999999, 'text': ' But if the memory has only one port and can only service one request, then what happens?', 'tokens': [50698, 583, 498, 264, 4675, 575, 787, 472, 2436, 293, 393, 787, 2643, 472, 5308, 11, 550, 437, 2314, 30, 51109], 'temperature': 0.0, 'avg_logprob': -0.22233889801333648, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.011248119175434113}, {'id': 1461, 'seek': 604544, 'start': 6060.339999999999, 'end': 6061.719999999999, 'text': ' Then you have a problem.', 'tokens': [51109, 1396, 291, 362, 257, 1154, 13, 51178], 'temperature': 0.0, 'avg_logprob': -0.22233889801333648, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.011248119175434113}, {'id': 1462, 'seek': 604544, 'start': 6061.719999999999, 'end': 6063.2, 'text': ' One of them have to wait.', 'tokens': [51178, 1485, 295, 552, 362, 281, 1699, 13, 51252], 'temperature': 0.0, 'avg_logprob': -0.22233889801333648, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.011248119175434113}, {'id': 1463, 'seek': 604544, 'start': 6063.2, 'end': 6066.12, 'text': ' Always the later person has to wait.', 'tokens': [51252, 11270, 264, 1780, 954, 575, 281, 1699, 13, 51398], 'temperature': 0.0, 'avg_logprob': -0.22233889801333648, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.011248119175434113}, {'id': 1464, 'seek': 604544, 'start': 6066.12, 'end': 6067.12, 'text': ' Right?', 'tokens': [51398, 1779, 30, 51448], 'temperature': 0.0, 'avg_logprob': -0.22233889801333648, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.011248119175434113}, {'id': 1465, 'seek': 604544, 'start': 6067.12, 'end': 6071.799999999999, 'text': ' So this kind of a problem is what is called the structural hazard.', 'tokens': [51448, 407, 341, 733, 295, 257, 1154, 307, 437, 307, 1219, 264, 15067, 20790, 13, 51682], 'temperature': 0.0, 'avg_logprob': -0.22233889801333648, 'compression_ratio': 1.7142857142857142, 'no_speech_prob': 0.011248119175434113}, {'id': 1466, 'seek': 607180, 'start': 6071.8, 'end': 6077.12, 'text': ' So if there is a structural hazard, then you say okay you wait for a second, let that person', 'tokens': [50364, 407, 498, 456, 307, 257, 15067, 20790, 11, 550, 291, 584, 1392, 291, 1699, 337, 257, 1150, 11, 718, 300, 954, 50630], 'temperature': 0.0, 'avg_logprob': -0.1556782012290143, 'compression_ratio': 1.693069306930693, 'no_speech_prob': 0.014656748622655869}, {'id': 1467, 'seek': 607180, 'start': 6077.12, 'end': 6079.320000000001, 'text': ' finish and then go.', 'tokens': [50630, 2413, 293, 550, 352, 13, 50740], 'temperature': 0.0, 'avg_logprob': -0.1556782012290143, 'compression_ratio': 1.693069306930693, 'no_speech_prob': 0.014656748622655869}, {'id': 1468, 'seek': 607180, 'start': 6079.320000000001, 'end': 6080.96, 'text': ' And then what happens?', 'tokens': [50740, 400, 550, 437, 2314, 30, 50822], 'temperature': 0.0, 'avg_logprob': -0.1556782012290143, 'compression_ratio': 1.693069306930693, 'no_speech_prob': 0.014656748622655869}, {'id': 1469, 'seek': 607180, 'start': 6080.96, 'end': 6086.400000000001, 'text': ' This instruction is going to start in the next cycle.', 'tokens': [50822, 639, 10951, 307, 516, 281, 722, 294, 264, 958, 6586, 13, 51094], 'temperature': 0.0, 'avg_logprob': -0.1556782012290143, 'compression_ratio': 1.693069306930693, 'no_speech_prob': 0.014656748622655869}, {'id': 1470, 'seek': 607180, 'start': 6086.400000000001, 'end': 6092.360000000001, 'text': ' So if you see the completion, if this completes at time t, at time t plus 1 nothing comes', 'tokens': [51094, 407, 498, 291, 536, 264, 19372, 11, 498, 341, 36362, 412, 565, 256, 11, 412, 565, 256, 1804, 502, 1825, 1487, 51392], 'temperature': 0.0, 'avg_logprob': -0.1556782012290143, 'compression_ratio': 1.693069306930693, 'no_speech_prob': 0.014656748622655869}, {'id': 1471, 'seek': 607180, 'start': 6092.360000000001, 'end': 6093.360000000001, 'text': ' out.', 'tokens': [51392, 484, 13, 51442], 'temperature': 0.0, 'avg_logprob': -0.1556782012290143, 'compression_ratio': 1.693069306930693, 'no_speech_prob': 0.014656748622655869}, {'id': 1472, 'seek': 607180, 'start': 6093.360000000001, 'end': 6098.04, 'text': ' Whereas at time t plus 2, the next instruction comes out.', 'tokens': [51442, 13813, 412, 565, 256, 1804, 568, 11, 264, 958, 10951, 1487, 484, 13, 51676], 'temperature': 0.0, 'avg_logprob': -0.1556782012290143, 'compression_ratio': 1.693069306930693, 'no_speech_prob': 0.014656748622655869}, {'id': 1473, 'seek': 609804, 'start': 6098.04, 'end': 6101.76, 'text': ' So this is what we are going to call as a stall or a bubble.', 'tokens': [50364, 407, 341, 307, 437, 321, 366, 516, 281, 818, 382, 257, 19633, 420, 257, 12212, 13, 50550], 'temperature': 0.0, 'avg_logprob': -0.19242624650921739, 'compression_ratio': 1.7172131147540983, 'no_speech_prob': 0.02084651030600071}, {'id': 1474, 'seek': 609804, 'start': 6101.76, 'end': 6107.64, 'text': ' So when you open the tap, water comes, sometimes air comes in between.', 'tokens': [50550, 407, 562, 291, 1269, 264, 5119, 11, 1281, 1487, 11, 2171, 1988, 1487, 294, 1296, 13, 50844], 'temperature': 0.0, 'avg_logprob': -0.19242624650921739, 'compression_ratio': 1.7172131147540983, 'no_speech_prob': 0.02084651030600071}, {'id': 1475, 'seek': 609804, 'start': 6107.64, 'end': 6108.64, 'text': ' That is the bubble.', 'tokens': [50844, 663, 307, 264, 12212, 13, 50894], 'temperature': 0.0, 'avg_logprob': -0.19242624650921739, 'compression_ratio': 1.7172131147540983, 'no_speech_prob': 0.02084651030600071}, {'id': 1476, 'seek': 609804, 'start': 6108.64, 'end': 6109.64, 'text': ' Right?', 'tokens': [50894, 1779, 30, 50944], 'temperature': 0.0, 'avg_logprob': -0.19242624650921739, 'compression_ratio': 1.7172131147540983, 'no_speech_prob': 0.02084651030600071}, {'id': 1477, 'seek': 609804, 'start': 6109.64, 'end': 6110.92, 'text': ' That is exactly what it is.', 'tokens': [50944, 663, 307, 2293, 437, 309, 307, 13, 51008], 'temperature': 0.0, 'avg_logprob': -0.19242624650921739, 'compression_ratio': 1.7172131147540983, 'no_speech_prob': 0.02084651030600071}, {'id': 1478, 'seek': 609804, 'start': 6110.92, 'end': 6112.8, 'text': ' The pipeline is executing.', 'tokens': [51008, 440, 15517, 307, 32368, 13, 51102], 'temperature': 0.0, 'avg_logprob': -0.19242624650921739, 'compression_ratio': 1.7172131147540983, 'no_speech_prob': 0.02084651030600071}, {'id': 1479, 'seek': 609804, 'start': 6112.8, 'end': 6117.44, 'text': ' In the ideal situation it would have got one instruction coming out every cycle.', 'tokens': [51102, 682, 264, 7157, 2590, 309, 576, 362, 658, 472, 10951, 1348, 484, 633, 6586, 13, 51334], 'temperature': 0.0, 'avg_logprob': -0.19242624650921739, 'compression_ratio': 1.7172131147540983, 'no_speech_prob': 0.02084651030600071}, {'id': 1480, 'seek': 609804, 'start': 6117.44, 'end': 6122.68, 'text': ' But because of the structural hazard, you now have a bubble.', 'tokens': [51334, 583, 570, 295, 264, 15067, 20790, 11, 291, 586, 362, 257, 12212, 13, 51596], 'temperature': 0.0, 'avg_logprob': -0.19242624650921739, 'compression_ratio': 1.7172131147540983, 'no_speech_prob': 0.02084651030600071}, {'id': 1481, 'seek': 609804, 'start': 6122.68, 'end': 6125.8, 'text': ' That means that nothing is coming out during that cycle.', 'tokens': [51596, 663, 1355, 300, 1825, 307, 1348, 484, 1830, 300, 6586, 13, 51752], 'temperature': 0.0, 'avg_logprob': -0.19242624650921739, 'compression_ratio': 1.7172131147540983, 'no_speech_prob': 0.02084651030600071}, {'id': 1482, 'seek': 609804, 'start': 6125.8, 'end': 6126.8, 'text': ' Right?', 'tokens': [51752, 1779, 30, 51802], 'temperature': 0.0, 'avg_logprob': -0.19242624650921739, 'compression_ratio': 1.7172131147540983, 'no_speech_prob': 0.02084651030600071}, {'id': 1483, 'seek': 612680, 'start': 6127.4800000000005, 'end': 6133.0, 'text': ' This instruction comes out at t, at t plus 1 nothing comes out, at t plus 2 this instruction', 'tokens': [50398, 639, 10951, 1487, 484, 412, 256, 11, 412, 256, 1804, 502, 1825, 1487, 484, 11, 412, 256, 1804, 568, 341, 10951, 50674], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1484, 'seek': 612680, 'start': 6133.0, 'end': 6134.0, 'text': ' comes out.', 'tokens': [50674, 1487, 484, 13, 50724], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1485, 'seek': 612680, 'start': 6134.0, 'end': 6135.0, 'text': ' Okay?', 'tokens': [50724, 1033, 30, 50774], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1486, 'seek': 612680, 'start': 6135.0, 'end': 6136.0, 'text': ' That is structural hazard.', 'tokens': [50774, 663, 307, 15067, 20790, 13, 50824], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1487, 'seek': 612680, 'start': 6136.0, 'end': 6137.0, 'text': ' Okay?', 'tokens': [50824, 1033, 30, 50874], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1488, 'seek': 612680, 'start': 6137.0, 'end': 6141.56, 'text': ' There are architectural solutions or hardware solutions for taking care of structural hazards.', 'tokens': [50874, 821, 366, 26621, 6547, 420, 8837, 6547, 337, 1940, 1127, 295, 15067, 34516, 13, 51102], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1489, 'seek': 612680, 'start': 6141.56, 'end': 6143.04, 'text': ' We will not worry about it.', 'tokens': [51102, 492, 486, 406, 3292, 466, 309, 13, 51176], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1490, 'seek': 612680, 'start': 6143.04, 'end': 6144.68, 'text': ' This is not an architecture lecture.', 'tokens': [51176, 639, 307, 406, 364, 9482, 7991, 13, 51258], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1491, 'seek': 612680, 'start': 6144.68, 'end': 6146.04, 'text': ' So we can move forward.', 'tokens': [51258, 407, 321, 393, 1286, 2128, 13, 51326], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1492, 'seek': 612680, 'start': 6146.04, 'end': 6147.96, 'text': ' Let us talk about data hazard.', 'tokens': [51326, 961, 505, 751, 466, 1412, 20790, 13, 51422], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1493, 'seek': 612680, 'start': 6147.96, 'end': 6149.6, 'text': ' This is very important for us.', 'tokens': [51422, 639, 307, 588, 1021, 337, 505, 13, 51504], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1494, 'seek': 612680, 'start': 6149.6, 'end': 6150.6, 'text': ' Okay?', 'tokens': [51504, 1033, 30, 51554], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1495, 'seek': 612680, 'start': 6150.6, 'end': 6152.8, 'text': ' Let us say my ith instruction is this.', 'tokens': [51554, 961, 505, 584, 452, 309, 71, 10951, 307, 341, 13, 51664], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1496, 'seek': 612680, 'start': 6152.8, 'end': 6155.84, 'text': ' Add the contents of r1 and r2.', 'tokens': [51664, 5349, 264, 15768, 295, 367, 16, 293, 367, 17, 13, 51816], 'temperature': 0.0, 'avg_logprob': -0.25044431184467514, 'compression_ratio': 1.9253112033195021, 'no_speech_prob': 0.19375337660312653}, {'id': 1497, 'seek': 615584, 'start': 6155.84, 'end': 6158.0, 'text': ' Put it in r3.', 'tokens': [50364, 4935, 309, 294, 367, 18, 13, 50472], 'temperature': 0.0, 'avg_logprob': -0.2797091213273413, 'compression_ratio': 1.4578947368421054, 'no_speech_prob': 0.0028826752677559853}, {'id': 1498, 'seek': 615584, 'start': 6158.0, 'end': 6168.28, 'text': ' My i plus 1th instruction is subtract r8 from r3 and put the result in r4.', 'tokens': [50472, 1222, 741, 1804, 502, 392, 10951, 307, 16390, 367, 23, 490, 367, 18, 293, 829, 264, 1874, 294, 367, 19, 13, 50986], 'temperature': 0.0, 'avg_logprob': -0.2797091213273413, 'compression_ratio': 1.4578947368421054, 'no_speech_prob': 0.0028826752677559853}, {'id': 1499, 'seek': 615584, 'start': 6168.28, 'end': 6170.72, 'text': ' Now let us see what happens.', 'tokens': [50986, 823, 718, 505, 536, 437, 2314, 13, 51108], 'temperature': 0.0, 'avg_logprob': -0.2797091213273413, 'compression_ratio': 1.4578947368421054, 'no_speech_prob': 0.0028826752677559853}, {'id': 1500, 'seek': 615584, 'start': 6170.72, 'end': 6172.52, 'text': ' Right?', 'tokens': [51108, 1779, 30, 51198], 'temperature': 0.0, 'avg_logprob': -0.2797091213273413, 'compression_ratio': 1.4578947368421054, 'no_speech_prob': 0.0028826752677559853}, {'id': 1501, 'seek': 615584, 'start': 6172.52, 'end': 6175.3, 'text': ' Interesting?', 'tokens': [51198, 14711, 30, 51337], 'temperature': 0.0, 'avg_logprob': -0.2797091213273413, 'compression_ratio': 1.4578947368421054, 'no_speech_prob': 0.0028826752677559853}, {'id': 1502, 'seek': 615584, 'start': 6175.3, 'end': 6183.16, 'text': ' This instruction produces a value which is going to be consumed by this instruction.', 'tokens': [51337, 639, 10951, 14725, 257, 2158, 597, 307, 516, 281, 312, 21226, 538, 341, 10951, 13, 51730], 'temperature': 0.0, 'avg_logprob': -0.2797091213273413, 'compression_ratio': 1.4578947368421054, 'no_speech_prob': 0.0028826752677559853}, {'id': 1503, 'seek': 615584, 'start': 6183.16, 'end': 6185.32, 'text': ' And these people are executing in a pipelined fashion.', 'tokens': [51730, 400, 613, 561, 366, 32368, 294, 257, 8489, 338, 2001, 6700, 13, 51838], 'temperature': 0.0, 'avg_logprob': -0.2797091213273413, 'compression_ratio': 1.4578947368421054, 'no_speech_prob': 0.0028826752677559853}, {'id': 1504, 'seek': 618532, 'start': 6185.32, 'end': 6189.36, 'text': ' If they are not executing in a pipelined fashion there is no problem because at the end of', 'tokens': [50364, 759, 436, 366, 406, 32368, 294, 257, 8489, 338, 2001, 6700, 456, 307, 572, 1154, 570, 412, 264, 917, 295, 50566], 'temperature': 0.0, 'avg_logprob': -0.2434024984186346, 'compression_ratio': 1.737556561085973, 'no_speech_prob': 0.012358485721051693}, {'id': 1505, 'seek': 618532, 'start': 6189.36, 'end': 6191.48, 'text': ' this I allow this instruction to go.', 'tokens': [50566, 341, 286, 2089, 341, 10951, 281, 352, 13, 50672], 'temperature': 0.0, 'avg_logprob': -0.2434024984186346, 'compression_ratio': 1.737556561085973, 'no_speech_prob': 0.012358485721051693}, {'id': 1506, 'seek': 618532, 'start': 6191.48, 'end': 6194.5599999999995, 'text': ' The value will be available in r3 and I can take that.', 'tokens': [50672, 440, 2158, 486, 312, 2435, 294, 367, 18, 293, 286, 393, 747, 300, 13, 50826], 'temperature': 0.0, 'avg_logprob': -0.2434024984186346, 'compression_ratio': 1.737556561085973, 'no_speech_prob': 0.012358485721051693}, {'id': 1507, 'seek': 618532, 'start': 6194.5599999999995, 'end': 6195.5599999999995, 'text': ' No problem.', 'tokens': [50826, 883, 1154, 13, 50876], 'temperature': 0.0, 'avg_logprob': -0.2434024984186346, 'compression_ratio': 1.737556561085973, 'no_speech_prob': 0.012358485721051693}, {'id': 1508, 'seek': 618532, 'start': 6195.5599999999995, 'end': 6198.5199999999995, 'text': ' Non-pipelined executions there is no issue.', 'tokens': [50876, 8774, 12, 79, 647, 338, 2001, 4454, 3666, 456, 307, 572, 2734, 13, 51024], 'temperature': 0.0, 'avg_logprob': -0.2434024984186346, 'compression_ratio': 1.737556561085973, 'no_speech_prob': 0.012358485721051693}, {'id': 1509, 'seek': 618532, 'start': 6198.5199999999995, 'end': 6199.5199999999995, 'text': ' Right?', 'tokens': [51024, 1779, 30, 51074], 'temperature': 0.0, 'avg_logprob': -0.2434024984186346, 'compression_ratio': 1.737556561085973, 'no_speech_prob': 0.012358485721051693}, {'id': 1510, 'seek': 618532, 'start': 6199.5199999999995, 'end': 6202.28, 'text': ' But in a pipelined execution.', 'tokens': [51074, 583, 294, 257, 8489, 338, 2001, 15058, 13, 51212], 'temperature': 0.0, 'avg_logprob': -0.2434024984186346, 'compression_ratio': 1.737556561085973, 'no_speech_prob': 0.012358485721051693}, {'id': 1511, 'seek': 618532, 'start': 6202.28, 'end': 6203.96, 'text': ' Right?', 'tokens': [51212, 1779, 30, 51296], 'temperature': 0.0, 'avg_logprob': -0.2434024984186346, 'compression_ratio': 1.737556561085973, 'no_speech_prob': 0.012358485721051693}, {'id': 1512, 'seek': 618532, 'start': 6203.96, 'end': 6206.48, 'text': ' This instruction goes through the execute stage.', 'tokens': [51296, 639, 10951, 1709, 807, 264, 14483, 3233, 13, 51422], 'temperature': 0.0, 'avg_logprob': -0.2434024984186346, 'compression_ratio': 1.737556561085973, 'no_speech_prob': 0.012358485721051693}, {'id': 1513, 'seek': 618532, 'start': 6206.48, 'end': 6210.08, 'text': ' Memory stage where it does not probably do anything.', 'tokens': [51422, 38203, 3233, 689, 309, 775, 406, 1391, 360, 1340, 13, 51602], 'temperature': 0.0, 'avg_logprob': -0.2434024984186346, 'compression_ratio': 1.737556561085973, 'no_speech_prob': 0.012358485721051693}, {'id': 1514, 'seek': 621008, 'start': 6211.08, 'end': 6216.88, 'text': ' it is going to write the result value in the r3 register.', 'tokens': [50414, 309, 307, 516, 281, 2464, 264, 1874, 2158, 294, 264, 367, 18, 7280, 13, 50704], 'temperature': 0.0, 'avg_logprob': -0.23596499516413763, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.687208890914917}, {'id': 1515, 'seek': 621008, 'start': 6216.88, 'end': 6217.88, 'text': ' That is what we saw.', 'tokens': [50704, 663, 307, 437, 321, 1866, 13, 50754], 'temperature': 0.0, 'avg_logprob': -0.23596499516413763, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.687208890914917}, {'id': 1516, 'seek': 621008, 'start': 6217.88, 'end': 6218.88, 'text': ' Correct?', 'tokens': [50754, 12753, 30, 50804], 'temperature': 0.0, 'avg_logprob': -0.23596499516413763, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.687208890914917}, {'id': 1517, 'seek': 621008, 'start': 6218.88, 'end': 6221.04, 'text': ' Only in the write back stage.', 'tokens': [50804, 5686, 294, 264, 2464, 646, 3233, 13, 50912], 'temperature': 0.0, 'avg_logprob': -0.23596499516413763, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.687208890914917}, {'id': 1518, 'seek': 621008, 'start': 6221.04, 'end': 6223.84, 'text': ' And let us say that is going to happen in time t equal to 5.', 'tokens': [50912, 400, 718, 505, 584, 300, 307, 516, 281, 1051, 294, 565, 256, 2681, 281, 1025, 13, 51052], 'temperature': 0.0, 'avg_logprob': -0.23596499516413763, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.687208890914917}, {'id': 1519, 'seek': 621008, 'start': 6223.84, 'end': 6228.5599999999995, 'text': ' Whereas this instruction which is the next instruction would have started instruction', 'tokens': [51052, 13813, 341, 10951, 597, 307, 264, 958, 10951, 576, 362, 1409, 10951, 51288], 'temperature': 0.0, 'avg_logprob': -0.23596499516413763, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.687208890914917}, {'id': 1520, 'seek': 621008, 'start': 6228.5599999999995, 'end': 6234.16, 'text': ' fetch in time 2 and would have done decode and operand fetch in time 3.', 'tokens': [51288, 23673, 294, 565, 568, 293, 576, 362, 1096, 979, 1429, 293, 2208, 474, 23673, 294, 565, 805, 13, 51568], 'temperature': 0.0, 'avg_logprob': -0.23596499516413763, 'compression_ratio': 1.7230769230769232, 'no_speech_prob': 0.687208890914917}, {'id': 1521, 'seek': 623416, 'start': 6234.16, 'end': 6239.68, 'text': ' And if it goes and looks in register r3 would that value be available?', 'tokens': [50364, 400, 498, 309, 1709, 293, 1542, 294, 7280, 367, 18, 576, 300, 2158, 312, 2435, 30, 50640], 'temperature': 0.0, 'avg_logprob': -0.22728474286137795, 'compression_ratio': 1.6161137440758293, 'no_speech_prob': 0.10088244080543518}, {'id': 1522, 'seek': 623416, 'start': 6239.68, 'end': 6241.28, 'text': ' Right?', 'tokens': [50640, 1779, 30, 50720], 'temperature': 0.0, 'avg_logprob': -0.22728474286137795, 'compression_ratio': 1.6161137440758293, 'no_speech_prob': 0.10088244080543518}, {'id': 1523, 'seek': 623416, 'start': 6241.28, 'end': 6245.84, 'text': ' Because the value is going to be written in r3 only during this cycle.', 'tokens': [50720, 1436, 264, 2158, 307, 516, 281, 312, 3720, 294, 367, 18, 787, 1830, 341, 6586, 13, 50948], 'temperature': 0.0, 'avg_logprob': -0.22728474286137795, 'compression_ratio': 1.6161137440758293, 'no_speech_prob': 0.10088244080543518}, {'id': 1524, 'seek': 623416, 'start': 6245.84, 'end': 6246.84, 'text': ' Only at cycle 5.', 'tokens': [50948, 5686, 412, 6586, 1025, 13, 50998], 'temperature': 0.0, 'avg_logprob': -0.22728474286137795, 'compression_ratio': 1.6161137440758293, 'no_speech_prob': 0.10088244080543518}, {'id': 1525, 'seek': 623416, 'start': 6246.84, 'end': 6253.5599999999995, 'text': ' If you try to read it in cycle 3 some previous value is what you will get.', 'tokens': [50998, 759, 291, 853, 281, 1401, 309, 294, 6586, 805, 512, 3894, 2158, 307, 437, 291, 486, 483, 13, 51334], 'temperature': 0.0, 'avg_logprob': -0.22728474286137795, 'compression_ratio': 1.6161137440758293, 'no_speech_prob': 0.10088244080543518}, {'id': 1526, 'seek': 623416, 'start': 6253.5599999999995, 'end': 6258.639999999999, 'text': ' This is a true dependency what is called read after write dependency.', 'tokens': [51334, 639, 307, 257, 2074, 33621, 437, 307, 1219, 1401, 934, 2464, 33621, 13, 51588], 'temperature': 0.0, 'avg_logprob': -0.22728474286137795, 'compression_ratio': 1.6161137440758293, 'no_speech_prob': 0.10088244080543518}, {'id': 1527, 'seek': 623416, 'start': 6258.639999999999, 'end': 6259.639999999999, 'text': ' Okay?', 'tokens': [51588, 1033, 30, 51638], 'temperature': 0.0, 'avg_logprob': -0.22728474286137795, 'compression_ratio': 1.6161137440758293, 'no_speech_prob': 0.10088244080543518}, {'id': 1528, 'seek': 623416, 'start': 6259.639999999999, 'end': 6261.04, 'text': ' Read after write.', 'tokens': [51638, 17604, 934, 2464, 13, 51708], 'temperature': 0.0, 'avg_logprob': -0.22728474286137795, 'compression_ratio': 1.6161137440758293, 'no_speech_prob': 0.10088244080543518}, {'id': 1529, 'seek': 623416, 'start': 6261.04, 'end': 6262.04, 'text': ' Right?', 'tokens': [51708, 1779, 30, 51758], 'temperature': 0.0, 'avg_logprob': -0.22728474286137795, 'compression_ratio': 1.6161137440758293, 'no_speech_prob': 0.10088244080543518}, {'id': 1530, 'seek': 626204, 'start': 6262.04, 'end': 6265.68, 'text': ' Read has to happen after this write has happened.', 'tokens': [50364, 17604, 575, 281, 1051, 934, 341, 2464, 575, 2011, 13, 50546], 'temperature': 0.0, 'avg_logprob': -0.20616299397236593, 'compression_ratio': 1.794979079497908, 'no_speech_prob': 0.04534747824072838}, {'id': 1531, 'seek': 626204, 'start': 6265.68, 'end': 6266.68, 'text': ' Okay?', 'tokens': [50546, 1033, 30, 50596], 'temperature': 0.0, 'avg_logprob': -0.20616299397236593, 'compression_ratio': 1.794979079497908, 'no_speech_prob': 0.04534747824072838}, {'id': 1532, 'seek': 626204, 'start': 6266.68, 'end': 6268.2, 'text': ' Read after write.', 'tokens': [50596, 17604, 934, 2464, 13, 50672], 'temperature': 0.0, 'avg_logprob': -0.20616299397236593, 'compression_ratio': 1.794979079497908, 'no_speech_prob': 0.04534747824072838}, {'id': 1533, 'seek': 626204, 'start': 6268.2, 'end': 6273.96, 'text': ' And because of this read after write dependency can we proceed with this instruction?', 'tokens': [50672, 400, 570, 295, 341, 1401, 934, 2464, 33621, 393, 321, 8991, 365, 341, 10951, 30, 50960], 'temperature': 0.0, 'avg_logprob': -0.20616299397236593, 'compression_ratio': 1.794979079497908, 'no_speech_prob': 0.04534747824072838}, {'id': 1534, 'seek': 626204, 'start': 6273.96, 'end': 6274.96, 'text': ' No.', 'tokens': [50960, 883, 13, 51010], 'temperature': 0.0, 'avg_logprob': -0.20616299397236593, 'compression_ratio': 1.794979079497908, 'no_speech_prob': 0.04534747824072838}, {'id': 1535, 'seek': 626204, 'start': 6274.96, 'end': 6277.08, 'text': ' If you proceed with this instruction we will produce garbage.', 'tokens': [51010, 759, 291, 8991, 365, 341, 10951, 321, 486, 5258, 14150, 13, 51116], 'temperature': 0.0, 'avg_logprob': -0.20616299397236593, 'compression_ratio': 1.794979079497908, 'no_speech_prob': 0.04534747824072838}, {'id': 1536, 'seek': 626204, 'start': 6277.08, 'end': 6278.08, 'text': ' Right?', 'tokens': [51116, 1779, 30, 51166], 'temperature': 0.0, 'avg_logprob': -0.20616299397236593, 'compression_ratio': 1.794979079497908, 'no_speech_prob': 0.04534747824072838}, {'id': 1537, 'seek': 626204, 'start': 6278.08, 'end': 6283.48, 'text': ' So, at this stage when you figure out that this is going to read r3 which is actually', 'tokens': [51166, 407, 11, 412, 341, 3233, 562, 291, 2573, 484, 300, 341, 307, 516, 281, 1401, 367, 18, 597, 307, 767, 51436], 'temperature': 0.0, 'avg_logprob': -0.20616299397236593, 'compression_ratio': 1.794979079497908, 'no_speech_prob': 0.04534747824072838}, {'id': 1538, 'seek': 626204, 'start': 6283.48, 'end': 6287.24, 'text': ' the destination register for the previous instruction.', 'tokens': [51436, 264, 12236, 7280, 337, 264, 3894, 10951, 13, 51624], 'temperature': 0.0, 'avg_logprob': -0.20616299397236593, 'compression_ratio': 1.794979079497908, 'no_speech_prob': 0.04534747824072838}, {'id': 1539, 'seek': 626204, 'start': 6287.24, 'end': 6290.84, 'text': ' You have to put a hold stop on this instruction.', 'tokens': [51624, 509, 362, 281, 829, 257, 1797, 1590, 322, 341, 10951, 13, 51804], 'temperature': 0.0, 'avg_logprob': -0.20616299397236593, 'compression_ratio': 1.794979079497908, 'no_speech_prob': 0.04534747824072838}, {'id': 1540, 'seek': 626204, 'start': 6290.84, 'end': 6291.84, 'text': ' Right?', 'tokens': [51804, 1779, 30, 51854], 'temperature': 0.0, 'avg_logprob': -0.20616299397236593, 'compression_ratio': 1.794979079497908, 'no_speech_prob': 0.04534747824072838}, {'id': 1541, 'seek': 629184, 'start': 6291.84, 'end': 6293.56, 'text': ' So, this instruction is going to be stalled.', 'tokens': [50364, 407, 11, 341, 10951, 307, 516, 281, 312, 342, 8907, 13, 50450], 'temperature': 0.0, 'avg_logprob': -0.30863108218294905, 'compression_ratio': 1.75, 'no_speech_prob': 0.012109498493373394}, {'id': 1542, 'seek': 629184, 'start': 6293.56, 'end': 6297.64, 'text': ' It is going to be stalled from the id stage onwards.', 'tokens': [50450, 467, 307, 516, 281, 312, 342, 8907, 490, 264, 4496, 3233, 34230, 13, 50654], 'temperature': 0.0, 'avg_logprob': -0.30863108218294905, 'compression_ratio': 1.75, 'no_speech_prob': 0.012109498493373394}, {'id': 1543, 'seek': 629184, 'start': 6297.64, 'end': 6298.64, 'text': ' Right?', 'tokens': [50654, 1779, 30, 50704], 'temperature': 0.0, 'avg_logprob': -0.30863108218294905, 'compression_ratio': 1.75, 'no_speech_prob': 0.012109498493373394}, {'id': 1544, 'seek': 629184, 'start': 6298.64, 'end': 6304.64, 'text': ' So, again all I said have been written over there.', 'tokens': [50704, 407, 11, 797, 439, 286, 848, 362, 668, 3720, 670, 456, 13, 51004], 'temperature': 0.0, 'avg_logprob': -0.30863108218294905, 'compression_ratio': 1.75, 'no_speech_prob': 0.012109498493373394}, {'id': 1545, 'seek': 629184, 'start': 6304.64, 'end': 6307.68, 'text': ' I did not do the animation but you can see that.', 'tokens': [51004, 286, 630, 406, 360, 264, 9603, 457, 291, 393, 536, 300, 13, 51156], 'temperature': 0.0, 'avg_logprob': -0.30863108218294905, 'compression_ratio': 1.75, 'no_speech_prob': 0.012109498493373394}, {'id': 1546, 'seek': 629184, 'start': 6307.68, 'end': 6313.4400000000005, 'text': ' So, when this instruction is stopped okay at cycle 3 in the id stage.', 'tokens': [51156, 407, 11, 562, 341, 10951, 307, 5936, 1392, 412, 6586, 805, 294, 264, 4496, 3233, 13, 51444], 'temperature': 0.0, 'avg_logprob': -0.30863108218294905, 'compression_ratio': 1.75, 'no_speech_prob': 0.012109498493373394}, {'id': 1547, 'seek': 629184, 'start': 6313.4400000000005, 'end': 6314.4400000000005, 'text': ' Right?', 'tokens': [51444, 1779, 30, 51494], 'temperature': 0.0, 'avg_logprob': -0.30863108218294905, 'compression_ratio': 1.75, 'no_speech_prob': 0.012109498493373394}, {'id': 1548, 'seek': 629184, 'start': 6314.4400000000005, 'end': 6316.0, 'text': ' It is going to create a bubble.', 'tokens': [51494, 467, 307, 516, 281, 1884, 257, 12212, 13, 51572], 'temperature': 0.0, 'avg_logprob': -0.30863108218294905, 'compression_ratio': 1.75, 'no_speech_prob': 0.012109498493373394}, {'id': 1549, 'seek': 629184, 'start': 6316.0, 'end': 6318.4400000000005, 'text': ' Let us look at the animation.', 'tokens': [51572, 961, 505, 574, 412, 264, 9603, 13, 51694], 'temperature': 0.0, 'avg_logprob': -0.30863108218294905, 'compression_ratio': 1.75, 'no_speech_prob': 0.012109498493373394}, {'id': 1550, 'seek': 631844, 'start': 6319.36, 'end': 6324.879999999999, 'text': ' So here what you need to do is that you need to wait until this value is being written', 'tokens': [50410, 407, 510, 437, 291, 643, 281, 360, 307, 300, 291, 643, 281, 1699, 1826, 341, 2158, 307, 885, 3720, 50686], 'temperature': 0.0, 'avg_logprob': -0.1820757055795321, 'compression_ratio': 1.7981220657276995, 'no_speech_prob': 0.2045709192752838}, {'id': 1551, 'seek': 631844, 'start': 6324.879999999999, 'end': 6325.879999999999, 'text': ' in this location.', 'tokens': [50686, 294, 341, 4914, 13, 50736], 'temperature': 0.0, 'avg_logprob': -0.1820757055795321, 'compression_ratio': 1.7981220657276995, 'no_speech_prob': 0.2045709192752838}, {'id': 1552, 'seek': 631844, 'start': 6325.879999999999, 'end': 6332.679999999999, 'text': ' So, I will stall this instruction even in the next cycle and if my hardware is intelligent', 'tokens': [50736, 407, 11, 286, 486, 19633, 341, 10951, 754, 294, 264, 958, 6586, 293, 498, 452, 8837, 307, 13232, 51076], 'temperature': 0.0, 'avg_logprob': -0.1820757055795321, 'compression_ratio': 1.7981220657276995, 'no_speech_prob': 0.2045709192752838}, {'id': 1553, 'seek': 631844, 'start': 6332.679999999999, 'end': 6338.679999999999, 'text': ' enough that this writing value takes place during the first half of this stage and I', 'tokens': [51076, 1547, 300, 341, 3579, 2158, 2516, 1081, 1830, 264, 700, 1922, 295, 341, 3233, 293, 286, 51376], 'temperature': 0.0, 'avg_logprob': -0.1820757055795321, 'compression_ratio': 1.7981220657276995, 'no_speech_prob': 0.2045709192752838}, {'id': 1554, 'seek': 631844, 'start': 6338.679999999999, 'end': 6343.4, 'text': ' can possibly read it in the second half of the stage then this instruction can do the', 'tokens': [51376, 393, 6264, 1401, 309, 294, 264, 1150, 1922, 295, 264, 3233, 550, 341, 10951, 393, 360, 264, 51612], 'temperature': 0.0, 'avg_logprob': -0.1820757055795321, 'compression_ratio': 1.7981220657276995, 'no_speech_prob': 0.2045709192752838}, {'id': 1555, 'seek': 631844, 'start': 6343.4, 'end': 6345.5199999999995, 'text': ' read in cycle 5.', 'tokens': [51612, 1401, 294, 6586, 1025, 13, 51718], 'temperature': 0.0, 'avg_logprob': -0.1820757055795321, 'compression_ratio': 1.7981220657276995, 'no_speech_prob': 0.2045709192752838}, {'id': 1556, 'seek': 634552, 'start': 6346.160000000001, 'end': 6348.56, 'text': ' If that is not the case I can do it in cycle 6.', 'tokens': [50396, 759, 300, 307, 406, 264, 1389, 286, 393, 360, 309, 294, 6586, 1386, 13, 50516], 'temperature': 0.0, 'avg_logprob': -0.28134043673251535, 'compression_ratio': 1.6074766355140186, 'no_speech_prob': 0.012216005474328995}, {'id': 1557, 'seek': 634552, 'start': 6348.56, 'end': 6354.6, 'text': ' So, it is either 2 stall cycles or 3 stall cycles depending on how aggressive my hardware', 'tokens': [50516, 407, 11, 309, 307, 2139, 568, 19633, 17796, 420, 805, 19633, 17796, 5413, 322, 577, 10762, 452, 8837, 50818], 'temperature': 0.0, 'avg_logprob': -0.28134043673251535, 'compression_ratio': 1.6074766355140186, 'no_speech_prob': 0.012216005474328995}, {'id': 1558, 'seek': 634552, 'start': 6354.6, 'end': 6355.6, 'text': ' is.', 'tokens': [50818, 307, 13, 50868], 'temperature': 0.0, 'avg_logprob': -0.28134043673251535, 'compression_ratio': 1.6074766355140186, 'no_speech_prob': 0.012216005474328995}, {'id': 1559, 'seek': 634552, 'start': 6355.6, 'end': 6357.8, 'text': ' But essentially there is a stall.', 'tokens': [50868, 583, 4476, 456, 307, 257, 19633, 13, 50978], 'temperature': 0.0, 'avg_logprob': -0.28134043673251535, 'compression_ratio': 1.6074766355140186, 'no_speech_prob': 0.012216005474328995}, {'id': 1560, 'seek': 634552, 'start': 6357.8, 'end': 6358.8, 'text': ' Right?', 'tokens': [50978, 1779, 30, 51028], 'temperature': 0.0, 'avg_logprob': -0.28134043673251535, 'compression_ratio': 1.6074766355140186, 'no_speech_prob': 0.012216005474328995}, {'id': 1561, 'seek': 634552, 'start': 6358.8, 'end': 6364.400000000001, 'text': ' Because of the dependency there is a stall and that stall causes these bubbles.', 'tokens': [51028, 1436, 295, 264, 33621, 456, 307, 257, 19633, 293, 300, 19633, 7700, 613, 16295, 13, 51308], 'temperature': 0.0, 'avg_logprob': -0.28134043673251535, 'compression_ratio': 1.6074766355140186, 'no_speech_prob': 0.012216005474328995}, {'id': 1562, 'seek': 634552, 'start': 6364.400000000001, 'end': 6365.400000000001, 'text': ' Understand?', 'tokens': [51308, 26093, 30, 51358], 'temperature': 0.0, 'avg_logprob': -0.28134043673251535, 'compression_ratio': 1.6074766355140186, 'no_speech_prob': 0.012216005474328995}, {'id': 1563, 'seek': 634552, 'start': 6365.400000000001, 'end': 6366.400000000001, 'text': ' Okay.', 'tokens': [51358, 1033, 13, 51408], 'temperature': 0.0, 'avg_logprob': -0.28134043673251535, 'compression_ratio': 1.6074766355140186, 'no_speech_prob': 0.012216005474328995}, {'id': 1564, 'seek': 634552, 'start': 6366.400000000001, 'end': 6373.400000000001, 'text': ' That is something that we are going to talk about subsequently.', 'tokens': [51408, 663, 307, 746, 300, 321, 366, 516, 281, 751, 466, 26514, 13, 51758], 'temperature': 0.0, 'avg_logprob': -0.28134043673251535, 'compression_ratio': 1.6074766355140186, 'no_speech_prob': 0.012216005474328995}, {'id': 1565, 'seek': 637340, 'start': 6373.4, 'end': 6376.799999999999, 'text': ' So the time being what we will do is that I have to service these people as and when', 'tokens': [50364, 407, 264, 565, 885, 437, 321, 486, 360, 307, 300, 286, 362, 281, 2643, 613, 561, 382, 293, 562, 50534], 'temperature': 0.0, 'avg_logprob': -0.20783473373553074, 'compression_ratio': 1.6641221374045803, 'no_speech_prob': 0.015574893914163113}, {'id': 1566, 'seek': 637340, 'start': 6376.799999999999, 'end': 6379.96, 'text': ' they come in the order in which they come.', 'tokens': [50534, 436, 808, 294, 264, 1668, 294, 597, 436, 808, 13, 50692], 'temperature': 0.0, 'avg_logprob': -0.20783473373553074, 'compression_ratio': 1.6641221374045803, 'no_speech_prob': 0.015574893914163113}, {'id': 1567, 'seek': 637340, 'start': 6379.96, 'end': 6385.36, 'text': ' Then if this instruction stalls all previous instructions also sorry all subsequent instructions', 'tokens': [50692, 1396, 498, 341, 10951, 50248, 439, 3894, 9415, 611, 2597, 439, 19962, 9415, 50962], 'temperature': 0.0, 'avg_logprob': -0.20783473373553074, 'compression_ratio': 1.6641221374045803, 'no_speech_prob': 0.015574893914163113}, {'id': 1568, 'seek': 637340, 'start': 6385.36, 'end': 6390.24, 'text': ' also stop because somebody is in front of the queue he is not moving.', 'tokens': [50962, 611, 1590, 570, 2618, 307, 294, 1868, 295, 264, 18639, 415, 307, 406, 2684, 13, 51206], 'temperature': 0.0, 'avg_logprob': -0.20783473373553074, 'compression_ratio': 1.6641221374045803, 'no_speech_prob': 0.015574893914163113}, {'id': 1569, 'seek': 637340, 'start': 6390.24, 'end': 6393.599999999999, 'text': ' You cannot knock him out and then move forward.', 'tokens': [51206, 509, 2644, 6728, 796, 484, 293, 550, 1286, 2128, 13, 51374], 'temperature': 0.0, 'avg_logprob': -0.20783473373553074, 'compression_ratio': 1.6641221374045803, 'no_speech_prob': 0.015574893914163113}, {'id': 1570, 'seek': 637340, 'start': 6393.599999999999, 'end': 6394.599999999999, 'text': ' Correct?', 'tokens': [51374, 12753, 30, 51424], 'temperature': 0.0, 'avg_logprob': -0.20783473373553074, 'compression_ratio': 1.6641221374045803, 'no_speech_prob': 0.015574893914163113}, {'id': 1571, 'seek': 637340, 'start': 6394.599999999999, 'end': 6396.36, 'text': ' So, everybody kind of stops.', 'tokens': [51424, 407, 11, 2201, 733, 295, 10094, 13, 51512], 'temperature': 0.0, 'avg_logprob': -0.20783473373553074, 'compression_ratio': 1.6641221374045803, 'no_speech_prob': 0.015574893914163113}, {'id': 1572, 'seek': 637340, 'start': 6396.36, 'end': 6400.96, 'text': ' That is the assumption that we are going to make.', 'tokens': [51512, 663, 307, 264, 15302, 300, 321, 366, 516, 281, 652, 13, 51742], 'temperature': 0.0, 'avg_logprob': -0.20783473373553074, 'compression_ratio': 1.6641221374045803, 'no_speech_prob': 0.015574893914163113}, {'id': 1573, 'seek': 637340, 'start': 6400.96, 'end': 6401.96, 'text': ' Okay?', 'tokens': [51742, 1033, 30, 51792], 'temperature': 0.0, 'avg_logprob': -0.20783473373553074, 'compression_ratio': 1.6641221374045803, 'no_speech_prob': 0.015574893914163113}, {'id': 1574, 'seek': 640196, 'start': 6401.96, 'end': 6407.96, 'text': ' So, if you see here so if there is a subtract instruction that gets stalled by 2 cycles', 'tokens': [50364, 407, 11, 498, 291, 536, 510, 370, 498, 456, 307, 257, 16390, 10951, 300, 2170, 342, 8907, 538, 568, 17796, 50664], 'temperature': 0.0, 'avg_logprob': -0.2135062961403383, 'compression_ratio': 1.9102564102564104, 'no_speech_prob': 0.016578733921051025}, {'id': 1575, 'seek': 640196, 'start': 6407.96, 'end': 6410.2, 'text': ' that subtract instruction is dependent on that.', 'tokens': [50664, 300, 16390, 10951, 307, 12334, 322, 300, 13, 50776], 'temperature': 0.0, 'avg_logprob': -0.2135062961403383, 'compression_ratio': 1.9102564102564104, 'no_speech_prob': 0.016578733921051025}, {'id': 1576, 'seek': 640196, 'start': 6410.2, 'end': 6415.0, 'text': ' If there are subsequent instruction they also get stalled whether they are dependent on', 'tokens': [50776, 759, 456, 366, 19962, 10951, 436, 611, 483, 342, 8907, 1968, 436, 366, 12334, 322, 51016], 'temperature': 0.0, 'avg_logprob': -0.2135062961403383, 'compression_ratio': 1.9102564102564104, 'no_speech_prob': 0.016578733921051025}, {'id': 1577, 'seek': 640196, 'start': 6415.0, 'end': 6418.92, 'text': ' this or not they get stalled because this previous instruction has stalled.', 'tokens': [51016, 341, 420, 406, 436, 483, 342, 8907, 570, 341, 3894, 10951, 575, 342, 8907, 13, 51212], 'temperature': 0.0, 'avg_logprob': -0.2135062961403383, 'compression_ratio': 1.9102564102564104, 'no_speech_prob': 0.016578733921051025}, {'id': 1578, 'seek': 640196, 'start': 6418.92, 'end': 6419.92, 'text': ' Right?', 'tokens': [51212, 1779, 30, 51262], 'temperature': 0.0, 'avg_logprob': -0.2135062961403383, 'compression_ratio': 1.9102564102564104, 'no_speech_prob': 0.016578733921051025}, {'id': 1579, 'seek': 640196, 'start': 6419.92, 'end': 6424.68, 'text': ' So, in all of these situations what happens is that whenever you have these bubbles or', 'tokens': [51262, 407, 11, 294, 439, 295, 613, 6851, 437, 2314, 307, 300, 5699, 291, 362, 613, 16295, 420, 51500], 'temperature': 0.0, 'avg_logprob': -0.2135062961403383, 'compression_ratio': 1.9102564102564104, 'no_speech_prob': 0.016578733921051025}, {'id': 1580, 'seek': 640196, 'start': 6424.68, 'end': 6425.68, 'text': ' stalls.', 'tokens': [51500, 50248, 13, 51550], 'temperature': 0.0, 'avg_logprob': -0.2135062961403383, 'compression_ratio': 1.9102564102564104, 'no_speech_prob': 0.016578733921051025}, {'id': 1581, 'seek': 640196, 'start': 6425.68, 'end': 6426.68, 'text': ' Right?', 'tokens': [51550, 1779, 30, 51600], 'temperature': 0.0, 'avg_logprob': -0.2135062961403383, 'compression_ratio': 1.9102564102564104, 'no_speech_prob': 0.016578733921051025}, {'id': 1582, 'seek': 640196, 'start': 6426.68, 'end': 6429.0, 'text': ' They cause your throughput to go down.', 'tokens': [51600, 814, 3082, 428, 44629, 281, 352, 760, 13, 51716], 'temperature': 0.0, 'avg_logprob': -0.2135062961403383, 'compression_ratio': 1.9102564102564104, 'no_speech_prob': 0.016578733921051025}, {'id': 1583, 'seek': 642900, 'start': 6429.0, 'end': 6432.64, 'text': ' From the ideal one instruction per cycle you will go down.', 'tokens': [50364, 3358, 264, 7157, 472, 10951, 680, 6586, 291, 486, 352, 760, 13, 50546], 'temperature': 0.0, 'avg_logprob': -0.2906945254824577, 'compression_ratio': 1.7671232876712328, 'no_speech_prob': 0.4152810871601105}, {'id': 1584, 'seek': 642900, 'start': 6432.64, 'end': 6437.64, 'text': ' That is the way by which you can calculate if every 5th instruction has one stall cycle.', 'tokens': [50546, 663, 307, 264, 636, 538, 597, 291, 393, 8873, 498, 633, 1025, 392, 10951, 575, 472, 19633, 6586, 13, 50796], 'temperature': 0.0, 'avg_logprob': -0.2906945254824577, 'compression_ratio': 1.7671232876712328, 'no_speech_prob': 0.4152810871601105}, {'id': 1585, 'seek': 642900, 'start': 6437.64, 'end': 6438.64, 'text': ' Right?', 'tokens': [50796, 1779, 30, 50846], 'temperature': 0.0, 'avg_logprob': -0.2906945254824577, 'compression_ratio': 1.7671232876712328, 'no_speech_prob': 0.4152810871601105}, {'id': 1586, 'seek': 642900, 'start': 6438.64, 'end': 6445.36, 'text': ' Instead of getting a throughput of one instruction every cycle you will only have 4 instructions', 'tokens': [50846, 7156, 295, 1242, 257, 44629, 295, 472, 10951, 633, 6586, 291, 486, 787, 362, 1017, 9415, 51182], 'temperature': 0.0, 'avg_logprob': -0.2906945254824577, 'compression_ratio': 1.7671232876712328, 'no_speech_prob': 0.4152810871601105}, {'id': 1587, 'seek': 642900, 'start': 6445.36, 'end': 6446.96, 'text': ' in 5 cycles.', 'tokens': [51182, 294, 1025, 17796, 13, 51262], 'temperature': 0.0, 'avg_logprob': -0.2906945254824577, 'compression_ratio': 1.7671232876712328, 'no_speech_prob': 0.4152810871601105}, {'id': 1588, 'seek': 642900, 'start': 6446.96, 'end': 6447.96, 'text': ' That is 0.8.', 'tokens': [51262, 663, 307, 1958, 13, 23, 13, 51312], 'temperature': 0.0, 'avg_logprob': -0.2906945254824577, 'compression_ratio': 1.7671232876712328, 'no_speech_prob': 0.4152810871601105}, {'id': 1589, 'seek': 642900, 'start': 6447.96, 'end': 6448.96, 'text': ' Right?', 'tokens': [51312, 1779, 30, 51362], 'temperature': 0.0, 'avg_logprob': -0.2906945254824577, 'compression_ratio': 1.7671232876712328, 'no_speech_prob': 0.4152810871601105}, {'id': 1590, 'seek': 642900, 'start': 6448.96, 'end': 6453.04, 'text': ' Your IPC comes down instructions per cycle comes down.', 'tokens': [51362, 2260, 8671, 34, 1487, 760, 9415, 680, 6586, 1487, 760, 13, 51566], 'temperature': 0.0, 'avg_logprob': -0.2906945254824577, 'compression_ratio': 1.7671232876712328, 'no_speech_prob': 0.4152810871601105}, {'id': 1591, 'seek': 642900, 'start': 6453.04, 'end': 6454.04, 'text': ' Okay?', 'tokens': [51566, 1033, 30, 51616], 'temperature': 0.0, 'avg_logprob': -0.2906945254824577, 'compression_ratio': 1.7671232876712328, 'no_speech_prob': 0.4152810871601105}, {'id': 1592, 'seek': 642900, 'start': 6454.04, 'end': 6456.28, 'text': ' Let us look at what is control has.', 'tokens': [51616, 961, 505, 574, 412, 437, 307, 1969, 575, 13, 51728], 'temperature': 0.0, 'avg_logprob': -0.2906945254824577, 'compression_ratio': 1.7671232876712328, 'no_speech_prob': 0.4152810871601105}, {'id': 1593, 'seek': 642900, 'start': 6456.28, 'end': 6457.28, 'text': ' Okay?', 'tokens': [51728, 1033, 30, 51778], 'temperature': 0.0, 'avg_logprob': -0.2906945254824577, 'compression_ratio': 1.7671232876712328, 'no_speech_prob': 0.4152810871601105}, {'id': 1594, 'seek': 645728, 'start': 6457.28, 'end': 6461.44, 'text': ' So, maybe this is so maybe it is a good time to take a break because there are more things', 'tokens': [50364, 407, 11, 1310, 341, 307, 370, 1310, 309, 307, 257, 665, 565, 281, 747, 257, 1821, 570, 456, 366, 544, 721, 50572], 'temperature': 0.0, 'avg_logprob': -0.3052044823056176, 'compression_ratio': 1.3663366336633664, 'no_speech_prob': 0.9598493576049805}, {'id': 1595, 'seek': 645728, 'start': 6461.44, 'end': 6462.719999999999, 'text': ' that we need to see here.', 'tokens': [50572, 300, 321, 643, 281, 536, 510, 13, 50636], 'temperature': 0.0, 'avg_logprob': -0.3052044823056176, 'compression_ratio': 1.3663366336633664, 'no_speech_prob': 0.9598493576049805}, {'id': 1596, 'seek': 645728, 'start': 6462.719999999999, 'end': 6465.24, 'text': ' So, let us stop here.', 'tokens': [50636, 407, 11, 718, 505, 1590, 510, 13, 50762], 'temperature': 0.0, 'avg_logprob': -0.3052044823056176, 'compression_ratio': 1.3663366336633664, 'no_speech_prob': 0.9598493576049805}]
